(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RandomLayout": () => /* reexport safe */ _layouts_random__WEBPACK_IMPORTED_MODULE_0__.RandomLayout,
/* harmony export */   "D3ForceLayout": () => /* reexport safe */ _layouts_d3_force__WEBPACK_IMPORTED_MODULE_1__.D3ForceLayout,
/* harmony export */   "RadialTree": () => /* reexport safe */ _layouts_radial_tree__WEBPACK_IMPORTED_MODULE_2__.RadialTree,
/* harmony export */   "FM3Layout": () => /* reexport safe */ _layouts_fm3__WEBPACK_IMPORTED_MODULE_3__.FM3Layout
/* harmony export */ });
/* harmony import */ var _layouts_random__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layouts/random */ "./layouts/random.js");
/* harmony import */ var _layouts_d3_force__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layouts/d3-force */ "./layouts/d3-force.js");
/* harmony import */ var _layouts_radial_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./layouts/radial-tree */ "./layouts/radial-tree.js");
/* harmony import */ var _layouts_fm3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./layouts/fm3 */ "./layouts/fm3.js");
/**
 * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>
 * @description collect all layout releated objects and export
 */









/***/ }),

/***/ "./layouts/d3-force.js":
/*!*****************************!*\
  !*** ./layouts/d3-force.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D3ForceLayout": () => /* binding */ D3ForceLayout
/* harmony export */ });
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout */ "./layouts/layout.js");
/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/simulation.js");
/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/link.js");
/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/manyBody.js");
/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/center.js");
/**
 * @author Xiaodong Zhao
 * @description d3 force wrapper class
 */




class D3ForceLayout extends _layout__WEBPACK_IMPORTED_MODULE_0__.Layout {
    constructor(netv) {
        super(netv)

        const width = this.netv.$_configs.width
        const height = this.netv.$_configs.height
        // this.data = this.netv.data() // TODO: maybe need a deep copy
        this.data = {
            nodes: this.netv.nodes().map((node) => ({ id: node.id(), x: node.x(), y: node.y() })),
            links: this.netv
                .links()
                .map((link) => ({ source: link.source().id(), target: link.target().id() }))
        }
        this.simulation = d3_force__WEBPACK_IMPORTED_MODULE_1__.default(this.data.nodes)
            .force(
                'link',
                // @ts-ignore
                d3_force__WEBPACK_IMPORTED_MODULE_2__.default(this.data.links).id((d) => d.id)
            )
            .force('charge', d3_force__WEBPACK_IMPORTED_MODULE_3__.default())
            .force('center', d3_force__WEBPACK_IMPORTED_MODULE_4__.default(width / 2, height / 2))
            .stop() // disable autostart
    }

    start() {
        this.simulation.on('tick', () => {
            this.data.nodes.forEach((n) => {
                const node = this.netv.getNodeById(n.id)
                node.x(n.x)
                node.y(n.y)
            })

            this.tickCallback && this.tickCallback()
        })
        this.startCallback && this.startCallback()
        this.simulation.restart()
    }

    stop() {
        this.simulation.stop()
        this.stopCallback && this.stopCallback()
    }
}




/***/ }),

/***/ "./layouts/fm3.js":
/*!************************!*\
  !*** ./layouts/fm3.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FM3Layout": () => /* binding */ FM3Layout
/* harmony export */ });
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout */ "./layouts/layout.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./utils.js");
/* harmony import */ var ogdf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ogdf-js */ "../ogdf.js/ogdf.js");
/* harmony import */ var ogdf_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ogdf_js__WEBPACK_IMPORTED_MODULE_2__);
/**
 * @author Xiaodong Zhao
 * @description FM3 layout using ogdf.js(https://github.com/Basasuya/ogdf.js)
 */





class FM3Layout extends _layout__WEBPACK_IMPORTED_MODULE_0__.Layout {
    // private _time: number
    // private sourcePositions: Positions
    // private currentPositions: Positions
    // private targetPositions: Positions

    constructor(netv) {
        super(netv)
        this._time = 1000 // TODO: all parameters, refactor
    }

    /**
     * set total animation time
     * @param _time 
     */
    time(_time) {
        this._time = _time
    }

    start() {
        const graph = netv.data()
        this.sourcePositions = graph.nodes.map((n) => ({ x: n.x, y: n.y }))

        ogdf_js__WEBPACK_IMPORTED_MODULE_2__()
            .then(function (Module) {
                const dic = {}
                for (let i = 0; i < graph.nodes.length; ++i) {
                    if (graph.nodes[i]['id'] in dic) {
                        console.log('there is a bug');
                    } else dic[graph.nodes[i]['id']] = i;
                }
                let nodes = graph.nodes.length
                let links = graph.links.length
                let source = Module._malloc(4 * links);
                let target = Module._malloc(4 * links);
                for (let i = 0; i < links; ++i) {
                    Module.HEAP32[source / 4 + i] = dic[graph.links[i].source]; Module.HEAP32[target / 4 + i] = dic[graph.links[i].target];
                }
                console.log(nodes, links)
                // console.time("sort");
                let result = Module._FM3(nodes, links, source, target);
                // console.timeEnd("sort");
                // console.log('complete layout')
                for (let i = 0; i < nodes; ++i) {
                    graph.nodes[i]['x'] = Module.HEAPF32[(result >> 2) + i * 2]
                    graph.nodes[i]['y'] = Module.HEAPF32[(result >> 2) + i * 2 + 1];
                }
                // for (let i = 0; i < links; ++i) {
                // graph.links[i]['source'] = graph.nodes[dic[graph.links[i]['source']]];
                // graph.links[i]['target'] = graph.nodes[dic[graph.links[i]['target']]];
                // }
                return graph
            })
            .then((graph) => {
                this.targetPositions = graph.nodes.map((n) => ({ x: n.x, y: n.y }))
                // console.log(graph)


                let start = undefined

                const step = (timestamp) => {
                    if (start === undefined) {
                        start = timestamp
                        this.startCallback && this.startCallback()
                    }
                    const elapsed = timestamp - start

                    this.currentPositions = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.lerpPosition)(
                        this.sourcePositions,
                        this.targetPositions,
                        elapsed / this._time
                    )

                    const nodes = this.netv.nodes()
                    nodes.forEach((n, i) => {
                        n.x(this.currentPositions[i].x)
                        n.y(this.currentPositions[i].y)
                    })

                    this.tickCallback && this.tickCallback()

                    if (elapsed < this._time) {
                        requestAnimationFrame(step)
                    } else {
                        this.stopCallback && this.stopCallback()
                    }
                }

                requestAnimationFrame(step)

                // netv.data(graph)
                // netv.draw()
            })
    }
    stop() { }
    finish() {
        this.computePosition()
        this.currentPositions = this.targetPositions
        this.applyPosition()
    }

    /**
     * for random layout, can directly compute target position
     */
    computePosition() {
        if (this.targetPositions) {
            return
        }
        const nodes = this.netv.nodes()
        this.sourcePositions = nodes.map((n) => ({ x: n.x(), y: n.y() }))
        // random target position
        const width = this.netv.$_configs.width
        const height = this.netv.$_configs.height
        this.targetPositions = Array(this.sourcePositions.length)
            .fill(undefined)
            .map(() => {
                return {
                    x: Math.random() * width,
                    y: Math.random() * height
                }
            })
    }

    /**
     * apply new position to canvas
     */
    applyPosition() {
        const nodes = this.netv.nodes()
        nodes.forEach((n, i) => {
            n.x(this.currentPositions[i].x)
            n.y(this.currentPositions[i].y)
        })
        // this.netv.draw()
    }
}




/***/ }),

/***/ "./layouts/layout.js":
/*!***************************!*\
  !*** ./layouts/layout.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Layout": () => /* binding */ Layout
/* harmony export */ });
/**
 * @author Xiaodong Zhao
 * @description Base class of layout
 */

class Layout {
    constructor(netv) {
        this.netv = netv
        this.startCallback = () => { }
        this.tickCallback = () => { }
        this.stopCallback = () => { }
    }

    start() { }

    stop() { }

    /**
     * call finish to direct get layout result, without transition animation
     */
    finish() { }

    onStart(cb) {
        this.startCallback = cb
    }
    onTick(cb) {
        this.tickCallback = cb
    }
    onStop(cb) {
        this.stopCallback = cb
    }
}




/***/ }),

/***/ "./layouts/radial-tree.js":
/*!********************************!*\
  !*** ./layouts/radial-tree.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RadialTree": () => /* binding */ RadialTree
/* harmony export */ });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./layout */ "./layouts/layout.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ "./utils.js");




function radialLayout(graph, rootId, configs) {
    const { directed = false, centerX, centerY, radius } = configs
    const trees = graphBFS(graph, rootId, directed)
    const tree = trees[0]
    graph.links = []
    applyRadialTreeGraph(graph, tree, centerX, centerY, radius)
    return graph
}

function radialLayoutMultiple(graph, rootId, configs) {
    const { directed = false, width, height } = configs

    const trees = graphBFS(graph, rootId, directed)
    const treesDegree = trees.map(tree => tree.degree)
    const bubblePositions = computeBubbleLayoutPosition(treesDegree, width, height)

    graph.links = []

    for (let i = 0; i < trees.length; i++) {
        applyRadialTreeGraph(graph, trees[i], bubblePositions[i].x, bubblePositions[i].y, bubblePositions[i].r)
    }
    return graph
}

function applyRadialTreeGraph(graph, tree, centerX, centerY, radius) {
    const links = getTreeLinks(tree)
    graph.links.push(...links)

    const hierachy = d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy(tree)
        .sort((a, b) => d3__WEBPACK_IMPORTED_MODULE_0__.ascending(a.data.id, b.data.id))

    const d3tree = d3__WEBPACK_IMPORTED_MODULE_0__.tree()
        .size([2 * Math.PI, radius])
        .separation((a, b) => (a.parent == b.parent ? 1 : 2) / a.depth)
    d3tree(hierachy)
    // console.log(hierachy)

    const nodeMap = {}
    for (const node of graph.nodes) {
        nodeMap[node.id] = node
    }

    // bfs hierachy
    const queue = [hierachy]

    while (queue.length > 0) {
        const curr = queue.shift()
        const degree = curr.x
        const radius = curr.y
        const x = centerX + radius * Math.cos(degree)
        const y = centerY + radius * Math.sin(degree)
        nodeMap[curr.data.id].x = x
        nodeMap[curr.data.id].y = y

        if (!curr.children) continue

        for (const child of curr.children) {
            queue.push(child)
        }
    }

    return graph
}

function pack(data, width, height, padding, valueFunc) {
    return d3__WEBPACK_IMPORTED_MODULE_0__.pack()
        .size([width - padding, height - padding])
        .padding(padding)
        (d3__WEBPACK_IMPORTED_MODULE_0__.hierarchy({ children: data })
            .sum(valueFunc))
}

function computeBubbleLayoutPosition(data, width, height) {
    const bubbles = pack(data, width, height, 20, (d) => ((d * 10 + 2) ** 2))
    return bubbles.children.map(x => ({ x: x.x, y: x.y, r: x.r }))
}

function getTreeLinks(tree) {
    const links = []
    const queue = [tree]

    while (queue.length > 0) {
        const curr = queue.shift()
        for (const child of curr.children) {
            links.push({ source: curr.id, target: child.id })
            queue.push(child)
        }
    }

    return links
}

function rootBaseBFS(adjNodes, rootId, visitedSet) {
    visitedSet.add(rootId)

    const queue = []
    const tree = { id: rootId, depth: 0, parent: null, children: [] }
    queue.push(tree)

    let degree = 0
    while (queue.length > 0) {
        const x = queue.shift()
        degree = Math.max(degree, x.depth)
        if (!adjNodes[x.id]) continue
        for (const yId of adjNodes[x.id]) {
            if (visitedSet.has(yId)) continue
            const y = { id: yId, depth: x.depth + 1, parent: x, children: [] }
            x.children.push(y)
            queue.push(y)
            visitedSet.add(yId)
        }
    }

    tree.degree = degree // NOTE: only root node of tree has degree attribute

    return tree
}

function graphBFS(graph, rootId, directed = false) {
    // construct adjacient relation
    const adjNodes = {}
    for (const { source, target } of graph.links) {
        if (!(source in adjNodes)) {
            adjNodes[source] = new Set()
        }
        adjNodes[source].add(target)

        // consider undirected graph
        if (!directed) {
            if (!(target in adjNodes)) {
                adjNodes[target] = new Set()
            }
            adjNodes[target].add(source)

        }
    }

    const trees = []
    const visitedSet = new Set()
    trees.push(rootBaseBFS(adjNodes, rootId, visitedSet))

    for (const node of graph.nodes) {
        if (!visitedSet.has(node.id)) {
            trees.push(rootBaseBFS(adjNodes, node.id, visitedSet))
        }
    }

    return trees
}

// NOTE: not used, compute depth during BFS
function computeTreeDepth(tree) {
    let depth = 0
    let p = tree
    let q = [p]
    while (q.length > 0) {
        let qq = []
        for (const x of q) {
            if (x.children) {
                for (const y of x.children) {
                    qq.push(y)
                }
            }
        }
        if (qq.length > 0) depth += 1
        q = qq
    }

    return depth
}

class RadialTree extends _layout__WEBPACK_IMPORTED_MODULE_1__.Layout {
    constructor(netv, parameters) {
        super(netv)
        this.parameters = parameters
        this._time = 1000 // TODO: all parameters, refactor
    }

    start() {
        const graph = this.netv.data()

        const {
            rootID,
            directed = false,
        } = this.parameters

        this.sourcePositions = graph.nodes.map((n) => ({ x: n.x, y: n.y }))

        const newGraph = radialLayoutMultiple(graph, this.parameters.rootID, {
            directed,
            width: this.netv.$_configs.width,
            height: this.netv.$_configs.height
        })

        this.targetPositions = newGraph.nodes.map((n) => ({ x: n.x, y: n.y }))

        // netv.draw()

        let start = undefined

        /**
         * animation step
         * @param timestamp 
         */
        const step = (timestamp) => {
            if (start === undefined) {
                start = timestamp
                this.startCallback && this.startCallback()
            }
            const elapsed = timestamp - start

            this.currentPositions = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.lerpPosition)(
                this.sourcePositions,
                this.targetPositions,
                elapsed / this._time
            )

            const nodes = this.netv.nodes()
            nodes.forEach((n, i) => {
                n.x(this.currentPositions[i].x)
                n.y(this.currentPositions[i].y)
            })

            this.tickCallback && this.tickCallback()

            if (elapsed < this._time) {
                requestAnimationFrame(step)
            } else {
                this.stopCallback && this.stopCallback()
            }
        }

        requestAnimationFrame(step)
    }
}


/***/ }),

/***/ "./layouts/random.js":
/*!***************************!*\
  !*** ./layouts/random.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RandomLayout": () => /* binding */ RandomLayout
/* harmony export */ });
/* harmony import */ var _layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layout */ "./layouts/layout.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ "./utils.js");
/**
 * @author Xiaodong Zhao
 * @description random layout class
 */




class RandomLayout extends _layout__WEBPACK_IMPORTED_MODULE_0__.Layout {
    // private _time: number
    // private sourcePositions: Positions
    // private currentPositions: Positions
    // private targetPositions: Positions

    constructor(netv) {
        super(netv)
    }

    /**
     * set total animation time
     * @param _time 
     */
    time(_time) {
        this._time = _time
    }

    start() {
        this.computePosition()

        let start = undefined

        /**
         * animation step
         * @param timestamp 
         */
        const step = (timestamp) => {
            if (start === undefined) {
                start = timestamp
                this.startCallback && this.startCallback()
            }
            const elapsed = timestamp - start

            this.currentPositions = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.lerpPosition)(
                this.sourcePositions,
                this.targetPositions,
                elapsed / this._time
            )

            this.applyPosition()

            this.tickCallback && this.tickCallback()

            if (elapsed < this._time) {
                requestAnimationFrame(step)
            } else {
                this.stopCallback && this.stopCallback()
            }
        }

        requestAnimationFrame(step)
    }
    stop() { }
    finish() {
        this.computePosition()
        this.currentPositions = this.targetPositions
        this.applyPosition()
    }

    /**
     * for random layout, can directly compute target position
     */
    computePosition() {
        if (this.targetPositions) {
            return
        }
        const nodes = this.netv.nodes()
        this.sourcePositions = nodes.map((n) => ({ x: n.x(), y: n.y() }))
        // random target position
        const width = this.netv.$_configs.width
        const height = this.netv.$_configs.height
        this.targetPositions = Array(this.sourcePositions.length)
            .fill(undefined)
            .map(() => {
                return {
                    x: Math.random() * width,
                    y: Math.random() * height
                }
            })
    }

    /**
     * apply new position to canvas
     */
    applyPosition() {
        const nodes = this.netv.nodes()
        nodes.forEach((n, i) => {
            n.x(this.currentPositions[i].x)
            n.y(this.currentPositions[i].y)
        })
        // this.netv.draw()
    }
}




/***/ }),

/***/ "./node_modules/d3-array/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/array.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "slice": () => /* binding */ slice,
/* harmony export */   "map": () => /* binding */ map
/* harmony export */ });
var array = Array.prototype;

var slice = array.slice;
var map = array.map;


/***/ }),

/***/ "./node_modules/d3-array/src/ascending.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/ascending.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}


/***/ }),

/***/ "./node_modules/d3-array/src/bin.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/bin.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bisect.js */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extent.js */ "./node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-array/src/identity.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nice.js */ "./node_modules/d3-array/src/nice.js");
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./threshold/sturges.js */ "./node_modules/d3-array/src/threshold/sturges.js");









/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var value = _identity_js__WEBPACK_IMPORTED_MODULE_0__.default,
      domain = _extent_js__WEBPACK_IMPORTED_MODULE_1__.default,
      threshold = _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_2__.default;

  function histogram(data) {
    if (!Array.isArray(data)) data = Array.from(data);

    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds, and nice the
    // default domain accordingly.
    if (!Array.isArray(tz)) {
      const max = x1, tn = +tz;
      if (domain === _extent_js__WEBPACK_IMPORTED_MODULE_1__.default) [x0, x1] = (0,_nice_js__WEBPACK_IMPORTED_MODULE_3__.default)(x0, x1, tn);
      tz = (0,_ticks_js__WEBPACK_IMPORTED_MODULE_4__.default)(x0, x1, tn);

      // If the last threshold is coincident with the domain’s upper bound, the
      // last bin will be zero-width. If the default domain is used, and this
      // last threshold is coincident with the maximum input value, we can
      // extend the niced upper bound by one tick to ensure uniform bin widths;
      // otherwise, we simply remove the last threshold. Note that we don’t
      // coerce values or the domain to numbers, and thus must be careful to
      // compare order (>=) rather than strict equality (===)!
      if (tz[tz.length - 1] >= x1) {
        if (max >= x1 && domain === _extent_js__WEBPACK_IMPORTED_MODULE_1__.default) {
          const step = (0,_ticks_js__WEBPACK_IMPORTED_MODULE_4__.tickIncrement)(x0, x1, tn);
          if (isFinite(step)) {
            if (step > 0) {
              x1 = (Math.floor(x1 / step) + 1) * step;
            } else if (step < 0) {
              x1 = (Math.ceil(x1 * -step) + 1) / -step;
            }
          }
        } else {
          tz.pop();
        }
      }
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    for (i = 0; i < n; ++i) {
      x = values[i];
      if (x0 <= x && x <= x1) {
        bins[(0,_bisect_js__WEBPACK_IMPORTED_MODULE_5__.default)(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)(_array_js__WEBPACK_IMPORTED_MODULE_7__.slice.call(_)) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)(_), histogram) : threshold;
  };

  return histogram;
}


/***/ }),

/***/ "./node_modules/d3-array/src/bisect.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/bisect.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bisectRight": () => /* binding */ bisectRight,
/* harmony export */   "bisectLeft": () => /* binding */ bisectLeft,
/* harmony export */   "bisectCenter": () => /* binding */ bisectCenter,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisector.js */ "./node_modules/d3-array/src/bisector.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-array/src/number.js");




const ascendingBisect = (0,_bisector_js__WEBPACK_IMPORTED_MODULE_0__.default)(_ascending_js__WEBPACK_IMPORTED_MODULE_1__.default);
const bisectRight = ascendingBisect.right;
const bisectLeft = ascendingBisect.left;
const bisectCenter = (0,_bisector_js__WEBPACK_IMPORTED_MODULE_0__.default)(_number_js__WEBPACK_IMPORTED_MODULE_2__.default).center;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bisectRight);


/***/ }),

/***/ "./node_modules/d3-array/src/bisector.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/bisector.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(f) {
  let delta = f;
  let compare = f;

  if (f.length === 1) {
    delta = (d, x) => f(d) - x;
    compare = ascendingComparator(f);
  }

  function left(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) < 0) lo = mid + 1;
      else hi = mid;
    }
    return lo;
  }

  function right(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) > 0) hi = mid;
      else lo = mid + 1;
    }
    return lo;
  }

  function center(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
}

function ascendingComparator(f) {
  return (d, x) => (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__.default)(f(d), x);
}


/***/ }),

/***/ "./node_modules/d3-array/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/constant.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-array/src/count.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/count.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ count
/* harmony export */ });
function count(values, valueof) {
  let count = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count;
      }
    }
  }
  return count;
}


/***/ }),

/***/ "./node_modules/d3-array/src/cross.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/cross.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ cross
/* harmony export */ });
function length(array) {
  return array.length | 0;
}

function empty(length) {
  return !(length > 0);
}

function arrayify(values) {
  return typeof values !== "object" || "length" in values ? values : Array.from(values);
}

function reducer(reduce) {
  return values => reduce(...values);
}

function cross(...values) {
  const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
  values = values.map(arrayify);
  const lengths = values.map(length);
  const j = values.length - 1;
  const index = new Array(j + 1).fill(0);
  const product = [];
  if (j < 0 || lengths.some(empty)) return product;
  while (true) {
    product.push(index.map((j, i) => values[i][j]));
    let i = j;
    while (++index[i] === lengths[i]) {
      if (i === 0) return reduce ? product.map(reduce) : product;
      index[i--] = 0;
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-array/src/cumsum.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/cumsum.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ cumsum
/* harmony export */ });
function cumsum(values, valueof) {
  var sum = 0, index = 0;
  return Float64Array.from(values, valueof === undefined
    ? v => (sum += +v || 0)
    : v => (sum += +valueof(v, index++, values) || 0));
}

/***/ }),

/***/ "./node_modules/d3-array/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/descending.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}


/***/ }),

/***/ "./node_modules/d3-array/src/deviation.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/deviation.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ deviation
/* harmony export */ });
/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance.js */ "./node_modules/d3-array/src/variance.js");


function deviation(values, valueof) {
  const v = (0,_variance_js__WEBPACK_IMPORTED_MODULE_0__.default)(values, valueof);
  return v ? Math.sqrt(v) : v;
}


/***/ }),

/***/ "./node_modules/d3-array/src/difference.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/difference.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ difference
/* harmony export */ });
function difference(values, ...others) {
  values = new Set(values);
  for (const other of others) {
    for (const value of other) {
      values.delete(value);
    }
  }
  return values;
}


/***/ }),

/***/ "./node_modules/d3-array/src/disjoint.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/disjoint.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ disjoint
/* harmony export */ });
function disjoint(values, other) {
  const iterator = other[Symbol.iterator](), set = new Set();
  for (const v of values) {
    if (set.has(v)) return false;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) break;
      if (Object.is(v, value)) return false;
      set.add(value);
    }
  }
  return true;
}


/***/ }),

/***/ "./node_modules/d3-array/src/every.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/every.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ every
/* harmony export */ });
function every(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (!test(value, ++index, values)) {
      return false;
    }
  }
  return true;
}


/***/ }),

/***/ "./node_modules/d3-array/src/extent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/extent.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values, valueof) {
  let min;
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  }
  return [min, max];
}


/***/ }),

/***/ "./node_modules/d3-array/src/filter.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/filter.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ filter
/* harmony export */ });
function filter(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  const array = [];
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      array.push(value);
    }
  }
  return array;
}


/***/ }),

/***/ "./node_modules/d3-array/src/fsum.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/fsum.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Adder": () => /* binding */ Adder,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder {
  constructor() {
    this._partials = new Float64Array(32);
    this._n = 0;
  }
  add(x) {
    const p = this._partials;
    let i = 0;
    for (let j = 0; j < this._n && j < 32; j++) {
      const y = p[j],
        hi = x + y,
        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
      if (lo) p[i++] = lo;
      x = hi;
    }
    p[i] = x;
    this._n = i + 1;
    return this;
  }
  valueOf() {
    const p = this._partials;
    let n = this._n, x, y, lo, hi = 0;
    if (n > 0) {
      hi = p[--n];
      while (n > 0) {
        x = hi;
        y = p[--n];
        hi = x + y;
        lo = y - (hi - x);
        if (lo) break;
      }
      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {
        y = lo * 2;
        x = hi + y;
        if (y == x - hi) hi = x;
      }
    }
    return hi;
  }
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values, valueof) {
  const adder = new Adder();
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        adder.add(value);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        adder.add(value);
      }
    }
  }
  return +adder;
}


/***/ }),

/***/ "./node_modules/d3-array/src/greatest.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/greatest.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ greatest
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


function greatest(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__.default) {
  let max;
  let defined = false;
  if (compare.length === 1) {
    let maxValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__.default)(value, maxValue) > 0
          : (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__.default)(value, value) === 0) {
        max = element;
        maxValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, max) > 0
          : compare(value, value) === 0) {
        max = value;
        defined = true;
      }
    }
  }
  return max;
}


/***/ }),

/***/ "./node_modules/d3-array/src/greatestIndex.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-array/src/greatestIndex.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ greatestIndex
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _maxIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maxIndex.js */ "./node_modules/d3-array/src/maxIndex.js");



function greatestIndex(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__.default) {
  if (compare.length === 1) return (0,_maxIndex_js__WEBPACK_IMPORTED_MODULE_1__.default)(values, compare);
  let maxValue;
  let max = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (max < 0
        ? compare(value, value) === 0
        : compare(value, maxValue) > 0) {
      maxValue = value;
      max = index;
    }
  }
  return max;
}


/***/ }),

/***/ "./node_modules/d3-array/src/group.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/group.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ group,
/* harmony export */   "groups": () => /* binding */ groups,
/* harmony export */   "rollup": () => /* binding */ rollup,
/* harmony export */   "rollups": () => /* binding */ rollups,
/* harmony export */   "index": () => /* binding */ index,
/* harmony export */   "indexes": () => /* binding */ indexes
/* harmony export */ });
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-array/src/identity.js");


function group(values, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_0__.default, _identity_js__WEBPACK_IMPORTED_MODULE_0__.default, keys);
}

function groups(values, ...keys) {
  return nest(values, Array.from, _identity_js__WEBPACK_IMPORTED_MODULE_0__.default, keys);
}

function rollup(values, reduce, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_0__.default, reduce, keys);
}

function rollups(values, reduce, ...keys) {
  return nest(values, Array.from, reduce, keys);
}

function index(values, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_0__.default, unique, keys);
}

function indexes(values, ...keys) {
  return nest(values, Array.from, unique, keys);
}

function unique(values) {
  if (values.length !== 1) throw new Error("duplicate key");
  return values[0];
}

function nest(values, map, reduce, keys) {
  return (function regroup(values, i) {
    if (i >= keys.length) return reduce(values);
    const groups = new Map();
    const keyof = keys[i++];
    let index = -1;
    for (const value of values) {
      const key = keyof(value, ++index, values);
      const group = groups.get(key);
      if (group) group.push(value);
      else groups.set(key, [value]);
    }
    for (const [key, values] of groups) {
      groups.set(key, regroup(values, i));
    }
    return map(groups);
  })(values, 0);
}


/***/ }),

/***/ "./node_modules/d3-array/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/identity.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x;
}


/***/ }),

/***/ "./node_modules/d3-array/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bisect": () => /* reexport safe */ _bisect_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "bisectRight": () => /* reexport safe */ _bisect_js__WEBPACK_IMPORTED_MODULE_0__.bisectRight,
/* harmony export */   "bisectLeft": () => /* reexport safe */ _bisect_js__WEBPACK_IMPORTED_MODULE_0__.bisectLeft,
/* harmony export */   "bisectCenter": () => /* reexport safe */ _bisect_js__WEBPACK_IMPORTED_MODULE_0__.bisectCenter,
/* harmony export */   "ascending": () => /* reexport safe */ _ascending_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "bisector": () => /* reexport safe */ _bisector_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "count": () => /* reexport safe */ _count_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "cross": () => /* reexport safe */ _cross_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "cumsum": () => /* reexport safe */ _cumsum_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "descending": () => /* reexport safe */ _descending_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "deviation": () => /* reexport safe */ _deviation_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "extent": () => /* reexport safe */ _extent_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "fsum": () => /* reexport safe */ _fsum_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "Adder": () => /* reexport safe */ _fsum_js__WEBPACK_IMPORTED_MODULE_9__.Adder,
/* harmony export */   "group": () => /* reexport safe */ _group_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "groups": () => /* reexport safe */ _group_js__WEBPACK_IMPORTED_MODULE_10__.groups,
/* harmony export */   "index": () => /* reexport safe */ _group_js__WEBPACK_IMPORTED_MODULE_10__.index,
/* harmony export */   "indexes": () => /* reexport safe */ _group_js__WEBPACK_IMPORTED_MODULE_10__.indexes,
/* harmony export */   "rollup": () => /* reexport safe */ _group_js__WEBPACK_IMPORTED_MODULE_10__.rollup,
/* harmony export */   "rollups": () => /* reexport safe */ _group_js__WEBPACK_IMPORTED_MODULE_10__.rollups,
/* harmony export */   "bin": () => /* reexport safe */ _bin_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "histogram": () => /* reexport safe */ _bin_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "thresholdFreedmanDiaconis": () => /* reexport safe */ _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "thresholdScott": () => /* reexport safe */ _threshold_scott_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "thresholdSturges": () => /* reexport safe */ _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "max": () => /* reexport safe */ _max_js__WEBPACK_IMPORTED_MODULE_15__.default,
/* harmony export */   "maxIndex": () => /* reexport safe */ _maxIndex_js__WEBPACK_IMPORTED_MODULE_16__.default,
/* harmony export */   "mean": () => /* reexport safe */ _mean_js__WEBPACK_IMPORTED_MODULE_17__.default,
/* harmony export */   "median": () => /* reexport safe */ _median_js__WEBPACK_IMPORTED_MODULE_18__.default,
/* harmony export */   "merge": () => /* reexport safe */ _merge_js__WEBPACK_IMPORTED_MODULE_19__.default,
/* harmony export */   "min": () => /* reexport safe */ _min_js__WEBPACK_IMPORTED_MODULE_20__.default,
/* harmony export */   "minIndex": () => /* reexport safe */ _minIndex_js__WEBPACK_IMPORTED_MODULE_21__.default,
/* harmony export */   "nice": () => /* reexport safe */ _nice_js__WEBPACK_IMPORTED_MODULE_22__.default,
/* harmony export */   "pairs": () => /* reexport safe */ _pairs_js__WEBPACK_IMPORTED_MODULE_23__.default,
/* harmony export */   "permute": () => /* reexport safe */ _permute_js__WEBPACK_IMPORTED_MODULE_24__.default,
/* harmony export */   "quantile": () => /* reexport safe */ _quantile_js__WEBPACK_IMPORTED_MODULE_25__.default,
/* harmony export */   "quantileSorted": () => /* reexport safe */ _quantile_js__WEBPACK_IMPORTED_MODULE_25__.quantileSorted,
/* harmony export */   "quickselect": () => /* reexport safe */ _quickselect_js__WEBPACK_IMPORTED_MODULE_26__.default,
/* harmony export */   "range": () => /* reexport safe */ _range_js__WEBPACK_IMPORTED_MODULE_27__.default,
/* harmony export */   "least": () => /* reexport safe */ _least_js__WEBPACK_IMPORTED_MODULE_28__.default,
/* harmony export */   "leastIndex": () => /* reexport safe */ _leastIndex_js__WEBPACK_IMPORTED_MODULE_29__.default,
/* harmony export */   "greatest": () => /* reexport safe */ _greatest_js__WEBPACK_IMPORTED_MODULE_30__.default,
/* harmony export */   "greatestIndex": () => /* reexport safe */ _greatestIndex_js__WEBPACK_IMPORTED_MODULE_31__.default,
/* harmony export */   "scan": () => /* reexport safe */ _scan_js__WEBPACK_IMPORTED_MODULE_32__.default,
/* harmony export */   "shuffle": () => /* reexport safe */ _shuffle_js__WEBPACK_IMPORTED_MODULE_33__.default,
/* harmony export */   "shuffler": () => /* reexport safe */ _shuffle_js__WEBPACK_IMPORTED_MODULE_33__.shuffler,
/* harmony export */   "sum": () => /* reexport safe */ _sum_js__WEBPACK_IMPORTED_MODULE_34__.default,
/* harmony export */   "ticks": () => /* reexport safe */ _ticks_js__WEBPACK_IMPORTED_MODULE_35__.default,
/* harmony export */   "tickIncrement": () => /* reexport safe */ _ticks_js__WEBPACK_IMPORTED_MODULE_35__.tickIncrement,
/* harmony export */   "tickStep": () => /* reexport safe */ _ticks_js__WEBPACK_IMPORTED_MODULE_35__.tickStep,
/* harmony export */   "transpose": () => /* reexport safe */ _transpose_js__WEBPACK_IMPORTED_MODULE_36__.default,
/* harmony export */   "variance": () => /* reexport safe */ _variance_js__WEBPACK_IMPORTED_MODULE_37__.default,
/* harmony export */   "zip": () => /* reexport safe */ _zip_js__WEBPACK_IMPORTED_MODULE_38__.default,
/* harmony export */   "every": () => /* reexport safe */ _every_js__WEBPACK_IMPORTED_MODULE_39__.default,
/* harmony export */   "some": () => /* reexport safe */ _some_js__WEBPACK_IMPORTED_MODULE_40__.default,
/* harmony export */   "filter": () => /* reexport safe */ _filter_js__WEBPACK_IMPORTED_MODULE_41__.default,
/* harmony export */   "map": () => /* reexport safe */ _map_js__WEBPACK_IMPORTED_MODULE_42__.default,
/* harmony export */   "reduce": () => /* reexport safe */ _reduce_js__WEBPACK_IMPORTED_MODULE_43__.default,
/* harmony export */   "reverse": () => /* reexport safe */ _reverse_js__WEBPACK_IMPORTED_MODULE_44__.default,
/* harmony export */   "sort": () => /* reexport safe */ _sort_js__WEBPACK_IMPORTED_MODULE_45__.default,
/* harmony export */   "difference": () => /* reexport safe */ _difference_js__WEBPACK_IMPORTED_MODULE_46__.default,
/* harmony export */   "disjoint": () => /* reexport safe */ _disjoint_js__WEBPACK_IMPORTED_MODULE_47__.default,
/* harmony export */   "intersection": () => /* reexport safe */ _intersection_js__WEBPACK_IMPORTED_MODULE_48__.default,
/* harmony export */   "subset": () => /* reexport safe */ _subset_js__WEBPACK_IMPORTED_MODULE_49__.default,
/* harmony export */   "superset": () => /* reexport safe */ _superset_js__WEBPACK_IMPORTED_MODULE_50__.default,
/* harmony export */   "union": () => /* reexport safe */ _union_js__WEBPACK_IMPORTED_MODULE_51__.default
/* harmony export */ });
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect.js */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector.js */ "./node_modules/d3-array/src/bisector.js");
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./count.js */ "./node_modules/d3-array/src/count.js");
/* harmony import */ var _cross_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cross.js */ "./node_modules/d3-array/src/cross.js");
/* harmony import */ var _cumsum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cumsum.js */ "./node_modules/d3-array/src/cumsum.js");
/* harmony import */ var _descending_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./descending.js */ "./node_modules/d3-array/src/descending.js");
/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./deviation.js */ "./node_modules/d3-array/src/deviation.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./extent.js */ "./node_modules/d3-array/src/extent.js");
/* harmony import */ var _fsum_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fsum.js */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _group_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./group.js */ "./node_modules/d3-array/src/group.js");
/* harmony import */ var _bin_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./bin.js */ "./node_modules/d3-array/src/bin.js");
/* harmony import */ var _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./threshold/freedmanDiaconis.js */ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony import */ var _threshold_scott_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./threshold/scott.js */ "./node_modules/d3-array/src/threshold/scott.js");
/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./threshold/sturges.js */ "./node_modules/d3-array/src/threshold/sturges.js");
/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./max.js */ "./node_modules/d3-array/src/max.js");
/* harmony import */ var _maxIndex_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./maxIndex.js */ "./node_modules/d3-array/src/maxIndex.js");
/* harmony import */ var _mean_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./mean.js */ "./node_modules/d3-array/src/mean.js");
/* harmony import */ var _median_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./median.js */ "./node_modules/d3-array/src/median.js");
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./merge.js */ "./node_modules/d3-array/src/merge.js");
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");
/* harmony import */ var _minIndex_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./minIndex.js */ "./node_modules/d3-array/src/minIndex.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./nice.js */ "./node_modules/d3-array/src/nice.js");
/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./pairs.js */ "./node_modules/d3-array/src/pairs.js");
/* harmony import */ var _permute_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./permute.js */ "./node_modules/d3-array/src/permute.js");
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./quantile.js */ "./node_modules/d3-array/src/quantile.js");
/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./quickselect.js */ "./node_modules/d3-array/src/quickselect.js");
/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./range.js */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _least_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./least.js */ "./node_modules/d3-array/src/least.js");
/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./leastIndex.js */ "./node_modules/d3-array/src/leastIndex.js");
/* harmony import */ var _greatest_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./greatest.js */ "./node_modules/d3-array/src/greatest.js");
/* harmony import */ var _greatestIndex_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./greatestIndex.js */ "./node_modules/d3-array/src/greatestIndex.js");
/* harmony import */ var _scan_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./scan.js */ "./node_modules/d3-array/src/scan.js");
/* harmony import */ var _shuffle_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./shuffle.js */ "./node_modules/d3-array/src/shuffle.js");
/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./sum.js */ "./node_modules/d3-array/src/sum.js");
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./transpose.js */ "./node_modules/d3-array/src/transpose.js");
/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./variance.js */ "./node_modules/d3-array/src/variance.js");
/* harmony import */ var _zip_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./zip.js */ "./node_modules/d3-array/src/zip.js");
/* harmony import */ var _every_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./every.js */ "./node_modules/d3-array/src/every.js");
/* harmony import */ var _some_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./some.js */ "./node_modules/d3-array/src/some.js");
/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./filter.js */ "./node_modules/d3-array/src/filter.js");
/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./map.js */ "./node_modules/d3-array/src/map.js");
/* harmony import */ var _reduce_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./reduce.js */ "./node_modules/d3-array/src/reduce.js");
/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./reverse.js */ "./node_modules/d3-array/src/reverse.js");
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./sort.js */ "./node_modules/d3-array/src/sort.js");
/* harmony import */ var _difference_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./difference.js */ "./node_modules/d3-array/src/difference.js");
/* harmony import */ var _disjoint_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./disjoint.js */ "./node_modules/d3-array/src/disjoint.js");
/* harmony import */ var _intersection_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./intersection.js */ "./node_modules/d3-array/src/intersection.js");
/* harmony import */ var _subset_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./subset.js */ "./node_modules/d3-array/src/subset.js");
/* harmony import */ var _superset_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./superset.js */ "./node_modules/d3-array/src/superset.js");
/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./union.js */ "./node_modules/d3-array/src/union.js");











 // Deprecated; use bin.




















 // Deprecated; use leastIndex.





















/***/ }),

/***/ "./node_modules/d3-array/src/intersection.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-array/src/intersection.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ intersection
/* harmony export */ });
/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set.js */ "./node_modules/d3-array/src/set.js");


function intersection(values, ...others) {
  values = new Set(values);
  others = others.map(_set_js__WEBPACK_IMPORTED_MODULE_0__.default);
  out: for (const value of values) {
    for (const other of others) {
      if (!other.has(value)) {
        values.delete(value);
        continue out;
      }
    }
  }
  return values;
}


/***/ }),

/***/ "./node_modules/d3-array/src/least.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/least.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ least
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


function least(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__.default) {
  let min;
  let defined = false;
  if (compare.length === 1) {
    let minValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__.default)(value, minValue) < 0
          : (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__.default)(value, value) === 0) {
        min = element;
        minValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, min) < 0
          : compare(value, value) === 0) {
        min = value;
        defined = true;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/leastIndex.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/leastIndex.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ leastIndex
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _minIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./minIndex.js */ "./node_modules/d3-array/src/minIndex.js");



function leastIndex(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__.default) {
  if (compare.length === 1) return (0,_minIndex_js__WEBPACK_IMPORTED_MODULE_1__.default)(values, compare);
  let minValue;
  let min = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (min < 0
        ? compare(value, value) === 0
        : compare(value, minValue) < 0) {
      minValue = value;
      min = index;
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/map.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/map.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ map
/* harmony export */ });
function map(values, mapper) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
  return Array.from(values, (value, index) => mapper(value, index, values));
}


/***/ }),

/***/ "./node_modules/d3-array/src/max.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/max.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ max
/* harmony export */ });
function max(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}


/***/ }),

/***/ "./node_modules/d3-array/src/maxIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/maxIndex.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ maxIndex
/* harmony export */ });
function maxIndex(values, valueof) {
  let max;
  let maxIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  }
  return maxIndex;
}


/***/ }),

/***/ "./node_modules/d3-array/src/mean.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/mean.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ mean
/* harmony export */ });
function mean(values, valueof) {
  let count = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  }
  if (count) return sum / count;
}


/***/ }),

/***/ "./node_modules/d3-array/src/median.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/median.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quantile.js */ "./node_modules/d3-array/src/quantile.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values, valueof) {
  return (0,_quantile_js__WEBPACK_IMPORTED_MODULE_0__.default)(values, 0.5, valueof);
}


/***/ }),

/***/ "./node_modules/d3-array/src/merge.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/merge.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ merge
/* harmony export */ });
function* flatten(arrays) {
  for (const array of arrays) {
    yield* array;
  }
}

function merge(arrays) {
  return Array.from(flatten(arrays));
}


/***/ }),

/***/ "./node_modules/d3-array/src/min.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/min.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ min
/* harmony export */ });
function min(values, valueof) {
  let min;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/minIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/minIndex.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ minIndex
/* harmony export */ });
function minIndex(values, valueof) {
  let min;
  let minIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  }
  return minIndex;
}


/***/ }),

/***/ "./node_modules/d3-array/src/nice.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/nice.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ nice
/* harmony export */ });
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");


function nice(start, stop, count) {
  let prestep;
  while (true) {
    const step = (0,_ticks_js__WEBPACK_IMPORTED_MODULE_0__.tickIncrement)(start, stop, count);
    if (step === prestep || step === 0 || !isFinite(step)) {
      return [start, stop];
    } else if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
    }
    prestep = step;
  }
}


/***/ }),

/***/ "./node_modules/d3-array/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/number.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "numbers": () => /* binding */ numbers
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x === null ? NaN : +x;
}

function* numbers(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-array/src/pairs.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/pairs.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ pairs,
/* harmony export */   "pair": () => /* binding */ pair
/* harmony export */ });
function pairs(values, pairof = pair) {
  const pairs = [];
  let previous;
  let first = false;
  for (const value of values) {
    if (first) pairs.push(pairof(previous, value));
    previous = value;
    first = true;
  }
  return pairs;
}

function pair(a, b) {
  return [a, b];
}


/***/ }),

/***/ "./node_modules/d3-array/src/permute.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/permute.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(source, keys) {
  return Array.from(keys, key => source[key]);
}


/***/ }),

/***/ "./node_modules/d3-array/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/quantile.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ quantile,
/* harmony export */   "quantileSorted": () => /* binding */ quantileSorted
/* harmony export */ });
/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./max.js */ "./node_modules/d3-array/src/max.js");
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");
/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./quickselect.js */ "./node_modules/d3-array/src/quickselect.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-array/src/number.js");





function quantile(values, p, valueof) {
  values = Float64Array.from((0,_number_js__WEBPACK_IMPORTED_MODULE_0__.numbers)(values, valueof));
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return (0,_min_js__WEBPACK_IMPORTED_MODULE_1__.default)(values);
  if (p >= 1) return (0,_max_js__WEBPACK_IMPORTED_MODULE_2__.default)(values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = (0,_max_js__WEBPACK_IMPORTED_MODULE_2__.default)((0,_quickselect_js__WEBPACK_IMPORTED_MODULE_3__.default)(values, i0).subarray(0, i0 + 1)),
      value1 = (0,_min_js__WEBPACK_IMPORTED_MODULE_1__.default)(values.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}

function quantileSorted(values, p, valueof = _number_js__WEBPACK_IMPORTED_MODULE_0__.default) {
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}


/***/ }),

/***/ "./node_modules/d3-array/src/quickselect.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-array/src/quickselect.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ quickselect
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__.default) {
  while (right > left) {
    if (right - left > 600) {
      const n = right - left + 1;
      const m = k - left + 1;
      const z = Math.log(n);
      const s = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
      quickselect(array, k, newLeft, newRight, compare);
    }

    const t = array[k];
    let i = left;
    let j = right;

    swap(array, left, k);
    if (compare(array[right], t) > 0) swap(array, left, right);

    while (i < j) {
      swap(array, i, j), ++i, --j;
      while (compare(array[i], t) < 0) ++i;
      while (compare(array[j], t) > 0) --j;
    }

    if (compare(array[left], t) === 0) swap(array, left, j);
    else ++j, swap(array, j, right);

    if (j <= k) left = j + 1;
    if (k <= j) right = j - 1;
  }
  return array;
}

function swap(array, i, j) {
  const t = array[i];
  array[i] = array[j];
  array[j] = t;
}


/***/ }),

/***/ "./node_modules/d3-array/src/range.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/range.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}


/***/ }),

/***/ "./node_modules/d3-array/src/reduce.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/reduce.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ reduce
/* harmony export */ });
function reduce(values, reducer, value) {
  if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
  const iterator = values[Symbol.iterator]();
  let done, next, index = -1;
  if (arguments.length < 3) {
    ({done, value} = iterator.next());
    if (done) return;
    ++index;
  }
  while (({done, value: next} = iterator.next()), !done) {
    value = reducer(value, next, ++index, values);
  }
  return value;
}


/***/ }),

/***/ "./node_modules/d3-array/src/reverse.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/reverse.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ reverse
/* harmony export */ });
function reverse(values) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  return Array.from(values).reverse();
}


/***/ }),

/***/ "./node_modules/d3-array/src/scan.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/scan.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ scan
/* harmony export */ });
/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./leastIndex.js */ "./node_modules/d3-array/src/leastIndex.js");


function scan(values, compare) {
  const index = (0,_leastIndex_js__WEBPACK_IMPORTED_MODULE_0__.default)(values, compare);
  return index < 0 ? undefined : index;
}


/***/ }),

/***/ "./node_modules/d3-array/src/set.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/set.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ set
/* harmony export */ });
function set(values) {
  return values instanceof Set ? values : new Set(values);
}


/***/ }),

/***/ "./node_modules/d3-array/src/shuffle.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/shuffle.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "shuffler": () => /* binding */ shuffler
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (shuffler(Math.random));

function shuffler(random) {
  return function shuffle(array, i0 = 0, i1 = array.length) {
    let m = i1 - (i0 = +i0);
    while (m) {
      const i = random() * m-- | 0, t = array[m + i0];
      array[m + i0] = array[i + i0];
      array[i + i0] = t;
    }
    return array;
  };
}


/***/ }),

/***/ "./node_modules/d3-array/src/some.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/some.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ some
/* harmony export */ });
function some(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      return true;
    }
  }
  return false;
}


/***/ }),

/***/ "./node_modules/d3-array/src/sort.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/sort.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ sort
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _permute_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./permute.js */ "./node_modules/d3-array/src/permute.js");



function sort(values, f = _ascending_js__WEBPACK_IMPORTED_MODULE_0__.default) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  values = Array.from(values);
  if (f.length === 1) {
    f = values.map(f);
    return (0,_permute_js__WEBPACK_IMPORTED_MODULE_1__.default)(values, values.map((d, i) => i).sort((i, j) => (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__.default)(f[i], f[j])));
  }
  return values.sort(f);
}


/***/ }),

/***/ "./node_modules/d3-array/src/subset.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/subset.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ subset
/* harmony export */ });
/* harmony import */ var _superset_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./superset.js */ "./node_modules/d3-array/src/superset.js");


function subset(values, other) {
  return (0,_superset_js__WEBPACK_IMPORTED_MODULE_0__.default)(other, values);
}


/***/ }),

/***/ "./node_modules/d3-array/src/sum.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/sum.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ sum
/* harmony export */ });
function sum(values, valueof) {
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }
  return sum;
}


/***/ }),

/***/ "./node_modules/d3-array/src/superset.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/superset.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ superset
/* harmony export */ });
function superset(values, other) {
  const iterator = values[Symbol.iterator](), set = new Set();
  for (const o of other) {
    if (set.has(o)) continue;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) return false;
      set.add(value);
      if (Object.is(o, value)) break;
    }
  }
  return true;
}


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../count.js */ "./node_modules/d3-array/src/count.js");
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../quantile.js */ "./node_modules/d3-array/src/quantile.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values, min, max) {
  return Math.ceil((max - min) / (2 * ((0,_quantile_js__WEBPACK_IMPORTED_MODULE_0__.default)(values, 0.75) - (0,_quantile_js__WEBPACK_IMPORTED_MODULE_0__.default)(values, 0.25)) * Math.pow((0,_count_js__WEBPACK_IMPORTED_MODULE_1__.default)(values), -1 / 3)));
}


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/scott.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/scott.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../count.js */ "./node_modules/d3-array/src/count.js");
/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deviation.js */ "./node_modules/d3-array/src/deviation.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values, min, max) {
  return Math.ceil((max - min) / (3.5 * (0,_deviation_js__WEBPACK_IMPORTED_MODULE_0__.default)(values) * Math.pow((0,_count_js__WEBPACK_IMPORTED_MODULE_1__.default)(values), -1 / 3)));
}


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/sturges.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/sturges.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../count.js */ "./node_modules/d3-array/src/count.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {
  return Math.ceil(Math.log((0,_count_js__WEBPACK_IMPORTED_MODULE_0__.default)(values)) / Math.LN2) + 1;
}


/***/ }),

/***/ "./node_modules/d3-array/src/ticks.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/ticks.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "tickIncrement": () => /* binding */ tickIncrement,
/* harmony export */   "tickStep": () => /* binding */ tickStep
/* harmony export */ });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));
    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    step = -step;
    start = Math.ceil(start * step);
    stop = Math.floor(stop * step);
    ticks = new Array(n = Math.ceil(stop - start + 1));
    while (++i < n) ticks[i] = (start + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}


/***/ }),

/***/ "./node_modules/d3-array/src/transpose.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/transpose.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(matrix) {
  if (!(n = matrix.length)) return [];
  for (var i = -1, m = (0,_min_js__WEBPACK_IMPORTED_MODULE_0__.default)(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }
  return transpose;
}

function length(d) {
  return d.length;
}


/***/ }),

/***/ "./node_modules/d3-array/src/union.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/union.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ union
/* harmony export */ });
function union(...others) {
  const set = new Set();
  for (const other of others) {
    for (const o of other) {
      set.add(o);
    }
  }
  return set;
}


/***/ }),

/***/ "./node_modules/d3-array/src/variance.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/variance.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ variance
/* harmony export */ });
function variance(values, valueof) {
  let count = 0;
  let delta;
  let mean = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  }
  if (count > 1) return sum / (count - 1);
}


/***/ }),

/***/ "./node_modules/d3-array/src/zip.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/zip.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose.js */ "./node_modules/d3-array/src/transpose.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_transpose_js__WEBPACK_IMPORTED_MODULE_0__.default)(arguments);
}


/***/ }),

/***/ "./node_modules/d3-axis/src/array.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-axis/src/array.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "slice": () => /* binding */ slice
/* harmony export */ });
var slice = Array.prototype.slice;


/***/ }),

/***/ "./node_modules/d3-axis/src/axis.js":
/*!******************************************!*\
  !*** ./node_modules/d3-axis/src/axis.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "axisTop": () => /* binding */ axisTop,
/* harmony export */   "axisRight": () => /* binding */ axisRight,
/* harmony export */   "axisBottom": () => /* binding */ axisBottom,
/* harmony export */   "axisLeft": () => /* binding */ axisLeft
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-axis/src/array.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-axis/src/identity.js");



var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return d => +scale(d);
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.
  if (scale.round()) offset = Math.round(offset);
  return function(d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity_js__WEBPACK_IMPORTED_MODULE_0__.default) : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");

    path = path.merge(path.enter().insert("path", ".tick")
        .attr("class", "domain")
        .attr("stroke", "currentColor"));

    tick = tick.merge(tickEnter);

    line = line.merge(tickEnter.append("line")
        .attr("stroke", "currentColor")
        .attr(x + "2", k * tickSizeInner));

    text = text.merge(tickEnter.append("text")
        .attr("fill", "currentColor")
        .attr(x, k * spacing)
        .attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);

      tickExit = tickExit.transition(context)
          .attr("opacity", epsilon)
          .attr("transform", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform"); });

      tickEnter
          .attr("opacity", epsilon)
          .attr("transform", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });
    }

    tickExit.remove();

    path
        .attr("d", orient === left || orient == right
            ? (tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1)
            : (tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1));

    tick
        .attr("opacity", 1)
        .attr("transform", function(d) { return transform(position(d)); });

    line
        .attr(x + "2", k * tickSizeInner);

    text
        .attr(x, k * spacing)
        .text(format);

    selection.filter(entering)
        .attr("fill", "none")
        .attr("font-size", 10)
        .attr("font-family", "sans-serif")
        .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");

    selection
        .each(function() { this.__axis = position; });
  }

  axis.scale = function(_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function() {
    return tickArguments = _array_js__WEBPACK_IMPORTED_MODULE_1__.slice.call(arguments), axis;
  };

  axis.tickArguments = function(_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array_js__WEBPACK_IMPORTED_MODULE_1__.slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function(_) {
    return arguments.length ? (tickValues = _ == null ? null : _array_js__WEBPACK_IMPORTED_MODULE_1__.slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function(_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function(_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function(_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function(_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function(_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}


/***/ }),

/***/ "./node_modules/d3-axis/src/identity.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-axis/src/identity.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x;
}


/***/ }),

/***/ "./node_modules/d3-axis/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-axis/src/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "axisTop": () => /* reexport safe */ _axis_js__WEBPACK_IMPORTED_MODULE_0__.axisTop,
/* harmony export */   "axisRight": () => /* reexport safe */ _axis_js__WEBPACK_IMPORTED_MODULE_0__.axisRight,
/* harmony export */   "axisBottom": () => /* reexport safe */ _axis_js__WEBPACK_IMPORTED_MODULE_0__.axisBottom,
/* harmony export */   "axisLeft": () => /* reexport safe */ _axis_js__WEBPACK_IMPORTED_MODULE_0__.axisLeft
/* harmony export */ });
/* harmony import */ var _axis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./axis.js */ "./node_modules/d3-axis/src/axis.js");



/***/ }),

/***/ "./node_modules/d3-brush/src/brush.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/brush.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "brushSelection": () => /* binding */ brushSelection,
/* harmony export */   "brushX": () => /* binding */ brushX,
/* harmony export */   "brushY": () => /* binding */ brushY,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/nodrag.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/value.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/select.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/pointer.js");
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-brush/src/constant.js");
/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./event.js */ "./node_modules/d3-brush/src/event.js");
/* harmony import */ var _noevent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./noevent.js */ "./node_modules/d3-brush/src/noevent.js");









var MODE_DRAG = {name: "drag"},
    MODE_SPACE = {name: "space"},
    MODE_HANDLE = {name: "handle"},
    MODE_CENTER = {name: "center"};

const {abs, max, min} = Math;

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },
  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }
};

var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },
  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }
};

var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function(xy) { return xy == null ? null : number2(xy); },
  output: function(xy) { return xy; }
};

var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};

var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};

var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};

var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};

var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {type: t};
}

// Ignore right-click, since that should open the context menu.
function defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;
  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }
  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

// Like d3.local, but with the name “__brush” rather than auto-generated.
function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;
  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0]
      || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush(X);
}

function brushY() {
  return brush(Y);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return brush(XY);
}

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_4__.default)("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group
        .property("__brush", initialize)
      .selectAll(".overlay")
      .data([type("overlay")]);

    overlay.enter().append("rect")
        .attr("class", "overlay")
        .attr("pointer-events", "all")
        .attr("cursor", cursors.overlay)
      .merge(overlay)
        .each(function() {
          var extent = local(this).extent;
          (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__.default)(this)
              .attr("x", extent[0][0])
              .attr("y", extent[0][1])
              .attr("width", extent[1][0] - extent[0][0])
              .attr("height", extent[1][1] - extent[0][1]);
        });

    group.selectAll(".selection")
      .data([type("selection")])
      .enter().append("rect")
        .attr("class", "selection")
        .attr("cursor", cursors.selection)
        .attr("fill", "#777")
        .attr("fill-opacity", 0.3)
        .attr("stroke", "#fff")
        .attr("shape-rendering", "crispEdges");

    var handle = group.selectAll(".handle")
      .data(dim.handles, function(d) { return d.type; });

    handle.exit().remove();

    handle.enter().append("rect")
        .attr("class", function(d) { return "handle handle--" + d.type; })
        .attr("cursor", function(d) { return cursors[d.type]; });

    group
        .each(redraw)
        .attr("fill", "none")
        .attr("pointer-events", "all")
        .on("mousedown.brush", started)
      .filter(touchable)
        .on("touchstart.brush", started)
        .on("touchmove.brush", touchmoved)
        .on("touchend.brush touchcancel.brush", touchended)
        .style("touch-action", "none")
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function(group, selection) {
    if (group.tween) {
      group
          .on("start.brush", function(event) { emitter(this, arguments).beforestart().start(event); })
          .on("interrupt.brush end.brush", function(event) { emitter(this, arguments).end(event); })
          .tween("brush", function() {
            var that = this,
                state = that.__brush,
                emit = emitter(that, arguments),
                selection0 = state.selection,
                selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
                i = (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_6__.default)(selection0, selection1);

            function tween(t) {
              state.selection = t === 1 && selection1 === null ? null : i(t);
              redraw.call(that);
              emit.brush();
            }

            return selection0 !== null && selection1 !== null ? tween : tween(1);
          });
    } else {
      group
          .each(function() {
            var that = this,
                args = arguments,
                state = that.__brush,
                selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
                emit = emitter(that, args).beforestart();

            (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(that);
            state.selection = selection1 === null ? null : selection1;
            redraw.call(that);
            emit.start().brush().end();
          });
    }
  };

  brush.clear = function(group) {
    brush.move(group, null);
  };

  function redraw() {
    var group = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__.default)(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection")
          .style("display", null)
          .attr("x", selection[0][0])
          .attr("y", selection[0][1])
          .attr("width", selection[1][0] - selection[0][0])
          .attr("height", selection[1][1] - selection[0][1]);

      group.selectAll(".handle")
          .style("display", null)
          .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })
          .attr("y", function(d) { return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })
          .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })
          .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });
    }

    else {
      group.selectAll(".selection,.handle")
          .style("display", "none")
          .attr("x", null)
          .attr("y", null)
          .attr("width", null)
          .attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    var emit = that.__brush.emitter;
    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);
  }

  function Emitter(that, args, clean) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
    this.clean = clean;
  }

  Emitter.prototype = {
    beforestart: function() {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function(event, mode) {
      if (this.starting) this.starting = false, this.emit("start", event, mode);
      else this.emit("brush", event);
      return this;
    },
    brush: function(event, mode) {
      this.emit("brush", event, mode);
      return this;
    },
    end: function(event, mode) {
      if (--this.active === 0) delete this.state.emitter, this.emit("end", event, mode);
      return this;
    },
    emit: function(type, event, mode) {
      var d = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__.default)(this.that).datum();
      listeners.call(
        type,
        this.that,
        new _event_js__WEBPACK_IMPORTED_MODULE_2__.default(type, {
          sourceEvent: event,
          target: brush,
          selection: dim.output(this.state.selection),
          mode,
          dispatch: listeners
        }),
        d
      );
    }
  };

  function started(event) {
    if (touchending && !event.touches) return;
    if (!filter.apply(this, arguments)) return;

    var that = this,
        type = event.target.__data__.type,
        mode = (keys && event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0], w0, w1,
        N = extent[0][1], n0, n1,
        E = extent[1][0], e0, e1,
        S = extent[1][1], s0, s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && event.shiftKey,
        lockX,
        lockY,
        points = Array.from(event.touches || [event], t => {
          const i = t.identifier;
          t = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(t, that);
          t.point0 = t.slice();
          t.identifier = i;
          return t;
        });

    if (type === "overlay") {
      if (selection) moving = true;
      const pts = [points[0], points[1] || points[0]];
      state.selection = selection = [[
          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),
          n0 = dim === X ? N : min(pts[0][1], pts[1][1])
        ], [
          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),
          s0 = dim === X ? S : max(pts[0][1], pts[1][1])
        ]];
      if (points.length > 1) move();
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;

    var group = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__.default)(that)
        .attr("pointer-events", "none");

    var overlay = group.selectAll(".overlay")
        .attr("cursor", cursors[type]);

    (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(that);
    var emit = emitter(that, arguments, true).beforestart();

    if (event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__.default)(event.view)
          .on("mousemove.brush", moved, true)
          .on("mouseup.brush", ended, true);
      if (keys) view
          .on("keydown.brush", keydowned, true)
          .on("keyup.brush", keyupped, true)

      ;(0,d3_drag__WEBPACK_IMPORTED_MODULE_8__.default)(event.view);
    }

    redraw.call(that);
    emit.start(event, mode.name);

    function moved(event) {
      for (const p of event.changedTouches || [event]) {
        for (const d of points)
          if (d.identifier === p.identifier) d.cur = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(p, that);
      }
      if (shifting && !lockX && !lockY && points.length === 1) {
        const point = points[0];
        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))
          lockY = true;
        else
          lockX = true;
      }
      for (const point of points)
        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];
      moving = true;
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.default)(event);
      move(event);
    }

    function move(event) {
      const point = points[0], point0 = point.point0;
      var t;

      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG: {
          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
          break;
        }
        case MODE_HANDLE: {
          if (points[1]) {
            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;
            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;
          } else {
            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;
            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;
            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
          }
          break;
        }
        case MODE_CENTER: {
          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));
          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));
          break;
        }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!
      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1
          || selection[0][1] !== n1
          || selection[1][0] !== e1
          || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush(event, mode.name);
      }
    }

    function ended(event) {
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.nopropagation)(event);
      if (event.touches) {
        if (event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
      } else {
        (0,d3_drag__WEBPACK_IMPORTED_MODULE_8__.yesdrag)(event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }
      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!
      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end(event, mode.name);
    }

    function keydowned(event) {
      switch (event.keyCode) {
        case 16: { // SHIFT
          shifting = signX && signY;
          break;
        }
        case 18: { // ALT
          if (mode === MODE_HANDLE) {
            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
            mode = MODE_CENTER;
            move();
          }
          break;
        }
        case 32: { // SPACE; takes priority over ALT
          if (mode === MODE_HANDLE || mode === MODE_CENTER) {
            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;
            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;
            mode = MODE_SPACE;
            overlay.attr("cursor", cursors.selection);
            move();
          }
          break;
        }
        default: return;
      }
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.default)(event);
    }

    function keyupped(event) {
      switch (event.keyCode) {
        case 16: { // SHIFT
          if (shifting) {
            lockX = lockY = shifting = false;
            move();
          }
          break;
        }
        case 18: { // ALT
          if (mode === MODE_CENTER) {
            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
            mode = MODE_HANDLE;
            move();
          }
          break;
        }
        case 32: { // SPACE
          if (mode === MODE_SPACE) {
            if (event.altKey) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
            } else {
              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
            }
            overlay.attr("cursor", cursors[type]);
            move();
          }
          break;
        }
        default: return;
      }
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.default)(event);
    }
  }

  function touchmoved(event) {
    emitter(this, arguments).moved(event);
  }

  function touchended(event) {
    emitter(this, arguments).ended(event);
  }

  function initialize() {
    var state = this.__brush || {selection: null};
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function(_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(number2(_)), brush) : extent;
  };

  brush.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(!!_), brush) : filter;
  };

  brush.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(!!_), brush) : touchable;
  };

  brush.handleSize = function(_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function(_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}


/***/ }),

/***/ "./node_modules/d3-brush/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-brush/src/constant.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);


/***/ }),

/***/ "./node_modules/d3-brush/src/event.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/event.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ BrushEvent
/* harmony export */ });
function BrushEvent(type, {
  sourceEvent,
  target,
  selection,
  mode,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    selection: {value: selection, enumerable: true, configurable: true},
    mode: {value: mode, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}


/***/ }),

/***/ "./node_modules/d3-brush/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-brush/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "brush": () => /* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "brushX": () => /* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__.brushX,
/* harmony export */   "brushY": () => /* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__.brushY,
/* harmony export */   "brushSelection": () => /* reexport safe */ _brush_js__WEBPACK_IMPORTED_MODULE_0__.brushSelection
/* harmony export */ });
/* harmony import */ var _brush_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./brush.js */ "./node_modules/d3-brush/src/brush.js");



/***/ }),

/***/ "./node_modules/d3-brush/src/noevent.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-brush/src/noevent.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nopropagation": () => /* binding */ nopropagation,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}


/***/ }),

/***/ "./node_modules/d3-chord/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/array.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "slice": () => /* binding */ slice
/* harmony export */ });
var slice = Array.prototype.slice;


/***/ }),

/***/ "./node_modules/d3-chord/src/chord.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/chord.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "chordTranspose": () => /* binding */ chordTranspose,
/* harmony export */   "chordDirected": () => /* binding */ chordDirected
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-chord/src/math.js");


function range(i, j) {
  return Array.from({length: j - i}, (_, k) => i + k);
}

function compareValue(compare) {
  return function(a, b) {
    return compare(
      a.source.value + a.target.value,
      b.source.value + b.target.value
    );
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return chord(false, false);
}

function chordTranspose() {
  return chord(false, true);
}

function chordDirected() {
  return chord(true, false);
}

function chord(directed, transpose) {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = new Array(n),
        groupIndex = range(0, n),
        chords = new Array(n * n),
        groups = new Array(n),
        k = 0, dx;

    matrix = Float64Array.from({length: n * n}, transpose
        ? (_, i) => matrix[i % n][i / n | 0]
        : (_, i) => matrix[i / n | 0][i % n]);

    // Compute the scaling factor from value to angle in [0, 2pi].
    for (let i = 0; i < n; ++i) {
      let x = 0;
      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];
      k += groupSums[i] = x;
    }
    k = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(0, _math_js__WEBPACK_IMPORTED_MODULE_0__.tau - padAngle * n) / k;
    dx = k ? padAngle : _math_js__WEBPACK_IMPORTED_MODULE_0__.tau / n;

    // Compute the angles for each group and constituent chord.
    {
      let x = 0;
      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));
      for (const i of groupIndex) {
        const x0 = x;
        if (directed) {
          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);
          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));
          for (const j of subgroupIndex) {
            if (j < 0) {
              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});
              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};
            } else {
              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});
              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
            }
          }
          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};
        } else {
          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);
          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));
          for (const j of subgroupIndex) {
            let chord;
            if (i < j) {
              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});
              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
            } else {
              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});
              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};
              if (i === j) chord.source = chord.target;
            }
            if (chord.source && chord.target && chord.source.value < chord.target.value) {
              const source = chord.source;
              chord.source = chord.target;
              chord.target = source;
            }
          }
          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};
        }
        x += dx;
      }
    }

    // Remove empty chords.
    chords = Object.values(chords);
    chords.groups = groups;
    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function(_) {
    return arguments.length ? (padAngle = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(0, _), chord) : padAngle;
  };

  chord.sortGroups = function(_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function(_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function(_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}


/***/ }),

/***/ "./node_modules/d3-chord/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-chord/src/constant.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-chord/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-chord/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "chord": () => /* reexport safe */ _chord_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "chordTranspose": () => /* reexport safe */ _chord_js__WEBPACK_IMPORTED_MODULE_0__.chordTranspose,
/* harmony export */   "chordDirected": () => /* reexport safe */ _chord_js__WEBPACK_IMPORTED_MODULE_0__.chordDirected,
/* harmony export */   "ribbon": () => /* reexport safe */ _ribbon_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "ribbonArrow": () => /* reexport safe */ _ribbon_js__WEBPACK_IMPORTED_MODULE_1__.ribbonArrow
/* harmony export */ });
/* harmony import */ var _chord_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chord.js */ "./node_modules/d3-chord/src/chord.js");
/* harmony import */ var _ribbon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ribbon.js */ "./node_modules/d3-chord/src/ribbon.js");




/***/ }),

/***/ "./node_modules/d3-chord/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-chord/src/math.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "abs": () => /* binding */ abs,
/* harmony export */   "cos": () => /* binding */ cos,
/* harmony export */   "sin": () => /* binding */ sin,
/* harmony export */   "pi": () => /* binding */ pi,
/* harmony export */   "halfPi": () => /* binding */ halfPi,
/* harmony export */   "tau": () => /* binding */ tau,
/* harmony export */   "max": () => /* binding */ max,
/* harmony export */   "epsilon": () => /* binding */ epsilon
/* harmony export */ });
var abs = Math.abs;
var cos = Math.cos;
var sin = Math.sin;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = pi * 2;
var max = Math.max;
var epsilon = 1e-12;


/***/ }),

/***/ "./node_modules/d3-chord/src/ribbon.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-chord/src/ribbon.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "ribbonArrow": () => /* binding */ ribbonArrow
/* harmony export */ });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/path.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-chord/src/array.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-chord/src/constant.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-chord/src/math.js");





function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function defaultPadAngle() {
  return 0;
}

function defaultArrowheadRadius() {
  return 10;
}

function ribbon(headRadius) {
  var source = defaultSource,
      target = defaultTarget,
      sourceRadius = defaultRadius,
      targetRadius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      padAngle = defaultPadAngle,
      context = null;

  function ribbon() {
    var buffer,
        s = source.apply(this, arguments),
        t = target.apply(this, arguments),
        ap = padAngle.apply(this, arguments) / 2,
        argv = _array_js__WEBPACK_IMPORTED_MODULE_0__.slice.call(arguments),
        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi,
        sa1 = endAngle.apply(this, argv) - _math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi,
        tr = +targetRadius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi,
        ta1 = endAngle.apply(this, argv) - _math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi;

    if (!context) context = buffer = (0,d3_path__WEBPACK_IMPORTED_MODULE_2__.default)();

    if (ap > _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) {
      if ((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(sa1 - sa0) > ap * 2 + _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);
      else sa0 = sa1 = (sa0 + sa1) / 2;
      if ((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(ta1 - ta0) > ap * 2 + _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);
      else ta0 = ta1 = (ta0 + ta1) / 2;
    }

    context.moveTo(sr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(sa0), sr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(sa0));
    context.arc(0, 0, sr, sa0, sa1);
    if (sa0 !== ta0 || sa1 !== ta1) {
      if (headRadius) {
        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;
        context.quadraticCurveTo(0, 0, tr2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(ta0), tr2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(ta0));
        context.lineTo(tr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(ta2), tr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(ta2));
        context.lineTo(tr2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(ta1), tr2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(ta1));
      } else {
        context.quadraticCurveTo(0, 0, tr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(ta0), tr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(ta0));
        context.arc(0, 0, tr, ta0, ta1);
      }
    }
    context.quadraticCurveTo(0, 0, sr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(sa0), sr * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(sa0));
    context.closePath();

    if (buffer) return context = null, buffer + "" || null;
  }

  if (headRadius) ribbon.headRadius = function(_) {
    return arguments.length ? (headRadius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), ribbon) : headRadius;
  };

  ribbon.radius = function(_) {
    return arguments.length ? (sourceRadius = targetRadius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), ribbon) : sourceRadius;
  };

  ribbon.sourceRadius = function(_) {
    return arguments.length ? (sourceRadius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), ribbon) : sourceRadius;
  };

  ribbon.targetRadius = function(_) {
    return arguments.length ? (targetRadius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), ribbon) : targetRadius;
  };

  ribbon.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), ribbon) : endAngle;
  };

  ribbon.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), ribbon) : padAngle;
  };

  ribbon.source = function(_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function(_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;
  };

  return ribbon;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return ribbon();
}

function ribbonArrow() {
  return ribbon(defaultArrowheadRadius);
}


/***/ }),

/***/ "./node_modules/d3-color/src/color.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/color.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Color": () => /* binding */ Color,
/* harmony export */   "darker": () => /* binding */ darker,
/* harmony export */   "brighter": () => /* binding */ brighter,
/* harmony export */   "default": () => /* binding */ color,
/* harmony export */   "rgbConvert": () => /* binding */ rgbConvert,
/* harmony export */   "rgb": () => /* binding */ rgb,
/* harmony export */   "Rgb": () => /* binding */ Rgb,
/* harmony export */   "hslConvert": () => /* binding */ hslConvert,
/* harmony export */   "hsl": () => /* binding */ hsl
/* harmony export */ });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "./node_modules/d3-color/src/define.js");


function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

(0,_define_js__WEBPACK_IMPORTED_MODULE_0__.default)(Color, color, {
  copy: function(channels) {
    return Object.assign(new this.constructor, this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex, // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
      : null) // invalid hex
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0,_define_js__WEBPACK_IMPORTED_MODULE_0__.default)(Rgb, rgb, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex, // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(")
      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.b) || 0))
      + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0,_define_js__WEBPACK_IMPORTED_MODULE_0__.default)(Hsl, hsl, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(")
        + (this.h || 0) + ", "
        + (this.s || 0) * 100 + "%, "
        + (this.l || 0) * 100 + "%"
        + (a === 1 ? ")" : ", " + a + ")");
  }
}));

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}


/***/ }),

/***/ "./node_modules/d3-color/src/cubehelix.js":
/*!************************************************!*\
  !*** ./node_modules/d3-color/src/cubehelix.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ cubehelix,
/* harmony export */   "Cubehelix": () => /* binding */ Cubehelix
/* harmony export */ });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./define.js */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-color/src/math.js");




var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb)) o = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
      h = s ? Math.atan2(k, bl) * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0,_define_js__WEBPACK_IMPORTED_MODULE_2__.default)(Cubehelix, cubehelix, (0,_define_js__WEBPACK_IMPORTED_MODULE_2__.extend)(_color_js__WEBPACK_IMPORTED_MODULE_0__.Color, {
  brighter: function(k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_0__.brighter : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_0__.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_0__.darker : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_0__.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb(
      255 * (l + a * (A * cosh + B * sinh)),
      255 * (l + a * (C * cosh + D * sinh)),
      255 * (l + a * (E * cosh)),
      this.opacity
    );
  }
}));


/***/ }),

/***/ "./node_modules/d3-color/src/define.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-color/src/define.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "extend": () => /* binding */ extend
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}


/***/ }),

/***/ "./node_modules/d3-color/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "color": () => /* reexport safe */ _color_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "rgb": () => /* reexport safe */ _color_js__WEBPACK_IMPORTED_MODULE_0__.rgb,
/* harmony export */   "hsl": () => /* reexport safe */ _color_js__WEBPACK_IMPORTED_MODULE_0__.hsl,
/* harmony export */   "lab": () => /* reexport safe */ _lab_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "hcl": () => /* reexport safe */ _lab_js__WEBPACK_IMPORTED_MODULE_1__.hcl,
/* harmony export */   "lch": () => /* reexport safe */ _lab_js__WEBPACK_IMPORTED_MODULE_1__.lch,
/* harmony export */   "gray": () => /* reexport safe */ _lab_js__WEBPACK_IMPORTED_MODULE_1__.gray,
/* harmony export */   "cubehelix": () => /* reexport safe */ _cubehelix_js__WEBPACK_IMPORTED_MODULE_2__.default
/* harmony export */ });
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _lab_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lab.js */ "./node_modules/d3-color/src/lab.js");
/* harmony import */ var _cubehelix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubehelix.js */ "./node_modules/d3-color/src/cubehelix.js");





/***/ }),

/***/ "./node_modules/d3-color/src/lab.js":
/*!******************************************!*\
  !*** ./node_modules/d3-color/src/lab.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gray": () => /* binding */ gray,
/* harmony export */   "default": () => /* binding */ lab,
/* harmony export */   "Lab": () => /* binding */ Lab,
/* harmony export */   "lch": () => /* binding */ lch,
/* harmony export */   "hcl": () => /* binding */ hcl,
/* harmony export */   "Hcl": () => /* binding */ Hcl
/* harmony export */ });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./define.js */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-color/src/math.js");




// https://observablehq.com/@mbostock/lab-and-rgb
const K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb)) o = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
  if (r === g && g === b) x = z = y; else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0,_define_js__WEBPACK_IMPORTED_MODULE_1__.default)(Lab, lab, (0,_define_js__WEBPACK_IMPORTED_MODULE_1__.extend)(_color_js__WEBPACK_IMPORTED_MODULE_0__.Color, {
  brighter: function(k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function(k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function() {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb(
      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),
      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
      this.opacity
    );
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * _math_js__WEBPACK_IMPORTED_MODULE_2__.degrees;
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math_js__WEBPACK_IMPORTED_MODULE_2__.radians;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0,_define_js__WEBPACK_IMPORTED_MODULE_1__.default)(Hcl, hcl, (0,_define_js__WEBPACK_IMPORTED_MODULE_1__.extend)(_color_js__WEBPACK_IMPORTED_MODULE_0__.Color, {
  brighter: function(k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function(k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function() {
    return hcl2lab(this).rgb();
  }
}));


/***/ }),

/***/ "./node_modules/d3-color/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-color/src/math.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "radians": () => /* binding */ radians,
/* harmony export */   "degrees": () => /* binding */ degrees
/* harmony export */ });
const radians = Math.PI / 180;
const degrees = 180 / Math.PI;


/***/ }),

/***/ "./node_modules/d3-contour/src/area.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/area.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(ring) {
  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];
  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
  return area;
}


/***/ }),

/***/ "./node_modules/d3-contour/src/array.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/array.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "slice": () => /* binding */ slice
/* harmony export */ });
var array = Array.prototype;

var slice = array.slice;


/***/ }),

/***/ "./node_modules/d3-contour/src/ascending.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-contour/src/ascending.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return a - b;
}


/***/ }),

/***/ "./node_modules/d3-contour/src/blur.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/blur.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blurX": () => /* binding */ blurX,
/* harmony export */   "blurY": () => /* binding */ blurY
/* harmony export */ });
// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;
  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }
      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }
        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
}

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;
  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }
      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }
        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-contour/src/constant.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/constant.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);


/***/ }),

/***/ "./node_modules/d3-contour/src/contains.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contains.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(ring, hole) {
  var i = -1, n = hole.length, c;
  while (++i < n) if (c = ringContains(ring, hole[i])) return c;
  return 0;
}

function ringContains(ring, point) {
  var x = point[0], y = point[1], contains = -1;
  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;
  }
  return contains;
}

function segmentContains(a, b, c) {
  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}


/***/ }),

/***/ "./node_modules/d3-contour/src/contours.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-contour/src/contours.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/threshold/sturges.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/extent.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-contour/src/ascending.js");
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-contour/src/area.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./contains.js */ "./node_modules/d3-contour/src/contains.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./noop.js */ "./node_modules/d3-contour/src/noop.js");








var cases = [
  [],
  [[[1.0, 1.5], [0.5, 1.0]]],
  [[[1.5, 1.0], [1.0, 1.5]]],
  [[[1.5, 1.0], [0.5, 1.0]]],
  [[[1.0, 0.5], [1.5, 1.0]]],
  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],
  [[[1.0, 0.5], [1.0, 1.5]]],
  [[[1.0, 0.5], [0.5, 1.0]]],
  [[[0.5, 1.0], [1.0, 0.5]]],
  [[[1.0, 1.5], [1.0, 0.5]]],
  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],
  [[[1.5, 1.0], [1.0, 0.5]]],
  [[[0.5, 1.0], [1.5, 1.0]]],
  [[[1.0, 1.5], [1.5, 1.0]]],
  [[[0.5, 1.0], [1.0, 1.5]]],
  []
];

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var dx = 1,
      dy = 1,
      threshold = d3_array__WEBPACK_IMPORTED_MODULE_0__.default,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      var domain = (0,d3_array__WEBPACK_IMPORTED_MODULE_1__.default)(values), start = domain[0], stop = domain[1];
      tz = (0,d3_array__WEBPACK_IMPORTED_MODULE_2__.tickStep)(start, stop, tz);
      tz = (0,d3_array__WEBPACK_IMPORTED_MODULE_3__.default)(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending_js__WEBPACK_IMPORTED_MODULE_4__.default);
    }

    return tz.map(function(value) {
      return contour(values, value);
    });
  }

  // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js
  function contour(values, value) {
    var polygons = [],
        holes = [];

    isorings(values, value, function(ring) {
      smooth(ring, values, value);
      if ((0,_area_js__WEBPACK_IMPORTED_MODULE_5__.default)(ring) > 0) polygons.push([ring]);
      else holes.push(ring);
    });

    holes.forEach(function(hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if ((0,_contains_js__WEBPACK_IMPORTED_MODULE_6__.default)((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });

    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  }

  // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js
  function isorings(values, value, callback) {
    var fragmentByStart = new Array,
        fragmentByEnd = new Array,
        x, y, t0, t1, t2, t3;

    // Special case for the first row (y = -1, t2 = t3 = 0).
    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);
    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }
    cases[t1 << 0].forEach(stitch);

    // General case for the intermediate rows.
    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);
      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }
      cases[t1 | t2 << 3].forEach(stitch);
    }

    // Special case for the last row (y = dy - 1, t0 = t1 = 0).
    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);
    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }
    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f, g;
      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];
          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];
          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function(point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];
      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }
      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function(_) {
    if (!arguments.length) return [dx, dy];
    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);
    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0,_constant_js__WEBPACK_IMPORTED_MODULE_7__.default)(_array_js__WEBPACK_IMPORTED_MODULE_8__.slice.call(_)) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_7__.default)(_), contours) : threshold;
  };

  contours.smooth = function(_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop_js__WEBPACK_IMPORTED_MODULE_9__.default, contours) : smooth === smoothLinear;
  };

  return contours;
}


/***/ }),

/***/ "./node_modules/d3-contour/src/density.js":
/*!************************************************!*\
  !*** ./node_modules/d3-contour/src/density.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/max.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-contour/src/array.js");
/* harmony import */ var _blur_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blur.js */ "./node_modules/d3-contour/src/blur.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-contour/src/constant.js");
/* harmony import */ var _contours_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contours.js */ "./node_modules/d3-contour/src/contours.js");






function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20, // blur radius
      k = 2, // log2(grid cell size)
      o = r * 3, // grid offset, to pad for blur
      n = (dx + o * 2) >> k, // grid width
      m = (dy + o * 2) >> k, // grid height
      threshold = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);

    data.forEach(function(d, i, data) {
      var xi = (+x(d, i, data) + o) >> k,
          yi = (+y(d, i, data) + o) >> k,
          wi = +weight(d, i, data);
      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    });

    // TODO Optimize.
    (0,_blur_js__WEBPACK_IMPORTED_MODULE_1__.blurX)({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    (0,_blur_js__WEBPACK_IMPORTED_MODULE_1__.blurY)({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
    (0,_blur_js__WEBPACK_IMPORTED_MODULE_1__.blurX)({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    (0,_blur_js__WEBPACK_IMPORTED_MODULE_1__.blurY)({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);
    (0,_blur_js__WEBPACK_IMPORTED_MODULE_1__.blurX)({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);
    (0,_blur_js__WEBPACK_IMPORTED_MODULE_1__.blurY)({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);

    var tz = threshold(values0);

    // Convert number of thresholds into uniform thresholds.
    if (!Array.isArray(tz)) {
      var stop = (0,d3_array__WEBPACK_IMPORTED_MODULE_2__.default)(values0);
      tz = (0,d3_array__WEBPACK_IMPORTED_MODULE_3__.tickStep)(0, stop, tz);
      tz = (0,d3_array__WEBPACK_IMPORTED_MODULE_4__.default)(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return (0,_contours_js__WEBPACK_IMPORTED_MODULE_5__.default)()
        .thresholds(tz)
        .size([n, m])
      (values0)
        .map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.
    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  }

  // TODO Optimize.
  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = (dx + o * 2) >> k;
    m = (dy + o * 2) >> k;
    return density;
  }

  density.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), density) : x;
  };

  density.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), density) : y;
  };

  density.weight = function(_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), density) : weight;
  };

  density.size = function(_) {
    if (!arguments.length) return [dx, dy];
    var _0 = +_[0], _1 = +_[1];
    if (!(_0 >= 0 && _1 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function(_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(_array_js__WEBPACK_IMPORTED_MODULE_6__.slice.call(_)) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(_), density) : threshold;
  };

  density.bandwidth = function(_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}


/***/ }),

/***/ "./node_modules/d3-contour/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-contour/src/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "contours": () => /* reexport safe */ _contours_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "contourDensity": () => /* reexport safe */ _density_js__WEBPACK_IMPORTED_MODULE_1__.default
/* harmony export */ });
/* harmony import */ var _contours_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./contours.js */ "./node_modules/d3-contour/src/contours.js");
/* harmony import */ var _density_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./density.js */ "./node_modules/d3-contour/src/density.js");




/***/ }),

/***/ "./node_modules/d3-contour/src/noop.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-contour/src/noop.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {}


/***/ }),

/***/ "./node_modules/d3-delaunay/src/delaunay.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-delaunay/src/delaunay.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Delaunay
/* harmony export */ });
/* harmony import */ var delaunator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! delaunator */ "./node_modules/delaunator/index.js");
/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path.js */ "./node_modules/d3-delaunay/src/path.js");
/* harmony import */ var _polygon_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./polygon.js */ "./node_modules/d3-delaunay/src/polygon.js");
/* harmony import */ var _voronoi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./voronoi.js */ "./node_modules/d3-delaunay/src/voronoi.js");





const tau = 2 * Math.PI, pow = Math.pow;

function pointX(p) {
  return p[0];
}

function pointY(p) {
  return p[1];
}

// A triangulation is collinear if all its triangles have a non-null area
function collinear(d) {
  const {triangles, coords} = d;
  for (let i = 0; i < triangles.length; i += 3) {
    const a = 2 * triangles[i],
          b = 2 * triangles[i + 1],
          c = 2 * triangles[i + 2],
          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])
                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);
    if (cross > 1e-10) return false;
  }
  return true;
}

function jitter(x, y, r) {
  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];
}

class Delaunay {
  static from(points, fx = pointX, fy = pointY, that) {
    return new Delaunay("length" in points
        ? flatArray(points, fx, fy, that)
        : Float64Array.from(flatIterable(points, fx, fy, that)));
  }
  constructor(points) {
    this._delaunator = new delaunator__WEBPACK_IMPORTED_MODULE_0__.default(points);
    this.inedges = new Int32Array(points.length / 2);
    this._hullIndex = new Int32Array(points.length / 2);
    this.points = this._delaunator.coords;
    this._init();
  }
  update() {
    this._delaunator.update();
    this._init();
    return this;
  }
  _init() {
    const d = this._delaunator, points = this.points;

    // check for collinear
    if (d.hull && d.hull.length > 2 && collinear(d)) {
      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)
        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors
      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],
        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],
        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);
      for (let i = 0, n = points.length / 2; i < n; ++i) {
        const p = jitter(points[2 * i], points[2 * i + 1], r);
        points[2 * i] = p[0];
        points[2 * i + 1] = p[1];
      }
      this._delaunator = new delaunator__WEBPACK_IMPORTED_MODULE_0__.default(points);
    } else {
      delete this.collinear;
    }

    const halfedges = this.halfedges = this._delaunator.halfedges;
    const hull = this.hull = this._delaunator.hull;
    const triangles = this.triangles = this._delaunator.triangles;
    const inedges = this.inedges.fill(-1);
    const hullIndex = this._hullIndex.fill(-1);

    // Compute an index from each point to an (arbitrary) incoming halfedge
    // Used to give the first neighbor of each point; for this reason,
    // on the hull we give priority to exterior halfedges
    for (let e = 0, n = halfedges.length; e < n; ++e) {
      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];
      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;
    }
    for (let i = 0, n = hull.length; i < n; ++i) {
      hullIndex[hull[i]] = i;
    }

    // degenerate case: 1 or 2 (distinct) points
    if (hull.length <= 2 && hull.length > 0) {
      this.triangles = new Int32Array(3).fill(-1);
      this.halfedges = new Int32Array(3).fill(-1);
      this.triangles[0] = hull[0];
      this.triangles[1] = hull[1];
      this.triangles[2] = hull[1];
      inedges[hull[0]] = 1;
      if (hull.length === 2) inedges[hull[1]] = 0;
    }
  }
  voronoi(bounds) {
    return new _voronoi_js__WEBPACK_IMPORTED_MODULE_1__.default(this, bounds);
  }
  *neighbors(i) {
    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;

    // degenerate case with several collinear points
    if (collinear) {
      const l = collinear.indexOf(i);
      if (l > 0) yield collinear[l - 1];
      if (l < collinear.length - 1) yield collinear[l + 1];
      return;
    }

    const e0 = inedges[i];
    if (e0 === -1) return; // coincident point
    let e = e0, p0 = -1;
    do {
      yield p0 = triangles[e];
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) return; // bad triangulation
      e = halfedges[e];
      if (e === -1) {
        const p = hull[(_hullIndex[i] + 1) % hull.length];
        if (p !== p0) yield p;
        return;
      }
    } while (e !== e0);
  }
  find(x, y, i = 0) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;
    const i0 = i;
    let c;
    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;
    return c;
  }
  _step(i, x, y) {
    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;
    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);
    let c = i;
    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);
    const e0 = inedges[i];
    let e = e0;
    do {
      let t = triangles[e];
      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);
      if (dt < dc) dc = dt, c = t;
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation
      e = halfedges[e];
      if (e === -1) {
        e = hull[(_hullIndex[i] + 1) % hull.length];
        if (e !== t) {
          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;
        }
        break;
      }
    } while (e !== e0);
    return c;
  }
  render(context) {
    const buffer = context == null ? context = new _path_js__WEBPACK_IMPORTED_MODULE_2__.default : undefined;
    const {points, halfedges, triangles} = this;
    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = triangles[i] * 2;
      const tj = triangles[j] * 2;
      context.moveTo(points[ti], points[ti + 1]);
      context.lineTo(points[tj], points[tj + 1]);
    }
    this.renderHull(context);
    return buffer && buffer.value();
  }
  renderPoints(context, r = 2) {
    const buffer = context == null ? context = new _path_js__WEBPACK_IMPORTED_MODULE_2__.default : undefined;
    const {points} = this;
    for (let i = 0, n = points.length; i < n; i += 2) {
      const x = points[i], y = points[i + 1];
      context.moveTo(x + r, y);
      context.arc(x, y, r, 0, tau);
    }
    return buffer && buffer.value();
  }
  renderHull(context) {
    const buffer = context == null ? context = new _path_js__WEBPACK_IMPORTED_MODULE_2__.default : undefined;
    const {hull, points} = this;
    const h = hull[0] * 2, n = hull.length;
    context.moveTo(points[h], points[h + 1]);
    for (let i = 1; i < n; ++i) {
      const h = 2 * hull[i];
      context.lineTo(points[h], points[h + 1]);
    }
    context.closePath();
    return buffer && buffer.value();
  }
  hullPolygon() {
    const polygon = new _polygon_js__WEBPACK_IMPORTED_MODULE_3__.default;
    this.renderHull(polygon);
    return polygon.value();
  }
  renderTriangle(i, context) {
    const buffer = context == null ? context = new _path_js__WEBPACK_IMPORTED_MODULE_2__.default : undefined;
    const {points, triangles} = this;
    const t0 = triangles[i *= 3] * 2;
    const t1 = triangles[i + 1] * 2;
    const t2 = triangles[i + 2] * 2;
    context.moveTo(points[t0], points[t0 + 1]);
    context.lineTo(points[t1], points[t1 + 1]);
    context.lineTo(points[t2], points[t2 + 1]);
    context.closePath();
    return buffer && buffer.value();
  }
  *trianglePolygons() {
    const {triangles} = this;
    for (let i = 0, n = triangles.length / 3; i < n; ++i) {
      yield this.trianglePolygon(i);
    }
  }
  trianglePolygon(i) {
    const polygon = new _polygon_js__WEBPACK_IMPORTED_MODULE_3__.default;
    this.renderTriangle(i, polygon);
    return polygon.value();
  }
}

function flatArray(points, fx, fy, that) {
  const n = points.length;
  const array = new Float64Array(n * 2);
  for (let i = 0; i < n; ++i) {
    const p = points[i];
    array[i * 2] = fx.call(that, p, i, points);
    array[i * 2 + 1] = fy.call(that, p, i, points);
  }
  return array;
}

function* flatIterable(points, fx, fy, that) {
  let i = 0;
  for (const p of points) {
    yield fx.call(that, p, i, points);
    yield fy.call(that, p, i, points);
    ++i;
  }
}


/***/ }),

/***/ "./node_modules/d3-delaunay/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-delaunay/src/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Delaunay": () => /* reexport safe */ _delaunay_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "Voronoi": () => /* reexport safe */ _voronoi_js__WEBPACK_IMPORTED_MODULE_1__.default
/* harmony export */ });
/* harmony import */ var _delaunay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delaunay.js */ "./node_modules/d3-delaunay/src/delaunay.js");
/* harmony import */ var _voronoi_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./voronoi.js */ "./node_modules/d3-delaunay/src/voronoi.js");




/***/ }),

/***/ "./node_modules/d3-delaunay/src/path.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-delaunay/src/path.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Path
/* harmony export */ });
const epsilon = 1e-6;

class Path {
  constructor() {
    this._x0 = this._y0 = // start of current subpath
    this._x1 = this._y1 = null; // end of current subpath
    this._ = "";
  }
  moveTo(x, y) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
  }
  closePath() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  }
  lineTo(x, y) {
    this._ += `L${this._x1 = +x},${this._y1 = +y}`;
  }
  arc(x, y, r) {
    x = +x, y = +y, r = +r;
    const x0 = x + r;
    const y0 = y;
    if (r < 0) throw new Error("negative radius");
    if (this._x1 === null) this._ += `M${x0},${y0}`;
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += "L" + x0 + "," + y0;
    if (!r) return;
    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;
  }
  rect(x, y, w, h) {
    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;
  }
  value() {
    return this._ || null;
  }
}


/***/ }),

/***/ "./node_modules/d3-delaunay/src/polygon.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-delaunay/src/polygon.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Polygon
/* harmony export */ });
class Polygon {
  constructor() {
    this._ = [];
  }
  moveTo(x, y) {
    this._.push([x, y]);
  }
  closePath() {
    this._.push(this._[0].slice());
  }
  lineTo(x, y) {
    this._.push([x, y]);
  }
  value() {
    return this._.length ? this._ : null;
  }
}


/***/ }),

/***/ "./node_modules/d3-delaunay/src/voronoi.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-delaunay/src/voronoi.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Voronoi
/* harmony export */ });
/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path.js */ "./node_modules/d3-delaunay/src/path.js");
/* harmony import */ var _polygon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polygon.js */ "./node_modules/d3-delaunay/src/polygon.js");



class Voronoi {
  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {
    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error("invalid bounds");
    this.delaunay = delaunay;
    this._circumcenters = new Float64Array(delaunay.points.length * 2);
    this.vectors = new Float64Array(delaunay.points.length * 2);
    this.xmax = xmax, this.xmin = xmin;
    this.ymax = ymax, this.ymin = ymin;
    this._init();
  }
  update() {
    this.delaunay.update();
    this._init();
    return this;
  }
  _init() {
    const {delaunay: {points, hull, triangles}, vectors} = this;

    // Compute circumcenters.
    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);
    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {
      const t1 = triangles[i] * 2;
      const t2 = triangles[i + 1] * 2;
      const t3 = triangles[i + 2] * 2;
      const x1 = points[t1];
      const y1 = points[t1 + 1];
      const x2 = points[t2];
      const y2 = points[t2 + 1];
      const x3 = points[t3];
      const y3 = points[t3 + 1];

      const dx = x2 - x1;
      const dy = y2 - y1;
      const ex = x3 - x1;
      const ey = y3 - y1;
      const bl = dx * dx + dy * dy;
      const cl = ex * ex + ey * ey;
      const ab = (dx * ey - dy * ex) * 2;

      if (!ab) {
        // degenerate case (collinear diagram)
        x = (x1 + x3) / 2 - 1e8 * ey;
        y = (y1 + y3) / 2 + 1e8 * ex;
      }
      else if (Math.abs(ab) < 1e-8) {
        // almost equal points (degenerate triangle)
        x = (x1 + x3) / 2;
        y = (y1 + y3) / 2;
      } else {
        const d = 1 / ab;
        x = x1 + (ey * bl - dy * cl) * d;
        y = y1 + (dx * cl - ex * bl) * d;
      }
      circumcenters[j] = x;
      circumcenters[j + 1] = y;
    }

    // Compute exterior cell rays.
    let h = hull[hull.length - 1];
    let p0, p1 = h * 4;
    let x0, x1 = points[2 * h];
    let y0, y1 = points[2 * h + 1];
    vectors.fill(0);
    for (let i = 0; i < hull.length; ++i) {
      h = hull[i];
      p0 = p1, x0 = x1, y0 = y1;
      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];
      vectors[p0 + 2] = vectors[p1] = y0 - y1;
      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;
    }
  }
  render(context) {
    const buffer = context == null ? context = new _path_js__WEBPACK_IMPORTED_MODULE_0__.default : undefined;
    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;
    if (hull.length <= 1) return null;
    for (let i = 0, n = halfedges.length; i < n; ++i) {
      const j = halfedges[i];
      if (j < i) continue;
      const ti = Math.floor(i / 3) * 2;
      const tj = Math.floor(j / 3) * 2;
      const xi = circumcenters[ti];
      const yi = circumcenters[ti + 1];
      const xj = circumcenters[tj];
      const yj = circumcenters[tj + 1];
      this._renderSegment(xi, yi, xj, yj, context);
    }
    let h0, h1 = hull[hull.length - 1];
    for (let i = 0; i < hull.length; ++i) {
      h0 = h1, h1 = hull[i];
      const t = Math.floor(inedges[h1] / 3) * 2;
      const x = circumcenters[t];
      const y = circumcenters[t + 1];
      const v = h0 * 4;
      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);
      if (p) this._renderSegment(x, y, p[0], p[1], context);
    }
    return buffer && buffer.value();
  }
  renderBounds(context) {
    const buffer = context == null ? context = new _path_js__WEBPACK_IMPORTED_MODULE_0__.default : undefined;
    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);
    return buffer && buffer.value();
  }
  renderCell(i, context) {
    const buffer = context == null ? context = new _path_js__WEBPACK_IMPORTED_MODULE_0__.default : undefined;
    const points = this._clip(i);
    if (points === null || !points.length) return;
    context.moveTo(points[0], points[1]);
    let n = points.length;
    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;
    for (let i = 2; i < n; i += 2) {
      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])
        context.lineTo(points[i], points[i + 1]);
    }
    context.closePath();
    return buffer && buffer.value();
  }
  *cellPolygons() {
    const {delaunay: {points}} = this;
    for (let i = 0, n = points.length / 2; i < n; ++i) {
      const cell = this.cellPolygon(i);
      if (cell) cell.index = i, yield cell;
    }
  }
  cellPolygon(i) {
    const polygon = new _polygon_js__WEBPACK_IMPORTED_MODULE_1__.default;
    this.renderCell(i, polygon);
    return polygon.value();
  }
  _renderSegment(x0, y0, x1, y1, context) {
    let S;
    const c0 = this._regioncode(x0, y0);
    const c1 = this._regioncode(x1, y1);
    if (c0 === 0 && c1 === 0) {
      context.moveTo(x0, y0);
      context.lineTo(x1, y1);
    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {
      context.moveTo(S[0], S[1]);
      context.lineTo(S[2], S[3]);
    }
  }
  contains(i, x, y) {
    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;
    return this.delaunay._step(i, x, y) === i;
  }
  *neighbors(i) {
    const ci = this._clip(i);
    if (ci) for (const j of this.delaunay.neighbors(i)) {
      const cj = this._clip(j);
      // find the common edge
      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {
        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {
          if (ci[ai] == cj[aj]
          && ci[ai + 1] == cj[aj + 1]
          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]
          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]
          ) {
            yield j;
            break loop;
          }
        }
      }
    }
  }
  _cell(i) {
    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;
    const e0 = inedges[i];
    if (e0 === -1) return null; // coincident point
    const points = [];
    let e = e0;
    do {
      const t = Math.floor(e / 3);
      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);
      e = e % 3 === 2 ? e - 2 : e + 1;
      if (triangles[e] !== i) break; // bad triangulation
      e = halfedges[e];
    } while (e !== e0 && e !== -1);
    return points;
  }
  _clip(i) {
    // degenerate case (1 valid point: return the box)
    if (i === 0 && this.delaunay.hull.length === 1) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }
    const points = this._cell(i);
    if (points === null) return null;
    const {vectors: V} = this;
    const v = i * 4;
    return V[v] || V[v + 1]
        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])
        : this._clipFinite(i, points);
  }
  _clipFinite(i, points) {
    const n = points.length;
    let P = null;
    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];
    let c0, c1 = this._regioncode(x1, y1);
    let e0, e1;
    for (let j = 0; j < n; j += 2) {
      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];
      c0 = c1, c1 = this._regioncode(x1, y1);
      if (c0 === 0 && c1 === 0) {
        e0 = e1, e1 = 0;
        if (P) P.push(x1, y1);
        else P = [x1, y1];
      } else {
        let S, sx0, sy0, sx1, sy1;
        if (c0 === 0) {
          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;
          [sx0, sy0, sx1, sy1] = S;
        } else {
          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;
          [sx1, sy1, sx0, sy0] = S;
          e0 = e1, e1 = this._edgecode(sx0, sy0);
          if (e0 && e1) this._edge(i, e0, e1, P, P.length);
          if (P) P.push(sx0, sy0);
          else P = [sx0, sy0];
        }
        e0 = e1, e1 = this._edgecode(sx1, sy1);
        if (e0 && e1) this._edge(i, e0, e1, P, P.length);
        if (P) P.push(sx1, sy1);
        else P = [sx1, sy1];
      }
    }
    if (P) {
      e0 = e1, e1 = this._edgecode(P[0], P[1]);
      if (e0 && e1) this._edge(i, e0, e1, P, P.length);
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
    }
    return P;
  }
  _clipSegment(x0, y0, x1, y1, c0, c1) {
    while (true) {
      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];
      if (c0 & c1) return null;
      let x, y, c = c0 || c1;
      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;
      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;
      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;
      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;
      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);
      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);
    }
  }
  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {
    let P = Array.from(points), p;
    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);
    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);
    if (P = this._clipFinite(i, P)) {
      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {
        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);
        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;
      }
    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];
    }
    return P;
  }
  _edge(i, e0, e1, P, j) {
    while (e0 !== e1) {
      let x, y;
      switch (e0) {
        case 0b0101: e0 = 0b0100; continue; // top-left
        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top
        case 0b0110: e0 = 0b0010; continue; // top-right
        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right
        case 0b1010: e0 = 0b1000; continue; // bottom-right
        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom
        case 0b1001: e0 = 0b0001; continue; // bottom-left
        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left
      }
      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {
        P.splice(j, 0, x, y), j += 2;
      }
    }
    if (P.length > 4) {
      for (let i = 0; i < P.length; i+= 2) {
        const j = (i + 2) % P.length, k = (i + 4) % P.length;
        if (P[i] === P[j] && P[j] === P[k]
        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])
          P.splice(j, 2), i -= 2;
      }
    }
    return j;
  }
  _project(x0, y0, vx, vy) {
    let t = Infinity, c, x, y;
    if (vy < 0) { // top
      if (y0 <= this.ymin) return null;
      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;
    } else if (vy > 0) { // bottom
      if (y0 >= this.ymax) return null;
      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;
    }
    if (vx > 0) { // right
      if (x0 >= this.xmax) return null;
      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;
    } else if (vx < 0) { // left
      if (x0 <= this.xmin) return null;
      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;
    }
    return [x, y];
  }
  _edgecode(x, y) {
    return (x === this.xmin ? 0b0001
        : x === this.xmax ? 0b0010 : 0b0000)
        | (y === this.ymin ? 0b0100
        : y === this.ymax ? 0b1000 : 0b0000);
  }
  _regioncode(x, y) {
    return (x < this.xmin ? 0b0001
        : x > this.xmax ? 0b0010 : 0b0000)
        | (y < this.ymin ? 0b0100
        : y > this.ymax ? 0b1000 : 0b0000);
  }
}


/***/ }),

/***/ "./node_modules/d3-dispatch/src/dispatch.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-dispatch/src/dispatch.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var noop = {value: () => {}};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {type: t, name: name};
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length;

    // If no callback was specified, return the callback of the given type and name.
    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
      return;
    }

    // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.
    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function() {
    var copy = {}, _ = this._;
    for (var t in _) copy[t] = _[t].slice();
    return new Dispatch(copy);
  },
  call: function(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }
  if (callback != null) type.push({name: name, value: callback});
  return type;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dispatch);


/***/ }),

/***/ "./node_modules/d3-dispatch/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-dispatch/src/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dispatch": () => /* reexport safe */ _dispatch_js__WEBPACK_IMPORTED_MODULE_0__.default
/* harmony export */ });
/* harmony import */ var _dispatch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dispatch.js */ "./node_modules/d3-dispatch/src/dispatch.js");



/***/ }),

/***/ "./node_modules/d3-drag/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-drag/src/constant.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);


/***/ }),

/***/ "./node_modules/d3-drag/src/drag.js":
/*!******************************************!*\
  !*** ./node_modules/d3-drag/src/drag.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/select.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/pointer.js");
/* harmony import */ var _nodrag_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nodrag.js */ "./node_modules/d3-drag/src/nodrag.js");
/* harmony import */ var _noevent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./noevent.js */ "./node_modules/d3-drag/src/noevent.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-drag/src/constant.js");
/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./event.js */ "./node_modules/d3-drag/src/event.js");







// Ignore right-click, since that should open the context menu.
function defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(event, d) {
  return d == null ? {x: event.x, y: event.y} : d;
}

function defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_0__.default)("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection
        .on("mousedown.drag", mousedowned)
      .filter(touchable)
        .on("touchstart.drag", touchstarted)
        .on("touchmove.drag", touchmoved)
        .on("touchend.drag touchcancel.drag", touchended)
        .style("touch-action", "none")
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned(event, d) {
    if (touchending || !filter.call(this, event, d)) return;
    var gesture = beforestart(this, container.call(this, event, d), event, d, "mouse");
    if (!gesture) return;
    (0,d3_selection__WEBPACK_IMPORTED_MODULE_1__.default)(event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    (0,_nodrag_js__WEBPACK_IMPORTED_MODULE_2__.default)(event.view);
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.nopropagation)(event);
    mousemoving = false;
    mousedownx = event.clientX;
    mousedowny = event.clientY;
    gesture("start", event);
  }

  function mousemoved(event) {
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.default)(event);
    if (!mousemoving) {
      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }
    gestures.mouse("drag", event);
  }

  function mouseupped(event) {
    (0,d3_selection__WEBPACK_IMPORTED_MODULE_1__.default)(event.view).on("mousemove.drag mouseup.drag", null);
    (0,_nodrag_js__WEBPACK_IMPORTED_MODULE_2__.yesdrag)(event.view, mousemoving);
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.default)(event);
    gestures.mouse("end", event);
  }

  function touchstarted(event, d) {
    if (!filter.call(this, event, d)) return;
    var touches = event.changedTouches,
        c = container.call(this, event, d),
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {
        (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.nopropagation)(event);
        gesture("start", event, touches[i]);
      }
    }
  }

  function touchmoved(event) {
    var touches = event.changedTouches,
        n = touches.length, i, gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.default)(event);
        gesture("drag", event, touches[i]);
      }
    }
  }

  function touchended(event) {
    var touches = event.changedTouches,
        n = touches.length, i, gesture;

    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0,_noevent_js__WEBPACK_IMPORTED_MODULE_3__.nopropagation)(event);
        gesture("end", event, touches[i]);
      }
    }
  }

  function beforestart(that, container, event, d, identifier, touch) {
    var dispatch = listeners.copy(),
        p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_4__.default)(touch || event, container), dx, dy,
        s;

    if ((s = subject.call(that, new _event_js__WEBPACK_IMPORTED_MODULE_5__.default("beforestart", {
        sourceEvent: event,
        target: drag,
        identifier,
        active,
        x: p[0],
        y: p[1],
        dx: 0,
        dy: 0,
        dispatch
      }), d)) == null) return;

    dx = s.x - p[0] || 0;
    dy = s.y - p[1] || 0;

    return function gesture(type, event, touch) {
      var p0 = p, n;
      switch (type) {
        case "start": gestures[identifier] = gesture, n = active++; break;
        case "end": delete gestures[identifier], --active; // nobreak
        case "drag": p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_4__.default)(touch || event, container), n = active; break;
      }
      dispatch.call(
        type,
        that,
        new _event_js__WEBPACK_IMPORTED_MODULE_5__.default(type, {
          sourceEvent: event,
          subject: s,
          target: drag,
          identifier,
          active: n,
          x: p[0] + dx,
          y: p[1] + dy,
          dx: p[0] - p0[0],
          dy: p[1] - p0[1],
          dispatch
        }),
        d
      );
    };
  }

  drag.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)(!!_), drag) : filter;
  };

  drag.container = function(_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)(_), drag) : container;
  };

  drag.subject = function(_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)(_), drag) : subject;
  };

  drag.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_6__.default)(!!_), drag) : touchable;
  };

  drag.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}


/***/ }),

/***/ "./node_modules/d3-drag/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/event.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ DragEvent
/* harmony export */ });
function DragEvent(type, {
  sourceEvent,
  subject,
  target,
  identifier,
  active,
  x, y, dx, dy,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    subject: {value: subject, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    identifier: {value: identifier, enumerable: true, configurable: true},
    active: {value: active, enumerable: true, configurable: true},
    x: {value: x, enumerable: true, configurable: true},
    y: {value: y, enumerable: true, configurable: true},
    dx: {value: dx, enumerable: true, configurable: true},
    dy: {value: dy, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}

DragEvent.prototype.on = function() {
  var value = this._.on.apply(this._, arguments);
  return value === this._ ? this : value;
};


/***/ }),

/***/ "./node_modules/d3-drag/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-drag/src/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "drag": () => /* reexport safe */ _drag_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "dragDisable": () => /* reexport safe */ _nodrag_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "dragEnable": () => /* reexport safe */ _nodrag_js__WEBPACK_IMPORTED_MODULE_1__.yesdrag
/* harmony export */ });
/* harmony import */ var _drag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drag.js */ "./node_modules/d3-drag/src/drag.js");
/* harmony import */ var _nodrag_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nodrag.js */ "./node_modules/d3-drag/src/nodrag.js");




/***/ }),

/***/ "./node_modules/d3-drag/src/nodrag.js":
/*!********************************************!*\
  !*** ./node_modules/d3-drag/src/nodrag.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "yesdrag": () => /* binding */ yesdrag
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/select.js");
/* harmony import */ var _noevent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noevent.js */ "./node_modules/d3-drag/src/noevent.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(view) {
  var root = view.document.documentElement,
      selection = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.default)(view).on("dragstart.drag", _noevent_js__WEBPACK_IMPORTED_MODULE_1__.default, true);
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent_js__WEBPACK_IMPORTED_MODULE_1__.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.default)(view).on("dragstart.drag", null);
  if (noclick) {
    selection.on("click.drag", _noevent_js__WEBPACK_IMPORTED_MODULE_1__.default, true);
    setTimeout(function() { selection.on("click.drag", null); }, 0);
  }
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}


/***/ }),

/***/ "./node_modules/d3-drag/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-drag/src/noevent.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nopropagation": () => /* binding */ nopropagation,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}


/***/ }),

/***/ "./node_modules/d3-dsv/src/autoType.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-dsv/src/autoType.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ autoType
/* harmony export */ });
function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(), number, m;
    if (!value) value = null;
    else if (value === "true") value = true;
    else if (value === "false") value = false;
    else if (value === "NaN") value = NaN;
    else if (!isNaN(number = +value)) value = number;
    else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
      value = new Date(value);
    }
    else continue;
    object[key] = value;
  }
  return object;
}

// https://github.com/d3/d3-dsv/issues/45
const fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();

/***/ }),

/***/ "./node_modules/d3-dsv/src/csv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/csv.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "csvParse": () => /* binding */ csvParse,
/* harmony export */   "csvParseRows": () => /* binding */ csvParseRows,
/* harmony export */   "csvFormat": () => /* binding */ csvFormat,
/* harmony export */   "csvFormatBody": () => /* binding */ csvFormatBody,
/* harmony export */   "csvFormatRows": () => /* binding */ csvFormatRows,
/* harmony export */   "csvFormatRow": () => /* binding */ csvFormatRow,
/* harmony export */   "csvFormatValue": () => /* binding */ csvFormatValue
/* harmony export */ });
/* harmony import */ var _dsv_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv.js */ "./node_modules/d3-dsv/src/dsv.js");


var csv = (0,_dsv_js__WEBPACK_IMPORTED_MODULE_0__.default)(",");

var csvParse = csv.parse;
var csvParseRows = csv.parseRows;
var csvFormat = csv.format;
var csvFormatBody = csv.formatBody;
var csvFormatRows = csv.formatRows;
var csvFormatRow = csv.formatRow;
var csvFormatValue = csv.formatValue;


/***/ }),

/***/ "./node_modules/d3-dsv/src/dsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/dsv.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function(name, i) {
    return JSON.stringify(name) + ": d[" + i + "] || \"\"";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function(row, i) {
    return f(object(row), i, columns);
  };
}

// Compute unique columns in order of discovery.
function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];

  rows.forEach(function(row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });

  return columns;
}

function pad(value, width) {
  var s = value + "", length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6)
    : year > 9999 ? "+" + pad(year, 6)
    : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date"
      : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2)
      + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z"
      : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z"
      : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z"
      : "");
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert, columns, rows = parseRows(text, function(row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [], // output rows
        N = text.length,
        I = 0, // current character index
        n = 0, // current line number
        t, // current token
        eof = N <= 0, // current token followed by EOF?
        eol = false; // current token followed by EOL?

    // Strip the trailing newline.
    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL;

      // Unescape quotes.
      var i, j = I, c;
      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);
        if ((i = I) >= N) eof = true;
        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;
        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      }

      // Find next delimiter or newline.
      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;
        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }
        else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      }

      // Return last token before EOF.
      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];
      while (t !== EOL && t !== EOF) row.push(t), t = token();
      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function(row) {
      return columns.map(function(column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? ""
        : value instanceof Date ? formatDate(value)
        : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\""
        : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows,
    formatRow: formatRow,
    formatValue: formatValue
  };
}


/***/ }),

/***/ "./node_modules/d3-dsv/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-dsv/src/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dsvFormat": () => /* reexport safe */ _dsv_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "csvParse": () => /* reexport safe */ _csv_js__WEBPACK_IMPORTED_MODULE_1__.csvParse,
/* harmony export */   "csvParseRows": () => /* reexport safe */ _csv_js__WEBPACK_IMPORTED_MODULE_1__.csvParseRows,
/* harmony export */   "csvFormat": () => /* reexport safe */ _csv_js__WEBPACK_IMPORTED_MODULE_1__.csvFormat,
/* harmony export */   "csvFormatBody": () => /* reexport safe */ _csv_js__WEBPACK_IMPORTED_MODULE_1__.csvFormatBody,
/* harmony export */   "csvFormatRows": () => /* reexport safe */ _csv_js__WEBPACK_IMPORTED_MODULE_1__.csvFormatRows,
/* harmony export */   "csvFormatRow": () => /* reexport safe */ _csv_js__WEBPACK_IMPORTED_MODULE_1__.csvFormatRow,
/* harmony export */   "csvFormatValue": () => /* reexport safe */ _csv_js__WEBPACK_IMPORTED_MODULE_1__.csvFormatValue,
/* harmony export */   "tsvParse": () => /* reexport safe */ _tsv_js__WEBPACK_IMPORTED_MODULE_2__.tsvParse,
/* harmony export */   "tsvParseRows": () => /* reexport safe */ _tsv_js__WEBPACK_IMPORTED_MODULE_2__.tsvParseRows,
/* harmony export */   "tsvFormat": () => /* reexport safe */ _tsv_js__WEBPACK_IMPORTED_MODULE_2__.tsvFormat,
/* harmony export */   "tsvFormatBody": () => /* reexport safe */ _tsv_js__WEBPACK_IMPORTED_MODULE_2__.tsvFormatBody,
/* harmony export */   "tsvFormatRows": () => /* reexport safe */ _tsv_js__WEBPACK_IMPORTED_MODULE_2__.tsvFormatRows,
/* harmony export */   "tsvFormatRow": () => /* reexport safe */ _tsv_js__WEBPACK_IMPORTED_MODULE_2__.tsvFormatRow,
/* harmony export */   "tsvFormatValue": () => /* reexport safe */ _tsv_js__WEBPACK_IMPORTED_MODULE_2__.tsvFormatValue,
/* harmony export */   "autoType": () => /* reexport safe */ _autoType_js__WEBPACK_IMPORTED_MODULE_3__.default
/* harmony export */ });
/* harmony import */ var _dsv_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv.js */ "./node_modules/d3-dsv/src/dsv.js");
/* harmony import */ var _csv_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csv.js */ "./node_modules/d3-dsv/src/csv.js");
/* harmony import */ var _tsv_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tsv.js */ "./node_modules/d3-dsv/src/tsv.js");
/* harmony import */ var _autoType_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./autoType.js */ "./node_modules/d3-dsv/src/autoType.js");






/***/ }),

/***/ "./node_modules/d3-dsv/src/tsv.js":
/*!****************************************!*\
  !*** ./node_modules/d3-dsv/src/tsv.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tsvParse": () => /* binding */ tsvParse,
/* harmony export */   "tsvParseRows": () => /* binding */ tsvParseRows,
/* harmony export */   "tsvFormat": () => /* binding */ tsvFormat,
/* harmony export */   "tsvFormatBody": () => /* binding */ tsvFormatBody,
/* harmony export */   "tsvFormatRows": () => /* binding */ tsvFormatRows,
/* harmony export */   "tsvFormatRow": () => /* binding */ tsvFormatRow,
/* harmony export */   "tsvFormatValue": () => /* binding */ tsvFormatValue
/* harmony export */ });
/* harmony import */ var _dsv_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dsv.js */ "./node_modules/d3-dsv/src/dsv.js");


var tsv = (0,_dsv_js__WEBPACK_IMPORTED_MODULE_0__.default)("\t");

var tsvParse = tsv.parse;
var tsvParseRows = tsv.parseRows;
var tsvFormat = tsv.format;
var tsvFormatBody = tsv.formatBody;
var tsvFormatRows = tsv.formatRows;
var tsvFormatRow = tsv.formatRow;
var tsvFormatValue = tsv.formatValue;


/***/ }),

/***/ "./node_modules/d3-ease/src/back.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/back.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "backIn": () => /* binding */ backIn,
/* harmony export */   "backOut": () => /* binding */ backOut,
/* harmony export */   "backInOut": () => /* binding */ backInOut
/* harmony export */ });
var overshoot = 1.70158;

var backIn = (function custom(s) {
  s = +s;

  function backIn(t) {
    return (t = +t) * t * (s * (t - 1) + t);
  }

  backIn.overshoot = custom;

  return backIn;
})(overshoot);

var backOut = (function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((t + 1) * s + t) + 1;
  }

  backOut.overshoot = custom;

  return backOut;
})(overshoot);

var backInOut = (function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;

  return backInOut;
})(overshoot);


/***/ }),

/***/ "./node_modules/d3-ease/src/bounce.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/bounce.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bounceIn": () => /* binding */ bounceIn,
/* harmony export */   "bounceOut": () => /* binding */ bounceOut,
/* harmony export */   "bounceInOut": () => /* binding */ bounceInOut
/* harmony export */ });
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}


/***/ }),

/***/ "./node_modules/d3-ease/src/circle.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/circle.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "circleIn": () => /* binding */ circleIn,
/* harmony export */   "circleOut": () => /* binding */ circleOut,
/* harmony export */   "circleInOut": () => /* binding */ circleInOut
/* harmony export */ });
function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}


/***/ }),

/***/ "./node_modules/d3-ease/src/cubic.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/cubic.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cubicIn": () => /* binding */ cubicIn,
/* harmony export */   "cubicOut": () => /* binding */ cubicOut,
/* harmony export */   "cubicInOut": () => /* binding */ cubicInOut
/* harmony export */ });
function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}


/***/ }),

/***/ "./node_modules/d3-ease/src/elastic.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-ease/src/elastic.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "elasticIn": () => /* binding */ elasticIn,
/* harmony export */   "elasticOut": () => /* binding */ elasticOut,
/* harmony export */   "elasticInOut": () => /* binding */ elasticInOut
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-ease/src/math.js");


var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = (function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(-(--t)) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function(a) { return custom(a, p * tau); };
  elasticIn.period = function(p) { return custom(a, p); };

  return elasticIn;
})(amplitude, period);

var elasticOut = (function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(t = +t) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function(a) { return custom(a, p * tau); };
  elasticOut.period = function(p) { return custom(a, p); };

  return elasticOut;
})(amplitude, period);

var elasticInOut = (function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0
        ? a * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(-t) * Math.sin((s - t) / p)
        : 2 - a * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };
  elasticInOut.period = function(p) { return custom(a, p); };

  return elasticInOut;
})(amplitude, period);


/***/ }),

/***/ "./node_modules/d3-ease/src/exp.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/exp.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "expIn": () => /* binding */ expIn,
/* harmony export */   "expOut": () => /* binding */ expOut,
/* harmony export */   "expInOut": () => /* binding */ expInOut
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-ease/src/math.js");


function expIn(t) {
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(1 - +t);
}

function expOut(t) {
  return 1 - (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(1 - t) : 2 - (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tpmt)(t - 1)) / 2;
}


/***/ }),

/***/ "./node_modules/d3-ease/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-ease/src/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "easeLinear": () => /* reexport safe */ _linear_js__WEBPACK_IMPORTED_MODULE_0__.linear,
/* harmony export */   "easeQuad": () => /* reexport safe */ _quad_js__WEBPACK_IMPORTED_MODULE_1__.quadInOut,
/* harmony export */   "easeQuadIn": () => /* reexport safe */ _quad_js__WEBPACK_IMPORTED_MODULE_1__.quadIn,
/* harmony export */   "easeQuadOut": () => /* reexport safe */ _quad_js__WEBPACK_IMPORTED_MODULE_1__.quadOut,
/* harmony export */   "easeQuadInOut": () => /* reexport safe */ _quad_js__WEBPACK_IMPORTED_MODULE_1__.quadInOut,
/* harmony export */   "easeCubic": () => /* reexport safe */ _cubic_js__WEBPACK_IMPORTED_MODULE_2__.cubicInOut,
/* harmony export */   "easeCubicIn": () => /* reexport safe */ _cubic_js__WEBPACK_IMPORTED_MODULE_2__.cubicIn,
/* harmony export */   "easeCubicOut": () => /* reexport safe */ _cubic_js__WEBPACK_IMPORTED_MODULE_2__.cubicOut,
/* harmony export */   "easeCubicInOut": () => /* reexport safe */ _cubic_js__WEBPACK_IMPORTED_MODULE_2__.cubicInOut,
/* harmony export */   "easePoly": () => /* reexport safe */ _poly_js__WEBPACK_IMPORTED_MODULE_3__.polyInOut,
/* harmony export */   "easePolyIn": () => /* reexport safe */ _poly_js__WEBPACK_IMPORTED_MODULE_3__.polyIn,
/* harmony export */   "easePolyOut": () => /* reexport safe */ _poly_js__WEBPACK_IMPORTED_MODULE_3__.polyOut,
/* harmony export */   "easePolyInOut": () => /* reexport safe */ _poly_js__WEBPACK_IMPORTED_MODULE_3__.polyInOut,
/* harmony export */   "easeSin": () => /* reexport safe */ _sin_js__WEBPACK_IMPORTED_MODULE_4__.sinInOut,
/* harmony export */   "easeSinIn": () => /* reexport safe */ _sin_js__WEBPACK_IMPORTED_MODULE_4__.sinIn,
/* harmony export */   "easeSinOut": () => /* reexport safe */ _sin_js__WEBPACK_IMPORTED_MODULE_4__.sinOut,
/* harmony export */   "easeSinInOut": () => /* reexport safe */ _sin_js__WEBPACK_IMPORTED_MODULE_4__.sinInOut,
/* harmony export */   "easeExp": () => /* reexport safe */ _exp_js__WEBPACK_IMPORTED_MODULE_5__.expInOut,
/* harmony export */   "easeExpIn": () => /* reexport safe */ _exp_js__WEBPACK_IMPORTED_MODULE_5__.expIn,
/* harmony export */   "easeExpOut": () => /* reexport safe */ _exp_js__WEBPACK_IMPORTED_MODULE_5__.expOut,
/* harmony export */   "easeExpInOut": () => /* reexport safe */ _exp_js__WEBPACK_IMPORTED_MODULE_5__.expInOut,
/* harmony export */   "easeCircle": () => /* reexport safe */ _circle_js__WEBPACK_IMPORTED_MODULE_6__.circleInOut,
/* harmony export */   "easeCircleIn": () => /* reexport safe */ _circle_js__WEBPACK_IMPORTED_MODULE_6__.circleIn,
/* harmony export */   "easeCircleOut": () => /* reexport safe */ _circle_js__WEBPACK_IMPORTED_MODULE_6__.circleOut,
/* harmony export */   "easeCircleInOut": () => /* reexport safe */ _circle_js__WEBPACK_IMPORTED_MODULE_6__.circleInOut,
/* harmony export */   "easeBounce": () => /* reexport safe */ _bounce_js__WEBPACK_IMPORTED_MODULE_7__.bounceOut,
/* harmony export */   "easeBounceIn": () => /* reexport safe */ _bounce_js__WEBPACK_IMPORTED_MODULE_7__.bounceIn,
/* harmony export */   "easeBounceOut": () => /* reexport safe */ _bounce_js__WEBPACK_IMPORTED_MODULE_7__.bounceOut,
/* harmony export */   "easeBounceInOut": () => /* reexport safe */ _bounce_js__WEBPACK_IMPORTED_MODULE_7__.bounceInOut,
/* harmony export */   "easeBack": () => /* reexport safe */ _back_js__WEBPACK_IMPORTED_MODULE_8__.backInOut,
/* harmony export */   "easeBackIn": () => /* reexport safe */ _back_js__WEBPACK_IMPORTED_MODULE_8__.backIn,
/* harmony export */   "easeBackOut": () => /* reexport safe */ _back_js__WEBPACK_IMPORTED_MODULE_8__.backOut,
/* harmony export */   "easeBackInOut": () => /* reexport safe */ _back_js__WEBPACK_IMPORTED_MODULE_8__.backInOut,
/* harmony export */   "easeElastic": () => /* reexport safe */ _elastic_js__WEBPACK_IMPORTED_MODULE_9__.elasticOut,
/* harmony export */   "easeElasticIn": () => /* reexport safe */ _elastic_js__WEBPACK_IMPORTED_MODULE_9__.elasticIn,
/* harmony export */   "easeElasticOut": () => /* reexport safe */ _elastic_js__WEBPACK_IMPORTED_MODULE_9__.elasticOut,
/* harmony export */   "easeElasticInOut": () => /* reexport safe */ _elastic_js__WEBPACK_IMPORTED_MODULE_9__.elasticInOut
/* harmony export */ });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-ease/src/linear.js");
/* harmony import */ var _quad_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quad.js */ "./node_modules/d3-ease/src/quad.js");
/* harmony import */ var _cubic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubic.js */ "./node_modules/d3-ease/src/cubic.js");
/* harmony import */ var _poly_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./poly.js */ "./node_modules/d3-ease/src/poly.js");
/* harmony import */ var _sin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sin.js */ "./node_modules/d3-ease/src/sin.js");
/* harmony import */ var _exp_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exp.js */ "./node_modules/d3-ease/src/exp.js");
/* harmony import */ var _circle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./circle.js */ "./node_modules/d3-ease/src/circle.js");
/* harmony import */ var _bounce_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bounce.js */ "./node_modules/d3-ease/src/bounce.js");
/* harmony import */ var _back_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./back.js */ "./node_modules/d3-ease/src/back.js");
/* harmony import */ var _elastic_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./elastic.js */ "./node_modules/d3-ease/src/elastic.js");





















/***/ }),

/***/ "./node_modules/d3-ease/src/linear.js":
/*!********************************************!*\
  !*** ./node_modules/d3-ease/src/linear.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "linear": () => /* binding */ linear
/* harmony export */ });
const linear = t => +t;


/***/ }),

/***/ "./node_modules/d3-ease/src/math.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/math.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "tpmt": () => /* binding */ tpmt
/* harmony export */ });
// tpmt is two power minus ten times t scaled to [0,1]
function tpmt(x) {
  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;
}


/***/ }),

/***/ "./node_modules/d3-ease/src/poly.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/poly.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "polyIn": () => /* binding */ polyIn,
/* harmony export */   "polyOut": () => /* binding */ polyOut,
/* harmony export */   "polyInOut": () => /* binding */ polyInOut
/* harmony export */ });
var exponent = 3;

var polyIn = (function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;

  return polyIn;
})(exponent);

var polyOut = (function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;

  return polyOut;
})(exponent);

var polyInOut = (function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;

  return polyInOut;
})(exponent);


/***/ }),

/***/ "./node_modules/d3-ease/src/quad.js":
/*!******************************************!*\
  !*** ./node_modules/d3-ease/src/quad.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "quadIn": () => /* binding */ quadIn,
/* harmony export */   "quadOut": () => /* binding */ quadOut,
/* harmony export */   "quadInOut": () => /* binding */ quadInOut
/* harmony export */ });
function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}


/***/ }),

/***/ "./node_modules/d3-ease/src/sin.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-ease/src/sin.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sinIn": () => /* binding */ sinIn,
/* harmony export */   "sinOut": () => /* binding */ sinOut,
/* harmony export */   "sinInOut": () => /* binding */ sinInOut
/* harmony export */ });
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}


/***/ }),

/***/ "./node_modules/d3-fetch/src/blob.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/blob.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(input, init) {
  return fetch(input, init).then(responseBlob);
}


/***/ }),

/***/ "./node_modules/d3-fetch/src/buffer.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-fetch/src/buffer.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}


/***/ }),

/***/ "./node_modules/d3-fetch/src/dsv.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/dsv.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ dsv,
/* harmony export */   "csv": () => /* binding */ csv,
/* harmony export */   "tsv": () => /* binding */ tsv
/* harmony export */ });
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/dsv.js");
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/csv.js");
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/tsv.js");
/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text.js */ "./node_modules/d3-fetch/src/text.js");



function dsvParse(parse) {
  return function(input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return (0,_text_js__WEBPACK_IMPORTED_MODULE_0__.default)(input, init).then(function(response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = (0,d3_dsv__WEBPACK_IMPORTED_MODULE_1__.default)(delimiter);
  return (0,_text_js__WEBPACK_IMPORTED_MODULE_0__.default)(input, init).then(function(response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_2__.csvParse);
var tsv = dsvParse(d3_dsv__WEBPACK_IMPORTED_MODULE_3__.tsvParse);


/***/ }),

/***/ "./node_modules/d3-fetch/src/image.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/image.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(input, init) {
  return new Promise(function(resolve, reject) {
    var image = new Image;
    for (var key in init) image[key] = init[key];
    image.onerror = reject;
    image.onload = function() { resolve(image); };
    image.src = input;
  });
}


/***/ }),

/***/ "./node_modules/d3-fetch/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-fetch/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blob": () => /* reexport safe */ _blob_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "buffer": () => /* reexport safe */ _buffer_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "dsv": () => /* reexport safe */ _dsv_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "csv": () => /* reexport safe */ _dsv_js__WEBPACK_IMPORTED_MODULE_2__.csv,
/* harmony export */   "tsv": () => /* reexport safe */ _dsv_js__WEBPACK_IMPORTED_MODULE_2__.tsv,
/* harmony export */   "image": () => /* reexport safe */ _image_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "json": () => /* reexport safe */ _json_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "text": () => /* reexport safe */ _text_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "xml": () => /* reexport safe */ _xml_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "html": () => /* reexport safe */ _xml_js__WEBPACK_IMPORTED_MODULE_6__.html,
/* harmony export */   "svg": () => /* reexport safe */ _xml_js__WEBPACK_IMPORTED_MODULE_6__.svg
/* harmony export */ });
/* harmony import */ var _blob_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blob.js */ "./node_modules/d3-fetch/src/blob.js");
/* harmony import */ var _buffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer.js */ "./node_modules/d3-fetch/src/buffer.js");
/* harmony import */ var _dsv_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsv.js */ "./node_modules/d3-fetch/src/dsv.js");
/* harmony import */ var _image_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./image.js */ "./node_modules/d3-fetch/src/image.js");
/* harmony import */ var _json_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./json.js */ "./node_modules/d3-fetch/src/json.js");
/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text.js */ "./node_modules/d3-fetch/src/text.js");
/* harmony import */ var _xml_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./xml.js */ "./node_modules/d3-fetch/src/xml.js");









/***/ }),

/***/ "./node_modules/d3-fetch/src/json.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/json.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  if (response.status === 204 || response.status === 205) return;
  return response.json();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(input, init) {
  return fetch(input, init).then(responseJson);
}


/***/ }),

/***/ "./node_modules/d3-fetch/src/text.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-fetch/src/text.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(input, init) {
  return fetch(input, init).then(responseText);
}


/***/ }),

/***/ "./node_modules/d3-fetch/src/xml.js":
/*!******************************************!*\
  !*** ./node_modules/d3-fetch/src/xml.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "html": () => /* binding */ html,
/* harmony export */   "svg": () => /* binding */ svg
/* harmony export */ });
/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text.js */ "./node_modules/d3-fetch/src/text.js");


function parser(type) {
  return (input, init) => (0,_text_js__WEBPACK_IMPORTED_MODULE_0__.default)(input, init)
    .then(text => (new DOMParser).parseFromString(text, type));
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parser("application/xml"));

var html = parser("text/html");

var svg = parser("image/svg+xml");


/***/ }),

/***/ "./node_modules/d3-force/src/center.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/center.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, y) {
  var nodes, strength = 1;

  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function(_) {
    nodes = _;
  };

  force.x = function(_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function(_) {
    return arguments.length ? (y = +_, force) : y;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  return force;
}


/***/ }),

/***/ "./node_modules/d3-force/src/collide.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-force/src/collide.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/quadtree.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jiggle.js */ "./node_modules/d3-force/src/jiggle.js");




function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(radius) {
  var nodes,
      radii,
      random,
      strength = 1,
      iterations = 1;

  if (typeof radius !== "function") radius = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(radius == null ? 1 : +radius);

  function force() {
    var i, n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = (0,d3_quadtree__WEBPACK_IMPORTED_MODULE_1__.default)(nodes, x, y).visitAfter(prepare);
      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data, rj = quad.r, r = ri + rj;
      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;
          if (l < r * r) {
            if (x === 0) x = (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_2__.default)(random), l += x * x;
            if (y === 0) y = (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_2__.default)(random), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }
        return;
      }
      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];
    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    radii = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : radius;
  };

  return force;
}


/***/ }),

/***/ "./node_modules/d3-force/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/constant.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-force/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-force/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "forceCenter": () => /* reexport safe */ _center_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "forceCollide": () => /* reexport safe */ _collide_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "forceLink": () => /* reexport safe */ _link_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "forceManyBody": () => /* reexport safe */ _manyBody_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "forceRadial": () => /* reexport safe */ _radial_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "forceSimulation": () => /* reexport safe */ _simulation_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "forceX": () => /* reexport safe */ _x_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "forceY": () => /* reexport safe */ _y_js__WEBPACK_IMPORTED_MODULE_7__.default
/* harmony export */ });
/* harmony import */ var _center_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./center.js */ "./node_modules/d3-force/src/center.js");
/* harmony import */ var _collide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collide.js */ "./node_modules/d3-force/src/collide.js");
/* harmony import */ var _link_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./link.js */ "./node_modules/d3-force/src/link.js");
/* harmony import */ var _manyBody_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./manyBody.js */ "./node_modules/d3-force/src/manyBody.js");
/* harmony import */ var _radial_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./radial.js */ "./node_modules/d3-force/src/radial.js");
/* harmony import */ var _simulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./simulation.js */ "./node_modules/d3-force/src/simulation.js");
/* harmony import */ var _x_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./x.js */ "./node_modules/d3-force/src/x.js");
/* harmony import */ var _y_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./y.js */ "./node_modules/d3-force/src/y.js");










/***/ }),

/***/ "./node_modules/d3-force/src/jiggle.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/jiggle.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(random) {
  return (random() - 0.5) * 1e-6;
}


/***/ }),

/***/ "./node_modules/d3-force/src/lcg.js":
/*!******************************************!*\
  !*** ./node_modules/d3-force/src/lcg.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const a = 1664525;
const c = 1013904223;
const m = 4294967296; // 2^32

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  let s = 1;
  return () => (s = (a * s + c) % m) / m;
}


/***/ }),

/***/ "./node_modules/d3-force/src/link.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-force/src/link.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jiggle.js */ "./node_modules/d3-force/src/jiggle.js");



function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("node not found: " + nodeId);
  return node;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(30),
      distances,
      nodes,
      count,
      bias,
      random,
      iterations = 1;

  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_1__.default)(random);
        y = target.y + target.vy - source.y - source.vy || (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_1__.default)(random);
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;

    var i,
        n = nodes.length,
        m = links.length,
        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.links = function(_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function(_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function(_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initializeStrength(), force) : strength;
  };

  force.distance = function(_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initializeDistance(), force) : distance;
  };

  return force;
}


/***/ }),

/***/ "./node_modules/d3-force/src/manyBody.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-force/src/manyBody.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/quadtree.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");
/* harmony import */ var _jiggle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./jiggle.js */ "./node_modules/d3-force/src/jiggle.js");
/* harmony import */ var _simulation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./simulation.js */ "./node_modules/d3-force/src/simulation.js");





/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var nodes,
      node,
      random,
      alpha,
      strength = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i, n = nodes.length, tree = (0,d3_quadtree__WEBPACK_IMPORTED_MODULE_1__.default)(nodes, _simulation_js__WEBPACK_IMPORTED_MODULE_2__.x, _simulation_js__WEBPACK_IMPORTED_MODULE_2__.y).visitAfter(accumulate);
    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length, node;
    strengths = new Array(n);
    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0, q, c, weight = 0, x, y, i;

    // For internal nodes, accumulate forces from child quadrants.
    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }
      quad.x = x / weight;
      quad.y = y / weight;
    }

    // For leaf nodes, accumulate forces from coincident quadrants.
    else {
      q = quad;
      q.x = q.data.x;
      q.y = q.data.y;
      do strength += strengths[q.data.index];
      while (q = q.next);
    }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;

    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y;

    // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.
    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_3__.default)(random), l += x * x;
        if (y === 0) y = (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_3__.default)(random), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }
      return true;
    }

    // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return;

    // Limit forces for very close nodes; randomize direction if coincident.
    if (quad.data !== node || quad.next) {
      if (x === 0) x = (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_3__.default)(random), l += x * x;
      if (y === 0) y = (0,_jiggle_js__WEBPACK_IMPORTED_MODULE_3__.default)(random), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function(_nodes, _random) {
    nodes = _nodes;
    random = _random;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : strength;
  };

  force.distanceMin = function(_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function(_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function(_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}


/***/ }),

/***/ "./node_modules/d3-force/src/radial.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-force/src/radial.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(radius, x, y) {
  var nodes,
      strength = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(0.1),
      strengths,
      radiuses;

  if (typeof radius !== "function") radius = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);
    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _, initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : strength;
  };

  force.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : radius;
  };

  force.x = function(_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function(_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}


/***/ }),

/***/ "./node_modules/d3-force/src/simulation.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-force/src/simulation.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "x": () => /* binding */ x,
/* harmony export */   "y": () => /* binding */ y,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/timer.js");
/* harmony import */ var _lcg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lcg.js */ "./node_modules/d3-force/src/lcg.js");




function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = new Map(),
      stepper = (0,d3_timer__WEBPACK_IMPORTED_MODULE_0__.timer)(step),
      event = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_1__.default)("tick", "end"),
      random = (0,_lcg_js__WEBPACK_IMPORTED_MODULE_2__.default)();

  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);
    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i, n = nodes.length, node;

    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;

      forces.forEach(function(force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;
        else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;
        else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;
      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }
      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes, random);
    return force;
  }

  initializeNodes();

  return simulation = {
    tick: tick,

    restart: function() {
      return stepper.restart(step), simulation;
    },

    stop: function() {
      return stepper.stop(), simulation;
    },

    nodes: function(_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;
    },

    alpha: function(_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },

    alphaMin: function(_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },

    alphaDecay: function(_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },

    alphaTarget: function(_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },

    velocityDecay: function(_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },

    randomSource: function(_) {
      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;
    },

    force: function(name, _) {
      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);
    },

    find: function(x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;

      if (radius == null) radius = Infinity;
      else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },

    on: function(name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}


/***/ }),

/***/ "./node_modules/d3-force/src/x.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/x.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  var strength = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(0.1),
      nodes,
      strengths,
      xz;

  if (typeof x !== "function") x = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : strength;
  };

  force.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : x;
  };

  return force;
}


/***/ }),

/***/ "./node_modules/d3-force/src/y.js":
/*!****************************************!*\
  !*** ./node_modules/d3-force/src/y.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-force/src/constant.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(y) {
  var strength = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(0.1),
      nodes,
      strengths,
      yz;

  if (typeof y !== "function") y = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i, n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);
    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function(_) {
    nodes = _;
    initialize();
  };

  force.strength = function(_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : strength;
  };

  force.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), initialize(), force) : y;
  };

  return force;
}


/***/ }),

/***/ "./node_modules/d3-format/src/defaultLocale.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/defaultLocale.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "format": () => /* binding */ format,
/* harmony export */   "formatPrefix": () => /* binding */ formatPrefix,
/* harmony export */   "default": () => /* binding */ defaultLocale
/* harmony export */ });
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale.js */ "./node_modules/d3-format/src/locale.js");


var locale;
var format;
var formatPrefix;

defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale(definition) {
  locale = (0,_locale_js__WEBPACK_IMPORTED_MODULE_0__.default)(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}


/***/ }),

/***/ "./node_modules/d3-format/src/exponent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/exponent.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(Math.abs(x)), x ? x[1] : NaN;
}


/***/ }),

/***/ "./node_modules/d3-format/src/formatDecimal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatDecimal.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "formatDecimalParts": () => /* binding */ formatDecimalParts
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return Math.abs(x = Math.round(x)) >= 1e21
      ? x.toLocaleString("en").replace(/,/g, "")
      : x.toString(10);
}

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}


/***/ }),

/***/ "./node_modules/d3-format/src/formatGroup.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatGroup.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}


/***/ }),

/***/ "./node_modules/d3-format/src/formatNumerals.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/formatNumerals.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}


/***/ }),

/***/ "./node_modules/d3-format/src/formatPrefixAuto.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-format/src/formatPrefixAuto.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prefixExponent": () => /* binding */ prefixExponent,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");


var prefixExponent;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, p) {
  var d = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}


/***/ }),

/***/ "./node_modules/d3-format/src/formatRounded.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-format/src/formatRounded.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, p) {
  var d = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}


/***/ }),

/***/ "./node_modules/d3-format/src/formatSpecifier.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/formatSpecifier.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ formatSpecifier,
/* harmony export */   "FormatSpecifier": () => /* binding */ FormatSpecifier
/* harmony export */ });
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width === undefined ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};


/***/ }),

/***/ "./node_modules/d3-format/src/formatTrim.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-format/src/formatTrim.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}


/***/ }),

/***/ "./node_modules/d3-format/src/formatTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-format/src/formatTypes.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatDecimal.js */ "./node_modules/d3-format/src/formatDecimal.js");
/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatPrefixAuto.js */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _formatRounded_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatRounded.js */ "./node_modules/d3-format/src/formatRounded.js");




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  "%": (x, p) => (x * 100).toFixed(p),
  "b": (x) => Math.round(x).toString(2),
  "c": (x) => x + "",
  "d": _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.default,
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": (x) => Math.round(x).toString(8),
  "p": (x, p) => (0,_formatRounded_js__WEBPACK_IMPORTED_MODULE_1__.default)(x * 100, p),
  "r": _formatRounded_js__WEBPACK_IMPORTED_MODULE_1__.default,
  "s": _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_2__.default,
  "X": (x) => Math.round(x).toString(16).toUpperCase(),
  "x": (x) => Math.round(x).toString(16)
});


/***/ }),

/***/ "./node_modules/d3-format/src/identity.js":
/*!************************************************!*\
  !*** ./node_modules/d3-format/src/identity.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x;
}


/***/ }),

/***/ "./node_modules/d3-format/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-format/src/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatDefaultLocale": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "format": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.format,
/* harmony export */   "formatPrefix": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.formatPrefix,
/* harmony export */   "formatLocale": () => /* reexport safe */ _locale_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "formatSpecifier": () => /* reexport safe */ _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "FormatSpecifier": () => /* reexport safe */ _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__.FormatSpecifier,
/* harmony export */   "precisionFixed": () => /* reexport safe */ _precisionFixed_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "precisionPrefix": () => /* reexport safe */ _precisionPrefix_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "precisionRound": () => /* reexport safe */ _precisionRound_js__WEBPACK_IMPORTED_MODULE_5__.default
/* harmony export */ });
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale.js */ "./node_modules/d3-format/src/defaultLocale.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale.js */ "./node_modules/d3-format/src/locale.js");
/* harmony import */ var _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatSpecifier.js */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony import */ var _precisionFixed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./precisionFixed.js */ "./node_modules/d3-format/src/precisionFixed.js");
/* harmony import */ var _precisionPrefix_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./precisionPrefix.js */ "./node_modules/d3-format/src/precisionPrefix.js");
/* harmony import */ var _precisionRound_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./precisionRound.js */ "./node_modules/d3-format/src/precisionRound.js");








/***/ }),

/***/ "./node_modules/d3-format/src/locale.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-format/src/locale.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");
/* harmony import */ var _formatGroup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formatGroup.js */ "./node_modules/d3-format/src/formatGroup.js");
/* harmony import */ var _formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatNumerals.js */ "./node_modules/d3-format/src/formatNumerals.js");
/* harmony import */ var _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatSpecifier.js */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony import */ var _formatTrim_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./formatTrim.js */ "./node_modules/d3-format/src/formatTrim.js");
/* harmony import */ var _formatTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./formatTypes.js */ "./node_modules/d3-format/src/formatTypes.js");
/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./formatPrefixAuto.js */ "./node_modules/d3-format/src/formatPrefixAuto.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-format/src/identity.js");









var map = Array.prototype.map,
    prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_0__.default : (0,_formatGroup_js__WEBPACK_IMPORTED_MODULE_1__.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_0__.default : (0,_formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0,_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__.default)(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes_js__WEBPACK_IMPORTED_MODULE_4__.default[type]) precision === undefined && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = _formatTypes_js__WEBPACK_IMPORTED_MODULE_4__.default[type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision === undefined ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Determine the sign. -0 is not less than 0, but 1 / -0 is!
        var valueNegative = value < 0 || 1 / value < 0;

        // Perform the initial formatting.
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = (0,_formatTrim_js__WEBPACK_IMPORTED_MODULE_5__.default)(value);

        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0,_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0,_exponent_js__WEBPACK_IMPORTED_MODULE_7__.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}


/***/ }),

/***/ "./node_modules/d3-format/src/precisionFixed.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionFixed.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step) {
  return Math.max(0, -(0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(Math.abs(step)));
}


/***/ }),

/***/ "./node_modules/d3-format/src/precisionPrefix.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionPrefix.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) / 3))) * 3 - (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(Math.abs(step)));
}


/***/ }),

/***/ "./node_modules/d3-format/src/precisionRound.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-format/src/precisionRound.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exponent.js */ "./node_modules/d3-format/src/exponent.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(max) - (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(step)) + 1;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/area.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/area.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "areaRingSum": () => /* binding */ areaRingSum,
/* harmony export */   "areaStream": () => /* binding */ areaStream,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./noop.js */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");





var areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder();

// hello?

var areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;

var areaStream = {
  point: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default,
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default,
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default,
  polygonStart: function() {
    areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math_js__WEBPACK_IMPORTED_MODULE_2__.tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop_js__WEBPACK_IMPORTED_MODULE_1__.default;
  },
  sphere: function() {
    areaSum.add(_math_js__WEBPACK_IMPORTED_MODULE_2__.tau);
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_2__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_2__.radians;
  lambda0 = lambda, cosPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.cos)(phi = phi / 2 + _math_js__WEBPACK_IMPORTED_MODULE_2__.quarterPi), sinPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.sin)(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_2__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_2__.radians;
  phi = phi / 2 + _math_js__WEBPACK_IMPORTED_MODULE_2__.quarterPi; // half the angular distance from south pole

  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.cos)(phi),
      sinPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.sin)(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.cos)(adLambda),
      v = k * sdLambda * (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.sin)(adLambda);
  areaRingSum.add((0,_math_js__WEBPACK_IMPORTED_MODULE_2__.atan2)(v, u));

  // Advance the previous points.
  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(object) {
  areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder();
  (0,_stream_js__WEBPACK_IMPORTED_MODULE_3__.default)(object, areaStream);
  return areaSum * 2;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/bounds.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/bounds.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-geo/src/area.js");
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");






var lambda0, phi0, lambda1, phi1, // bounds
    lambda2, // previous lambda-coordinate
    lambda00, phi00, // first point
    p0, // previous 3D point
    deltaSum,
    ranges,
    range;

var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function() {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder();
    _area_js__WEBPACK_IMPORTED_MODULE_1__.areaStream.polygonStart();
  },
  polygonEnd: function() {
    _area_js__WEBPACK_IMPORTED_MODULE_1__.areaStream.polygonEnd();
    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area_js__WEBPACK_IMPORTED_MODULE_1__.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
    else if (deltaSum > _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon) phi1 = 90;
    else if (deltaSum < -_math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function() {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesian)([lambda * _math_js__WEBPACK_IMPORTED_MODULE_2__.radians, phi * _math_js__WEBPACK_IMPORTED_MODULE_2__.radians]);
  if (p0) {
    var normal = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianCross)(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianCross)(equatorial, normal);
    (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianNormalizeInPlace)(inflection);
    inflection = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.spherical)(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math_js__WEBPACK_IMPORTED_MODULE_2__.degrees * sign,
        phii,
        antimeridian = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.abs)(delta) > 180;
    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math_js__WEBPACK_IMPORTED_MODULE_2__.degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math_js__WEBPACK_IMPORTED_MODULE_2__.degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }
    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add((0,_math_js__WEBPACK_IMPORTED_MODULE_2__.abs)(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }
  _area_js__WEBPACK_IMPORTED_MODULE_1__.areaStream.point(lambda, phi);
  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area_js__WEBPACK_IMPORTED_MODULE_1__.areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);
  _area_js__WEBPACK_IMPORTED_MODULE_1__.areaStream.lineEnd();
  if ((0,_math_js__WEBPACK_IMPORTED_MODULE_2__.abs)(deltaSum) > _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
}

// Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.
function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(feature) {
  var i, n, a, b, merged, deltaMax, delta;

  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  (0,_stream_js__WEBPACK_IMPORTED_MODULE_4__.default)(feature, boundsStream);

  // First, sort ranges by their minimum longitudes.
  if (n = ranges.length) {
    ranges.sort(rangeCompare);

    // Then, merge any ranges that overlap.
    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];
      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    }

    // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.
    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;

  return lambda0 === Infinity || phi0 === Infinity
      ? [[NaN, NaN], [NaN, NaN]]
      : [[lambda0, phi0], [lambda1, phi1]];
}


/***/ }),

/***/ "./node_modules/d3-geo/src/cartesian.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/cartesian.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "spherical": () => /* binding */ spherical,
/* harmony export */   "cartesian": () => /* binding */ cartesian,
/* harmony export */   "cartesianDot": () => /* binding */ cartesianDot,
/* harmony export */   "cartesianCross": () => /* binding */ cartesianCross,
/* harmony export */   "cartesianAddInPlace": () => /* binding */ cartesianAddInPlace,
/* harmony export */   "cartesianScale": () => /* binding */ cartesianScale,
/* harmony export */   "cartesianNormalizeInPlace": () => /* binding */ cartesianNormalizeInPlace
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");


function spherical(cartesian) {
  return [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(cartesian[1], cartesian[0]), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0], phi = spherical[1], cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi);
  return [cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda), cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
}

// TODO return a
function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
}

// TODO return d
function cartesianNormalizeInPlace(d) {
  var l = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/centroid.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/centroid.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./noop.js */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");





var W0, W1,
    X0, Y0, Z0,
    X1, Y1, Z1,
    X2, Y2, Z2,
    lambda00, phi00, // first point
    x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
};

// Arithmetic mean of Cartesian vectors.
function centroidPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians;
  var cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi);
  centroidPointCartesian(cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(lambda), cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda), (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians;
  var cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi);
  x0 = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(lambda);
  y0 = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda);
  z0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians;
  var cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi),
      x = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(lambda),
      y = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda),
      z = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi),
      w = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.atan2)((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sqrt)((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).
function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi);
  x0 = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(lambda);
  y0 = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda);
  z0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians;
  var cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi),
      x = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(lambda),
      y = cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda),
      z = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.hypot)(cx, cy, cz),
      w = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.asin)(m), // line weight = angle
      v = m && -w / m; // area weight multiplier
  X2.add(v * cx);
  Y2.add(v * cy);
  Z2.add(v * cz);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(object) {
  W0 = W1 =
  X0 = Y0 = Z0 =
  X1 = Y1 = Z1 = 0;
  X2 = new d3_array__WEBPACK_IMPORTED_MODULE_2__.Adder();
  Y2 = new d3_array__WEBPACK_IMPORTED_MODULE_2__.Adder();
  Z2 = new d3_array__WEBPACK_IMPORTED_MODULE_2__.Adder();
  (0,_stream_js__WEBPACK_IMPORTED_MODULE_3__.default)(object, centroidStream);

  var x = +X2,
      y = +Y2,
      z = +Z2,
      m = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.hypot)(x, y, z);

  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
  if (m < _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon2) {
    x = X1, y = Y1, z = Z1;
    // If the feature has zero length, fall back to arithmetic mean of point vectors.
    if (W1 < _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) x = X0, y = Y0, z = Z0;
    m = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.hypot)(x, y, z);
    // If the feature still has an undefined ccentroid, then return.
    if (m < _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon2) return [NaN, NaN];
  }

  return [(0,_math_js__WEBPACK_IMPORTED_MODULE_1__.atan2)(y, x) * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees, (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.asin)(z / m) * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees];
}


/***/ }),

/***/ "./node_modules/d3-geo/src/circle.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/circle.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "circleStream": () => /* binding */ circleStream,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-geo/src/constant.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rotation.js */ "./node_modules/d3-geo/src/rotation.js");





// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(radius),
      sinRadius = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(radius),
      step = direction * delta;
  if (t0 == null) {
    t0 = radius + direction * _math_js__WEBPACK_IMPORTED_MODULE_0__.tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math_js__WEBPACK_IMPORTED_MODULE_0__.tau;
  }
  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.spherical)([cosRadius, -sinRadius * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(t), -sinRadius * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(t)]);
    stream.point(point[0], point[1]);
  }
}

// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius, point) {
  point = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesian)(point), point[0] -= cosRadius;
  (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianNormalizeInPlace)(point);
  var radius = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.acos)(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math_js__WEBPACK_IMPORTED_MODULE_0__.tau - _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) % _math_js__WEBPACK_IMPORTED_MODULE_0__.tau;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var center = (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)([0, 0]),
      radius = (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(90),
      precision = (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(6),
      ring,
      rotate,
      stream = {point: point};

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees, x[1] *= _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,
        p = precision.apply(this, arguments) * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians;
    ring = [];
    rotate = (0,_rotation_js__WEBPACK_IMPORTED_MODULE_3__.rotateRadians)(-c[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians, -c[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {type: "Polygon", coordinates: [ring]};
    ring = rotate = null;
    return c;
  }

  circle.center = function(_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(+_), circle) : radius;
  };

  circle.precision = function(_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(+_), circle) : precision;
  };

  return circle;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/antimeridian.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/antimeridian.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/clip/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_index_js__WEBPACK_IMPORTED_MODULE_0__.default)(
  function() { return true; },
  clipAntimeridianLine,
  clipAntimeridianInterpolate,
  [-_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, -_math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi]
));

// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__.pi : -_math_js__WEBPACK_IMPORTED_MODULE_1__.pi,
          delta = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda1 - lambda0);
      if ((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(delta - _math_js__WEBPACK_IMPORTED_MODULE_1__.pi) < _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) { // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi : -_math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math_js__WEBPACK_IMPORTED_MODULE_1__.pi) { // line crosses antimeridian
        if ((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda0 - sign0) < _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) lambda0 -= sign0 * _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon; // handle degeneracies
        if ((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda1 - sign1) < _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) lambda1 -= sign1 * _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }
      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda0 - lambda1);
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(sinLambda0Lambda1) > _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon
      ? (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.atan)(((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi0) * (cosPhi1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi1)) * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda1)
          - (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi1) * (cosPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi0)) * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(lambda0))
          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
      : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * _math_js__WEBPACK_IMPORTED_MODULE_1__.halfPi;
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, phi);
    stream.point(0, phi);
    stream.point(_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, phi);
    stream.point(_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, 0);
    stream.point(_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, -phi);
    stream.point(0, -phi);
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, -phi);
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, 0);
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__.pi, phi);
  } else if ((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(from[0] - to[0]) > _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon) {
    var lambda = from[0] < to[0] ? _math_js__WEBPACK_IMPORTED_MODULE_1__.pi : -_math_js__WEBPACK_IMPORTED_MODULE_1__.pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/buffer.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/buffer.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var lines = [],
      line;
  return {
    point: function(x, y, m) {
      line.push([x, y, m]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
    rejoin: function() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/circle.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/circle.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../circle.js */ "./node_modules/d3-geo/src/circle.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _pointEqual_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pointEqual.js */ "./node_modules/d3-geo/src/pointEqual.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/clip/index.js");






/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(radius) {
  var cr = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(radius),
      delta = 6 * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,
      smallRadius = cr > 0,
      notHemisphere = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(cr) > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    (0,_circle_js__WEBPACK_IMPORTED_MODULE_1__.circleStream)(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi) > cr;
  }

  // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.
  function clipLine(stream) {
    var point0, // previous point
        c0, // code for previous point
        v0, // visibility of previous point
        v00, // visibility of first point
        clean; // no intersections
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius
              ? v ? 0 : code(lambda, phi)
              : v ? code(lambda + (lambda < 0 ? _math_js__WEBPACK_IMPORTED_MODULE_0__.pi : -_math_js__WEBPACK_IMPORTED_MODULE_0__.pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart();
        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || (0,_pointEqual_js__WEBPACK_IMPORTED_MODULE_2__.default)(point0, point2) || (0,_pointEqual_js__WEBPACK_IMPORTED_MODULE_2__.default)(point1, point2))
            point1[2] = 1;
        }
        if (v !== v0) {
          clean = 0;
          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t;
          // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.
          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1], 3);
            }
          }
        }
        if (v && (!point0 || !(0,_pointEqual_js__WEBPACK_IMPORTED_MODULE_2__.default)(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function() {
        return clean | ((v00 && v0) << 1);
      }
    };
  }

  // Intersects the great circle between a and b with the clip circle.
  function intersect(a, b, two) {
    var pa = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesian)(a),
        pb = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesian)(b);

    // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
    var n1 = [1, 0, 0], // normal
        n2 = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianCross)(pa, pb),
        n2n2 = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianDot)(n2, n2),
        n1n2 = n2[0], // cartesianDot(n1, n2),
        determinant = n2n2 - n1n2 * n1n2;

    // Two polar points.
    if (!determinant) return !two && a;

    var c1 =  cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianCross)(n1, n2),
        A = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianScale)(n1, c1),
        B = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianScale)(n2, c2);
    (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianAddInPlace)(A, B);

    // Solve |p(t)|^2 = 1.
    var u = n1xn2,
        w = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianDot)(A, u),
        uu = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianDot)(u, u),
        t2 = w * w - uu * ((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianDot)(A, A) - 1);

    if (t2 < 0) return;

    var t = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(t2),
        q = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianScale)(u, (-w - t) / uu);
    (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianAddInPlace)(q, A);
    q = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.spherical)(q);

    if (!two) return q;

    // Two intersection points.
    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;

    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(delta - _math_js__WEBPACK_IMPORTED_MODULE_0__.pi) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon,
        meridian = polar || delta < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

    // Check that the first point is between a and b.
    if (meridian
        ? polar
          ? phi0 + phi1 > 0 ^ q[1] < ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(q[0] - lambda0) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon ? phi0 : phi1)
          : phi0 <= q[1] && q[1] <= phi1
        : delta > _math_js__WEBPACK_IMPORTED_MODULE_0__.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianScale)(u, (-w + t) / uu);
      (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.cartesianAddInPlace)(q1, A);
      return [q, (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_3__.spherical)(q1)];
    }
  }

  // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.
  function code(lambda, phi) {
    var r = smallRadius ? radius : _math_js__WEBPACK_IMPORTED_MODULE_0__.pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right
    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above
    return code;
  }

  return (0,_index_js__WEBPACK_IMPORTED_MODULE_4__.default)(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math_js__WEBPACK_IMPORTED_MODULE_0__.pi, radius - _math_js__WEBPACK_IMPORTED_MODULE_0__.pi]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/extent.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;

  return clip = {
    stream: function(stream) {
      return cache && cacheStream === stream ? cache : cache = (0,_rectangle_js__WEBPACK_IMPORTED_MODULE_0__.default)(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function(_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _buffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer.js */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _rejoin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rejoin.js */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _polygonContains_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../polygonContains.js */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/merge.js");






/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(pointVisible, clipLine, interpolate, start) {
  return function(sink) {
    var line = clipLine(sink),
        ringBuffer = (0,_buffer_js__WEBPACK_IMPORTED_MODULE_0__.default)(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;

    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = (0,d3_array__WEBPACK_IMPORTED_MODULE_1__.default)(segments);
        var startInside = (0,_polygonContains_js__WEBPACK_IMPORTED_MODULE_2__.default)(polygon, start);
        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          (0,_rejoin_js__WEBPACK_IMPORTED_MODULE_3__.default)(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();

      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i, n = ringSegments.length, m,
          segment,
          point;

      ring.pop();
      polygon.push(ring);
      ring = null;

      if (!n) return;

      // No intersections.
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
          sink.lineEnd();
        }
        return;
      }

      // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?
      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
}

// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math_js__WEBPACK_IMPORTED_MODULE_4__.halfPi - _math_js__WEBPACK_IMPORTED_MODULE_4__.epsilon : _math_js__WEBPACK_IMPORTED_MODULE_4__.halfPi - a[1])
       - ((b = b.x)[0] < 0 ? b[1] - _math_js__WEBPACK_IMPORTED_MODULE_4__.halfPi - _math_js__WEBPACK_IMPORTED_MODULE_4__.epsilon : _math_js__WEBPACK_IMPORTED_MODULE_4__.halfPi - b[1]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/line.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/line.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;

  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;
  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;
  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;
  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;
  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rectangle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rectangle.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ clipRectangle
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _buffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer.js */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _line_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./line.js */ "./node_modules/d3-geo/src/clip/line.js");
/* harmony import */ var _rejoin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rejoin.js */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/merge.js");






var clipMax = 1e9, clipMin = -clipMax;

// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {

  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0, a1 = 0;
    if (from == null
        || (a = corner(from, direction)) !== (a1 = corner(to, direction))
        || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(p[0] - x0) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon ? direction > 0 ? 0 : 3
        : (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(p[0] - x1) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon ? direction > 0 ? 2 : 1
        : (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(p[1] - y0) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon ? direction > 0 ? 1 : 0
        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb
        : ca === 0 ? b[1] - a[1]
        : ca === 1 ? a[0] - b[0]
        : ca === 2 ? a[1] - b[1]
        : b[0] - a[0];
  }

  return function(stream) {
    var activeStream = stream,
        bufferStream = (0,_buffer_js__WEBPACK_IMPORTED_MODULE_1__.default)(),
        segments,
        polygon,
        ring,
        x__, y__, v__, // first point
        x_, y_, v_, // previous point
        first,
        clean;

    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
        }
      }

      return winding;
    }

    // Buffer geometry within a polygon and then clip it en masse.
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = (0,d3_array__WEBPACK_IMPORTED_MODULE_2__.default)(segments)).length;
      if (cleanInside || visible) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible) {
          (0,_rejoin_js__WEBPACK_IMPORTED_MODULE_3__.default)(segments, compareIntersection, startInside, interpolate, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }

    // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.
    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);
      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;
        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);
        else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
          if ((0,_line_js__WEBPACK_IMPORTED_MODULE_4__.default)(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }
            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }
      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rejoin.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rejoin.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _pointEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pointEqual.js */ "./node_modules/d3-geo/src/pointEqual.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection
  this.e = entry; // is an entry?
  this.v = false; // visited
  this.n = this.p = null; // next & previous
}

// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;

  segments.forEach(function(segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n, p0 = segment[0], p1 = segment[n], x;

    if ((0,_pointEqual_js__WEBPACK_IMPORTED_MODULE_0__.default)(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream.lineStart();
        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
        stream.lineEnd();
        return;
      }
      // handle degenerate cases by moving the point
      p1[0] += 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });

  if (!subject.length) return;

  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;
    while (current.v) if ((current = current.n) === start) return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;
  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }
  a.n = b = array[0];
  b.p = a;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/compose.js":
/*!********************************************!*\
  !*** ./node_modules/d3-geo/src/compose.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {

  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function(x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };

  return compose;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/constant.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/constant.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/contains.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/contains.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _polygonContains_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./polygonContains.js */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var _distance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./distance.js */ "./node_modules/d3-geo/src/distance.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");




var containsObjectType = {
  Feature: function(object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function(object, point) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;
    return false;
  }
};

var containsGeometryType = {
  Sphere: function() {
    return true;
  },
  Point: function(object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPoint(coordinates[i], point)) return true;
    return false;
  },
  LineString: function(object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsLine(coordinates[i], point)) return true;
    return false;
  },
  Polygon: function(object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;
    return false;
  },
  GeometryCollection: function(object, point) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) if (containsGeometry(geometries[i], point)) return true;
    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type)
      ? containsGeometryType[geometry.type](geometry, point)
      : false;
}

function containsPoint(coordinates, point) {
  return (0,_distance_js__WEBPACK_IMPORTED_MODULE_0__.default)(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;
  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = (0,_distance_js__WEBPACK_IMPORTED_MODULE_0__.default)(coordinates[i], point);
    if (bo === 0) return true;
    if (i > 0) {
      ab = (0,_distance_js__WEBPACK_IMPORTED_MODULE_0__.default)(coordinates[i], coordinates[i - 1]);
      if (
        ab > 0 &&
        ao <= ab &&
        bo <= ab &&
        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon2 * ab
      )
        return true;
    }
    ao = bo;
  }
  return false;
}

function containsPolygon(coordinates, point) {
  return !!(0,_polygonContains_js__WEBPACK_IMPORTED_MODULE_2__.default)(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, point[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians];
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type)
      ? containsObjectType[object.type]
      : containsGeometry)(object, point);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/distance.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/distance.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _length_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./length.js */ "./node_modules/d3-geo/src/length.js");


var coordinates = [null, null],
    object = {type: "LineString", coordinates: coordinates};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return (0,_length_js__WEBPACK_IMPORTED_MODULE_0__.default)(object);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/graticule.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/graticule.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ graticule,
/* harmony export */   "graticule10": () => /* binding */ graticule10
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");



function graticuleX(y0, y1, dy) {
  var y = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)(y0, y1 - _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon, dy).concat(y1);
  return function(x) { return y.map(function(y) { return [x, y]; }); };
}

function graticuleY(x0, x1, dx) {
  var x = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)(x0, x1 - _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon, dx).concat(x1);
  return function(y) { return x.map(function(x) { return [x, y]; }); };
}

function graticule() {
  var x1, x0, X1, X0,
      y1, y0, Y1, Y0,
      dx = 10, dy = dx, DX = 90, DY = 360,
      x, y, X, Y,
      precision = 2.5;

  function graticule() {
    return {type: "MultiLineString", coordinates: lines()};
  }

  function lines() {
    return (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.ceil)(X0 / DX) * DX, X1, DX).map(X)
        .concat((0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.ceil)(Y0 / DY) * DY, Y1, DY).map(Y))
        .concat((0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.ceil)(x0 / dx) * dx, x1, dx).filter(function(x) { return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(x % DX) > _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon; }).map(x))
        .concat((0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.ceil)(y0 / dy) * dy, y1, dy).filter(function(y) { return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(y % DY) > _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon; }).map(y));
  }

  graticule.lines = function() {
    return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
  };

  graticule.outline = function() {
    return {
      type: "Polygon",
      coordinates: [
        X(X0).concat(
        Y(Y1).slice(1),
        X(X1).reverse().slice(1),
        Y(Y0).reverse().slice(1))
      ]
    };
  };

  graticule.extent = function(_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function(_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function(_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function(_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function(_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function(_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function(_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule
      .extentMajor([[-180, -90 + _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon], [180, 90 - _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon]])
      .extentMinor([[-180, -80 - _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon], [180, 80 + _math_js__WEBPACK_IMPORTED_MODULE_1__.epsilon]]);
}

function graticule10() {
  return graticule()();
}


/***/ }),

/***/ "./node_modules/d3-geo/src/identity.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/identity.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => x);


/***/ }),

/***/ "./node_modules/d3-geo/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "geoArea": () => /* reexport safe */ _area_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "geoBounds": () => /* reexport safe */ _bounds_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "geoCentroid": () => /* reexport safe */ _centroid_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "geoCircle": () => /* reexport safe */ _circle_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "geoClipAntimeridian": () => /* reexport safe */ _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "geoClipCircle": () => /* reexport safe */ _clip_circle_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "geoClipExtent": () => /* reexport safe */ _clip_extent_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "geoClipRectangle": () => /* reexport safe */ _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "geoContains": () => /* reexport safe */ _contains_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "geoDistance": () => /* reexport safe */ _distance_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "geoGraticule": () => /* reexport safe */ _graticule_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "geoGraticule10": () => /* reexport safe */ _graticule_js__WEBPACK_IMPORTED_MODULE_10__.graticule10,
/* harmony export */   "geoInterpolate": () => /* reexport safe */ _interpolate_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "geoLength": () => /* reexport safe */ _length_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "geoPath": () => /* reexport safe */ _path_index_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "geoAlbers": () => /* reexport safe */ _projection_albers_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "geoAlbersUsa": () => /* reexport safe */ _projection_albersUsa_js__WEBPACK_IMPORTED_MODULE_15__.default,
/* harmony export */   "geoAzimuthalEqualArea": () => /* reexport safe */ _projection_azimuthalEqualArea_js__WEBPACK_IMPORTED_MODULE_16__.default,
/* harmony export */   "geoAzimuthalEqualAreaRaw": () => /* reexport safe */ _projection_azimuthalEqualArea_js__WEBPACK_IMPORTED_MODULE_16__.azimuthalEqualAreaRaw,
/* harmony export */   "geoAzimuthalEquidistant": () => /* reexport safe */ _projection_azimuthalEquidistant_js__WEBPACK_IMPORTED_MODULE_17__.default,
/* harmony export */   "geoAzimuthalEquidistantRaw": () => /* reexport safe */ _projection_azimuthalEquidistant_js__WEBPACK_IMPORTED_MODULE_17__.azimuthalEquidistantRaw,
/* harmony export */   "geoConicConformal": () => /* reexport safe */ _projection_conicConformal_js__WEBPACK_IMPORTED_MODULE_18__.default,
/* harmony export */   "geoConicConformalRaw": () => /* reexport safe */ _projection_conicConformal_js__WEBPACK_IMPORTED_MODULE_18__.conicConformalRaw,
/* harmony export */   "geoConicEqualArea": () => /* reexport safe */ _projection_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_19__.default,
/* harmony export */   "geoConicEqualAreaRaw": () => /* reexport safe */ _projection_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_19__.conicEqualAreaRaw,
/* harmony export */   "geoConicEquidistant": () => /* reexport safe */ _projection_conicEquidistant_js__WEBPACK_IMPORTED_MODULE_20__.default,
/* harmony export */   "geoConicEquidistantRaw": () => /* reexport safe */ _projection_conicEquidistant_js__WEBPACK_IMPORTED_MODULE_20__.conicEquidistantRaw,
/* harmony export */   "geoEqualEarth": () => /* reexport safe */ _projection_equalEarth_js__WEBPACK_IMPORTED_MODULE_21__.default,
/* harmony export */   "geoEqualEarthRaw": () => /* reexport safe */ _projection_equalEarth_js__WEBPACK_IMPORTED_MODULE_21__.equalEarthRaw,
/* harmony export */   "geoEquirectangular": () => /* reexport safe */ _projection_equirectangular_js__WEBPACK_IMPORTED_MODULE_22__.default,
/* harmony export */   "geoEquirectangularRaw": () => /* reexport safe */ _projection_equirectangular_js__WEBPACK_IMPORTED_MODULE_22__.equirectangularRaw,
/* harmony export */   "geoGnomonic": () => /* reexport safe */ _projection_gnomonic_js__WEBPACK_IMPORTED_MODULE_23__.default,
/* harmony export */   "geoGnomonicRaw": () => /* reexport safe */ _projection_gnomonic_js__WEBPACK_IMPORTED_MODULE_23__.gnomonicRaw,
/* harmony export */   "geoIdentity": () => /* reexport safe */ _projection_identity_js__WEBPACK_IMPORTED_MODULE_24__.default,
/* harmony export */   "geoProjection": () => /* reexport safe */ _projection_index_js__WEBPACK_IMPORTED_MODULE_25__.default,
/* harmony export */   "geoProjectionMutator": () => /* reexport safe */ _projection_index_js__WEBPACK_IMPORTED_MODULE_25__.projectionMutator,
/* harmony export */   "geoMercator": () => /* reexport safe */ _projection_mercator_js__WEBPACK_IMPORTED_MODULE_26__.default,
/* harmony export */   "geoMercatorRaw": () => /* reexport safe */ _projection_mercator_js__WEBPACK_IMPORTED_MODULE_26__.mercatorRaw,
/* harmony export */   "geoNaturalEarth1": () => /* reexport safe */ _projection_naturalEarth1_js__WEBPACK_IMPORTED_MODULE_27__.default,
/* harmony export */   "geoNaturalEarth1Raw": () => /* reexport safe */ _projection_naturalEarth1_js__WEBPACK_IMPORTED_MODULE_27__.naturalEarth1Raw,
/* harmony export */   "geoOrthographic": () => /* reexport safe */ _projection_orthographic_js__WEBPACK_IMPORTED_MODULE_28__.default,
/* harmony export */   "geoOrthographicRaw": () => /* reexport safe */ _projection_orthographic_js__WEBPACK_IMPORTED_MODULE_28__.orthographicRaw,
/* harmony export */   "geoStereographic": () => /* reexport safe */ _projection_stereographic_js__WEBPACK_IMPORTED_MODULE_29__.default,
/* harmony export */   "geoStereographicRaw": () => /* reexport safe */ _projection_stereographic_js__WEBPACK_IMPORTED_MODULE_29__.stereographicRaw,
/* harmony export */   "geoTransverseMercator": () => /* reexport safe */ _projection_transverseMercator_js__WEBPACK_IMPORTED_MODULE_30__.default,
/* harmony export */   "geoTransverseMercatorRaw": () => /* reexport safe */ _projection_transverseMercator_js__WEBPACK_IMPORTED_MODULE_30__.transverseMercatorRaw,
/* harmony export */   "geoRotation": () => /* reexport safe */ _rotation_js__WEBPACK_IMPORTED_MODULE_31__.default,
/* harmony export */   "geoStream": () => /* reexport safe */ _stream_js__WEBPACK_IMPORTED_MODULE_32__.default,
/* harmony export */   "geoTransform": () => /* reexport safe */ _transform_js__WEBPACK_IMPORTED_MODULE_33__.default
/* harmony export */ });
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-geo/src/area.js");
/* harmony import */ var _bounds_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bounds.js */ "./node_modules/d3-geo/src/bounds.js");
/* harmony import */ var _centroid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./centroid.js */ "./node_modules/d3-geo/src/centroid.js");
/* harmony import */ var _circle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circle.js */ "./node_modules/d3-geo/src/circle.js");
/* harmony import */ var _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clip/antimeridian.js */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony import */ var _clip_circle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clip/circle.js */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony import */ var _clip_extent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clip/extent.js */ "./node_modules/d3-geo/src/clip/extent.js");
/* harmony import */ var _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clip/rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contains.js */ "./node_modules/d3-geo/src/contains.js");
/* harmony import */ var _distance_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./distance.js */ "./node_modules/d3-geo/src/distance.js");
/* harmony import */ var _graticule_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graticule.js */ "./node_modules/d3-geo/src/graticule.js");
/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interpolate.js */ "./node_modules/d3-geo/src/interpolate.js");
/* harmony import */ var _length_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./length.js */ "./node_modules/d3-geo/src/length.js");
/* harmony import */ var _path_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./path/index.js */ "./node_modules/d3-geo/src/path/index.js");
/* harmony import */ var _projection_albers_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./projection/albers.js */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony import */ var _projection_albersUsa_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./projection/albersUsa.js */ "./node_modules/d3-geo/src/projection/albersUsa.js");
/* harmony import */ var _projection_azimuthalEqualArea_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./projection/azimuthalEqualArea.js */ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js");
/* harmony import */ var _projection_azimuthalEquidistant_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./projection/azimuthalEquidistant.js */ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js");
/* harmony import */ var _projection_conicConformal_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./projection/conicConformal.js */ "./node_modules/d3-geo/src/projection/conicConformal.js");
/* harmony import */ var _projection_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./projection/conicEqualArea.js */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony import */ var _projection_conicEquidistant_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./projection/conicEquidistant.js */ "./node_modules/d3-geo/src/projection/conicEquidistant.js");
/* harmony import */ var _projection_equalEarth_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./projection/equalEarth.js */ "./node_modules/d3-geo/src/projection/equalEarth.js");
/* harmony import */ var _projection_equirectangular_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./projection/equirectangular.js */ "./node_modules/d3-geo/src/projection/equirectangular.js");
/* harmony import */ var _projection_gnomonic_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./projection/gnomonic.js */ "./node_modules/d3-geo/src/projection/gnomonic.js");
/* harmony import */ var _projection_identity_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./projection/identity.js */ "./node_modules/d3-geo/src/projection/identity.js");
/* harmony import */ var _projection_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./projection/index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _projection_mercator_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./projection/mercator.js */ "./node_modules/d3-geo/src/projection/mercator.js");
/* harmony import */ var _projection_naturalEarth1_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./projection/naturalEarth1.js */ "./node_modules/d3-geo/src/projection/naturalEarth1.js");
/* harmony import */ var _projection_orthographic_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./projection/orthographic.js */ "./node_modules/d3-geo/src/projection/orthographic.js");
/* harmony import */ var _projection_stereographic_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./projection/stereographic.js */ "./node_modules/d3-geo/src/projection/stereographic.js");
/* harmony import */ var _projection_transverseMercator_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./projection/transverseMercator.js */ "./node_modules/d3-geo/src/projection/transverseMercator.js");
/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./rotation.js */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./transform.js */ "./node_modules/d3-geo/src/transform.js");






 // DEPRECATED! Use d3.geoIdentity().clipExtent(…).





























/***/ }),

/***/ "./node_modules/d3-geo/src/interpolate.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/interpolate.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var x0 = a[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,
      y0 = a[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,
      x1 = b[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,
      y1 = b[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,
      cy0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y0),
      sy0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y0),
      cy1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y1),
      sy1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y1),
      kx0 = cy0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(x0),
      ky0 = cy0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(x0),
      kx1 = cy1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(x1),
      ky1 = cy1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(x1),
      d = 2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.haversin)(y1 - y0) + cy0 * cy1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.haversin)(x1 - x0))),
      k = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(d);

  var interpolate = d ? function(t) {
    var B = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(t *= d) / k,
        A = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(y, x) * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees,
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(z, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(x * x + y * y)) * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees
    ];
  } : function() {
    return [x0 * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees, y0 * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees];
  };

  interpolate.distance = d;

  return interpolate;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/length.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/length.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./noop.js */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");





var lengthSum,
    lambda0,
    sinPhi0,
    cosPhi0;

var lengthStream = {
  sphere: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  point: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  lineStart: lengthLineStart,
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  polygonStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  polygonEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop_js__WEBPACK_IMPORTED_MODULE_0__.default;
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians;
  lambda0 = lambda, sinPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi), cosPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__.radians;
  var sinPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(phi),
      cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(phi),
      delta = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.abs)(lambda - lambda0),
      cosDelta = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(delta),
      sinDelta = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.atan2)((0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sqrt)(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(object) {
  lengthSum = new d3_array__WEBPACK_IMPORTED_MODULE_2__.Adder();
  (0,_stream_js__WEBPACK_IMPORTED_MODULE_3__.default)(object, lengthStream);
  return +lengthSum;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/math.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/math.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "epsilon": () => /* binding */ epsilon,
/* harmony export */   "epsilon2": () => /* binding */ epsilon2,
/* harmony export */   "pi": () => /* binding */ pi,
/* harmony export */   "halfPi": () => /* binding */ halfPi,
/* harmony export */   "quarterPi": () => /* binding */ quarterPi,
/* harmony export */   "tau": () => /* binding */ tau,
/* harmony export */   "degrees": () => /* binding */ degrees,
/* harmony export */   "radians": () => /* binding */ radians,
/* harmony export */   "abs": () => /* binding */ abs,
/* harmony export */   "atan": () => /* binding */ atan,
/* harmony export */   "atan2": () => /* binding */ atan2,
/* harmony export */   "cos": () => /* binding */ cos,
/* harmony export */   "ceil": () => /* binding */ ceil,
/* harmony export */   "exp": () => /* binding */ exp,
/* harmony export */   "floor": () => /* binding */ floor,
/* harmony export */   "hypot": () => /* binding */ hypot,
/* harmony export */   "log": () => /* binding */ log,
/* harmony export */   "pow": () => /* binding */ pow,
/* harmony export */   "sin": () => /* binding */ sin,
/* harmony export */   "sign": () => /* binding */ sign,
/* harmony export */   "sqrt": () => /* binding */ sqrt,
/* harmony export */   "tan": () => /* binding */ tan,
/* harmony export */   "acos": () => /* binding */ acos,
/* harmony export */   "asin": () => /* binding */ asin,
/* harmony export */   "haversin": () => /* binding */ haversin
/* harmony export */ });
var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;

var degrees = 180 / pi;
var radians = pi / 180;

var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var floor = Math.floor;
var hypot = Math.hypot;
var log = Math.log;
var pow = Math.pow;
var sin = Math.sin;
var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
var sqrt = Math.sqrt;
var tan = Math.tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/noop.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/noop.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ noop
/* harmony export */ });
function noop() {}


/***/ }),

/***/ "./node_modules/d3-geo/src/path/area.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/path/area.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");




var areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder(),
    areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder(),
    x00,
    y00,
    x0,
    y0;

var areaStream = {
  point: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default,
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default,
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default,
  polygonStart: function() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop_js__WEBPACK_IMPORTED_MODULE_1__.default;
    areaSum.add((0,_math_js__WEBPACK_IMPORTED_MODULE_2__.abs)(areaRingSum));
    areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder();
  },
  result: function() {
    var area = areaSum / 2;
    areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (areaStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/bounds.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/bounds.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");


var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;

var boundsStream = {
  point: boundsPoint,
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  polygonStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  polygonEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  result: function() {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (boundsStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/centroid.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-geo/src/path/centroid.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


// TODO Enforce positive area for exterior, negative area for interior?

var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;

var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function() {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]
        : Z1 ? [X1 / Z1, Y1 / Z1]
        : Z0 ? [X0 / Z0, Y0 / Z0]
        : [NaN, NaN];
    X0 = Y0 = Z0 =
    X1 = Y1 = Z1 =
    X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0, dy = y - y0, z = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(dx * dx + dy * dy);

  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;

  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (centroidStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/context.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/context.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ PathContext
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");



function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function(_) {
    return this._radius = _, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x, y);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x, y);
        break;
      }
      default: {
        this._context.moveTo(x + this._radius, y);
        this._context.arc(x, y, this._radius, 0, _math_js__WEBPACK_IMPORTED_MODULE_0__.tau);
        break;
      }
    }
  },
  result: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default
};


/***/ }),

/***/ "./node_modules/d3-geo/src/path/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/path/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../identity.js */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stream.js */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-geo/src/path/area.js");
/* harmony import */ var _bounds_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bounds.js */ "./node_modules/d3-geo/src/path/bounds.js");
/* harmony import */ var _centroid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./centroid.js */ "./node_modules/d3-geo/src/path/centroid.js");
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./context.js */ "./node_modules/d3-geo/src/path/context.js");
/* harmony import */ var _measure_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./measure.js */ "./node_modules/d3-geo/src/path/measure.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string.js */ "./node_modules/d3-geo/src/path/string.js");









/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      (0,_stream_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, projectionStream(contextStream));
    }
    return contextStream.result();
  }

  path.area = function(object) {
    (0,_stream_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, projectionStream(_area_js__WEBPACK_IMPORTED_MODULE_1__.default));
    return _area_js__WEBPACK_IMPORTED_MODULE_1__.default.result();
  };

  path.measure = function(object) {
    (0,_stream_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, projectionStream(_measure_js__WEBPACK_IMPORTED_MODULE_2__.default));
    return _measure_js__WEBPACK_IMPORTED_MODULE_2__.default.result();
  };

  path.bounds = function(object) {
    (0,_stream_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, projectionStream(_bounds_js__WEBPACK_IMPORTED_MODULE_3__.default));
    return _bounds_js__WEBPACK_IMPORTED_MODULE_3__.default.result();
  };

  path.centroid = function(object) {
    (0,_stream_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, projectionStream(_centroid_js__WEBPACK_IMPORTED_MODULE_4__.default));
    return _centroid_js__WEBPACK_IMPORTED_MODULE_4__.default.result();
  };

  path.projection = function(_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity_js__WEBPACK_IMPORTED_MODULE_5__.default) : (projection = _).stream, path) : projection;
  };

  path.context = function(_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string_js__WEBPACK_IMPORTED_MODULE_6__.default) : new _context_js__WEBPACK_IMPORTED_MODULE_7__.default(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function(_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/path/measure.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/measure.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");




var lengthSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;

var lengthStream = {
  point: _noop_js__WEBPACK_IMPORTED_MODULE_1__.default,
  lineStart: function() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function() {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop_js__WEBPACK_IMPORTED_MODULE_1__.default;
  },
  polygonStart: function() {
    lengthRing = true;
  },
  polygonEnd: function() {
    lengthRing = null;
  },
  result: function() {
    var length = +lengthSum;
    lengthSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__.Adder();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add((0,_math_js__WEBPACK_IMPORTED_MODULE_2__.sqrt)(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lengthStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/string.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/string.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ PathString
/* harmony export */ });
function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function(_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x, ",", y);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x, ",", y);
        break;
      }
      default: {
        if (this._circle == null) this._circle = circle(this._radius);
        this._string.push("M", x, ",", y, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius
      + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
      + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
      + "z";
}


/***/ }),

/***/ "./node_modules/d3-geo/src/pointEqual.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/pointEqual.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(a[0] - b[0]) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon && (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(a[1] - b[1]) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/polygonContains.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo/src/polygonContains.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/fsum.js");
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");




function longitude(point) {
  if ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(point[0]) <= _math_js__WEBPACK_IMPORTED_MODULE_0__.pi)
    return point[0];
  else
    return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(point[0]) * (((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(point[0]) + _math_js__WEBPACK_IMPORTED_MODULE_0__.pi) % _math_js__WEBPACK_IMPORTED_MODULE_0__.tau - _math_js__WEBPACK_IMPORTED_MODULE_0__.pi);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi),
      normal = [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda), -(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda), 0],
      angle = 0,
      winding = 0;

  var sum = new d3_array__WEBPACK_IMPORTED_MODULE_1__.Adder();

  if (sinPhi === 1) phi = _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi + _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;
  else if (sinPhi === -1) phi = -_math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi - _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math_js__WEBPACK_IMPORTED_MODULE_0__.quarterPi,
        sinPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi0),
        cosPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math_js__WEBPACK_IMPORTED_MODULE_0__.quarterPi,
          sinPhi1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi1),
          cosPhi1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math_js__WEBPACK_IMPORTED_MODULE_0__.pi,
          k = sinPhi0 * sinPhi1;

      sum.add((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(k * sign * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(absDelta), cosPhi0 * cosPhi1 + k * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(absDelta)));
      angle += antimeridian ? delta + sign * _math_js__WEBPACK_IMPORTED_MODULE_0__.tau : delta;

      // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_2__.cartesianCross)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_2__.cartesian)(point0), (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_2__.cartesian)(point1));
        (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_2__.cartesianNormalizeInPlace)(arc);
        var intersection = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_2__.cartesianCross)(normal, arc);
        (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_2__.cartesianNormalizeInPlace)(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }

  // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.

  return (angle < -_math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon || angle < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon && sum < -_math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon2) ^ (winding & 1);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albers.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albers.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _conicEqualArea_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conicEqualArea.js */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_0__.default)()
      .parallels([29.5, 45.5])
      .scale(1070)
      .translate([480, 250])
      .rotate([96, 0])
      .center([-0.6, 38.7]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albersUsa.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albersUsa.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _albers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./albers.js */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony import */ var _conicEqualArea_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conicEqualArea.js */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony import */ var _fit_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit.js */ "./node_modules/d3-geo/src/projection/fit.js");





// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
  };
}

// A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var cache,
      cacheStream,
      lower48 = (0,_albers_js__WEBPACK_IMPORTED_MODULE_0__.default)(), lower48Point,
      alaska = (0,_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_1__.default)().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338
      hawaii = (0,_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_1__.default)().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007
      point, pointStream = {point: function(x, y) { point = [x, y]; }};

  function albersUsa(coordinates) {
    var x = coordinates[0], y = coordinates[1];
    return point = null,
        (lower48Point.point(x, y), point)
        || (alaskaPoint.point(x, y), point)
        || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function(coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
        : lower48).invert(coordinates);
  };

  albersUsa.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function(_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function(_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function(_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(), x = +_[0], y = +_[1];

    lower48Point = lower48
        .translate(_)
        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
        .stream(pointStream);

    alaskaPoint = alaska
        .translate([x - 0.307 * k, y + 0.201 * k])
        .clipExtent([[x - 0.425 * k + _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon, y + 0.120 * k + _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon], [x - 0.214 * k - _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon, y + 0.234 * k - _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon]])
        .stream(pointStream);

    hawaiiPoint = hawaii
        .translate([x - 0.205 * k, y + 0.212 * k])
        .clipExtent([[x - 0.214 * k + _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon, y + 0.166 * k + _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon], [x - 0.115 * k - _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon, y + 0.234 * k - _math_js__WEBPACK_IMPORTED_MODULE_2__.epsilon]])
        .stream(pointStream);

    return reset();
  };

  albersUsa.fitExtent = function(extent, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_3__.fitExtent)(albersUsa, extent, object);
  };

  albersUsa.fitSize = function(size, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_3__.fitSize)(albersUsa, size, object);
  };

  albersUsa.fitWidth = function(width, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_3__.fitWidth)(albersUsa, width, object);
  };

  albersUsa.fitHeight = function(height, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_3__.fitHeight)(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthal.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthal.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "azimuthalRaw": () => /* binding */ azimuthalRaw,
/* harmony export */   "azimuthalInvert": () => /* binding */ azimuthalInvert
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


function azimuthalRaw(scale) {
  return function(x, y) {
    var cx = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(x),
        cy = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y),
        k = scale(cx * cy);
        if (k === Infinity) return [2, 0];
    return [
      k * cy * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(x),
      k * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y)
    ];
  }
}

function azimuthalInvert(angle) {
  return function(x, y) {
    var z = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(x * x + y * y),
        c = angle(z),
        sc = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(c),
        cc = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(c);
    return [
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(x * sc, z * cc),
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(z && y * sc / z)
    ];
  }
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "azimuthalEqualAreaRaw": () => /* binding */ azimuthalEqualAreaRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




var azimuthalEqualAreaRaw = (0,_azimuthal_js__WEBPACK_IMPORTED_MODULE_0__.azimuthalRaw)(function(cxcy) {
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sqrt)(2 / (1 + cxcy));
});

azimuthalEqualAreaRaw.invert = (0,_azimuthal_js__WEBPACK_IMPORTED_MODULE_0__.azimuthalInvert)(function(z) {
  return 2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.asin)(z / 2);
});

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.default)(azimuthalEqualAreaRaw)
      .scale(124.75)
      .clipAngle(180 - 1e-3);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "azimuthalEquidistantRaw": () => /* binding */ azimuthalEquidistantRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




var azimuthalEquidistantRaw = (0,_azimuthal_js__WEBPACK_IMPORTED_MODULE_0__.azimuthalRaw)(function(c) {
  return (c = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.acos)(c)) && c / (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(c);
});

azimuthalEquidistantRaw.invert = (0,_azimuthal_js__WEBPACK_IMPORTED_MODULE_0__.azimuthalInvert)(function(z) {
  return z;
});

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.default)(azimuthalEquidistantRaw)
      .scale(79.4188)
      .clipAngle(180 - 1e-3);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conic.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conic.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conicProjection": () => /* binding */ conicProjection
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");



function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math_js__WEBPACK_IMPORTED_MODULE_0__.pi / 3,
      m = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.projectionMutator)(projectAt),
      p = m(phi0, phi1);

  p.parallels = function(_) {
    return arguments.length ? m(phi0 = _[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians, phi1 = _[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians) : [phi0 * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees, phi1 * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees];
  };

  return p;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicConformal.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicConformal.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conicConformalRaw": () => /* binding */ conicConformalRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conic.js */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _mercator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mercator.js */ "./node_modules/d3-geo/src/projection/mercator.js");




function tany(y) {
  return (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tan)((_math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y0),
      n = y0 === y1 ? (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y0) : (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.log)(cy0 / (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y1)) / (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.log)(tany(y1) / tany(y0)),
      f = cy0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.pow)(tany(y0), n) / n;

  if (!n) return _mercator_js__WEBPACK_IMPORTED_MODULE_1__.mercatorRaw;

  function project(x, y) {
    if (f > 0) { if (y < -_math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi + _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) y = -_math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi + _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon; }
    else { if (y > _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi - _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) y = _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi - _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon; }
    var r = f / (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.pow)(tany(y), n);
    return [r * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(n * x), f - r * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(n * x)];
  }

  project.invert = function(x, y) {
    var fy = f - y, r = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(n) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(x * x + fy * fy),
      l = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(x, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(fy)) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(fy);
    if (fy * n < 0)
      l -= _math_js__WEBPACK_IMPORTED_MODULE_0__.pi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(x) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(fy);
    return [l / n, 2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.pow)(f / r, 1 / n)) - _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi];
  };

  return project;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_conic_js__WEBPACK_IMPORTED_MODULE_2__.conicProjection)(conicConformalRaw)
      .scale(109.5)
      .parallels([30, 30]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEqualArea.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEqualArea.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conicEqualAreaRaw": () => /* binding */ conicEqualAreaRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conic.js */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _cylindricalEqualArea_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cylindricalEqualArea.js */ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js");




function conicEqualAreaRaw(y0, y1) {
  var sy0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y0), n = (sy0 + (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y1)) / 2;

  // Are the parallels symmetrical around the Equator?
  if ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(n) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) return (0,_cylindricalEqualArea_js__WEBPACK_IMPORTED_MODULE_1__.cylindricalEqualAreaRaw)(y0);

  var c = 1 + sy0 * (2 * n - sy0), r0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(c) / n;

  function project(x, y) {
    var r = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(c - 2 * n * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y)) / n;
    return [r * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(x *= n), r0 - r * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(x)];
  }

  project.invert = function(x, y) {
    var r0y = r0 - y,
        l = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(x, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(r0y)) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(r0y);
    if (r0y * n < 0)
      l -= _math_js__WEBPACK_IMPORTED_MODULE_0__.pi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(x) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(r0y);
    return [l / n, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_conic_js__WEBPACK_IMPORTED_MODULE_2__.conicProjection)(conicEqualAreaRaw)
      .scale(155.424)
      .center([0, 33.6442]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEquidistant.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEquidistant.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "conicEquidistantRaw": () => /* binding */ conicEquidistantRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conic.js */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _equirectangular_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./equirectangular.js */ "./node_modules/d3-geo/src/projection/equirectangular.js");




function conicEquidistantRaw(y0, y1) {
  var cy0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y0),
      n = y0 === y1 ? (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y0) : (cy0 - (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y1)) / (y1 - y0),
      g = cy0 / n + y0;

  if ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(n) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) return _equirectangular_js__WEBPACK_IMPORTED_MODULE_1__.equirectangularRaw;

  function project(x, y) {
    var gy = g - y, nx = n * x;
    return [gy * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(nx), g - gy * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(nx)];
  }

  project.invert = function(x, y) {
    var gy = g - y,
        l = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(x, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(gy)) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(gy);
    if (gy * n < 0)
      l -= _math_js__WEBPACK_IMPORTED_MODULE_0__.pi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(x) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(gy);
    return [l / n, g - (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)(n) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(x * x + gy * gy)];
  };

  return project;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_conic_js__WEBPACK_IMPORTED_MODULE_2__.conicProjection)(conicEquidistantRaw)
      .scale(131.154)
      .center([0, 13.9389]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cylindricalEqualAreaRaw": () => /* binding */ cylindricalEqualAreaRaw
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi) / cosPhi0];
  }

  forward.invert = function(x, y) {
    return [x / cosPhi0, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(y * cosPhi0)];
  };

  return forward;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equalEarth.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equalEarth.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "equalEarthRaw": () => /* binding */ equalEarthRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(M * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi)), l2 = l * l, l6 = l2 * l2 * l2;
  return [
    lambda * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
  ];
}

equalEarthRaw.invert = function(x, y) {
  var l = y, l2 = l * l, l6 = l2 * l2 * l2;
  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(delta) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon2) break;
  }
  return [
    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(l),
    (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(l) / M)
  ];
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.default)(equalEarthRaw)
      .scale(177.158);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equirectangular.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equirectangular.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "equirectangularRaw": () => /* binding */ equirectangularRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");


function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.default)(equirectangularRaw)
      .scale(152.63);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/fit.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/fit.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fitExtent": () => /* binding */ fitExtent,
/* harmony export */   "fitSize": () => /* binding */ fitSize,
/* harmony export */   "fitWidth": () => /* binding */ fitWidth,
/* harmony export */   "fitHeight": () => /* binding */ fitHeight
/* harmony export */ });
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stream.js */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _path_bounds_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../path/bounds.js */ "./node_modules/d3-geo/src/path/bounds.js");



function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  (0,_stream_js__WEBPACK_IMPORTED_MODULE_0__.default)(object, projection.stream(_path_bounds_js__WEBPACK_IMPORTED_MODULE_1__.default));
  fitBounds(_path_bounds_js__WEBPACK_IMPORTED_MODULE_1__.default.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function(b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function(b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function(b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/gnomonic.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/gnomonic.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gnomonicRaw": () => /* binding */ gnomonicRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function gnomonicRaw(x, y) {
  var cy = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y), k = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(x) * cy;
  return [cy * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(x) / k, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y) / k];
}

gnomonicRaw.invert = (0,_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__.azimuthalInvert)(_math_js__WEBPACK_IMPORTED_MODULE_0__.atan);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.default)(gnomonicRaw)
      .scale(144.049)
      .clipAngle(60);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/identity.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/identity.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clip/rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../identity.js */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transform.js */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fit.js */ "./node_modules/d3-geo/src/projection/fit.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");






/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect
      alpha = 0, ca, sa, // angle
      x0 = null, y0, x1, y1, // clip extent
      kx = 1, ky = 1,
      transform = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.transformer)({
        point: function(x, y) {
          var p = projection([x, y])
          this.stream.point(p[0], p[1]);
        }
      }),
      postclip = _identity_js__WEBPACK_IMPORTED_MODULE_1__.default,
      cache,
      cacheStream;

  function reset() {
    kx = k * sx;
    ky = k * sy;
    cache = cacheStream = null;
    return projection;
  }

  function projection (p) {
    var x = p[0] * kx, y = p[1] * ky;
    if (alpha) {
      var t = y * ca - x * sa;
      x = x * ca + y * sa;
      y = t;
    }    
    return [x + tx, y + ty];
  }
  projection.invert = function(p) {
    var x = p[0] - tx, y = p[1] - ty;
    if (alpha) {
      var t = y * ca + x * sa;
      x = x * ca - y * sa;
      y = t;
    }
    return [x / kx, y / ky];
  };
  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
  };
  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };
  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity_js__WEBPACK_IMPORTED_MODULE_1__.default) : (0,_clip_rectangle_js__WEBPACK_IMPORTED_MODULE_2__.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };
  projection.scale = function(_) {
    return arguments.length ? (k = +_, reset()) : k;
  };
  projection.translate = function(_) {
    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
  }
  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * _math_js__WEBPACK_IMPORTED_MODULE_3__.radians, sa = (0,_math_js__WEBPACK_IMPORTED_MODULE_3__.sin)(alpha), ca = (0,_math_js__WEBPACK_IMPORTED_MODULE_3__.cos)(alpha), reset()) : alpha * _math_js__WEBPACK_IMPORTED_MODULE_3__.degrees;
  };
  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
  };
  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
  };
  projection.fitExtent = function(extent, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_4__.fitExtent)(projection, extent, object);
  };
  projection.fitSize = function(size, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_4__.fitSize)(projection, size, object);
  };
  projection.fitWidth = function(width, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_4__.fitWidth)(projection, width, object);
  };
  projection.fitHeight = function(height, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_4__.fitHeight)(projection, height, object);
  };

  return projection;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ projection,
/* harmony export */   "projectionMutator": () => /* binding */ projectionMutator
/* harmony export */ });
/* harmony import */ var _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clip/antimeridian.js */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony import */ var _clip_circle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../clip/circle.js */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony import */ var _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../clip/rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _compose_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../compose.js */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../identity.js */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../rotation.js */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transform.js */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fit.js */ "./node_modules/d3-geo/src/projection/fit.js");
/* harmony import */ var _resample_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./resample.js */ "./node_modules/d3-geo/src/projection/resample.js");











var transformRadians = (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.transformer)({
  point: function(x, y) {
    this.stream.point(x * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, y * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians);
  }
});

function transformRotate(rotate) {
  return (0,_transform_js__WEBPACK_IMPORTED_MODULE_0__.transformer)({
    point: function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx; y *= sy;
    return [dx + k * x, dy - k * y];
  }
  transform.invert = function(x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };
  return transform;
}

function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);
  var cosAlpha = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.cos)(alpha),
      sinAlpha = (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sin)(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;
  function transform(x, y) {
    x *= sx; y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }
  transform.invert = function(x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };
  return transform;
}

function projection(project) {
  return projectionMutator(function() { return project; })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150, // scale
      x = 480, y = 250, // translate
      lambda = 0, phi = 0, // center
      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
      alpha = 0, // post-rotate angle
      sx = 1, // reflectX
      sy = 1, // reflectX
      theta = null, preclip = _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_2__.default, // pre-clip angle
      x0 = null, y0, x1, y1, postclip = _identity_js__WEBPACK_IMPORTED_MODULE_3__.default, // post-clip extent
      delta2 = 0.5, // precision
      projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, point[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees, point[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees];
  }

  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? (0,_clip_circle_js__WEBPACK_IMPORTED_MODULE_4__.default)(theta = _ * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians) : (theta = null, _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_2__.default), reset()) : theta * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees;
  };

  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity_js__WEBPACK_IMPORTED_MODULE_3__.default) : (0,_clip_rectangle_js__WEBPACK_IMPORTED_MODULE_5__.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function(_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function(_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, phi = _[1] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, recenter()) : [lambda * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees, phi * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees];
  };

  projection.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, deltaPhi = _[1] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians : 0, recenter()) : [deltaLambda * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees, deltaPhi * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees, deltaGamma * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees];
  };

  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians, recenter()) : alpha * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees;
  };

  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };

  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };

  projection.precision = function(_) {
    return arguments.length ? (projectResample = (0,_resample_js__WEBPACK_IMPORTED_MODULE_6__.default)(projectTransform, delta2 = _ * _), reset()) : (0,_math_js__WEBPACK_IMPORTED_MODULE_1__.sqrt)(delta2);
  };

  projection.fitExtent = function(extent, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_7__.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function(size, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_7__.fitSize)(projection, size, object);
  };

  projection.fitWidth = function(width, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_7__.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function(height, object) {
    return (0,_fit_js__WEBPACK_IMPORTED_MODULE_7__.fitHeight)(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = (0,_rotation_js__WEBPACK_IMPORTED_MODULE_8__.rotateRadians)(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = (0,_compose_js__WEBPACK_IMPORTED_MODULE_9__.default)(project, transform);
    projectRotateTransform = (0,_compose_js__WEBPACK_IMPORTED_MODULE_9__.default)(rotate, projectTransform);
    projectResample = (0,_resample_js__WEBPACK_IMPORTED_MODULE_6__.default)(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function() {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/mercator.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/mercator.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mercatorRaw": () => /* binding */ mercatorRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "mercatorProjection": () => /* binding */ mercatorProjection
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../rotation.js */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function mercatorRaw(lambda, phi) {
  return [lambda, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.log)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tan)((_math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi + phi) / 2))];
}

mercatorRaw.invert = function(x, y) {
  return [x, 2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.exp)(y)) - _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi];
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return mercatorProjection(mercatorRaw)
      .scale(961 / _math_js__WEBPACK_IMPORTED_MODULE_0__.tau);
}

function mercatorProjection(project) {
  var m = (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.default)(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null, y0, x1, y1; // clip extent

  m.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function(_) {
    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math_js__WEBPACK_IMPORTED_MODULE_0__.pi * scale(),
        t = m((0,_rotation_js__WEBPACK_IMPORTED_MODULE_2__.default)(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null
        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/naturalEarth1.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/naturalEarth1.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "naturalEarth1Raw": () => /* binding */ naturalEarth1Raw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi, phi4 = phi2 * phi2;
  return [
    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
  ];
}

naturalEarth1Raw.invert = function(x, y) {
  var phi = y, i = 25, delta;
  do {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /
        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(delta) > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon && --i > 0);
  return [
    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
    phi
  ];
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_1__.default)(naturalEarth1Raw)
      .scale(175.295);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/orthographic.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/orthographic.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "orthographicRaw": () => /* binding */ orthographicRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function orthographicRaw(x, y) {
  return [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(x), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y)];
}

orthographicRaw.invert = (0,_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__.azimuthalInvert)(_math_js__WEBPACK_IMPORTED_MODULE_0__.asin);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.default)(orthographicRaw)
      .scale(249.5)
      .clipAngle(90 + _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/resample.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/resample.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transform.js */ "./node_modules/d3-geo/src/transform.js");




var maxDepth = 16, // maximum depth of subdivision
    cosMinDistance = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(30 * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians); // cos(minimum angular distance)

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return (0,_transform_js__WEBPACK_IMPORTED_MODULE_1__.transformer)({
    point: function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {

  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(a * a + b * b + c * c),
          phi2 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(c /= m),
          lambda2 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(c) - 1) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon || (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(lambda0 - lambda1) < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon ? (lambda0 + lambda1) / 2 : (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 // perpendicular projected distance
          || (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
        lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_2__.cartesian)([lambda, phi]), p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/stereographic.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/stereographic.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "stereographicRaw": () => /* binding */ stereographicRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function stereographicRaw(x, y) {
  var cy = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(y), k = 1 + (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(x) * cy;
  return [cy * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(x) / k, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(y) / k];
}

stereographicRaw.invert = (0,_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__.azimuthalInvert)(function(z) {
  return 2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan)(z);
});

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return (0,_index_js__WEBPACK_IMPORTED_MODULE_2__.default)(stereographicRaw)
      .scale(250)
      .clipAngle(142);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/transverseMercator.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/transverseMercator.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "transverseMercatorRaw": () => /* binding */ transverseMercatorRaw,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _mercator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mercator.js */ "./node_modules/d3-geo/src/projection/mercator.js");



function transverseMercatorRaw(lambda, phi) {
  return [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.log)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.tan)((_math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function(x, y) {
  return [-y, 2 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.exp)(x)) - _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi];
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var m = (0,_mercator_js__WEBPACK_IMPORTED_MODULE_1__.mercatorProjection)(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function(_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function(_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90])
      .scale(159.155);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/rotation.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/rotation.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "rotateRadians": () => /* binding */ rotateRadians,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _compose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compose.js */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");



function rotationIdentity(lambda, phi) {
  return [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(lambda) > _math_js__WEBPACK_IMPORTED_MODULE_0__.pi ? lambda + Math.round(-lambda / _math_js__WEBPACK_IMPORTED_MODULE_0__.tau) * _math_js__WEBPACK_IMPORTED_MODULE_0__.tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math_js__WEBPACK_IMPORTED_MODULE_0__.tau) ? (deltaPhi || deltaGamma ? (0,_compose_js__WEBPACK_IMPORTED_MODULE_1__.default)(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
    : rotationLambda(deltaLambda))
    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
    : rotationIdentity);
}

function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > _math_js__WEBPACK_IMPORTED_MODULE_0__.pi ? lambda - _math_js__WEBPACK_IMPORTED_MODULE_0__.tau : lambda < -_math_js__WEBPACK_IMPORTED_MODULE_0__.pi ? lambda + _math_js__WEBPACK_IMPORTED_MODULE_0__.tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(deltaPhi),
      sinDeltaPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(deltaPhi),
      cosDeltaGamma = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(deltaGamma),
      sinDeltaGamma = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi),
        x = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda) * cosPhi,
        y = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda) * cosPhi,
        z = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(k * cosDeltaGamma + y * sinDeltaGamma)
    ];
  }

  rotation.invert = function(lambda, phi) {
    var cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi),
        x = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda) * cosPhi,
        y = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda) * cosPhi,
        z = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
      (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(k * cosDeltaPhi - x * sinDeltaPhi)
    ];
  };

  return rotation;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(rotate) {
  rotate = rotateRadians(rotate[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians, rotate[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians, rotate.length > 2 ? rotate[2] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians, coordinates[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians);
    return coordinates[0] *= _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees, coordinates[1] *= _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees, coordinates;
  }

  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians, coordinates[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians);
    return coordinates[0] *= _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees, coordinates[1] *= _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees, coordinates;
  };

  return forward;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/stream.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/stream.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function(object, stream) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};

var streamGeometryType = {
  Sphere: function(object, stream) {
    stream.sphere();
  },
  Point: function(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function(object, stream) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1, n = coordinates.length - closed, coordinate;
  stream.lineStart();
  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1, n = coordinates.length;
  stream.polygonStart();
  while (++i < n) streamLine(coordinates[i], stream, 1);
  stream.polygonEnd();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}


/***/ }),

/***/ "./node_modules/d3-geo/src/transform.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/transform.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "transformer": () => /* binding */ transformer
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function(stream) {
    var s = new TransformStream;
    for (var key in methods) s[key] = methods[key];
    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x, y) { this.stream.point(x, y); },
  sphere: function() { this.stream.sphere(); },
  lineStart: function() { this.stream.lineStart(); },
  lineEnd: function() { this.stream.lineEnd(); },
  polygonStart: function() { this.stream.polygonStart(); },
  polygonEnd: function() { this.stream.polygonEnd(); }
};


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/accessors.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/accessors.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "optional": () => /* binding */ optional,
/* harmony export */   "required": () => /* binding */ required
/* harmony export */ });
function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error;
  return f;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/array.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/array.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "shuffle": () => /* binding */ shuffle
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/cluster.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/cluster.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;
  while (children = node.children) node = children[0];
  return node;
}

function leafRight(node) {
  var children;
  while (children = node.children) node = children[children.length - 1];
  return node;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0;

    // First walk, computing the initial x & y values.
    root.eachAfter(function(node) {
      var children = node.children;
      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });

    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2;

    // Second walk, normalizing x & y to the desired size.
    return root.eachAfter(nodeSize ? function(node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function(node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function(x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
  };

  cluster.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
  };

  return cluster;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/constant.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "constantZero": () => /* binding */ constantZero,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function constantZero() {
  return 0;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/ancestors.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/count.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/count.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;
  else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.eachAfter(count);
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/descendants.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return Array.from(this);
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/each.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, that) {
  let index = -1;
  for (const node of this) {
    callback.call(that, node, ++index, this);
  }
  return this;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, that) {
  var node = this, nodes = [node], next = [], children, i, n, index = -1;
  while (node = nodes.pop()) {
    next.push(node);
    if (children = node.children) {
      for (i = 0, n = children.length; i < n; ++i) {
        nodes.push(children[i]);
      }
    }
  }
  while (node = next.pop()) {
    callback.call(that, node, ++index, this);
  }
  return this;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, that) {
  var node = this, nodes = [node], children, i, index = -1;
  while (node = nodes.pop()) {
    callback.call(that, node, ++index, this);
    if (children = node.children) {
      for (i = children.length - 1; i >= 0; --i) {
        nodes.push(children[i]);
      }
    }
  }
  return this;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/find.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/find.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, that) {
  let index = -1;
  for (const node of this) {
    if (callback.call(that, node, ++index, this)) {
      return node;
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ hierarchy,
/* harmony export */   "computeHeight": () => /* binding */ computeHeight,
/* harmony export */   "Node": () => /* binding */ Node
/* harmony export */ });
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./count.js */ "./node_modules/d3-hierarchy/src/hierarchy/count.js");
/* harmony import */ var _each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./each.js */ "./node_modules/d3-hierarchy/src/hierarchy/each.js");
/* harmony import */ var _eachBefore_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eachBefore.js */ "./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js");
/* harmony import */ var _eachAfter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eachAfter.js */ "./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js");
/* harmony import */ var _find_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./find.js */ "./node_modules/d3-hierarchy/src/hierarchy/find.js");
/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sum.js */ "./node_modules/d3-hierarchy/src/hierarchy/sum.js");
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sort.js */ "./node_modules/d3-hierarchy/src/hierarchy/sort.js");
/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./path.js */ "./node_modules/d3-hierarchy/src/hierarchy/path.js");
/* harmony import */ var _ancestors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ancestors.js */ "./node_modules/d3-hierarchy/src/hierarchy/ancestors.js");
/* harmony import */ var _descendants_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./descendants.js */ "./node_modules/d3-hierarchy/src/hierarchy/descendants.js");
/* harmony import */ var _leaves_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./leaves.js */ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js");
/* harmony import */ var _links_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./links.js */ "./node_modules/d3-hierarchy/src/hierarchy/links.js");
/* harmony import */ var _iterator_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./iterator.js */ "./node_modules/d3-hierarchy/src/hierarchy/iterator.js");














function hierarchy(data, children) {
  if (data instanceof Map) {
    data = [undefined, data];
    if (children === undefined) children = mapChildren;
  } else if (children === undefined) {
    children = objectChildren;
  }

  var root = new Node(data),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;

  while (node = nodes.pop()) {
    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {
      node.children = childs;
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = childs[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function objectChildren(d) {
  return d.children;
}

function mapChildren(d) {
  return Array.isArray(d) ? d[1] : null;
}

function copyData(node) {
  if (node.data.value !== undefined) node.value = node.data.value;
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;
  do node.height = height;
  while ((node = node.parent) && (node.height < ++height));
}

function Node(data) {
  this.data = data;
  this.depth =
  this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count_js__WEBPACK_IMPORTED_MODULE_0__.default,
  each: _each_js__WEBPACK_IMPORTED_MODULE_1__.default,
  eachAfter: _eachAfter_js__WEBPACK_IMPORTED_MODULE_2__.default,
  eachBefore: _eachBefore_js__WEBPACK_IMPORTED_MODULE_3__.default,
  find: _find_js__WEBPACK_IMPORTED_MODULE_4__.default,
  sum: _sum_js__WEBPACK_IMPORTED_MODULE_5__.default,
  sort: _sort_js__WEBPACK_IMPORTED_MODULE_6__.default,
  path: _path_js__WEBPACK_IMPORTED_MODULE_7__.default,
  ancestors: _ancestors_js__WEBPACK_IMPORTED_MODULE_8__.default,
  descendants: _descendants_js__WEBPACK_IMPORTED_MODULE_9__.default,
  leaves: _leaves_js__WEBPACK_IMPORTED_MODULE_10__.default,
  links: _links_js__WEBPACK_IMPORTED_MODULE_11__.default,
  copy: node_copy,
  [Symbol.iterator]: _iterator_js__WEBPACK_IMPORTED_MODULE_12__.default
};


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/iterator.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function* __WEBPACK_DEFAULT_EXPORT__() {
  var node = this, current, next = [node], children, i, n;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      yield node;
      if (children = node.children) {
        for (i = 0, n = children.length; i < n; ++i) {
          next.push(children[i]);
        }
      }
    }
  } while (next.length);
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/leaves.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/leaves.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/links.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/links.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var root = this, links = [];
  root.each(function(node) {
    if (node !== root) { // Don’t include the root’s parent, if any.
      links.push({source: node.parent, target: node});
    }
  });
  return links;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/path.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/path.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];
  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }
  var k = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }
  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();
  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }
  return c;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sort.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/hierarchy/sum.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/hierarchy/sum.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return this.eachAfter(function(node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;
    while (--i >= 0) sum += children[i].value;
    node.value = sum;
  });
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cluster": () => /* reexport safe */ _cluster_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "hierarchy": () => /* reexport safe */ _hierarchy_index_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "pack": () => /* reexport safe */ _pack_index_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "packSiblings": () => /* reexport safe */ _pack_siblings_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "packEnclose": () => /* reexport safe */ _pack_enclose_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "partition": () => /* reexport safe */ _partition_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "stratify": () => /* reexport safe */ _stratify_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "tree": () => /* reexport safe */ _tree_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "treemap": () => /* reexport safe */ _treemap_index_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "treemapBinary": () => /* reexport safe */ _treemap_binary_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "treemapDice": () => /* reexport safe */ _treemap_dice_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "treemapSlice": () => /* reexport safe */ _treemap_slice_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "treemapSliceDice": () => /* reexport safe */ _treemap_sliceDice_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "treemapSquarify": () => /* reexport safe */ _treemap_squarify_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "treemapResquarify": () => /* reexport safe */ _treemap_resquarify_js__WEBPACK_IMPORTED_MODULE_14__.default
/* harmony export */ });
/* harmony import */ var _cluster_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cluster.js */ "./node_modules/d3-hierarchy/src/cluster.js");
/* harmony import */ var _hierarchy_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hierarchy/index.js */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");
/* harmony import */ var _pack_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pack/index.js */ "./node_modules/d3-hierarchy/src/pack/index.js");
/* harmony import */ var _pack_siblings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pack/siblings.js */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony import */ var _pack_enclose_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pack/enclose.js */ "./node_modules/d3-hierarchy/src/pack/enclose.js");
/* harmony import */ var _partition_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./partition.js */ "./node_modules/d3-hierarchy/src/partition.js");
/* harmony import */ var _stratify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./stratify.js */ "./node_modules/d3-hierarchy/src/stratify.js");
/* harmony import */ var _tree_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tree.js */ "./node_modules/d3-hierarchy/src/tree.js");
/* harmony import */ var _treemap_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./treemap/index.js */ "./node_modules/d3-hierarchy/src/treemap/index.js");
/* harmony import */ var _treemap_binary_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./treemap/binary.js */ "./node_modules/d3-hierarchy/src/treemap/binary.js");
/* harmony import */ var _treemap_dice_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./treemap/dice.js */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _treemap_slice_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./treemap/slice.js */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony import */ var _treemap_sliceDice_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./treemap/sliceDice.js */ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js");
/* harmony import */ var _treemap_squarify_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./treemap/squarify.js */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony import */ var _treemap_resquarify_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./treemap/resquarify.js */ "./node_modules/d3-hierarchy/src/treemap/resquarify.js");

















/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/enclose.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/enclose.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/d3-hierarchy/src/array.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(circles) {
  var i = 0, n = (circles = (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.shuffle)(Array.from(circles))).length, B = [], p, e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;
    else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;

  if (enclosesWeakAll(p, B)) return [p];

  // If we get here then B must have at least one element.
  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i])
        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  }

  // If we get here then B must have at least two elements.
  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p)
          && enclosesNot(encloseBasis2(B[i], p), B[j])
          && enclosesNot(encloseBasis2(B[j], p), B[i])
          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  }

  // If we get here then something is very wrong.
  throw new Error;
}

function enclosesNot(a, b) {
  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }
  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1: return encloseBasis1(B[0]);
    case 2: return encloseBasis2(B[0], B[1]);
    case 3: return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x3 = c.x, y3 = c.y, r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _siblings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./siblings.js */ "./node_modules/d3-hierarchy/src/pack/siblings.js");
/* harmony import */ var _accessors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../accessors.js */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constant.js */ "./node_modules/d3-hierarchy/src/constant.js");




function defaultRadius(d) {
  return Math.sqrt(d.value);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant_js__WEBPACK_IMPORTED_MODULE_0__.constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;
    if (radius) {
      root.eachBefore(radiusLeaf(radius))
          .eachAfter(packChildren(padding, 0.5))
          .eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius))
          .eachAfter(packChildren(_constant_js__WEBPACK_IMPORTED_MODULE_0__.constantZero, 1))
          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))
          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }
    return root;
  }

  pack.radius = function(x) {
    return arguments.length ? (radius = (0,_accessors_js__WEBPACK_IMPORTED_MODULE_1__.optional)(x), pack) : radius;
  };

  pack.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function(x) {
    return arguments.length ? (padding = typeof x === "function" ? x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function(node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function(node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;

      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = (0,_siblings_js__WEBPACK_IMPORTED_MODULE_2__.packEnclose)(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function(node) {
    var parent = node.parent;
    node.r *= k;
    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/pack/siblings.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/pack/siblings.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "packEnclose": () => /* binding */ packEnclose,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/d3-hierarchy/src/array.js");
/* harmony import */ var _enclose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enclose.js */ "./node_modules/d3-hierarchy/src/pack/enclose.js");



function place(b, a, c) {
  var dx = b.x - a.x, x, a2,
      dy = b.y - a.y, y, b2,
      d2 = dx * dx + dy * dy;
  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;
    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = (circles = (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.default)(circles)).length)) return 0;

  var a, b, c, n, aa, ca, i, j, k, sj, sk;

  // Place the first circle.
  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r;

  // Place the second circle.
  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r;

  // Place the third circle.
  place(b, a, c = circles[2]);

  // Initialize the front-chain using the first three circles a, b and c.
  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a;

  // Attempt to place each remaining circle…
  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c);

    // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.
    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;
    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next);

    // Success! Insert the new circle c between a and b.
    c.previous = a, c.next = b, a.next = b.previous = b = c;

    // Compute the new closest circle pair to the centroid.
    aa = score(a);
    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }
    b = a.next;
  }

  // Compute the enclosing circle of the front chain.
  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = (0,_enclose_js__WEBPACK_IMPORTED_MODULE_1__.default)(a);

  // Translate the circles to put the enclosing circle around the origin.
  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(circles) {
  packEnclose(circles);
  return circles;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/partition.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/partition.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _treemap_round_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./treemap/round.js */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _treemap_dice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./treemap/dice.js */ "./node_modules/d3-hierarchy/src/treemap/dice.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 =
    root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_treemap_round_js__WEBPACK_IMPORTED_MODULE_0__.default);
    return root;
  }

  function positionNode(dy, n) {
    return function(node) {
      if (node.children) {
        (0,_treemap_dice_js__WEBPACK_IMPORTED_MODULE_1__.default)(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }
      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function(x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function(x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/stratify.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/stratify.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _accessors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./accessors.js */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _hierarchy_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hierarchy/index.js */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");



var preroot = {depth: -1},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var nodes = Array.from(data),
        n = nodes.length,
        d,
        i,
        root,
        parent,
        node,
        nodeId,
        nodeKey,
        nodeByKey = new Map;

    for (i = 0; i < n; ++i) {
      d = nodes[i], node = nodes[i] = new _hierarchy_index_js__WEBPACK_IMPORTED_MODULE_0__.Node(d);
      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = node.id = nodeId;
        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);
      }
      if ((nodeId = parentId(d, i, data)) != null && (nodeId += "")) {
        node.parent = nodeId;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i];
      if (nodeId = node.parent) {
        parent = nodeByKey.get(nodeId);
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);
        else parent.children = [node];
        node.parent = parent;
      } else {
        if (root) throw new Error("multiple roots");
        root = node;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(_hierarchy_index_js__WEBPACK_IMPORTED_MODULE_0__.computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");

    return root;
  }

  stratify.id = function(x) {
    return arguments.length ? (id = (0,_accessors_js__WEBPACK_IMPORTED_MODULE_1__.required)(x), stratify) : id;
  };

  stratify.parentId = function(x) {
    return arguments.length ? (parentId = (0,_accessors_js__WEBPACK_IMPORTED_MODULE_1__.required)(x), stratify) : parentId;
  };

  return stratify;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/tree.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-hierarchy/src/tree.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _hierarchy_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hierarchy/index.js */ "./node_modules/d3-hierarchy/src/hierarchy/index.js");


function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

// function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }

// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.
function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
}

// This function works analogously to nextLeft.
function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
}

// Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.
function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
}

// All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).
function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;
  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
}

// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.
function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor
  this.a = this; // ancestor
  this.z = 0; // prelim
  this.m = 0; // mod
  this.c = 0; // change
  this.s = 0; // shift
  this.t = null; // thread
  this.i = i; // number
}

TreeNode.prototype = Object.create(_hierarchy_index_js__WEBPACK_IMPORTED_MODULE_0__.Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
}

// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root);

    // Compute the layout using Buchheim et al.’s algorithm.
    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk);

    // If a fixed node size is specified, scale x and y.
    if (nodeSize) root.eachBefore(sizeNode);

    // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
      var left = root,
          right = root,
          bottom = root;
      root.eachBefore(function(node) {
        if (node.x < left.x) left = node;
        if (node.x > right.x) right = node;
        if (node.depth > bottom.depth) bottom = node;
      });
      var s = left === right ? 1 : separation(left, right) / 2,
          tx = s - left.x,
          kx = dx / (right.x + s + tx),
          ky = dy / (bottom.depth || 1);
      root.eachBefore(function(node) {
        node.x = (node.x + tx) * kx;
        node.y = node.depth * ky;
      });
    }

    return root;
  }

  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.
  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;
    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;
      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }
    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  }

  // Computes all real x-coordinates by summing up the modifiers recursively.
  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  }

  // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).
  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;
      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }
        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }
      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }
      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }
    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function(x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
  };

  tree.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
  };

  return tree;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/binary.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/binary.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i, n = nodes.length,
      sum, sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = (value / 2) + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;
      else hi = mid;
    }

    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;

    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if ((x1 - x0) > (y1 - y0)) {
      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/dice.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/dice.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/index.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./round.js */ "./node_modules/d3-hierarchy/src/treemap/round.js");
/* harmony import */ var _squarify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./squarify.js */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");
/* harmony import */ var _accessors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../accessors.js */ "./node_modules/d3-hierarchy/src/accessors.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constant.js */ "./node_modules/d3-hierarchy/src/constant.js");





/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var tile = _squarify_js__WEBPACK_IMPORTED_MODULE_0__.default,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant_js__WEBPACK_IMPORTED_MODULE_1__.constantZero,
      paddingTop = _constant_js__WEBPACK_IMPORTED_MODULE_1__.constantZero,
      paddingRight = _constant_js__WEBPACK_IMPORTED_MODULE_1__.constantZero,
      paddingBottom = _constant_js__WEBPACK_IMPORTED_MODULE_1__.constantZero,
      paddingLeft = _constant_js__WEBPACK_IMPORTED_MODULE_1__.constantZero;

  function treemap(root) {
    root.x0 =
    root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round_js__WEBPACK_IMPORTED_MODULE_2__.default);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;
    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function(x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function(x) {
    return arguments.length ? (tile = (0,_accessors_js__WEBPACK_IMPORTED_MODULE_3__.required)(x), treemap) : tile;
  };

  treemap.padding = function(x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function(x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function(x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function(x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function(x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function(x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function(x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+x), treemap) : paddingLeft;
  };

  return treemap;
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/resquarify.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/resquarify.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _dice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice.js */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice.js */ "./node_modules/d3-hierarchy/src/treemap/slice.js");
/* harmony import */ var _squarify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./squarify.js */ "./node_modules/d3-hierarchy/src/treemap/squarify.js");




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(ratio) {

  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && (rows.ratio === ratio)) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;
        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;
        if (row.dice) (0,_dice_js__WEBPACK_IMPORTED_MODULE_0__.default)(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);
        else (0,_slice_js__WEBPACK_IMPORTED_MODULE_1__.default)(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = (0,_squarify_js__WEBPACK_IMPORTED_MODULE_2__.squarifyRatio)(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
})(_squarify_js__WEBPACK_IMPORTED_MODULE_2__.phi));


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/round.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/round.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/slice.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/slice.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/sliceDice.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/sliceDice.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _dice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dice.js */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slice.js */ "./node_modules/d3-hierarchy/src/treemap/slice.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice_js__WEBPACK_IMPORTED_MODULE_0__.default : _dice_js__WEBPACK_IMPORTED_MODULE_1__.default)(parent, x0, y0, x1, y1);
}


/***/ }),

/***/ "./node_modules/d3-hierarchy/src/treemap/squarify.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-hierarchy/src/treemap/squarify.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "phi": () => /* binding */ phi,
/* harmony export */   "squarifyRatio": () => /* binding */ squarifyRatio,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _dice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dice.js */ "./node_modules/d3-hierarchy/src/treemap/dice.js");
/* harmony import */ var _slice_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slice.js */ "./node_modules/d3-hierarchy/src/treemap/slice.js");



var phi = (1 + Math.sqrt(5)) / 2;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx, dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0;

    // Find the next non-empty node.
    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);
    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue);

    // Keep adding nodes while the aspect ratio maintains or improves.
    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);
      if (newRatio > minRatio) { sumValue -= nodeValue; break; }
      minRatio = newRatio;
    }

    // Position and record the row orientation.
    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
    if (row.dice) (0,_dice_js__WEBPACK_IMPORTED_MODULE_0__.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
    else (0,_slice_js__WEBPACK_IMPORTED_MODULE_1__.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(ratio) {

  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
})(phi));


/***/ }),

/***/ "./node_modules/d3-interpolate/src/array.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/array.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "genericArray": () => /* binding */ genericArray
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return ((0,_numberArray_js__WEBPACK_IMPORTED_MODULE_0__.isNumberArray)(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_0__.default : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0,_value_js__WEBPACK_IMPORTED_MODULE_1__.default)(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basis.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "basis": () => /* binding */ basis,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1, t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
      + (4 - 6 * t2 + 3 * t3) * v1
      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
      + t3 * v3) / 6;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basisClosed.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {
  var n = values.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0,_basis_js__WEBPACK_IMPORTED_MODULE_0__.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/color.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/color.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hue": () => /* binding */ hue,
/* harmony export */   "gamma": () => /* binding */ gamma,
/* harmony export */   "default": () => /* binding */ nogamma
/* harmony export */ });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-interpolate/src/constant.js");


function linear(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(isNaN(a) ? b : a);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/constant.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/constant.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/cubehelix.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/cubehelix.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "cubehelixLong": () => /* binding */ cubehelixLong
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/cubehelix.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function cubehelix(hue) {
  return (function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.default)(start)).h, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.default)(end)).h),
          s = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.s, end.s),
          l = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.l, end.l),
          opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;

    return cubehelix;
  })(1);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__.hue));
var cubehelixLong = cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__.default);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/date.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/date.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var d = new Date;
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/discrete.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/discrete.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hcl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hcl.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "hclLong": () => /* binding */ hclLong
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/lab.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function hcl(hue) {
  return function(start, end) {
    var h = hue((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hcl)(start)).h, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hcl)(end)).h),
        c = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.c, end.c),
        l = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.l, end.l),
        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__.hue));
var hclLong = hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__.default);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hsl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hsl.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "hslLong": () => /* binding */ hslLong
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function hsl(hue) {
  return function(start, end) {
    var h = hue((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hsl)(start)).h, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hsl)(end)).h),
        s = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.s, end.s),
        l = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.l, end.l),
        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__.hue));
var hslLong = hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__.default);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hue.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hue.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var i = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.hue)(+a, +b);
  return function(t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "interpolate": () => /* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "interpolateArray": () => /* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "interpolateBasis": () => /* reexport safe */ _basis_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "interpolateBasisClosed": () => /* reexport safe */ _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "interpolateDate": () => /* reexport safe */ _date_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "interpolateDiscrete": () => /* reexport safe */ _discrete_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "interpolateHue": () => /* reexport safe */ _hue_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "interpolateNumber": () => /* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "interpolateNumberArray": () => /* reexport safe */ _numberArray_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "interpolateObject": () => /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "interpolateRound": () => /* reexport safe */ _round_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "interpolateString": () => /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "interpolateTransformCss": () => /* reexport safe */ _transform_index_js__WEBPACK_IMPORTED_MODULE_12__.interpolateTransformCss,
/* harmony export */   "interpolateTransformSvg": () => /* reexport safe */ _transform_index_js__WEBPACK_IMPORTED_MODULE_12__.interpolateTransformSvg,
/* harmony export */   "interpolateZoom": () => /* reexport safe */ _zoom_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "interpolateRgb": () => /* reexport safe */ _rgb_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "interpolateRgbBasis": () => /* reexport safe */ _rgb_js__WEBPACK_IMPORTED_MODULE_14__.rgbBasis,
/* harmony export */   "interpolateRgbBasisClosed": () => /* reexport safe */ _rgb_js__WEBPACK_IMPORTED_MODULE_14__.rgbBasisClosed,
/* harmony export */   "interpolateHsl": () => /* reexport safe */ _hsl_js__WEBPACK_IMPORTED_MODULE_15__.default,
/* harmony export */   "interpolateHslLong": () => /* reexport safe */ _hsl_js__WEBPACK_IMPORTED_MODULE_15__.hslLong,
/* harmony export */   "interpolateLab": () => /* reexport safe */ _lab_js__WEBPACK_IMPORTED_MODULE_16__.default,
/* harmony export */   "interpolateHcl": () => /* reexport safe */ _hcl_js__WEBPACK_IMPORTED_MODULE_17__.default,
/* harmony export */   "interpolateHclLong": () => /* reexport safe */ _hcl_js__WEBPACK_IMPORTED_MODULE_17__.hclLong,
/* harmony export */   "interpolateCubehelix": () => /* reexport safe */ _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__.default,
/* harmony export */   "interpolateCubehelixLong": () => /* reexport safe */ _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__.cubehelixLong,
/* harmony export */   "piecewise": () => /* reexport safe */ _piecewise_js__WEBPACK_IMPORTED_MODULE_19__.default,
/* harmony export */   "quantize": () => /* reexport safe */ _quantize_js__WEBPACK_IMPORTED_MODULE_20__.default
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-interpolate/src/array.js");
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed.js */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date.js */ "./node_modules/d3-interpolate/src/date.js");
/* harmony import */ var _discrete_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./discrete.js */ "./node_modules/d3-interpolate/src/discrete.js");
/* harmony import */ var _hue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hue.js */ "./node_modules/d3-interpolate/src/hue.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./object.js */ "./node_modules/d3-interpolate/src/object.js");
/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./round.js */ "./node_modules/d3-interpolate/src/round.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./string.js */ "./node_modules/d3-interpolate/src/string.js");
/* harmony import */ var _transform_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./transform/index.js */ "./node_modules/d3-interpolate/src/transform/index.js");
/* harmony import */ var _zoom_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./zoom.js */ "./node_modules/d3-interpolate/src/zoom.js");
/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rgb.js */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var _hsl_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./hsl.js */ "./node_modules/d3-interpolate/src/hsl.js");
/* harmony import */ var _lab_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lab.js */ "./node_modules/d3-interpolate/src/lab.js");
/* harmony import */ var _hcl_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./hcl.js */ "./node_modules/d3-interpolate/src/hcl.js");
/* harmony import */ var _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./cubehelix.js */ "./node_modules/d3-interpolate/src/cubehelix.js");
/* harmony import */ var _piecewise_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./piecewise.js */ "./node_modules/d3-interpolate/src/piecewise.js");
/* harmony import */ var _quantize_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./quantize.js */ "./node_modules/d3-interpolate/src/quantize.js");























/***/ }),

/***/ "./node_modules/d3-interpolate/src/lab.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/lab.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ lab
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/lab.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function lab(start, end) {
  var l = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(start)).l, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(end)).l),
      a = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.a, end.a),
      b = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.b, end.b),
      opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.opacity, end.opacity);
  return function(t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/number.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/number.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/numberArray.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/numberArray.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "isNumberArray": () => /* binding */ isNumberArray
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function(t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/object.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/object.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/piecewise.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/piecewise.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ piecewise
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");


function piecewise(interpolate, values) {
  if (values === undefined) values = interpolate, interpolate = _value_js__WEBPACK_IMPORTED_MODULE_0__.default;
  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
  while (i < n) I[i] = interpolate(v, v = values[++i]);
  return function(t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/quantize.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/quantize.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(interpolator, n) {
  var samples = new Array(n);
  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
  return samples;
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/rgb.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/rgb.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "rgbBasis": () => /* binding */ rgbBasis,
/* harmony export */   "rgbBasisClosed": () => /* binding */ rgbBasisClosed
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed.js */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");





/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function rgbGamma(y) {
  var color = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(start)).r, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;

  return rgb;
})(1));

function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i, color;
    for (i = 0; i < n; ++i) {
      color = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function(t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis_js__WEBPACK_IMPORTED_MODULE_2__.default);
var rgbBasisClosed = rgbSpline(_basisClosed_js__WEBPACK_IMPORTED_MODULE_3__.default);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/round.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/round.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/string.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/string.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");


var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/decompose.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/decompose.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "identity": () => /* binding */ identity,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var degrees = 180 / Math.PI;

var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "interpolateTransformCss": () => /* binding */ interpolateTransformCss,
/* harmony export */   "interpolateTransformSvg": () => /* binding */ interpolateTransformSvg
/* harmony export */ });
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../number.js */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ "./node_modules/d3-interpolate/src/transform/parse.js");



function interpolateTransform(parse, pxComma, pxParen, degParen) {

  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({i: i - 4, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(xa, xb)}, {i: i - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(ya, yb)});
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(a, b)});
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(a, b)});
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({i: i - 4, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(xa, xb)}, {i: i - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(ya, yb)});
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function(a, b) {
    var s = [], // string constants and placeholders
        q = []; // number interpolators
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__.parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__.parseSvg, ", ", ")", ")");


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/parse.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/parse.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseCss": () => /* binding */ parseCss,
/* harmony export */   "parseSvg": () => /* binding */ parseSvg
/* harmony export */ });
/* harmony import */ var _decompose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decompose.js */ "./node_modules/d3-interpolate/src/transform/decompose.js");


var svgNode;

/* eslint-disable no-undef */
function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity : (0,_decompose_js__WEBPACK_IMPORTED_MODULE_0__.default)(m.a, m.b, m.c, m.d, m.e, m.f);
}

function parseSvg(value) {
  if (value == null) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity;
  value = value.matrix;
  return (0,_decompose_js__WEBPACK_IMPORTED_MODULE_0__.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/value.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/value.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rgb.js */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-interpolate/src/array.js");
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./date.js */ "./node_modules/d3-interpolate/src/date.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./object.js */ "./node_modules/d3-interpolate/src/object.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ "./node_modules/d3-interpolate/src/string.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-interpolate/src/constant.js");
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");










/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(b)
      : (t === "number" ? _number_js__WEBPACK_IMPORTED_MODULE_1__.default
      : t === "string" ? ((c = (0,d3_color__WEBPACK_IMPORTED_MODULE_2__.default)(b)) ? (b = c, _rgb_js__WEBPACK_IMPORTED_MODULE_3__.default) : _string_js__WEBPACK_IMPORTED_MODULE_4__.default)
      : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_2__.default ? _rgb_js__WEBPACK_IMPORTED_MODULE_3__.default
      : b instanceof Date ? _date_js__WEBPACK_IMPORTED_MODULE_5__.default
      : (0,_numberArray_js__WEBPACK_IMPORTED_MODULE_6__.isNumberArray)(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_6__.default
      : Array.isArray(b) ? _array_js__WEBPACK_IMPORTED_MODULE_7__.genericArray
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object_js__WEBPACK_IMPORTED_MODULE_8__.default
      : _number_js__WEBPACK_IMPORTED_MODULE_1__.default)(a, b);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/zoom.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/zoom.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function zoomRho(rho, rho2, rho4) {

  // p0 = [ux0, uy0, w0]
  // p1 = [ux1, uy1, w1]
  function zoom(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
        dx = ux1 - ux0,
        dy = uy1 - uy0,
        d2 = dx * dx + dy * dy,
        i,
        S;

    // Special case for u0 ≅ u1.
    if (d2 < epsilon2) {
      S = Math.log(w1 / w0) / rho;
      i = function(t) {
        return [
          ux0 + t * dx,
          uy0 + t * dy,
          w0 * Math.exp(rho * t * S)
        ];
      }
    }

    // General case.
    else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;
      i = function(t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [
          ux0 + u * dx,
          uy0 + u * dy,
          w0 * coshr0 / cosh(rho * s + r0)
        ];
      }
    }

    i.duration = S * 1000 * rho / Math.SQRT2;

    return i;
  }

  zoom.rho = function(_) {
    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
    return zoomRho(_1, _2, _4);
  };

  return zoom;
})(Math.SQRT2, 2, 4));


/***/ }),

/***/ "./node_modules/d3-path/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-path/src/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "path": () => /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_0__.default
/* harmony export */ });
/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path.js */ "./node_modules/d3-path/src/path.js");



/***/ }),

/***/ "./node_modules/d3-path/src/path.js":
/*!******************************************!*\
  !*** ./node_modules/d3-path/src/path.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
const pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath
  this._ = "";
}

function path() {
  return new Path;
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function(x1, y1, x, y) {
    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x1,y1).
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon));

    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
    // Equivalently, is (x1,y1) coincident with (x2,y2)?
    // Or, is the radius zero? Line to (x1,y1).
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Otherwise, draw an arc!
    else {
      var x20 = x2 - x0,
          y20 = y2 - y0,
          l21_2 = x21 * x21 + y21 * y21,
          l20_2 = x20 * x20 + y20 * y20,
          l21 = Math.sqrt(l21_2),
          l01 = Math.sqrt(l01_2),
          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
          t01 = l / l01,
          t21 = l / l21;

      // If the start tangent is not coincident with (x0,y0), line to.
      if (Math.abs(t01 - 1) > epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }

      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x0,y0).
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    }

    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
      this._ += "L" + x0 + "," + y0;
    }

    // Is this arc empty? We’re done.
    if (!r) return;

    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) da = da % tau + tau;

    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    }

    // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
      this._ += "A" + r + "," + r + ",0," + (+(da >= pi)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    }
  },
  rect: function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
  },
  toString: function() {
    return this._;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (path);


/***/ }),

/***/ "./node_modules/d3-polygon/src/area.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-polygon/src/area.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}


/***/ }),

/***/ "./node_modules/d3-polygon/src/centroid.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-polygon/src/centroid.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}


/***/ }),

/***/ "./node_modules/d3-polygon/src/contains.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-polygon/src/contains.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0], y = point[1],
      x0 = p[0], y0 = p[1],
      x1, y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}


/***/ }),

/***/ "./node_modules/d3-polygon/src/cross.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-polygon/src/cross.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}


/***/ }),

/***/ "./node_modules/d3-polygon/src/hull.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-polygon/src/hull.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _cross_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cross.js */ "./node_modules/d3-polygon/src/cross.js");


function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
}

// Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.
function computeUpperHullIndexes(points) {
  const n = points.length,
      indexes = [0, 1];
  let size = 2, i;

  for (i = 2; i < n; ++i) {
    while (size > 1 && (0,_cross_js__WEBPACK_IMPORTED_MODULE_0__.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;
    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(points) {
  if ((n = points.length) < 3) return null;

  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];
  sortedPoints.sort(lexicographicOrder);
  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints);

  // Construct the hull polygon, removing possible duplicate endpoints.
  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = [];

  // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.
  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);
  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}


/***/ }),

/***/ "./node_modules/d3-polygon/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-polygon/src/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "polygonArea": () => /* reexport safe */ _area_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "polygonCentroid": () => /* reexport safe */ _centroid_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "polygonHull": () => /* reexport safe */ _hull_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "polygonContains": () => /* reexport safe */ _contains_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "polygonLength": () => /* reexport safe */ _length_js__WEBPACK_IMPORTED_MODULE_4__.default
/* harmony export */ });
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-polygon/src/area.js");
/* harmony import */ var _centroid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./centroid.js */ "./node_modules/d3-polygon/src/centroid.js");
/* harmony import */ var _hull_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hull.js */ "./node_modules/d3-polygon/src/hull.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contains.js */ "./node_modules/d3-polygon/src/contains.js");
/* harmony import */ var _length_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./length.js */ "./node_modules/d3-polygon/src/length.js");







/***/ }),

/***/ "./node_modules/d3-polygon/src/length.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-polygon/src/length.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.hypot(xa, ya);
  }

  return perimeter;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/add.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-quadtree/src/add.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "addAll": () => /* binding */ addAll
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(d) {
  const x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {data: d},
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return tree._root = leaf, tree;

  // Find the existing leaf for the new point, or add it.
  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  }

  // Is the new point is exactly coincident with the existing point?
  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;

  // Otherwise, split the leaf node until the old and new point are separated.
  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));
  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d, i, n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity;

  // Compute the points and their extent.
  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  }

  // If there were no (valid) points, abort.
  if (x0 > x1 || y0 > y1) return this;

  // Expand the tree to cover the new points.
  this.cover(x0, y0).cover(x1, y1);

  // Add the new points.
  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/cover.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/cover.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1;

  // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!
  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  }

  // Otherwise, double repeatedly to cover.
  else {
    var z = x1 - x0 || 1,
        node = this._root,
        parent,
        i;

    while (x0 > x || x >= x1 || y0 > y || y >= y1) {
      i = (y < y0) << 1 | (x < x0);
      parent = new Array(4), parent[i] = node, node = parent, z *= 2;
      switch (i) {
        case 0: x1 = x0 + z, y1 = y0 + z; break;
        case 1: x0 = x1 - z, y1 = y0 + z; break;
        case 2: x1 = x0 + z, y0 = y1 - z; break;
        case 3: x0 = x1 - z, y0 = y1 - z; break;
      }
    }

    if (this._root && this._root.length) this._root = node;
  }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/data.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/data.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var data = [];
  this.visit(function(node) {
    if (!node.length) do data.push(node.data); while (node = node.next)
  });
  return data;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/extent.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(_) {
  return arguments.length
      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])
      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/find.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/find.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _quad_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad.js */ "./node_modules/d3-quadtree/src/quad.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;

  if (node) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;
  else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {

    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node)
        || (x1 = q.x0) > x3
        || (y1 = q.y0) > y3
        || (x2 = q.x1) < x0
        || (y2 = q.y1) < y0) continue;

    // Bisect the current quadrant.
    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;

      quads.push(
        new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(node[3], xm, ym, x2, y2),
        new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(node[2], x1, ym, xm, y2),
        new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(node[1], xm, y1, x2, ym),
        new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(node[0], x1, y1, xm, ym)
      );

      // Visit the closest quadrant first.
      if (i = (y >= ym) << 1 | (x >= xm)) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    }

    // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
      var dx = x - +this._x.call(null, node.data),
          dy = y - +this._y.call(null, node.data),
          d2 = dx * dx + dy * dy;
      if (d2 < radius) {
        var d = Math.sqrt(radius = d2);
        x0 = x - d, y0 = y - d;
        x3 = x + d, y3 = y + d;
        data = node.data;
      }
    }
  }

  return data;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "quadtree": () => /* reexport safe */ _quadtree_js__WEBPACK_IMPORTED_MODULE_0__.default
/* harmony export */ });
/* harmony import */ var _quadtree_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quadtree.js */ "./node_modules/d3-quadtree/src/quadtree.js");



/***/ }),

/***/ "./node_modules/d3-quadtree/src/quad.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/quad.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/quadtree.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-quadtree/src/quadtree.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ quadtree
/* harmony export */ });
/* harmony import */ var _add_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add.js */ "./node_modules/d3-quadtree/src/add.js");
/* harmony import */ var _cover_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cover.js */ "./node_modules/d3-quadtree/src/cover.js");
/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data.js */ "./node_modules/d3-quadtree/src/data.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./extent.js */ "./node_modules/d3-quadtree/src/extent.js");
/* harmony import */ var _find_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./find.js */ "./node_modules/d3-quadtree/src/find.js");
/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./remove.js */ "./node_modules/d3-quadtree/src/remove.js");
/* harmony import */ var _root_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./root.js */ "./node_modules/d3-quadtree/src/root.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./size.js */ "./node_modules/d3-quadtree/src/size.js");
/* harmony import */ var _visit_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./visit.js */ "./node_modules/d3-quadtree/src/visit.js");
/* harmony import */ var _visitAfter_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./visitAfter.js */ "./node_modules/d3-quadtree/src/visitAfter.js");
/* harmony import */ var _x_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./x.js */ "./node_modules/d3-quadtree/src/x.js");
/* harmony import */ var _y_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./y.js */ "./node_modules/d3-quadtree/src/y.js");













function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x_js__WEBPACK_IMPORTED_MODULE_0__.defaultX : x, y == null ? _y_js__WEBPACK_IMPORTED_MODULE_1__.defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {data: leaf.data}, next = copy;
  while (leaf = leaf.next) next = next.next = {data: leaf.data};
  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function() {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;

  if (!node) return copy;

  if (!node.length) return copy._root = leaf_copy(node), copy;

  nodes = [{source: node, target: copy._root = new Array(4)}];
  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});
        else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add_js__WEBPACK_IMPORTED_MODULE_2__.default;
treeProto.addAll = _add_js__WEBPACK_IMPORTED_MODULE_2__.addAll;
treeProto.cover = _cover_js__WEBPACK_IMPORTED_MODULE_3__.default;
treeProto.data = _data_js__WEBPACK_IMPORTED_MODULE_4__.default;
treeProto.extent = _extent_js__WEBPACK_IMPORTED_MODULE_5__.default;
treeProto.find = _find_js__WEBPACK_IMPORTED_MODULE_6__.default;
treeProto.remove = _remove_js__WEBPACK_IMPORTED_MODULE_7__.default;
treeProto.removeAll = _remove_js__WEBPACK_IMPORTED_MODULE_7__.removeAll;
treeProto.root = _root_js__WEBPACK_IMPORTED_MODULE_8__.default;
treeProto.size = _size_js__WEBPACK_IMPORTED_MODULE_9__.default;
treeProto.visit = _visit_js__WEBPACK_IMPORTED_MODULE_10__.default;
treeProto.visitAfter = _visitAfter_js__WEBPACK_IMPORTED_MODULE_11__.default;
treeProto.x = _x_js__WEBPACK_IMPORTED_MODULE_0__.default;
treeProto.y = _y_js__WEBPACK_IMPORTED_MODULE_1__.default;


/***/ }),

/***/ "./node_modules/d3-quadtree/src/remove.js":
/*!************************************************!*\
  !*** ./node_modules/d3-quadtree/src/remove.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "removeAll": () => /* binding */ removeAll
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j;

  // If the tree is empty, initialize the root as a leaf.
  if (!node) return this;

  // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.
  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;
  }

  // Find the point to remove.
  while (node.data !== d) if (!(previous = node, node = node.next)) return this;
  if (next = node.next) delete node.next;

  // If there are multiple coincident points, remove just the point.
  if (previous) return (next ? previous.next = next : delete previous.next), this;

  // If this is the root point, remove it.
  if (!parent) return this._root = next, this;

  // Remove this leaf.
  next ? parent[i] = next : delete parent[i];

  // If the parent now contains exactly one leaf, collapse superfluous parents.
  if ((node = parent[0] || parent[1] || parent[2] || parent[3])
      && node === (parent[3] || parent[2] || parent[1] || parent[0])
      && !node.length) {
    if (retainer) retainer[j] = node;
    else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);
  return this;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/root.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/root.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this._root;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/size.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-quadtree/src/size.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var size = 0;
  this.visit(function(node) {
    if (!node.length) do ++size; while (node = node.next)
  });
  return size;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/visit.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-quadtree/src/visit.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _quad_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad.js */ "./node_modules/d3-quadtree/src/quad.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback) {
  var quads = [], q, node = this._root, child, x0, y0, x1, y1;
  if (node) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(node, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, x0, y0, xm, ym));
    }
  }
  return this;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/visitAfter.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-quadtree/src/visitAfter.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _quad_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quad.js */ "./node_modules/d3-quadtree/src/quad.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback) {
  var quads = [], next = [], q;
  if (this._root) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(this._root, this._x0, this._y0, this._x1, this._y1));
  while (q = quads.pop()) {
    var node = q.node;
    if (node.length) {
      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad_js__WEBPACK_IMPORTED_MODULE_0__.default(child, xm, ym, x1, y1));
    }
    next.push(q);
  }
  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }
  return this;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/x.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/x.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultX": () => /* binding */ defaultX,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function defaultX(d) {
  return d[0];
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}


/***/ }),

/***/ "./node_modules/d3-quadtree/src/y.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-quadtree/src/y.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultY": () => /* binding */ defaultY,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function defaultY(d) {
  return d[1];
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}


/***/ }),

/***/ "./node_modules/d3-random/src/bates.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-random/src/bates.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _irwinHall_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./irwinHall.js */ "./node_modules/d3-random/src/irwinHall.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomBates(source) {
  var I = _irwinHall_js__WEBPACK_IMPORTED_MODULE_0__.default.source(source);

  function randomBates(n) {
    // use limiting distribution at n === 0
    if ((n = +n) === 0) return source;
    var randomIrwinHall = I(n);
    return function() {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;

  return randomBates;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_1__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/bernoulli.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/bernoulli.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomBernoulli(source) {
  function randomBernoulli(p) {
    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
    return function() {
      return Math.floor(source() + p);
    };
  }

  randomBernoulli.source = sourceRandomBernoulli;

  return randomBernoulli;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/beta.js":
/*!********************************************!*\
  !*** ./node_modules/d3-random/src/beta.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _gamma_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gamma.js */ "./node_modules/d3-random/src/gamma.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomBeta(source) {
  var G = _gamma_js__WEBPACK_IMPORTED_MODULE_0__.default.source(source);

  function randomBeta(alpha, beta) {
    var X = G(alpha),
        Y = G(beta);
    return function() {
      var x = X();
      return x === 0 ? 0 : x / (x + Y());
    };
  }

  randomBeta.source = sourceRandomBeta;

  return randomBeta;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_1__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/binomial.js":
/*!************************************************!*\
  !*** ./node_modules/d3-random/src/binomial.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _beta_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./beta.js */ "./node_modules/d3-random/src/beta.js");
/* harmony import */ var _geometric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geometric.js */ "./node_modules/d3-random/src/geometric.js");




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomBinomial(source) {
  var G = _geometric_js__WEBPACK_IMPORTED_MODULE_0__.default.source(source),
      B = _beta_js__WEBPACK_IMPORTED_MODULE_1__.default.source(source);

  function randomBinomial(n, p) {
    n = +n;
    if ((p = +p) >= 1) return () => n;
    if (p <= 0) return () => 0;
    return function() {
      var acc = 0, nn = n, pp = p;
      while (nn * pp > 16 && nn * (1 - pp) > 16) {
        var i = Math.floor((nn + 1) * pp),
            y = B(i, nn - i + 1)();
        if (y <= pp) {
          acc += i;
          nn -= i;
          pp = (pp - y) / (1 - y);
        } else {
          nn = i - 1;
          pp /= y;
        }
      }
      var sign = pp < 0.5,
          pFinal = sign ? pp : 1 - pp,
          g = G(pFinal);
      for (var s = g(), k = 0; s <= nn; ++k) s += g();
      return acc + (sign ? k : nn - k);
    };
  }

  randomBinomial.source = sourceRandomBinomial;

  return randomBinomial;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_2__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/cauchy.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-random/src/cauchy.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomCauchy(source) {
  function randomCauchy(a, b) {
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function() {
      return a + b * Math.tan(Math.PI * source());
    };
  }

  randomCauchy.source = sourceRandomCauchy;

  return randomCauchy;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/defaultSource.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-random/src/defaultSource.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Math.random);


/***/ }),

/***/ "./node_modules/d3-random/src/exponential.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-random/src/exponential.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function() {
      return -Math.log1p(-source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;

  return randomExponential;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/gamma.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-random/src/gamma.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _normal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normal.js */ "./node_modules/d3-random/src/normal.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomGamma(source) {
  var randomNormal = _normal_js__WEBPACK_IMPORTED_MODULE_0__.default.source(source)();

  function randomGamma(k, theta) {
    if ((k = +k) < 0) throw new RangeError("invalid k");
    // degenerate distribution if k === 0
    if (k === 0) return () => 0;
    theta = theta == null ? 1 : +theta;
    // exponential distribution if k === 1
    if (k === 1) return () => -Math.log1p(-source()) * theta;

    var d = (k < 1 ? k + 1 : k) - 1 / 3,
        c = 1 / (3 * Math.sqrt(d)),
        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;
    return function() {
      do {
        do {
          var x = randomNormal(),
              v = 1 + c * x;
        } while (v <= 0);
        v *= v * v;
        var u = 1 - source();
      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));
      return d * v * multiplier() * theta;
    };
  }

  randomGamma.source = sourceRandomGamma;

  return randomGamma;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_1__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/geometric.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/geometric.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomGeometric(source) {
  function randomGeometric(p) {
    if ((p = +p) < 0 || p > 1) throw new RangeError("invalid p");
    if (p === 0) return () => Infinity;
    if (p === 1) return () => 1;
    p = Math.log1p(-p);
    return function() {
      return 1 + Math.floor(Math.log1p(-source()) / p);
    };
  }

  randomGeometric.source = sourceRandomGeometric;

  return randomGeometric;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-random/src/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "randomUniform": () => /* reexport safe */ _uniform_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "randomInt": () => /* reexport safe */ _int_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "randomNormal": () => /* reexport safe */ _normal_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "randomLogNormal": () => /* reexport safe */ _logNormal_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "randomBates": () => /* reexport safe */ _bates_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "randomIrwinHall": () => /* reexport safe */ _irwinHall_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "randomExponential": () => /* reexport safe */ _exponential_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "randomPareto": () => /* reexport safe */ _pareto_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "randomBernoulli": () => /* reexport safe */ _bernoulli_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "randomGeometric": () => /* reexport safe */ _geometric_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "randomBinomial": () => /* reexport safe */ _binomial_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "randomGamma": () => /* reexport safe */ _gamma_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "randomBeta": () => /* reexport safe */ _beta_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "randomWeibull": () => /* reexport safe */ _weibull_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "randomCauchy": () => /* reexport safe */ _cauchy_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "randomLogistic": () => /* reexport safe */ _logistic_js__WEBPACK_IMPORTED_MODULE_15__.default,
/* harmony export */   "randomPoisson": () => /* reexport safe */ _poisson_js__WEBPACK_IMPORTED_MODULE_16__.default,
/* harmony export */   "randomLcg": () => /* reexport safe */ _lcg_js__WEBPACK_IMPORTED_MODULE_17__.default
/* harmony export */ });
/* harmony import */ var _uniform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uniform.js */ "./node_modules/d3-random/src/uniform.js");
/* harmony import */ var _int_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./int.js */ "./node_modules/d3-random/src/int.js");
/* harmony import */ var _normal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./normal.js */ "./node_modules/d3-random/src/normal.js");
/* harmony import */ var _logNormal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logNormal.js */ "./node_modules/d3-random/src/logNormal.js");
/* harmony import */ var _bates_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bates.js */ "./node_modules/d3-random/src/bates.js");
/* harmony import */ var _irwinHall_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./irwinHall.js */ "./node_modules/d3-random/src/irwinHall.js");
/* harmony import */ var _exponential_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./exponential.js */ "./node_modules/d3-random/src/exponential.js");
/* harmony import */ var _pareto_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pareto.js */ "./node_modules/d3-random/src/pareto.js");
/* harmony import */ var _bernoulli_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bernoulli.js */ "./node_modules/d3-random/src/bernoulli.js");
/* harmony import */ var _geometric_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./geometric.js */ "./node_modules/d3-random/src/geometric.js");
/* harmony import */ var _binomial_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./binomial.js */ "./node_modules/d3-random/src/binomial.js");
/* harmony import */ var _gamma_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./gamma.js */ "./node_modules/d3-random/src/gamma.js");
/* harmony import */ var _beta_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./beta.js */ "./node_modules/d3-random/src/beta.js");
/* harmony import */ var _weibull_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./weibull.js */ "./node_modules/d3-random/src/weibull.js");
/* harmony import */ var _cauchy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cauchy.js */ "./node_modules/d3-random/src/cauchy.js");
/* harmony import */ var _logistic_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./logistic.js */ "./node_modules/d3-random/src/logistic.js");
/* harmony import */ var _poisson_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./poisson.js */ "./node_modules/d3-random/src/poisson.js");
/* harmony import */ var _lcg_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./lcg.js */ "./node_modules/d3-random/src/lcg.js");




















/***/ }),

/***/ "./node_modules/d3-random/src/int.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-random/src/int.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomInt(source) {
  function randomInt(min, max) {
    if (arguments.length < 2) max = min, min = 0;
    min = Math.floor(min);
    max = Math.floor(max) - min;
    return function() {
      return Math.floor(source() * max + min);
    };
  }

  randomInt.source = sourceRandomInt;

  return randomInt;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/irwinHall.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/irwinHall.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    if ((n = +n) <= 0) return () => 0;
    return function() {
      for (var sum = 0, i = n; i > 1; --i) sum += source();
      return sum + i * source();
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;

  return randomIrwinHall;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/lcg.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-random/src/lcg.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ lcg
/* harmony export */ });
// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use
const mul = 0x19660D;
const inc = 0x3C6EF35F;
const eps = 1 / 0x100000000;

function lcg(seed = Math.random()) {
  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;
  return () => (state = mul * state + inc | 0, eps * (state >>> 0));
}


/***/ }),

/***/ "./node_modules/d3-random/src/logNormal.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-random/src/logNormal.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _normal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normal.js */ "./node_modules/d3-random/src/normal.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomLogNormal(source) {
  var N = _normal_js__WEBPACK_IMPORTED_MODULE_0__.default.source(source);

  function randomLogNormal() {
    var randomNormal = N.apply(this, arguments);
    return function() {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;

  return randomLogNormal;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_1__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/logistic.js":
/*!************************************************!*\
  !*** ./node_modules/d3-random/src/logistic.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomLogistic(source) {
  function randomLogistic(a, b) {
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function() {
      var u = source();
      return a + b * Math.log(u / (1 - u));
    };
  }

  randomLogistic.source = sourceRandomLogistic;

  return randomLogistic;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/normal.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-random/src/normal.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function() {
      var y;

      // If available, use the second previously-generated uniform random.
      if (x != null) y = x, x = null;

      // Otherwise, generate a new x and y.
      else do {
        x = source() * 2 - 1;
        y = source() * 2 - 1;
        r = x * x + y * y;
      } while (!r || r > 1);

      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;

  return randomNormal;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/pareto.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-random/src/pareto.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomPareto(source) {
  function randomPareto(alpha) {
    if ((alpha = +alpha) < 0) throw new RangeError("invalid alpha");
    alpha = 1 / -alpha;
    return function() {
      return Math.pow(1 - source(), alpha);
    };
  }

  randomPareto.source = sourceRandomPareto;

  return randomPareto;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/poisson.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-random/src/poisson.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");
/* harmony import */ var _binomial_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binomial.js */ "./node_modules/d3-random/src/binomial.js");
/* harmony import */ var _gamma_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gamma.js */ "./node_modules/d3-random/src/gamma.js");




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomPoisson(source) {
  var G = _gamma_js__WEBPACK_IMPORTED_MODULE_0__.default.source(source),
      B = _binomial_js__WEBPACK_IMPORTED_MODULE_1__.default.source(source);

  function randomPoisson(lambda) {
    return function() {
      var acc = 0, l = lambda;
      while (l > 16) {
        var n = Math.floor(0.875 * l),
            t = G(n)();
        if (t > l) return acc + B(n - 1, l / t)();
        acc += n;
        l -= t;
      }
      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());
      return acc + k;
    };
  }

  randomPoisson.source = sourceRandomPoisson;

  return randomPoisson;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_2__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/uniform.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-random/src/uniform.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;
    else max -= min;
    return function() {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;

  return randomUniform;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-random/src/weibull.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-random/src/weibull.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultSource.js */ "./node_modules/d3-random/src/defaultSource.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function sourceRandomWeibull(source) {
  function randomWeibull(k, a, b) {
    var outerFunc;
    if ((k = +k) === 0) {
      outerFunc = x => -Math.log(x);
    } else {
      k = 1 / k;
      outerFunc = x => Math.pow(x, k);
    }
    a = a == null ? 0 : +a;
    b = b == null ? 1 : +b;
    return function() {
      return a + b * outerFunc(-Math.log1p(-source()));
    };
  }

  randomWeibull.source = sourceRandomWeibull;

  return randomWeibull;
})(_defaultSource_js__WEBPACK_IMPORTED_MODULE_0__.default));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Accent.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Dark2.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Paired.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set1.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set2.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set3.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/category10.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/category10.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/colors.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/colors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(specifier) {
  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  return colors;
}


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/BrBG.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "d8b365f5f5f55ab4ac",
  "a6611adfc27d80cdc1018571",
  "a6611adfc27df5f5f580cdc1018571",
  "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
  "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
  "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
  "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
  "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
  "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PRGn.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "af8dc3f7f7f77fbf7b",
  "7b3294c2a5cfa6dba0008837",
  "7b3294c2a5cff7f7f7a6dba0008837",
  "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
  "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
  "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
  "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
  "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
  "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PiYG.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e9a3c9f7f7f7a1d76a",
  "d01c8bf1b6dab8e1864dac26",
  "d01c8bf1b6daf7f7f7b8e1864dac26",
  "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
  "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
  "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
  "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
  "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
  "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PuOr.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "998ec3f7f7f7f1a340",
  "5e3c99b2abd2fdb863e66101",
  "5e3c99b2abd2f7f7f7fdb863e66101",
  "542788998ec3d8daebfee0b6f1a340b35806",
  "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
  "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
  "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
  "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
  "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdBu.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ef8a62f7f7f767a9cf",
  "ca0020f4a58292c5de0571b0",
  "ca0020f4a582f7f7f792c5de0571b0",
  "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
  "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
  "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
  "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
  "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
  "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdGy.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ef8a62ffffff999999",
  "ca0020f4a582bababa404040",
  "ca0020f4a582ffffffbababa404040",
  "b2182bef8a62fddbc7e0e0e09999994d4d4d",
  "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
  "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
  "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
  "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
  "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fc8d59ffffbf91bfdb",
  "d7191cfdae61abd9e92c7bb6",
  "d7191cfdae61ffffbfabd9e92c7bb6",
  "d73027fc8d59fee090e0f3f891bfdb4575b4",
  "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
  "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
  "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
  "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
  "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fc8d59ffffbf91cf60",
  "d7191cfdae61a6d96a1a9641",
  "d7191cfdae61ffffbfa6d96a1a9641",
  "d73027fc8d59fee08bd9ef8b91cf601a9850",
  "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
  "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
  "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
  "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
  "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/Spectral.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fc8d59ffffbf99d594",
  "d7191cfdae61abdda42b83ba",
  "d7191cfdae61ffffbfabdda42b83ba",
  "d53e4ffc8d59fee08be6f59899d5943288bd",
  "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
  "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
  "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
  "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
  "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "schemeCategory10": () => /* reexport safe */ _categorical_category10_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "schemeAccent": () => /* reexport safe */ _categorical_Accent_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "schemeDark2": () => /* reexport safe */ _categorical_Dark2_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "schemePaired": () => /* reexport safe */ _categorical_Paired_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "schemePastel1": () => /* reexport safe */ _categorical_Pastel1_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "schemePastel2": () => /* reexport safe */ _categorical_Pastel2_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "schemeSet1": () => /* reexport safe */ _categorical_Set1_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "schemeSet2": () => /* reexport safe */ _categorical_Set2_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "schemeSet3": () => /* reexport safe */ _categorical_Set3_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "schemeTableau10": () => /* reexport safe */ _categorical_Tableau10_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "interpolateBrBG": () => /* reexport safe */ _diverging_BrBG_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "schemeBrBG": () => /* reexport safe */ _diverging_BrBG_js__WEBPACK_IMPORTED_MODULE_10__.scheme,
/* harmony export */   "interpolatePRGn": () => /* reexport safe */ _diverging_PRGn_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "schemePRGn": () => /* reexport safe */ _diverging_PRGn_js__WEBPACK_IMPORTED_MODULE_11__.scheme,
/* harmony export */   "interpolatePiYG": () => /* reexport safe */ _diverging_PiYG_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "schemePiYG": () => /* reexport safe */ _diverging_PiYG_js__WEBPACK_IMPORTED_MODULE_12__.scheme,
/* harmony export */   "interpolatePuOr": () => /* reexport safe */ _diverging_PuOr_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "schemePuOr": () => /* reexport safe */ _diverging_PuOr_js__WEBPACK_IMPORTED_MODULE_13__.scheme,
/* harmony export */   "interpolateRdBu": () => /* reexport safe */ _diverging_RdBu_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "schemeRdBu": () => /* reexport safe */ _diverging_RdBu_js__WEBPACK_IMPORTED_MODULE_14__.scheme,
/* harmony export */   "interpolateRdGy": () => /* reexport safe */ _diverging_RdGy_js__WEBPACK_IMPORTED_MODULE_15__.default,
/* harmony export */   "schemeRdGy": () => /* reexport safe */ _diverging_RdGy_js__WEBPACK_IMPORTED_MODULE_15__.scheme,
/* harmony export */   "interpolateRdYlBu": () => /* reexport safe */ _diverging_RdYlBu_js__WEBPACK_IMPORTED_MODULE_16__.default,
/* harmony export */   "schemeRdYlBu": () => /* reexport safe */ _diverging_RdYlBu_js__WEBPACK_IMPORTED_MODULE_16__.scheme,
/* harmony export */   "interpolateRdYlGn": () => /* reexport safe */ _diverging_RdYlGn_js__WEBPACK_IMPORTED_MODULE_17__.default,
/* harmony export */   "schemeRdYlGn": () => /* reexport safe */ _diverging_RdYlGn_js__WEBPACK_IMPORTED_MODULE_17__.scheme,
/* harmony export */   "interpolateSpectral": () => /* reexport safe */ _diverging_Spectral_js__WEBPACK_IMPORTED_MODULE_18__.default,
/* harmony export */   "schemeSpectral": () => /* reexport safe */ _diverging_Spectral_js__WEBPACK_IMPORTED_MODULE_18__.scheme,
/* harmony export */   "interpolateBuGn": () => /* reexport safe */ _sequential_multi_BuGn_js__WEBPACK_IMPORTED_MODULE_19__.default,
/* harmony export */   "schemeBuGn": () => /* reexport safe */ _sequential_multi_BuGn_js__WEBPACK_IMPORTED_MODULE_19__.scheme,
/* harmony export */   "interpolateBuPu": () => /* reexport safe */ _sequential_multi_BuPu_js__WEBPACK_IMPORTED_MODULE_20__.default,
/* harmony export */   "schemeBuPu": () => /* reexport safe */ _sequential_multi_BuPu_js__WEBPACK_IMPORTED_MODULE_20__.scheme,
/* harmony export */   "interpolateGnBu": () => /* reexport safe */ _sequential_multi_GnBu_js__WEBPACK_IMPORTED_MODULE_21__.default,
/* harmony export */   "schemeGnBu": () => /* reexport safe */ _sequential_multi_GnBu_js__WEBPACK_IMPORTED_MODULE_21__.scheme,
/* harmony export */   "interpolateOrRd": () => /* reexport safe */ _sequential_multi_OrRd_js__WEBPACK_IMPORTED_MODULE_22__.default,
/* harmony export */   "schemeOrRd": () => /* reexport safe */ _sequential_multi_OrRd_js__WEBPACK_IMPORTED_MODULE_22__.scheme,
/* harmony export */   "interpolatePuBuGn": () => /* reexport safe */ _sequential_multi_PuBuGn_js__WEBPACK_IMPORTED_MODULE_23__.default,
/* harmony export */   "schemePuBuGn": () => /* reexport safe */ _sequential_multi_PuBuGn_js__WEBPACK_IMPORTED_MODULE_23__.scheme,
/* harmony export */   "interpolatePuBu": () => /* reexport safe */ _sequential_multi_PuBu_js__WEBPACK_IMPORTED_MODULE_24__.default,
/* harmony export */   "schemePuBu": () => /* reexport safe */ _sequential_multi_PuBu_js__WEBPACK_IMPORTED_MODULE_24__.scheme,
/* harmony export */   "interpolatePuRd": () => /* reexport safe */ _sequential_multi_PuRd_js__WEBPACK_IMPORTED_MODULE_25__.default,
/* harmony export */   "schemePuRd": () => /* reexport safe */ _sequential_multi_PuRd_js__WEBPACK_IMPORTED_MODULE_25__.scheme,
/* harmony export */   "interpolateRdPu": () => /* reexport safe */ _sequential_multi_RdPu_js__WEBPACK_IMPORTED_MODULE_26__.default,
/* harmony export */   "schemeRdPu": () => /* reexport safe */ _sequential_multi_RdPu_js__WEBPACK_IMPORTED_MODULE_26__.scheme,
/* harmony export */   "interpolateYlGnBu": () => /* reexport safe */ _sequential_multi_YlGnBu_js__WEBPACK_IMPORTED_MODULE_27__.default,
/* harmony export */   "schemeYlGnBu": () => /* reexport safe */ _sequential_multi_YlGnBu_js__WEBPACK_IMPORTED_MODULE_27__.scheme,
/* harmony export */   "interpolateYlGn": () => /* reexport safe */ _sequential_multi_YlGn_js__WEBPACK_IMPORTED_MODULE_28__.default,
/* harmony export */   "schemeYlGn": () => /* reexport safe */ _sequential_multi_YlGn_js__WEBPACK_IMPORTED_MODULE_28__.scheme,
/* harmony export */   "interpolateYlOrBr": () => /* reexport safe */ _sequential_multi_YlOrBr_js__WEBPACK_IMPORTED_MODULE_29__.default,
/* harmony export */   "schemeYlOrBr": () => /* reexport safe */ _sequential_multi_YlOrBr_js__WEBPACK_IMPORTED_MODULE_29__.scheme,
/* harmony export */   "interpolateYlOrRd": () => /* reexport safe */ _sequential_multi_YlOrRd_js__WEBPACK_IMPORTED_MODULE_30__.default,
/* harmony export */   "schemeYlOrRd": () => /* reexport safe */ _sequential_multi_YlOrRd_js__WEBPACK_IMPORTED_MODULE_30__.scheme,
/* harmony export */   "interpolateBlues": () => /* reexport safe */ _sequential_single_Blues_js__WEBPACK_IMPORTED_MODULE_31__.default,
/* harmony export */   "schemeBlues": () => /* reexport safe */ _sequential_single_Blues_js__WEBPACK_IMPORTED_MODULE_31__.scheme,
/* harmony export */   "interpolateGreens": () => /* reexport safe */ _sequential_single_Greens_js__WEBPACK_IMPORTED_MODULE_32__.default,
/* harmony export */   "schemeGreens": () => /* reexport safe */ _sequential_single_Greens_js__WEBPACK_IMPORTED_MODULE_32__.scheme,
/* harmony export */   "interpolateGreys": () => /* reexport safe */ _sequential_single_Greys_js__WEBPACK_IMPORTED_MODULE_33__.default,
/* harmony export */   "schemeGreys": () => /* reexport safe */ _sequential_single_Greys_js__WEBPACK_IMPORTED_MODULE_33__.scheme,
/* harmony export */   "interpolatePurples": () => /* reexport safe */ _sequential_single_Purples_js__WEBPACK_IMPORTED_MODULE_34__.default,
/* harmony export */   "schemePurples": () => /* reexport safe */ _sequential_single_Purples_js__WEBPACK_IMPORTED_MODULE_34__.scheme,
/* harmony export */   "interpolateReds": () => /* reexport safe */ _sequential_single_Reds_js__WEBPACK_IMPORTED_MODULE_35__.default,
/* harmony export */   "schemeReds": () => /* reexport safe */ _sequential_single_Reds_js__WEBPACK_IMPORTED_MODULE_35__.scheme,
/* harmony export */   "interpolateOranges": () => /* reexport safe */ _sequential_single_Oranges_js__WEBPACK_IMPORTED_MODULE_36__.default,
/* harmony export */   "schemeOranges": () => /* reexport safe */ _sequential_single_Oranges_js__WEBPACK_IMPORTED_MODULE_36__.scheme,
/* harmony export */   "interpolateCividis": () => /* reexport safe */ _sequential_multi_cividis_js__WEBPACK_IMPORTED_MODULE_37__.default,
/* harmony export */   "interpolateCubehelixDefault": () => /* reexport safe */ _sequential_multi_cubehelix_js__WEBPACK_IMPORTED_MODULE_38__.default,
/* harmony export */   "interpolateRainbow": () => /* reexport safe */ _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__.default,
/* harmony export */   "interpolateWarm": () => /* reexport safe */ _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__.warm,
/* harmony export */   "interpolateCool": () => /* reexport safe */ _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__.cool,
/* harmony export */   "interpolateSinebow": () => /* reexport safe */ _sequential_multi_sinebow_js__WEBPACK_IMPORTED_MODULE_40__.default,
/* harmony export */   "interpolateTurbo": () => /* reexport safe */ _sequential_multi_turbo_js__WEBPACK_IMPORTED_MODULE_41__.default,
/* harmony export */   "interpolateViridis": () => /* reexport safe */ _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__.default,
/* harmony export */   "interpolateMagma": () => /* reexport safe */ _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__.magma,
/* harmony export */   "interpolateInferno": () => /* reexport safe */ _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__.inferno,
/* harmony export */   "interpolatePlasma": () => /* reexport safe */ _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__.plasma
/* harmony export */ });
/* harmony import */ var _categorical_category10_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./categorical/category10.js */ "./node_modules/d3-scale-chromatic/src/categorical/category10.js");
/* harmony import */ var _categorical_Accent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./categorical/Accent.js */ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js");
/* harmony import */ var _categorical_Dark2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./categorical/Dark2.js */ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js");
/* harmony import */ var _categorical_Paired_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./categorical/Paired.js */ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js");
/* harmony import */ var _categorical_Pastel1_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./categorical/Pastel1.js */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js");
/* harmony import */ var _categorical_Pastel2_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./categorical/Pastel2.js */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js");
/* harmony import */ var _categorical_Set1_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./categorical/Set1.js */ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js");
/* harmony import */ var _categorical_Set2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./categorical/Set2.js */ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js");
/* harmony import */ var _categorical_Set3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./categorical/Set3.js */ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js");
/* harmony import */ var _categorical_Tableau10_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./categorical/Tableau10.js */ "./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js");
/* harmony import */ var _diverging_BrBG_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./diverging/BrBG.js */ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js");
/* harmony import */ var _diverging_PRGn_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./diverging/PRGn.js */ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js");
/* harmony import */ var _diverging_PiYG_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./diverging/PiYG.js */ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js");
/* harmony import */ var _diverging_PuOr_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./diverging/PuOr.js */ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js");
/* harmony import */ var _diverging_RdBu_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diverging/RdBu.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js");
/* harmony import */ var _diverging_RdGy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./diverging/RdGy.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js");
/* harmony import */ var _diverging_RdYlBu_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./diverging/RdYlBu.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js");
/* harmony import */ var _diverging_RdYlGn_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./diverging/RdYlGn.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js");
/* harmony import */ var _diverging_Spectral_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./diverging/Spectral.js */ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js");
/* harmony import */ var _sequential_multi_BuGn_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./sequential-multi/BuGn.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js");
/* harmony import */ var _sequential_multi_BuPu_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./sequential-multi/BuPu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js");
/* harmony import */ var _sequential_multi_GnBu_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sequential-multi/GnBu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js");
/* harmony import */ var _sequential_multi_OrRd_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sequential-multi/OrRd.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js");
/* harmony import */ var _sequential_multi_PuBuGn_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./sequential-multi/PuBuGn.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js");
/* harmony import */ var _sequential_multi_PuBu_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./sequential-multi/PuBu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js");
/* harmony import */ var _sequential_multi_PuRd_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./sequential-multi/PuRd.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js");
/* harmony import */ var _sequential_multi_RdPu_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./sequential-multi/RdPu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js");
/* harmony import */ var _sequential_multi_YlGnBu_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./sequential-multi/YlGnBu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js");
/* harmony import */ var _sequential_multi_YlGn_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./sequential-multi/YlGn.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js");
/* harmony import */ var _sequential_multi_YlOrBr_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./sequential-multi/YlOrBr.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js");
/* harmony import */ var _sequential_multi_YlOrRd_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./sequential-multi/YlOrRd.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js");
/* harmony import */ var _sequential_single_Blues_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./sequential-single/Blues.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js");
/* harmony import */ var _sequential_single_Greens_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./sequential-single/Greens.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js");
/* harmony import */ var _sequential_single_Greys_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./sequential-single/Greys.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js");
/* harmony import */ var _sequential_single_Purples_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./sequential-single/Purples.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js");
/* harmony import */ var _sequential_single_Reds_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./sequential-single/Reds.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js");
/* harmony import */ var _sequential_single_Oranges_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./sequential-single/Oranges.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js");
/* harmony import */ var _sequential_multi_cividis_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sequential-multi/cividis.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js");
/* harmony import */ var _sequential_multi_cubehelix_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./sequential-multi/cubehelix.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js");
/* harmony import */ var _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./sequential-multi/rainbow.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js");
/* harmony import */ var _sequential_multi_sinebow_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./sequential-multi/sinebow.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js");
/* harmony import */ var _sequential_multi_turbo_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./sequential-multi/turbo.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js");
/* harmony import */ var _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./sequential-multi/viridis.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js");













































/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/ramp.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/ramp.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/rgb.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (scheme => (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_0__.rgbBasis)(scheme[scheme.length - 1]));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e5f5f999d8c92ca25f",
  "edf8fbb2e2e266c2a4238b45",
  "edf8fbb2e2e266c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e0ecf49ebcda8856a7",
  "edf8fbb3cde38c96c688419d",
  "edf8fbb3cde38c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e0f3dba8ddb543a2ca",
  "f0f9e8bae4bc7bccc42b8cbe",
  "f0f9e8bae4bc7bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fee8c8fdbb84e34a33",
  "fef0d9fdcc8afc8d59d7301f",
  "fef0d9fdcc8afc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ece7f2a6bddb2b8cbe",
  "f1eef6bdc9e174a9cf0570b0",
  "f1eef6bdc9e174a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ece2f0a6bddb1c9099",
  "f6eff7bdc9e167a9cf02818a",
  "f6eff7bdc9e167a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e7e1efc994c7dd1c77",
  "f1eef6d7b5d8df65b0ce1256",
  "f1eef6d7b5d8df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fde0ddfa9fb5c51b8a",
  "feebe2fbb4b9f768a1ae017e",
  "feebe2fbb4b9f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "f7fcb9addd8e31a354",
  "ffffccc2e69978c679238443",
  "ffffccc2e69978c67931a354006837",
  "ffffccd9f0a3addd8e78c67931a354006837",
  "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "edf8b17fcdbb2c7fb8",
  "ffffcca1dab441b6c4225ea8",
  "ffffcca1dab441b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fff7bcfec44fd95f0e",
  "ffffd4fed98efe9929cc4c02",
  "ffffd4fed98efe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ffeda0feb24cf03b20",
  "ffffb2fecc5cfd8d3ce31a1c",
  "ffffb2fecc5cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))
      + ")";
}


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/cubehelix.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/cubehelix.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,d3_interpolate__WEBPACK_IMPORTED_MODULE_0__.cubehelixLong)((0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(300, 0.5, 0.0), (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(-240, 0.5, 1.0)));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "warm": () => /* binding */ warm,
/* harmony export */   "cool": () => /* binding */ cool,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/cubehelix.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/cubehelix.js");



var warm = (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_0__.cubehelixLong)((0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(-100, 0.75, 0.35), (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(80, 1.50, 0.8));

var cool = (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_0__.cubehelixLong)((0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(260, 0.75, 0.35), (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(80, 1.50, 0.8));

var c = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)();

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");


var c = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.rgb)(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
}


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))
      + ")";
}


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "magma": () => /* binding */ magma,
/* harmony export */   "inferno": () => /* binding */ inferno,
/* harmony export */   "plasma": () => /* binding */ plasma
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


function ramp(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ramp((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")));

var magma = ramp((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

var inferno = ramp((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

var plasma = ramp((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "deebf79ecae13182bd",
  "eff3ffbdd7e76baed62171b5",
  "eff3ffbdd7e76baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e5f5e0a1d99b31a354",
  "edf8e9bae4b374c476238b45",
  "edf8e9bae4b374c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "f0f0f0bdbdbd636363",
  "f7f7f7cccccc969696525252",
  "f7f7f7cccccc969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fee6cefdae6be6550d",
  "feeddefdbe85fd8d3cd94701",
  "feeddefdbe85fd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "efedf5bcbddc756bb1",
  "f2f0f7cbc9e29e9ac86a51a3",
  "f2f0f7cbc9e29e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scheme": () => /* binding */ scheme,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fee0d2fc9272de2d26",
  "fee5d9fcae91fb6a4acb181d",
  "fee5d9fcae91fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__.default);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_ramp_js__WEBPACK_IMPORTED_MODULE_1__.default)(scheme));


/***/ }),

/***/ "./node_modules/d3-scale/src/band.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/band.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ band,
/* harmony export */   "point": () => /* binding */ point
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/range.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _ordinal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ordinal.js */ "./node_modules/d3-scale/src/ordinal.js");




function band() {
  var scale = (0,_ordinal_js__WEBPACK_IMPORTED_MODULE_0__.default)().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = (0,d3_array__WEBPACK_IMPORTED_MODULE_1__.default)(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function() {
    return band(domain(), [r0, r1])
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__.initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}


/***/ }),

/***/ "./node_modules/d3-scale/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/constant.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ constants
/* harmony export */ });
function constants(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-scale/src/continuous.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/continuous.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "identity": () => /* binding */ identity,
/* harmony export */   "copy": () => /* binding */ copy,
/* harmony export */   "transformer": () => /* binding */ transformer,
/* harmony export */   "default": () => /* binding */ continuous
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/value.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/round.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-scale/src/constant.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-scale/src/number.js");





var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= (a = +a))
      ? function(x) { return (x - a) / b; }
      : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(isNaN(b) ? NaN : 0.5);
}

function clamper(a, b) {
  var t;
  if (a > b) t = a, a = b, b = t;
  return function(x) { return Math.max(a, Math.min(b, x)); };
}

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x) { return r0(d0(x)); };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1;

  // Reverse descending domains.
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function(x) {
    var i = (0,d3_array__WEBPACK_IMPORTED_MODULE_1__.default)(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .range(source.range())
      .interpolate(source.interpolate())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.default,
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3_interpolate__WEBPACK_IMPORTED_MODULE_3__.default)))(y)));
  };

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, _number_js__WEBPACK_IMPORTED_MODULE_4__.default), rescale()) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_5__.default, rescale();
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;
  };

  scale.interpolate = function(_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous() {
  return transformer()(identity, identity);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/diverging.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/diverging.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ diverging,
/* harmony export */   "divergingLog": () => /* binding */ divergingLog,
/* harmony export */   "divergingSymlog": () => /* binding */ divergingSymlog,
/* harmony export */   "divergingPow": () => /* binding */ divergingPow,
/* harmony export */   "divergingSqrt": () => /* binding */ divergingSqrt
/* harmony export */ });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/piecewise.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/value.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/round.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _sequential_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sequential.js */ "./node_modules/d3-scale/src/sequential.js");
/* harmony import */ var _symlog_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./symlog.js */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pow.js */ "./node_modules/d3-scale/src/pow.js");









function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      s = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function(_) {
      var r0, r1, r2;
      return arguments.length ? ([r0, r1, r2] = _, interpolator = (0,d3_interpolate__WEBPACK_IMPORTED_MODULE_1__.default)(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];
    };
  }

  scale.range = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.default);

  scale.rangeRound = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_3__.default);

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;
    return scale;
  };
}

function diverging() {
  var scale = (0,_linear_js__WEBPACK_IMPORTED_MODULE_4__.linearish)(transformer()(_continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity));

  scale.copy = function() {
    return (0,_sequential_js__WEBPACK_IMPORTED_MODULE_5__.copy)(scale, diverging());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_6__.initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = (0,_log_js__WEBPACK_IMPORTED_MODULE_7__.loggish)(transformer()).domain([0.1, 1, 10]);

  scale.copy = function() {
    return (0,_sequential_js__WEBPACK_IMPORTED_MODULE_5__.copy)(scale, divergingLog()).base(scale.base());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_6__.initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = (0,_symlog_js__WEBPACK_IMPORTED_MODULE_8__.symlogish)(transformer());

  scale.copy = function() {
    return (0,_sequential_js__WEBPACK_IMPORTED_MODULE_5__.copy)(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_6__.initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = (0,_pow_js__WEBPACK_IMPORTED_MODULE_9__.powish)(transformer());

  scale.copy = function() {
    return (0,_sequential_js__WEBPACK_IMPORTED_MODULE_5__.copy)(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_6__.initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/identity.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ identity
/* harmony export */ });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-scale/src/number.js");



function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function(_) {
    return arguments.length ? (domain = Array.from(_, _number_js__WEBPACK_IMPORTED_MODULE_0__.default), scale) : domain.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? Array.from(domain, _number_js__WEBPACK_IMPORTED_MODULE_0__.default) : [0, 1];

  return (0,_linear_js__WEBPACK_IMPORTED_MODULE_1__.linearish)(scale);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-scale/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "scaleBand": () => /* reexport safe */ _band_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "scalePoint": () => /* reexport safe */ _band_js__WEBPACK_IMPORTED_MODULE_0__.point,
/* harmony export */   "scaleIdentity": () => /* reexport safe */ _identity_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "scaleLinear": () => /* reexport safe */ _linear_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "scaleLog": () => /* reexport safe */ _log_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "scaleSymlog": () => /* reexport safe */ _symlog_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "scaleOrdinal": () => /* reexport safe */ _ordinal_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "scaleImplicit": () => /* reexport safe */ _ordinal_js__WEBPACK_IMPORTED_MODULE_5__.implicit,
/* harmony export */   "scalePow": () => /* reexport safe */ _pow_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "scaleSqrt": () => /* reexport safe */ _pow_js__WEBPACK_IMPORTED_MODULE_6__.sqrt,
/* harmony export */   "scaleRadial": () => /* reexport safe */ _radial_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "scaleQuantile": () => /* reexport safe */ _quantile_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "scaleQuantize": () => /* reexport safe */ _quantize_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "scaleThreshold": () => /* reexport safe */ _threshold_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "scaleTime": () => /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "scaleUtc": () => /* reexport safe */ _utcTime_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "scaleSequential": () => /* reexport safe */ _sequential_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "scaleSequentialLog": () => /* reexport safe */ _sequential_js__WEBPACK_IMPORTED_MODULE_13__.sequentialLog,
/* harmony export */   "scaleSequentialPow": () => /* reexport safe */ _sequential_js__WEBPACK_IMPORTED_MODULE_13__.sequentialPow,
/* harmony export */   "scaleSequentialSqrt": () => /* reexport safe */ _sequential_js__WEBPACK_IMPORTED_MODULE_13__.sequentialSqrt,
/* harmony export */   "scaleSequentialSymlog": () => /* reexport safe */ _sequential_js__WEBPACK_IMPORTED_MODULE_13__.sequentialSymlog,
/* harmony export */   "scaleSequentialQuantile": () => /* reexport safe */ _sequentialQuantile_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "scaleDiverging": () => /* reexport safe */ _diverging_js__WEBPACK_IMPORTED_MODULE_15__.default,
/* harmony export */   "scaleDivergingLog": () => /* reexport safe */ _diverging_js__WEBPACK_IMPORTED_MODULE_15__.divergingLog,
/* harmony export */   "scaleDivergingPow": () => /* reexport safe */ _diverging_js__WEBPACK_IMPORTED_MODULE_15__.divergingPow,
/* harmony export */   "scaleDivergingSqrt": () => /* reexport safe */ _diverging_js__WEBPACK_IMPORTED_MODULE_15__.divergingSqrt,
/* harmony export */   "scaleDivergingSymlog": () => /* reexport safe */ _diverging_js__WEBPACK_IMPORTED_MODULE_15__.divergingSymlog,
/* harmony export */   "tickFormat": () => /* reexport safe */ _tickFormat_js__WEBPACK_IMPORTED_MODULE_16__.default
/* harmony export */ });
/* harmony import */ var _band_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./band.js */ "./node_modules/d3-scale/src/band.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-scale/src/identity.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./log.js */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _symlog_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symlog.js */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _ordinal_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ordinal.js */ "./node_modules/d3-scale/src/ordinal.js");
/* harmony import */ var _pow_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pow.js */ "./node_modules/d3-scale/src/pow.js");
/* harmony import */ var _radial_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./radial.js */ "./node_modules/d3-scale/src/radial.js");
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./quantile.js */ "./node_modules/d3-scale/src/quantile.js");
/* harmony import */ var _quantize_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./quantize.js */ "./node_modules/d3-scale/src/quantize.js");
/* harmony import */ var _threshold_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./threshold.js */ "./node_modules/d3-scale/src/threshold.js");
/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./time.js */ "./node_modules/d3-scale/src/time.js");
/* harmony import */ var _utcTime_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcTime.js */ "./node_modules/d3-scale/src/utcTime.js");
/* harmony import */ var _sequential_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sequential.js */ "./node_modules/d3-scale/src/sequential.js");
/* harmony import */ var _sequentialQuantile_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./sequentialQuantile.js */ "./node_modules/d3-scale/src/sequentialQuantile.js");
/* harmony import */ var _diverging_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./diverging.js */ "./node_modules/d3-scale/src/diverging.js");
/* harmony import */ var _tickFormat_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./tickFormat.js */ "./node_modules/d3-scale/src/tickFormat.js");



































/***/ }),

/***/ "./node_modules/d3-scale/src/init.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/init.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initRange": () => /* binding */ initRange,
/* harmony export */   "initInterpolator": () => /* binding */ initInterpolator
/* harmony export */ });
function initRange(domain, range) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.range(domain); break;
    default: this.range(range).domain(domain); break;
  }
  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0: break;
    case 1: {
      if (typeof domain === "function") this.interpolator(domain);
      else this.range(domain);
      break;
    }
    default: {
      this.domain(domain);
      if (typeof interpolator === "function") this.interpolator(interpolator);
      else this.range(interpolator);
      break;
    }
  }
  return this;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/linear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/linear.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "linearish": () => /* binding */ linearish,
/* harmony export */   "default": () => /* binding */ linear
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _tickFormat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tickFormat.js */ "./node_modules/d3-scale/src/tickFormat.js");





function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function(count) {
    var d = domain();
    return (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return (0,_tickFormat_js__WEBPACK_IMPORTED_MODULE_1__.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function(count) {
    if (count == null) count = 10;

    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    
    while (maxIter-- > 0) {
      step = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.tickIncrement)(start, stop, count);
      if (step === prestep) {
        d[i0] = start
        d[i1] = stop
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = (0,_continuous_js__WEBPACK_IMPORTED_MODULE_2__.default)();

  scale.copy = function() {
    return (0,_continuous_js__WEBPACK_IMPORTED_MODULE_2__.copy)(scale, linear());
  };

  _init_js__WEBPACK_IMPORTED_MODULE_3__.initRange.apply(scale, arguments);

  return linearish(scale);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/log.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/log.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "loggish": () => /* binding */ loggish,
/* harmony export */   "default": () => /* binding */ log
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/defaultLocale.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nice.js */ "./node_modules/d3-scale/src/nice.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");






function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10
      : base === Math.E ? Math.exp
      : function(x) { return Math.pow(base, x); };
}

function logp(base) {
  return base === Math.E ? Math.log
      : base === 10 && Math.log10
      || base === 2 && Math.log2
      || (base = Math.log(base), function(x) { return Math.log(x) / base; });
}

function reflect(f) {
  return function(x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }

  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function(count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;

    if (r = v < u) i = u, u = v, v = i;

    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0) for (; i <= j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i <= j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
      if (z.length * 2 < n) z = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)(u, v, n);
    } else {
      z = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function(count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = (0,d3_format__WEBPACK_IMPORTED_MODULE_1__.format)(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
    return function(d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function() {
    return domain((0,_nice_js__WEBPACK_IMPORTED_MODULE_2__.default)(domain(), {
      floor: function(x) { return pows(Math.floor(logs(x))); },
      ceil: function(x) { return pows(Math.ceil(logs(x))); }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish((0,_continuous_js__WEBPACK_IMPORTED_MODULE_3__.transformer)()).domain([1, 10]);

  scale.copy = function() {
    return (0,_continuous_js__WEBPACK_IMPORTED_MODULE_3__.copy)(scale, log()).base(scale.base());
  };

  _init_js__WEBPACK_IMPORTED_MODULE_4__.initRange.apply(scale, arguments);

  return scale;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/nice.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/nice.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ nice
/* harmony export */ });
function nice(domain, interval) {
  domain = domain.slice();

  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/number.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ number
/* harmony export */ });
function number(x) {
  return +x;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/ordinal.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/ordinal.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "implicit": () => /* binding */ implicit,
/* harmony export */   "default": () => /* binding */ ordinal
/* harmony export */ });
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");


const implicit = Symbol("implicit");

function ordinal() {
  var index = new Map(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "", i = index.get(key);
    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }
    return range[(i - 1) % range.length];
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new Map();
    for (const value of _) {
      const key = value + "";
      if (index.has(key)) continue;
      index.set(key, domain.push(value));
    }
    return scale;
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };

  _init_js__WEBPACK_IMPORTED_MODULE_0__.initRange.apply(scale, arguments);

  return scale;
}


/***/ }),

/***/ "./node_modules/d3-scale/src/pow.js":
/*!******************************************!*\
  !*** ./node_modules/d3-scale/src/pow.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "powish": () => /* binding */ powish,
/* harmony export */   "default": () => /* binding */ pow,
/* harmony export */   "sqrt": () => /* binding */ sqrt
/* harmony export */ });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");




function transformPow(exponent) {
  return function(x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity, _continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity, _continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity)
        : exponent === 0.5 ? transform(transformSqrt, transformSquare)
        : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function(_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return (0,_linear_js__WEBPACK_IMPORTED_MODULE_1__.linearish)(scale);
}

function pow() {
  var scale = powish((0,_continuous_js__WEBPACK_IMPORTED_MODULE_0__.transformer)());

  scale.copy = function() {
    return (0,_continuous_js__WEBPACK_IMPORTED_MODULE_0__.copy)(scale, pow()).exponent(scale.exponent());
  };

  _init_js__WEBPACK_IMPORTED_MODULE_2__.initRange.apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantile.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ quantile
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/quantile.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");



function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0, n = Math.max(1, range.length);
    thresholds = new Array(n - 1);
    while (++i < n) thresholds[i - 1] = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.quantileSorted)(domain, i / n);
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[(0,d3_array__WEBPACK_IMPORTED_MODULE_1__.default)(thresholds, x)];
  }

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [
      i > 0 ? thresholds[i - 1] : domain[0],
      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
    ];
  };

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_2__.default);
    return rescale();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function() {
    return thresholds.slice();
  };

  scale.copy = function() {
    return quantile()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_3__.initRange.apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/quantize.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-scale/src/quantize.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ quantize
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");




function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[(0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);
    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    return scale;
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };

  scale.range = function(_) {
    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN]
        : i < 1 ? [x0, domain[0]]
        : i >= n ? [domain[n - 1], x1]
        : [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function() {
    return domain.slice();
  };

  scale.copy = function() {
    return quantize()
        .domain([x0, x1])
        .range(range)
        .unknown(unknown);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_1__.initRange.apply((0,_linear_js__WEBPACK_IMPORTED_MODULE_2__.linearish)(scale), arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/radial.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/radial.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ radial
/* harmony export */ });
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-scale/src/number.js");





function square(x) {
  return Math.sign(x) * x * x;
}

function unsquare(x) {
  return Math.sign(x) * Math.sqrt(Math.abs(x));
}

function radial() {
  var squared = (0,_continuous_js__WEBPACK_IMPORTED_MODULE_0__.default)(),
      range = [0, 1],
      round = false,
      unknown;

  function scale(x) {
    var y = unsquare(squared(x));
    return isNaN(y) ? unknown : round ? Math.round(y) : y;
  }

  scale.invert = function(y) {
    return squared.invert(square(y));
  };

  scale.domain = function(_) {
    return arguments.length ? (squared.domain(_), scale) : squared.domain();
  };

  scale.range = function(_) {
    return arguments.length ? (squared.range((range = Array.from(_, _number_js__WEBPACK_IMPORTED_MODULE_1__.default)).map(square)), scale) : range.slice();
  };

  scale.rangeRound = function(_) {
    return scale.range(_).round(true);
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, scale) : round;
  };

  scale.clamp = function(_) {
    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return radial(squared.domain(), range)
        .round(round)
        .clamp(squared.clamp())
        .unknown(unknown);
  };

  _init_js__WEBPACK_IMPORTED_MODULE_2__.initRange.apply(scale, arguments);

  return (0,_linear_js__WEBPACK_IMPORTED_MODULE_3__.linearish)(scale);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/sequential.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/sequential.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "copy": () => /* binding */ copy,
/* harmony export */   "default": () => /* binding */ sequential,
/* harmony export */   "sequentialLog": () => /* binding */ sequentialLog,
/* harmony export */   "sequentialSymlog": () => /* binding */ sequentialSymlog,
/* harmony export */   "sequentialPow": () => /* binding */ sequentialPow,
/* harmony export */   "sequentialSqrt": () => /* binding */ sequentialSqrt
/* harmony export */ });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/value.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/round.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./log.js */ "./node_modules/d3-scale/src/log.js");
/* harmony import */ var _symlog_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./symlog.js */ "./node_modules/d3-scale/src/symlog.js");
/* harmony import */ var _pow_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pow.js */ "./node_modules/d3-scale/src/pow.js");








function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  function range(interpolate) {
    return function(_) {
      var r0, r1;
      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];
    };
  }

  scale.range = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__.default);

  scale.rangeRound = range(d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.default);

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .interpolator(source.interpolator())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function sequential() {
  var scale = (0,_linear_js__WEBPACK_IMPORTED_MODULE_3__.linearish)(transformer()(_continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity));

  scale.copy = function() {
    return copy(scale, sequential());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_4__.initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = (0,_log_js__WEBPACK_IMPORTED_MODULE_5__.loggish)(transformer()).domain([1, 10]);

  scale.copy = function() {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_4__.initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = (0,_symlog_js__WEBPACK_IMPORTED_MODULE_6__.symlogish)(transformer());

  scale.copy = function() {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_4__.initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = (0,_pow_js__WEBPACK_IMPORTED_MODULE_7__.powish)(transformer());

  scale.copy = function() {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_4__.initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/sequentialQuantile.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-scale/src/sequentialQuantile.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ sequentialQuantile
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/quantile.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");




function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous_js__WEBPACK_IMPORTED_MODULE_0__.identity;

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator(((0,d3_array__WEBPACK_IMPORTED_MODULE_1__.default)(domain, x, 1) - 1) / (domain.length - 1));
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [];
    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);
    domain.sort(d3_array__WEBPACK_IMPORTED_MODULE_2__.default);
    return scale;
  };

  scale.interpolator = function(_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.range = function() {
    return domain.map((d, i) => interpolator(i / (domain.length - 1)));
  };

  scale.quantiles = function(n) {
    return Array.from({length: n + 1}, (_, i) => (0,d3_array__WEBPACK_IMPORTED_MODULE_3__.default)(domain, i / n));
  };

  scale.copy = function() {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_4__.initInterpolator.apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/symlog.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-scale/src/symlog.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "symlogish": () => /* binding */ symlogish,
/* harmony export */   "default": () => /* binding */ symlog
/* harmony export */ });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-scale/src/linear.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");




function transformSymlog(c) {
  return function(x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function(x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function(_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return (0,_linear_js__WEBPACK_IMPORTED_MODULE_0__.linearish)(scale);
}

function symlog() {
  var scale = symlogish((0,_continuous_js__WEBPACK_IMPORTED_MODULE_1__.transformer)());

  scale.copy = function() {
    return (0,_continuous_js__WEBPACK_IMPORTED_MODULE_1__.copy)(scale, symlog()).constant(scale.constant());
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_2__.initRange.apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/threshold.js":
/*!************************************************!*\
  !*** ./node_modules/d3-scale/src/threshold.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ threshold
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");



function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[(0,d3_array__WEBPACK_IMPORTED_MODULE_0__.default)(domain, x, 0, n)] : unknown;
  }

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return threshold()
        .domain(domain)
        .range(range)
        .unknown(unknown);
  };

  return _init_js__WEBPACK_IMPORTED_MODULE_1__.initRange.apply(scale, arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/tickFormat.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-scale/src/tickFormat.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ tickFormat
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/formatSpecifier.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/precisionPrefix.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/defaultLocale.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/precisionRound.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/precisionFixed.js");



function tickFormat(start, stop, count, specifier) {
  var step = (0,d3_array__WEBPACK_IMPORTED_MODULE_0__.tickStep)(start, stop, count),
      precision;
  specifier = (0,d3_format__WEBPACK_IMPORTED_MODULE_1__.default)(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = (0,d3_format__WEBPACK_IMPORTED_MODULE_2__.default)(step, value))) specifier.precision = precision;
      return (0,d3_format__WEBPACK_IMPORTED_MODULE_3__.formatPrefix)(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = (0,d3_format__WEBPACK_IMPORTED_MODULE_4__.default)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = (0,d3_format__WEBPACK_IMPORTED_MODULE_5__.default)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return (0,d3_format__WEBPACK_IMPORTED_MODULE_3__.format)(specifier);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/time.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-scale/src/time.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "calendar": () => /* binding */ calendar,
/* harmony export */   "default": () => /* binding */ time
/* harmony export */ });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/bisector.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/year.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/month.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/week.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/day.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/hour.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/minute.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/second.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/millisecond.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/defaultLocale.js");
/* harmony import */ var _continuous_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous.js */ "./node_modules/d3-scale/src/continuous.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nice.js */ "./node_modules/d3-scale/src/nice.js");







var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = (0,_continuous_js__WEBPACK_IMPORTED_MODULE_0__.default)(),
      invert = scale.invert,
      domain = scale.domain;

  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");

  var tickIntervals = [
    [second,  1,      durationSecond],
    [second,  5,  5 * durationSecond],
    [second, 15, 15 * durationSecond],
    [second, 30, 30 * durationSecond],
    [minute,  1,      durationMinute],
    [minute,  5,  5 * durationMinute],
    [minute, 15, 15 * durationMinute],
    [minute, 30, 30 * durationMinute],
    [  hour,  1,      durationHour  ],
    [  hour,  3,  3 * durationHour  ],
    [  hour,  6,  6 * durationHour  ],
    [  hour, 12, 12 * durationHour  ],
    [   day,  1,      durationDay   ],
    [   day,  2,  2 * durationDay   ],
    [  week,  1,      durationWeek  ],
    [ month,  1,      durationMonth ],
    [ month,  3,  3 * durationMonth ],
    [  year,  1,      durationYear  ]
  ];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond
        : minute(date) < date ? formatSecond
        : hour(date) < date ? formatMinute
        : day(date) < date ? formatHour
        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
        : year(date) < date ? formatMonth
        : formatYear)(date);
  }

  function tickInterval(interval, start, stop) {
    if (interval == null) interval = 10;

    // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.
    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = (0,d3_array__WEBPACK_IMPORTED_MODULE_1__.default)(function(i) { return i[2]; }).right(tickIntervals, target),
          step;
      if (i === tickIntervals.length) {
        step = (0,d3_array__WEBPACK_IMPORTED_MODULE_2__.tickStep)(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max((0,d3_array__WEBPACK_IMPORTED_MODULE_2__.tickStep)(start, stop, interval), 1);
        interval = millisecond;
      }
      return interval.every(step);
    }

    return interval;
  }

  scale.invert = function(y) {
    return new Date(invert(y));
  };

  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
  };

  scale.ticks = function(interval) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
    return r ? t.reverse() : t;
  };

  scale.tickFormat = function(count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function(interval) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1]))
        ? domain((0,_nice_js__WEBPACK_IMPORTED_MODULE_3__.default)(d, interval))
        : scale;
  };

  scale.copy = function() {
    return (0,_continuous_js__WEBPACK_IMPORTED_MODULE_0__.copy)(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}

function time() {
  return _init_js__WEBPACK_IMPORTED_MODULE_4__.initRange.apply(calendar(d3_time__WEBPACK_IMPORTED_MODULE_5__.default, d3_time__WEBPACK_IMPORTED_MODULE_6__.default, d3_time__WEBPACK_IMPORTED_MODULE_7__.sunday, d3_time__WEBPACK_IMPORTED_MODULE_8__.default, d3_time__WEBPACK_IMPORTED_MODULE_9__.default, d3_time__WEBPACK_IMPORTED_MODULE_10__.default, d3_time__WEBPACK_IMPORTED_MODULE_11__.default, d3_time__WEBPACK_IMPORTED_MODULE_12__.default, d3_time_format__WEBPACK_IMPORTED_MODULE_13__.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}


/***/ }),

/***/ "./node_modules/d3-scale/src/utcTime.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-scale/src/utcTime.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ utcTime
/* harmony export */ });
/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./time.js */ "./node_modules/d3-scale/src/time.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/defaultLocale.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcYear.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcMonth.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcWeek.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcDay.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcHour.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcMinute.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/second.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/millisecond.js");
/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init.js */ "./node_modules/d3-scale/src/init.js");





function utcTime() {
  return _init_js__WEBPACK_IMPORTED_MODULE_0__.initRange.apply((0,_time_js__WEBPACK_IMPORTED_MODULE_1__.calendar)(d3_time__WEBPACK_IMPORTED_MODULE_2__.default, d3_time__WEBPACK_IMPORTED_MODULE_3__.default, d3_time__WEBPACK_IMPORTED_MODULE_4__.utcSunday, d3_time__WEBPACK_IMPORTED_MODULE_5__.default, d3_time__WEBPACK_IMPORTED_MODULE_6__.default, d3_time__WEBPACK_IMPORTED_MODULE_7__.default, d3_time__WEBPACK_IMPORTED_MODULE_8__.default, d3_time__WEBPACK_IMPORTED_MODULE_9__.default, d3_time_format__WEBPACK_IMPORTED_MODULE_10__.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/array.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/array.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}


/***/ }),

/***/ "./node_modules/d3-selection/src/constant.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/constant.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-selection/src/create.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/create.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creator.js */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./select.js */ "./node_modules/d3-selection/src/select.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  return (0,_select_js__WEBPACK_IMPORTED_MODULE_0__.default)((0,_creator_js__WEBPACK_IMPORTED_MODULE_1__.default)(name).call(document.documentElement));
}


/***/ }),

/***/ "./node_modules/d3-selection/src/creator.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/creator.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./namespace.js */ "./node_modules/d3-selection/src/namespace.js");
/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespaces.js */ "./node_modules/d3-selection/src/namespaces.js");



function creatorInherit(name) {
  return function() {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.xhtml && document.documentElement.namespaceURI === _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.xhtml
        ? document.createElement(name)
        : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var fullname = (0,_namespace_js__WEBPACK_IMPORTED_MODULE_1__.default)(name);
  return (fullname.local
      ? creatorFixed
      : creatorInherit)(fullname);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "create": () => /* reexport safe */ _create_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "creator": () => /* reexport safe */ _creator_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "local": () => /* reexport safe */ _local_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "matcher": () => /* reexport safe */ _matcher_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "namespace": () => /* reexport safe */ _namespace_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "namespaces": () => /* reexport safe */ _namespaces_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "pointer": () => /* reexport safe */ _pointer_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "pointers": () => /* reexport safe */ _pointers_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "select": () => /* reexport safe */ _select_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "selectAll": () => /* reexport safe */ _selectAll_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "selection": () => /* reexport safe */ _selection_index_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "selector": () => /* reexport safe */ _selector_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "selectorAll": () => /* reexport safe */ _selectorAll_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "style": () => /* reexport safe */ _selection_style_js__WEBPACK_IMPORTED_MODULE_13__.styleValue,
/* harmony export */   "window": () => /* reexport safe */ _window_js__WEBPACK_IMPORTED_MODULE_14__.default
/* harmony export */ });
/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create.js */ "./node_modules/d3-selection/src/create.js");
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./creator.js */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _local_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./local.js */ "./node_modules/d3-selection/src/local.js");
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./matcher.js */ "./node_modules/d3-selection/src/matcher.js");
/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./namespace.js */ "./node_modules/d3-selection/src/namespace.js");
/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./namespaces.js */ "./node_modules/d3-selection/src/namespaces.js");
/* harmony import */ var _pointer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pointer.js */ "./node_modules/d3-selection/src/pointer.js");
/* harmony import */ var _pointers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pointers.js */ "./node_modules/d3-selection/src/pointers.js");
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./select.js */ "./node_modules/d3-selection/src/select.js");
/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./selectAll.js */ "./node_modules/d3-selection/src/selectAll.js");
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./selection/index.js */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./selector.js */ "./node_modules/d3-selection/src/selector.js");
/* harmony import */ var _selectorAll_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selectorAll.js */ "./node_modules/d3-selection/src/selectorAll.js");
/* harmony import */ var _selection_style_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./selection/style.js */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./window.js */ "./node_modules/d3-selection/src/window.js");

















/***/ }),

/***/ "./node_modules/d3-selection/src/local.js":
/*!************************************************!*\
  !*** ./node_modules/d3-selection/src/local.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ local
/* harmony export */ });
var nextId = 0;

function local() {
  return new Local;
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function(node) {
    var id = this._;
    while (!(id in node)) if (!(node = node.parentNode)) return;
    return node[id];
  },
  set: function(node, value) {
    return node[this._] = value;
  },
  remove: function(node) {
    return this._ in node && delete node[this._];
  },
  toString: function() {
    return this._;
  }
};


/***/ }),

/***/ "./node_modules/d3-selection/src/matcher.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/matcher.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "childMatcher": () => /* binding */ childMatcher
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return function() {
    return this.matches(selector);
  };
}

function childMatcher(selector) {
  return function(node) {
    return node.matches(selector);
  };
}



/***/ }),

/***/ "./node_modules/d3-selection/src/namespace.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespace.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./namespaces.js */ "./node_modules/d3-selection/src/namespaces.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var prefix = name += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.default.hasOwnProperty(prefix) ? {space: _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.default[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins
}


/***/ }),

/***/ "./node_modules/d3-selection/src/namespaces.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-selection/src/namespaces.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "xhtml": () => /* binding */ xhtml,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var xhtml = "http://www.w3.org/1999/xhtml";

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
});


/***/ }),

/***/ "./node_modules/d3-selection/src/pointer.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-selection/src/pointer.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent.js */ "./node_modules/d3-selection/src/sourceEvent.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event, node) {
  event = (0,_sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__.default)(event);
  if (node === undefined) node = event.currentTarget;
  if (node) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX, point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}


/***/ }),

/***/ "./node_modules/d3-selection/src/pointers.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/pointers.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _pointer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pointer.js */ "./node_modules/d3-selection/src/pointer.js");
/* harmony import */ var _sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sourceEvent.js */ "./node_modules/d3-selection/src/sourceEvent.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(events, node) {
  if (events.target) { // i.e., instanceof Event, not TouchList or iterable
    events = (0,_sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__.default)(events);
    if (node === undefined) node = events.currentTarget;
    events = events.touches || [events];
  }
  return Array.from(events, event => (0,_pointer_js__WEBPACK_IMPORTED_MODULE_1__.default)(event, node));
}


/***/ }),

/***/ "./node_modules/d3-selection/src/select.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/select.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index.js */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return typeof selector === "string"
      ? new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([[document.querySelector(selector)]], [document.documentElement])
      : new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([[selector]], _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.root);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selectAll.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-selection/src/selectAll.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-selection/src/array.js");
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index.js */ "./node_modules/d3-selection/src/selection/index.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return typeof selector === "string"
      ? new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([document.querySelectorAll(selector)], [document.documentElement])
      : new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([selector == null ? [] : (0,_array_js__WEBPACK_IMPORTED_MODULE_1__.default)(selector)], _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.root);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/append.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/append.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator.js */ "./node_modules/d3-selection/src/creator.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var create = typeof name === "function" ? name : (0,_creator_js__WEBPACK_IMPORTED_MODULE_0__.default)(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/attr.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/attr.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../namespace.js */ "./node_modules/d3-selection/src/namespace.js");


function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);
    else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
    else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var fullname = (0,_namespace_js__WEBPACK_IMPORTED_MODULE_0__.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local
        ? node.getAttributeNS(fullname.space, fullname.local)
        : node.getAttribute(fullname);
  }

  return this.each((value == null
      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)
      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/call.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/call.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/classed.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/classed.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n) if (!list.contains(names[i])) return false;
    return true;
  }

  return this.each((typeof value === "function"
      ? classedFunction : value
      ? classedTrue
      : classedFalse)(names, value));
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/clone.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/clone.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function selection_cloneShallow() {
  var clone = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/data.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/data.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _enter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enter.js */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../array.js */ "./node_modules/d3-selection/src/array.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constant.js */ "./node_modules/d3-selection/src/constant.js");





function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length;

  // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter_js__WEBPACK_IMPORTED_MODULE_0__.EnterNode(parent, data[i]);
    }
  }

  // Put any non-null nodes that don’t fit into exit.
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = new Map,
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue;

  // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }

  // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.
  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data[i], i, data) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new _enter_js__WEBPACK_IMPORTED_MODULE_0__.EnterNode(parent, data[i]);
    }
  }

  // Add any remaining nodes that were not bound to data to exit.
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {
      exit[i] = node;
    }
  }
}

function datum(node) {
  return node.__data__;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value, key) {
  if (!arguments.length) return Array.from(this, datum);

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;

  if (typeof value !== "function") value = (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = (0,_array_js__WEBPACK_IMPORTED_MODULE_2__.default)(value.call(parent, parent && parent.__data__, j, parents)),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);

    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

    // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength);
        previous._next = next || null;
      }
    }
  }

  update = new _index_js__WEBPACK_IMPORTED_MODULE_3__.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/datum.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/datum.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return arguments.length
      ? this.property("__data__", value)
      : this.node().__data__;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/dispatch.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/dispatch.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window.js */ "./node_modules/d3-selection/src/window.js");


function dispatchEvent(node, type, params) {
  var window = (0,_window_js__WEBPACK_IMPORTED_MODULE_0__.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
    else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function() {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function() {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(type, params) {
  return this.each((typeof params === "function"
      ? dispatchFunction
      : dispatchConstant)(type, params));
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/each.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/each.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback) {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/empty.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/empty.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return !this.node();
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/enter.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/enter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "EnterNode": () => /* binding */ EnterNode
/* harmony export */ });
/* harmony import */ var _sparse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sparse.js */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(this._enter || this._groups.map(_sparse_js__WEBPACK_IMPORTED_MODULE_1__.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
  querySelector: function(selector) { return this._parent.querySelector(selector); },
  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
};


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/exit.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/exit.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _sparse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sparse.js */ "./node_modules/d3-selection/src/selection/sparse.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(this._exit || this._groups.map(_sparse_js__WEBPACK_IMPORTED_MODULE_1__.default), this._parents);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/filter.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/filter.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../matcher.js */ "./node_modules/d3-selection/src/matcher.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  if (typeof match !== "function") match = (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_1__.Selection(subgroups, this._parents);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/html.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/html.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return arguments.length
      ? this.each(value == null
          ? htmlRemove : (typeof value === "function"
          ? htmlFunction
          : htmlConstant)(value))
      : this.node().innerHTML;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "root": () => /* binding */ root,
/* harmony export */   "Selection": () => /* binding */ Selection,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./select.js */ "./node_modules/d3-selection/src/selection/select.js");
/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./selectAll.js */ "./node_modules/d3-selection/src/selection/selectAll.js");
/* harmony import */ var _selectChild_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selectChild.js */ "./node_modules/d3-selection/src/selection/selectChild.js");
/* harmony import */ var _selectChildren_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./selectChildren.js */ "./node_modules/d3-selection/src/selection/selectChildren.js");
/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./filter.js */ "./node_modules/d3-selection/src/selection/filter.js");
/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data.js */ "./node_modules/d3-selection/src/selection/data.js");
/* harmony import */ var _enter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./enter.js */ "./node_modules/d3-selection/src/selection/enter.js");
/* harmony import */ var _exit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./exit.js */ "./node_modules/d3-selection/src/selection/exit.js");
/* harmony import */ var _join_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./join.js */ "./node_modules/d3-selection/src/selection/join.js");
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./merge.js */ "./node_modules/d3-selection/src/selection/merge.js");
/* harmony import */ var _order_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./order.js */ "./node_modules/d3-selection/src/selection/order.js");
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./sort.js */ "./node_modules/d3-selection/src/selection/sort.js");
/* harmony import */ var _call_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./call.js */ "./node_modules/d3-selection/src/selection/call.js");
/* harmony import */ var _nodes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./nodes.js */ "./node_modules/d3-selection/src/selection/nodes.js");
/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./node.js */ "./node_modules/d3-selection/src/selection/node.js");
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./size.js */ "./node_modules/d3-selection/src/selection/size.js");
/* harmony import */ var _empty_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./empty.js */ "./node_modules/d3-selection/src/selection/empty.js");
/* harmony import */ var _each_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./each.js */ "./node_modules/d3-selection/src/selection/each.js");
/* harmony import */ var _attr_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./attr.js */ "./node_modules/d3-selection/src/selection/attr.js");
/* harmony import */ var _style_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./style.js */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./property.js */ "./node_modules/d3-selection/src/selection/property.js");
/* harmony import */ var _classed_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./classed.js */ "./node_modules/d3-selection/src/selection/classed.js");
/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./text.js */ "./node_modules/d3-selection/src/selection/text.js");
/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./html.js */ "./node_modules/d3-selection/src/selection/html.js");
/* harmony import */ var _raise_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./raise.js */ "./node_modules/d3-selection/src/selection/raise.js");
/* harmony import */ var _lower_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./lower.js */ "./node_modules/d3-selection/src/selection/lower.js");
/* harmony import */ var _append_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./append.js */ "./node_modules/d3-selection/src/selection/append.js");
/* harmony import */ var _insert_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./insert.js */ "./node_modules/d3-selection/src/selection/insert.js");
/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./remove.js */ "./node_modules/d3-selection/src/selection/remove.js");
/* harmony import */ var _clone_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./clone.js */ "./node_modules/d3-selection/src/selection/clone.js");
/* harmony import */ var _datum_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./datum.js */ "./node_modules/d3-selection/src/selection/datum.js");
/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./on.js */ "./node_modules/d3-selection/src/selection/on.js");
/* harmony import */ var _dispatch_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./dispatch.js */ "./node_modules/d3-selection/src/selection/dispatch.js");
/* harmony import */ var _iterator_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./iterator.js */ "./node_modules/d3-selection/src/selection/iterator.js");



































var root = [null];

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

function selection_selection() {
  return this;
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select_js__WEBPACK_IMPORTED_MODULE_0__.default,
  selectAll: _selectAll_js__WEBPACK_IMPORTED_MODULE_1__.default,
  selectChild: _selectChild_js__WEBPACK_IMPORTED_MODULE_2__.default,
  selectChildren: _selectChildren_js__WEBPACK_IMPORTED_MODULE_3__.default,
  filter: _filter_js__WEBPACK_IMPORTED_MODULE_4__.default,
  data: _data_js__WEBPACK_IMPORTED_MODULE_5__.default,
  enter: _enter_js__WEBPACK_IMPORTED_MODULE_6__.default,
  exit: _exit_js__WEBPACK_IMPORTED_MODULE_7__.default,
  join: _join_js__WEBPACK_IMPORTED_MODULE_8__.default,
  merge: _merge_js__WEBPACK_IMPORTED_MODULE_9__.default,
  selection: selection_selection,
  order: _order_js__WEBPACK_IMPORTED_MODULE_10__.default,
  sort: _sort_js__WEBPACK_IMPORTED_MODULE_11__.default,
  call: _call_js__WEBPACK_IMPORTED_MODULE_12__.default,
  nodes: _nodes_js__WEBPACK_IMPORTED_MODULE_13__.default,
  node: _node_js__WEBPACK_IMPORTED_MODULE_14__.default,
  size: _size_js__WEBPACK_IMPORTED_MODULE_15__.default,
  empty: _empty_js__WEBPACK_IMPORTED_MODULE_16__.default,
  each: _each_js__WEBPACK_IMPORTED_MODULE_17__.default,
  attr: _attr_js__WEBPACK_IMPORTED_MODULE_18__.default,
  style: _style_js__WEBPACK_IMPORTED_MODULE_19__.default,
  property: _property_js__WEBPACK_IMPORTED_MODULE_20__.default,
  classed: _classed_js__WEBPACK_IMPORTED_MODULE_21__.default,
  text: _text_js__WEBPACK_IMPORTED_MODULE_22__.default,
  html: _html_js__WEBPACK_IMPORTED_MODULE_23__.default,
  raise: _raise_js__WEBPACK_IMPORTED_MODULE_24__.default,
  lower: _lower_js__WEBPACK_IMPORTED_MODULE_25__.default,
  append: _append_js__WEBPACK_IMPORTED_MODULE_26__.default,
  insert: _insert_js__WEBPACK_IMPORTED_MODULE_27__.default,
  remove: _remove_js__WEBPACK_IMPORTED_MODULE_28__.default,
  clone: _clone_js__WEBPACK_IMPORTED_MODULE_29__.default,
  datum: _datum_js__WEBPACK_IMPORTED_MODULE_30__.default,
  on: _on_js__WEBPACK_IMPORTED_MODULE_31__.default,
  dispatch: _dispatch_js__WEBPACK_IMPORTED_MODULE_32__.default,
  [Symbol.iterator]: _iterator_js__WEBPACK_IMPORTED_MODULE_33__.default
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (selection);


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/insert.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/insert.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../creator.js */ "./node_modules/d3-selection/src/creator.js");
/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selector.js */ "./node_modules/d3-selection/src/selector.js");



function constantNull() {
  return null;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, before) {
  var create = typeof name === "function" ? name : (0,_creator_js__WEBPACK_IMPORTED_MODULE_0__.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0,_selector_js__WEBPACK_IMPORTED_MODULE_1__.default)(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/iterator.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/iterator.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function* __WEBPACK_DEFAULT_EXPORT__() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) yield node;
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/join.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/join.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove(); else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/lower.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/lower.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.each(lower);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/merge.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/merge.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selection) {
  if (!(selection instanceof _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection)) throw new Error("invalid merge");

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(merges, this._parents);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/node.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/node.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/nodes.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/nodes.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return Array.from(this);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/on.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/on.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {type: t, name: name};
  });
}

function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on) return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on[++i] = o;
      }
    }
    if (++i) on.length = i;
    else delete this.__on;
  };
}

function onAdd(typename, value, options) {
  return function() {
    var on = this.__on, o, listener = contextListener(value);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
        this.addEventListener(o.type, o.listener = listener, o.options = options);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, options);
    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};
    if (!on) this.__on = [o];
    else on.push(o);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(typename, value, options) {
  var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;

  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));
  return this;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/order.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/order.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {

  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/property.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/property.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];
    else this[name] = v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  return arguments.length > 1
      ? this.each((value == null
          ? propertyRemove : typeof value === "function"
          ? propertyFunction
          : propertyConstant)(name, value))
      : this.node()[name];
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/raise.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/raise.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.each(raise);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/remove.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/remove.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.each(remove);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/select.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/select.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../selector.js */ "./node_modules/d3-selection/src/selector.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  if (typeof select !== "function") select = (0,_selector_js__WEBPACK_IMPORTED_MODULE_0__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_1__.Selection(subgroups, this._parents);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/selectAll.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/selectAll.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../array.js */ "./node_modules/d3-selection/src/array.js");
/* harmony import */ var _selectorAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selectorAll.js */ "./node_modules/d3-selection/src/selectorAll.js");




function arrayAll(select) {
  return function() {
    var group = select.apply(this, arguments);
    return group == null ? [] : (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.default)(group);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  if (typeof select === "function") select = arrayAll(select);
  else select = (0,_selectorAll_js__WEBPACK_IMPORTED_MODULE_1__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_2__.Selection(subgroups, parents);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/selectChild.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/selectChild.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../matcher.js */ "./node_modules/d3-selection/src/matcher.js");


var find = Array.prototype.find;

function childFind(match) {
  return function() {
    return find.call(this.children, match);
  };
}

function childFirst() {
  return this.firstElementChild;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  return this.select(match == null ? childFirst
      : childFind(typeof match === "function" ? match : (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.childMatcher)(match)));
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/selectChildren.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/selectChildren.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../matcher.js */ "./node_modules/d3-selection/src/matcher.js");


var filter = Array.prototype.filter;

function children() {
  return this.children;
}

function childrenFilter(match) {
  return function() {
    return filter.call(this.children, match);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  return this.selectAll(match == null ? children
      : childrenFilter(typeof match === "function" ? match : (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.childMatcher)(match)));
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/size.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/size.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  let size = 0;
  for (const node of this) ++size; // eslint-disable-line no-unused-vars
  return size;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sort.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sort.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-selection/src/selection/index.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/sparse.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/sparse.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(update) {
  return new Array(update.length);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/style.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/style.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "styleValue": () => /* binding */ styleValue
/* harmony export */ });
/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../window.js */ "./node_modules/d3-selection/src/window.js");


function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);
    else this.style.setProperty(name, v, priority);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {
  return arguments.length > 1
      ? this.each((value == null
            ? styleRemove : typeof value === "function"
            ? styleFunction
            : styleConstant)(name, value, priority == null ? "" : priority))
      : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name)
      || (0,_window_js__WEBPACK_IMPORTED_MODULE_0__.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selection/text.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-selection/src/selection/text.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return arguments.length
      ? this.each(value == null
          ? textRemove : (typeof value === "function"
          ? textFunction
          : textConstant)(value))
      : this.node().textContent;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selector.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-selection/src/selector.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function none() {}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return selector == null ? none : function() {
    return this.querySelector(selector);
  };
}


/***/ }),

/***/ "./node_modules/d3-selection/src/selectorAll.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/selectorAll.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function empty() {
  return [];
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return selector == null ? empty : function() {
    return this.querySelectorAll(selector);
  };
}


/***/ }),

/***/ "./node_modules/d3-selection/src/sourceEvent.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-selection/src/sourceEvent.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {
  let sourceEvent;
  while (sourceEvent = event.sourceEvent) event = sourceEvent;
  return event;
}


/***/ }),

/***/ "./node_modules/d3-selection/src/window.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-selection/src/window.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node) {
  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
      || (node.document && node) // node is a Window
      || node.defaultView; // node is a Document
}


/***/ }),

/***/ "./node_modules/d3-shape/src/arc.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/arc.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/path.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-shape/src/math.js");




function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0,
      x32 = x3 - x2, y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}

// Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00;

  // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi,
        a1 = endAngle.apply(this, arguments) - _math_js__WEBPACK_IMPORTED_MODULE_0__.halfPi,
        da = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = (0,d3_path__WEBPACK_IMPORTED_MODULE_2__.default)();

    // Ensure that the outer radius is always larger than the inner radius.
    if (r1 < r0) r = r1, r1 = r0, r0 = r;

    // Is it a point?
    if (!(r1 > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon)) context.moveTo(0, 0);

    // Or is it a circle or annulus?
    else if (da > _math_js__WEBPACK_IMPORTED_MODULE_0__.tau - _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
      context.moveTo(r1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(a0), r1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
        context.moveTo(r0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(a1), r0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    }

    // Or is it a circular or annular sector?
    else {
      var a01 = a0,
          a11 = a1,
          a00 = a0,
          a10 = a1,
          da0 = da,
          da1 = da,
          ap = padAngle.apply(this, arguments) / 2,
          rp = (ap > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) && (padRadius ? +padRadius.apply(this, arguments) : (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(r0 * r0 + r1 * r1)),
          rc = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
          rc0 = rc,
          rc1 = rc,
          t0,
          t1;

      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
      if (rp > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
        var p0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(rp / r0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(ap)),
            p1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(rp / r1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(ap));
        if ((da0 -= p0 * 2) > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
        else da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
        else da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }

      var x01 = r1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(a01),
          y01 = r1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(a01),
          x10 = r0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(a10),
          y10 = r0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(a10);

      // Apply rounded corners?
      if (rc > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
        var x11 = r1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(a11),
            y11 = r1 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(a11),
            x00 = r0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(a00),
            y00 = r0 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(a00),
            oc;

        // Restrict the corner radius according to the sector angle.
        if (da < _math_js__WEBPACK_IMPORTED_MODULE_0__.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0],
              ay = y01 - oc[1],
              bx = x11 - oc[0],
              by = y11 - oc[1],
              kc = 1 / (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.acos)((ax * bx + ay * by) / ((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(ax * ax + ay * ay) * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(bx * bx + by * by))) / 2),
              lc = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(rc, (r0 - lc) / (kc - 1));
          rc1 = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(rc, (r1 - lc) / (kc + 1));
        }
      }

      // Is the sector collapsed to a line?
      if (!(da1 > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon)) context.moveTo(x01, y01);

      // Does the sector’s outer ring have rounded corners?
      else if (rc1 > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.y01, t0.x01), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc1, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.y01, t0.x01), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r1, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
          context.arc(t1.cx, t1.cy, rc1, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.y11, t1.x11), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the outer ring just a circular arc?
      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

      // Is there no inner ring, and it’s a circular sector?
      // Or perhaps it’s an annular sector collapsed due to padding?
      if (!(r0 > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) || !(da0 > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon)) context.lineTo(x10, y10);

      // Does the sector’s inner ring (or point) have rounded corners?
      else if (rc0 > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.y01, t0.x01), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc0, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.y01, t0.x01), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r0, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
          context.arc(t1.cx, t1.cy, rc0, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.y11, t1.x11), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the inner ring just a circular arc?
      else context.arc(0, 0, r0, a10, a00, cw);
    }

    context.closePath();

    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math_js__WEBPACK_IMPORTED_MODULE_0__.pi / 2;
    return [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(a) * r, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(a) * r];
  };

  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), arc) : innerRadius;
  };

  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), arc) : cornerRadius;
  };

  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), arc) : padRadius;
  };

  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), arc) : startAngle;
  };

  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), arc) : endAngle;
  };

  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), arc) : padAngle;
  };

  arc.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), arc) : context;
  };

  return arc;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/area.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/area.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/path.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve/linear.js */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _line_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./line.js */ "./node_modules/d3-shape/src/line.js");
/* harmony import */ var _point_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./point.js */ "./node_modules/d3-shape/src/point.js");







/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x0, y0, y1) {
  var x1 = null,
      defined = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(true),
      context = null,
      curve = _curve_linear_js__WEBPACK_IMPORTED_MODULE_1__.default,
      output = null;

  x0 = typeof x0 === "function" ? x0 : (x0 === undefined) ? _point_js__WEBPACK_IMPORTED_MODULE_2__.x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+x0);
  y0 = typeof y0 === "function" ? y0 : (y0 === undefined) ? (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(0) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+y0);
  y1 = typeof y1 === "function" ? y1 : (y1 === undefined) ? _point_js__WEBPACK_IMPORTED_MODULE_2__.y : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+y1);

  function area(data) {
    var i,
        j,
        k,
        n = (data = (0,_array_js__WEBPACK_IMPORTED_MODULE_3__.default)(data)).length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);

    if (context == null) output = curve(buffer = (0,d3_path__WEBPACK_IMPORTED_MODULE_4__.default)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return (0,_line_js__WEBPACK_IMPORTED_MODULE_5__.default)().defined(defined).curve(curve).context(context);
  }

  area.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), x1 = null, area) : x0;
  };

  area.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), area) : x0;
  };

  area.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), area) : x1;
  };

  area.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), y1 = null, area) : y0;
  };

  area.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), area) : y0;
  };

  area.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), area) : y1;
  };

  area.lineX0 =
  area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };

  area.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(!!_), area) : defined;
  };

  area.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/areaRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/areaRadial.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _curve_radial_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve/radial.js */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-shape/src/area.js");
/* harmony import */ var _lineRadial_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lineRadial.js */ "./node_modules/d3-shape/src/lineRadial.js");




/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var a = (0,_area_js__WEBPACK_IMPORTED_MODULE_0__.default)().curve(_curve_radial_js__WEBPACK_IMPORTED_MODULE_1__.curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;

  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function() { return (0,_lineRadial_js__WEBPACK_IMPORTED_MODULE_2__.lineRadial)(x0()); }, delete a.lineX0;
  a.lineEndAngle = function() { return (0,_lineRadial_js__WEBPACK_IMPORTED_MODULE_2__.lineRadial)(x1()); }, delete a.lineX1;
  a.lineInnerRadius = function() { return (0,_lineRadial_js__WEBPACK_IMPORTED_MODULE_2__.lineRadial)(y0()); }, delete a.lineY0;
  a.lineOuterRadius = function() { return (0,_lineRadial_js__WEBPACK_IMPORTED_MODULE_2__.lineRadial)(y1()); }, delete a.lineY1;

  a.curve = function(_) {
    return arguments.length ? c((0,_curve_radial_js__WEBPACK_IMPORTED_MODULE_1__.default)(_)) : c()._curve;
  };

  return a;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/array.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "slice": () => /* binding */ slice,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var slice = Array.prototype.slice;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}


/***/ }),

/***/ "./node_modules/d3-shape/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/constant.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function constant() {
    return x;
  };
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basis.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "point": () => /* binding */ point,
/* harmony export */   "Basis": () => /* binding */ Basis,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function point(that, x, y) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x) / 6,
    (that._y0 + 4 * that._y1 + y) / 6
  );
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3: point(this, this._x1, this._y1); // proceed
      case 2: this._context.lineTo(this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
      default: point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {
  return new Basis(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisClosed.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-shape/src/curve/basis.js");



function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  areaEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
      default: (0,_basis_js__WEBPACK_IMPORTED_MODULE_1__.point)(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {
  return new BasisClosed(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/basisOpen.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/basisOpen.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-shape/src/curve/basis.js");


function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
      case 3: this._point = 4; // proceed
      default: (0,_basis_js__WEBPACK_IMPORTED_MODULE_0__.point)(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {
  return new BasisOpen(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/bundle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/bundle.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-shape/src/curve/basis.js");


function Bundle(context, beta) {
  this._basis = new _basis_js__WEBPACK_IMPORTED_MODULE_0__.Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }

    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(beta) {

  function bundle(context) {
    return beta === 1 ? new _basis_js__WEBPACK_IMPORTED_MODULE_0__.Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function(beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinal.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinal.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "point": () => /* binding */ point,
/* harmony export */   "Cardinal": () => /* binding */ Cardinal,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function point(that, x, y) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x),
    that._y2 + that._k * (that._y1 - y),
    that._x2,
    that._y2
  );
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: point(this, this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
      case 2: this._point = 3; // proceed
      default: point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(tension) {

  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalClosed.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalClosed.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CardinalClosed": () => /* binding */ CardinalClosed,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _cardinal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal.js */ "./node_modules/d3-shape/src/curve/cardinal.js");



function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  areaEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: (0,_cardinal_js__WEBPACK_IMPORTED_MODULE_1__.point)(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/cardinalOpen.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/cardinalOpen.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CardinalOpen": () => /* binding */ CardinalOpen,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _cardinal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cardinal.js */ "./node_modules/d3-shape/src/curve/cardinal.js");


function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // proceed
      default: (0,_cardinal_js__WEBPACK_IMPORTED_MODULE_0__.point)(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRom.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRom.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "point": () => /* binding */ point,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-shape/src/math.js");
/* harmony import */ var _cardinal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinal.js */ "./node_modules/d3-shape/src/curve/cardinal.js");



function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math_js__WEBPACK_IMPORTED_MODULE_0__.epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: this.point(this._x2, this._y2); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; // proceed
      default: point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal_js__WEBPACK_IMPORTED_MODULE_1__.Cardinal(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomClosed.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomClosed.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _cardinalClosed_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cardinalClosed.js */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-shape/src/noop.js");
/* harmony import */ var _catmullRom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./catmullRom.js */ "./node_modules/d3-shape/src/curve/catmullRom.js");




function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  areaEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: (0,_catmullRom_js__WEBPACK_IMPORTED_MODULE_1__.point)(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed_js__WEBPACK_IMPORTED_MODULE_2__.CardinalClosed(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/catmullRomOpen.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/catmullRomOpen.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _cardinalOpen_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cardinalOpen.js */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony import */ var _catmullRom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./catmullRom.js */ "./node_modules/d3-shape/src/curve/catmullRom.js");



function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // proceed
      default: (0,_catmullRom_js__WEBPACK_IMPORTED_MODULE_0__.point)(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen_js__WEBPACK_IMPORTED_MODULE_1__.CardinalOpen(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linear.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linear.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // proceed
      default: this._context.lineTo(x, y); break;
    }
  }
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {
  return new Linear(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/linearClosed.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/linearClosed.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-shape/src/noop.js");


function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  areaEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__.default,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point) this._context.closePath();
  },
  point: function(x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);
    else this._point = 1, this._context.moveTo(x, y);
  }
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {
  return new LinearClosed(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/monotone.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/monotone.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "monotoneX": () => /* binding */ monotoneX,
/* harmony export */   "monotoneY": () => /* binding */ monotoneY
/* harmony export */ });
function sign(x) {
  return x < 0 ? -1 : 1;
}

// Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}

// Calculate a one-sided slope.
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}

// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 =
    this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x1, this._y1); break;
      case 3: point(this, this._t0, slope2(this, this._t0)); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    var t1 = NaN;

    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
      default: point(this, this._t0, t1 = slope3(this, x, y)); break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
}

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function(x, y) { this._context.moveTo(y, x); },
  closePath: function() { this._context.closePath(); },
  lineTo: function(x, y) { this._context.lineTo(y, x); },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/natural.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/natural.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
  b[n - 1] = (x[n] + a[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
  return [a, b];
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {
  return new Natural(context);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/radial.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/radial.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "curveRadialLinear": () => /* binding */ curveRadialLinear,
/* harmony export */   "default": () => /* binding */ curveRadial
/* harmony export */ });
/* harmony import */ var _linear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./linear.js */ "./node_modules/d3-shape/src/curve/linear.js");


var curveRadialLinear = curveRadial(_linear_js__WEBPACK_IMPORTED_MODULE_0__.default);

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {

  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;

  return radial;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/curve/step.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/curve/step.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "stepBefore": () => /* binding */ stepBefore,
/* harmony export */   "stepAfter": () => /* binding */ stepAfter
/* harmony export */ });
function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // proceed
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y);
          this._context.lineTo(x, y);
        } else {
          var x1 = this._x * (1 - this._t) + x * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y);
        }
        break;
      }
    }
    this._x = x, this._y = y;
  }
};

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/descending.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-shape/src/identity.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(d) {
  return d;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "arc": () => /* reexport safe */ _arc_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "area": () => /* reexport safe */ _area_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "line": () => /* reexport safe */ _line_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "pie": () => /* reexport safe */ _pie_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "areaRadial": () => /* reexport safe */ _areaRadial_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "radialArea": () => /* reexport safe */ _areaRadial_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "lineRadial": () => /* reexport safe */ _lineRadial_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "radialLine": () => /* reexport safe */ _lineRadial_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "pointRadial": () => /* reexport safe */ _pointRadial_js__WEBPACK_IMPORTED_MODULE_6__.default,
/* harmony export */   "linkHorizontal": () => /* reexport safe */ _link_index_js__WEBPACK_IMPORTED_MODULE_7__.linkHorizontal,
/* harmony export */   "linkVertical": () => /* reexport safe */ _link_index_js__WEBPACK_IMPORTED_MODULE_7__.linkVertical,
/* harmony export */   "linkRadial": () => /* reexport safe */ _link_index_js__WEBPACK_IMPORTED_MODULE_7__.linkRadial,
/* harmony export */   "symbol": () => /* reexport safe */ _symbol_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "symbols": () => /* reexport safe */ _symbol_js__WEBPACK_IMPORTED_MODULE_8__.symbols,
/* harmony export */   "symbolCircle": () => /* reexport safe */ _symbol_circle_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "symbolCross": () => /* reexport safe */ _symbol_cross_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "symbolDiamond": () => /* reexport safe */ _symbol_diamond_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "symbolSquare": () => /* reexport safe */ _symbol_square_js__WEBPACK_IMPORTED_MODULE_12__.default,
/* harmony export */   "symbolStar": () => /* reexport safe */ _symbol_star_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "symbolTriangle": () => /* reexport safe */ _symbol_triangle_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "symbolWye": () => /* reexport safe */ _symbol_wye_js__WEBPACK_IMPORTED_MODULE_15__.default,
/* harmony export */   "curveBasisClosed": () => /* reexport safe */ _curve_basisClosed_js__WEBPACK_IMPORTED_MODULE_16__.default,
/* harmony export */   "curveBasisOpen": () => /* reexport safe */ _curve_basisOpen_js__WEBPACK_IMPORTED_MODULE_17__.default,
/* harmony export */   "curveBasis": () => /* reexport safe */ _curve_basis_js__WEBPACK_IMPORTED_MODULE_18__.default,
/* harmony export */   "curveBundle": () => /* reexport safe */ _curve_bundle_js__WEBPACK_IMPORTED_MODULE_19__.default,
/* harmony export */   "curveCardinalClosed": () => /* reexport safe */ _curve_cardinalClosed_js__WEBPACK_IMPORTED_MODULE_20__.default,
/* harmony export */   "curveCardinalOpen": () => /* reexport safe */ _curve_cardinalOpen_js__WEBPACK_IMPORTED_MODULE_21__.default,
/* harmony export */   "curveCardinal": () => /* reexport safe */ _curve_cardinal_js__WEBPACK_IMPORTED_MODULE_22__.default,
/* harmony export */   "curveCatmullRomClosed": () => /* reexport safe */ _curve_catmullRomClosed_js__WEBPACK_IMPORTED_MODULE_23__.default,
/* harmony export */   "curveCatmullRomOpen": () => /* reexport safe */ _curve_catmullRomOpen_js__WEBPACK_IMPORTED_MODULE_24__.default,
/* harmony export */   "curveCatmullRom": () => /* reexport safe */ _curve_catmullRom_js__WEBPACK_IMPORTED_MODULE_25__.default,
/* harmony export */   "curveLinearClosed": () => /* reexport safe */ _curve_linearClosed_js__WEBPACK_IMPORTED_MODULE_26__.default,
/* harmony export */   "curveLinear": () => /* reexport safe */ _curve_linear_js__WEBPACK_IMPORTED_MODULE_27__.default,
/* harmony export */   "curveMonotoneX": () => /* reexport safe */ _curve_monotone_js__WEBPACK_IMPORTED_MODULE_28__.monotoneX,
/* harmony export */   "curveMonotoneY": () => /* reexport safe */ _curve_monotone_js__WEBPACK_IMPORTED_MODULE_28__.monotoneY,
/* harmony export */   "curveNatural": () => /* reexport safe */ _curve_natural_js__WEBPACK_IMPORTED_MODULE_29__.default,
/* harmony export */   "curveStep": () => /* reexport safe */ _curve_step_js__WEBPACK_IMPORTED_MODULE_30__.default,
/* harmony export */   "curveStepAfter": () => /* reexport safe */ _curve_step_js__WEBPACK_IMPORTED_MODULE_30__.stepAfter,
/* harmony export */   "curveStepBefore": () => /* reexport safe */ _curve_step_js__WEBPACK_IMPORTED_MODULE_30__.stepBefore,
/* harmony export */   "stack": () => /* reexport safe */ _stack_js__WEBPACK_IMPORTED_MODULE_31__.default,
/* harmony export */   "stackOffsetExpand": () => /* reexport safe */ _offset_expand_js__WEBPACK_IMPORTED_MODULE_32__.default,
/* harmony export */   "stackOffsetDiverging": () => /* reexport safe */ _offset_diverging_js__WEBPACK_IMPORTED_MODULE_33__.default,
/* harmony export */   "stackOffsetNone": () => /* reexport safe */ _offset_none_js__WEBPACK_IMPORTED_MODULE_34__.default,
/* harmony export */   "stackOffsetSilhouette": () => /* reexport safe */ _offset_silhouette_js__WEBPACK_IMPORTED_MODULE_35__.default,
/* harmony export */   "stackOffsetWiggle": () => /* reexport safe */ _offset_wiggle_js__WEBPACK_IMPORTED_MODULE_36__.default,
/* harmony export */   "stackOrderAppearance": () => /* reexport safe */ _order_appearance_js__WEBPACK_IMPORTED_MODULE_37__.default,
/* harmony export */   "stackOrderAscending": () => /* reexport safe */ _order_ascending_js__WEBPACK_IMPORTED_MODULE_38__.default,
/* harmony export */   "stackOrderDescending": () => /* reexport safe */ _order_descending_js__WEBPACK_IMPORTED_MODULE_39__.default,
/* harmony export */   "stackOrderInsideOut": () => /* reexport safe */ _order_insideOut_js__WEBPACK_IMPORTED_MODULE_40__.default,
/* harmony export */   "stackOrderNone": () => /* reexport safe */ _order_none_js__WEBPACK_IMPORTED_MODULE_41__.default,
/* harmony export */   "stackOrderReverse": () => /* reexport safe */ _order_reverse_js__WEBPACK_IMPORTED_MODULE_42__.default
/* harmony export */ });
/* harmony import */ var _arc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arc.js */ "./node_modules/d3-shape/src/arc.js");
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-shape/src/area.js");
/* harmony import */ var _line_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line.js */ "./node_modules/d3-shape/src/line.js");
/* harmony import */ var _pie_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pie.js */ "./node_modules/d3-shape/src/pie.js");
/* harmony import */ var _areaRadial_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./areaRadial.js */ "./node_modules/d3-shape/src/areaRadial.js");
/* harmony import */ var _lineRadial_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lineRadial.js */ "./node_modules/d3-shape/src/lineRadial.js");
/* harmony import */ var _pointRadial_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pointRadial.js */ "./node_modules/d3-shape/src/pointRadial.js");
/* harmony import */ var _link_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./link/index.js */ "./node_modules/d3-shape/src/link/index.js");
/* harmony import */ var _symbol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./symbol.js */ "./node_modules/d3-shape/src/symbol.js");
/* harmony import */ var _symbol_circle_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./symbol/circle.js */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony import */ var _symbol_cross_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./symbol/cross.js */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony import */ var _symbol_diamond_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./symbol/diamond.js */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony import */ var _symbol_square_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./symbol/square.js */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony import */ var _symbol_star_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./symbol/star.js */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony import */ var _symbol_triangle_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./symbol/triangle.js */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony import */ var _symbol_wye_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./symbol/wye.js */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony import */ var _curve_basisClosed_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./curve/basisClosed.js */ "./node_modules/d3-shape/src/curve/basisClosed.js");
/* harmony import */ var _curve_basisOpen_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./curve/basisOpen.js */ "./node_modules/d3-shape/src/curve/basisOpen.js");
/* harmony import */ var _curve_basis_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./curve/basis.js */ "./node_modules/d3-shape/src/curve/basis.js");
/* harmony import */ var _curve_bundle_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./curve/bundle.js */ "./node_modules/d3-shape/src/curve/bundle.js");
/* harmony import */ var _curve_cardinalClosed_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./curve/cardinalClosed.js */ "./node_modules/d3-shape/src/curve/cardinalClosed.js");
/* harmony import */ var _curve_cardinalOpen_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./curve/cardinalOpen.js */ "./node_modules/d3-shape/src/curve/cardinalOpen.js");
/* harmony import */ var _curve_cardinal_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./curve/cardinal.js */ "./node_modules/d3-shape/src/curve/cardinal.js");
/* harmony import */ var _curve_catmullRomClosed_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./curve/catmullRomClosed.js */ "./node_modules/d3-shape/src/curve/catmullRomClosed.js");
/* harmony import */ var _curve_catmullRomOpen_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./curve/catmullRomOpen.js */ "./node_modules/d3-shape/src/curve/catmullRomOpen.js");
/* harmony import */ var _curve_catmullRom_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./curve/catmullRom.js */ "./node_modules/d3-shape/src/curve/catmullRom.js");
/* harmony import */ var _curve_linearClosed_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./curve/linearClosed.js */ "./node_modules/d3-shape/src/curve/linearClosed.js");
/* harmony import */ var _curve_linear_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./curve/linear.js */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _curve_monotone_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./curve/monotone.js */ "./node_modules/d3-shape/src/curve/monotone.js");
/* harmony import */ var _curve_natural_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./curve/natural.js */ "./node_modules/d3-shape/src/curve/natural.js");
/* harmony import */ var _curve_step_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./curve/step.js */ "./node_modules/d3-shape/src/curve/step.js");
/* harmony import */ var _stack_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./stack.js */ "./node_modules/d3-shape/src/stack.js");
/* harmony import */ var _offset_expand_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./offset/expand.js */ "./node_modules/d3-shape/src/offset/expand.js");
/* harmony import */ var _offset_diverging_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./offset/diverging.js */ "./node_modules/d3-shape/src/offset/diverging.js");
/* harmony import */ var _offset_none_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./offset/none.js */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony import */ var _offset_silhouette_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./offset/silhouette.js */ "./node_modules/d3-shape/src/offset/silhouette.js");
/* harmony import */ var _offset_wiggle_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./offset/wiggle.js */ "./node_modules/d3-shape/src/offset/wiggle.js");
/* harmony import */ var _order_appearance_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./order/appearance.js */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony import */ var _order_ascending_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./order/ascending.js */ "./node_modules/d3-shape/src/order/ascending.js");
/* harmony import */ var _order_descending_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./order/descending.js */ "./node_modules/d3-shape/src/order/descending.js");
/* harmony import */ var _order_insideOut_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./order/insideOut.js */ "./node_modules/d3-shape/src/order/insideOut.js");
/* harmony import */ var _order_none_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./order/none.js */ "./node_modules/d3-shape/src/order/none.js");
/* harmony import */ var _order_reverse_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./order/reverse.js */ "./node_modules/d3-shape/src/order/reverse.js");




 // Note: radialArea is deprecated!
 // Note: radialLine is deprecated!










































/***/ }),

/***/ "./node_modules/d3-shape/src/line.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/line.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/path.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _curve_linear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./curve/linear.js */ "./node_modules/d3-shape/src/curve/linear.js");
/* harmony import */ var _point_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./point.js */ "./node_modules/d3-shape/src/point.js");






/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, y) {
  var defined = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(true),
      context = null,
      curve = _curve_linear_js__WEBPACK_IMPORTED_MODULE_1__.default,
      output = null;

  x = typeof x === "function" ? x : (x === undefined) ? _point_js__WEBPACK_IMPORTED_MODULE_2__.x : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(x);
  y = typeof y === "function" ? y : (y === undefined) ? _point_js__WEBPACK_IMPORTED_MODULE_2__.y : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(y);

  function line(data) {
    var i,
        n = (data = (0,_array_js__WEBPACK_IMPORTED_MODULE_3__.default)(data)).length,
        d,
        defined0 = false,
        buffer;

    if (context == null) output = curve(buffer = (0,d3_path__WEBPACK_IMPORTED_MODULE_4__.default)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();
        else output.lineEnd();
      }
      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), line) : x;
  };

  line.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), line) : y;
  };

  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(!!_), line) : defined;
  };

  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/lineRadial.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/lineRadial.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lineRadial": () => /* binding */ lineRadial,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _curve_radial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve/radial.js */ "./node_modules/d3-shape/src/curve/radial.js");
/* harmony import */ var _line_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./line.js */ "./node_modules/d3-shape/src/line.js");



function lineRadial(l) {
  var c = l.curve;

  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function(_) {
    return arguments.length ? c((0,_curve_radial_js__WEBPACK_IMPORTED_MODULE_0__.default)(_)) : c()._curve;
  };

  return l;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return lineRadial((0,_line_js__WEBPACK_IMPORTED_MODULE_1__.default)().curve(_curve_radial_js__WEBPACK_IMPORTED_MODULE_0__.curveRadialLinear));
}


/***/ }),

/***/ "./node_modules/d3-shape/src/link/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/link/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "linkHorizontal": () => /* binding */ linkHorizontal,
/* harmony export */   "linkVertical": () => /* binding */ linkVertical,
/* harmony export */   "linkRadial": () => /* binding */ linkRadial
/* harmony export */ });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/path.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../array.js */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constant.js */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _point_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../point.js */ "./node_modules/d3-shape/src/point.js");
/* harmony import */ var _pointRadial_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../pointRadial.js */ "./node_modules/d3-shape/src/pointRadial.js");






function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point_js__WEBPACK_IMPORTED_MODULE_0__.x,
      y = _point_js__WEBPACK_IMPORTED_MODULE_0__.y,
      context = null;

  function link() {
    var buffer, argv = _array_js__WEBPACK_IMPORTED_MODULE_1__.slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);
    if (!context) context = buffer = (0,d3_path__WEBPACK_IMPORTED_MODULE_2__.default)();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function(_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function(_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), link) : x;
  };

  link.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_3__.default)(+_), link) : y;
  };

  link.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = (0,_pointRadial_js__WEBPACK_IMPORTED_MODULE_4__.default)(x0, y0),
      p1 = (0,_pointRadial_js__WEBPACK_IMPORTED_MODULE_4__.default)(x0, y0 = (y0 + y1) / 2),
      p2 = (0,_pointRadial_js__WEBPACK_IMPORTED_MODULE_4__.default)(x1, y0),
      p3 = (0,_pointRadial_js__WEBPACK_IMPORTED_MODULE_4__.default)(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/math.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "abs": () => /* binding */ abs,
/* harmony export */   "atan2": () => /* binding */ atan2,
/* harmony export */   "cos": () => /* binding */ cos,
/* harmony export */   "max": () => /* binding */ max,
/* harmony export */   "min": () => /* binding */ min,
/* harmony export */   "sin": () => /* binding */ sin,
/* harmony export */   "sqrt": () => /* binding */ sqrt,
/* harmony export */   "epsilon": () => /* binding */ epsilon,
/* harmony export */   "pi": () => /* binding */ pi,
/* harmony export */   "halfPi": () => /* binding */ halfPi,
/* harmony export */   "tau": () => /* binding */ tau,
/* harmony export */   "acos": () => /* binding */ acos,
/* harmony export */   "asin": () => /* binding */ asin
/* harmony export */ });
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max = Math.max;
var min = Math.min;
var sin = Math.sin;
var sqrt = Math.sqrt;

var epsilon = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var tau = 2 * pi;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/noop.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-shape/src/noop.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {}


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/diverging.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/diverging.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/expand.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/expand.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _none_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none.js */ "./node_modules/d3-shape/src/offset/none.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }
  (0,_none_js__WEBPACK_IMPORTED_MODULE_0__.default)(series, order);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/none.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/none.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series, order) {
  if (!((n = series.length) > 1)) return;
  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/silhouette.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/silhouette.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _none_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none.js */ "./node_modules/d3-shape/src/offset/none.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
    s0[j][1] += s0[j][0] = -y / 2;
  }
  (0,_none_js__WEBPACK_IMPORTED_MODULE_0__.default)(series, order);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/offset/wiggle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/offset/wiggle.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _none_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none.js */ "./node_modules/d3-shape/src/offset/none.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;
      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }
      s1 += sij0, s2 += s3 * sij0;
    }
    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }
  s0[j - 1][1] += s0[j - 1][0] = y;
  (0,_none_js__WEBPACK_IMPORTED_MODULE_0__.default)(series, order);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/appearance.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/appearance.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _none_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none.js */ "./node_modules/d3-shape/src/order/none.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series) {
  var peaks = series.map(peak);
  return (0,_none_js__WEBPACK_IMPORTED_MODULE_0__.default)(series).sort(function(a, b) { return peaks[a] - peaks[b]; });
}

function peak(series) {
  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;
  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;
  return j;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/ascending.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/ascending.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "sum": () => /* binding */ sum
/* harmony export */ });
/* harmony import */ var _none_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none.js */ "./node_modules/d3-shape/src/order/none.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series) {
  var sums = series.map(sum);
  return (0,_none_js__WEBPACK_IMPORTED_MODULE_0__.default)(series).sort(function(a, b) { return sums[a] - sums[b]; });
}

function sum(series) {
  var s = 0, i = -1, n = series.length, v;
  while (++i < n) if (v = +series[i][1]) s += v;
  return s;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/descending.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/descending.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-shape/src/order/ascending.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series) {
  return (0,_ascending_js__WEBPACK_IMPORTED_MODULE_0__.default)(series).reverse();
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/insideOut.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/order/insideOut.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _appearance_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./appearance.js */ "./node_modules/d3-shape/src/order/appearance.js");
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-shape/src/order/ascending.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending_js__WEBPACK_IMPORTED_MODULE_0__.sum),
      order = (0,_appearance_js__WEBPACK_IMPORTED_MODULE_1__.default)(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];
    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/none.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/order/none.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series) {
  var n = series.length, o = new Array(n);
  while (--n >= 0) o[n] = n;
  return o;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/order/reverse.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/order/reverse.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _none_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./none.js */ "./node_modules/d3-shape/src/order/none.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(series) {
  return (0,_none_js__WEBPACK_IMPORTED_MODULE_0__.default)(series).reverse();
}


/***/ }),

/***/ "./node_modules/d3-shape/src/pie.js":
/*!******************************************!*\
  !*** ./node_modules/d3-shape/src/pie.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _descending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./descending.js */ "./node_modules/d3-shape/src/descending.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-shape/src/identity.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-shape/src/math.js");






/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var value = _identity_js__WEBPACK_IMPORTED_MODULE_0__.default,
      sortValues = _descending_js__WEBPACK_IMPORTED_MODULE_1__.default,
      sort = null,
      startAngle = (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(0),
      endAngle = (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(_math_js__WEBPACK_IMPORTED_MODULE_3__.tau),
      padAngle = (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(0);

  function pie(data) {
    var i,
        n = (data = (0,_array_js__WEBPACK_IMPORTED_MODULE_4__.default)(data)).length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math_js__WEBPACK_IMPORTED_MODULE_3__.tau, Math.max(-_math_js__WEBPACK_IMPORTED_MODULE_3__.tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    }

    // Optionally sort the arcs by previously-computed values or by data.
    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });

    // Compute the arcs! They are stored in the original data's order.
    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(+_), pie) : value;
  };

  pie.sortValues = function(_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function(_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(+_), pie) : startAngle;
  };

  pie.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(+_), pie) : endAngle;
  };

  pie.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_2__.default)(+_), pie) : padAngle;
  };

  return pie;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/point.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/point.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "x": () => /* binding */ x,
/* harmony export */   "y": () => /* binding */ y
/* harmony export */ });
function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}


/***/ }),

/***/ "./node_modules/d3-shape/src/pointRadial.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/pointRadial.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}


/***/ }),

/***/ "./node_modules/d3-shape/src/stack.js":
/*!********************************************!*\
  !*** ./node_modules/d3-shape/src/stack.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-shape/src/array.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-shape/src/constant.js");
/* harmony import */ var _offset_none_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./offset/none.js */ "./node_modules/d3-shape/src/offset/none.js");
/* harmony import */ var _order_none_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./order/none.js */ "./node_modules/d3-shape/src/order/none.js");





function stackValue(d, key) {
  return d[key];
}

function stackSeries(key) {
  const series = [];
  series.key = key;
  return series;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var keys = (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)([]),
      order = _order_none_js__WEBPACK_IMPORTED_MODULE_1__.default,
      offset = _offset_none_js__WEBPACK_IMPORTED_MODULE_2__.default,
      value = stackValue;

  function stack(data) {
    var sz = Array.from(keys.apply(this, arguments), stackSeries),
        i, n = sz.length, j = -1,
        oz;

    for (const d of data) {
      for (i = 0, ++j; i < n; ++i) {
        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;
      }
    }

    for (i = 0, oz = (0,_array_js__WEBPACK_IMPORTED_MODULE_3__.default)(order(sz)); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function(_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(Array.from(_)), stack) : keys;
  };

  stack.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(+_), stack) : value;
  };

  stack.order = function(_) {
    return arguments.length ? (order = _ == null ? _order_none_js__WEBPACK_IMPORTED_MODULE_1__.default : typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(Array.from(_)), stack) : order;
  };

  stack.offset = function(_) {
    return arguments.length ? (offset = _ == null ? _offset_none_js__WEBPACK_IMPORTED_MODULE_2__.default : _, stack) : offset;
  };

  return stack;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-shape/src/symbol.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "symbols": () => /* binding */ symbols,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/path.js");
/* harmony import */ var _symbol_circle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./symbol/circle.js */ "./node_modules/d3-shape/src/symbol/circle.js");
/* harmony import */ var _symbol_cross_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbol/cross.js */ "./node_modules/d3-shape/src/symbol/cross.js");
/* harmony import */ var _symbol_diamond_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./symbol/diamond.js */ "./node_modules/d3-shape/src/symbol/diamond.js");
/* harmony import */ var _symbol_star_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./symbol/star.js */ "./node_modules/d3-shape/src/symbol/star.js");
/* harmony import */ var _symbol_square_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./symbol/square.js */ "./node_modules/d3-shape/src/symbol/square.js");
/* harmony import */ var _symbol_triangle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./symbol/triangle.js */ "./node_modules/d3-shape/src/symbol/triangle.js");
/* harmony import */ var _symbol_wye_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./symbol/wye.js */ "./node_modules/d3-shape/src/symbol/wye.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-shape/src/constant.js");










var symbols = [
  _symbol_circle_js__WEBPACK_IMPORTED_MODULE_0__.default,
  _symbol_cross_js__WEBPACK_IMPORTED_MODULE_1__.default,
  _symbol_diamond_js__WEBPACK_IMPORTED_MODULE_2__.default,
  _symbol_square_js__WEBPACK_IMPORTED_MODULE_3__.default,
  _symbol_star_js__WEBPACK_IMPORTED_MODULE_4__.default,
  _symbol_triangle_js__WEBPACK_IMPORTED_MODULE_5__.default,
  _symbol_wye_js__WEBPACK_IMPORTED_MODULE_6__.default
];

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(type, size) {
  var context = null;
  type = typeof type === "function" ? type : (0,_constant_js__WEBPACK_IMPORTED_MODULE_7__.default)(type || _symbol_circle_js__WEBPACK_IMPORTED_MODULE_0__.default);
  size = typeof size === "function" ? size : (0,_constant_js__WEBPACK_IMPORTED_MODULE_7__.default)(size === undefined ? 64 : +size);

  function symbol() {
    var buffer;
    if (!context) context = buffer = (0,d3_path__WEBPACK_IMPORTED_MODULE_8__.default)();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function(_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_7__.default)(_), symbol) : type;
  };

  symbol.size = function(_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_7__.default)(+_), symbol) : size;
  };

  symbol.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/circle.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/circle.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-shape/src/math.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  draw: function(context, size) {
    var r = Math.sqrt(size / _math_js__WEBPACK_IMPORTED_MODULE_0__.pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math_js__WEBPACK_IMPORTED_MODULE_0__.tau);
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/cross.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/cross.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  draw: function(context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/diamond.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/diamond.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  draw: function(context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/square.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/square.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  draw: function(context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/star.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/star.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-shape/src/math.js");


var ka = 0.89081309152928522810,
    kr = Math.sin(_math_js__WEBPACK_IMPORTED_MODULE_0__.pi / 10) / Math.sin(7 * _math_js__WEBPACK_IMPORTED_MODULE_0__.pi / 10),
    kx = Math.sin(_math_js__WEBPACK_IMPORTED_MODULE_0__.tau / 10) * kr,
    ky = -Math.cos(_math_js__WEBPACK_IMPORTED_MODULE_0__.tau / 10) * kr;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  draw: function(context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);
    for (var i = 1; i < 5; ++i) {
      var a = _math_js__WEBPACK_IMPORTED_MODULE_0__.tau * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/triangle.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/triangle.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var sqrt3 = Math.sqrt(3);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  draw: function(context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-shape/src/symbol/wye.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-shape/src/symbol/wye.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  draw: function(context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
});


/***/ }),

/***/ "./node_modules/d3-time-format/src/defaultLocale.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-time-format/src/defaultLocale.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "timeFormat": () => /* binding */ timeFormat,
/* harmony export */   "timeParse": () => /* binding */ timeParse,
/* harmony export */   "utcFormat": () => /* binding */ utcFormat,
/* harmony export */   "utcParse": () => /* binding */ utcParse,
/* harmony export */   "default": () => /* binding */ defaultLocale
/* harmony export */ });
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locale.js */ "./node_modules/d3-time-format/src/locale.js");


var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;

defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = (0,_locale_js__WEBPACK_IMPORTED_MODULE_0__.default)(definition);
  timeFormat = locale.format;
  timeParse = locale.parse;
  utcFormat = locale.utcFormat;
  utcParse = locale.utcParse;
  return locale;
}


/***/ }),

/***/ "./node_modules/d3-time-format/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-time-format/src/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "timeFormatDefaultLocale": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "timeFormat": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.timeFormat,
/* harmony export */   "timeParse": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.timeParse,
/* harmony export */   "utcFormat": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.utcFormat,
/* harmony export */   "utcParse": () => /* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.utcParse,
/* harmony export */   "timeFormatLocale": () => /* reexport safe */ _locale_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "isoFormat": () => /* reexport safe */ _isoFormat_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "isoParse": () => /* reexport safe */ _isoParse_js__WEBPACK_IMPORTED_MODULE_3__.default
/* harmony export */ });
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale.js */ "./node_modules/d3-time-format/src/defaultLocale.js");
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./locale.js */ "./node_modules/d3-time-format/src/locale.js");
/* harmony import */ var _isoFormat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoFormat.js */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony import */ var _isoParse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoParse.js */ "./node_modules/d3-time-format/src/isoParse.js");






/***/ }),

/***/ "./node_modules/d3-time-format/src/isoFormat.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoFormat.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "isoSpecifier": () => /* binding */ isoSpecifier,
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale.js */ "./node_modules/d3-time-format/src/defaultLocale.js");


var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString
    ? formatIsoNative
    : (0,_defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.utcFormat)(isoSpecifier);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formatIso);


/***/ }),

/***/ "./node_modules/d3-time-format/src/isoParse.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-time-format/src/isoParse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _isoFormat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isoFormat.js */ "./node_modules/d3-time-format/src/isoFormat.js");
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultLocale.js */ "./node_modules/d3-time-format/src/defaultLocale.js");



function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z")
    ? parseIsoNative
    : (0,_defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.utcParse)(_isoFormat_js__WEBPACK_IMPORTED_MODULE_1__.isoSpecifier);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseIso);


/***/ }),

/***/ "./node_modules/d3-time-format/src/locale.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-time-format/src/locale.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ formatLocale
/* harmony export */ });
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcWeek.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcDay.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/week.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/day.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/year.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/utcYear.js");


function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;

  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);

  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };

  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };

  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };

  // These recursive directive definitions must be deferred.
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function(date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;

      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
          else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function(string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week, day;
      if (i != string.length) return null;

      // If a UNIX timestamp is specified, return it.
      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));

      // If this is utcParse, never use the local timezone.
      if (Z && !("Z" in d)) d.Z = 0;

      // The am-pm flag is 0 for AM, and 1 for PM.
      if ("p" in d) d.H = d.H % 12 + d.p * 12;

      // If the month was not specified, inherit from the quarter.
      if (d.m === undefined) d.m = "q" in d ? d.q : 0;

      // Convert day-of-week and week-of-year to day-of-year.
      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_0__.utcMonday.ceil(week) : (0,d3_time__WEBPACK_IMPORTED_MODULE_0__.utcMonday)(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_1__.default.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? d3_time__WEBPACK_IMPORTED_MODULE_2__.monday.ceil(week) : (0,d3_time__WEBPACK_IMPORTED_MODULE_2__.monday)(week);
          week = d3_time__WEBPACK_IMPORTED_MODULE_3__.default.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      }

      // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }

      // Otherwise, all fields are in local time.
      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() { return specifier; };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() { return specifier; };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() { return specifier; };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() { return specifier; };
      return p;
    }
  };
}

var pads = {"-": "", "_": " ", "0": "0"},
    numberRe = /^\s*\d+/, // note: ignores next directive
    percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_3__.default.count((0,d3_time__WEBPACK_IMPORTED_MODULE_4__.default)(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_2__.sunday.count((0,d3_time__WEBPACK_IMPORTED_MODULE_4__.default)(d) - 1, d), p, 2);
}

function dISO(d) {
  var day = d.getDay();
  return (day >= 4 || day === 0) ? (0,d3_time__WEBPACK_IMPORTED_MODULE_2__.thursday)(d) : d3_time__WEBPACK_IMPORTED_MODULE_2__.thursday.ceil(d);
}

function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_2__.thursday.count((0,d3_time__WEBPACK_IMPORTED_MODULE_4__.default)(d), d) + ((0,d3_time__WEBPACK_IMPORTED_MODULE_4__.default)(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_2__.monday.count((0,d3_time__WEBPACK_IMPORTED_MODULE_4__.default)(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatYearISO(d, p) {
  d = dISO(d);
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = (day >= 4 || day === 0) ? (0,d3_time__WEBPACK_IMPORTED_MODULE_2__.thursday)(d) : d3_time__WEBPACK_IMPORTED_MODULE_2__.thursday.ceil(d);
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+"))
      + pad(z / 60 | 0, "0", 2)
      + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + d3_time__WEBPACK_IMPORTED_MODULE_1__.default.count((0,d3_time__WEBPACK_IMPORTED_MODULE_5__.default)(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__.utcSunday.count((0,d3_time__WEBPACK_IMPORTED_MODULE_5__.default)(d) - 1, d), p, 2);
}

function UTCdISO(d) {
  var day = d.getUTCDay();
  return (day >= 4 || day === 0) ? (0,d3_time__WEBPACK_IMPORTED_MODULE_0__.utcThursday)(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__.utcThursday.ceil(d);
}

function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__.utcThursday.count((0,d3_time__WEBPACK_IMPORTED_MODULE_5__.default)(d), d) + ((0,d3_time__WEBPACK_IMPORTED_MODULE_5__.default)(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(d3_time__WEBPACK_IMPORTED_MODULE_0__.utcMonday.count((0,d3_time__WEBPACK_IMPORTED_MODULE_5__.default)(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = (day >= 4 || day === 0) ? (0,d3_time__WEBPACK_IMPORTED_MODULE_0__.utcThursday)(d) : d3_time__WEBPACK_IMPORTED_MODULE_0__.utcThursday.ceil(d);
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}


/***/ }),

/***/ "./node_modules/d3-time/src/day.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-time/src/day.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "days": () => /* binding */ days
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



var day = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(
  date => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationMinute) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationDay,
  date => date.getDate() - 1
);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (day);
var days = day.range;


/***/ }),

/***/ "./node_modules/d3-time/src/duration.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/duration.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "durationSecond": () => /* binding */ durationSecond,
/* harmony export */   "durationMinute": () => /* binding */ durationMinute,
/* harmony export */   "durationHour": () => /* binding */ durationHour,
/* harmony export */   "durationDay": () => /* binding */ durationDay,
/* harmony export */   "durationWeek": () => /* binding */ durationWeek
/* harmony export */ });
var durationSecond = 1e3;
var durationMinute = 6e4;
var durationHour = 36e5;
var durationDay = 864e5;
var durationWeek = 6048e5;


/***/ }),

/***/ "./node_modules/d3-time/src/hour.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/hour.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "hours": () => /* binding */ hours
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



var hour = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationSecond - date.getMinutes() * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationMinute);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationHour);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationHour;
}, function(date) {
  return date.getHours();
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hour);
var hours = hour.range;


/***/ }),

/***/ "./node_modules/d3-time/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "timeInterval": () => /* reexport safe */ _interval_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "timeMillisecond": () => /* reexport safe */ _millisecond_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "timeMilliseconds": () => /* reexport safe */ _millisecond_js__WEBPACK_IMPORTED_MODULE_1__.milliseconds,
/* harmony export */   "utcMillisecond": () => /* reexport safe */ _millisecond_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "utcMilliseconds": () => /* reexport safe */ _millisecond_js__WEBPACK_IMPORTED_MODULE_1__.milliseconds,
/* harmony export */   "timeSecond": () => /* reexport safe */ _second_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "timeSeconds": () => /* reexport safe */ _second_js__WEBPACK_IMPORTED_MODULE_2__.seconds,
/* harmony export */   "utcSecond": () => /* reexport safe */ _second_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "utcSeconds": () => /* reexport safe */ _second_js__WEBPACK_IMPORTED_MODULE_2__.seconds,
/* harmony export */   "timeMinute": () => /* reexport safe */ _minute_js__WEBPACK_IMPORTED_MODULE_3__.default,
/* harmony export */   "timeMinutes": () => /* reexport safe */ _minute_js__WEBPACK_IMPORTED_MODULE_3__.minutes,
/* harmony export */   "timeHour": () => /* reexport safe */ _hour_js__WEBPACK_IMPORTED_MODULE_4__.default,
/* harmony export */   "timeHours": () => /* reexport safe */ _hour_js__WEBPACK_IMPORTED_MODULE_4__.hours,
/* harmony export */   "timeDay": () => /* reexport safe */ _day_js__WEBPACK_IMPORTED_MODULE_5__.default,
/* harmony export */   "timeDays": () => /* reexport safe */ _day_js__WEBPACK_IMPORTED_MODULE_5__.days,
/* harmony export */   "timeWeek": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.sunday,
/* harmony export */   "timeWeeks": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.sundays,
/* harmony export */   "timeSunday": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.sunday,
/* harmony export */   "timeSundays": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.sundays,
/* harmony export */   "timeMonday": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.monday,
/* harmony export */   "timeMondays": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.mondays,
/* harmony export */   "timeTuesday": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.tuesday,
/* harmony export */   "timeTuesdays": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.tuesdays,
/* harmony export */   "timeWednesday": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.wednesday,
/* harmony export */   "timeWednesdays": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.wednesdays,
/* harmony export */   "timeThursday": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.thursday,
/* harmony export */   "timeThursdays": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.thursdays,
/* harmony export */   "timeFriday": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.friday,
/* harmony export */   "timeFridays": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.fridays,
/* harmony export */   "timeSaturday": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.saturday,
/* harmony export */   "timeSaturdays": () => /* reexport safe */ _week_js__WEBPACK_IMPORTED_MODULE_6__.saturdays,
/* harmony export */   "timeMonth": () => /* reexport safe */ _month_js__WEBPACK_IMPORTED_MODULE_7__.default,
/* harmony export */   "timeMonths": () => /* reexport safe */ _month_js__WEBPACK_IMPORTED_MODULE_7__.months,
/* harmony export */   "timeYear": () => /* reexport safe */ _year_js__WEBPACK_IMPORTED_MODULE_8__.default,
/* harmony export */   "timeYears": () => /* reexport safe */ _year_js__WEBPACK_IMPORTED_MODULE_8__.years,
/* harmony export */   "utcMinute": () => /* reexport safe */ _utcMinute_js__WEBPACK_IMPORTED_MODULE_9__.default,
/* harmony export */   "utcMinutes": () => /* reexport safe */ _utcMinute_js__WEBPACK_IMPORTED_MODULE_9__.utcMinutes,
/* harmony export */   "utcHour": () => /* reexport safe */ _utcHour_js__WEBPACK_IMPORTED_MODULE_10__.default,
/* harmony export */   "utcHours": () => /* reexport safe */ _utcHour_js__WEBPACK_IMPORTED_MODULE_10__.utcHours,
/* harmony export */   "utcDay": () => /* reexport safe */ _utcDay_js__WEBPACK_IMPORTED_MODULE_11__.default,
/* harmony export */   "utcDays": () => /* reexport safe */ _utcDay_js__WEBPACK_IMPORTED_MODULE_11__.utcDays,
/* harmony export */   "utcWeek": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcSunday,
/* harmony export */   "utcWeeks": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcSundays,
/* harmony export */   "utcSunday": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcSunday,
/* harmony export */   "utcSundays": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcSundays,
/* harmony export */   "utcMonday": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcMonday,
/* harmony export */   "utcMondays": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcMondays,
/* harmony export */   "utcTuesday": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcTuesday,
/* harmony export */   "utcTuesdays": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcTuesdays,
/* harmony export */   "utcWednesday": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcWednesday,
/* harmony export */   "utcWednesdays": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcWednesdays,
/* harmony export */   "utcThursday": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcThursday,
/* harmony export */   "utcThursdays": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcThursdays,
/* harmony export */   "utcFriday": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcFriday,
/* harmony export */   "utcFridays": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcFridays,
/* harmony export */   "utcSaturday": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcSaturday,
/* harmony export */   "utcSaturdays": () => /* reexport safe */ _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__.utcSaturdays,
/* harmony export */   "utcMonth": () => /* reexport safe */ _utcMonth_js__WEBPACK_IMPORTED_MODULE_13__.default,
/* harmony export */   "utcMonths": () => /* reexport safe */ _utcMonth_js__WEBPACK_IMPORTED_MODULE_13__.utcMonths,
/* harmony export */   "utcYear": () => /* reexport safe */ _utcYear_js__WEBPACK_IMPORTED_MODULE_14__.default,
/* harmony export */   "utcYears": () => /* reexport safe */ _utcYear_js__WEBPACK_IMPORTED_MODULE_14__.utcYears
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _millisecond_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./millisecond.js */ "./node_modules/d3-time/src/millisecond.js");
/* harmony import */ var _second_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./second.js */ "./node_modules/d3-time/src/second.js");
/* harmony import */ var _minute_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./minute.js */ "./node_modules/d3-time/src/minute.js");
/* harmony import */ var _hour_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hour.js */ "./node_modules/d3-time/src/hour.js");
/* harmony import */ var _day_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./day.js */ "./node_modules/d3-time/src/day.js");
/* harmony import */ var _week_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./week.js */ "./node_modules/d3-time/src/week.js");
/* harmony import */ var _month_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./month.js */ "./node_modules/d3-time/src/month.js");
/* harmony import */ var _year_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./year.js */ "./node_modules/d3-time/src/year.js");
/* harmony import */ var _utcMinute_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utcMinute.js */ "./node_modules/d3-time/src/utcMinute.js");
/* harmony import */ var _utcHour_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utcHour.js */ "./node_modules/d3-time/src/utcHour.js");
/* harmony import */ var _utcDay_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utcDay.js */ "./node_modules/d3-time/src/utcDay.js");
/* harmony import */ var _utcWeek_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utcWeek.js */ "./node_modules/d3-time/src/utcWeek.js");
/* harmony import */ var _utcMonth_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utcMonth.js */ "./node_modules/d3-time/src/utcMonth.js");
/* harmony import */ var _utcYear_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utcYear.js */ "./node_modules/d3-time/src/utcYear.js");































/***/ }),

/***/ "./node_modules/d3-time/src/interval.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/interval.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ newInterval
/* harmony export */ });
var t0 = new Date,
    t1 = new Date;

function newInterval(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
  }

  interval.floor = function(date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}


/***/ }),

/***/ "./node_modules/d3-time/src/millisecond.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-time/src/millisecond.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "milliseconds": () => /* binding */ milliseconds
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");


var millisecond = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function() {
  // noop
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});

// An optimized implementation for this simple case.
millisecond.every = function(k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
    date.setTime(Math.floor(date / k) * k);
  }, function(date, step) {
    date.setTime(+date + step * k);
  }, function(start, end) {
    return (end - start) / k;
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (millisecond);
var milliseconds = millisecond.range;


/***/ }),

/***/ "./node_modules/d3-time/src/minute.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/minute.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "minutes": () => /* binding */ minutes
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



var minute = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationSecond);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationMinute);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationMinute;
}, function(date) {
  return date.getMinutes();
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (minute);
var minutes = minute.range;


/***/ }),

/***/ "./node_modules/d3-time/src/month.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-time/src/month.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "months": () => /* binding */ months
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");


var month = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (month);
var months = month.range;


/***/ }),

/***/ "./node_modules/d3-time/src/second.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/second.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "seconds": () => /* binding */ seconds
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



var second = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationSecond);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationSecond;
}, function(date) {
  return date.getUTCSeconds();
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (second);
var seconds = second.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcDay.js":
/*!********************************************!*\
  !*** ./node_modules/d3-time/src/utcDay.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "utcDays": () => /* binding */ utcDays
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



var utcDay = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationDay;
}, function(date) {
  return date.getUTCDate() - 1;
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (utcDay);
var utcDays = utcDay.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcHour.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcHour.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "utcHours": () => /* binding */ utcHours
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



var utcHour = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationHour);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationHour;
}, function(date) {
  return date.getUTCHours();
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (utcHour);
var utcHours = utcHour.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcMinute.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-time/src/utcMinute.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "utcMinutes": () => /* binding */ utcMinutes
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



var utcMinute = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationMinute);
}, function(start, end) {
  return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationMinute;
}, function(date) {
  return date.getUTCMinutes();
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (utcMinute);
var utcMinutes = utcMinute.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcMonth.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-time/src/utcMonth.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "utcMonths": () => /* binding */ utcMonths
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");


var utcMonth = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (utcMonth);
var utcMonths = utcMonth.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcWeek.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcWeek.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "utcSunday": () => /* binding */ utcSunday,
/* harmony export */   "utcMonday": () => /* binding */ utcMonday,
/* harmony export */   "utcTuesday": () => /* binding */ utcTuesday,
/* harmony export */   "utcWednesday": () => /* binding */ utcWednesday,
/* harmony export */   "utcThursday": () => /* binding */ utcThursday,
/* harmony export */   "utcFriday": () => /* binding */ utcFriday,
/* harmony export */   "utcSaturday": () => /* binding */ utcSaturday,
/* harmony export */   "utcSundays": () => /* binding */ utcSundays,
/* harmony export */   "utcMondays": () => /* binding */ utcMondays,
/* harmony export */   "utcTuesdays": () => /* binding */ utcTuesdays,
/* harmony export */   "utcWednesdays": () => /* binding */ utcWednesdays,
/* harmony export */   "utcThursdays": () => /* binding */ utcThursdays,
/* harmony export */   "utcFridays": () => /* binding */ utcFridays,
/* harmony export */   "utcSaturdays": () => /* binding */ utcSaturdays
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



function utcWeekday(i) {
  return (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationWeek;
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);

var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;


/***/ }),

/***/ "./node_modules/d3-time/src/utcYear.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-time/src/utcYear.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "utcYears": () => /* binding */ utcYears
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");


var utcYear = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (utcYear);
var utcYears = utcYear.range;


/***/ }),

/***/ "./node_modules/d3-time/src/week.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/week.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "sunday": () => /* binding */ sunday,
/* harmony export */   "monday": () => /* binding */ monday,
/* harmony export */   "tuesday": () => /* binding */ tuesday,
/* harmony export */   "wednesday": () => /* binding */ wednesday,
/* harmony export */   "thursday": () => /* binding */ thursday,
/* harmony export */   "friday": () => /* binding */ friday,
/* harmony export */   "saturday": () => /* binding */ saturday,
/* harmony export */   "sundays": () => /* binding */ sundays,
/* harmony export */   "mondays": () => /* binding */ mondays,
/* harmony export */   "tuesdays": () => /* binding */ tuesdays,
/* harmony export */   "wednesdays": () => /* binding */ wednesdays,
/* harmony export */   "thursdays": () => /* binding */ thursdays,
/* harmony export */   "fridays": () => /* binding */ fridays,
/* harmony export */   "saturdays": () => /* binding */ saturdays
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-time/src/duration.js");



function weekday(i) {
  return (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationMinute) / _duration_js__WEBPACK_IMPORTED_MODULE_1__.durationWeek;
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);

var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;


/***/ }),

/***/ "./node_modules/d3-time/src/year.js":
/*!******************************************!*\
  !*** ./node_modules/d3-time/src/year.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "years": () => /* binding */ years
/* harmony export */ });
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-time/src/interval.js");


var year = (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0,_interval_js__WEBPACK_IMPORTED_MODULE_0__.default)(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (year);
var years = year.range;


/***/ }),

/***/ "./node_modules/d3-timer/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "now": () => /* reexport safe */ _timer_js__WEBPACK_IMPORTED_MODULE_0__.now,
/* harmony export */   "timer": () => /* reexport safe */ _timer_js__WEBPACK_IMPORTED_MODULE_0__.timer,
/* harmony export */   "timerFlush": () => /* reexport safe */ _timer_js__WEBPACK_IMPORTED_MODULE_0__.timerFlush,
/* harmony export */   "timeout": () => /* reexport safe */ _timeout_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "interval": () => /* reexport safe */ _interval_js__WEBPACK_IMPORTED_MODULE_2__.default
/* harmony export */ });
/* harmony import */ var _timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer.js */ "./node_modules/d3-timer/src/timer.js");
/* harmony import */ var _timeout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timeout.js */ "./node_modules/d3-timer/src/timeout.js");
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interval.js */ "./node_modules/d3-timer/src/interval.js");







/***/ }),

/***/ "./node_modules/d3-timer/src/interval.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-timer/src/interval.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer.js */ "./node_modules/d3-timer/src/timer.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, delay, time) {
  var t = new _timer_js__WEBPACK_IMPORTED_MODULE_0__.Timer, total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  t._restart = t.restart;
  t.restart = function(callback, delay, time) {
    delay = +delay, time = time == null ? (0,_timer_js__WEBPACK_IMPORTED_MODULE_0__.now)() : +time;
    t._restart(function tick(elapsed) {
      elapsed += total;
      t._restart(tick, total += delay, time);
      callback(elapsed);
    }, delay, time);
  }
  t.restart(callback, delay, time);
  return t;
}


/***/ }),

/***/ "./node_modules/d3-timer/src/timeout.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-timer/src/timeout.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timer.js */ "./node_modules/d3-timer/src/timer.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, delay, time) {
  var t = new _timer_js__WEBPACK_IMPORTED_MODULE_0__.Timer;
  delay = delay == null ? 0 : +delay;
  t.restart(elapsed => {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}


/***/ }),

/***/ "./node_modules/d3-timer/src/timer.js":
/*!********************************************!*\
  !*** ./node_modules/d3-timer/src/timer.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "now": () => /* binding */ now,
/* harmony export */   "Timer": () => /* binding */ Timer,
/* harmony export */   "timer": () => /* binding */ timer,
/* harmony export */   "timerFlush": () => /* binding */ timerFlush
/* harmony export */ });
var frame = 0, // is an animation frame pending?
    timeout = 0, // is a timeout pending?
    interval = 0, // are any timers active?
    pokeDelay = 1000, // how frequently we check for clock skew
    taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call =
  this._time =
  this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;
      else taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer;
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.
  ++frame; // Pretend we’ve set an alarm, if we haven’t already.
  var t = taskHead, e;
  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }
  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;
  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(), delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0, t1 = taskHead, t2, time = Infinity;
  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }
  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.
  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}


/***/ }),

/***/ "./node_modules/d3-transition/src/active.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-transition/src/active.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition/index.js */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition/schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");



var root = [null];

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";
    for (i in schedules) {
      if ((schedule = schedules[i]).state > _transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__.SCHEDULED && schedule.name === name) {
        return new _transition_index_js__WEBPACK_IMPORTED_MODULE_0__.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}


/***/ }),

/***/ "./node_modules/d3-transition/src/index.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-transition/src/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "transition": () => /* reexport safe */ _transition_index_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "active": () => /* reexport safe */ _active_js__WEBPACK_IMPORTED_MODULE_2__.default,
/* harmony export */   "interrupt": () => /* reexport safe */ _interrupt_js__WEBPACK_IMPORTED_MODULE_3__.default
/* harmony export */ });
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./selection/index.js */ "./node_modules/d3-transition/src/selection/index.js");
/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition/index.js */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _active_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./active.js */ "./node_modules/d3-transition/src/active.js");
/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interrupt.js */ "./node_modules/d3-transition/src/interrupt.js");






/***/ }),

/***/ "./node_modules/d3-transition/src/interrupt.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-transition/src/interrupt.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transition/schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;

  if (!schedules) return;

  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
    active = schedule.state > _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.STARTING && schedule.state < _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.ENDING;
    schedule.state = _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}


/***/ }),

/***/ "./node_modules/d3-transition/src/selection/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interrupt.js */ "./node_modules/d3-transition/src/selection/interrupt.js");
/* harmony import */ var _transition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transition.js */ "./node_modules/d3-transition/src/selection/transition.js");




d3_selection__WEBPACK_IMPORTED_MODULE_2__.default.prototype.interrupt = _interrupt_js__WEBPACK_IMPORTED_MODULE_0__.default;
d3_selection__WEBPACK_IMPORTED_MODULE_2__.default.prototype.transition = _transition_js__WEBPACK_IMPORTED_MODULE_1__.default;


/***/ }),

/***/ "./node_modules/d3-transition/src/selection/interrupt.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/interrupt.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../interrupt.js */ "./node_modules/d3-transition/src/interrupt.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  return this.each(function() {
    (0,_interrupt_js__WEBPACK_IMPORTED_MODULE_0__.default)(this, name);
  });
}


/***/ }),

/***/ "./node_modules/d3-transition/src/selection/transition.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/selection/transition.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transition/index.js */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../transition/schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");
/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-ease */ "./node_modules/d3-ease/src/cubic.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/timer.js");





var defaultTiming = {
  time: null, // Set on use.
  delay: 0,
  duration: 250,
  ease: d3_ease__WEBPACK_IMPORTED_MODULE_2__.cubicInOut
};

function inherit(node, id) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id} not found`);
    }
  }
  return timing;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var id,
      timing;

  if (name instanceof _transition_index_js__WEBPACK_IMPORTED_MODULE_0__.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0,_transition_index_js__WEBPACK_IMPORTED_MODULE_0__.newId)(), (timing = defaultTiming).time = (0,d3_timer__WEBPACK_IMPORTED_MODULE_3__.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0,_transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _transition_index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(groups, this._parents, name, id);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/attr.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attr.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/transform/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/namespace.js");
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tween.js */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolate.js */ "./node_modules/d3-transition/src/transition/interpolate.js");





function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var fullname = (0,d3_selection__WEBPACK_IMPORTED_MODULE_2__.default)(name), i = fullname === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_3__.interpolateTransformSvg : _interpolate_js__WEBPACK_IMPORTED_MODULE_1__.default;
  return this.attrTween(name, typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0,_tween_js__WEBPACK_IMPORTED_MODULE_0__.tweenValue)(this, "attr." + name, value))
      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)
      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/attrTween.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/attrTween.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/namespace.js");


function attrInterpolate(name, i) {
  return function(t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function(t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  var fullname = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.default)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/delay.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/delay.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


function delayFunction(id, value) {
  return function() {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function() {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.init)(this, id).delay = value;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? delayFunction
          : delayConstant)(id, value))
      : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).delay;
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/duration.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/duration.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


function durationFunction(id, value) {
  return function() {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function() {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).duration = value;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? durationFunction
          : durationConstant)(id, value))
      : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).duration;
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/ease.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/ease.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error;
  return function() {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).ease = value;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var id = this._id;

  return arguments.length
      ? this.each(easeConstant(id, value))
      : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).ease;
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/easeVarying.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/easeVarying.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


function easeVarying(id, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (typeof v !== "function") throw new Error;
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).ease = v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  if (typeof value !== "function") throw new Error;
  return this.each(easeVarying(this._id, value));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/end.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/end.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var on0, on1, that = this, id = that._id, size = that.size();
  return new Promise(function(resolve, reject) {
    var cancel = {value: reject},
        end = {value: function() { if (--size === 0) resolve(); }};

    that.each(function() {
      var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
          on = schedule.on;

      // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.
      if (on !== on0) {
        on1 = (on0 = on).copy();
        on1._.cancel.push(cancel);
        on1._.interrupt.push(cancel);
        on1._.end.push(end);
      }

      schedule.on = on1;
    });

    // The selection was empty, resolve end immediately
    if (size === 0) resolve();
  });
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/filter.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/filter.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/matcher.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-transition/src/transition/index.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  if (typeof match !== "function") match = (0,d3_selection__WEBPACK_IMPORTED_MODULE_1__.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(subgroups, this._parents, this._name, this._id);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Transition": () => /* binding */ Transition,
/* harmony export */   "default": () => /* binding */ transition,
/* harmony export */   "newId": () => /* binding */ newId
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/selection/index.js");
/* harmony import */ var _attr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attr.js */ "./node_modules/d3-transition/src/transition/attr.js");
/* harmony import */ var _attrTween_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./attrTween.js */ "./node_modules/d3-transition/src/transition/attrTween.js");
/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./delay.js */ "./node_modules/d3-transition/src/transition/delay.js");
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./duration.js */ "./node_modules/d3-transition/src/transition/duration.js");
/* harmony import */ var _ease_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ease.js */ "./node_modules/d3-transition/src/transition/ease.js");
/* harmony import */ var _easeVarying_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./easeVarying.js */ "./node_modules/d3-transition/src/transition/easeVarying.js");
/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./filter.js */ "./node_modules/d3-transition/src/transition/filter.js");
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./merge.js */ "./node_modules/d3-transition/src/transition/merge.js");
/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./on.js */ "./node_modules/d3-transition/src/transition/on.js");
/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./remove.js */ "./node_modules/d3-transition/src/transition/remove.js");
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./select.js */ "./node_modules/d3-transition/src/transition/select.js");
/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./selectAll.js */ "./node_modules/d3-transition/src/transition/selectAll.js");
/* harmony import */ var _selection_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./selection.js */ "./node_modules/d3-transition/src/transition/selection.js");
/* harmony import */ var _style_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./style.js */ "./node_modules/d3-transition/src/transition/style.js");
/* harmony import */ var _styleTween_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./styleTween.js */ "./node_modules/d3-transition/src/transition/styleTween.js");
/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./text.js */ "./node_modules/d3-transition/src/transition/text.js");
/* harmony import */ var _textTween_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./textTween.js */ "./node_modules/d3-transition/src/transition/textTween.js");
/* harmony import */ var _transition_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./transition.js */ "./node_modules/d3-transition/src/transition/transition.js");
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tween.js */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _end_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./end.js */ "./node_modules/d3-transition/src/transition/end.js");






















var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition(name) {
  return (0,d3_selection__WEBPACK_IMPORTED_MODULE_20__.default)().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = d3_selection__WEBPACK_IMPORTED_MODULE_20__.default.prototype;

Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select_js__WEBPACK_IMPORTED_MODULE_10__.default,
  selectAll: _selectAll_js__WEBPACK_IMPORTED_MODULE_11__.default,
  filter: _filter_js__WEBPACK_IMPORTED_MODULE_6__.default,
  merge: _merge_js__WEBPACK_IMPORTED_MODULE_7__.default,
  selection: _selection_js__WEBPACK_IMPORTED_MODULE_12__.default,
  transition: _transition_js__WEBPACK_IMPORTED_MODULE_17__.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on_js__WEBPACK_IMPORTED_MODULE_8__.default,
  attr: _attr_js__WEBPACK_IMPORTED_MODULE_0__.default,
  attrTween: _attrTween_js__WEBPACK_IMPORTED_MODULE_1__.default,
  style: _style_js__WEBPACK_IMPORTED_MODULE_13__.default,
  styleTween: _styleTween_js__WEBPACK_IMPORTED_MODULE_14__.default,
  text: _text_js__WEBPACK_IMPORTED_MODULE_15__.default,
  textTween: _textTween_js__WEBPACK_IMPORTED_MODULE_16__.default,
  remove: _remove_js__WEBPACK_IMPORTED_MODULE_9__.default,
  tween: _tween_js__WEBPACK_IMPORTED_MODULE_18__.default,
  delay: _delay_js__WEBPACK_IMPORTED_MODULE_2__.default,
  duration: _duration_js__WEBPACK_IMPORTED_MODULE_3__.default,
  ease: _ease_js__WEBPACK_IMPORTED_MODULE_4__.default,
  easeVarying: _easeVarying_js__WEBPACK_IMPORTED_MODULE_5__.default,
  end: _end_js__WEBPACK_IMPORTED_MODULE_19__.default,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/interpolate.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/interpolate.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/string.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var c;
  return (typeof b === "number" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_0__.default
      : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_1__.default ? d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.default
      : (c = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(b)) ? (b = c, d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.default)
      : d3_interpolate__WEBPACK_IMPORTED_MODULE_3__.default)(a, b);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/merge.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/merge.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-transition/src/transition/index.js");


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(transition) {
  if (transition._id !== this._id) throw new Error;

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(merges, this._parents, this._name, this._id);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/on.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/on.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function(t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0, on1, sit = start(name) ? _schedule_js__WEBPACK_IMPORTED_MODULE_0__.init : _schedule_js__WEBPACK_IMPORTED_MODULE_0__.set;
  return function() {
    var schedule = sit(this, id),
        on = schedule.on;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);

    schedule.on = on1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, listener) {
  var id = this._id;

  return arguments.length < 2
      ? (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).on.on(name)
      : this.each(onFunction(id, name, listener));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/remove.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/remove.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function removeFunction(id) {
  return function() {
    var parent = this.parentNode;
    for (var i in this.__transition) if (+i !== id) return;
    if (parent) parent.removeChild(this);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.on("end.remove", removeFunction(this._id));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/schedule.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/schedule.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CREATED": () => /* binding */ CREATED,
/* harmony export */   "SCHEDULED": () => /* binding */ SCHEDULED,
/* harmony export */   "STARTING": () => /* binding */ STARTING,
/* harmony export */   "STARTED": () => /* binding */ STARTED,
/* harmony export */   "RUNNING": () => /* binding */ RUNNING,
/* harmony export */   "ENDING": () => /* binding */ ENDING,
/* harmony export */   "ENDED": () => /* binding */ ENDED,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "init": () => /* binding */ init,
/* harmony export */   "set": () => /* binding */ set,
/* harmony export */   "get": () => /* binding */ get
/* harmony export */ });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/timer.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/timeout.js");



var emptyOn = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_0__.default)("start", "end", "cancel", "interrupt");
var emptyTween = [];

var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};
  else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index, // For context during callback.
    group: group, // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween;

  // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!
  schedules[id] = self;
  self.timer = (0,d3_timer__WEBPACK_IMPORTED_MODULE_1__.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time);

    // If the elapsed delay is less than our first sleep, start immediately.
    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o;

    // If the state is not SCHEDULED, then we previously errored on start.
    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue;

      // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!
      if (o.state === STARTED) return (0,d3_timer__WEBPACK_IMPORTED_MODULE_2__.default)(start);

      // Interrupt the active transition, if any.
      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }

      // Cancel any pre-empted transitions.
      else if (+i < id) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("cancel", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }
    }

    // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.
    (0,d3_timer__WEBPACK_IMPORTED_MODULE_2__.default)(function() {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    });

    // Dispatch the start event.
    // Note this must be done before the tween are initialized.
    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted
    self.state = STARTED;

    // Initialize the tween, deleting null tween.
    tween = new Array(n = self.tween.length);
    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }
    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    }

    // Dispatch the end event.
    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];
    for (var i in schedules) return; // eslint-disable-line no-unused-vars
    delete node.__transition;
  }
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/select.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/select.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/selector.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");




/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = (0,d3_selection__WEBPACK_IMPORTED_MODULE_2__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(subgroup[i], name, id, i, subgroup, (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id));
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(subgroups, this._parents, name, id);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/selectAll.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selectAll.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/selectorAll.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");




/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = (0,d3_selection__WEBPACK_IMPORTED_MODULE_2__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(child, name, id, k, children, inherit);
          }
        }
        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(subgroups, parents, name, id);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/selection.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/selection.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/selection/index.js");


var Selection = d3_selection__WEBPACK_IMPORTED_MODULE_0__.default.prototype.constructor;

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return new Selection(this._groups, this._parents);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/style.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/style.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/transform/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/selection/style.js");
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tween.js */ "./node_modules/d3-transition/src/transition/tween.js");
/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interpolate.js */ "./node_modules/d3-transition/src/transition/interpolate.js");






function styleNull(name, interpolate) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name),
        string1 = (this.style.removeProperty(name), (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
  return function() {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);

    schedule.on = on1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {
  var i = (name += "") === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_4__.interpolateTransformCss : _interpolate_js__WEBPACK_IMPORTED_MODULE_2__.default;
  return value == null ? this
      .styleTween(name, styleNull(name, i))
      .on("end.style." + name, styleRemove(name))
    : typeof value === "function" ? this
      .styleTween(name, styleFunction(name, i, (0,_tween_js__WEBPACK_IMPORTED_MODULE_1__.tweenValue)(this, "style." + name, value)))
      .each(styleMaybeRemove(this._id, name))
    : this
      .styleTween(name, styleConstant(name, i, value), priority)
      .on("end.style." + name, null);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/styleTween.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/styleTween.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function styleInterpolate(name, i, priority) {
  return function(t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/text.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/text.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tween.js */ "./node_modules/d3-transition/src/transition/tween.js");


function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return this.tween("text", typeof value === "function"
      ? textFunction((0,_tween_js__WEBPACK_IMPORTED_MODULE_0__.tweenValue)(this, "text", value))
      : textConstant(value == null ? "" : value + ""));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/textTween.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/textTween.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function textInterpolate(i) {
  return function(t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, textTween(value));
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/transition.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/transition.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-transition/src/transition/index.js");
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var name = this._name,
      id0 = this._id,
      id1 = (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id0);
        (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(groups, this._parents, name, id1);
}


/***/ }),

/***/ "./node_modules/d3-transition/src/transition/tween.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-transition/src/transition/tween.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__,
/* harmony export */   "tweenValue": () => /* binding */ tweenValue
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schedule.js */ "./node_modules/d3-transition/src/transition/schedule.js");


function tweenRemove(id, name) {
  var tween0, tween1;
  return function() {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error;
  return function() {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }
      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var id = this._id;

  name += "";

  if (arguments.length < 2) {
    var tween = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).tween;
    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }
    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;

  transition.each(function() {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });

  return function(node) {
    return (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(node, id).value[name];
  };
}


/***/ }),

/***/ "./node_modules/d3-zoom/src/constant.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-zoom/src/constant.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);


/***/ }),

/***/ "./node_modules/d3-zoom/src/event.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/event.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ ZoomEvent
/* harmony export */ });
function ZoomEvent(type, {
  sourceEvent,
  target,
  transform,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    transform: {value: transform, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}


/***/ }),

/***/ "./node_modules/d3-zoom/src/index.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-zoom/src/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "zoom": () => /* reexport safe */ _zoom_js__WEBPACK_IMPORTED_MODULE_0__.default,
/* harmony export */   "zoomTransform": () => /* reexport safe */ _transform_js__WEBPACK_IMPORTED_MODULE_1__.default,
/* harmony export */   "zoomIdentity": () => /* reexport safe */ _transform_js__WEBPACK_IMPORTED_MODULE_1__.identity
/* harmony export */ });
/* harmony import */ var _zoom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zoom.js */ "./node_modules/d3-zoom/src/zoom.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform.js */ "./node_modules/d3-zoom/src/transform.js");




/***/ }),

/***/ "./node_modules/d3-zoom/src/noevent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-zoom/src/noevent.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nopropagation": () => /* binding */ nopropagation,
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
function nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}


/***/ }),

/***/ "./node_modules/d3-zoom/src/transform.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-zoom/src/transform.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Transform": () => /* binding */ Transform,
/* harmony export */   "identity": () => /* binding */ identity,
/* harmony export */   "default": () => /* binding */ transform
/* harmony export */ });
function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function(k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function(x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function(point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function(x) {
    return x * this.k + this.x;
  },
  applyY: function(y) {
    return y * this.k + this.y;
  },
  invert: function(location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function(x) {
    return (x - this.x) / this.k;
  },
  invertY: function(y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function(x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function(y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function() {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};

var identity = new Transform(1, 0, 0);

transform.prototype = Transform.prototype;

function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;
  return node.__zoom;
}


/***/ }),

/***/ "./node_modules/d3-zoom/src/zoom.js":
/*!******************************************!*\
  !*** ./node_modules/d3-zoom/src/zoom.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/dispatch.js");
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/nodrag.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/zoom.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/select.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/pointer.js");
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-zoom/src/constant.js");
/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./event.js */ "./node_modules/d3-zoom/src/event.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transform.js */ "./node_modules/d3-zoom/src/transform.js");
/* harmony import */ var _noevent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./noevent.js */ "./node_modules/d3-zoom/src/noevent.js");










// Ignore right-click, since that should open the context menu.
// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event
function defaultFilter(event) {
  return (!event.ctrlKey || event.type === 'wheel') && !event.button;
}

function defaultExtent() {
  var e = this;
  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;
    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }
    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }
  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform_js__WEBPACK_IMPORTED_MODULE_3__.identity;
}

function defaultWheelDelta(event) {
  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(
    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),
    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)
  );
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_5__.default,
      listeners = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_6__.default)("start", "zoom", "end"),
      touchstarting,
      touchfirst,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0,
      tapDistance = 10;

  function zoom(selection) {
    selection
        .property("__zoom", defaultTransform)
        .on("wheel.zoom", wheeled)
        .on("mousedown.zoom", mousedowned)
        .on("dblclick.zoom", dblclicked)
      .filter(touchable)
        .on("touchstart.zoom", touchstarted)
        .on("touchmove.zoom", touchmoved)
        .on("touchend.zoom touchcancel.zoom", touchended)
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function(collection, transform, point, event) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);
    if (collection !== selection) {
      schedule(collection, transform, point, event);
    } else {
      selection.interrupt().each(function() {
        gesture(this, arguments)
          .event(event)
          .start()
          .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
          .end();
      });
    }
  };

  zoom.scaleBy = function(selection, k, p, event) {
    zoom.scaleTo(selection, function() {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p, event);
  };

  zoom.scaleTo = function(selection, k, p, event) {
    zoom.transform(selection, function() {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p, event);
  };

  zoom.translateBy = function(selection, x, y, event) {
    zoom.transform(selection, function() {
      return constrain(this.__zoom.translate(
        typeof x === "function" ? x.apply(this, arguments) : x,
        typeof y === "function" ? y.apply(this, arguments) : y
      ), extent.apply(this, arguments), translateExtent);
    }, null, event);
  };

  zoom.translateTo = function(selection, x, y, p, event) {
    zoom.transform(selection, function() {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform_js__WEBPACK_IMPORTED_MODULE_3__.identity.translate(p0[0], p0[1]).scale(t.k).translate(
        typeof x === "function" ? -x.apply(this, arguments) : -x,
        typeof y === "function" ? -y.apply(this, arguments) : -y
      ), e, translateExtent);
    }, p, event);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point, event) {
    transition
        .on("start.zoom", function() { gesture(this, arguments).event(event).start(); })
        .on("interrupt.zoom end.zoom", function() { gesture(this, arguments).event(event).end(); })
        .tween("zoom", function() {
          var that = this,
              args = arguments,
              g = gesture(that, args).event(event),
              e = extent.apply(that, args),
              p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
              a = that.__zoom,
              b = typeof transform === "function" ? transform.apply(that, args) : transform,
              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
          return function(t) {
            if (t === 1) t = b; // Avoid rounding error on end.
            else { var l = i(t), k = w / l[2]; t = new _transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }
            g.zoom(null, t);
          };
        });
  }

  function gesture(that, args, clean) {
    return (!clean && that.__zooming) || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.sourceEvent = null;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    event: function(event) {
      if (event) this.sourceEvent = event;
      return this;
    },
    start: function() {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }
      return this;
    },
    zoom: function(key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function() {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }
      return this;
    },
    emit: function(type) {
      var d = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this.that).datum();
      listeners.call(
        type,
        this.that,
        new _event_js__WEBPACK_IMPORTED_MODULE_2__.default(type, {
          sourceEvent: this.sourceEvent,
          target: zoom,
          type,
          transform: this.that.__zoom,
          dispatch: listeners
        }),
        d
      );
    }
  };

  function wheeled(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, args).event(event),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event);

    // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.
    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }
      clearTimeout(g.wheel);
    }

    // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return;

    // Otherwise, capture the mouse point and location at the start.
    else {
      g.mouse = [p, t.invert(p)];
      (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(this);
      g.start();
    }

    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned(event, ...args) {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, args, true).event(event),
        v = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event, currentTarget),
        currentTarget = event.currentTarget,
        x0 = event.clientX,
        y0 = event.clientY;

    (0,d3_drag__WEBPACK_IMPORTED_MODULE_9__.default)(event.view);
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.nopropagation)(event);
    g.mouse = [p, this.__zoom.invert(p)];
    (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(this);
    g.start();

    function mousemoved(event) {
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
      if (!g.moved) {
        var dx = event.clientX - x0, dy = event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }
      g.event(event)
       .zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped(event) {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0,d3_drag__WEBPACK_IMPORTED_MODULE_9__.yesdrag)(event.view, g.moved);
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
      g.event(event).end();
    }
  }

  function dblclicked(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event.changedTouches ? event.changedTouches[0] : event, this),
        p1 = t0.invert(p0),
        k1 = t0.k * (event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);

    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
    if (duration > 0) (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this).transition().duration(duration).call(schedule, t1, p0, event);
    else (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this).call(zoom.transform, t1, p0, event);
  }

  function touchstarted(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var touches = event.touches,
        n = touches.length,
        g = gesture(this, args, event.changedTouches.length === n).event(event),
        started, i, t, p;

    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.nopropagation)(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(t, this);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);
      (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(this);
      g.start();
    }
  }

  function touchmoved(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length, i, t, p, l;

    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(t, this);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;
      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }
    t = g.that.__zoom;
    if (g.touch1) {
      var p0 = g.touch0[0], l0 = g.touch0[1],
          p1 = g.touch1[0], l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    }
    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];
    else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length, i, t;

    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.nopropagation)(event);
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function() { touchending = null; }, touchDelay);
    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;
      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }
    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);
    else {
      g.end();
      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.
      if (g.taps === 2) {
        t = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(t, this);
        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
          var p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this).on("dblclick.zoom");
          if (p) p.apply(this, arguments);
        }
      }
    }
  }

  zoom.wheelDelta = function(_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function(_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function(_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function(_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function(_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function(_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function(_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function(_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  zoom.tapDistance = function(_) {
    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
  };

  return zoom;
}


/***/ }),

/***/ "./node_modules/d3/dist/package.js":
/*!*****************************************!*\
  !*** ./node_modules/d3/dist/package.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "name": () => /* binding */ name,
/* harmony export */   "version": () => /* binding */ version,
/* harmony export */   "description": () => /* binding */ description,
/* harmony export */   "keywords": () => /* binding */ keywords,
/* harmony export */   "homepage": () => /* binding */ homepage,
/* harmony export */   "license": () => /* binding */ license,
/* harmony export */   "author": () => /* binding */ author,
/* harmony export */   "main": () => /* binding */ main,
/* harmony export */   "unpkg": () => /* binding */ unpkg,
/* harmony export */   "jsdelivr": () => /* binding */ jsdelivr,
/* harmony export */   "module": () => /* binding */ module,
/* harmony export */   "repository": () => /* binding */ repository,
/* harmony export */   "files": () => /* binding */ files,
/* harmony export */   "scripts": () => /* binding */ scripts,
/* harmony export */   "devDependencies": () => /* binding */ devDependencies,
/* harmony export */   "dependencies": () => /* binding */ dependencies
/* harmony export */ });
var name = "d3";
var version = "6.3.1";
var description = "Data-Driven Documents";
var keywords = ["dom","visualization","svg","animation","canvas"];
var homepage = "https://d3js.org";
var license = "BSD-3-Clause";
var author = {"name":"Mike Bostock","url":"https://bost.ocks.org/mike"};
var main = "dist/d3.node.js";
var unpkg = "dist/d3.min.js";
var jsdelivr = "dist/d3.min.js";
var module = "index.js";
var repository = {"type":"git","url":"https://github.com/d3/d3.git"};
var files = ["dist/**/*.js","index.js"];
var scripts = {"pretest":"rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c","test":"tape 'test/**/*-test.js'","prepublishOnly":"yarn test","postpublish":"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v${npm_package_version%%.*}.js && cp ../d3/dist/d3.min.js d3.v${npm_package_version%%.*}.min.js && git add d3.v${npm_package_version%%.*}.js d3.v${npm_package_version%%.*}.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"};
var devDependencies = {"json2module":"0.0","rimraf":"3","rollup":"2","rollup-plugin-ascii":"0.0","rollup-plugin-node-resolve":"5","rollup-plugin-terser":"7","tape":"4","tape-await":"0.1"};
var dependencies = {"d3-array":"2","d3-axis":"2","d3-brush":"2","d3-chord":"2","d3-color":"2","d3-contour":"2","d3-delaunay":"5","d3-dispatch":"2","d3-drag":"2","d3-dsv":"2","d3-ease":"2","d3-fetch":"2","d3-force":"2","d3-format":"2","d3-geo":"2","d3-hierarchy":"2","d3-interpolate":"2","d3-path":"2","d3-polygon":"2","d3-quadtree":"2","d3-random":"2","d3-scale":"3","d3-scale-chromatic":"2","d3-selection":"2","d3-shape":"2","d3-time":"2","d3-time-format":"3","d3-timer":"2","d3-transition":"2","d3-zoom":"2"};


/***/ }),

/***/ "./node_modules/d3/index.js":
/*!**********************************!*\
  !*** ./node_modules/d3/index.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "version": () => /* reexport safe */ _dist_package_js__WEBPACK_IMPORTED_MODULE_0__.version,
/* harmony export */   "Adder": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.Adder,
/* harmony export */   "ascending": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.ascending,
/* harmony export */   "bin": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.bin,
/* harmony export */   "bisect": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.bisect,
/* harmony export */   "bisectCenter": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.bisectCenter,
/* harmony export */   "bisectLeft": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.bisectLeft,
/* harmony export */   "bisectRight": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.bisectRight,
/* harmony export */   "bisector": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.bisector,
/* harmony export */   "count": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.count,
/* harmony export */   "cross": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.cross,
/* harmony export */   "cumsum": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.cumsum,
/* harmony export */   "descending": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.descending,
/* harmony export */   "deviation": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.deviation,
/* harmony export */   "difference": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.difference,
/* harmony export */   "disjoint": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.disjoint,
/* harmony export */   "every": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.every,
/* harmony export */   "extent": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.extent,
/* harmony export */   "filter": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.filter,
/* harmony export */   "fsum": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.fsum,
/* harmony export */   "greatest": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.greatest,
/* harmony export */   "greatestIndex": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.greatestIndex,
/* harmony export */   "group": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.group,
/* harmony export */   "groups": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.groups,
/* harmony export */   "histogram": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.histogram,
/* harmony export */   "index": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.index,
/* harmony export */   "indexes": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.indexes,
/* harmony export */   "intersection": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.intersection,
/* harmony export */   "least": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.least,
/* harmony export */   "leastIndex": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.leastIndex,
/* harmony export */   "map": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.map,
/* harmony export */   "max": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.max,
/* harmony export */   "maxIndex": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.maxIndex,
/* harmony export */   "mean": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.mean,
/* harmony export */   "median": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.median,
/* harmony export */   "merge": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.merge,
/* harmony export */   "min": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.min,
/* harmony export */   "minIndex": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.minIndex,
/* harmony export */   "nice": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.nice,
/* harmony export */   "pairs": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.pairs,
/* harmony export */   "permute": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.permute,
/* harmony export */   "quantile": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.quantile,
/* harmony export */   "quantileSorted": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.quantileSorted,
/* harmony export */   "quickselect": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.quickselect,
/* harmony export */   "range": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.range,
/* harmony export */   "reduce": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.reduce,
/* harmony export */   "reverse": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.reverse,
/* harmony export */   "rollup": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.rollup,
/* harmony export */   "rollups": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.rollups,
/* harmony export */   "scan": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.scan,
/* harmony export */   "shuffle": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.shuffle,
/* harmony export */   "shuffler": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.shuffler,
/* harmony export */   "some": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.some,
/* harmony export */   "sort": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.sort,
/* harmony export */   "subset": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.subset,
/* harmony export */   "sum": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.sum,
/* harmony export */   "superset": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.superset,
/* harmony export */   "thresholdFreedmanDiaconis": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.thresholdFreedmanDiaconis,
/* harmony export */   "thresholdScott": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.thresholdScott,
/* harmony export */   "thresholdSturges": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.thresholdSturges,
/* harmony export */   "tickIncrement": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.tickIncrement,
/* harmony export */   "tickStep": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.tickStep,
/* harmony export */   "ticks": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.ticks,
/* harmony export */   "transpose": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.transpose,
/* harmony export */   "union": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.union,
/* harmony export */   "variance": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.variance,
/* harmony export */   "zip": () => /* reexport safe */ d3_array__WEBPACK_IMPORTED_MODULE_1__.zip,
/* harmony export */   "axisBottom": () => /* reexport safe */ d3_axis__WEBPACK_IMPORTED_MODULE_2__.axisBottom,
/* harmony export */   "axisLeft": () => /* reexport safe */ d3_axis__WEBPACK_IMPORTED_MODULE_2__.axisLeft,
/* harmony export */   "axisRight": () => /* reexport safe */ d3_axis__WEBPACK_IMPORTED_MODULE_2__.axisRight,
/* harmony export */   "axisTop": () => /* reexport safe */ d3_axis__WEBPACK_IMPORTED_MODULE_2__.axisTop,
/* harmony export */   "brush": () => /* reexport safe */ d3_brush__WEBPACK_IMPORTED_MODULE_3__.brush,
/* harmony export */   "brushSelection": () => /* reexport safe */ d3_brush__WEBPACK_IMPORTED_MODULE_3__.brushSelection,
/* harmony export */   "brushX": () => /* reexport safe */ d3_brush__WEBPACK_IMPORTED_MODULE_3__.brushX,
/* harmony export */   "brushY": () => /* reexport safe */ d3_brush__WEBPACK_IMPORTED_MODULE_3__.brushY,
/* harmony export */   "chord": () => /* reexport safe */ d3_chord__WEBPACK_IMPORTED_MODULE_4__.chord,
/* harmony export */   "chordDirected": () => /* reexport safe */ d3_chord__WEBPACK_IMPORTED_MODULE_4__.chordDirected,
/* harmony export */   "chordTranspose": () => /* reexport safe */ d3_chord__WEBPACK_IMPORTED_MODULE_4__.chordTranspose,
/* harmony export */   "ribbon": () => /* reexport safe */ d3_chord__WEBPACK_IMPORTED_MODULE_4__.ribbon,
/* harmony export */   "ribbonArrow": () => /* reexport safe */ d3_chord__WEBPACK_IMPORTED_MODULE_4__.ribbonArrow,
/* harmony export */   "color": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.color,
/* harmony export */   "cubehelix": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.cubehelix,
/* harmony export */   "gray": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.gray,
/* harmony export */   "hcl": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.hcl,
/* harmony export */   "hsl": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.hsl,
/* harmony export */   "lab": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.lab,
/* harmony export */   "lch": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.lch,
/* harmony export */   "rgb": () => /* reexport safe */ d3_color__WEBPACK_IMPORTED_MODULE_5__.rgb,
/* harmony export */   "contourDensity": () => /* reexport safe */ d3_contour__WEBPACK_IMPORTED_MODULE_6__.contourDensity,
/* harmony export */   "contours": () => /* reexport safe */ d3_contour__WEBPACK_IMPORTED_MODULE_6__.contours,
/* harmony export */   "Delaunay": () => /* reexport safe */ d3_delaunay__WEBPACK_IMPORTED_MODULE_7__.Delaunay,
/* harmony export */   "Voronoi": () => /* reexport safe */ d3_delaunay__WEBPACK_IMPORTED_MODULE_7__.Voronoi,
/* harmony export */   "dispatch": () => /* reexport safe */ d3_dispatch__WEBPACK_IMPORTED_MODULE_8__.dispatch,
/* harmony export */   "drag": () => /* reexport safe */ d3_drag__WEBPACK_IMPORTED_MODULE_9__.drag,
/* harmony export */   "dragDisable": () => /* reexport safe */ d3_drag__WEBPACK_IMPORTED_MODULE_9__.dragDisable,
/* harmony export */   "dragEnable": () => /* reexport safe */ d3_drag__WEBPACK_IMPORTED_MODULE_9__.dragEnable,
/* harmony export */   "autoType": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.autoType,
/* harmony export */   "csvFormat": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.csvFormat,
/* harmony export */   "csvFormatBody": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.csvFormatBody,
/* harmony export */   "csvFormatRow": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.csvFormatRow,
/* harmony export */   "csvFormatRows": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.csvFormatRows,
/* harmony export */   "csvFormatValue": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.csvFormatValue,
/* harmony export */   "csvParse": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.csvParse,
/* harmony export */   "csvParseRows": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.csvParseRows,
/* harmony export */   "dsvFormat": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.dsvFormat,
/* harmony export */   "tsvFormat": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.tsvFormat,
/* harmony export */   "tsvFormatBody": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.tsvFormatBody,
/* harmony export */   "tsvFormatRow": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.tsvFormatRow,
/* harmony export */   "tsvFormatRows": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.tsvFormatRows,
/* harmony export */   "tsvFormatValue": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.tsvFormatValue,
/* harmony export */   "tsvParse": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.tsvParse,
/* harmony export */   "tsvParseRows": () => /* reexport safe */ d3_dsv__WEBPACK_IMPORTED_MODULE_10__.tsvParseRows,
/* harmony export */   "easeBack": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBack,
/* harmony export */   "easeBackIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBackIn,
/* harmony export */   "easeBackInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBackInOut,
/* harmony export */   "easeBackOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBackOut,
/* harmony export */   "easeBounce": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBounce,
/* harmony export */   "easeBounceIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBounceIn,
/* harmony export */   "easeBounceInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBounceInOut,
/* harmony export */   "easeBounceOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeBounceOut,
/* harmony export */   "easeCircle": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCircle,
/* harmony export */   "easeCircleIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCircleIn,
/* harmony export */   "easeCircleInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCircleInOut,
/* harmony export */   "easeCircleOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCircleOut,
/* harmony export */   "easeCubic": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCubic,
/* harmony export */   "easeCubicIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCubicIn,
/* harmony export */   "easeCubicInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCubicInOut,
/* harmony export */   "easeCubicOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeCubicOut,
/* harmony export */   "easeElastic": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeElastic,
/* harmony export */   "easeElasticIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeElasticIn,
/* harmony export */   "easeElasticInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeElasticInOut,
/* harmony export */   "easeElasticOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeElasticOut,
/* harmony export */   "easeExp": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeExp,
/* harmony export */   "easeExpIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeExpIn,
/* harmony export */   "easeExpInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeExpInOut,
/* harmony export */   "easeExpOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeExpOut,
/* harmony export */   "easeLinear": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeLinear,
/* harmony export */   "easePoly": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easePoly,
/* harmony export */   "easePolyIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easePolyIn,
/* harmony export */   "easePolyInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easePolyInOut,
/* harmony export */   "easePolyOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easePolyOut,
/* harmony export */   "easeQuad": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeQuad,
/* harmony export */   "easeQuadIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeQuadIn,
/* harmony export */   "easeQuadInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeQuadInOut,
/* harmony export */   "easeQuadOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeQuadOut,
/* harmony export */   "easeSin": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeSin,
/* harmony export */   "easeSinIn": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeSinIn,
/* harmony export */   "easeSinInOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeSinInOut,
/* harmony export */   "easeSinOut": () => /* reexport safe */ d3_ease__WEBPACK_IMPORTED_MODULE_11__.easeSinOut,
/* harmony export */   "blob": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.blob,
/* harmony export */   "buffer": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.buffer,
/* harmony export */   "csv": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.csv,
/* harmony export */   "dsv": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.dsv,
/* harmony export */   "html": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.html,
/* harmony export */   "image": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.image,
/* harmony export */   "json": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.json,
/* harmony export */   "svg": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.svg,
/* harmony export */   "text": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.text,
/* harmony export */   "tsv": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.tsv,
/* harmony export */   "xml": () => /* reexport safe */ d3_fetch__WEBPACK_IMPORTED_MODULE_12__.xml,
/* harmony export */   "forceCenter": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceCenter,
/* harmony export */   "forceCollide": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceCollide,
/* harmony export */   "forceLink": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceLink,
/* harmony export */   "forceManyBody": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceManyBody,
/* harmony export */   "forceRadial": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceRadial,
/* harmony export */   "forceSimulation": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceSimulation,
/* harmony export */   "forceX": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceX,
/* harmony export */   "forceY": () => /* reexport safe */ d3_force__WEBPACK_IMPORTED_MODULE_13__.forceY,
/* harmony export */   "FormatSpecifier": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.FormatSpecifier,
/* harmony export */   "format": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.format,
/* harmony export */   "formatDefaultLocale": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.formatDefaultLocale,
/* harmony export */   "formatLocale": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.formatLocale,
/* harmony export */   "formatPrefix": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.formatPrefix,
/* harmony export */   "formatSpecifier": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.formatSpecifier,
/* harmony export */   "precisionFixed": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.precisionFixed,
/* harmony export */   "precisionPrefix": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.precisionPrefix,
/* harmony export */   "precisionRound": () => /* reexport safe */ d3_format__WEBPACK_IMPORTED_MODULE_14__.precisionRound,
/* harmony export */   "geoAlbers": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoAlbers,
/* harmony export */   "geoAlbersUsa": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoAlbersUsa,
/* harmony export */   "geoArea": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoArea,
/* harmony export */   "geoAzimuthalEqualArea": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoAzimuthalEqualArea,
/* harmony export */   "geoAzimuthalEqualAreaRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoAzimuthalEqualAreaRaw,
/* harmony export */   "geoAzimuthalEquidistant": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoAzimuthalEquidistant,
/* harmony export */   "geoAzimuthalEquidistantRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoAzimuthalEquidistantRaw,
/* harmony export */   "geoBounds": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoBounds,
/* harmony export */   "geoCentroid": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoCentroid,
/* harmony export */   "geoCircle": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoCircle,
/* harmony export */   "geoClipAntimeridian": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoClipAntimeridian,
/* harmony export */   "geoClipCircle": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoClipCircle,
/* harmony export */   "geoClipExtent": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoClipExtent,
/* harmony export */   "geoClipRectangle": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoClipRectangle,
/* harmony export */   "geoConicConformal": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoConicConformal,
/* harmony export */   "geoConicConformalRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoConicConformalRaw,
/* harmony export */   "geoConicEqualArea": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoConicEqualArea,
/* harmony export */   "geoConicEqualAreaRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoConicEqualAreaRaw,
/* harmony export */   "geoConicEquidistant": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoConicEquidistant,
/* harmony export */   "geoConicEquidistantRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoConicEquidistantRaw,
/* harmony export */   "geoContains": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoContains,
/* harmony export */   "geoDistance": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoDistance,
/* harmony export */   "geoEqualEarth": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoEqualEarth,
/* harmony export */   "geoEqualEarthRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoEqualEarthRaw,
/* harmony export */   "geoEquirectangular": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoEquirectangular,
/* harmony export */   "geoEquirectangularRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoEquirectangularRaw,
/* harmony export */   "geoGnomonic": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoGnomonic,
/* harmony export */   "geoGnomonicRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoGnomonicRaw,
/* harmony export */   "geoGraticule": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoGraticule,
/* harmony export */   "geoGraticule10": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoGraticule10,
/* harmony export */   "geoIdentity": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoIdentity,
/* harmony export */   "geoInterpolate": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoInterpolate,
/* harmony export */   "geoLength": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoLength,
/* harmony export */   "geoMercator": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoMercator,
/* harmony export */   "geoMercatorRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoMercatorRaw,
/* harmony export */   "geoNaturalEarth1": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoNaturalEarth1,
/* harmony export */   "geoNaturalEarth1Raw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoNaturalEarth1Raw,
/* harmony export */   "geoOrthographic": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoOrthographic,
/* harmony export */   "geoOrthographicRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoOrthographicRaw,
/* harmony export */   "geoPath": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoPath,
/* harmony export */   "geoProjection": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoProjection,
/* harmony export */   "geoProjectionMutator": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoProjectionMutator,
/* harmony export */   "geoRotation": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoRotation,
/* harmony export */   "geoStereographic": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoStereographic,
/* harmony export */   "geoStereographicRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoStereographicRaw,
/* harmony export */   "geoStream": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoStream,
/* harmony export */   "geoTransform": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoTransform,
/* harmony export */   "geoTransverseMercator": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoTransverseMercator,
/* harmony export */   "geoTransverseMercatorRaw": () => /* reexport safe */ d3_geo__WEBPACK_IMPORTED_MODULE_15__.geoTransverseMercatorRaw,
/* harmony export */   "cluster": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.cluster,
/* harmony export */   "hierarchy": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.hierarchy,
/* harmony export */   "pack": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.pack,
/* harmony export */   "packEnclose": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.packEnclose,
/* harmony export */   "packSiblings": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.packSiblings,
/* harmony export */   "partition": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.partition,
/* harmony export */   "stratify": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.stratify,
/* harmony export */   "tree": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.tree,
/* harmony export */   "treemap": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.treemap,
/* harmony export */   "treemapBinary": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.treemapBinary,
/* harmony export */   "treemapDice": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.treemapDice,
/* harmony export */   "treemapResquarify": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.treemapResquarify,
/* harmony export */   "treemapSlice": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.treemapSlice,
/* harmony export */   "treemapSliceDice": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.treemapSliceDice,
/* harmony export */   "treemapSquarify": () => /* reexport safe */ d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__.treemapSquarify,
/* harmony export */   "interpolate": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolate,
/* harmony export */   "interpolateArray": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateArray,
/* harmony export */   "interpolateBasis": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateBasis,
/* harmony export */   "interpolateBasisClosed": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateBasisClosed,
/* harmony export */   "interpolateCubehelix": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateCubehelix,
/* harmony export */   "interpolateCubehelixLong": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateCubehelixLong,
/* harmony export */   "interpolateDate": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateDate,
/* harmony export */   "interpolateDiscrete": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateDiscrete,
/* harmony export */   "interpolateHcl": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateHcl,
/* harmony export */   "interpolateHclLong": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateHclLong,
/* harmony export */   "interpolateHsl": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateHsl,
/* harmony export */   "interpolateHslLong": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateHslLong,
/* harmony export */   "interpolateHue": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateHue,
/* harmony export */   "interpolateLab": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateLab,
/* harmony export */   "interpolateNumber": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateNumber,
/* harmony export */   "interpolateNumberArray": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateNumberArray,
/* harmony export */   "interpolateObject": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateObject,
/* harmony export */   "interpolateRgb": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateRgb,
/* harmony export */   "interpolateRgbBasis": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateRgbBasis,
/* harmony export */   "interpolateRgbBasisClosed": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateRgbBasisClosed,
/* harmony export */   "interpolateRound": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateRound,
/* harmony export */   "interpolateString": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateString,
/* harmony export */   "interpolateTransformCss": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateTransformCss,
/* harmony export */   "interpolateTransformSvg": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateTransformSvg,
/* harmony export */   "interpolateZoom": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.interpolateZoom,
/* harmony export */   "piecewise": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.piecewise,
/* harmony export */   "quantize": () => /* reexport safe */ d3_interpolate__WEBPACK_IMPORTED_MODULE_17__.quantize,
/* harmony export */   "path": () => /* reexport safe */ d3_path__WEBPACK_IMPORTED_MODULE_18__.path,
/* harmony export */   "polygonArea": () => /* reexport safe */ d3_polygon__WEBPACK_IMPORTED_MODULE_19__.polygonArea,
/* harmony export */   "polygonCentroid": () => /* reexport safe */ d3_polygon__WEBPACK_IMPORTED_MODULE_19__.polygonCentroid,
/* harmony export */   "polygonContains": () => /* reexport safe */ d3_polygon__WEBPACK_IMPORTED_MODULE_19__.polygonContains,
/* harmony export */   "polygonHull": () => /* reexport safe */ d3_polygon__WEBPACK_IMPORTED_MODULE_19__.polygonHull,
/* harmony export */   "polygonLength": () => /* reexport safe */ d3_polygon__WEBPACK_IMPORTED_MODULE_19__.polygonLength,
/* harmony export */   "quadtree": () => /* reexport safe */ d3_quadtree__WEBPACK_IMPORTED_MODULE_20__.quadtree,
/* harmony export */   "randomBates": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomBates,
/* harmony export */   "randomBernoulli": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomBernoulli,
/* harmony export */   "randomBeta": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomBeta,
/* harmony export */   "randomBinomial": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomBinomial,
/* harmony export */   "randomCauchy": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomCauchy,
/* harmony export */   "randomExponential": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomExponential,
/* harmony export */   "randomGamma": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomGamma,
/* harmony export */   "randomGeometric": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomGeometric,
/* harmony export */   "randomInt": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomInt,
/* harmony export */   "randomIrwinHall": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomIrwinHall,
/* harmony export */   "randomLcg": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomLcg,
/* harmony export */   "randomLogNormal": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomLogNormal,
/* harmony export */   "randomLogistic": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomLogistic,
/* harmony export */   "randomNormal": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomNormal,
/* harmony export */   "randomPareto": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomPareto,
/* harmony export */   "randomPoisson": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomPoisson,
/* harmony export */   "randomUniform": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomUniform,
/* harmony export */   "randomWeibull": () => /* reexport safe */ d3_random__WEBPACK_IMPORTED_MODULE_21__.randomWeibull,
/* harmony export */   "scaleBand": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleBand,
/* harmony export */   "scaleDiverging": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleDiverging,
/* harmony export */   "scaleDivergingLog": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleDivergingLog,
/* harmony export */   "scaleDivergingPow": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleDivergingPow,
/* harmony export */   "scaleDivergingSqrt": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleDivergingSqrt,
/* harmony export */   "scaleDivergingSymlog": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleDivergingSymlog,
/* harmony export */   "scaleIdentity": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleIdentity,
/* harmony export */   "scaleImplicit": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleImplicit,
/* harmony export */   "scaleLinear": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleLinear,
/* harmony export */   "scaleLog": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleLog,
/* harmony export */   "scaleOrdinal": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleOrdinal,
/* harmony export */   "scalePoint": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scalePoint,
/* harmony export */   "scalePow": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scalePow,
/* harmony export */   "scaleQuantile": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleQuantile,
/* harmony export */   "scaleQuantize": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleQuantize,
/* harmony export */   "scaleRadial": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleRadial,
/* harmony export */   "scaleSequential": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSequential,
/* harmony export */   "scaleSequentialLog": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSequentialLog,
/* harmony export */   "scaleSequentialPow": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSequentialPow,
/* harmony export */   "scaleSequentialQuantile": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSequentialQuantile,
/* harmony export */   "scaleSequentialSqrt": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSequentialSqrt,
/* harmony export */   "scaleSequentialSymlog": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSequentialSymlog,
/* harmony export */   "scaleSqrt": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSqrt,
/* harmony export */   "scaleSymlog": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleSymlog,
/* harmony export */   "scaleThreshold": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleThreshold,
/* harmony export */   "scaleTime": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleTime,
/* harmony export */   "scaleUtc": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.scaleUtc,
/* harmony export */   "tickFormat": () => /* reexport safe */ d3_scale__WEBPACK_IMPORTED_MODULE_22__.tickFormat,
/* harmony export */   "interpolateBlues": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateBlues,
/* harmony export */   "interpolateBrBG": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateBrBG,
/* harmony export */   "interpolateBuGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateBuGn,
/* harmony export */   "interpolateBuPu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateBuPu,
/* harmony export */   "interpolateCividis": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateCividis,
/* harmony export */   "interpolateCool": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateCool,
/* harmony export */   "interpolateCubehelixDefault": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateCubehelixDefault,
/* harmony export */   "interpolateGnBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateGnBu,
/* harmony export */   "interpolateGreens": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateGreens,
/* harmony export */   "interpolateGreys": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateGreys,
/* harmony export */   "interpolateInferno": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateInferno,
/* harmony export */   "interpolateMagma": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateMagma,
/* harmony export */   "interpolateOrRd": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateOrRd,
/* harmony export */   "interpolateOranges": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateOranges,
/* harmony export */   "interpolatePRGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePRGn,
/* harmony export */   "interpolatePiYG": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePiYG,
/* harmony export */   "interpolatePlasma": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePlasma,
/* harmony export */   "interpolatePuBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePuBu,
/* harmony export */   "interpolatePuBuGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePuBuGn,
/* harmony export */   "interpolatePuOr": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePuOr,
/* harmony export */   "interpolatePuRd": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePuRd,
/* harmony export */   "interpolatePurples": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolatePurples,
/* harmony export */   "interpolateRainbow": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateRainbow,
/* harmony export */   "interpolateRdBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateRdBu,
/* harmony export */   "interpolateRdGy": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateRdGy,
/* harmony export */   "interpolateRdPu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateRdPu,
/* harmony export */   "interpolateRdYlBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateRdYlBu,
/* harmony export */   "interpolateRdYlGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateRdYlGn,
/* harmony export */   "interpolateReds": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateReds,
/* harmony export */   "interpolateSinebow": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateSinebow,
/* harmony export */   "interpolateSpectral": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateSpectral,
/* harmony export */   "interpolateTurbo": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateTurbo,
/* harmony export */   "interpolateViridis": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateViridis,
/* harmony export */   "interpolateWarm": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateWarm,
/* harmony export */   "interpolateYlGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateYlGn,
/* harmony export */   "interpolateYlGnBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateYlGnBu,
/* harmony export */   "interpolateYlOrBr": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateYlOrBr,
/* harmony export */   "interpolateYlOrRd": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.interpolateYlOrRd,
/* harmony export */   "schemeAccent": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeAccent,
/* harmony export */   "schemeBlues": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeBlues,
/* harmony export */   "schemeBrBG": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeBrBG,
/* harmony export */   "schemeBuGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeBuGn,
/* harmony export */   "schemeBuPu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeBuPu,
/* harmony export */   "schemeCategory10": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeCategory10,
/* harmony export */   "schemeDark2": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeDark2,
/* harmony export */   "schemeGnBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeGnBu,
/* harmony export */   "schemeGreens": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeGreens,
/* harmony export */   "schemeGreys": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeGreys,
/* harmony export */   "schemeOrRd": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeOrRd,
/* harmony export */   "schemeOranges": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeOranges,
/* harmony export */   "schemePRGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePRGn,
/* harmony export */   "schemePaired": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePaired,
/* harmony export */   "schemePastel1": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePastel1,
/* harmony export */   "schemePastel2": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePastel2,
/* harmony export */   "schemePiYG": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePiYG,
/* harmony export */   "schemePuBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePuBu,
/* harmony export */   "schemePuBuGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePuBuGn,
/* harmony export */   "schemePuOr": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePuOr,
/* harmony export */   "schemePuRd": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePuRd,
/* harmony export */   "schemePurples": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemePurples,
/* harmony export */   "schemeRdBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeRdBu,
/* harmony export */   "schemeRdGy": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeRdGy,
/* harmony export */   "schemeRdPu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeRdPu,
/* harmony export */   "schemeRdYlBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeRdYlBu,
/* harmony export */   "schemeRdYlGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeRdYlGn,
/* harmony export */   "schemeReds": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeReds,
/* harmony export */   "schemeSet1": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeSet1,
/* harmony export */   "schemeSet2": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeSet2,
/* harmony export */   "schemeSet3": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeSet3,
/* harmony export */   "schemeSpectral": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeSpectral,
/* harmony export */   "schemeTableau10": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeTableau10,
/* harmony export */   "schemeYlGn": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeYlGn,
/* harmony export */   "schemeYlGnBu": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeYlGnBu,
/* harmony export */   "schemeYlOrBr": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeYlOrBr,
/* harmony export */   "schemeYlOrRd": () => /* reexport safe */ d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__.schemeYlOrRd,
/* harmony export */   "create": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.create,
/* harmony export */   "creator": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.creator,
/* harmony export */   "local": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.local,
/* harmony export */   "matcher": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.matcher,
/* harmony export */   "namespace": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.namespace,
/* harmony export */   "namespaces": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.namespaces,
/* harmony export */   "pointer": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.pointer,
/* harmony export */   "pointers": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.pointers,
/* harmony export */   "select": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.select,
/* harmony export */   "selectAll": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.selectAll,
/* harmony export */   "selection": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.selection,
/* harmony export */   "selector": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.selector,
/* harmony export */   "selectorAll": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.selectorAll,
/* harmony export */   "style": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.style,
/* harmony export */   "window": () => /* reexport safe */ d3_selection__WEBPACK_IMPORTED_MODULE_24__.window,
/* harmony export */   "arc": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.arc,
/* harmony export */   "area": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.area,
/* harmony export */   "areaRadial": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.areaRadial,
/* harmony export */   "curveBasis": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveBasis,
/* harmony export */   "curveBasisClosed": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveBasisClosed,
/* harmony export */   "curveBasisOpen": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveBasisOpen,
/* harmony export */   "curveBundle": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveBundle,
/* harmony export */   "curveCardinal": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveCardinal,
/* harmony export */   "curveCardinalClosed": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveCardinalClosed,
/* harmony export */   "curveCardinalOpen": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveCardinalOpen,
/* harmony export */   "curveCatmullRom": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveCatmullRom,
/* harmony export */   "curveCatmullRomClosed": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveCatmullRomClosed,
/* harmony export */   "curveCatmullRomOpen": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveCatmullRomOpen,
/* harmony export */   "curveLinear": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveLinear,
/* harmony export */   "curveLinearClosed": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveLinearClosed,
/* harmony export */   "curveMonotoneX": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveMonotoneX,
/* harmony export */   "curveMonotoneY": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveMonotoneY,
/* harmony export */   "curveNatural": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveNatural,
/* harmony export */   "curveStep": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveStep,
/* harmony export */   "curveStepAfter": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveStepAfter,
/* harmony export */   "curveStepBefore": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.curveStepBefore,
/* harmony export */   "line": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.line,
/* harmony export */   "lineRadial": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.lineRadial,
/* harmony export */   "linkHorizontal": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.linkHorizontal,
/* harmony export */   "linkRadial": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.linkRadial,
/* harmony export */   "linkVertical": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.linkVertical,
/* harmony export */   "pie": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.pie,
/* harmony export */   "pointRadial": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.pointRadial,
/* harmony export */   "radialArea": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.radialArea,
/* harmony export */   "radialLine": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.radialLine,
/* harmony export */   "stack": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stack,
/* harmony export */   "stackOffsetDiverging": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOffsetDiverging,
/* harmony export */   "stackOffsetExpand": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOffsetExpand,
/* harmony export */   "stackOffsetNone": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOffsetNone,
/* harmony export */   "stackOffsetSilhouette": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOffsetSilhouette,
/* harmony export */   "stackOffsetWiggle": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOffsetWiggle,
/* harmony export */   "stackOrderAppearance": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOrderAppearance,
/* harmony export */   "stackOrderAscending": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOrderAscending,
/* harmony export */   "stackOrderDescending": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOrderDescending,
/* harmony export */   "stackOrderInsideOut": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOrderInsideOut,
/* harmony export */   "stackOrderNone": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOrderNone,
/* harmony export */   "stackOrderReverse": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.stackOrderReverse,
/* harmony export */   "symbol": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbol,
/* harmony export */   "symbolCircle": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbolCircle,
/* harmony export */   "symbolCross": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbolCross,
/* harmony export */   "symbolDiamond": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbolDiamond,
/* harmony export */   "symbolSquare": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbolSquare,
/* harmony export */   "symbolStar": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbolStar,
/* harmony export */   "symbolTriangle": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbolTriangle,
/* harmony export */   "symbolWye": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbolWye,
/* harmony export */   "symbols": () => /* reexport safe */ d3_shape__WEBPACK_IMPORTED_MODULE_25__.symbols,
/* harmony export */   "timeDay": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeDay,
/* harmony export */   "timeDays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeDays,
/* harmony export */   "timeFriday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeFriday,
/* harmony export */   "timeFridays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeFridays,
/* harmony export */   "timeHour": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeHour,
/* harmony export */   "timeHours": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeHours,
/* harmony export */   "timeInterval": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeInterval,
/* harmony export */   "timeMillisecond": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMillisecond,
/* harmony export */   "timeMilliseconds": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMilliseconds,
/* harmony export */   "timeMinute": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMinute,
/* harmony export */   "timeMinutes": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMinutes,
/* harmony export */   "timeMonday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMonday,
/* harmony export */   "timeMondays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMondays,
/* harmony export */   "timeMonth": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMonth,
/* harmony export */   "timeMonths": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeMonths,
/* harmony export */   "timeSaturday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeSaturday,
/* harmony export */   "timeSaturdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeSaturdays,
/* harmony export */   "timeSecond": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeSecond,
/* harmony export */   "timeSeconds": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeSeconds,
/* harmony export */   "timeSunday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeSunday,
/* harmony export */   "timeSundays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeSundays,
/* harmony export */   "timeThursday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeThursday,
/* harmony export */   "timeThursdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeThursdays,
/* harmony export */   "timeTuesday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeTuesday,
/* harmony export */   "timeTuesdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeTuesdays,
/* harmony export */   "timeWednesday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeWednesday,
/* harmony export */   "timeWednesdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeWednesdays,
/* harmony export */   "timeWeek": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeWeek,
/* harmony export */   "timeWeeks": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeWeeks,
/* harmony export */   "timeYear": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeYear,
/* harmony export */   "timeYears": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.timeYears,
/* harmony export */   "utcDay": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcDay,
/* harmony export */   "utcDays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcDays,
/* harmony export */   "utcFriday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcFriday,
/* harmony export */   "utcFridays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcFridays,
/* harmony export */   "utcHour": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcHour,
/* harmony export */   "utcHours": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcHours,
/* harmony export */   "utcMillisecond": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMillisecond,
/* harmony export */   "utcMilliseconds": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMilliseconds,
/* harmony export */   "utcMinute": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMinute,
/* harmony export */   "utcMinutes": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMinutes,
/* harmony export */   "utcMonday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMonday,
/* harmony export */   "utcMondays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMondays,
/* harmony export */   "utcMonth": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMonth,
/* harmony export */   "utcMonths": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcMonths,
/* harmony export */   "utcSaturday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcSaturday,
/* harmony export */   "utcSaturdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcSaturdays,
/* harmony export */   "utcSecond": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcSecond,
/* harmony export */   "utcSeconds": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcSeconds,
/* harmony export */   "utcSunday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcSunday,
/* harmony export */   "utcSundays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcSundays,
/* harmony export */   "utcThursday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcThursday,
/* harmony export */   "utcThursdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcThursdays,
/* harmony export */   "utcTuesday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcTuesday,
/* harmony export */   "utcTuesdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcTuesdays,
/* harmony export */   "utcWednesday": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcWednesday,
/* harmony export */   "utcWednesdays": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcWednesdays,
/* harmony export */   "utcWeek": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcWeek,
/* harmony export */   "utcWeeks": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcWeeks,
/* harmony export */   "utcYear": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcYear,
/* harmony export */   "utcYears": () => /* reexport safe */ d3_time__WEBPACK_IMPORTED_MODULE_26__.utcYears,
/* harmony export */   "isoFormat": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.isoFormat,
/* harmony export */   "isoParse": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.isoParse,
/* harmony export */   "timeFormat": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.timeFormat,
/* harmony export */   "timeFormatDefaultLocale": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.timeFormatDefaultLocale,
/* harmony export */   "timeFormatLocale": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.timeFormatLocale,
/* harmony export */   "timeParse": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.timeParse,
/* harmony export */   "utcFormat": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.utcFormat,
/* harmony export */   "utcParse": () => /* reexport safe */ d3_time_format__WEBPACK_IMPORTED_MODULE_27__.utcParse,
/* harmony export */   "interval": () => /* reexport safe */ d3_timer__WEBPACK_IMPORTED_MODULE_28__.interval,
/* harmony export */   "now": () => /* reexport safe */ d3_timer__WEBPACK_IMPORTED_MODULE_28__.now,
/* harmony export */   "timeout": () => /* reexport safe */ d3_timer__WEBPACK_IMPORTED_MODULE_28__.timeout,
/* harmony export */   "timer": () => /* reexport safe */ d3_timer__WEBPACK_IMPORTED_MODULE_28__.timer,
/* harmony export */   "timerFlush": () => /* reexport safe */ d3_timer__WEBPACK_IMPORTED_MODULE_28__.timerFlush,
/* harmony export */   "active": () => /* reexport safe */ d3_transition__WEBPACK_IMPORTED_MODULE_29__.active,
/* harmony export */   "interrupt": () => /* reexport safe */ d3_transition__WEBPACK_IMPORTED_MODULE_29__.interrupt,
/* harmony export */   "transition": () => /* reexport safe */ d3_transition__WEBPACK_IMPORTED_MODULE_29__.transition,
/* harmony export */   "zoom": () => /* reexport safe */ d3_zoom__WEBPACK_IMPORTED_MODULE_30__.zoom,
/* harmony export */   "zoomIdentity": () => /* reexport safe */ d3_zoom__WEBPACK_IMPORTED_MODULE_30__.zoomIdentity,
/* harmony export */   "zoomTransform": () => /* reexport safe */ d3_zoom__WEBPACK_IMPORTED_MODULE_30__.zoomTransform
/* harmony export */ });
/* harmony import */ var _dist_package_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/package.js */ "./node_modules/d3/dist/package.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-axis */ "./node_modules/d3-axis/src/index.js");
/* harmony import */ var d3_brush__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-brush */ "./node_modules/d3-brush/src/index.js");
/* harmony import */ var d3_chord__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-chord */ "./node_modules/d3-chord/src/index.js");
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_contour__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-contour */ "./node_modules/d3-contour/src/index.js");
/* harmony import */ var d3_delaunay__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-delaunay */ "./node_modules/d3-delaunay/src/index.js");
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-dispatch */ "./node_modules/d3-dispatch/src/index.js");
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! d3-drag */ "./node_modules/d3-drag/src/index.js");
/* harmony import */ var d3_dsv__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! d3-dsv */ "./node_modules/d3-dsv/src/index.js");
/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! d3-ease */ "./node_modules/d3-ease/src/index.js");
/* harmony import */ var d3_fetch__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! d3-fetch */ "./node_modules/d3-fetch/src/index.js");
/* harmony import */ var d3_force__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! d3-force */ "./node_modules/d3-force/src/index.js");
/* harmony import */ var d3_format__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! d3-format */ "./node_modules/d3-format/src/index.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! d3-hierarchy */ "./node_modules/d3-hierarchy/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");
/* harmony import */ var d3_path__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! d3-path */ "./node_modules/d3-path/src/index.js");
/* harmony import */ var d3_polygon__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! d3-polygon */ "./node_modules/d3-polygon/src/index.js");
/* harmony import */ var d3_quadtree__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! d3-quadtree */ "./node_modules/d3-quadtree/src/index.js");
/* harmony import */ var d3_random__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! d3-random */ "./node_modules/d3-random/src/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! d3-scale */ "./node_modules/d3-scale/src/index.js");
/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/index.js");
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! d3-selection */ "./node_modules/d3-selection/src/index.js");
/* harmony import */ var d3_shape__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! d3-shape */ "./node_modules/d3-shape/src/index.js");
/* harmony import */ var d3_time__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! d3-time */ "./node_modules/d3-time/src/index.js");
/* harmony import */ var d3_time_format__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! d3-time-format */ "./node_modules/d3-time-format/src/index.js");
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! d3-timer */ "./node_modules/d3-timer/src/index.js");
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! d3-transition */ "./node_modules/d3-transition/src/index.js");
/* harmony import */ var d3_zoom__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! d3-zoom */ "./node_modules/d3-zoom/src/index.js");

































/***/ }),

/***/ "./node_modules/delaunator/index.js":
/*!******************************************!*\
  !*** ./node_modules/delaunator/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => /* binding */ Delaunator
/* harmony export */ });

const EPSILON = Math.pow(2, -52);
const EDGE_STACK = new Uint32Array(512);

class Delaunator {

    static from(points, getX = defaultGetX, getY = defaultGetY) {
        const n = points.length;
        const coords = new Float64Array(n * 2);

        for (let i = 0; i < n; i++) {
            const p = points[i];
            coords[2 * i] = getX(p);
            coords[2 * i + 1] = getY(p);
        }

        return new Delaunator(coords);
    }

    constructor(coords) {
        const n = coords.length >> 1;
        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');

        this.coords = coords;

        // arrays that will store the triangulation graph
        const maxTriangles = Math.max(2 * n - 5, 0);
        this._triangles = new Uint32Array(maxTriangles * 3);
        this._halfedges = new Int32Array(maxTriangles * 3);

        // temporary arrays for tracking the edges of the advancing convex hull
        this._hashSize = Math.ceil(Math.sqrt(n));
        this._hullPrev = new Uint32Array(n); // edge to prev edge
        this._hullNext = new Uint32Array(n); // edge to next edge
        this._hullTri = new Uint32Array(n); // edge to adjacent triangle
        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash

        // temporary arrays for sorting points
        this._ids = new Uint32Array(n);
        this._dists = new Float64Array(n);

        this.update();
    }

    update() {
        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;
        const n = coords.length >> 1;

        // populate an array of point indices; calculate input data bbox
        let minX = Infinity;
        let minY = Infinity;
        let maxX = -Infinity;
        let maxY = -Infinity;

        for (let i = 0; i < n; i++) {
            const x = coords[2 * i];
            const y = coords[2 * i + 1];
            if (x < minX) minX = x;
            if (y < minY) minY = y;
            if (x > maxX) maxX = x;
            if (y > maxY) maxY = y;
            this._ids[i] = i;
        }
        const cx = (minX + maxX) / 2;
        const cy = (minY + maxY) / 2;

        let minDist = Infinity;
        let i0, i1, i2;

        // pick a seed point close to the center
        for (let i = 0; i < n; i++) {
            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist) {
                i0 = i;
                minDist = d;
            }
        }
        const i0x = coords[2 * i0];
        const i0y = coords[2 * i0 + 1];

        minDist = Infinity;

        // find the point closest to the seed
        for (let i = 0; i < n; i++) {
            if (i === i0) continue;
            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);
            if (d < minDist && d > 0) {
                i1 = i;
                minDist = d;
            }
        }
        let i1x = coords[2 * i1];
        let i1y = coords[2 * i1 + 1];

        let minRadius = Infinity;

        // find the third point which forms the smallest circumcircle with the first two
        for (let i = 0; i < n; i++) {
            if (i === i0 || i === i1) continue;
            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);
            if (r < minRadius) {
                i2 = i;
                minRadius = r;
            }
        }
        let i2x = coords[2 * i2];
        let i2y = coords[2 * i2 + 1];

        if (minRadius === Infinity) {
            // order collinear points by dx (or dy if all x are identical)
            // and return the list as a hull
            for (let i = 0; i < n; i++) {
                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);
            }
            quicksort(this._ids, this._dists, 0, n - 1);
            const hull = new Uint32Array(n);
            let j = 0;
            for (let i = 0, d0 = -Infinity; i < n; i++) {
                const id = this._ids[i];
                if (this._dists[id] > d0) {
                    hull[j++] = id;
                    d0 = this._dists[id];
                }
            }
            this.hull = hull.subarray(0, j);
            this.triangles = new Uint32Array(0);
            this.halfedges = new Uint32Array(0);
            return;
        }

        // swap the order of the seed points for counter-clockwise orientation
        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {
            const i = i1;
            const x = i1x;
            const y = i1y;
            i1 = i2;
            i1x = i2x;
            i1y = i2y;
            i2 = i;
            i2x = x;
            i2y = y;
        }

        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
        this._cx = center.x;
        this._cy = center.y;

        for (let i = 0; i < n; i++) {
            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);
        }

        // sort the points by distance from the seed triangle circumcenter
        quicksort(this._ids, this._dists, 0, n - 1);

        // set up the seed triangle as the starting hull
        this._hullStart = i0;
        let hullSize = 3;

        hullNext[i0] = hullPrev[i2] = i1;
        hullNext[i1] = hullPrev[i0] = i2;
        hullNext[i2] = hullPrev[i1] = i0;

        hullTri[i0] = 0;
        hullTri[i1] = 1;
        hullTri[i2] = 2;

        hullHash.fill(-1);
        hullHash[this._hashKey(i0x, i0y)] = i0;
        hullHash[this._hashKey(i1x, i1y)] = i1;
        hullHash[this._hashKey(i2x, i2y)] = i2;

        this.trianglesLen = 0;
        this._addTriangle(i0, i1, i2, -1, -1, -1);

        for (let k = 0, xp, yp; k < this._ids.length; k++) {
            const i = this._ids[k];
            const x = coords[2 * i];
            const y = coords[2 * i + 1];

            // skip near-duplicate points
            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;
            xp = x;
            yp = y;

            // skip seed triangle points
            if (i === i0 || i === i1 || i === i2) continue;

            // find a visible edge on the convex hull using edge hash
            let start = 0;
            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {
                start = hullHash[(key + j) % this._hashSize];
                if (start !== -1 && start !== hullNext[start]) break;
            }

            start = hullPrev[start];
            let e = start, q;
            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {
                e = q;
                if (e === start) {
                    e = -1;
                    break;
                }
            }
            if (e === -1) continue; // likely a near-duplicate point; skip it

            // add the first triangle from the point
            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);

            // recursively flip triangles from the point until they satisfy the Delaunay condition
            hullTri[i] = this._legalize(t + 2);
            hullTri[e] = t; // keep track of boundary triangles on the hull
            hullSize++;

            // walk forward through the hull, adding more triangles and flipping recursively
            let n = hullNext[e];
            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {
                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);
                hullTri[i] = this._legalize(t + 2);
                hullNext[n] = n; // mark as removed
                hullSize--;
                n = q;
            }

            // walk backward from the other side, adding more triangles and flipping
            if (e === start) {
                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {
                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);
                    this._legalize(t + 2);
                    hullTri[q] = t;
                    hullNext[e] = e; // mark as removed
                    hullSize--;
                    e = q;
                }
            }

            // update the hull indices
            this._hullStart = hullPrev[i] = e;
            hullNext[e] = hullPrev[n] = i;
            hullNext[i] = n;

            // save the two new edges in the hash table
            hullHash[this._hashKey(x, y)] = i;
            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;
        }

        this.hull = new Uint32Array(hullSize);
        for (let i = 0, e = this._hullStart; i < hullSize; i++) {
            this.hull[i] = e;
            e = hullNext[e];
        }

        // trim typed triangle mesh arrays
        this.triangles = this._triangles.subarray(0, this.trianglesLen);
        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
    }

    _hashKey(x, y) {
        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;
    }

    _legalize(a) {
        const {_triangles: triangles, _halfedges: halfedges, coords} = this;

        let i = 0;
        let ar = 0;

        // recursion eliminated with a fixed-size stack
        while (true) {
            const b = halfedges[a];

            /* if the pair of triangles doesn't satisfy the Delaunay condition
             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,
             * then do the same check/flip recursively for the new pair of triangles
             *
             *           pl                    pl
             *          /||\                  /  \
             *       al/ || \bl            al/    \a
             *        /  ||  \              /      \
             *       /  a||b  \    flip    /___ar___\
             *     p0\   ||   /p1   =>   p0\---bl---/p1
             *        \  ||  /              \      /
             *       ar\ || /br             b\    /br
             *          \||/                  \  /
             *           pr                    pr
             */
            const a0 = a - a % 3;
            ar = a0 + (a + 2) % 3;

            if (b === -1) { // convex hull edge
                if (i === 0) break;
                a = EDGE_STACK[--i];
                continue;
            }

            const b0 = b - b % 3;
            const al = a0 + (a + 1) % 3;
            const bl = b0 + (b + 2) % 3;

            const p0 = triangles[ar];
            const pr = triangles[a];
            const pl = triangles[al];
            const p1 = triangles[bl];

            const illegal = inCircle(
                coords[2 * p0], coords[2 * p0 + 1],
                coords[2 * pr], coords[2 * pr + 1],
                coords[2 * pl], coords[2 * pl + 1],
                coords[2 * p1], coords[2 * p1 + 1]);

            if (illegal) {
                triangles[a] = p1;
                triangles[b] = p0;

                const hbl = halfedges[bl];

                // edge swapped on the other side of the hull (rare); fix the halfedge reference
                if (hbl === -1) {
                    let e = this._hullStart;
                    do {
                        if (this._hullTri[e] === bl) {
                            this._hullTri[e] = a;
                            break;
                        }
                        e = this._hullPrev[e];
                    } while (e !== this._hullStart);
                }
                this._link(a, hbl);
                this._link(b, halfedges[ar]);
                this._link(ar, bl);

                const br = b0 + (b + 1) % 3;

                // don't worry about hitting the cap: it can only happen on extremely degenerate input
                if (i < EDGE_STACK.length) {
                    EDGE_STACK[i++] = br;
                }
            } else {
                if (i === 0) break;
                a = EDGE_STACK[--i];
            }
        }

        return ar;
    }

    _link(a, b) {
        this._halfedges[a] = b;
        if (b !== -1) this._halfedges[b] = a;
    }

    // add a new triangle given vertex indices and adjacent half-edge ids
    _addTriangle(i0, i1, i2, a, b, c) {
        const t = this.trianglesLen;

        this._triangles[t] = i0;
        this._triangles[t + 1] = i1;
        this._triangles[t + 2] = i2;

        this._link(t, a);
        this._link(t + 1, b);
        this._link(t + 2, c);

        this.trianglesLen += 3;

        return t;
    }
}

// monotonically increases with real angle, but doesn't need expensive trigonometry
function pseudoAngle(dx, dy) {
    const p = dx / (Math.abs(dx) + Math.abs(dy));
    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]
}

function dist(ax, ay, bx, by) {
    const dx = ax - bx;
    const dy = ay - by;
    return dx * dx + dy * dy;
}

// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check
function orientIfSure(px, py, rx, ry, qx, qy) {
    const l = (ry - py) * (qx - px);
    const r = (rx - px) * (qy - py);
    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;
}

// a more robust orientation test that's stable in a given triangle (to fix robustness issues)
function orient(rx, ry, qx, qy, px, py) {
    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||
    orientIfSure(rx, ry, qx, qy, px, py) ||
    orientIfSure(qx, qy, px, py, rx, ry);
    return sign < 0;
}

function inCircle(ax, ay, bx, by, cx, cy, px, py) {
    const dx = ax - px;
    const dy = ay - py;
    const ex = bx - px;
    const ey = by - py;
    const fx = cx - px;
    const fy = cy - py;

    const ap = dx * dx + dy * dy;
    const bp = ex * ex + ey * ey;
    const cp = fx * fx + fy * fy;

    return dx * (ey * cp - bp * fy) -
           dy * (ex * cp - bp * fx) +
           ap * (ex * fy - ey * fx) < 0;
}

function circumradius(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;

    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);

    const x = (ey * bl - dy * cl) * d;
    const y = (dx * cl - ex * bl) * d;

    return x * x + y * y;
}

function circumcenter(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;

    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d = 0.5 / (dx * ey - dy * ex);

    const x = ax + (ey * bl - dy * cl) * d;
    const y = ay + (dx * cl - ex * bl) * d;

    return {x, y};
}

function quicksort(ids, dists, left, right) {
    if (right - left <= 20) {
        for (let i = left + 1; i <= right; i++) {
            const temp = ids[i];
            const tempDist = dists[temp];
            let j = i - 1;
            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];
            ids[j + 1] = temp;
        }
    } else {
        const median = (left + right) >> 1;
        let i = left + 1;
        let j = right;
        swap(ids, median, i);
        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);
        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);
        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);

        const temp = ids[i];
        const tempDist = dists[temp];
        while (true) {
            do i++; while (dists[ids[i]] < tempDist);
            do j--; while (dists[ids[j]] > tempDist);
            if (j < i) break;
            swap(ids, i, j);
        }
        ids[left + 1] = ids[j];
        ids[j] = temp;

        if (right - i + 1 >= j - left) {
            quicksort(ids, dists, i, right);
            quicksort(ids, dists, left, j - 1);
        } else {
            quicksort(ids, dists, left, j - 1);
            quicksort(ids, dists, i, right);
        }
    }
}

function swap(arr, i, j) {
    const tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
}

function defaultGetX(p) {
    return p[0];
}
function defaultGetY(p) {
    return p[1];
}


/***/ }),

/***/ "./utils.js":
/*!******************!*\
  !*** ./utils.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "lerpPosition": () => /* binding */ lerpPosition
/* harmony export */ });
/**
 * linear interpolation from source positions to target positions
 * @param source source positions
 * @param target target positions
 * @param ratio lerp ratio, (0, 1)
 */
function lerpPosition(source, target, ratio) {
    return Array(source.length)
        .fill(undefined)
        .map((_, i) => {
            const x = source[i].x + (target[i].x - source[i].x) * ratio
            const y = source[i].y + (target[i].y - source[i].y) * ratio
            return { x, y }
        })
}

/***/ }),

/***/ "../ogdf.js/ogdf.js":
/*!**************************!*\
  !*** ../ogdf.js/ogdf.js ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var __dirname = "/";
/* module decorator */ module = __webpack_require__.nmd(module);

// We are modularizing this manually because the current modularize setting in Emscripten has some issues:
// https://github.com/kripken/emscripten/issues/5820
// In addition, When you use emcc's modularization, it still expects to export a global object called `Module`,
// which is able to be used/called before the WASM is loaded.
// The modularization below exports a promise that loads and resolves to the actual sql.js module.
// That way, this module can't be used before the WASM is finished loading.

// We are going to define a function that a user will call to start loading initializing our Sql.js library
// However, that function might be called multiple times, and on subsequent calls, we don't actually want it to instantiate a new instance of the Module
// Instead, we want to return the previously loaded module

// TODO: Make this not declare a global if used in the browser
var initOGDFPromise = undefined;

var initOGDF = function (moduleConfig) {

    if (initOGDFPromise){
      return initOGDFPromise;
    }
    // If we're here, we've never called this function before
    initOGDFPromise = new Promise((resolveModule, reject) => {

        // We are modularizing this manually because the current modularize setting in Emscripten has some issues:
        // https://github.com/kripken/emscripten/issues/5820

        // The way to affect the loading of emcc compiled modules is to create a variable called `Module` and add
        // properties to it, like `preRun`, `postRun`, etc
        // We are using that to get notified when the WASM has finished loading.
        // Only then will we return our promise

        // If they passed in a moduleConfig object, use that
        // Otherwise, initialize Module to the empty object
        var Module = typeof moduleConfig !== 'undefined' ? moduleConfig : {};

        // EMCC only allows for a single onAbort function (not an array of functions)
        // So if the user defined their own onAbort function, we remember it and call it
        var originalOnAbortFunction = Module['onAbort'];
        Module['onAbort'] = function (errorThatCausedAbort) {
            reject(new Error(errorThatCausedAbort));
            if (originalOnAbortFunction){
              originalOnAbortFunction(errorThatCausedAbort);
            }
        };

        Module['postRun'] = Module['postRun'] || [];
        Module['postRun'].push(function () {
            // When Emscripted calls postRun, this promise resolves with the built Module
            resolveModule(Module);
        });

        // There is a section of code in the emcc-generated code below that looks like this:
        // (Note that this is lowercase `module`)
        // if (typeof module !== 'undefined') {
        //     module['exports'] = Module;
        // }
        // When that runs, it's going to overwrite our own modularization export efforts in shell-post.js!
        // The only way to tell emcc not to emit it is to pass the MODULARIZE=1 or MODULARIZE_INSTANCE=1 flags,
        // but that carries with it additional unnecessary baggage/bugs we don't want either.
        // So, we have three options:
        // 1) We undefine `module`
        // 2) We remember what `module['exports']` was at the beginning of this function and we restore it later
        // 3) We write a script to remove those lines of code as part of the Make process.
        //
        // Since those are the only lines of code that care about module, we will undefine it. It's the most straightforward
        // of the options, and has the side effect of reducing emcc's efforts to modify the module if its output were to change in the future.
        // That's a nice side effect since we're handling the modularization efforts ourselves
        module = undefined;
        
        // The emcc-generated code and shell-post.js code goes below,
        // meaning that all of it runs inside of this promise. If anything throws an exception, our promise will abort
var Module=typeof Module!=="undefined"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram="./this.program";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_HAS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_HAS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";ENVIRONMENT_IS_NODE=ENVIRONMENT_HAS_NODE&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(Module["ENVIRONMENT"]){throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)")}var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+"/";var nodeFS;var nodePath;read_=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=__webpack_require__(/*! fs */ "?65c5");if(!nodePath)nodePath=__webpack_require__(/*! path */ "?0f27");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename)}return binary?ret:ret.toString()};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/")}arguments_=process["argv"].slice(2);if(true){module["exports"]=Module}process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",abort);quit_=function(status){process["exit"](status)};Module["inspect"]=function(){return"[Emscripten Module object]"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){read_=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}readBinary=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){arguments_=scriptArgs}else if(typeof arguments!="undefined"){arguments_=arguments}if(typeof quit==="function"){quit_=function(status){quit(status)}}if(typeof print!=="undefined"){if(typeof console==="undefined")console={};console.log=print;console.warn=console.error=typeof printErr!=="undefined"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1)}else{scriptDirectory=""}read_=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};setWindowTitle=function(title){document.title=title}}else{throw new Error("environment detection error")}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(!Object.getOwnPropertyDescriptor(Module,"arguments"))Object.defineProperty(Module,"arguments",{get:function(){abort("Module.arguments has been replaced with plain arguments_")}});if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(!Object.getOwnPropertyDescriptor(Module,"thisProgram"))Object.defineProperty(Module,"thisProgram",{get:function(){abort("Module.thisProgram has been replaced with plain thisProgram")}});if(Module["quit"])quit_=Module["quit"];if(!Object.getOwnPropertyDescriptor(Module,"quit"))Object.defineProperty(Module,"quit",{get:function(){abort("Module.quit has been replaced with plain quit_")}});assert(typeof Module["memoryInitializerPrefixURL"]==="undefined","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["pthreadMainPrefixURL"]==="undefined","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["cdInitializerPrefixURL"]==="undefined","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["filePackagePrefixURL"]==="undefined","Module.filePackagePrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["read"]==="undefined","Module.read option was removed (modify read_ in JS)");assert(typeof Module["readAsync"]==="undefined","Module.readAsync option was removed (modify readAsync in JS)");assert(typeof Module["readBinary"]==="undefined","Module.readBinary option was removed (modify readBinary in JS)");assert(typeof Module["setWindowTitle"]==="undefined","Module.setWindowTitle option was removed (modify setWindowTitle in JS)");if(!Object.getOwnPropertyDescriptor(Module,"read"))Object.defineProperty(Module,"read",{get:function(){abort("Module.read has been replaced with plain read_")}});if(!Object.getOwnPropertyDescriptor(Module,"readAsync"))Object.defineProperty(Module,"readAsync",{get:function(){abort("Module.readAsync has been replaced with plain readAsync")}});if(!Object.getOwnPropertyDescriptor(Module,"readBinary"))Object.defineProperty(Module,"readBinary",{get:function(){abort("Module.readBinary has been replaced with plain readBinary")}});stackSave=stackRestore=stackAlloc=function(){abort("cannot use the stack before compiled code is ready to run, and has provided stack access")};function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end>_emscripten_get_heap_size()){abort("failure to dynamicAlloc - memory growth etc. is not supported there, call malloc/sbrk directly")}HEAP32[DYNAMICTOP_PTR>>2]=end;return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0,"getNativeTypeSize invalid bits "+bits+", type "+type);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}var asm2wasmImports={"f64-rem":function(x,y){return x%y},"debugger":function(){debugger}};var functionPointers=new Array(0);var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];if(!Object.getOwnPropertyDescriptor(Module,"wasmBinary"))Object.defineProperty(Module,"wasmBinary",{get:function(){abort("Module.wasmBinary has been replaced with plain wasmBinary")}});if(typeof WebAssembly!=="object"){abort("No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead.")}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}var ALLOC_NONE=3;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[_malloc,stackAlloc,dynamicAlloc][allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return ret}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue}assert(type,"Must know what type to store in allocate!");if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type}i+=typeSize}return ret}function getMemory(size){if(!runtimeInitialized)return dynamicAlloc(size);return _malloc(size)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str="";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{if((u0&248)!=240)warnOnce("Invalid UTF-8 leading byte 0x"+u0.toString(16)+" encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!");u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;if(u>=2097152)warnOnce("Invalid Unicode code point 0x"+u.toString(16)+" encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).");outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function writeArrayToMemory(array,buffer){assert(array.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)");HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===str.charCodeAt(i)&255);HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var PAGE_SIZE=16384;var WASM_PAGE_SIZE=65536;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STACK_BASE=50272,STACK_MAX=5293152,DYNAMIC_BASE=5293152,DYNAMICTOP_PTR=50240;assert(STACK_BASE%16===0,"stack must start aligned");assert(DYNAMIC_BASE%16===0,"heap must start aligned");var TOTAL_STACK=5242880;if(Module["TOTAL_STACK"])assert(TOTAL_STACK===Module["TOTAL_STACK"],"the stack size can no longer be determined at runtime");var INITIAL_TOTAL_MEMORY=Module["TOTAL_MEMORY"]||335544320;if(!Object.getOwnPropertyDescriptor(Module,"TOTAL_MEMORY"))Object.defineProperty(Module,"TOTAL_MEMORY",{get:function(){abort("Module.TOTAL_MEMORY has been replaced with plain INITIAL_TOTAL_MEMORY")}});assert(INITIAL_TOTAL_MEMORY>=TOTAL_STACK,"TOTAL_MEMORY should be larger than TOTAL_STACK, was "+INITIAL_TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");assert(typeof Int32Array!=="undefined"&&typeof Float64Array!=="undefined"&&Int32Array.prototype.subarray!==undefined&&Int32Array.prototype.set!==undefined,"JS engine does not provide full typed array support");if(Module["wasmMemory"]){wasmMemory=Module["wasmMemory"]}else{wasmMemory=new WebAssembly.Memory({"initial":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE})}if(wasmMemory){buffer=wasmMemory.buffer}INITIAL_TOTAL_MEMORY=buffer.byteLength;assert(INITIAL_TOTAL_MEMORY%WASM_PAGE_SIZE===0);updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function writeStackCookie(){assert((STACK_MAX&3)==0);HEAPU32[(STACK_MAX>>2)-1]=34821223;HEAPU32[(STACK_MAX>>2)-2]=2310721022}function checkStackCookie(){var cookie1=HEAPU32[(STACK_MAX>>2)-1];var cookie2=HEAPU32[(STACK_MAX>>2)-2];if(cookie1!=34821223||cookie2!=2310721022){abort("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x"+cookie2.toString(16)+" "+cookie1.toString(16))}if(HEAP32[0]!==1668509029)abort("Runtime error: The application has corrupted its heap memory area (address zero)!")}function abortStackOverflow(allocSize){abort("Stack overflow! Attempted to allocate "+allocSize+" bytes on the stack, but stack has only "+(STACK_MAX-stackSave()+allocSize)+" bytes available!")}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";function abortFnPtrError(ptr,sig){abort("Invalid function pointer "+ptr+" called with signature '"+sig+"'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this). Build with ASSERTIONS=2 for more info.")}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){checkStackCookie();assert(!runtimeInitialized);runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__)}function preMain(){checkStackCookie();FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__)}function postRun(){checkStackCookie();if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}assert(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var Math_abs=Math.abs;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random()}return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!=="undefined"){runDependencyWatcher=setInterval(function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err("still waiting on run dependencies:")}err("dependency: "+dep)}if(shown){err("(end of list)")}},1e4)}}else{err("warning: run dependency added without ID")}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err("warning: run dependency removed without ID")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile="data:application/octet-stream;base64,";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(wasmBinaryFile);if(binary){return binary}if(readBinary){return readBinary(wasmBinaryFile)}else{throw"both async and sync fetching of the wasm failed"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={"env":env,"global":{"NaN":NaN,Infinity:Infinity},"global.Math":Math,"asm2wasm":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");var trueModule=Module;function receiveInstantiatedSource(output){assert(Module===trueModule,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");trueModule=null;receiveInstance(output["instance"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiatedSource,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)})})}else{return instantiateArrayBuffer(receiveInstantiatedSource)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);return false}}instantiateAsync();return{}}Module["asm"]=function(global,env,providedBuffer){env["memory"]=wasmMemory;env["table"]=wasmTable=new WebAssembly.Table({"initial":1198,"maximum":1198,"element":"anyfunc"});env["__memory_base"]=1024;env["__table_base"]=0;var exports=createWasm(env);assert(exports,"binaryen setup failed (no wasm support?)");return exports};var tempDouble;var tempI64;__ATINIT__.push({func:function(){globalCtors()}});var tempDoublePtr=50256;assert(tempDoublePtr%8==0);function demangle(func){warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return func}function demangleAll(text){var regex=/\b__Z[\w\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]"})}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var ENV={};function ___buildEnvironment(environ){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV["USER"]=ENV["LOGNAME"]="web_user";ENV["PATH"]="/";ENV["PWD"]="/";ENV["HOME"]="/home/web_user";ENV["LANG"]="C.UTF-8";ENV["LANG"]=(typeof navigator==="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8";ENV["_"]=thisProgram;poolPtr=getMemory(TOTAL_ENV_SIZE);envPtr=getMemory(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[environ>>2]=envPtr}else{envPtr=HEAP32[environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in ENV){if(typeof ENV[key]==="string"){var line=key+"="+ENV[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error("Environment size exceeded TOTAL_ENV_SIZE!")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}function ___cxa_allocate_exception(size){return _malloc(size)}var ___exception_infos={};function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}var ___exception_last=0;function ___cxa_throw(ptr,type,destructor){___exception_infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};___exception_last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exceptions=1}else{__ZSt18uncaught_exceptionv.uncaught_exceptions++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_uncaught_exceptions(){return __ZSt18uncaught_exceptionv.uncaught_exceptions}function ___lock(){}function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;else err("failed to set errno from JS");return value}function ___map_file(pathname,size){___setErrNo(1);return-1}var PATH={splitPath:function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},extname:function(path){return PATH.splitPath(path)[3]},join:function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))},join2:function(l,r){return PATH.normalize(l+"/"+r)}};var PATH_FS={resolve:function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(function(p){return!!p}),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:function(from,to){from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(19)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.flush(stream.tty)},flush:function(stream){stream.tty.ops.flush(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(6)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(5)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(11)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(6)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(5)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc?Buffer.alloc(BUFSIZE):new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},flush:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(1)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node},getFileDataAsRegularArray:function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[2]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(39)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name]},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(39)}delete parent.contents[name]},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(22)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){if(canOwn){warnOnce("file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)")}canOwn=false;if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){assert(position===0,"canOwn must imply no weird position inside the file");node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(22)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(19)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;var fromHeap=buffer.buffer==HEAP8.buffer;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(12)}(fromHeap?HEAP8:buffer).set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(19)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var IDBFS={dbs:{},indexedDB:function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret},DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function(mount){return MEMFS.mount.apply(null,arguments)},syncfs:function(mount,populate,callback){IDBFS.getLocalSet(mount,function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)})})},getDB:function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}};req.onsuccess=function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)};req.onerror=function(e){callback(this.error);e.preventDefault()}},getLocalSet:function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return function(p){return PATH.join2(root,p)}}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})},getRemoteSet:function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=function(e){callback(this.error);e.preventDefault()};var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()}}catch(e){return callback(e)}})},loadLocalEntry:function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}},storeLocalEntry:function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)},removeLocalEntry:function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)},loadRemoteEntry:function(store,path,callback){var req=store.get(path);req.onsuccess=function(event){callback(null,event.target.result)};req.onerror=function(e){callback(this.error);e.preventDefault()}},storeRemoteEntry:function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},removeRemoteEntry:function(store,path,callback){var req=store.delete(path);req.onsuccess=function(){callback(null)};req.onerror=function(e){callback(this.error);e.preventDefault()}},reconcile:function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach(function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}});var remove=[];Object.keys(dst.entries).forEach(function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}});if(!total){return callback(null)}var errored=false;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err&&!errored){errored=true;return callback(err)}}transaction.onerror=function(e){done(this.error);e.preventDefault()};transaction.oncomplete=function(e){if(!errored){callback(null)}};create.sort().forEach(function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)})}else{IDBFS.loadLocalEntry(path,function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)})}});remove.sort().reverse().forEach(function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}})}};var NODEFS={isWindows:false,staticInit:function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process["binding"]("constants");if(flags["fs"]){flags=flags["fs"]}NODEFS.flagsForNodeMap={1024:flags["O_APPEND"],64:flags["O_CREAT"],128:flags["O_EXCL"],0:flags["O_RDONLY"],2:flags["O_RDWR"],4096:flags["O_SYNC"],512:flags["O_TRUNC"],1:flags["O_WRONLY"]}},bufferFrom:function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)},mount:function(mount){assert(ENVIRONMENT_HAS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)},createNode:function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(22)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node},getMode:function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}return stat.mode},realPath:function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)},flagsForNode:function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(22)}},node_ops:{getattr:function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}},setattr:function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},lookup:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)},mknod:function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}return node},rename:function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},unlink:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},rmdir:function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},readdir:function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},symlink:function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},readlink:function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}}},stream_ops:{open:function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},close:function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno)}},read:function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(-e.errno)}},write:function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(-e.errno)}},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(-e.errno)}}}if(position<0){throw new FS.ErrnoError(22)}return position}}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)});(mount.opts["blobs"]||[]).forEach(function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])});(mount.opts["packages"]||[]).forEach(function(pack){pack["metadata"].files.forEach(function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))})});return root},createNode:function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node},node_ops:{getattr:function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}},lookup:function(parent,name){throw new FS.ErrnoError(2)},mknod:function(parent,name,mode,dev){throw new FS.ErrnoError(1)},rename:function(oldNode,newDir,newName){throw new FS.ErrnoError(1)},unlink:function(parent,name){throw new FS.ErrnoError(1)},rmdir:function(parent,name){throw new FS.ErrnoError(1)},readdir:function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newName,oldPath){throw new FS.ErrnoError(1)},readlink:function(node){throw new FS.ErrnoError(1)}},stream_ops:{read:function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size},write:function(stream,buffer,offset,length,position){throw new FS.ErrnoError(5)},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(22)}return position}}};var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)},lookupPath:function(path,opts){path=PATH_FS.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(40)}var parts=PATH.normalizeArray(path.split("/").filter(function(p){return!!p}),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(40)}}}}return{path:current_path,node:current}},getPath:function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}},hashName:function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:function(node){FS.hashRemoveNode(node)},isRoot:function(node){return node===node.parent},isMountpoint:function(node){return!!node.mounted},isFile:function(mode){return(mode&61440)===32768},isDir:function(mode){return(mode&61440)===16384},isLink:function(mode){return(mode&61440)===40960},isChrdev:function(mode){return(mode&61440)===8192},isBlkdev:function(mode){return(mode&61440)===24576},isFIFO:function(mode){return(mode&61440)===4096},isSocket:function(mode){return(mode&49152)===49152},flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags},flagsToPermissionString:function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions:function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return 13}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return 13}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return 13}return 0},mayLookup:function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return 13;return 0},mayCreate:function(dir,name){try{var node=FS.lookupNode(dir,name);return 17}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete:function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return 20}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 16}}else{if(FS.isDir(node.mode)){return 21}}return 0},mayOpen:function(node,flags){if(!node){return 2}if(FS.isLink(node.mode)){return 40}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 21}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(24)},getStream:function(fd){return FS.streams[fd]},createStream:function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:function(fd){FS.streams[fd]=null},chrdev_stream_ops:{open:function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:function(){throw new FS.ErrnoError(29)}},major:function(dev){return dev>>8},minor:function(dev){return dev&255},makedev:function(ma,mi){return ma<<8|mi},registerDevice:function(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:function(dev){return FS.devices[dev]},getMounts:function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(16)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(20)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(22)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)},lookup:function(parent,name){return parent.node_ops.lookup(parent,name)},mknod:function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(22)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(1)}return parent.node_ops.mknod(parent,name,mode,dev)},create:function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=17)throw e}}},mkdev:function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:function(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(2)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(2)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(1)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(16)}if(!old_dir||!new_dir)throw new FS.ErrnoError(2);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(18)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(22)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(39)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(1)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(16)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}},rmdir:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(1)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readdir:function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(20)}return node.node_ops.readdir(node)},unlink:function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(1)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}},readlink:function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(2)}if(!link.node_ops.readlink){throw new FS.ErrnoError(22)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(2)}if(!node.node_ops.getattr){throw new FS.ErrnoError(1)}return node.node_ops.getattr(node)},lstat:function(path){return FS.stat(path,true)},chmod:function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:function(path,mode){FS.chmod(path,mode,true)},fchmod:function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}FS.chmod(stream.node,mode)},chown:function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:function(path,uid,gid){FS.chown(path,uid,gid,true)},fchown:function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}FS.chown(stream.node,uid,gid)},truncate:function(path,len){if(len<0){throw new FS.ErrnoError(22)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(1)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(21)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(22)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(22)}FS.truncate(stream.node,len)},utime:function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(2)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(17)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(2)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(20)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;console.log("FS.trackingDelegate error on read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream},close:function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:function(stream){return stream.fd===null},llseek:function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(29)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(22)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(22)}if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(9)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21)}if(!stream.stream_ops.read){throw new FS.ErrnoError(22)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(29)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(22)}if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21)}if(!stream.stream_ops.write){throw new FS.ErrnoError(22)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(29)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: "+e.message)}return bytesWritten},allocate:function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(9)}if(offset<0||length<=0){throw new FS.ErrnoError(22)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(19)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(95)}stream.stream_ops.allocate(stream,offset,length)},mmap:function(stream,buffer,offset,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(13)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(13)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(19)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)},msync:function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:function(stream){return 0},ioctl:function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(25)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile:function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:function(){return FS.currentPath},chdir:function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(2)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(20)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path},createDefaultDirectories:function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices:function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(stream,buffer,offset,length,pos){return length}});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto==="object"&&typeof crypto["getRandomValues"]==="function"){var randomBuffer=new Uint8Array(1);random_device=function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=__webpack_require__(/*! crypto */ "?8465");random_device=function(){return crypto_module["randomBytes"](1)[0]}}catch(e){}}else{}if(!random_device){random_device=function(){abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")}}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(9);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return stream.path}}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams:function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");var stdout=FS.open("/dev/stdout","w");var stderr=FS.open("/dev/stderr","w");assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")},ensureErrnoError:function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}};this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack){Object.defineProperty(this,"stack",{value:(new Error).stack,writable:true});this.stack=demangleAll(this.stack)}};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[2].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"})},staticInit:function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}},init:function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit:function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},joinPath:function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path},absolutePath:function(relative,base){return PATH_FS.resolve(base,relative)},standardizePath:function(path){return PATH.normalize(path)},findObject:function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}},analyzePath:function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createFolder:function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)},createPath:function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function(stream){stream.seekable=false},close:function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}},read:function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(5)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(11)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(5)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},createLink:function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)},forceLoadFile:function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(5);return success},createLazyFile:function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5)}return fn.apply(null,arguments)}});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node},createPreloadedFile:function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach(function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep)});handled=true}});if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,function(byteArray){processData(byteArray)},onerror)}else{processData(url)}},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:function(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror}};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(9);dir=dirstream.path}path=PATH.join2(dir,path)}return path},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-20}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)},doMkdir:function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0},doMknod:function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-22}FS.mknod(path,mode,dev);return 0},doReadlink:function(path,buf,bufsize){if(bufsize<=0)return-22;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len},doAccess:function(path,amode){if(amode&~7){return-22}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;if(!node){return-2}var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-13}return 0},doDup:function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd},doReadv:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret},doWritev:function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},getStreamFromFD:function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(9);return stream},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low},getZero:function(){assert(SYSCALLS.get()===0)}};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var HIGH_OFFSET=4294967296;var offset=offset_high*HIGH_OFFSET+(offset_low>>>0);var DOUBLE_LIMIT=9007199254740992;if(offset<=-DOUBLE_LIMIT||offset>=DOUBLE_LIMIT){return-75}FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[result>>2]=tempI64[0],HEAP32[result+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-25;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-25;return 0}case 21519:{if(!stream.tty)return-25;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-25;return-22}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-25;return 0}case 21524:{if(!stream.tty)return-25;return 0}default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function __emscripten_syscall_munmap(addr,len){if(addr===-1||len===0){return-22}var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();return __emscripten_syscall_munmap(addr,len)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret="";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return"_unknown"}name=name.replace(/[^a-zA-Z0-9_]/g,"$");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return"_"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function("body","return function "+name+"() {\n"+'    "use strict";'+"    return body.apply(this, arguments);\n"+"};\n")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+"\n"+stack.replace(/^Error(:[^\n]*)?\n/,"")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+": "+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function registerType(rawType,registeredInstance,options){options=options||{};if(!("argPackAdvance"in registeredInstance)){throw new TypeError("registerType registeredInstance requires argPackAdvance")}var name=registeredInstance.name;if(!rawType){throwBindingError('type "'+name+'" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError("Cannot register type '"+name+"' twice")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function(wt){return!!wt},"toWireType":function(destructors,o){return o?trueValue:falseValue},"argPackAdvance":8,"readValueFromPointer":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError("Unknown boolean type size: "+name)}return this["fromWireType"](heap[pointer>>shift])},destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module["count_emval_handles"]=count_emval_handles;Module["get_first_emval"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function simpleReadValueFromPointer(pointer){return this["fromWireType"](HEAPU32[pointer>>2])}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv},"toWireType":function(destructors,value){return __emval_register(value)},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return"null"}var t=typeof v;if(t==="object"||t==="array"||t==="function"){return v.toString()}else{return""+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this["fromWireType"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this["fromWireType"](HEAPF64[pointer>>3])};default:throw new TypeError("Unknown float type: "+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function(value){return value},"toWireType":function(destructors,value){if(typeof value!=="number"&&typeof value!=="boolean"){throw new TypeError('Cannot convert "'+_embind_repr(value)+'" to '+this.name)}return value},"argPackAdvance":8,"readValueFromPointer":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError("Unknown integer type: "+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.indexOf("unsigned")!=-1;registerType(primitiveType,{name:name,"fromWireType":fromWireType,"toWireType":function(destructors,value){if(typeof value!=="number"&&typeof value!=="boolean"){throw new TypeError('Cannot convert "'+_embind_repr(value)+'" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number "'+_embind_repr(value)+'" from JS side to C/C++ side to an argument of type "'+name+'", which is outside the valid range ['+minRange+", "+maxRange+"]!")}return isUnsignedType?value>>>0:value|0},"argPackAdvance":8,"readValueFromPointer":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap["buffer"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":decodeMemoryView,"argPackAdvance":8,"readValueFromPointer":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name==="std::string";registerType(rawType,{name:name,"fromWireType":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join("")}_free(value);return str},"toWireType":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value==="string";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError("Cannot pass non-string to std::string")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError("String has UTF-16 code units that do not fit in 8 bits")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,"fromWireType":function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join("")},"toWireType":function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,"argPackAdvance":0,"fromWireType":function(){return undefined},"toWireType":function(destructors,o){return undefined}})}function _abort(){Module["abort"]()}function _emscripten_get_heap_size(){return HEAP8.length}function _getenv(name){if(name===0)return 0;name=UTF8ToString(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _llvm_log2_f32(x){return Math.log(x)/Math.LN2}function _llvm_log2_f64(a0){return _llvm_log2_f32(a0)}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}function _llvm_trap(){abort("trap!")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function _pthread_cond_wait(){return 0}function abortOnCannotGrowMemory(requestedSize){abort("Cannot enlarge memory arrays to size "+requestedSize+" bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+HEAP8.length+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function emscripten_realloc_buffer(size){var PAGE_MULTIPLE=65536;size=alignUp(size,PAGE_MULTIPLE);var oldSize=buffer.byteLength;try{var result=wasmMemory.grow((size-oldSize)/65536);if(result!==(-1|0)){buffer=wasmMemory.buffer;return true}else{return false}}catch(e){console.error("emscripten_realloc_buffer: Attempted to grow from "+oldSize+" bytes to "+size+" bytes, but got error: "+e);return false}}function _emscripten_resize_heap(requestedSize){var oldSize=_emscripten_get_heap_size();assert(requestedSize>oldSize);var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(requestedSize>LIMIT){err("Cannot enlarge memory, asked to go up to "+requestedSize+" bytes, but the limit is "+LIMIT+" bytes!");return false}var MIN_TOTAL_MEMORY=16777216;var newSize=Math.max(oldSize,MIN_TOTAL_MEMORY);while(newSize<requestedSize){if(newSize<=536870912){newSize=alignUp(2*newSize,PAGE_MULTIPLE)}else{newSize=Math.min(alignUp((3*newSize+2147483648)/4,PAGE_MULTIPLE),LIMIT)}if(newSize===oldSize){warnOnce("Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only "+HEAP8.length)}}var start=Date.now();if(!emscripten_realloc_buffer(newSize)){err("Failed to grow the heap from "+oldSize+" bytes to "+newSize+" bytes, not enough memory!");return false}updateGlobalBufferViews();return true}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},"%A":function(date){return WEEKDAYS[date.tm_wday]},"%b":function(date){return MONTHS[date.tm_mon].substring(0,3)},"%B":function(date){return MONTHS[date.tm_mon]},"%C":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":function(date){return leadingNulls(date.tm_mday,2)},"%e":function(date){return leadingSomething(date.tm_mday,2," ")},"%g":function(date){return getWeekBasedYear(date).toString().substring(2)},"%G":function(date){return getWeekBasedYear(date)},"%H":function(date){return leadingNulls(date.tm_hour,2)},"%I":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},"%m":function(date){return leadingNulls(date.tm_mon+1,2)},"%M":function(date){return leadingNulls(date.tm_min,2)},"%n":function(){return"\n"},"%p":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}},"%S":function(date){return leadingNulls(date.tm_sec,2)},"%t":function(){return"\t"},"%u":function(date){return date.tm_wday||7},"%U":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"},"%V":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},"%w":function(date){return date.tm_wday},"%W":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"},"%y":function(date){return(date.tm_year+1900).toString().substring(2)},"%Y":function(date){return date.tm_year+1900},"%z":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":function(date){return date.tm_zone},"%%":function(){return"%"}};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _sysconf(name){switch(name){case 30:return PAGE_SIZE;case 85:var maxHeapSize=2*1024*1024*1024-65536;return maxHeapSize/PAGE_SIZE;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:{if(typeof navigator==="object")return navigator["hardwareConcurrency"]||1;return 1}}___setErrNo(22);return-1}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}function _times(buffer){if(buffer!==0){_memset(buffer,0,16)}return 0}FS.staticInit();if(ENVIRONMENT_HAS_NODE){var fs=__webpack_require__(/*! fs */ "?65c5");var NODEJS_PATH=__webpack_require__(/*! path */ "?0f27");NODEFS.staticInit()}embind_init_charCodes();BindingError=Module["BindingError"]=extendError(Error,"BindingError");InternalError=Module["InternalError"]=extendError(Error,"InternalError");init_emval();var ASSERTIONS=true;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,"Character code "+chr+" ("+String.fromCharCode(chr)+")  at offset "+i+" not in 0x00-0xFF.")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join("")}var decodeBase64=typeof atob==="function"?atob:function(input){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE==="boolean"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,"base64")}catch(_){buf=new Buffer(s,"base64")}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error("Converting base64 string to bytes failed.")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}function nullFunc_dii(x){abortFnPtrError(x,"dii")}function nullFunc_ii(x){abortFnPtrError(x,"ii")}function nullFunc_iidi(x){abortFnPtrError(x,"iidi")}function nullFunc_iidiiii(x){abortFnPtrError(x,"iidiiii")}function nullFunc_iii(x){abortFnPtrError(x,"iii")}function nullFunc_iiii(x){abortFnPtrError(x,"iiii")}function nullFunc_iiiii(x){abortFnPtrError(x,"iiiii")}function nullFunc_iiiiid(x){abortFnPtrError(x,"iiiiid")}function nullFunc_iiiiii(x){abortFnPtrError(x,"iiiiii")}function nullFunc_iiiiiid(x){abortFnPtrError(x,"iiiiiid")}function nullFunc_iiiiiii(x){abortFnPtrError(x,"iiiiiii")}function nullFunc_iiiiiiii(x){abortFnPtrError(x,"iiiiiiii")}function nullFunc_iiiiiiiii(x){abortFnPtrError(x,"iiiiiiiii")}function nullFunc_iiiiij(x){abortFnPtrError(x,"iiiiij")}function nullFunc_jiji(x){abortFnPtrError(x,"jiji")}function nullFunc_v(x){abortFnPtrError(x,"v")}function nullFunc_vi(x){abortFnPtrError(x,"vi")}function nullFunc_vidd(x){abortFnPtrError(x,"vidd")}function nullFunc_viddddi(x){abortFnPtrError(x,"viddddi")}function nullFunc_vidddi(x){abortFnPtrError(x,"vidddi")}function nullFunc_viddi(x){abortFnPtrError(x,"viddi")}function nullFunc_vidi(x){abortFnPtrError(x,"vidi")}function nullFunc_vii(x){abortFnPtrError(x,"vii")}function nullFunc_viii(x){abortFnPtrError(x,"viii")}function nullFunc_viiii(x){abortFnPtrError(x,"viiii")}function nullFunc_viiiii(x){abortFnPtrError(x,"viiiii")}function nullFunc_viiiiii(x){abortFnPtrError(x,"viiiiii")}function nullFunc_viijii(x){abortFnPtrError(x,"viijii")}var asmGlobalArg={};var asmLibraryArg={"b":abortStackOverflow,"na":nullFunc_dii,"ca":nullFunc_ii,"T":nullFunc_iidi,"N":nullFunc_iidiiii,"H":nullFunc_iii,"B":nullFunc_iiii,"u":nullFunc_iiiii,"t":nullFunc_iiiiid,"s":nullFunc_iiiiii,"ma":nullFunc_iiiiiid,"la":nullFunc_iiiiiii,"ka":nullFunc_iiiiiiii,"ja":nullFunc_iiiiiiiii,"ia":nullFunc_iiiiij,"ha":nullFunc_jiji,"ga":nullFunc_v,"fa":nullFunc_vi,"ea":nullFunc_vidd,"da":nullFunc_viddddi,"ba":nullFunc_vidddi,"aa":nullFunc_viddi,"$":nullFunc_vidi,"_":nullFunc_vii,"Z":nullFunc_viii,"Y":nullFunc_viiii,"X":nullFunc_viiiii,"W":nullFunc_viiiiii,"V":nullFunc_viijii,"U":___buildEnvironment,"d":___cxa_allocate_exception,"S":___cxa_pure_virtual,"c":___cxa_throw,"R":___cxa_uncaught_exceptions,"r":___lock,"Q":___map_file,"q":___setErrNo,"P":___syscall140,"O":___syscall145,"p":___syscall146,"M":___syscall54,"L":___syscall6,"K":___syscall91,"m":___unlock,"J":__embind_register_bool,"I":__embind_register_emval,"o":__embind_register_float,"g":__embind_register_integer,"f":__embind_register_memory_view,"n":__embind_register_std_string,"G":__embind_register_std_wstring,"F":__embind_register_void,"e":_abort,"E":_emscripten_get_heap_size,"D":_emscripten_memcpy_big,"C":_emscripten_resize_heap,"k":_getenv,"j":_llvm_log2_f64,"i":_llvm_stackrestore,"h":_llvm_stacksave,"A":_llvm_trap,"z":_pthread_cond_wait,"y":_strftime_l,"l":_sysconf,"x":_time,"w":_times,"v":abortOnCannotGrowMemory,"a":DYNAMICTOP_PTR};var asm=Module["asm"](asmGlobalArg,asmLibraryArg,buffer);Module["asm"]=asm;var _FM3=Module["_FM3"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["oa"].apply(null,arguments)};var _PMDS=Module["_PMDS"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["pa"].apply(null,arguments)};var __ZSt18uncaught_exceptionv=Module["__ZSt18uncaught_exceptionv"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["qa"].apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module["___embind_register_native_and_builtin_types"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ra"].apply(null,arguments)};var ___errno_location=Module["___errno_location"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["sa"].apply(null,arguments)};var ___getTypeName=Module["___getTypeName"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ta"].apply(null,arguments)};var _fflush=Module["_fflush"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ua"].apply(null,arguments)};var _free=Module["_free"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["va"].apply(null,arguments)};var _free_buf=Module["_free_buf"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["wa"].apply(null,arguments)};var _malloc=Module["_malloc"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["xa"].apply(null,arguments)};var _memset=Module["_memset"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["ya"].apply(null,arguments)};var establishStackSpace=Module["establishStackSpace"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ba"].apply(null,arguments)};var globalCtors=Module["globalCtors"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ca"].apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Da"].apply(null,arguments)};var stackRestore=Module["stackRestore"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Ea"].apply(null,arguments)};var stackSave=Module["stackSave"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Fa"].apply(null,arguments)};var dynCall_v=Module["dynCall_v"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["za"].apply(null,arguments)};var dynCall_vi=Module["dynCall_vi"]=function(){assert(runtimeInitialized,"you need to wait for the runtime to be ready (e.g. wait for main() to be called)");assert(!runtimeExited,"the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)");return Module["asm"]["Aa"].apply(null,arguments)};Module["asm"]=asm;if(!Object.getOwnPropertyDescriptor(Module,"intArrayFromString"))Module["intArrayFromString"]=function(){abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"intArrayToString"))Module["intArrayToString"]=function(){abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"ccall"))Module["ccall"]=function(){abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"cwrap"))Module["cwrap"]=function(){abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"setValue"))Module["setValue"]=function(){abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"getValue"))Module["getValue"]=function(){abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"allocate"))Module["allocate"]=function(){abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"getMemory"))Module["getMemory"]=function(){abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"AsciiToString"))Module["AsciiToString"]=function(){abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stringToAscii"))Module["stringToAscii"]=function(){abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"UTF8ArrayToString"))Module["UTF8ArrayToString"]=function(){abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"UTF8ToString"))Module["UTF8ToString"]=function(){abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stringToUTF8Array"))Module["stringToUTF8Array"]=function(){abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stringToUTF8"))Module["stringToUTF8"]=function(){abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"lengthBytesUTF8"))Module["lengthBytesUTF8"]=function(){abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"UTF16ToString"))Module["UTF16ToString"]=function(){abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stringToUTF16"))Module["stringToUTF16"]=function(){abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"lengthBytesUTF16"))Module["lengthBytesUTF16"]=function(){abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"UTF32ToString"))Module["UTF32ToString"]=function(){abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stringToUTF32"))Module["stringToUTF32"]=function(){abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"lengthBytesUTF32"))Module["lengthBytesUTF32"]=function(){abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"allocateUTF8"))Module["allocateUTF8"]=function(){abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stackTrace"))Module["stackTrace"]=function(){abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"addOnPreRun"))Module["addOnPreRun"]=function(){abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"addOnInit"))Module["addOnInit"]=function(){abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"addOnPreMain"))Module["addOnPreMain"]=function(){abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"addOnExit"))Module["addOnExit"]=function(){abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"addOnPostRun"))Module["addOnPostRun"]=function(){abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"writeStringToMemory"))Module["writeStringToMemory"]=function(){abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"writeArrayToMemory"))Module["writeArrayToMemory"]=function(){abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"writeAsciiToMemory"))Module["writeAsciiToMemory"]=function(){abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"addRunDependency"))Module["addRunDependency"]=function(){abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"removeRunDependency"))Module["removeRunDependency"]=function(){abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"ENV"))Module["ENV"]=function(){abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"FS"))Module["FS"]=function(){abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"FS_createFolder"))Module["FS_createFolder"]=function(){abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"FS_createPath"))Module["FS_createPath"]=function(){abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"FS_createDataFile"))Module["FS_createDataFile"]=function(){abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"FS_createPreloadedFile"))Module["FS_createPreloadedFile"]=function(){abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"FS_createLazyFile"))Module["FS_createLazyFile"]=function(){abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"FS_createLink"))Module["FS_createLink"]=function(){abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"FS_createDevice"))Module["FS_createDevice"]=function(){abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"FS_unlink"))Module["FS_unlink"]=function(){abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")};if(!Object.getOwnPropertyDescriptor(Module,"GL"))Module["GL"]=function(){abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"dynamicAlloc"))Module["dynamicAlloc"]=function(){abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"loadDynamicLibrary"))Module["loadDynamicLibrary"]=function(){abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"loadWebAssemblyModule"))Module["loadWebAssemblyModule"]=function(){abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"getLEB"))Module["getLEB"]=function(){abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"getFunctionTables"))Module["getFunctionTables"]=function(){abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"alignFunctionTables"))Module["alignFunctionTables"]=function(){abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"registerFunctions"))Module["registerFunctions"]=function(){abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"addFunction"))Module["addFunction"]=function(){abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"removeFunction"))Module["removeFunction"]=function(){abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"getFuncWrapper"))Module["getFuncWrapper"]=function(){abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"prettyPrint"))Module["prettyPrint"]=function(){abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"makeBigInt"))Module["makeBigInt"]=function(){abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"dynCall"))Module["dynCall"]=function(){abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"getCompilerSetting"))Module["getCompilerSetting"]=function(){abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stackSave"))Module["stackSave"]=function(){abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stackRestore"))Module["stackRestore"]=function(){abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"stackAlloc"))Module["stackAlloc"]=function(){abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"establishStackSpace"))Module["establishStackSpace"]=function(){abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"print"))Module["print"]=function(){abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"printErr"))Module["printErr"]=function(){abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"getTempRet0"))Module["getTempRet0"]=function(){abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"setTempRet0"))Module["setTempRet0"]=function(){abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"callMain"))Module["callMain"]=function(){abort("'callMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"Pointer_stringify"))Module["Pointer_stringify"]=function(){abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"warnOnce"))Module["warnOnce"]=function(){abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"intArrayFromBase64"))Module["intArrayFromBase64"]=function(){abort("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"tryParseAsDataURI"))Module["tryParseAsDataURI"]=function(){abort("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")};if(!Object.getOwnPropertyDescriptor(Module,"ALLOC_NORMAL"))Object.defineProperty(Module,"ALLOC_NORMAL",{get:function(){abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});if(!Object.getOwnPropertyDescriptor(Module,"ALLOC_STACK"))Object.defineProperty(Module,"ALLOC_STACK",{get:function(){abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});if(!Object.getOwnPropertyDescriptor(Module,"ALLOC_DYNAMIC"))Object.defineProperty(Module,"ALLOC_DYNAMIC",{get:function(){abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});if(!Object.getOwnPropertyDescriptor(Module,"ALLOC_NONE"))Object.defineProperty(Module,"ALLOC_NONE",{get:function(){abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")}});if(!Object.getOwnPropertyDescriptor(Module,"calledRun"))Object.defineProperty(Module,"calledRun",{get:function(){abort("'calledRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")}});var calledRun;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}writeStackCookie();preRun();if(runDependencies>0)return;function doRun(){if(calledRun)return;calledRun=true;if(ABORT)return;initRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();assert(!Module["_main"],'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}checkStackCookie()}Module["run"]=run;var abortDecorators=[];function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}what+="";out(what);err(what);ABORT=true;EXITSTATUS=1;var extra="";var output="abort("+what+") at "+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach(function(decorator){output=decorator(output,what)})}throw output}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}Module["noExitRuntime"]=true;run();


        // The shell-pre.js and emcc-generated code goes above
        return Module;
    }); // The end of the promise being returned

  return initOGDFPromise;
} // The end of our initOGDF function

// This bit below is copied almost exactly from what you get when you use the MODULARIZE=1 flag with emcc
// However, we don't want to use the emcc modularization. See shell-pre.js
if (true){
    module.exports = initOGDF;
    // This will allow the module to be used in ES6 or CommonJS
    module.exports.default = initOGDF;
}
else {}
    


/***/ }),

/***/ "?8465":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?65c5":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?0f27":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./index.js");
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXR2LWxheW91dC93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL2xheW91dHMvZDMtZm9yY2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9sYXlvdXRzL2ZtMy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL2xheW91dHMvbGF5b3V0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbGF5b3V0cy9yYWRpYWwtdHJlZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL2xheW91dHMvcmFuZG9tLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYXNjZW5kaW5nLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9iaW4uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2Jpc2VjdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvYmlzZWN0b3IuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9jb3VudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvY3Jvc3MuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2N1bXN1bS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZGVzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZGV2aWF0aW9uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9kaWZmZXJlbmNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9kaXNqb2ludC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZXZlcnkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2V4dGVudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZmlsdGVyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9mc3VtLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9ncmVhdGVzdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZ3JlYXRlc3RJbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvZ3JvdXAuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvaW50ZXJzZWN0aW9uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9sZWFzdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbGVhc3RJbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvbWFwLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9tYXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21heEluZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9tZWFuLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9tZWRpYW4uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21lcmdlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9taW4uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL21pbkluZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9uaWNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3BhaXJzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9wZXJtdXRlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9xdWFudGlsZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvcXVpY2tzZWxlY3QuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3JhbmdlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9yZWR1Y2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3JldmVyc2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3NjYW4uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3NldC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc2h1ZmZsZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc29tZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc29ydC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvc3Vic2V0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy9zdW0uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3N1cGVyc2V0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvZnJlZWRtYW5EaWFjb25pcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdGhyZXNob2xkL3Njb3R0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy90aHJlc2hvbGQvc3R1cmdlcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdGlja3MuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3RyYW5zcG9zZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1hcnJheS9zcmMvdW5pb24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXJyYXkvc3JjL3ZhcmlhbmNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWFycmF5L3NyYy96aXAuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXhpcy9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYXhpcy9zcmMvYXhpcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1heGlzL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1heGlzL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1icnVzaC9zcmMvYnJ1c2guanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWJydXNoL3NyYy9ldmVudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1icnVzaC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtYnJ1c2gvc3JjL25vZXZlbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtY2hvcmQvc3JjL2FycmF5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9jaG9yZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1jaG9yZC9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtY2hvcmQvc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9tYXRoLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNob3JkL3NyYy9yaWJib24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2NvbG9yLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNvbG9yL3NyYy9jdWJlaGVsaXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2RlZmluZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtY29sb3Ivc3JjL2xhYi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1jb2xvci9zcmMvbWF0aC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9hcmVhLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2FycmF5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2FzY2VuZGluZy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1jb250b3VyL3NyYy9ibHVyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2NvbnRhaW5zLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2NvbnRvdXJzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWNvbnRvdXIvc3JjL2RlbnNpdHkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtY29udG91ci9zcmMvbm9vcC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1kZWxhdW5heS9zcmMvZGVsYXVuYXkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZGVsYXVuYXkvc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWRlbGF1bmF5L3NyYy9wYXRoLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWRlbGF1bmF5L3NyYy9wb2x5Z29uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWRlbGF1bmF5L3NyYy92b3Jvbm9pLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWRpc3BhdGNoL3NyYy9kaXNwYXRjaC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1kaXNwYXRjaC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvZHJhZy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9ldmVudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1kcmFnL3NyYy9ub2RyYWcuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZHJhZy9zcmMvbm9ldmVudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1kc3Yvc3JjL2F1dG9UeXBlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvY3N2LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvZHN2LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWRzdi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZHN2L3NyYy90c3YuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvYmFjay5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9ib3VuY2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvY2lyY2xlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2N1YmljLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2VsYXN0aWMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvZXhwLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL2xpbmVhci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9tYXRoLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWVhc2Uvc3JjL3BvbHkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZWFzZS9zcmMvcXVhZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1lYXNlL3NyYy9zaW4uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2Jsb2IuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2J1ZmZlci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvZHN2LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZldGNoL3NyYy9pbWFnZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mZXRjaC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL2pzb24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL3RleHQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZmV0Y2gvc3JjL3htbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvY2VudGVyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9jb2xsaWRlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZm9yY2Uvc3JjL2ppZ2dsZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvbGNnLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9saW5rLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9tYW55Qm9keS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JjZS9zcmMvcmFkaWFsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy9zaW11bGF0aW9uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy94LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcmNlL3NyYy95LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZGVmYXVsdExvY2FsZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2V4cG9uZW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0RGVjaW1hbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2Zvcm1hdEdyb3VwLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0TnVtZXJhbHMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRQcmVmaXhBdXRvLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvZm9ybWF0Um91bmRlZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2Zvcm1hdFNwZWNpZmllci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2Zvcm1hdFRyaW0uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9mb3JtYXRUeXBlcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWZvcm1hdC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9sb2NhbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZm9ybWF0L3NyYy9wcmVjaXNpb25GaXhlZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL3ByZWNpc2lvblByZWZpeC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1mb3JtYXQvc3JjL3ByZWNpc2lvblJvdW5kLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvYXJlYS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2JvdW5kcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NhcnRlc2lhbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NlbnRyb2lkLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2lyY2xlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9hbnRpbWVyaWRpYW4uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jbGlwL2J1ZmZlci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NsaXAvY2lyY2xlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9leHRlbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jbGlwL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9saW5lLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvY2xpcC9yZWN0YW5nbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jbGlwL3Jlam9pbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NvbXBvc2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2NvbnRhaW5zLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvZGlzdGFuY2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9ncmF0aWN1bGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9pZGVudGl0eS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvaW50ZXJwb2xhdGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9sZW5ndGguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9tYXRoLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvbm9vcC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvYXJlYS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvYm91bmRzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcGF0aC9jZW50cm9pZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvY29udGV4dC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BhdGgvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wYXRoL21lYXN1cmUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wYXRoL3N0cmluZy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3BvaW50RXF1YWwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wb2x5Z29uQ29udGFpbnMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2FsYmVycy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYWxiZXJzVXNhLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9hemltdXRoYWwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2F6aW11dGhhbEVxdWFsQXJlYS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vYXppbXV0aGFsRXF1aWRpc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2NvbmljLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9jb25pY0NvbmZvcm1hbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vY29uaWNFcXVhbEFyZWEuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2NvbmljRXF1aWRpc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2N5bGluZHJpY2FsRXF1YWxBcmVhLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9lcXVhbEVhcnRoLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9lcXVpcmVjdGFuZ3VsYXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2ZpdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vZ25vbW9uaWMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL2lkZW50aXR5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvcHJvamVjdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vbWVyY2F0b3IuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL25hdHVyYWxFYXJ0aDEuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL29ydGhvZ3JhcGhpYy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3Byb2plY3Rpb24vcmVzYW1wbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL3N0ZXJlb2dyYXBoaWMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtZ2VvL3NyYy9wcm9qZWN0aW9uL3RyYW5zdmVyc2VNZXJjYXRvci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1nZW8vc3JjL3JvdGF0aW9uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvc3RyZWFtLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWdlby9zcmMvdHJhbnNmb3JtLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvYWNjZXNzb3JzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9jbHVzdGVyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvYW5jZXN0b3JzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2NvdW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2Rlc2NlbmRhbnRzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2guanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvZWFjaEFmdGVyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L2VhY2hCZWZvcmUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvZmluZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9sZWF2ZXMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvbGlua3MuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9oaWVyYXJjaHkvcGF0aC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2hpZXJhcmNoeS9zb3J0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvaGllcmFyY2h5L3N1bS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvcGFjay9lbmNsb3NlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvcGFjay9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3BhY2svc2libGluZ3MuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9wYXJ0aXRpb24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy9zdHJhdGlmeS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL2JpbmFyeS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvZGljZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL3Jlc3F1YXJpZnkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaGllcmFyY2h5L3NyYy90cmVlbWFwL3JvdW5kLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9zbGljZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1oaWVyYXJjaHkvc3JjL3RyZWVtYXAvc2xpY2VEaWNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWhpZXJhcmNoeS9zcmMvdHJlZW1hcC9zcXVhcmlmeS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvYXJyYXkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Jhc2lzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9iYXNpc0Nsb3NlZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvY29sb3IuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9jdWJlaGVsaXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2RhdGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2Rpc2NyZXRlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9oY2wuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL2hzbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvaHVlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvbGFiLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9udW1iZXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL251bWJlckFycmF5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy9vYmplY3QuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3BpZWNld2lzZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcXVhbnRpemUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3JnYi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvcm91bmQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3N0cmluZy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL2RlY29tcG9zZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1pbnRlcnBvbGF0ZS9zcmMvdHJhbnNmb3JtL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy90cmFuc2Zvcm0vcGFyc2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtaW50ZXJwb2xhdGUvc3JjL3ZhbHVlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLWludGVycG9sYXRlL3NyYy96b29tLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXBhdGgvc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXBhdGgvc3JjL3BhdGguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcG9seWdvbi9zcmMvYXJlYS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9jZW50cm9pZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9jb250YWlucy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9jcm9zcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1wb2x5Z29uL3NyYy9odWxsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXBvbHlnb24vc3JjL2xlbmd0aC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvYWRkLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9jb3Zlci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvZGF0YS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvZXh0ZW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9maW5kLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXF1YWR0cmVlL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvcXVhZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvcXVhZHRyZWUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3JlbW92ZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvcm9vdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvc2l6ZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1xdWFkdHJlZS9zcmMvdmlzaXQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3Zpc2l0QWZ0ZXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3guanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcXVhZHRyZWUvc3JjL3kuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9iYXRlcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2Jlcm5vdWxsaS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2JldGEuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9iaW5vbWlhbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2NhdWNoeS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2RlZmF1bHRTb3VyY2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9leHBvbmVudGlhbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL2dhbW1hLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvZ2VvbWV0cmljLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9pbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9pcndpbkhhbGwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9sY2cuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9sb2dOb3JtYWwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy9sb2dpc3RpYy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL25vcm1hbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL3BhcmV0by5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1yYW5kb20vc3JjL3BvaXNzb24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtcmFuZG9tL3NyYy91bmlmb3JtLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXJhbmRvbS9zcmMvd2VpYnVsbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL0FjY2VudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL0RhcmsyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFpcmVkLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvUGFzdGVsMS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1Bhc3RlbDIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9TZXQxLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY2F0ZWdvcmljYWwvU2V0Mi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2NhdGVnb3JpY2FsL1NldDMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9UYWJsZWF1MTAuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9jYXRlZ29yaWNhbC9jYXRlZ29yeTEwLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvY29sb3JzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvZGl2ZXJnaW5nL0JyQkcuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUFJHbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2RpdmVyZ2luZy9QaVlHLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvZGl2ZXJnaW5nL1B1T3IuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvUmRCdS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2RpdmVyZ2luZy9SZEd5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvZGl2ZXJnaW5nL1JkWWxCdS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL2RpdmVyZ2luZy9SZFlsR24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9kaXZlcmdpbmcvU3BlY3RyYWwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3JhbXAuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL0J1R24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL0J1UHUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL0duQnUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL09yUmQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1QnUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1B1QnVHbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvUHVSZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvUmRQdS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvWWxHbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvWWxHbkJ1LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9ZbE9yQnIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLW11bHRpL1lsT3JSZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvY2l2aWRpcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvY3ViZWhlbGl4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9yYWluYm93LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS9zaW5lYm93LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1tdWx0aS90dXJiby5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtbXVsdGkvdmlyaWRpcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtc2luZ2xlL0JsdWVzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvR3JlZW5zLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvR3JleXMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUtY2hyb21hdGljL3NyYy9zZXF1ZW50aWFsLXNpbmdsZS9PcmFuZ2VzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlLWNocm9tYXRpYy9zcmMvc2VxdWVudGlhbC1zaW5nbGUvUHVycGxlcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS1jaHJvbWF0aWMvc3JjL3NlcXVlbnRpYWwtc2luZ2xlL1JlZHMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2JhbmQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2NvbnN0YW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9jb250aW51b3VzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9kaXZlcmdpbmcuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvaW5pdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvbGluZWFyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9sb2cuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL25pY2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL251bWJlci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvb3JkaW5hbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvcG93LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9xdWFudGlsZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvcXVhbnRpemUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3JhZGlhbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvc2VxdWVudGlhbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvc2VxdWVudGlhbFF1YW50aWxlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNjYWxlL3NyYy9zeW1sb2cuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2NhbGUvc3JjL3RocmVzaG9sZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvdGlja0Zvcm1hdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvdGltZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zY2FsZS9zcmMvdXRjVGltZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL2FycmF5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9jcmVhdG9yLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9sb2NhbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL21hdGNoZXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9uYW1lc3BhY2VzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvcG9pbnRlci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3BvaW50ZXJzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0QWxsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2FwcGVuZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9hdHRyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2NhbGwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vY2xhc3NlZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9jbG9uZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9kYXRhLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2RhdHVtLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2Rpc3BhdGNoLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL2VhY2guanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZW1wdHkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZW50ZXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vZXhpdC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaHRtbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9pbnNlcnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vam9pbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9sb3dlci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9tZXJnZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9ub2RlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL25vZGVzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL29uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL29yZGVyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3Byb3BlcnR5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3JhaXNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3JlbW92ZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zZWxlY3QuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc2VsZWN0QWxsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdENoaWxkLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NlbGVjdENoaWxkcmVuLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0aW9uL3NpemUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc29ydC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdGlvbi9zcGFyc2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vc3R5bGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zZWxlY3Rpb24vdGV4dC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3NlbGVjdG9yLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNlbGVjdGlvbi9zcmMvc2VsZWN0b3JBbGwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2VsZWN0aW9uL3NyYy9zb3VyY2VFdmVudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zZWxlY3Rpb24vc3JjL3dpbmRvdy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvYXJjLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9hcmVhLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9hcmVhUmFkaWFsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9hcnJheS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY29uc3RhbnQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2Jhc2lzLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9iYXNpc0Nsb3NlZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvYmFzaXNPcGVuLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9idW5kbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL2NhcmRpbmFsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXJkaW5hbENsb3NlZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvY2FyZGluYWxPcGVuLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXRtdWxsUm9tLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXRtdWxsUm9tQ2xvc2VkLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9jYXRtdWxsUm9tT3Blbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvY3VydmUvbGluZWFyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9saW5lYXJDbG9zZWQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL21vbm90b25lLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9uYXR1cmFsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9jdXJ2ZS9yYWRpYWwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2N1cnZlL3N0ZXAuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2Rlc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL2lkZW50aXR5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbGluZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbGluZVJhZGlhbC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbGluay9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbWF0aC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvbm9vcC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L2RpdmVyZ2luZy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L2V4cGFuZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb2Zmc2V0L25vbmUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29mZnNldC9zaWxob3VldHRlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vZmZzZXQvd2lnZ2xlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9hcHBlYXJhbmNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9vcmRlci9hc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL2Rlc2NlbmRpbmcuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL29yZGVyL2luc2lkZU91dC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvbm9uZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvb3JkZXIvcmV2ZXJzZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvcGllLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9wb2ludC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvcG9pbnRSYWRpYWwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N0YWNrLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9jaXJjbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9jcm9zcy5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy1zaGFwZS9zcmMvc3ltYm9sL2RpYW1vbmQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9zcXVhcmUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC9zdGFyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXNoYXBlL3NyYy9zeW1ib2wvdHJpYW5nbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtc2hhcGUvc3JjL3N5bWJvbC93eWUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS1mb3JtYXQvc3JjL2RlZmF1bHRMb2NhbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS1mb3JtYXQvc3JjL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWUtZm9ybWF0L3NyYy9pc29Gb3JtYXQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS1mb3JtYXQvc3JjL2lzb1BhcnNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWUtZm9ybWF0L3NyYy9sb2NhbGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvZGF5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2R1cmF0aW9uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL2hvdXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvaW50ZXJ2YWwuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvbWlsbGlzZWNvbmQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvbWludXRlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL21vbnRoLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3NlY29uZC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNEYXkuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvdXRjSG91ci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNNaW51dGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvdXRjTW9udGguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMvdXRjV2Vlay5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10aW1lL3NyYy91dGNZZWFyLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWUvc3JjL3dlZWsuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZS9zcmMveWVhci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10aW1lci9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdGltZXIvc3JjL2ludGVydmFsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy90aW1lb3V0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRpbWVyL3NyYy90aW1lci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9hY3RpdmUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvaW50ZXJydXB0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy9zZWxlY3Rpb24vaW50ZXJydXB0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3NlbGVjdGlvbi90cmFuc2l0aW9uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vYXR0ci5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2F0dHJUd2Vlbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2RlbGF5LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZHVyYXRpb24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9lYXNlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vZWFzZVZhcnlpbmcuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9lbmQuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL2ludGVycG9sYXRlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vbWVyZ2UuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9vbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3JlbW92ZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3NjaGVkdWxlLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2VsZWN0LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2VsZWN0QWxsLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc2VsZWN0aW9uLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vc3R5bGUuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi9zdHlsZVR3ZWVuLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXRyYW5zaXRpb24vc3JjL3RyYW5zaXRpb24vdGV4dC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3RleHRUd2Vlbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy10cmFuc2l0aW9uL3NyYy90cmFuc2l0aW9uL3RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi9ub2RlX21vZHVsZXMvZDMtdHJhbnNpdGlvbi9zcmMvdHJhbnNpdGlvbi90d2Vlbi5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9jb25zdGFudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9ldmVudC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy9ub2V2ZW50LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzLXpvb20vc3JjL3RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy16b29tL3NyYy96b29tLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vbm9kZV9tb2R1bGVzL2QzL2Rpc3QvcGFja2FnZS5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kMy9pbmRleC5qcyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC8uL25vZGVfbW9kdWxlcy9kZWxhdW5hdG9yL2luZGV4LmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0Ly4vdXRpbHMuanMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvLi4vb2dkZi5qcy9vZ2RmLmpzIiwid2VicGFjazovL25ldHYtbGF5b3V0L2lnbm9yZWR8Y3J5cHRvIiwid2VicGFjazovL25ldHYtbGF5b3V0L2lnbm9yZWR8ZnMiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvaWdub3JlZHxwYXRoIiwid2VicGFjazovL25ldHYtbGF5b3V0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL25ldHYtbGF5b3V0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL25ldHYtbGF5b3V0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL25ldHYtbGF5b3V0L3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vbmV0di1sYXlvdXQvd2VicGFjay9ydW50aW1lL25vZGUgbW9kdWxlIGRlY29yYXRvciIsIndlYnBhY2s6Ly9uZXR2LWxheW91dC93ZWJwYWNrL3N0YXJ0dXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELE87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ1ZBO0FBQ0E7QUFDQTtBQUNBOztBQUUrQztBQUNHO0FBQ0E7QUFDVDs7QUFPeEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2ZEO0FBQ0E7QUFDQTtBQUNBOztBQUVpQztBQUNFOztBQUVuQyw0QkFBNEIsMkNBQU07QUFDbEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCwwQ0FBMEM7QUFDL0Y7QUFDQTtBQUNBLGlDQUFpQyx5REFBeUQ7QUFDMUY7QUFDQSwwQkFBMEIsNkNBQ0U7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUFpQjtBQUNqQztBQUNBLDZCQUE2Qiw2Q0FBcUI7QUFDbEQsNkJBQTZCLDZDQUFtQjtBQUNoRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3JEeEI7QUFDQTtBQUNBO0FBQ0E7O0FBRWlDO0FBQ007QUFDSjs7QUFFbkMsd0JBQXdCLDJDQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3REFBd0QsaUJBQWlCOztBQUV6RSxRQUFRLG9DQUFRO0FBQ2hCO0FBQ0E7QUFDQSwrQkFBK0Isd0JBQXdCO0FBQ3ZEO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFD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O0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsbURBQU07QUFDTjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFD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QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFlBQVksNEJBQTRCO0FBQ3hDO0FBQ0E7QUFDQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtB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LEtBQUssRUFBRTs7QUFFUDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLElBQUksSUFBeUQ7QUFDN0Q7QUFDQTtBQUNBLElBQUksc0JBQXNCO0FBQzFCO0FBQ0EsS0FBSyxFQUtKOzs7Ozs7Ozs7Ozs7QUM3RkQsZTs7Ozs7Ozs7OztBQ0FBLGU7Ozs7Ozs7Ozs7QUNBQSxlOzs7Ozs7VUNBQTtVQUNBOztVQUVBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTs7VUFFQTtVQUNBOztVQUVBO1VBQ0E7O1VBRUE7VUFDQTtVQUNBOzs7OztXQ3hCQTtXQUNBO1dBQ0E7V0FDQTtXQUNBO1dBQ0EsZ0NBQWdDLFlBQVk7V0FDNUM7V0FDQSxFOzs7OztXQ1BBO1dBQ0E7V0FDQTtXQUNBO1dBQ0Esd0NBQXdDLHlDQUF5QztXQUNqRjtXQUNBO1dBQ0EsRTs7Ozs7V0NQQSxzRjs7Ozs7V0NBQTtXQUNBO1dBQ0E7V0FDQSxzREFBc0Qsa0JBQWtCO1dBQ3hFO1dBQ0EsK0NBQStDLGNBQWM7V0FDN0QsRTs7Ozs7V0NOQTtXQUNBO1dBQ0E7V0FDQTtXQUNBLEU7Ozs7VUNKQTtVQUNBO1VBQ0E7VUFDQSIsImZpbGUiOiJuZXR2LWxheW91dC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSB7XG5cdFx0dmFyIGEgPSBmYWN0b3J5KCk7XG5cdFx0Zm9yKHZhciBpIGluIGEpICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgPyBleHBvcnRzIDogcm9vdClbaV0gPSBhW2ldO1xuXHR9XG59KShzZWxmLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIvKipcclxuICogQGF1dGhvciBYaWFvZG9uZyBaaGFvIDx6aGFveGlhb2RvbmdAemp1LmVkdS5jbj5cclxuICogQGRlc2NyaXB0aW9uIGNvbGxlY3QgYWxsIGxheW91dCByZWxlYXRlZCBvYmplY3RzIGFuZCBleHBvcnRcclxuICovXHJcblxyXG5pbXBvcnQgeyBSYW5kb21MYXlvdXQgfSBmcm9tICcuL2xheW91dHMvcmFuZG9tJ1xyXG5pbXBvcnQgeyBEM0ZvcmNlTGF5b3V0IH0gZnJvbSAnLi9sYXlvdXRzL2QzLWZvcmNlJ1xyXG5pbXBvcnQgeyBSYWRpYWxUcmVlIH0gZnJvbSAnLi9sYXlvdXRzL3JhZGlhbC10cmVlJ1xyXG5pbXBvcnQgeyBGTTNMYXlvdXQgfSBmcm9tICcuL2xheW91dHMvZm0zJ1xyXG5cclxuZXhwb3J0IHtcclxuICAgIFJhbmRvbUxheW91dCxcclxuICAgIEQzRm9yY2VMYXlvdXQsXHJcbiAgICBSYWRpYWxUcmVlLFxyXG4gICAgRk0zTGF5b3V0LFxyXG59XHJcbiIsIi8qKlxyXG4gKiBAYXV0aG9yIFhpYW9kb25nIFpoYW9cclxuICogQGRlc2NyaXB0aW9uIGQzIGZvcmNlIHdyYXBwZXIgY2xhc3NcclxuICovXHJcblxyXG5pbXBvcnQgeyBMYXlvdXQgfSBmcm9tICcuL2xheW91dCdcclxuaW1wb3J0ICogYXMgZDNGb3JjZSBmcm9tICdkMy1mb3JjZSdcclxuXHJcbmNsYXNzIEQzRm9yY2VMYXlvdXQgZXh0ZW5kcyBMYXlvdXQge1xyXG4gICAgY29uc3RydWN0b3IobmV0dikge1xyXG4gICAgICAgIHN1cGVyKG5ldHYpXHJcblxyXG4gICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5uZXR2LiRfY29uZmlncy53aWR0aFxyXG4gICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMubmV0di4kX2NvbmZpZ3MuaGVpZ2h0XHJcbiAgICAgICAgLy8gdGhpcy5kYXRhID0gdGhpcy5uZXR2LmRhdGEoKSAvLyBUT0RPOiBtYXliZSBuZWVkIGEgZGVlcCBjb3B5XHJcbiAgICAgICAgdGhpcy5kYXRhID0ge1xyXG4gICAgICAgICAgICBub2RlczogdGhpcy5uZXR2Lm5vZGVzKCkubWFwKChub2RlKSA9PiAoeyBpZDogbm9kZS5pZCgpLCB4OiBub2RlLngoKSwgeTogbm9kZS55KCkgfSkpLFxyXG4gICAgICAgICAgICBsaW5rczogdGhpcy5uZXR2XHJcbiAgICAgICAgICAgICAgICAubGlua3MoKVxyXG4gICAgICAgICAgICAgICAgLm1hcCgobGluaykgPT4gKHsgc291cmNlOiBsaW5rLnNvdXJjZSgpLmlkKCksIHRhcmdldDogbGluay50YXJnZXQoKS5pZCgpIH0pKVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNpbXVsYXRpb24gPSBkM0ZvcmNlXHJcbiAgICAgICAgICAgIC5mb3JjZVNpbXVsYXRpb24odGhpcy5kYXRhLm5vZGVzKVxyXG4gICAgICAgICAgICAuZm9yY2UoXHJcbiAgICAgICAgICAgICAgICAnbGluaycsXHJcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgICAgICAgICBkM0ZvcmNlLmZvcmNlTGluayh0aGlzLmRhdGEubGlua3MpLmlkKChkKSA9PiBkLmlkKVxyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgICAgIC5mb3JjZSgnY2hhcmdlJywgZDNGb3JjZS5mb3JjZU1hbnlCb2R5KCkpXHJcbiAgICAgICAgICAgIC5mb3JjZSgnY2VudGVyJywgZDNGb3JjZS5mb3JjZUNlbnRlcih3aWR0aCAvIDIsIGhlaWdodCAvIDIpKVxyXG4gICAgICAgICAgICAuc3RvcCgpIC8vIGRpc2FibGUgYXV0b3N0YXJ0XHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnQoKSB7XHJcbiAgICAgICAgdGhpcy5zaW11bGF0aW9uLm9uKCd0aWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmRhdGEubm9kZXMuZm9yRWFjaCgobikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgbm9kZSA9IHRoaXMubmV0di5nZXROb2RlQnlJZChuLmlkKVxyXG4gICAgICAgICAgICAgICAgbm9kZS54KG4ueClcclxuICAgICAgICAgICAgICAgIG5vZGUueShuLnkpXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB0aGlzLnRpY2tDYWxsYmFjayAmJiB0aGlzLnRpY2tDYWxsYmFjaygpXHJcbiAgICAgICAgfSlcclxuICAgICAgICB0aGlzLnN0YXJ0Q2FsbGJhY2sgJiYgdGhpcy5zdGFydENhbGxiYWNrKClcclxuICAgICAgICB0aGlzLnNpbXVsYXRpb24ucmVzdGFydCgpXHJcbiAgICB9XHJcblxyXG4gICAgc3RvcCgpIHtcclxuICAgICAgICB0aGlzLnNpbXVsYXRpb24uc3RvcCgpXHJcbiAgICAgICAgdGhpcy5zdG9wQ2FsbGJhY2sgJiYgdGhpcy5zdG9wQ2FsbGJhY2soKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBEM0ZvcmNlTGF5b3V0IH1cclxuIiwiLyoqXHJcbiAqIEBhdXRob3IgWGlhb2RvbmcgWmhhb1xyXG4gKiBAZGVzY3JpcHRpb24gRk0zIGxheW91dCB1c2luZyBvZ2RmLmpzKGh0dHBzOi8vZ2l0aHViLmNvbS9CYXNhc3V5YS9vZ2RmLmpzKVxyXG4gKi9cclxuXHJcbmltcG9ydCB7IExheW91dCB9IGZyb20gJy4vbGF5b3V0J1xyXG5pbXBvcnQgeyBsZXJwUG9zaXRpb24gfSBmcm9tICcuLi91dGlscydcclxuaW1wb3J0ICogYXMgaW5pdE9HREYgZnJvbSAnb2dkZi1qcydcclxuXHJcbmNsYXNzIEZNM0xheW91dCBleHRlbmRzIExheW91dCB7XHJcbiAgICAvLyBwcml2YXRlIF90aW1lOiBudW1iZXJcclxuICAgIC8vIHByaXZhdGUgc291cmNlUG9zaXRpb25zOiBQb3NpdGlvbnNcclxuICAgIC8vIHByaXZhdGUgY3VycmVudFBvc2l0aW9uczogUG9zaXRpb25zXHJcbiAgICAvLyBwcml2YXRlIHRhcmdldFBvc2l0aW9uczogUG9zaXRpb25zXHJcblxyXG4gICAgY29uc3RydWN0b3IobmV0dikge1xyXG4gICAgICAgIHN1cGVyKG5ldHYpXHJcbiAgICAgICAgdGhpcy5fdGltZSA9IDEwMDAgLy8gVE9ETzogYWxsIHBhcmFtZXRlcnMsIHJlZmFjdG9yXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBzZXQgdG90YWwgYW5pbWF0aW9uIHRpbWVcclxuICAgICAqIEBwYXJhbSBfdGltZSBcclxuICAgICAqL1xyXG4gICAgdGltZShfdGltZSkge1xyXG4gICAgICAgIHRoaXMuX3RpbWUgPSBfdGltZVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0KCkge1xyXG4gICAgICAgIGNvbnN0IGdyYXBoID0gbmV0di5kYXRhKClcclxuICAgICAgICB0aGlzLnNvdXJjZVBvc2l0aW9ucyA9IGdyYXBoLm5vZGVzLm1hcCgobikgPT4gKHsgeDogbi54LCB5OiBuLnkgfSkpXHJcblxyXG4gICAgICAgIGluaXRPR0RGKClcclxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKE1vZHVsZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGljID0ge31cclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JhcGgubm9kZXMubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZ3JhcGgubm9kZXNbaV1bJ2lkJ10gaW4gZGljKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGVyZSBpcyBhIGJ1ZycpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBkaWNbZ3JhcGgubm9kZXNbaV1bJ2lkJ11dID0gaTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGxldCBub2RlcyA9IGdyYXBoLm5vZGVzLmxlbmd0aFxyXG4gICAgICAgICAgICAgICAgbGV0IGxpbmtzID0gZ3JhcGgubGlua3MubGVuZ3RoXHJcbiAgICAgICAgICAgICAgICBsZXQgc291cmNlID0gTW9kdWxlLl9tYWxsb2MoNCAqIGxpbmtzKTtcclxuICAgICAgICAgICAgICAgIGxldCB0YXJnZXQgPSBNb2R1bGUuX21hbGxvYyg0ICogbGlua3MpO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5rczsgKytpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTW9kdWxlLkhFQVAzMltzb3VyY2UgLyA0ICsgaV0gPSBkaWNbZ3JhcGgubGlua3NbaV0uc291cmNlXTsgTW9kdWxlLkhFQVAzMlt0YXJnZXQgLyA0ICsgaV0gPSBkaWNbZ3JhcGgubGlua3NbaV0udGFyZ2V0XTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG5vZGVzLCBsaW5rcylcclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUudGltZShcInNvcnRcIik7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gTW9kdWxlLl9GTTMobm9kZXMsIGxpbmtzLCBzb3VyY2UsIHRhcmdldCk7XHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLnRpbWVFbmQoXCJzb3J0XCIpO1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ2NvbXBsZXRlIGxheW91dCcpXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGVzOyArK2kpIHtcclxuICAgICAgICAgICAgICAgICAgICBncmFwaC5ub2Rlc1tpXVsneCddID0gTW9kdWxlLkhFQVBGMzJbKHJlc3VsdCA+PiAyKSArIGkgKiAyXVxyXG4gICAgICAgICAgICAgICAgICAgIGdyYXBoLm5vZGVzW2ldWyd5J10gPSBNb2R1bGUuSEVBUEYzMlsocmVzdWx0ID4+IDIpICsgaSAqIDIgKyAxXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIGZvciAobGV0IGkgPSAwOyBpIDwgbGlua3M7ICsraSkge1xyXG4gICAgICAgICAgICAgICAgLy8gZ3JhcGgubGlua3NbaV1bJ3NvdXJjZSddID0gZ3JhcGgubm9kZXNbZGljW2dyYXBoLmxpbmtzW2ldWydzb3VyY2UnXV1dO1xyXG4gICAgICAgICAgICAgICAgLy8gZ3JhcGgubGlua3NbaV1bJ3RhcmdldCddID0gZ3JhcGgubm9kZXNbZGljW2dyYXBoLmxpbmtzW2ldWyd0YXJnZXQnXV1dO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGdyYXBoXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChncmFwaCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50YXJnZXRQb3NpdGlvbnMgPSBncmFwaC5ub2Rlcy5tYXAoKG4pID0+ICh7IHg6IG4ueCwgeTogbi55IH0pKVxyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZ3JhcGgpXHJcblxyXG5cclxuICAgICAgICAgICAgICAgIGxldCBzdGFydCA9IHVuZGVmaW5lZFxyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHN0ZXAgPSAodGltZXN0YW1wKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQgPSB0aW1lc3RhbXBcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydENhbGxiYWNrICYmIHRoaXMuc3RhcnRDYWxsYmFjaygpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsYXBzZWQgPSB0aW1lc3RhbXAgLSBzdGFydFxyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRQb3NpdGlvbnMgPSBsZXJwUG9zaXRpb24oXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc291cmNlUG9zaXRpb25zLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRhcmdldFBvc2l0aW9ucyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxhcHNlZCAvIHRoaXMuX3RpbWVcclxuICAgICAgICAgICAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vZGVzID0gdGhpcy5uZXR2Lm5vZGVzKClcclxuICAgICAgICAgICAgICAgICAgICBub2Rlcy5mb3JFYWNoKChuLCBpKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG4ueCh0aGlzLmN1cnJlbnRQb3NpdGlvbnNbaV0ueClcclxuICAgICAgICAgICAgICAgICAgICAgICAgbi55KHRoaXMuY3VycmVudFBvc2l0aW9uc1tpXS55KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGlja0NhbGxiYWNrICYmIHRoaXMudGlja0NhbGxiYWNrKClcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsYXBzZWQgPCB0aGlzLl90aW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShzdGVwKVxyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RvcENhbGxiYWNrICYmIHRoaXMuc3RvcENhbGxiYWNrKClcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApXHJcblxyXG4gICAgICAgICAgICAgICAgLy8gbmV0di5kYXRhKGdyYXBoKVxyXG4gICAgICAgICAgICAgICAgLy8gbmV0di5kcmF3KClcclxuICAgICAgICAgICAgfSlcclxuICAgIH1cclxuICAgIHN0b3AoKSB7IH1cclxuICAgIGZpbmlzaCgpIHtcclxuICAgICAgICB0aGlzLmNvbXB1dGVQb3NpdGlvbigpXHJcbiAgICAgICAgdGhpcy5jdXJyZW50UG9zaXRpb25zID0gdGhpcy50YXJnZXRQb3NpdGlvbnNcclxuICAgICAgICB0aGlzLmFwcGx5UG9zaXRpb24oKVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogZm9yIHJhbmRvbSBsYXlvdXQsIGNhbiBkaXJlY3RseSBjb21wdXRlIHRhcmdldCBwb3NpdGlvblxyXG4gICAgICovXHJcbiAgICBjb21wdXRlUG9zaXRpb24oKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0UG9zaXRpb25zKSB7XHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBub2RlcyA9IHRoaXMubmV0di5ub2RlcygpXHJcbiAgICAgICAgdGhpcy5zb3VyY2VQb3NpdGlvbnMgPSBub2Rlcy5tYXAoKG4pID0+ICh7IHg6IG4ueCgpLCB5OiBuLnkoKSB9KSlcclxuICAgICAgICAvLyByYW5kb20gdGFyZ2V0IHBvc2l0aW9uXHJcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLm5ldHYuJF9jb25maWdzLndpZHRoXHJcbiAgICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5uZXR2LiRfY29uZmlncy5oZWlnaHRcclxuICAgICAgICB0aGlzLnRhcmdldFBvc2l0aW9ucyA9IEFycmF5KHRoaXMuc291cmNlUG9zaXRpb25zLmxlbmd0aClcclxuICAgICAgICAgICAgLmZpbGwodW5kZWZpbmVkKVxyXG4gICAgICAgICAgICAubWFwKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgeDogTWF0aC5yYW5kb20oKSAqIHdpZHRoLFxyXG4gICAgICAgICAgICAgICAgICAgIHk6IE1hdGgucmFuZG9tKCkgKiBoZWlnaHRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIGFwcGx5IG5ldyBwb3NpdGlvbiB0byBjYW52YXNcclxuICAgICAqL1xyXG4gICAgYXBwbHlQb3NpdGlvbigpIHtcclxuICAgICAgICBjb25zdCBub2RlcyA9IHRoaXMubmV0di5ub2RlcygpXHJcbiAgICAgICAgbm9kZXMuZm9yRWFjaCgobiwgaSkgPT4ge1xyXG4gICAgICAgICAgICBuLngodGhpcy5jdXJyZW50UG9zaXRpb25zW2ldLngpXHJcbiAgICAgICAgICAgIG4ueSh0aGlzLmN1cnJlbnRQb3NpdGlvbnNbaV0ueSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIC8vIHRoaXMubmV0di5kcmF3KClcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgRk0zTGF5b3V0IH1cclxuIiwiLyoqXHJcbiAqIEBhdXRob3IgWGlhb2RvbmcgWmhhb1xyXG4gKiBAZGVzY3JpcHRpb24gQmFzZSBjbGFzcyBvZiBsYXlvdXRcclxuICovXHJcblxyXG5jbGFzcyBMYXlvdXQge1xyXG4gICAgY29uc3RydWN0b3IobmV0dikge1xyXG4gICAgICAgIHRoaXMubmV0diA9IG5ldHZcclxuICAgICAgICB0aGlzLnN0YXJ0Q2FsbGJhY2sgPSAoKSA9PiB7IH1cclxuICAgICAgICB0aGlzLnRpY2tDYWxsYmFjayA9ICgpID0+IHsgfVxyXG4gICAgICAgIHRoaXMuc3RvcENhbGxiYWNrID0gKCkgPT4geyB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnQoKSB7IH1cclxuXHJcbiAgICBzdG9wKCkgeyB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBjYWxsIGZpbmlzaCB0byBkaXJlY3QgZ2V0IGxheW91dCByZXN1bHQsIHdpdGhvdXQgdHJhbnNpdGlvbiBhbmltYXRpb25cclxuICAgICAqL1xyXG4gICAgZmluaXNoKCkgeyB9XHJcblxyXG4gICAgb25TdGFydChjYikge1xyXG4gICAgICAgIHRoaXMuc3RhcnRDYWxsYmFjayA9IGNiXHJcbiAgICB9XHJcbiAgICBvblRpY2soY2IpIHtcclxuICAgICAgICB0aGlzLnRpY2tDYWxsYmFjayA9IGNiXHJcbiAgICB9XHJcbiAgICBvblN0b3AoY2IpIHtcclxuICAgICAgICB0aGlzLnN0b3BDYWxsYmFjayA9IGNiXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IExheW91dCB9XHJcbiIsImltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJ1xyXG5pbXBvcnQgeyBMYXlvdXQgfSBmcm9tICcuL2xheW91dCdcclxuaW1wb3J0IHsgbGVycFBvc2l0aW9uIH0gZnJvbSAnLi4vdXRpbHMnXHJcblxyXG5mdW5jdGlvbiByYWRpYWxMYXlvdXQoZ3JhcGgsIHJvb3RJZCwgY29uZmlncykge1xyXG4gICAgY29uc3QgeyBkaXJlY3RlZCA9IGZhbHNlLCBjZW50ZXJYLCBjZW50ZXJZLCByYWRpdXMgfSA9IGNvbmZpZ3NcclxuICAgIGNvbnN0IHRyZWVzID0gZ3JhcGhCRlMoZ3JhcGgsIHJvb3RJZCwgZGlyZWN0ZWQpXHJcbiAgICBjb25zdCB0cmVlID0gdHJlZXNbMF1cclxuICAgIGdyYXBoLmxpbmtzID0gW11cclxuICAgIGFwcGx5UmFkaWFsVHJlZUdyYXBoKGdyYXBoLCB0cmVlLCBjZW50ZXJYLCBjZW50ZXJZLCByYWRpdXMpXHJcbiAgICByZXR1cm4gZ3JhcGhcclxufVxyXG5cclxuZnVuY3Rpb24gcmFkaWFsTGF5b3V0TXVsdGlwbGUoZ3JhcGgsIHJvb3RJZCwgY29uZmlncykge1xyXG4gICAgY29uc3QgeyBkaXJlY3RlZCA9IGZhbHNlLCB3aWR0aCwgaGVpZ2h0IH0gPSBjb25maWdzXHJcblxyXG4gICAgY29uc3QgdHJlZXMgPSBncmFwaEJGUyhncmFwaCwgcm9vdElkLCBkaXJlY3RlZClcclxuICAgIGNvbnN0IHRyZWVzRGVncmVlID0gdHJlZXMubWFwKHRyZWUgPT4gdHJlZS5kZWdyZWUpXHJcbiAgICBjb25zdCBidWJibGVQb3NpdGlvbnMgPSBjb21wdXRlQnViYmxlTGF5b3V0UG9zaXRpb24odHJlZXNEZWdyZWUsIHdpZHRoLCBoZWlnaHQpXHJcblxyXG4gICAgZ3JhcGgubGlua3MgPSBbXVxyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdHJlZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBhcHBseVJhZGlhbFRyZWVHcmFwaChncmFwaCwgdHJlZXNbaV0sIGJ1YmJsZVBvc2l0aW9uc1tpXS54LCBidWJibGVQb3NpdGlvbnNbaV0ueSwgYnViYmxlUG9zaXRpb25zW2ldLnIpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gZ3JhcGhcclxufVxyXG5cclxuZnVuY3Rpb24gYXBwbHlSYWRpYWxUcmVlR3JhcGgoZ3JhcGgsIHRyZWUsIGNlbnRlclgsIGNlbnRlclksIHJhZGl1cykge1xyXG4gICAgY29uc3QgbGlua3MgPSBnZXRUcmVlTGlua3ModHJlZSlcclxuICAgIGdyYXBoLmxpbmtzLnB1c2goLi4ubGlua3MpXHJcblxyXG4gICAgY29uc3QgaGllcmFjaHkgPSBkMy5oaWVyYXJjaHkodHJlZSlcclxuICAgICAgICAuc29ydCgoYSwgYikgPT4gZDMuYXNjZW5kaW5nKGEuZGF0YS5pZCwgYi5kYXRhLmlkKSlcclxuXHJcbiAgICBjb25zdCBkM3RyZWUgPSBkMy50cmVlKClcclxuICAgICAgICAuc2l6ZShbMiAqIE1hdGguUEksIHJhZGl1c10pXHJcbiAgICAgICAgLnNlcGFyYXRpb24oKGEsIGIpID0+IChhLnBhcmVudCA9PSBiLnBhcmVudCA/IDEgOiAyKSAvIGEuZGVwdGgpXHJcbiAgICBkM3RyZWUoaGllcmFjaHkpXHJcbiAgICAvLyBjb25zb2xlLmxvZyhoaWVyYWNoeSlcclxuXHJcbiAgICBjb25zdCBub2RlTWFwID0ge31cclxuICAgIGZvciAoY29uc3Qgbm9kZSBvZiBncmFwaC5ub2Rlcykge1xyXG4gICAgICAgIG5vZGVNYXBbbm9kZS5pZF0gPSBub2RlXHJcbiAgICB9XHJcblxyXG4gICAgLy8gYmZzIGhpZXJhY2h5XHJcbiAgICBjb25zdCBxdWV1ZSA9IFtoaWVyYWNoeV1cclxuXHJcbiAgICB3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGNvbnN0IGN1cnIgPSBxdWV1ZS5zaGlmdCgpXHJcbiAgICAgICAgY29uc3QgZGVncmVlID0gY3Vyci54XHJcbiAgICAgICAgY29uc3QgcmFkaXVzID0gY3Vyci55XHJcbiAgICAgICAgY29uc3QgeCA9IGNlbnRlclggKyByYWRpdXMgKiBNYXRoLmNvcyhkZWdyZWUpXHJcbiAgICAgICAgY29uc3QgeSA9IGNlbnRlclkgKyByYWRpdXMgKiBNYXRoLnNpbihkZWdyZWUpXHJcbiAgICAgICAgbm9kZU1hcFtjdXJyLmRhdGEuaWRdLnggPSB4XHJcbiAgICAgICAgbm9kZU1hcFtjdXJyLmRhdGEuaWRdLnkgPSB5XHJcblxyXG4gICAgICAgIGlmICghY3Vyci5jaGlsZHJlbikgY29udGludWVcclxuXHJcbiAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBjdXJyLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgIHF1ZXVlLnB1c2goY2hpbGQpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBncmFwaFxyXG59XHJcblxyXG5mdW5jdGlvbiBwYWNrKGRhdGEsIHdpZHRoLCBoZWlnaHQsIHBhZGRpbmcsIHZhbHVlRnVuYykge1xyXG4gICAgcmV0dXJuIGQzLnBhY2soKVxyXG4gICAgICAgIC5zaXplKFt3aWR0aCAtIHBhZGRpbmcsIGhlaWdodCAtIHBhZGRpbmddKVxyXG4gICAgICAgIC5wYWRkaW5nKHBhZGRpbmcpXHJcbiAgICAgICAgKGQzLmhpZXJhcmNoeSh7IGNoaWxkcmVuOiBkYXRhIH0pXHJcbiAgICAgICAgICAgIC5zdW0odmFsdWVGdW5jKSlcclxufVxyXG5cclxuZnVuY3Rpb24gY29tcHV0ZUJ1YmJsZUxheW91dFBvc2l0aW9uKGRhdGEsIHdpZHRoLCBoZWlnaHQpIHtcclxuICAgIGNvbnN0IGJ1YmJsZXMgPSBwYWNrKGRhdGEsIHdpZHRoLCBoZWlnaHQsIDIwLCAoZCkgPT4gKChkICogMTAgKyAyKSAqKiAyKSlcclxuICAgIHJldHVybiBidWJibGVzLmNoaWxkcmVuLm1hcCh4ID0+ICh7IHg6IHgueCwgeTogeC55LCByOiB4LnIgfSkpXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldFRyZWVMaW5rcyh0cmVlKSB7XHJcbiAgICBjb25zdCBsaW5rcyA9IFtdXHJcbiAgICBjb25zdCBxdWV1ZSA9IFt0cmVlXVxyXG5cclxuICAgIHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgY29uc3QgY3VyciA9IHF1ZXVlLnNoaWZ0KClcclxuICAgICAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGN1cnIuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgbGlua3MucHVzaCh7IHNvdXJjZTogY3Vyci5pZCwgdGFyZ2V0OiBjaGlsZC5pZCB9KVxyXG4gICAgICAgICAgICBxdWV1ZS5wdXNoKGNoaWxkKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbGlua3NcclxufVxyXG5cclxuZnVuY3Rpb24gcm9vdEJhc2VCRlMoYWRqTm9kZXMsIHJvb3RJZCwgdmlzaXRlZFNldCkge1xyXG4gICAgdmlzaXRlZFNldC5hZGQocm9vdElkKVxyXG5cclxuICAgIGNvbnN0IHF1ZXVlID0gW11cclxuICAgIGNvbnN0IHRyZWUgPSB7IGlkOiByb290SWQsIGRlcHRoOiAwLCBwYXJlbnQ6IG51bGwsIGNoaWxkcmVuOiBbXSB9XHJcbiAgICBxdWV1ZS5wdXNoKHRyZWUpXHJcblxyXG4gICAgbGV0IGRlZ3JlZSA9IDBcclxuICAgIHdoaWxlIChxdWV1ZS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgY29uc3QgeCA9IHF1ZXVlLnNoaWZ0KClcclxuICAgICAgICBkZWdyZWUgPSBNYXRoLm1heChkZWdyZWUsIHguZGVwdGgpXHJcbiAgICAgICAgaWYgKCFhZGpOb2Rlc1t4LmlkXSkgY29udGludWVcclxuICAgICAgICBmb3IgKGNvbnN0IHlJZCBvZiBhZGpOb2Rlc1t4LmlkXSkge1xyXG4gICAgICAgICAgICBpZiAodmlzaXRlZFNldC5oYXMoeUlkKSkgY29udGludWVcclxuICAgICAgICAgICAgY29uc3QgeSA9IHsgaWQ6IHlJZCwgZGVwdGg6IHguZGVwdGggKyAxLCBwYXJlbnQ6IHgsIGNoaWxkcmVuOiBbXSB9XHJcbiAgICAgICAgICAgIHguY2hpbGRyZW4ucHVzaCh5KVxyXG4gICAgICAgICAgICBxdWV1ZS5wdXNoKHkpXHJcbiAgICAgICAgICAgIHZpc2l0ZWRTZXQuYWRkKHlJZClcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdHJlZS5kZWdyZWUgPSBkZWdyZWUgLy8gTk9URTogb25seSByb290IG5vZGUgb2YgdHJlZSBoYXMgZGVncmVlIGF0dHJpYnV0ZVxyXG5cclxuICAgIHJldHVybiB0cmVlXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdyYXBoQkZTKGdyYXBoLCByb290SWQsIGRpcmVjdGVkID0gZmFsc2UpIHtcclxuICAgIC8vIGNvbnN0cnVjdCBhZGphY2llbnQgcmVsYXRpb25cclxuICAgIGNvbnN0IGFkak5vZGVzID0ge31cclxuICAgIGZvciAoY29uc3QgeyBzb3VyY2UsIHRhcmdldCB9IG9mIGdyYXBoLmxpbmtzKSB7XHJcbiAgICAgICAgaWYgKCEoc291cmNlIGluIGFkak5vZGVzKSkge1xyXG4gICAgICAgICAgICBhZGpOb2Rlc1tzb3VyY2VdID0gbmV3IFNldCgpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGFkak5vZGVzW3NvdXJjZV0uYWRkKHRhcmdldClcclxuXHJcbiAgICAgICAgLy8gY29uc2lkZXIgdW5kaXJlY3RlZCBncmFwaFxyXG4gICAgICAgIGlmICghZGlyZWN0ZWQpIHtcclxuICAgICAgICAgICAgaWYgKCEodGFyZ2V0IGluIGFkak5vZGVzKSkge1xyXG4gICAgICAgICAgICAgICAgYWRqTm9kZXNbdGFyZ2V0XSA9IG5ldyBTZXQoKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGFkak5vZGVzW3RhcmdldF0uYWRkKHNvdXJjZSlcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHRyZWVzID0gW11cclxuICAgIGNvbnN0IHZpc2l0ZWRTZXQgPSBuZXcgU2V0KClcclxuICAgIHRyZWVzLnB1c2gocm9vdEJhc2VCRlMoYWRqTm9kZXMsIHJvb3RJZCwgdmlzaXRlZFNldCkpXHJcblxyXG4gICAgZm9yIChjb25zdCBub2RlIG9mIGdyYXBoLm5vZGVzKSB7XHJcbiAgICAgICAgaWYgKCF2aXNpdGVkU2V0Lmhhcyhub2RlLmlkKSkge1xyXG4gICAgICAgICAgICB0cmVlcy5wdXNoKHJvb3RCYXNlQkZTKGFkak5vZGVzLCBub2RlLmlkLCB2aXNpdGVkU2V0KSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRyZWVzXHJcbn1cclxuXHJcbi8vIE5PVEU6IG5vdCB1c2VkLCBjb21wdXRlIGRlcHRoIGR1cmluZyBCRlNcclxuZnVuY3Rpb24gY29tcHV0ZVRyZWVEZXB0aCh0cmVlKSB7XHJcbiAgICBsZXQgZGVwdGggPSAwXHJcbiAgICBsZXQgcCA9IHRyZWVcclxuICAgIGxldCBxID0gW3BdXHJcbiAgICB3aGlsZSAocS5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgbGV0IHFxID0gW11cclxuICAgICAgICBmb3IgKGNvbnN0IHggb2YgcSkge1xyXG4gICAgICAgICAgICBpZiAoeC5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCB5IG9mIHguY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgICAgICBxcS5wdXNoKHkpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHFxLmxlbmd0aCA+IDApIGRlcHRoICs9IDFcclxuICAgICAgICBxID0gcXFcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gZGVwdGhcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFJhZGlhbFRyZWUgZXh0ZW5kcyBMYXlvdXQge1xyXG4gICAgY29uc3RydWN0b3IobmV0diwgcGFyYW1ldGVycykge1xyXG4gICAgICAgIHN1cGVyKG5ldHYpXHJcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzID0gcGFyYW1ldGVyc1xyXG4gICAgICAgIHRoaXMuX3RpbWUgPSAxMDAwIC8vIFRPRE86IGFsbCBwYXJhbWV0ZXJzLCByZWZhY3RvclxyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0KCkge1xyXG4gICAgICAgIGNvbnN0IGdyYXBoID0gdGhpcy5uZXR2LmRhdGEoKVxyXG5cclxuICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICAgIHJvb3RJRCxcclxuICAgICAgICAgICAgZGlyZWN0ZWQgPSBmYWxzZSxcclxuICAgICAgICB9ID0gdGhpcy5wYXJhbWV0ZXJzXHJcblxyXG4gICAgICAgIHRoaXMuc291cmNlUG9zaXRpb25zID0gZ3JhcGgubm9kZXMubWFwKChuKSA9PiAoeyB4OiBuLngsIHk6IG4ueSB9KSlcclxuXHJcbiAgICAgICAgY29uc3QgbmV3R3JhcGggPSByYWRpYWxMYXlvdXRNdWx0aXBsZShncmFwaCwgdGhpcy5wYXJhbWV0ZXJzLnJvb3RJRCwge1xyXG4gICAgICAgICAgICBkaXJlY3RlZCxcclxuICAgICAgICAgICAgd2lkdGg6IHRoaXMubmV0di4kX2NvbmZpZ3Mud2lkdGgsXHJcbiAgICAgICAgICAgIGhlaWdodDogdGhpcy5uZXR2LiRfY29uZmlncy5oZWlnaHRcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICB0aGlzLnRhcmdldFBvc2l0aW9ucyA9IG5ld0dyYXBoLm5vZGVzLm1hcCgobikgPT4gKHsgeDogbi54LCB5OiBuLnkgfSkpXHJcblxyXG4gICAgICAgIC8vIG5ldHYuZHJhdygpXHJcblxyXG4gICAgICAgIGxldCBzdGFydCA9IHVuZGVmaW5lZFxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBhbmltYXRpb24gc3RlcFxyXG4gICAgICAgICAqIEBwYXJhbSB0aW1lc3RhbXAgXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3Qgc3RlcCA9ICh0aW1lc3RhbXApID0+IHtcclxuICAgICAgICAgICAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0ID0gdGltZXN0YW1wXHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0Q2FsbGJhY2sgJiYgdGhpcy5zdGFydENhbGxiYWNrKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBlbGFwc2VkID0gdGltZXN0YW1wIC0gc3RhcnRcclxuXHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFBvc2l0aW9ucyA9IGxlcnBQb3NpdGlvbihcclxuICAgICAgICAgICAgICAgIHRoaXMuc291cmNlUG9zaXRpb25zLFxyXG4gICAgICAgICAgICAgICAgdGhpcy50YXJnZXRQb3NpdGlvbnMsXHJcbiAgICAgICAgICAgICAgICBlbGFwc2VkIC8gdGhpcy5fdGltZVxyXG4gICAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgICBjb25zdCBub2RlcyA9IHRoaXMubmV0di5ub2RlcygpXHJcbiAgICAgICAgICAgIG5vZGVzLmZvckVhY2goKG4sIGkpID0+IHtcclxuICAgICAgICAgICAgICAgIG4ueCh0aGlzLmN1cnJlbnRQb3NpdGlvbnNbaV0ueClcclxuICAgICAgICAgICAgICAgIG4ueSh0aGlzLmN1cnJlbnRQb3NpdGlvbnNbaV0ueSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIHRoaXMudGlja0NhbGxiYWNrICYmIHRoaXMudGlja0NhbGxiYWNrKClcclxuXHJcbiAgICAgICAgICAgIGlmIChlbGFwc2VkIDwgdGhpcy5fdGltZSkge1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0b3BDYWxsYmFjayAmJiB0aGlzLnN0b3BDYWxsYmFjaygpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShzdGVwKVxyXG4gICAgfVxyXG59XHJcbiIsIi8qKlxyXG4gKiBAYXV0aG9yIFhpYW9kb25nIFpoYW9cclxuICogQGRlc2NyaXB0aW9uIHJhbmRvbSBsYXlvdXQgY2xhc3NcclxuICovXHJcblxyXG5pbXBvcnQgeyBMYXlvdXQgfSBmcm9tICcuL2xheW91dCdcclxuaW1wb3J0IHsgbGVycFBvc2l0aW9uIH0gZnJvbSAnLi4vdXRpbHMnXHJcblxyXG5jbGFzcyBSYW5kb21MYXlvdXQgZXh0ZW5kcyBMYXlvdXQge1xyXG4gICAgLy8gcHJpdmF0ZSBfdGltZTogbnVtYmVyXHJcbiAgICAvLyBwcml2YXRlIHNvdXJjZVBvc2l0aW9uczogUG9zaXRpb25zXHJcbiAgICAvLyBwcml2YXRlIGN1cnJlbnRQb3NpdGlvbnM6IFBvc2l0aW9uc1xyXG4gICAgLy8gcHJpdmF0ZSB0YXJnZXRQb3NpdGlvbnM6IFBvc2l0aW9uc1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG5ldHYpIHtcclxuICAgICAgICBzdXBlcihuZXR2KVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogc2V0IHRvdGFsIGFuaW1hdGlvbiB0aW1lXHJcbiAgICAgKiBAcGFyYW0gX3RpbWUgXHJcbiAgICAgKi9cclxuICAgIHRpbWUoX3RpbWUpIHtcclxuICAgICAgICB0aGlzLl90aW1lID0gX3RpbWVcclxuICAgIH1cclxuXHJcbiAgICBzdGFydCgpIHtcclxuICAgICAgICB0aGlzLmNvbXB1dGVQb3NpdGlvbigpXHJcblxyXG4gICAgICAgIGxldCBzdGFydCA9IHVuZGVmaW5lZFxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBhbmltYXRpb24gc3RlcFxyXG4gICAgICAgICAqIEBwYXJhbSB0aW1lc3RhbXAgXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3Qgc3RlcCA9ICh0aW1lc3RhbXApID0+IHtcclxuICAgICAgICAgICAgaWYgKHN0YXJ0ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0ID0gdGltZXN0YW1wXHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0Q2FsbGJhY2sgJiYgdGhpcy5zdGFydENhbGxiYWNrKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCBlbGFwc2VkID0gdGltZXN0YW1wIC0gc3RhcnRcclxuXHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFBvc2l0aW9ucyA9IGxlcnBQb3NpdGlvbihcclxuICAgICAgICAgICAgICAgIHRoaXMuc291cmNlUG9zaXRpb25zLFxyXG4gICAgICAgICAgICAgICAgdGhpcy50YXJnZXRQb3NpdGlvbnMsXHJcbiAgICAgICAgICAgICAgICBlbGFwc2VkIC8gdGhpcy5fdGltZVxyXG4gICAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgICB0aGlzLmFwcGx5UG9zaXRpb24oKVxyXG5cclxuICAgICAgICAgICAgdGhpcy50aWNrQ2FsbGJhY2sgJiYgdGhpcy50aWNrQ2FsbGJhY2soKVxyXG5cclxuICAgICAgICAgICAgaWYgKGVsYXBzZWQgPCB0aGlzLl90aW1lKSB7XHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcClcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RvcENhbGxiYWNrICYmIHRoaXMuc3RvcENhbGxiYWNrKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApXHJcbiAgICB9XHJcbiAgICBzdG9wKCkgeyB9XHJcbiAgICBmaW5pc2goKSB7XHJcbiAgICAgICAgdGhpcy5jb21wdXRlUG9zaXRpb24oKVxyXG4gICAgICAgIHRoaXMuY3VycmVudFBvc2l0aW9ucyA9IHRoaXMudGFyZ2V0UG9zaXRpb25zXHJcbiAgICAgICAgdGhpcy5hcHBseVBvc2l0aW9uKClcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIGZvciByYW5kb20gbGF5b3V0LCBjYW4gZGlyZWN0bHkgY29tcHV0ZSB0YXJnZXQgcG9zaXRpb25cclxuICAgICAqL1xyXG4gICAgY29tcHV0ZVBvc2l0aW9uKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnRhcmdldFBvc2l0aW9ucykge1xyXG4gICAgICAgICAgICByZXR1cm5cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgbm9kZXMgPSB0aGlzLm5ldHYubm9kZXMoKVxyXG4gICAgICAgIHRoaXMuc291cmNlUG9zaXRpb25zID0gbm9kZXMubWFwKChuKSA9PiAoeyB4OiBuLngoKSwgeTogbi55KCkgfSkpXHJcbiAgICAgICAgLy8gcmFuZG9tIHRhcmdldCBwb3NpdGlvblxyXG4gICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5uZXR2LiRfY29uZmlncy53aWR0aFxyXG4gICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMubmV0di4kX2NvbmZpZ3MuaGVpZ2h0XHJcbiAgICAgICAgdGhpcy50YXJnZXRQb3NpdGlvbnMgPSBBcnJheSh0aGlzLnNvdXJjZVBvc2l0aW9ucy5sZW5ndGgpXHJcbiAgICAgICAgICAgIC5maWxsKHVuZGVmaW5lZClcclxuICAgICAgICAgICAgLm1hcCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHg6IE1hdGgucmFuZG9tKCkgKiB3aWR0aCxcclxuICAgICAgICAgICAgICAgICAgICB5OiBNYXRoLnJhbmRvbSgpICogaGVpZ2h0XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBhcHBseSBuZXcgcG9zaXRpb24gdG8gY2FudmFzXHJcbiAgICAgKi9cclxuICAgIGFwcGx5UG9zaXRpb24oKSB7XHJcbiAgICAgICAgY29uc3Qgbm9kZXMgPSB0aGlzLm5ldHYubm9kZXMoKVxyXG4gICAgICAgIG5vZGVzLmZvckVhY2goKG4sIGkpID0+IHtcclxuICAgICAgICAgICAgbi54KHRoaXMuY3VycmVudFBvc2l0aW9uc1tpXS54KVxyXG4gICAgICAgICAgICBuLnkodGhpcy5jdXJyZW50UG9zaXRpb25zW2ldLnkpXHJcbiAgICAgICAgfSlcclxuICAgICAgICAvLyB0aGlzLm5ldHYuZHJhdygpXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IFJhbmRvbUxheW91dCB9XHJcbiIsInZhciBhcnJheSA9IEFycmF5LnByb3RvdHlwZTtcblxuZXhwb3J0IHZhciBzbGljZSA9IGFycmF5LnNsaWNlO1xuZXhwb3J0IHZhciBtYXAgPSBhcnJheS5tYXA7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhIDwgYiA/IC0xIDogYSA+IGIgPyAxIDogYSA+PSBiID8gMCA6IE5hTjtcbn1cbiIsImltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5LmpzXCI7XG5pbXBvcnQgYmlzZWN0IGZyb20gXCIuL2Jpc2VjdC5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgZXh0ZW50IGZyb20gXCIuL2V4dGVudC5qc1wiO1xuaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuL2lkZW50aXR5LmpzXCI7XG5pbXBvcnQgbmljZSBmcm9tIFwiLi9uaWNlLmpzXCI7XG5pbXBvcnQgdGlja3MsIHt0aWNrSW5jcmVtZW50fSBmcm9tIFwiLi90aWNrcy5qc1wiO1xuaW1wb3J0IHN0dXJnZXMgZnJvbSBcIi4vdGhyZXNob2xkL3N0dXJnZXMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciB2YWx1ZSA9IGlkZW50aXR5LFxuICAgICAgZG9tYWluID0gZXh0ZW50LFxuICAgICAgdGhyZXNob2xkID0gc3R1cmdlcztcblxuICBmdW5jdGlvbiBoaXN0b2dyYW0oZGF0YSkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShkYXRhKSkgZGF0YSA9IEFycmF5LmZyb20oZGF0YSk7XG5cbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IGRhdGEubGVuZ3RoLFxuICAgICAgICB4LFxuICAgICAgICB2YWx1ZXMgPSBuZXcgQXJyYXkobik7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICB2YWx1ZXNbaV0gPSB2YWx1ZShkYXRhW2ldLCBpLCBkYXRhKTtcbiAgICB9XG5cbiAgICB2YXIgeHogPSBkb21haW4odmFsdWVzKSxcbiAgICAgICAgeDAgPSB4elswXSxcbiAgICAgICAgeDEgPSB4elsxXSxcbiAgICAgICAgdHogPSB0aHJlc2hvbGQodmFsdWVzLCB4MCwgeDEpO1xuXG4gICAgLy8gQ29udmVydCBudW1iZXIgb2YgdGhyZXNob2xkcyBpbnRvIHVuaWZvcm0gdGhyZXNob2xkcywgYW5kIG5pY2UgdGhlXG4gICAgLy8gZGVmYXVsdCBkb21haW4gYWNjb3JkaW5nbHkuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHR6KSkge1xuICAgICAgY29uc3QgbWF4ID0geDEsIHRuID0gK3R6O1xuICAgICAgaWYgKGRvbWFpbiA9PT0gZXh0ZW50KSBbeDAsIHgxXSA9IG5pY2UoeDAsIHgxLCB0bik7XG4gICAgICB0eiA9IHRpY2tzKHgwLCB4MSwgdG4pO1xuXG4gICAgICAvLyBJZiB0aGUgbGFzdCB0aHJlc2hvbGQgaXMgY29pbmNpZGVudCB3aXRoIHRoZSBkb21haW7igJlzIHVwcGVyIGJvdW5kLCB0aGVcbiAgICAgIC8vIGxhc3QgYmluIHdpbGwgYmUgemVyby13aWR0aC4gSWYgdGhlIGRlZmF1bHQgZG9tYWluIGlzIHVzZWQsIGFuZCB0aGlzXG4gICAgICAvLyBsYXN0IHRocmVzaG9sZCBpcyBjb2luY2lkZW50IHdpdGggdGhlIG1heGltdW0gaW5wdXQgdmFsdWUsIHdlIGNhblxuICAgICAgLy8gZXh0ZW5kIHRoZSBuaWNlZCB1cHBlciBib3VuZCBieSBvbmUgdGljayB0byBlbnN1cmUgdW5pZm9ybSBiaW4gd2lkdGhzO1xuICAgICAgLy8gb3RoZXJ3aXNlLCB3ZSBzaW1wbHkgcmVtb3ZlIHRoZSBsYXN0IHRocmVzaG9sZC4gTm90ZSB0aGF0IHdlIGRvbuKAmXRcbiAgICAgIC8vIGNvZXJjZSB2YWx1ZXMgb3IgdGhlIGRvbWFpbiB0byBudW1iZXJzLCBhbmQgdGh1cyBtdXN0IGJlIGNhcmVmdWwgdG9cbiAgICAgIC8vIGNvbXBhcmUgb3JkZXIgKD49KSByYXRoZXIgdGhhbiBzdHJpY3QgZXF1YWxpdHkgKD09PSkhXG4gICAgICBpZiAodHpbdHoubGVuZ3RoIC0gMV0gPj0geDEpIHtcbiAgICAgICAgaWYgKG1heCA+PSB4MSAmJiBkb21haW4gPT09IGV4dGVudCkge1xuICAgICAgICAgIGNvbnN0IHN0ZXAgPSB0aWNrSW5jcmVtZW50KHgwLCB4MSwgdG4pO1xuICAgICAgICAgIGlmIChpc0Zpbml0ZShzdGVwKSkge1xuICAgICAgICAgICAgaWYgKHN0ZXAgPiAwKSB7XG4gICAgICAgICAgICAgIHgxID0gKE1hdGguZmxvb3IoeDEgLyBzdGVwKSArIDEpICogc3RlcDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc3RlcCA8IDApIHtcbiAgICAgICAgICAgICAgeDEgPSAoTWF0aC5jZWlsKHgxICogLXN0ZXApICsgMSkgLyAtc3RlcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdHoucG9wKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZW1vdmUgYW55IHRocmVzaG9sZHMgb3V0c2lkZSB0aGUgZG9tYWluLlxuICAgIHZhciBtID0gdHoubGVuZ3RoO1xuICAgIHdoaWxlICh0elswXSA8PSB4MCkgdHouc2hpZnQoKSwgLS1tO1xuICAgIHdoaWxlICh0elttIC0gMV0gPiB4MSkgdHoucG9wKCksIC0tbTtcblxuICAgIHZhciBiaW5zID0gbmV3IEFycmF5KG0gKyAxKSxcbiAgICAgICAgYmluO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSBiaW5zLlxuICAgIGZvciAoaSA9IDA7IGkgPD0gbTsgKytpKSB7XG4gICAgICBiaW4gPSBiaW5zW2ldID0gW107XG4gICAgICBiaW4ueDAgPSBpID4gMCA/IHR6W2kgLSAxXSA6IHgwO1xuICAgICAgYmluLngxID0gaSA8IG0gPyB0eltpXSA6IHgxO1xuICAgIH1cblxuICAgIC8vIEFzc2lnbiBkYXRhIHRvIGJpbnMgYnkgdmFsdWUsIGlnbm9yaW5nIGFueSBvdXRzaWRlIHRoZSBkb21haW4uXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgeCA9IHZhbHVlc1tpXTtcbiAgICAgIGlmICh4MCA8PSB4ICYmIHggPD0geDEpIHtcbiAgICAgICAgYmluc1tiaXNlY3QodHosIHgsIDAsIG0pXS5wdXNoKGRhdGFbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBiaW5zO1xuICB9XG5cbiAgaGlzdG9ncmFtLnZhbHVlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHZhbHVlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgaGlzdG9ncmFtKSA6IHZhbHVlO1xuICB9O1xuXG4gIGhpc3RvZ3JhbS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChbX1swXSwgX1sxXV0pLCBoaXN0b2dyYW0pIDogZG9tYWluO1xuICB9O1xuXG4gIGhpc3RvZ3JhbS50aHJlc2hvbGRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRocmVzaG9sZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogQXJyYXkuaXNBcnJheShfKSA/IGNvbnN0YW50KHNsaWNlLmNhbGwoXykpIDogY29uc3RhbnQoXyksIGhpc3RvZ3JhbSkgOiB0aHJlc2hvbGQ7XG4gIH07XG5cbiAgcmV0dXJuIGhpc3RvZ3JhbTtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5pbXBvcnQgYmlzZWN0b3IgZnJvbSBcIi4vYmlzZWN0b3IuanNcIjtcbmltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyLmpzXCI7XG5cbmNvbnN0IGFzY2VuZGluZ0Jpc2VjdCA9IGJpc2VjdG9yKGFzY2VuZGluZyk7XG5leHBvcnQgY29uc3QgYmlzZWN0UmlnaHQgPSBhc2NlbmRpbmdCaXNlY3QucmlnaHQ7XG5leHBvcnQgY29uc3QgYmlzZWN0TGVmdCA9IGFzY2VuZGluZ0Jpc2VjdC5sZWZ0O1xuZXhwb3J0IGNvbnN0IGJpc2VjdENlbnRlciA9IGJpc2VjdG9yKG51bWJlcikuY2VudGVyO1xuZXhwb3J0IGRlZmF1bHQgYmlzZWN0UmlnaHQ7XG4iLCJpbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihmKSB7XG4gIGxldCBkZWx0YSA9IGY7XG4gIGxldCBjb21wYXJlID0gZjtcblxuICBpZiAoZi5sZW5ndGggPT09IDEpIHtcbiAgICBkZWx0YSA9IChkLCB4KSA9PiBmKGQpIC0geDtcbiAgICBjb21wYXJlID0gYXNjZW5kaW5nQ29tcGFyYXRvcihmKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxlZnQoYSwgeCwgbG8sIGhpKSB7XG4gICAgaWYgKGxvID09IG51bGwpIGxvID0gMDtcbiAgICBpZiAoaGkgPT0gbnVsbCkgaGkgPSBhLmxlbmd0aDtcbiAgICB3aGlsZSAobG8gPCBoaSkge1xuICAgICAgY29uc3QgbWlkID0gKGxvICsgaGkpID4+PiAxO1xuICAgICAgaWYgKGNvbXBhcmUoYVttaWRdLCB4KSA8IDApIGxvID0gbWlkICsgMTtcbiAgICAgIGVsc2UgaGkgPSBtaWQ7XG4gICAgfVxuICAgIHJldHVybiBsbztcbiAgfVxuXG4gIGZ1bmN0aW9uIHJpZ2h0KGEsIHgsIGxvLCBoaSkge1xuICAgIGlmIChsbyA9PSBudWxsKSBsbyA9IDA7XG4gICAgaWYgKGhpID09IG51bGwpIGhpID0gYS5sZW5ndGg7XG4gICAgd2hpbGUgKGxvIDwgaGkpIHtcbiAgICAgIGNvbnN0IG1pZCA9IChsbyArIGhpKSA+Pj4gMTtcbiAgICAgIGlmIChjb21wYXJlKGFbbWlkXSwgeCkgPiAwKSBoaSA9IG1pZDtcbiAgICAgIGVsc2UgbG8gPSBtaWQgKyAxO1xuICAgIH1cbiAgICByZXR1cm4gbG87XG4gIH1cblxuICBmdW5jdGlvbiBjZW50ZXIoYSwgeCwgbG8sIGhpKSB7XG4gICAgaWYgKGxvID09IG51bGwpIGxvID0gMDtcbiAgICBpZiAoaGkgPT0gbnVsbCkgaGkgPSBhLmxlbmd0aDtcbiAgICBjb25zdCBpID0gbGVmdChhLCB4LCBsbywgaGkgLSAxKTtcbiAgICByZXR1cm4gaSA+IGxvICYmIGRlbHRhKGFbaSAtIDFdLCB4KSA+IC1kZWx0YShhW2ldLCB4KSA/IGkgLSAxIDogaTtcbiAgfVxuXG4gIHJldHVybiB7bGVmdCwgY2VudGVyLCByaWdodH07XG59XG5cbmZ1bmN0aW9uIGFzY2VuZGluZ0NvbXBhcmF0b3IoZikge1xuICByZXR1cm4gKGQsIHgpID0+IGFzY2VuZGluZyhmKGQpLCB4KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY291bnQodmFsdWVzLCB2YWx1ZW9mKSB7XG4gIGxldCBjb3VudCA9IDA7XG4gIGlmICh2YWx1ZW9mID09PSB1bmRlZmluZWQpIHtcbiAgICBmb3IgKGxldCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICh2YWx1ZSAhPSBudWxsICYmICh2YWx1ZSA9ICt2YWx1ZSkgPj0gdmFsdWUpIHtcbiAgICAgICAgKytjb3VudDtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbGV0IGluZGV4ID0gLTE7XG4gICAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZSwgKytpbmRleCwgdmFsdWVzKSkgIT0gbnVsbCAmJiAodmFsdWUgPSArdmFsdWUpID49IHZhbHVlKSB7XG4gICAgICAgICsrY291bnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBjb3VudDtcbn1cbiIsImZ1bmN0aW9uIGxlbmd0aChhcnJheSkge1xuICByZXR1cm4gYXJyYXkubGVuZ3RoIHwgMDtcbn1cblxuZnVuY3Rpb24gZW1wdHkobGVuZ3RoKSB7XG4gIHJldHVybiAhKGxlbmd0aCA+IDApO1xufVxuXG5mdW5jdGlvbiBhcnJheWlmeSh2YWx1ZXMpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZXMgIT09IFwib2JqZWN0XCIgfHwgXCJsZW5ndGhcIiBpbiB2YWx1ZXMgPyB2YWx1ZXMgOiBBcnJheS5mcm9tKHZhbHVlcyk7XG59XG5cbmZ1bmN0aW9uIHJlZHVjZXIocmVkdWNlKSB7XG4gIHJldHVybiB2YWx1ZXMgPT4gcmVkdWNlKC4uLnZhbHVlcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyb3NzKC4uLnZhbHVlcykge1xuICBjb25zdCByZWR1Y2UgPSB0eXBlb2YgdmFsdWVzW3ZhbHVlcy5sZW5ndGggLSAxXSA9PT0gXCJmdW5jdGlvblwiICYmIHJlZHVjZXIodmFsdWVzLnBvcCgpKTtcbiAgdmFsdWVzID0gdmFsdWVzLm1hcChhcnJheWlmeSk7XG4gIGNvbnN0IGxlbmd0aHMgPSB2YWx1ZXMubWFwKGxlbmd0aCk7XG4gIGNvbnN0IGogPSB2YWx1ZXMubGVuZ3RoIC0gMTtcbiAgY29uc3QgaW5kZXggPSBuZXcgQXJyYXkoaiArIDEpLmZpbGwoMCk7XG4gIGNvbnN0IHByb2R1Y3QgPSBbXTtcbiAgaWYgKGogPCAwIHx8IGxlbmd0aHMuc29tZShlbXB0eSkpIHJldHVybiBwcm9kdWN0O1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIHByb2R1Y3QucHVzaChpbmRleC5tYXAoKGosIGkpID0+IHZhbHVlc1tpXVtqXSkpO1xuICAgIGxldCBpID0gajtcbiAgICB3aGlsZSAoKytpbmRleFtpXSA9PT0gbGVuZ3Roc1tpXSkge1xuICAgICAgaWYgKGkgPT09IDApIHJldHVybiByZWR1Y2UgPyBwcm9kdWN0Lm1hcChyZWR1Y2UpIDogcHJvZHVjdDtcbiAgICAgIGluZGV4W2ktLV0gPSAwO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3Vtc3VtKHZhbHVlcywgdmFsdWVvZikge1xuICB2YXIgc3VtID0gMCwgaW5kZXggPSAwO1xuICByZXR1cm4gRmxvYXQ2NEFycmF5LmZyb20odmFsdWVzLCB2YWx1ZW9mID09PSB1bmRlZmluZWRcbiAgICA/IHYgPT4gKHN1bSArPSArdiB8fCAwKVxuICAgIDogdiA9PiAoc3VtICs9ICt2YWx1ZW9mKHYsIGluZGV4KyssIHZhbHVlcykgfHwgMCkpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGIgPCBhID8gLTEgOiBiID4gYSA/IDEgOiBiID49IGEgPyAwIDogTmFOO1xufVxuIiwiaW1wb3J0IHZhcmlhbmNlIGZyb20gXCIuL3ZhcmlhbmNlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRldmlhdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgY29uc3QgdiA9IHZhcmlhbmNlKHZhbHVlcywgdmFsdWVvZik7XG4gIHJldHVybiB2ID8gTWF0aC5zcXJ0KHYpIDogdjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpZmZlcmVuY2UodmFsdWVzLCAuLi5vdGhlcnMpIHtcbiAgdmFsdWVzID0gbmV3IFNldCh2YWx1ZXMpO1xuICBmb3IgKGNvbnN0IG90aGVyIG9mIG90aGVycykge1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2Ygb3RoZXIpIHtcbiAgICAgIHZhbHVlcy5kZWxldGUodmFsdWUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsdWVzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlzam9pbnQodmFsdWVzLCBvdGhlcikge1xuICBjb25zdCBpdGVyYXRvciA9IG90aGVyW1N5bWJvbC5pdGVyYXRvcl0oKSwgc2V0ID0gbmV3IFNldCgpO1xuICBmb3IgKGNvbnN0IHYgb2YgdmFsdWVzKSB7XG4gICAgaWYgKHNldC5oYXModikpIHJldHVybiBmYWxzZTtcbiAgICBsZXQgdmFsdWUsIGRvbmU7XG4gICAgd2hpbGUgKCh7dmFsdWUsIGRvbmV9ID0gaXRlcmF0b3IubmV4dCgpKSkge1xuICAgICAgaWYgKGRvbmUpIGJyZWFrO1xuICAgICAgaWYgKE9iamVjdC5pcyh2LCB2YWx1ZSkpIHJldHVybiBmYWxzZTtcbiAgICAgIHNldC5hZGQodmFsdWUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGV2ZXJ5KHZhbHVlcywgdGVzdCkge1xuICBpZiAodHlwZW9mIHRlc3QgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcInRlc3QgaXMgbm90IGEgZnVuY3Rpb25cIik7XG4gIGxldCBpbmRleCA9IC0xO1xuICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgIGlmICghdGVzdCh2YWx1ZSwgKytpbmRleCwgdmFsdWVzKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgdmFsdWVvZikge1xuICBsZXQgbWluO1xuICBsZXQgbWF4O1xuICBpZiAodmFsdWVvZiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7XG4gICAgICAgIGlmIChtaW4gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGlmICh2YWx1ZSA+PSB2YWx1ZSkgbWluID0gbWF4ID0gdmFsdWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKG1pbiA+IHZhbHVlKSBtaW4gPSB2YWx1ZTtcbiAgICAgICAgICBpZiAobWF4IDwgdmFsdWUpIG1heCA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGxldCBpbmRleCA9IC0xO1xuICAgIGZvciAobGV0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWUsICsraW5kZXgsIHZhbHVlcykpICE9IG51bGwpIHtcbiAgICAgICAgaWYgKG1pbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgaWYgKHZhbHVlID49IHZhbHVlKSBtaW4gPSBtYXggPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAobWluID4gdmFsdWUpIG1pbiA9IHZhbHVlO1xuICAgICAgICAgIGlmIChtYXggPCB2YWx1ZSkgbWF4ID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIFttaW4sIG1heF07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaWx0ZXIodmFsdWVzLCB0ZXN0KSB7XG4gIGlmICh0eXBlb2YgdGVzdCAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwidGVzdCBpcyBub3QgYSBmdW5jdGlvblwiKTtcbiAgY29uc3QgYXJyYXkgPSBbXTtcbiAgbGV0IGluZGV4ID0gLTE7XG4gIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgaWYgKHRlc3QodmFsdWUsICsraW5kZXgsIHZhbHVlcykpIHtcbiAgICAgIGFycmF5LnB1c2godmFsdWUpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vcHl0aG9uL2NweXRob24vYmxvYi9hNzRlZWEyMzhmNWJhYmExNTc5N2UyZThiNTcwZDE1M2JjODY5MGE3L01vZHVsZXMvbWF0aG1vZHVsZS5jI0wxNDIzXG5leHBvcnQgY2xhc3MgQWRkZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl9wYXJ0aWFscyA9IG5ldyBGbG9hdDY0QXJyYXkoMzIpO1xuICAgIHRoaXMuX24gPSAwO1xuICB9XG4gIGFkZCh4KSB7XG4gICAgY29uc3QgcCA9IHRoaXMuX3BhcnRpYWxzO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuX24gJiYgaiA8IDMyOyBqKyspIHtcbiAgICAgIGNvbnN0IHkgPSBwW2pdLFxuICAgICAgICBoaSA9IHggKyB5LFxuICAgICAgICBsbyA9IE1hdGguYWJzKHgpIDwgTWF0aC5hYnMoeSkgPyB4IC0gKGhpIC0geSkgOiB5IC0gKGhpIC0geCk7XG4gICAgICBpZiAobG8pIHBbaSsrXSA9IGxvO1xuICAgICAgeCA9IGhpO1xuICAgIH1cbiAgICBwW2ldID0geDtcbiAgICB0aGlzLl9uID0gaSArIDE7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgdmFsdWVPZigpIHtcbiAgICBjb25zdCBwID0gdGhpcy5fcGFydGlhbHM7XG4gICAgbGV0IG4gPSB0aGlzLl9uLCB4LCB5LCBsbywgaGkgPSAwO1xuICAgIGlmIChuID4gMCkge1xuICAgICAgaGkgPSBwWy0tbl07XG4gICAgICB3aGlsZSAobiA+IDApIHtcbiAgICAgICAgeCA9IGhpO1xuICAgICAgICB5ID0gcFstLW5dO1xuICAgICAgICBoaSA9IHggKyB5O1xuICAgICAgICBsbyA9IHkgLSAoaGkgLSB4KTtcbiAgICAgICAgaWYgKGxvKSBicmVhaztcbiAgICAgIH1cbiAgICAgIGlmIChuID4gMCAmJiAoKGxvIDwgMCAmJiBwW24gLSAxXSA8IDApIHx8IChsbyA+IDAgJiYgcFtuIC0gMV0gPiAwKSkpIHtcbiAgICAgICAgeSA9IGxvICogMjtcbiAgICAgICAgeCA9IGhpICsgeTtcbiAgICAgICAgaWYgKHkgPT0geCAtIGhpKSBoaSA9IHg7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoaTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgY29uc3QgYWRkZXIgPSBuZXcgQWRkZXIoKTtcbiAgaWYgKHZhbHVlb2YgPT09IHVuZGVmaW5lZCkge1xuICAgIGZvciAobGV0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgaWYgKHZhbHVlID0gK3ZhbHVlKSB7XG4gICAgICAgIGFkZGVyLmFkZCh2YWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGxldCBpbmRleCA9IC0xO1xuICAgIGZvciAobGV0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgaWYgKHZhbHVlID0gK3ZhbHVlb2YodmFsdWUsICsraW5kZXgsIHZhbHVlcykpIHtcbiAgICAgICAgYWRkZXIuYWRkKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuICthZGRlcjtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdyZWF0ZXN0KHZhbHVlcywgY29tcGFyZSA9IGFzY2VuZGluZykge1xuICBsZXQgbWF4O1xuICBsZXQgZGVmaW5lZCA9IGZhbHNlO1xuICBpZiAoY29tcGFyZS5sZW5ndGggPT09IDEpIHtcbiAgICBsZXQgbWF4VmFsdWU7XG4gICAgZm9yIChjb25zdCBlbGVtZW50IG9mIHZhbHVlcykge1xuICAgICAgY29uc3QgdmFsdWUgPSBjb21wYXJlKGVsZW1lbnQpO1xuICAgICAgaWYgKGRlZmluZWRcbiAgICAgICAgICA/IGFzY2VuZGluZyh2YWx1ZSwgbWF4VmFsdWUpID4gMFxuICAgICAgICAgIDogYXNjZW5kaW5nKHZhbHVlLCB2YWx1ZSkgPT09IDApIHtcbiAgICAgICAgbWF4ID0gZWxlbWVudDtcbiAgICAgICAgbWF4VmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgZGVmaW5lZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAoZGVmaW5lZFxuICAgICAgICAgID8gY29tcGFyZSh2YWx1ZSwgbWF4KSA+IDBcbiAgICAgICAgICA6IGNvbXBhcmUodmFsdWUsIHZhbHVlKSA9PT0gMCkge1xuICAgICAgICBtYXggPSB2YWx1ZTtcbiAgICAgICAgZGVmaW5lZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBtYXg7XG59XG4iLCJpbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZy5qc1wiO1xuaW1wb3J0IG1heEluZGV4IGZyb20gXCIuL21heEluZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdyZWF0ZXN0SW5kZXgodmFsdWVzLCBjb21wYXJlID0gYXNjZW5kaW5nKSB7XG4gIGlmIChjb21wYXJlLmxlbmd0aCA9PT0gMSkgcmV0dXJuIG1heEluZGV4KHZhbHVlcywgY29tcGFyZSk7XG4gIGxldCBtYXhWYWx1ZTtcbiAgbGV0IG1heCA9IC0xO1xuICBsZXQgaW5kZXggPSAtMTtcbiAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICArK2luZGV4O1xuICAgIGlmIChtYXggPCAwXG4gICAgICAgID8gY29tcGFyZSh2YWx1ZSwgdmFsdWUpID09PSAwXG4gICAgICAgIDogY29tcGFyZSh2YWx1ZSwgbWF4VmFsdWUpID4gMCkge1xuICAgICAgbWF4VmFsdWUgPSB2YWx1ZTtcbiAgICAgIG1heCA9IGluZGV4O1xuICAgIH1cbiAgfVxuICByZXR1cm4gbWF4O1xufVxuIiwiaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuL2lkZW50aXR5LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdyb3VwKHZhbHVlcywgLi4ua2V5cykge1xuICByZXR1cm4gbmVzdCh2YWx1ZXMsIGlkZW50aXR5LCBpZGVudGl0eSwga2V5cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBncm91cHModmFsdWVzLCAuLi5rZXlzKSB7XG4gIHJldHVybiBuZXN0KHZhbHVlcywgQXJyYXkuZnJvbSwgaWRlbnRpdHksIGtleXMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcm9sbHVwKHZhbHVlcywgcmVkdWNlLCAuLi5rZXlzKSB7XG4gIHJldHVybiBuZXN0KHZhbHVlcywgaWRlbnRpdHksIHJlZHVjZSwga2V5cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByb2xsdXBzKHZhbHVlcywgcmVkdWNlLCAuLi5rZXlzKSB7XG4gIHJldHVybiBuZXN0KHZhbHVlcywgQXJyYXkuZnJvbSwgcmVkdWNlLCBrZXlzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluZGV4KHZhbHVlcywgLi4ua2V5cykge1xuICByZXR1cm4gbmVzdCh2YWx1ZXMsIGlkZW50aXR5LCB1bmlxdWUsIGtleXMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5kZXhlcyh2YWx1ZXMsIC4uLmtleXMpIHtcbiAgcmV0dXJuIG5lc3QodmFsdWVzLCBBcnJheS5mcm9tLCB1bmlxdWUsIGtleXMpO1xufVxuXG5mdW5jdGlvbiB1bmlxdWUodmFsdWVzKSB7XG4gIGlmICh2YWx1ZXMubGVuZ3RoICE9PSAxKSB0aHJvdyBuZXcgRXJyb3IoXCJkdXBsaWNhdGUga2V5XCIpO1xuICByZXR1cm4gdmFsdWVzWzBdO1xufVxuXG5mdW5jdGlvbiBuZXN0KHZhbHVlcywgbWFwLCByZWR1Y2UsIGtleXMpIHtcbiAgcmV0dXJuIChmdW5jdGlvbiByZWdyb3VwKHZhbHVlcywgaSkge1xuICAgIGlmIChpID49IGtleXMubGVuZ3RoKSByZXR1cm4gcmVkdWNlKHZhbHVlcyk7XG4gICAgY29uc3QgZ3JvdXBzID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IGtleW9mID0ga2V5c1tpKytdO1xuICAgIGxldCBpbmRleCA9IC0xO1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBjb25zdCBrZXkgPSBrZXlvZih2YWx1ZSwgKytpbmRleCwgdmFsdWVzKTtcbiAgICAgIGNvbnN0IGdyb3VwID0gZ3JvdXBzLmdldChrZXkpO1xuICAgICAgaWYgKGdyb3VwKSBncm91cC5wdXNoKHZhbHVlKTtcbiAgICAgIGVsc2UgZ3JvdXBzLnNldChrZXksIFt2YWx1ZV0pO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlc10gb2YgZ3JvdXBzKSB7XG4gICAgICBncm91cHMuc2V0KGtleSwgcmVncm91cCh2YWx1ZXMsIGkpKTtcbiAgICB9XG4gICAgcmV0dXJuIG1hcChncm91cHMpO1xuICB9KSh2YWx1ZXMsIDApO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4geDtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBiaXNlY3QsIGJpc2VjdFJpZ2h0LCBiaXNlY3RMZWZ0LCBiaXNlY3RDZW50ZXJ9IGZyb20gXCIuL2Jpc2VjdC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGFzY2VuZGluZ30gZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYmlzZWN0b3J9IGZyb20gXCIuL2Jpc2VjdG9yLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY291bnR9IGZyb20gXCIuL2NvdW50LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3Jvc3N9IGZyb20gXCIuL2Nyb3NzLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3Vtc3VtfSBmcm9tIFwiLi9jdW1zdW0uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBkZXNjZW5kaW5nfSBmcm9tIFwiLi9kZXNjZW5kaW5nLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZGV2aWF0aW9ufSBmcm9tIFwiLi9kZXZpYXRpb24uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBleHRlbnR9IGZyb20gXCIuL2V4dGVudC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZzdW0sIEFkZGVyfSBmcm9tIFwiLi9mc3VtLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ3JvdXAsIGdyb3VwcywgaW5kZXgsIGluZGV4ZXMsIHJvbGx1cCwgcm9sbHVwc30gZnJvbSBcIi4vZ3JvdXAuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBiaW4sIGRlZmF1bHQgYXMgaGlzdG9ncmFtfSBmcm9tIFwiLi9iaW4uanNcIjsgLy8gRGVwcmVjYXRlZDsgdXNlIGJpbi5cbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aHJlc2hvbGRGcmVlZG1hbkRpYWNvbmlzfSBmcm9tIFwiLi90aHJlc2hvbGQvZnJlZWRtYW5EaWFjb25pcy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRocmVzaG9sZFNjb3R0fSBmcm9tIFwiLi90aHJlc2hvbGQvc2NvdHQuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aHJlc2hvbGRTdHVyZ2VzfSBmcm9tIFwiLi90aHJlc2hvbGQvc3R1cmdlcy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1heH0gZnJvbSBcIi4vbWF4LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWF4SW5kZXh9IGZyb20gXCIuL21heEluZGV4LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWVhbn0gZnJvbSBcIi4vbWVhbi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1lZGlhbn0gZnJvbSBcIi4vbWVkaWFuLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWVyZ2V9IGZyb20gXCIuL21lcmdlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWlufSBmcm9tIFwiLi9taW4uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBtaW5JbmRleH0gZnJvbSBcIi4vbWluSW5kZXguanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBuaWNlfSBmcm9tIFwiLi9uaWNlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFpcnN9IGZyb20gXCIuL3BhaXJzLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGVybXV0ZX0gZnJvbSBcIi4vcGVybXV0ZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHF1YW50aWxlLCBxdWFudGlsZVNvcnRlZH0gZnJvbSBcIi4vcXVhbnRpbGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWlja3NlbGVjdH0gZnJvbSBcIi4vcXVpY2tzZWxlY3QuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5nZX0gZnJvbSBcIi4vcmFuZ2UuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsZWFzdH0gZnJvbSBcIi4vbGVhc3QuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsZWFzdEluZGV4fSBmcm9tIFwiLi9sZWFzdEluZGV4LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ3JlYXRlc3R9IGZyb20gXCIuL2dyZWF0ZXN0LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ3JlYXRlc3RJbmRleH0gZnJvbSBcIi4vZ3JlYXRlc3RJbmRleC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjYW59IGZyb20gXCIuL3NjYW4uanNcIjsgLy8gRGVwcmVjYXRlZDsgdXNlIGxlYXN0SW5kZXguXG5leHBvcnQge2RlZmF1bHQgYXMgc2h1ZmZsZSwgc2h1ZmZsZXJ9IGZyb20gXCIuL3NodWZmbGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdW19IGZyb20gXCIuL3N1bS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRpY2tzLCB0aWNrSW5jcmVtZW50LCB0aWNrU3RlcH0gZnJvbSBcIi4vdGlja3MuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmFuc3Bvc2V9IGZyb20gXCIuL3RyYW5zcG9zZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZhcmlhbmNlfSBmcm9tIFwiLi92YXJpYW5jZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHppcH0gZnJvbSBcIi4vemlwLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZXZlcnl9IGZyb20gXCIuL2V2ZXJ5LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc29tZX0gZnJvbSBcIi4vc29tZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZpbHRlcn0gZnJvbSBcIi4vZmlsdGVyLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgbWFwfSBmcm9tIFwiLi9tYXAuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByZWR1Y2V9IGZyb20gXCIuL3JlZHVjZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJldmVyc2V9IGZyb20gXCIuL3JldmVyc2UuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzb3J0fSBmcm9tIFwiLi9zb3J0LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZGlmZmVyZW5jZX0gZnJvbSBcIi4vZGlmZmVyZW5jZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGRpc2pvaW50fSBmcm9tIFwiLi9kaXNqb2ludC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVyc2VjdGlvbn0gZnJvbSBcIi4vaW50ZXJzZWN0aW9uLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3Vic2V0fSBmcm9tIFwiLi9zdWJzZXQuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdXBlcnNldH0gZnJvbSBcIi4vc3VwZXJzZXQuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB1bmlvbn0gZnJvbSBcIi4vdW5pb24uanNcIjtcbiIsImltcG9ydCBzZXQgZnJvbSBcIi4vc2V0LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGludGVyc2VjdGlvbih2YWx1ZXMsIC4uLm90aGVycykge1xuICB2YWx1ZXMgPSBuZXcgU2V0KHZhbHVlcyk7XG4gIG90aGVycyA9IG90aGVycy5tYXAoc2V0KTtcbiAgb3V0OiBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgIGZvciAoY29uc3Qgb3RoZXIgb2Ygb3RoZXJzKSB7XG4gICAgICBpZiAoIW90aGVyLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgdmFsdWVzLmRlbGV0ZSh2YWx1ZSk7XG4gICAgICAgIGNvbnRpbnVlIG91dDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlcztcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxlYXN0KHZhbHVlcywgY29tcGFyZSA9IGFzY2VuZGluZykge1xuICBsZXQgbWluO1xuICBsZXQgZGVmaW5lZCA9IGZhbHNlO1xuICBpZiAoY29tcGFyZS5sZW5ndGggPT09IDEpIHtcbiAgICBsZXQgbWluVmFsdWU7XG4gICAgZm9yIChjb25zdCBlbGVtZW50IG9mIHZhbHVlcykge1xuICAgICAgY29uc3QgdmFsdWUgPSBjb21wYXJlKGVsZW1lbnQpO1xuICAgICAgaWYgKGRlZmluZWRcbiAgICAgICAgICA/IGFzY2VuZGluZyh2YWx1ZSwgbWluVmFsdWUpIDwgMFxuICAgICAgICAgIDogYXNjZW5kaW5nKHZhbHVlLCB2YWx1ZSkgPT09IDApIHtcbiAgICAgICAgbWluID0gZWxlbWVudDtcbiAgICAgICAgbWluVmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgZGVmaW5lZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAoZGVmaW5lZFxuICAgICAgICAgID8gY29tcGFyZSh2YWx1ZSwgbWluKSA8IDBcbiAgICAgICAgICA6IGNvbXBhcmUodmFsdWUsIHZhbHVlKSA9PT0gMCkge1xuICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgICAgZGVmaW5lZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBtaW47XG59XG4iLCJpbXBvcnQgYXNjZW5kaW5nIGZyb20gXCIuL2FzY2VuZGluZy5qc1wiO1xuaW1wb3J0IG1pbkluZGV4IGZyb20gXCIuL21pbkluZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxlYXN0SW5kZXgodmFsdWVzLCBjb21wYXJlID0gYXNjZW5kaW5nKSB7XG4gIGlmIChjb21wYXJlLmxlbmd0aCA9PT0gMSkgcmV0dXJuIG1pbkluZGV4KHZhbHVlcywgY29tcGFyZSk7XG4gIGxldCBtaW5WYWx1ZTtcbiAgbGV0IG1pbiA9IC0xO1xuICBsZXQgaW5kZXggPSAtMTtcbiAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICArK2luZGV4O1xuICAgIGlmIChtaW4gPCAwXG4gICAgICAgID8gY29tcGFyZSh2YWx1ZSwgdmFsdWUpID09PSAwXG4gICAgICAgIDogY29tcGFyZSh2YWx1ZSwgbWluVmFsdWUpIDwgMCkge1xuICAgICAgbWluVmFsdWUgPSB2YWx1ZTtcbiAgICAgIG1pbiA9IGluZGV4O1xuICAgIH1cbiAgfVxuICByZXR1cm4gbWluO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWFwKHZhbHVlcywgbWFwcGVyKSB7XG4gIGlmICh0eXBlb2YgdmFsdWVzW1N5bWJvbC5pdGVyYXRvcl0gIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcInZhbHVlcyBpcyBub3QgaXRlcmFibGVcIik7XG4gIGlmICh0eXBlb2YgbWFwcGVyICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJtYXBwZXIgaXMgbm90IGEgZnVuY3Rpb25cIik7XG4gIHJldHVybiBBcnJheS5mcm9tKHZhbHVlcywgKHZhbHVlLCBpbmRleCkgPT4gbWFwcGVyKHZhbHVlLCBpbmRleCwgdmFsdWVzKSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtYXgodmFsdWVzLCB2YWx1ZW9mKSB7XG4gIGxldCBtYXg7XG4gIGlmICh2YWx1ZW9mID09PSB1bmRlZmluZWQpIHtcbiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgaWYgKHZhbHVlICE9IG51bGxcbiAgICAgICAgICAmJiAobWF4IDwgdmFsdWUgfHwgKG1heCA9PT0gdW5kZWZpbmVkICYmIHZhbHVlID49IHZhbHVlKSkpIHtcbiAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGxldCBpbmRleCA9IC0xO1xuICAgIGZvciAobGV0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgaWYgKCh2YWx1ZSA9IHZhbHVlb2YodmFsdWUsICsraW5kZXgsIHZhbHVlcykpICE9IG51bGxcbiAgICAgICAgICAmJiAobWF4IDwgdmFsdWUgfHwgKG1heCA9PT0gdW5kZWZpbmVkICYmIHZhbHVlID49IHZhbHVlKSkpIHtcbiAgICAgICAgbWF4ID0gdmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBtYXg7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtYXhJbmRleCh2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgbGV0IG1heDtcbiAgbGV0IG1heEluZGV4ID0gLTE7XG4gIGxldCBpbmRleCA9IC0xO1xuICBpZiAodmFsdWVvZiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICsraW5kZXg7XG4gICAgICBpZiAodmFsdWUgIT0gbnVsbFxuICAgICAgICAgICYmIChtYXggPCB2YWx1ZSB8fCAobWF4ID09PSB1bmRlZmluZWQgJiYgdmFsdWUgPj0gdmFsdWUpKSkge1xuICAgICAgICBtYXggPSB2YWx1ZSwgbWF4SW5kZXggPSBpbmRleDtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZSwgKytpbmRleCwgdmFsdWVzKSkgIT0gbnVsbFxuICAgICAgICAgICYmIChtYXggPCB2YWx1ZSB8fCAobWF4ID09PSB1bmRlZmluZWQgJiYgdmFsdWUgPj0gdmFsdWUpKSkge1xuICAgICAgICBtYXggPSB2YWx1ZSwgbWF4SW5kZXggPSBpbmRleDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG1heEluZGV4O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWVhbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgbGV0IGNvdW50ID0gMDtcbiAgbGV0IHN1bSA9IDA7XG4gIGlmICh2YWx1ZW9mID09PSB1bmRlZmluZWQpIHtcbiAgICBmb3IgKGxldCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICh2YWx1ZSAhPSBudWxsICYmICh2YWx1ZSA9ICt2YWx1ZSkgPj0gdmFsdWUpIHtcbiAgICAgICAgKytjb3VudCwgc3VtICs9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsZXQgaW5kZXggPSAtMTtcbiAgICBmb3IgKGxldCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlLCArK2luZGV4LCB2YWx1ZXMpKSAhPSBudWxsICYmICh2YWx1ZSA9ICt2YWx1ZSkgPj0gdmFsdWUpIHtcbiAgICAgICAgKytjb3VudCwgc3VtICs9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAoY291bnQpIHJldHVybiBzdW0gLyBjb3VudDtcbn1cbiIsImltcG9ydCBxdWFudGlsZSBmcm9tIFwiLi9xdWFudGlsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgcmV0dXJuIHF1YW50aWxlKHZhbHVlcywgMC41LCB2YWx1ZW9mKTtcbn1cbiIsImZ1bmN0aW9uKiBmbGF0dGVuKGFycmF5cykge1xuICBmb3IgKGNvbnN0IGFycmF5IG9mIGFycmF5cykge1xuICAgIHlpZWxkKiBhcnJheTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtZXJnZShhcnJheXMpIHtcbiAgcmV0dXJuIEFycmF5LmZyb20oZmxhdHRlbihhcnJheXMpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1pbih2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgbGV0IG1pbjtcbiAgaWYgKHZhbHVlb2YgPT09IHVuZGVmaW5lZCkge1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAodmFsdWUgIT0gbnVsbFxuICAgICAgICAgICYmIChtaW4gPiB2YWx1ZSB8fCAobWluID09PSB1bmRlZmluZWQgJiYgdmFsdWUgPj0gdmFsdWUpKSkge1xuICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbGV0IGluZGV4ID0gLTE7XG4gICAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZSwgKytpbmRleCwgdmFsdWVzKSkgIT0gbnVsbFxuICAgICAgICAgICYmIChtaW4gPiB2YWx1ZSB8fCAobWluID09PSB1bmRlZmluZWQgJiYgdmFsdWUgPj0gdmFsdWUpKSkge1xuICAgICAgICBtaW4gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG1pbjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1pbkluZGV4KHZhbHVlcywgdmFsdWVvZikge1xuICBsZXQgbWluO1xuICBsZXQgbWluSW5kZXggPSAtMTtcbiAgbGV0IGluZGV4ID0gLTE7XG4gIGlmICh2YWx1ZW9mID09PSB1bmRlZmluZWQpIHtcbiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgKytpbmRleDtcbiAgICAgIGlmICh2YWx1ZSAhPSBudWxsXG4gICAgICAgICAgJiYgKG1pbiA+IHZhbHVlIHx8IChtaW4gPT09IHVuZGVmaW5lZCAmJiB2YWx1ZSA+PSB2YWx1ZSkpKSB7XG4gICAgICAgIG1pbiA9IHZhbHVlLCBtaW5JbmRleCA9IGluZGV4O1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKGxldCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICgodmFsdWUgPSB2YWx1ZW9mKHZhbHVlLCArK2luZGV4LCB2YWx1ZXMpKSAhPSBudWxsXG4gICAgICAgICAgJiYgKG1pbiA+IHZhbHVlIHx8IChtaW4gPT09IHVuZGVmaW5lZCAmJiB2YWx1ZSA+PSB2YWx1ZSkpKSB7XG4gICAgICAgIG1pbiA9IHZhbHVlLCBtaW5JbmRleCA9IGluZGV4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gbWluSW5kZXg7XG59XG4iLCJpbXBvcnQge3RpY2tJbmNyZW1lbnR9IGZyb20gXCIuL3RpY2tzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5pY2Uoc3RhcnQsIHN0b3AsIGNvdW50KSB7XG4gIGxldCBwcmVzdGVwO1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIGNvbnN0IHN0ZXAgPSB0aWNrSW5jcmVtZW50KHN0YXJ0LCBzdG9wLCBjb3VudCk7XG4gICAgaWYgKHN0ZXAgPT09IHByZXN0ZXAgfHwgc3RlcCA9PT0gMCB8fCAhaXNGaW5pdGUoc3RlcCkpIHtcbiAgICAgIHJldHVybiBbc3RhcnQsIHN0b3BdO1xuICAgIH0gZWxzZSBpZiAoc3RlcCA+IDApIHtcbiAgICAgIHN0YXJ0ID0gTWF0aC5mbG9vcihzdGFydCAvIHN0ZXApICogc3RlcDtcbiAgICAgIHN0b3AgPSBNYXRoLmNlaWwoc3RvcCAvIHN0ZXApICogc3RlcDtcbiAgICB9IGVsc2UgaWYgKHN0ZXAgPCAwKSB7XG4gICAgICBzdGFydCA9IE1hdGguY2VpbChzdGFydCAqIHN0ZXApIC8gc3RlcDtcbiAgICAgIHN0b3AgPSBNYXRoLmZsb29yKHN0b3AgKiBzdGVwKSAvIHN0ZXA7XG4gICAgfVxuICAgIHByZXN0ZXAgPSBzdGVwO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4ID09PSBudWxsID8gTmFOIDogK3g7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiogbnVtYmVycyh2YWx1ZXMsIHZhbHVlb2YpIHtcbiAgaWYgKHZhbHVlb2YgPT09IHVuZGVmaW5lZCkge1xuICAgIGZvciAobGV0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgaWYgKHZhbHVlICE9IG51bGwgJiYgKHZhbHVlID0gK3ZhbHVlKSA+PSB2YWx1ZSkge1xuICAgICAgICB5aWVsZCB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbGV0IGluZGV4ID0gLTE7XG4gICAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZSwgKytpbmRleCwgdmFsdWVzKSkgIT0gbnVsbCAmJiAodmFsdWUgPSArdmFsdWUpID49IHZhbHVlKSB7XG4gICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFpcnModmFsdWVzLCBwYWlyb2YgPSBwYWlyKSB7XG4gIGNvbnN0IHBhaXJzID0gW107XG4gIGxldCBwcmV2aW91cztcbiAgbGV0IGZpcnN0ID0gZmFsc2U7XG4gIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgaWYgKGZpcnN0KSBwYWlycy5wdXNoKHBhaXJvZihwcmV2aW91cywgdmFsdWUpKTtcbiAgICBwcmV2aW91cyA9IHZhbHVlO1xuICAgIGZpcnN0ID0gdHJ1ZTtcbiAgfVxuICByZXR1cm4gcGFpcnM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWlyKGEsIGIpIHtcbiAgcmV0dXJuIFthLCBiXTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNvdXJjZSwga2V5cykge1xuICByZXR1cm4gQXJyYXkuZnJvbShrZXlzLCBrZXkgPT4gc291cmNlW2tleV0pO1xufVxuIiwiaW1wb3J0IG1heCBmcm9tIFwiLi9tYXguanNcIjtcbmltcG9ydCBtaW4gZnJvbSBcIi4vbWluLmpzXCI7XG5pbXBvcnQgcXVpY2tzZWxlY3QgZnJvbSBcIi4vcXVpY2tzZWxlY3QuanNcIjtcbmltcG9ydCBudW1iZXIsIHtudW1iZXJzfSBmcm9tIFwiLi9udW1iZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcXVhbnRpbGUodmFsdWVzLCBwLCB2YWx1ZW9mKSB7XG4gIHZhbHVlcyA9IEZsb2F0NjRBcnJheS5mcm9tKG51bWJlcnModmFsdWVzLCB2YWx1ZW9mKSk7XG4gIGlmICghKG4gPSB2YWx1ZXMubGVuZ3RoKSkgcmV0dXJuO1xuICBpZiAoKHAgPSArcCkgPD0gMCB8fCBuIDwgMikgcmV0dXJuIG1pbih2YWx1ZXMpO1xuICBpZiAocCA+PSAxKSByZXR1cm4gbWF4KHZhbHVlcyk7XG4gIHZhciBuLFxuICAgICAgaSA9IChuIC0gMSkgKiBwLFxuICAgICAgaTAgPSBNYXRoLmZsb29yKGkpLFxuICAgICAgdmFsdWUwID0gbWF4KHF1aWNrc2VsZWN0KHZhbHVlcywgaTApLnN1YmFycmF5KDAsIGkwICsgMSkpLFxuICAgICAgdmFsdWUxID0gbWluKHZhbHVlcy5zdWJhcnJheShpMCArIDEpKTtcbiAgcmV0dXJuIHZhbHVlMCArICh2YWx1ZTEgLSB2YWx1ZTApICogKGkgLSBpMCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxdWFudGlsZVNvcnRlZCh2YWx1ZXMsIHAsIHZhbHVlb2YgPSBudW1iZXIpIHtcbiAgaWYgKCEobiA9IHZhbHVlcy5sZW5ndGgpKSByZXR1cm47XG4gIGlmICgocCA9ICtwKSA8PSAwIHx8IG4gPCAyKSByZXR1cm4gK3ZhbHVlb2YodmFsdWVzWzBdLCAwLCB2YWx1ZXMpO1xuICBpZiAocCA+PSAxKSByZXR1cm4gK3ZhbHVlb2YodmFsdWVzW24gLSAxXSwgbiAtIDEsIHZhbHVlcyk7XG4gIHZhciBuLFxuICAgICAgaSA9IChuIC0gMSkgKiBwLFxuICAgICAgaTAgPSBNYXRoLmZsb29yKGkpLFxuICAgICAgdmFsdWUwID0gK3ZhbHVlb2YodmFsdWVzW2kwXSwgaTAsIHZhbHVlcyksXG4gICAgICB2YWx1ZTEgPSArdmFsdWVvZih2YWx1ZXNbaTAgKyAxXSwgaTAgKyAxLCB2YWx1ZXMpO1xuICByZXR1cm4gdmFsdWUwICsgKHZhbHVlMSAtIHZhbHVlMCkgKiAoaSAtIGkwKTtcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9tb3VybmVyL3F1aWNrc2VsZWN0XG4vLyBJU0MgbGljZW5zZSwgQ29weXJpZ2h0IDIwMTggVmxhZGltaXIgQWdhZm9ua2luLlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcXVpY2tzZWxlY3QoYXJyYXksIGssIGxlZnQgPSAwLCByaWdodCA9IGFycmF5Lmxlbmd0aCAtIDEsIGNvbXBhcmUgPSBhc2NlbmRpbmcpIHtcbiAgd2hpbGUgKHJpZ2h0ID4gbGVmdCkge1xuICAgIGlmIChyaWdodCAtIGxlZnQgPiA2MDApIHtcbiAgICAgIGNvbnN0IG4gPSByaWdodCAtIGxlZnQgKyAxO1xuICAgICAgY29uc3QgbSA9IGsgLSBsZWZ0ICsgMTtcbiAgICAgIGNvbnN0IHogPSBNYXRoLmxvZyhuKTtcbiAgICAgIGNvbnN0IHMgPSAwLjUgKiBNYXRoLmV4cCgyICogeiAvIDMpO1xuICAgICAgY29uc3Qgc2QgPSAwLjUgKiBNYXRoLnNxcnQoeiAqIHMgKiAobiAtIHMpIC8gbikgKiAobSAtIG4gLyAyIDwgMCA/IC0xIDogMSk7XG4gICAgICBjb25zdCBuZXdMZWZ0ID0gTWF0aC5tYXgobGVmdCwgTWF0aC5mbG9vcihrIC0gbSAqIHMgLyBuICsgc2QpKTtcbiAgICAgIGNvbnN0IG5ld1JpZ2h0ID0gTWF0aC5taW4ocmlnaHQsIE1hdGguZmxvb3IoayArIChuIC0gbSkgKiBzIC8gbiArIHNkKSk7XG4gICAgICBxdWlja3NlbGVjdChhcnJheSwgaywgbmV3TGVmdCwgbmV3UmlnaHQsIGNvbXBhcmUpO1xuICAgIH1cblxuICAgIGNvbnN0IHQgPSBhcnJheVtrXTtcbiAgICBsZXQgaSA9IGxlZnQ7XG4gICAgbGV0IGogPSByaWdodDtcblxuICAgIHN3YXAoYXJyYXksIGxlZnQsIGspO1xuICAgIGlmIChjb21wYXJlKGFycmF5W3JpZ2h0XSwgdCkgPiAwKSBzd2FwKGFycmF5LCBsZWZ0LCByaWdodCk7XG5cbiAgICB3aGlsZSAoaSA8IGopIHtcbiAgICAgIHN3YXAoYXJyYXksIGksIGopLCArK2ksIC0tajtcbiAgICAgIHdoaWxlIChjb21wYXJlKGFycmF5W2ldLCB0KSA8IDApICsraTtcbiAgICAgIHdoaWxlIChjb21wYXJlKGFycmF5W2pdLCB0KSA+IDApIC0tajtcbiAgICB9XG5cbiAgICBpZiAoY29tcGFyZShhcnJheVtsZWZ0XSwgdCkgPT09IDApIHN3YXAoYXJyYXksIGxlZnQsIGopO1xuICAgIGVsc2UgKytqLCBzd2FwKGFycmF5LCBqLCByaWdodCk7XG5cbiAgICBpZiAoaiA8PSBrKSBsZWZ0ID0gaiArIDE7XG4gICAgaWYgKGsgPD0gaikgcmlnaHQgPSBqIC0gMTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbmZ1bmN0aW9uIHN3YXAoYXJyYXksIGksIGopIHtcbiAgY29uc3QgdCA9IGFycmF5W2ldO1xuICBhcnJheVtpXSA9IGFycmF5W2pdO1xuICBhcnJheVtqXSA9IHQ7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkge1xuICBzdGFydCA9ICtzdGFydCwgc3RvcCA9ICtzdG9wLCBzdGVwID0gKG4gPSBhcmd1bWVudHMubGVuZ3RoKSA8IDIgPyAoc3RvcCA9IHN0YXJ0LCBzdGFydCA9IDAsIDEpIDogbiA8IDMgPyAxIDogK3N0ZXA7XG5cbiAgdmFyIGkgPSAtMSxcbiAgICAgIG4gPSBNYXRoLm1heCgwLCBNYXRoLmNlaWwoKHN0b3AgLSBzdGFydCkgLyBzdGVwKSkgfCAwLFxuICAgICAgcmFuZ2UgPSBuZXcgQXJyYXkobik7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICByYW5nZVtpXSA9IHN0YXJ0ICsgaSAqIHN0ZXA7XG4gIH1cblxuICByZXR1cm4gcmFuZ2U7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWR1Y2UodmFsdWVzLCByZWR1Y2VyLCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHJlZHVjZXIgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcInJlZHVjZXIgaXMgbm90IGEgZnVuY3Rpb25cIik7XG4gIGNvbnN0IGl0ZXJhdG9yID0gdmFsdWVzW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgbGV0IGRvbmUsIG5leHQsIGluZGV4ID0gLTE7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykge1xuICAgICh7ZG9uZSwgdmFsdWV9ID0gaXRlcmF0b3IubmV4dCgpKTtcbiAgICBpZiAoZG9uZSkgcmV0dXJuO1xuICAgICsraW5kZXg7XG4gIH1cbiAgd2hpbGUgKCh7ZG9uZSwgdmFsdWU6IG5leHR9ID0gaXRlcmF0b3IubmV4dCgpKSwgIWRvbmUpIHtcbiAgICB2YWx1ZSA9IHJlZHVjZXIodmFsdWUsIG5leHQsICsraW5kZXgsIHZhbHVlcyk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmV2ZXJzZSh2YWx1ZXMpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZXNbU3ltYm9sLml0ZXJhdG9yXSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsdWVzIGlzIG5vdCBpdGVyYWJsZVwiKTtcbiAgcmV0dXJuIEFycmF5LmZyb20odmFsdWVzKS5yZXZlcnNlKCk7XG59XG4iLCJpbXBvcnQgbGVhc3RJbmRleCBmcm9tIFwiLi9sZWFzdEluZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNjYW4odmFsdWVzLCBjb21wYXJlKSB7XG4gIGNvbnN0IGluZGV4ID0gbGVhc3RJbmRleCh2YWx1ZXMsIGNvbXBhcmUpO1xuICByZXR1cm4gaW5kZXggPCAwID8gdW5kZWZpbmVkIDogaW5kZXg7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXQodmFsdWVzKSB7XG4gIHJldHVybiB2YWx1ZXMgaW5zdGFuY2VvZiBTZXQgPyB2YWx1ZXMgOiBuZXcgU2V0KHZhbHVlcyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBzaHVmZmxlcihNYXRoLnJhbmRvbSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBzaHVmZmxlcihyYW5kb20pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHNodWZmbGUoYXJyYXksIGkwID0gMCwgaTEgPSBhcnJheS5sZW5ndGgpIHtcbiAgICBsZXQgbSA9IGkxIC0gKGkwID0gK2kwKTtcbiAgICB3aGlsZSAobSkge1xuICAgICAgY29uc3QgaSA9IHJhbmRvbSgpICogbS0tIHwgMCwgdCA9IGFycmF5W20gKyBpMF07XG4gICAgICBhcnJheVttICsgaTBdID0gYXJyYXlbaSArIGkwXTtcbiAgICAgIGFycmF5W2kgKyBpMF0gPSB0O1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzb21lKHZhbHVlcywgdGVzdCkge1xuICBpZiAodHlwZW9mIHRlc3QgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcInRlc3QgaXMgbm90IGEgZnVuY3Rpb25cIik7XG4gIGxldCBpbmRleCA9IC0xO1xuICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgIGlmICh0ZXN0KHZhbHVlLCArK2luZGV4LCB2YWx1ZXMpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuIiwiaW1wb3J0IGFzY2VuZGluZyBmcm9tIFwiLi9hc2NlbmRpbmcuanNcIjtcbmltcG9ydCBwZXJtdXRlIGZyb20gXCIuL3Blcm11dGUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc29ydCh2YWx1ZXMsIGYgPSBhc2NlbmRpbmcpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZXNbU3ltYm9sLml0ZXJhdG9yXSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsdWVzIGlzIG5vdCBpdGVyYWJsZVwiKTtcbiAgdmFsdWVzID0gQXJyYXkuZnJvbSh2YWx1ZXMpO1xuICBpZiAoZi5sZW5ndGggPT09IDEpIHtcbiAgICBmID0gdmFsdWVzLm1hcChmKTtcbiAgICByZXR1cm4gcGVybXV0ZSh2YWx1ZXMsIHZhbHVlcy5tYXAoKGQsIGkpID0+IGkpLnNvcnQoKGksIGopID0+IGFzY2VuZGluZyhmW2ldLCBmW2pdKSkpO1xuICB9XG4gIHJldHVybiB2YWx1ZXMuc29ydChmKTtcbn1cbiIsImltcG9ydCBzdXBlcnNldCBmcm9tIFwiLi9zdXBlcnNldC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdWJzZXQodmFsdWVzLCBvdGhlcikge1xuICByZXR1cm4gc3VwZXJzZXQob3RoZXIsIHZhbHVlcyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdW0odmFsdWVzLCB2YWx1ZW9mKSB7XG4gIGxldCBzdW0gPSAwO1xuICBpZiAodmFsdWVvZiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAodmFsdWUgPSArdmFsdWUpIHtcbiAgICAgICAgc3VtICs9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsZXQgaW5kZXggPSAtMTtcbiAgICBmb3IgKGxldCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICh2YWx1ZSA9ICt2YWx1ZW9mKHZhbHVlLCArK2luZGV4LCB2YWx1ZXMpKSB7XG4gICAgICAgIHN1bSArPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIHN1bTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN1cGVyc2V0KHZhbHVlcywgb3RoZXIpIHtcbiAgY29uc3QgaXRlcmF0b3IgPSB2YWx1ZXNbU3ltYm9sLml0ZXJhdG9yXSgpLCBzZXQgPSBuZXcgU2V0KCk7XG4gIGZvciAoY29uc3QgbyBvZiBvdGhlcikge1xuICAgIGlmIChzZXQuaGFzKG8pKSBjb250aW51ZTtcbiAgICBsZXQgdmFsdWUsIGRvbmU7XG4gICAgd2hpbGUgKCh7dmFsdWUsIGRvbmV9ID0gaXRlcmF0b3IubmV4dCgpKSkge1xuICAgICAgaWYgKGRvbmUpIHJldHVybiBmYWxzZTtcbiAgICAgIHNldC5hZGQodmFsdWUpO1xuICAgICAgaWYgKE9iamVjdC5pcyhvLCB2YWx1ZSkpIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbiIsImltcG9ydCBjb3VudCBmcm9tIFwiLi4vY291bnQuanNcIjtcbmltcG9ydCBxdWFudGlsZSBmcm9tIFwiLi4vcXVhbnRpbGUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzLCBtaW4sIG1heCkge1xuICByZXR1cm4gTWF0aC5jZWlsKChtYXggLSBtaW4pIC8gKDIgKiAocXVhbnRpbGUodmFsdWVzLCAwLjc1KSAtIHF1YW50aWxlKHZhbHVlcywgMC4yNSkpICogTWF0aC5wb3coY291bnQodmFsdWVzKSwgLTEgLyAzKSkpO1xufVxuIiwiaW1wb3J0IGNvdW50IGZyb20gXCIuLi9jb3VudC5qc1wiO1xuaW1wb3J0IGRldmlhdGlvbiBmcm9tIFwiLi4vZGV2aWF0aW9uLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlcywgbWluLCBtYXgpIHtcbiAgcmV0dXJuIE1hdGguY2VpbCgobWF4IC0gbWluKSAvICgzLjUgKiBkZXZpYXRpb24odmFsdWVzKSAqIE1hdGgucG93KGNvdW50KHZhbHVlcyksIC0xIC8gMykpKTtcbn1cbiIsImltcG9ydCBjb3VudCBmcm9tIFwiLi4vY291bnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzKSB7XG4gIHJldHVybiBNYXRoLmNlaWwoTWF0aC5sb2coY291bnQodmFsdWVzKSkgLyBNYXRoLkxOMikgKyAxO1xufVxuIiwidmFyIGUxMCA9IE1hdGguc3FydCg1MCksXG4gICAgZTUgPSBNYXRoLnNxcnQoMTApLFxuICAgIGUyID0gTWF0aC5zcXJ0KDIpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHJldmVyc2UsXG4gICAgICBpID0gLTEsXG4gICAgICBuLFxuICAgICAgdGlja3MsXG4gICAgICBzdGVwO1xuXG4gIHN0b3AgPSArc3RvcCwgc3RhcnQgPSArc3RhcnQsIGNvdW50ID0gK2NvdW50O1xuICBpZiAoc3RhcnQgPT09IHN0b3AgJiYgY291bnQgPiAwKSByZXR1cm4gW3N0YXJ0XTtcbiAgaWYgKHJldmVyc2UgPSBzdG9wIDwgc3RhcnQpIG4gPSBzdGFydCwgc3RhcnQgPSBzdG9wLCBzdG9wID0gbjtcbiAgaWYgKChzdGVwID0gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpKSA9PT0gMCB8fCAhaXNGaW5pdGUoc3RlcCkpIHJldHVybiBbXTtcblxuICBpZiAoc3RlcCA+IDApIHtcbiAgICBzdGFydCA9IE1hdGguY2VpbChzdGFydCAvIHN0ZXApO1xuICAgIHN0b3AgPSBNYXRoLmZsb29yKHN0b3AgLyBzdGVwKTtcbiAgICB0aWNrcyA9IG5ldyBBcnJheShuID0gTWF0aC5jZWlsKHN0b3AgLSBzdGFydCArIDEpKTtcbiAgICB3aGlsZSAoKytpIDwgbikgdGlja3NbaV0gPSAoc3RhcnQgKyBpKSAqIHN0ZXA7XG4gIH0gZWxzZSB7XG4gICAgc3RlcCA9IC1zdGVwO1xuICAgIHN0YXJ0ID0gTWF0aC5jZWlsKHN0YXJ0ICogc3RlcCk7XG4gICAgc3RvcCA9IE1hdGguZmxvb3Ioc3RvcCAqIHN0ZXApO1xuICAgIHRpY2tzID0gbmV3IEFycmF5KG4gPSBNYXRoLmNlaWwoc3RvcCAtIHN0YXJ0ICsgMSkpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB0aWNrc1tpXSA9IChzdGFydCArIGkpIC8gc3RlcDtcbiAgfVxuXG4gIGlmIChyZXZlcnNlKSB0aWNrcy5yZXZlcnNlKCk7XG5cbiAgcmV0dXJuIHRpY2tzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGlja0luY3JlbWVudChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAgPSAoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHBvd2VyID0gTWF0aC5mbG9vcihNYXRoLmxvZyhzdGVwKSAvIE1hdGguTE4xMCksXG4gICAgICBlcnJvciA9IHN0ZXAgLyBNYXRoLnBvdygxMCwgcG93ZXIpO1xuICByZXR1cm4gcG93ZXIgPj0gMFxuICAgICAgPyAoZXJyb3IgPj0gZTEwID8gMTAgOiBlcnJvciA+PSBlNSA/IDUgOiBlcnJvciA+PSBlMiA/IDIgOiAxKSAqIE1hdGgucG93KDEwLCBwb3dlcilcbiAgICAgIDogLU1hdGgucG93KDEwLCAtcG93ZXIpIC8gKGVycm9yID49IGUxMCA/IDEwIDogZXJyb3IgPj0gZTUgPyA1IDogZXJyb3IgPj0gZTIgPyAyIDogMSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aWNrU3RlcChzdGFydCwgc3RvcCwgY291bnQpIHtcbiAgdmFyIHN0ZXAwID0gTWF0aC5hYnMoc3RvcCAtIHN0YXJ0KSAvIE1hdGgubWF4KDAsIGNvdW50KSxcbiAgICAgIHN0ZXAxID0gTWF0aC5wb3coMTAsIE1hdGguZmxvb3IoTWF0aC5sb2coc3RlcDApIC8gTWF0aC5MTjEwKSksXG4gICAgICBlcnJvciA9IHN0ZXAwIC8gc3RlcDE7XG4gIGlmIChlcnJvciA+PSBlMTApIHN0ZXAxICo9IDEwO1xuICBlbHNlIGlmIChlcnJvciA+PSBlNSkgc3RlcDEgKj0gNTtcbiAgZWxzZSBpZiAoZXJyb3IgPj0gZTIpIHN0ZXAxICo9IDI7XG4gIHJldHVybiBzdG9wIDwgc3RhcnQgPyAtc3RlcDEgOiBzdGVwMTtcbn1cbiIsImltcG9ydCBtaW4gZnJvbSBcIi4vbWluLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdHJpeCkge1xuICBpZiAoIShuID0gbWF0cml4Lmxlbmd0aCkpIHJldHVybiBbXTtcbiAgZm9yICh2YXIgaSA9IC0xLCBtID0gbWluKG1hdHJpeCwgbGVuZ3RoKSwgdHJhbnNwb3NlID0gbmV3IEFycmF5KG0pOyArK2kgPCBtOykge1xuICAgIGZvciAodmFyIGogPSAtMSwgbiwgcm93ID0gdHJhbnNwb3NlW2ldID0gbmV3IEFycmF5KG4pOyArK2ogPCBuOykge1xuICAgICAgcm93W2pdID0gbWF0cml4W2pdW2ldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJhbnNwb3NlO1xufVxuXG5mdW5jdGlvbiBsZW5ndGgoZCkge1xuICByZXR1cm4gZC5sZW5ndGg7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1bmlvbiguLi5vdGhlcnMpIHtcbiAgY29uc3Qgc2V0ID0gbmV3IFNldCgpO1xuICBmb3IgKGNvbnN0IG90aGVyIG9mIG90aGVycykge1xuICAgIGZvciAoY29uc3QgbyBvZiBvdGhlcikge1xuICAgICAgc2V0LmFkZChvKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHNldDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZhcmlhbmNlKHZhbHVlcywgdmFsdWVvZikge1xuICBsZXQgY291bnQgPSAwO1xuICBsZXQgZGVsdGE7XG4gIGxldCBtZWFuID0gMDtcbiAgbGV0IHN1bSA9IDA7XG4gIGlmICh2YWx1ZW9mID09PSB1bmRlZmluZWQpIHtcbiAgICBmb3IgKGxldCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgIGlmICh2YWx1ZSAhPSBudWxsICYmICh2YWx1ZSA9ICt2YWx1ZSkgPj0gdmFsdWUpIHtcbiAgICAgICAgZGVsdGEgPSB2YWx1ZSAtIG1lYW47XG4gICAgICAgIG1lYW4gKz0gZGVsdGEgLyArK2NvdW50O1xuICAgICAgICBzdW0gKz0gZGVsdGEgKiAodmFsdWUgLSBtZWFuKTtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgbGV0IGluZGV4ID0gLTE7XG4gICAgZm9yIChsZXQgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICBpZiAoKHZhbHVlID0gdmFsdWVvZih2YWx1ZSwgKytpbmRleCwgdmFsdWVzKSkgIT0gbnVsbCAmJiAodmFsdWUgPSArdmFsdWUpID49IHZhbHVlKSB7XG4gICAgICAgIGRlbHRhID0gdmFsdWUgLSBtZWFuO1xuICAgICAgICBtZWFuICs9IGRlbHRhIC8gKytjb3VudDtcbiAgICAgICAgc3VtICs9IGRlbHRhICogKHZhbHVlIC0gbWVhbik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmIChjb3VudCA+IDEpIHJldHVybiBzdW0gLyAoY291bnQgLSAxKTtcbn1cbiIsImltcG9ydCB0cmFuc3Bvc2UgZnJvbSBcIi4vdHJhbnNwb3NlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdHJhbnNwb3NlKGFyZ3VtZW50cyk7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuIiwiaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXkuanNcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi9pZGVudGl0eS5qc1wiO1xuXG52YXIgdG9wID0gMSxcbiAgICByaWdodCA9IDIsXG4gICAgYm90dG9tID0gMyxcbiAgICBsZWZ0ID0gNCxcbiAgICBlcHNpbG9uID0gMWUtNjtcblxuZnVuY3Rpb24gdHJhbnNsYXRlWCh4KSB7XG4gIHJldHVybiBcInRyYW5zbGF0ZShcIiArICh4ICsgMC41KSArIFwiLDApXCI7XG59XG5cbmZ1bmN0aW9uIHRyYW5zbGF0ZVkoeSkge1xuICByZXR1cm4gXCJ0cmFuc2xhdGUoMCxcIiArICh5ICsgMC41KSArIFwiKVwiO1xufVxuXG5mdW5jdGlvbiBudW1iZXIoc2NhbGUpIHtcbiAgcmV0dXJuIGQgPT4gK3NjYWxlKGQpO1xufVxuXG5mdW5jdGlvbiBjZW50ZXIoc2NhbGUpIHtcbiAgdmFyIG9mZnNldCA9IE1hdGgubWF4KDAsIHNjYWxlLmJhbmR3aWR0aCgpIC0gMSkgLyAyOyAvLyBBZGp1c3QgZm9yIDAuNXB4IG9mZnNldC5cbiAgaWYgKHNjYWxlLnJvdW5kKCkpIG9mZnNldCA9IE1hdGgucm91bmQob2Zmc2V0KTtcbiAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gK3NjYWxlKGQpICsgb2Zmc2V0O1xuICB9O1xufVxuXG5mdW5jdGlvbiBlbnRlcmluZygpIHtcbiAgcmV0dXJuICF0aGlzLl9fYXhpcztcbn1cblxuZnVuY3Rpb24gYXhpcyhvcmllbnQsIHNjYWxlKSB7XG4gIHZhciB0aWNrQXJndW1lbnRzID0gW10sXG4gICAgICB0aWNrVmFsdWVzID0gbnVsbCxcbiAgICAgIHRpY2tGb3JtYXQgPSBudWxsLFxuICAgICAgdGlja1NpemVJbm5lciA9IDYsXG4gICAgICB0aWNrU2l6ZU91dGVyID0gNixcbiAgICAgIHRpY2tQYWRkaW5nID0gMyxcbiAgICAgIGsgPSBvcmllbnQgPT09IHRvcCB8fCBvcmllbnQgPT09IGxlZnQgPyAtMSA6IDEsXG4gICAgICB4ID0gb3JpZW50ID09PSBsZWZ0IHx8IG9yaWVudCA9PT0gcmlnaHQgPyBcInhcIiA6IFwieVwiLFxuICAgICAgdHJhbnNmb3JtID0gb3JpZW50ID09PSB0b3AgfHwgb3JpZW50ID09PSBib3R0b20gPyB0cmFuc2xhdGVYIDogdHJhbnNsYXRlWTtcblxuICBmdW5jdGlvbiBheGlzKGNvbnRleHQpIHtcbiAgICB2YXIgdmFsdWVzID0gdGlja1ZhbHVlcyA9PSBudWxsID8gKHNjYWxlLnRpY2tzID8gc2NhbGUudGlja3MuYXBwbHkoc2NhbGUsIHRpY2tBcmd1bWVudHMpIDogc2NhbGUuZG9tYWluKCkpIDogdGlja1ZhbHVlcyxcbiAgICAgICAgZm9ybWF0ID0gdGlja0Zvcm1hdCA9PSBudWxsID8gKHNjYWxlLnRpY2tGb3JtYXQgPyBzY2FsZS50aWNrRm9ybWF0LmFwcGx5KHNjYWxlLCB0aWNrQXJndW1lbnRzKSA6IGlkZW50aXR5KSA6IHRpY2tGb3JtYXQsXG4gICAgICAgIHNwYWNpbmcgPSBNYXRoLm1heCh0aWNrU2l6ZUlubmVyLCAwKSArIHRpY2tQYWRkaW5nLFxuICAgICAgICByYW5nZSA9IHNjYWxlLnJhbmdlKCksXG4gICAgICAgIHJhbmdlMCA9ICtyYW5nZVswXSArIDAuNSxcbiAgICAgICAgcmFuZ2UxID0gK3JhbmdlW3JhbmdlLmxlbmd0aCAtIDFdICsgMC41LFxuICAgICAgICBwb3NpdGlvbiA9IChzY2FsZS5iYW5kd2lkdGggPyBjZW50ZXIgOiBudW1iZXIpKHNjYWxlLmNvcHkoKSksXG4gICAgICAgIHNlbGVjdGlvbiA9IGNvbnRleHQuc2VsZWN0aW9uID8gY29udGV4dC5zZWxlY3Rpb24oKSA6IGNvbnRleHQsXG4gICAgICAgIHBhdGggPSBzZWxlY3Rpb24uc2VsZWN0QWxsKFwiLmRvbWFpblwiKS5kYXRhKFtudWxsXSksXG4gICAgICAgIHRpY2sgPSBzZWxlY3Rpb24uc2VsZWN0QWxsKFwiLnRpY2tcIikuZGF0YSh2YWx1ZXMsIHNjYWxlKS5vcmRlcigpLFxuICAgICAgICB0aWNrRXhpdCA9IHRpY2suZXhpdCgpLFxuICAgICAgICB0aWNrRW50ZXIgPSB0aWNrLmVudGVyKCkuYXBwZW5kKFwiZ1wiKS5hdHRyKFwiY2xhc3NcIiwgXCJ0aWNrXCIpLFxuICAgICAgICBsaW5lID0gdGljay5zZWxlY3QoXCJsaW5lXCIpLFxuICAgICAgICB0ZXh0ID0gdGljay5zZWxlY3QoXCJ0ZXh0XCIpO1xuXG4gICAgcGF0aCA9IHBhdGgubWVyZ2UocGF0aC5lbnRlcigpLmluc2VydChcInBhdGhcIiwgXCIudGlja1wiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwiZG9tYWluXCIpXG4gICAgICAgIC5hdHRyKFwic3Ryb2tlXCIsIFwiY3VycmVudENvbG9yXCIpKTtcblxuICAgIHRpY2sgPSB0aWNrLm1lcmdlKHRpY2tFbnRlcik7XG5cbiAgICBsaW5lID0gbGluZS5tZXJnZSh0aWNrRW50ZXIuYXBwZW5kKFwibGluZVwiKVxuICAgICAgICAuYXR0cihcInN0cm9rZVwiLCBcImN1cnJlbnRDb2xvclwiKVxuICAgICAgICAuYXR0cih4ICsgXCIyXCIsIGsgKiB0aWNrU2l6ZUlubmVyKSk7XG5cbiAgICB0ZXh0ID0gdGV4dC5tZXJnZSh0aWNrRW50ZXIuYXBwZW5kKFwidGV4dFwiKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCJjdXJyZW50Q29sb3JcIilcbiAgICAgICAgLmF0dHIoeCwgayAqIHNwYWNpbmcpXG4gICAgICAgIC5hdHRyKFwiZHlcIiwgb3JpZW50ID09PSB0b3AgPyBcIjBlbVwiIDogb3JpZW50ID09PSBib3R0b20gPyBcIjAuNzFlbVwiIDogXCIwLjMyZW1cIikpO1xuXG4gICAgaWYgKGNvbnRleHQgIT09IHNlbGVjdGlvbikge1xuICAgICAgcGF0aCA9IHBhdGgudHJhbnNpdGlvbihjb250ZXh0KTtcbiAgICAgIHRpY2sgPSB0aWNrLnRyYW5zaXRpb24oY29udGV4dCk7XG4gICAgICBsaW5lID0gbGluZS50cmFuc2l0aW9uKGNvbnRleHQpO1xuICAgICAgdGV4dCA9IHRleHQudHJhbnNpdGlvbihjb250ZXh0KTtcblxuICAgICAgdGlja0V4aXQgPSB0aWNrRXhpdC50cmFuc2l0aW9uKGNvbnRleHQpXG4gICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGVwc2lsb24pXG4gICAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gaXNGaW5pdGUoZCA9IHBvc2l0aW9uKGQpKSA/IHRyYW5zZm9ybShkKSA6IHRoaXMuZ2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIpOyB9KTtcblxuICAgICAgdGlja0VudGVyXG4gICAgICAgICAgLmF0dHIoXCJvcGFjaXR5XCIsIGVwc2lsb24pXG4gICAgICAgICAgLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkgeyB2YXIgcCA9IHRoaXMucGFyZW50Tm9kZS5fX2F4aXM7IHJldHVybiB0cmFuc2Zvcm0ocCAmJiBpc0Zpbml0ZShwID0gcChkKSkgPyBwIDogcG9zaXRpb24oZCkpOyB9KTtcbiAgICB9XG5cbiAgICB0aWNrRXhpdC5yZW1vdmUoKTtcblxuICAgIHBhdGhcbiAgICAgICAgLmF0dHIoXCJkXCIsIG9yaWVudCA9PT0gbGVmdCB8fCBvcmllbnQgPT0gcmlnaHRcbiAgICAgICAgICAgID8gKHRpY2tTaXplT3V0ZXIgPyBcIk1cIiArIGsgKiB0aWNrU2l6ZU91dGVyICsgXCIsXCIgKyByYW5nZTAgKyBcIkgwLjVWXCIgKyByYW5nZTEgKyBcIkhcIiArIGsgKiB0aWNrU2l6ZU91dGVyIDogXCJNMC41LFwiICsgcmFuZ2UwICsgXCJWXCIgKyByYW5nZTEpXG4gICAgICAgICAgICA6ICh0aWNrU2l6ZU91dGVyID8gXCJNXCIgKyByYW5nZTAgKyBcIixcIiArIGsgKiB0aWNrU2l6ZU91dGVyICsgXCJWMC41SFwiICsgcmFuZ2UxICsgXCJWXCIgKyBrICogdGlja1NpemVPdXRlciA6IFwiTVwiICsgcmFuZ2UwICsgXCIsMC41SFwiICsgcmFuZ2UxKSk7XG5cbiAgICB0aWNrXG4gICAgICAgIC5hdHRyKFwib3BhY2l0eVwiLCAxKVxuICAgICAgICAuYXR0cihcInRyYW5zZm9ybVwiLCBmdW5jdGlvbihkKSB7IHJldHVybiB0cmFuc2Zvcm0ocG9zaXRpb24oZCkpOyB9KTtcblxuICAgIGxpbmVcbiAgICAgICAgLmF0dHIoeCArIFwiMlwiLCBrICogdGlja1NpemVJbm5lcik7XG5cbiAgICB0ZXh0XG4gICAgICAgIC5hdHRyKHgsIGsgKiBzcGFjaW5nKVxuICAgICAgICAudGV4dChmb3JtYXQpO1xuXG4gICAgc2VsZWN0aW9uLmZpbHRlcihlbnRlcmluZylcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKVxuICAgICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCAxMClcbiAgICAgICAgLmF0dHIoXCJmb250LWZhbWlseVwiLCBcInNhbnMtc2VyaWZcIilcbiAgICAgICAgLmF0dHIoXCJ0ZXh0LWFuY2hvclwiLCBvcmllbnQgPT09IHJpZ2h0ID8gXCJzdGFydFwiIDogb3JpZW50ID09PSBsZWZ0ID8gXCJlbmRcIiA6IFwibWlkZGxlXCIpO1xuXG4gICAgc2VsZWN0aW9uXG4gICAgICAgIC5lYWNoKGZ1bmN0aW9uKCkgeyB0aGlzLl9fYXhpcyA9IHBvc2l0aW9uOyB9KTtcbiAgfVxuXG4gIGF4aXMuc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGUgPSBfLCBheGlzKSA6IHNjYWxlO1xuICB9O1xuXG4gIGF4aXMudGlja3MgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGlja0FyZ3VtZW50cyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSwgYXhpcztcbiAgfTtcblxuICBheGlzLnRpY2tBcmd1bWVudHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja0FyZ3VtZW50cyA9IF8gPT0gbnVsbCA/IFtdIDogc2xpY2UuY2FsbChfKSwgYXhpcykgOiB0aWNrQXJndW1lbnRzLnNsaWNlKCk7XG4gIH07XG5cbiAgYXhpcy50aWNrVmFsdWVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tWYWx1ZXMgPSBfID09IG51bGwgPyBudWxsIDogc2xpY2UuY2FsbChfKSwgYXhpcykgOiB0aWNrVmFsdWVzICYmIHRpY2tWYWx1ZXMuc2xpY2UoKTtcbiAgfTtcblxuICBheGlzLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja0Zvcm1hdCA9IF8sIGF4aXMpIDogdGlja0Zvcm1hdDtcbiAgfTtcblxuICBheGlzLnRpY2tTaXplID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tTaXplSW5uZXIgPSB0aWNrU2l6ZU91dGVyID0gK18sIGF4aXMpIDogdGlja1NpemVJbm5lcjtcbiAgfTtcblxuICBheGlzLnRpY2tTaXplSW5uZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja1NpemVJbm5lciA9ICtfLCBheGlzKSA6IHRpY2tTaXplSW5uZXI7XG4gIH07XG5cbiAgYXhpcy50aWNrU2l6ZU91dGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpY2tTaXplT3V0ZXIgPSArXywgYXhpcykgOiB0aWNrU2l6ZU91dGVyO1xuICB9O1xuXG4gIGF4aXMudGlja1BhZGRpbmcgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGlja1BhZGRpbmcgPSArXywgYXhpcykgOiB0aWNrUGFkZGluZztcbiAgfTtcblxuICByZXR1cm4gYXhpcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF4aXNUb3Aoc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXModG9wLCBzY2FsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzUmlnaHQoc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXMocmlnaHQsIHNjYWxlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGF4aXNCb3R0b20oc2NhbGUpIHtcbiAgcmV0dXJuIGF4aXMoYm90dG9tLCBzY2FsZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBheGlzTGVmdChzY2FsZSkge1xuICByZXR1cm4gYXhpcyhsZWZ0LCBzY2FsZSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4O1xufVxuIiwiZXhwb3J0IHtcbiAgYXhpc1RvcCxcbiAgYXhpc1JpZ2h0LFxuICBheGlzQm90dG9tLFxuICBheGlzTGVmdFxufSBmcm9tIFwiLi9heGlzLmpzXCI7XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7ZHJhZ0Rpc2FibGUsIGRyYWdFbmFibGV9IGZyb20gXCJkMy1kcmFnXCI7XG5pbXBvcnQge2ludGVycG9sYXRlfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7cG9pbnRlciwgc2VsZWN0fSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge2ludGVycnVwdH0gZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IEJydXNoRXZlbnQgZnJvbSBcIi4vZXZlbnQuanNcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudC5qc1wiO1xuXG52YXIgTU9ERV9EUkFHID0ge25hbWU6IFwiZHJhZ1wifSxcbiAgICBNT0RFX1NQQUNFID0ge25hbWU6IFwic3BhY2VcIn0sXG4gICAgTU9ERV9IQU5ETEUgPSB7bmFtZTogXCJoYW5kbGVcIn0sXG4gICAgTU9ERV9DRU5URVIgPSB7bmFtZTogXCJjZW50ZXJcIn07XG5cbmNvbnN0IHthYnMsIG1heCwgbWlufSA9IE1hdGg7XG5cbmZ1bmN0aW9uIG51bWJlcjEoZSkge1xuICByZXR1cm4gWytlWzBdLCArZVsxXV07XG59XG5cbmZ1bmN0aW9uIG51bWJlcjIoZSkge1xuICByZXR1cm4gW251bWJlcjEoZVswXSksIG51bWJlcjEoZVsxXSldO1xufVxuXG52YXIgWCA9IHtcbiAgbmFtZTogXCJ4XCIsXG4gIGhhbmRsZXM6IFtcIndcIiwgXCJlXCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHgsIGUpIHsgcmV0dXJuIHggPT0gbnVsbCA/IG51bGwgOiBbWyt4WzBdLCBlWzBdWzFdXSwgWyt4WzFdLCBlWzFdWzFdXV07IH0sXG4gIG91dHB1dDogZnVuY3Rpb24oeHkpIHsgcmV0dXJuIHh5ICYmIFt4eVswXVswXSwgeHlbMV1bMF1dOyB9XG59O1xuXG52YXIgWSA9IHtcbiAgbmFtZTogXCJ5XCIsXG4gIGhhbmRsZXM6IFtcIm5cIiwgXCJzXCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHksIGUpIHsgcmV0dXJuIHkgPT0gbnVsbCA/IG51bGwgOiBbW2VbMF1bMF0sICt5WzBdXSwgW2VbMV1bMF0sICt5WzFdXV07IH0sXG4gIG91dHB1dDogZnVuY3Rpb24oeHkpIHsgcmV0dXJuIHh5ICYmIFt4eVswXVsxXSwgeHlbMV1bMV1dOyB9XG59O1xuXG52YXIgWFkgPSB7XG4gIG5hbWU6IFwieHlcIixcbiAgaGFuZGxlczogW1wiblwiLCBcIndcIiwgXCJlXCIsIFwic1wiLCBcIm53XCIsIFwibmVcIiwgXCJzd1wiLCBcInNlXCJdLm1hcCh0eXBlKSxcbiAgaW5wdXQ6IGZ1bmN0aW9uKHh5KSB7IHJldHVybiB4eSA9PSBudWxsID8gbnVsbCA6IG51bWJlcjIoeHkpOyB9LFxuICBvdXRwdXQ6IGZ1bmN0aW9uKHh5KSB7IHJldHVybiB4eTsgfVxufTtcblxudmFyIGN1cnNvcnMgPSB7XG4gIG92ZXJsYXk6IFwiY3Jvc3NoYWlyXCIsXG4gIHNlbGVjdGlvbjogXCJtb3ZlXCIsXG4gIG46IFwibnMtcmVzaXplXCIsXG4gIGU6IFwiZXctcmVzaXplXCIsXG4gIHM6IFwibnMtcmVzaXplXCIsXG4gIHc6IFwiZXctcmVzaXplXCIsXG4gIG53OiBcIm53c2UtcmVzaXplXCIsXG4gIG5lOiBcIm5lc3ctcmVzaXplXCIsXG4gIHNlOiBcIm53c2UtcmVzaXplXCIsXG4gIHN3OiBcIm5lc3ctcmVzaXplXCJcbn07XG5cbnZhciBmbGlwWCA9IHtcbiAgZTogXCJ3XCIsXG4gIHc6IFwiZVwiLFxuICBudzogXCJuZVwiLFxuICBuZTogXCJud1wiLFxuICBzZTogXCJzd1wiLFxuICBzdzogXCJzZVwiXG59O1xuXG52YXIgZmxpcFkgPSB7XG4gIG46IFwic1wiLFxuICBzOiBcIm5cIixcbiAgbnc6IFwic3dcIixcbiAgbmU6IFwic2VcIixcbiAgc2U6IFwibmVcIixcbiAgc3c6IFwibndcIlxufTtcblxudmFyIHNpZ25zWCA9IHtcbiAgb3ZlcmxheTogKzEsXG4gIHNlbGVjdGlvbjogKzEsXG4gIG46IG51bGwsXG4gIGU6ICsxLFxuICBzOiBudWxsLFxuICB3OiAtMSxcbiAgbnc6IC0xLFxuICBuZTogKzEsXG4gIHNlOiArMSxcbiAgc3c6IC0xXG59O1xuXG52YXIgc2lnbnNZID0ge1xuICBvdmVybGF5OiArMSxcbiAgc2VsZWN0aW9uOiArMSxcbiAgbjogLTEsXG4gIGU6IG51bGwsXG4gIHM6ICsxLFxuICB3OiBudWxsLFxuICBudzogLTEsXG4gIG5lOiAtMSxcbiAgc2U6ICsxLFxuICBzdzogKzFcbn07XG5cbmZ1bmN0aW9uIHR5cGUodCkge1xuICByZXR1cm4ge3R5cGU6IHR9O1xufVxuXG4vLyBJZ25vcmUgcmlnaHQtY2xpY2ssIHNpbmNlIHRoYXQgc2hvdWxkIG9wZW4gdGhlIGNvbnRleHQgbWVudS5cbmZ1bmN0aW9uIGRlZmF1bHRGaWx0ZXIoZXZlbnQpIHtcbiAgcmV0dXJuICFldmVudC5jdHJsS2V5ICYmICFldmVudC5idXR0b247XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRFeHRlbnQoKSB7XG4gIHZhciBzdmcgPSB0aGlzLm93bmVyU1ZHRWxlbWVudCB8fCB0aGlzO1xuICBpZiAoc3ZnLmhhc0F0dHJpYnV0ZShcInZpZXdCb3hcIikpIHtcbiAgICBzdmcgPSBzdmcudmlld0JveC5iYXNlVmFsO1xuICAgIHJldHVybiBbW3N2Zy54LCBzdmcueV0sIFtzdmcueCArIHN2Zy53aWR0aCwgc3ZnLnkgKyBzdmcuaGVpZ2h0XV07XG4gIH1cbiAgcmV0dXJuIFtbMCwgMF0sIFtzdmcud2lkdGguYmFzZVZhbC52YWx1ZSwgc3ZnLmhlaWdodC5iYXNlVmFsLnZhbHVlXV07XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUb3VjaGFibGUoKSB7XG4gIHJldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgfHwgKFwib250b3VjaHN0YXJ0XCIgaW4gdGhpcyk7XG59XG5cbi8vIExpa2UgZDMubG9jYWwsIGJ1dCB3aXRoIHRoZSBuYW1lIOKAnF9fYnJ1c2jigJ0gcmF0aGVyIHRoYW4gYXV0by1nZW5lcmF0ZWQuXG5mdW5jdGlvbiBsb2NhbChub2RlKSB7XG4gIHdoaWxlICghbm9kZS5fX2JydXNoKSBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkgcmV0dXJuO1xuICByZXR1cm4gbm9kZS5fX2JydXNoO1xufVxuXG5mdW5jdGlvbiBlbXB0eShleHRlbnQpIHtcbiAgcmV0dXJuIGV4dGVudFswXVswXSA9PT0gZXh0ZW50WzFdWzBdXG4gICAgICB8fCBleHRlbnRbMF1bMV0gPT09IGV4dGVudFsxXVsxXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJydXNoU2VsZWN0aW9uKG5vZGUpIHtcbiAgdmFyIHN0YXRlID0gbm9kZS5fX2JydXNoO1xuICByZXR1cm4gc3RhdGUgPyBzdGF0ZS5kaW0ub3V0cHV0KHN0YXRlLnNlbGVjdGlvbikgOiBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnJ1c2hYKCkge1xuICByZXR1cm4gYnJ1c2goWCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBicnVzaFkoKSB7XG4gIHJldHVybiBicnVzaChZKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBicnVzaChYWSk7XG59XG5cbmZ1bmN0aW9uIGJydXNoKGRpbSkge1xuICB2YXIgZXh0ZW50ID0gZGVmYXVsdEV4dGVudCxcbiAgICAgIGZpbHRlciA9IGRlZmF1bHRGaWx0ZXIsXG4gICAgICB0b3VjaGFibGUgPSBkZWZhdWx0VG91Y2hhYmxlLFxuICAgICAga2V5cyA9IHRydWUsXG4gICAgICBsaXN0ZW5lcnMgPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiYnJ1c2hcIiwgXCJlbmRcIiksXG4gICAgICBoYW5kbGVTaXplID0gNixcbiAgICAgIHRvdWNoZW5kaW5nO1xuXG4gIGZ1bmN0aW9uIGJydXNoKGdyb3VwKSB7XG4gICAgdmFyIG92ZXJsYXkgPSBncm91cFxuICAgICAgICAucHJvcGVydHkoXCJfX2JydXNoXCIsIGluaXRpYWxpemUpXG4gICAgICAuc2VsZWN0QWxsKFwiLm92ZXJsYXlcIilcbiAgICAgIC5kYXRhKFt0eXBlKFwib3ZlcmxheVwiKV0pO1xuXG4gICAgb3ZlcmxheS5lbnRlcigpLmFwcGVuZChcInJlY3RcIilcbiAgICAgICAgLmF0dHIoXCJjbGFzc1wiLCBcIm92ZXJsYXlcIilcbiAgICAgICAgLmF0dHIoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKVxuICAgICAgICAuYXR0cihcImN1cnNvclwiLCBjdXJzb3JzLm92ZXJsYXkpXG4gICAgICAubWVyZ2Uob3ZlcmxheSlcbiAgICAgICAgLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIGV4dGVudCA9IGxvY2FsKHRoaXMpLmV4dGVudDtcbiAgICAgICAgICBzZWxlY3QodGhpcylcbiAgICAgICAgICAgICAgLmF0dHIoXCJ4XCIsIGV4dGVudFswXVswXSlcbiAgICAgICAgICAgICAgLmF0dHIoXCJ5XCIsIGV4dGVudFswXVsxXSlcbiAgICAgICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBleHRlbnRbMV1bMF0gLSBleHRlbnRbMF1bMF0pXG4gICAgICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIGV4dGVudFsxXVsxXSAtIGV4dGVudFswXVsxXSk7XG4gICAgICAgIH0pO1xuXG4gICAgZ3JvdXAuc2VsZWN0QWxsKFwiLnNlbGVjdGlvblwiKVxuICAgICAgLmRhdGEoW3R5cGUoXCJzZWxlY3Rpb25cIildKVxuICAgICAgLmVudGVyKCkuYXBwZW5kKFwicmVjdFwiKVxuICAgICAgICAuYXR0cihcImNsYXNzXCIsIFwic2VsZWN0aW9uXCIpXG4gICAgICAgIC5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnMuc2VsZWN0aW9uKVxuICAgICAgICAuYXR0cihcImZpbGxcIiwgXCIjNzc3XCIpXG4gICAgICAgIC5hdHRyKFwiZmlsbC1vcGFjaXR5XCIsIDAuMylcbiAgICAgICAgLmF0dHIoXCJzdHJva2VcIiwgXCIjZmZmXCIpXG4gICAgICAgIC5hdHRyKFwic2hhcGUtcmVuZGVyaW5nXCIsIFwiY3Jpc3BFZGdlc1wiKTtcblxuICAgIHZhciBoYW5kbGUgPSBncm91cC5zZWxlY3RBbGwoXCIuaGFuZGxlXCIpXG4gICAgICAuZGF0YShkaW0uaGFuZGxlcywgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC50eXBlOyB9KTtcblxuICAgIGhhbmRsZS5leGl0KCkucmVtb3ZlKCk7XG5cbiAgICBoYW5kbGUuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpXG4gICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gXCJoYW5kbGUgaGFuZGxlLS1cIiArIGQudHlwZTsgfSlcbiAgICAgICAgLmF0dHIoXCJjdXJzb3JcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gY3Vyc29yc1tkLnR5cGVdOyB9KTtcblxuICAgIGdyb3VwXG4gICAgICAgIC5lYWNoKHJlZHJhdylcbiAgICAgICAgLmF0dHIoXCJmaWxsXCIsIFwibm9uZVwiKVxuICAgICAgICAuYXR0cihcInBvaW50ZXItZXZlbnRzXCIsIFwiYWxsXCIpXG4gICAgICAgIC5vbihcIm1vdXNlZG93bi5icnVzaFwiLCBzdGFydGVkKVxuICAgICAgLmZpbHRlcih0b3VjaGFibGUpXG4gICAgICAgIC5vbihcInRvdWNoc3RhcnQuYnJ1c2hcIiwgc3RhcnRlZClcbiAgICAgICAgLm9uKFwidG91Y2htb3ZlLmJydXNoXCIsIHRvdWNobW92ZWQpXG4gICAgICAgIC5vbihcInRvdWNoZW5kLmJydXNoIHRvdWNoY2FuY2VsLmJydXNoXCIsIHRvdWNoZW5kZWQpXG4gICAgICAgIC5zdHlsZShcInRvdWNoLWFjdGlvblwiLCBcIm5vbmVcIilcbiAgICAgICAgLnN0eWxlKFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsIFwicmdiYSgwLDAsMCwwKVwiKTtcbiAgfVxuXG4gIGJydXNoLm1vdmUgPSBmdW5jdGlvbihncm91cCwgc2VsZWN0aW9uKSB7XG4gICAgaWYgKGdyb3VwLnR3ZWVuKSB7XG4gICAgICBncm91cFxuICAgICAgICAgIC5vbihcInN0YXJ0LmJydXNoXCIsIGZ1bmN0aW9uKGV2ZW50KSB7IGVtaXR0ZXIodGhpcywgYXJndW1lbnRzKS5iZWZvcmVzdGFydCgpLnN0YXJ0KGV2ZW50KTsgfSlcbiAgICAgICAgICAub24oXCJpbnRlcnJ1cHQuYnJ1c2ggZW5kLmJydXNoXCIsIGZ1bmN0aW9uKGV2ZW50KSB7IGVtaXR0ZXIodGhpcywgYXJndW1lbnRzKS5lbmQoZXZlbnQpOyB9KVxuICAgICAgICAgIC50d2VlbihcImJydXNoXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzLFxuICAgICAgICAgICAgICAgIHN0YXRlID0gdGhhdC5fX2JydXNoLFxuICAgICAgICAgICAgICAgIGVtaXQgPSBlbWl0dGVyKHRoYXQsIGFyZ3VtZW50cyksXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uMCA9IHN0YXRlLnNlbGVjdGlvbixcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24xID0gZGltLmlucHV0KHR5cGVvZiBzZWxlY3Rpb24gPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogc2VsZWN0aW9uLCBzdGF0ZS5leHRlbnQpLFxuICAgICAgICAgICAgICAgIGkgPSBpbnRlcnBvbGF0ZShzZWxlY3Rpb24wLCBzZWxlY3Rpb24xKTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gdHdlZW4odCkge1xuICAgICAgICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSB0ID09PSAxICYmIHNlbGVjdGlvbjEgPT09IG51bGwgPyBudWxsIDogaSh0KTtcbiAgICAgICAgICAgICAgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICAgICAgICAgIGVtaXQuYnJ1c2goKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGlvbjAgIT09IG51bGwgJiYgc2VsZWN0aW9uMSAhPT0gbnVsbCA/IHR3ZWVuIDogdHdlZW4oMSk7XG4gICAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3VwXG4gICAgICAgICAgLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICAgICAgICBzdGF0ZSA9IHRoYXQuX19icnVzaCxcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24xID0gZGltLmlucHV0KHR5cGVvZiBzZWxlY3Rpb24gPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdGlvbi5hcHBseSh0aGF0LCBhcmdzKSA6IHNlbGVjdGlvbiwgc3RhdGUuZXh0ZW50KSxcbiAgICAgICAgICAgICAgICBlbWl0ID0gZW1pdHRlcih0aGF0LCBhcmdzKS5iZWZvcmVzdGFydCgpO1xuXG4gICAgICAgICAgICBpbnRlcnJ1cHQodGhhdCk7XG4gICAgICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSBzZWxlY3Rpb24xID09PSBudWxsID8gbnVsbCA6IHNlbGVjdGlvbjE7XG4gICAgICAgICAgICByZWRyYXcuY2FsbCh0aGF0KTtcbiAgICAgICAgICAgIGVtaXQuc3RhcnQoKS5icnVzaCgpLmVuZCgpO1xuICAgICAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuICBicnVzaC5jbGVhciA9IGZ1bmN0aW9uKGdyb3VwKSB7XG4gICAgYnJ1c2gubW92ZShncm91cCwgbnVsbCk7XG4gIH07XG5cbiAgZnVuY3Rpb24gcmVkcmF3KCkge1xuICAgIHZhciBncm91cCA9IHNlbGVjdCh0aGlzKSxcbiAgICAgICAgc2VsZWN0aW9uID0gbG9jYWwodGhpcykuc2VsZWN0aW9uO1xuXG4gICAgaWYgKHNlbGVjdGlvbikge1xuICAgICAgZ3JvdXAuc2VsZWN0QWxsKFwiLnNlbGVjdGlvblwiKVxuICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgbnVsbClcbiAgICAgICAgICAuYXR0cihcInhcIiwgc2VsZWN0aW9uWzBdWzBdKVxuICAgICAgICAgIC5hdHRyKFwieVwiLCBzZWxlY3Rpb25bMF1bMV0pXG4gICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBzZWxlY3Rpb25bMV1bMF0gLSBzZWxlY3Rpb25bMF1bMF0pXG4gICAgICAgICAgLmF0dHIoXCJoZWlnaHRcIiwgc2VsZWN0aW9uWzFdWzFdIC0gc2VsZWN0aW9uWzBdWzFdKTtcblxuICAgICAgZ3JvdXAuc2VsZWN0QWxsKFwiLmhhbmRsZVwiKVxuICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgbnVsbClcbiAgICAgICAgICAuYXR0cihcInhcIiwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC50eXBlW2QudHlwZS5sZW5ndGggLSAxXSA9PT0gXCJlXCIgPyBzZWxlY3Rpb25bMV1bMF0gLSBoYW5kbGVTaXplIC8gMiA6IHNlbGVjdGlvblswXVswXSAtIGhhbmRsZVNpemUgLyAyOyB9KVxuICAgICAgICAgIC5hdHRyKFwieVwiLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLnR5cGVbMF0gPT09IFwic1wiID8gc2VsZWN0aW9uWzFdWzFdIC0gaGFuZGxlU2l6ZSAvIDIgOiBzZWxlY3Rpb25bMF1bMV0gLSBoYW5kbGVTaXplIC8gMjsgfSlcbiAgICAgICAgICAuYXR0cihcIndpZHRoXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudHlwZSA9PT0gXCJuXCIgfHwgZC50eXBlID09PSBcInNcIiA/IHNlbGVjdGlvblsxXVswXSAtIHNlbGVjdGlvblswXVswXSArIGhhbmRsZVNpemUgOiBoYW5kbGVTaXplOyB9KVxuICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQudHlwZSA9PT0gXCJlXCIgfHwgZC50eXBlID09PSBcIndcIiA/IHNlbGVjdGlvblsxXVsxXSAtIHNlbGVjdGlvblswXVsxXSArIGhhbmRsZVNpemUgOiBoYW5kbGVTaXplOyB9KTtcbiAgICB9XG5cbiAgICBlbHNlIHtcbiAgICAgIGdyb3VwLnNlbGVjdEFsbChcIi5zZWxlY3Rpb24sLmhhbmRsZVwiKVxuICAgICAgICAgIC5zdHlsZShcImRpc3BsYXlcIiwgXCJub25lXCIpXG4gICAgICAgICAgLmF0dHIoXCJ4XCIsIG51bGwpXG4gICAgICAgICAgLmF0dHIoXCJ5XCIsIG51bGwpXG4gICAgICAgICAgLmF0dHIoXCJ3aWR0aFwiLCBudWxsKVxuICAgICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIG51bGwpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGVtaXR0ZXIodGhhdCwgYXJncywgY2xlYW4pIHtcbiAgICB2YXIgZW1pdCA9IHRoYXQuX19icnVzaC5lbWl0dGVyO1xuICAgIHJldHVybiBlbWl0ICYmICghY2xlYW4gfHwgIWVtaXQuY2xlYW4pID8gZW1pdCA6IG5ldyBFbWl0dGVyKHRoYXQsIGFyZ3MsIGNsZWFuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEVtaXR0ZXIodGhhdCwgYXJncywgY2xlYW4pIHtcbiAgICB0aGlzLnRoYXQgPSB0aGF0O1xuICAgIHRoaXMuYXJncyA9IGFyZ3M7XG4gICAgdGhpcy5zdGF0ZSA9IHRoYXQuX19icnVzaDtcbiAgICB0aGlzLmFjdGl2ZSA9IDA7XG4gICAgdGhpcy5jbGVhbiA9IGNsZWFuO1xuICB9XG5cbiAgRW1pdHRlci5wcm90b3R5cGUgPSB7XG4gICAgYmVmb3Jlc3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCsrdGhpcy5hY3RpdmUgPT09IDEpIHRoaXMuc3RhdGUuZW1pdHRlciA9IHRoaXMsIHRoaXMuc3RhcnRpbmcgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBzdGFydDogZnVuY3Rpb24oZXZlbnQsIG1vZGUpIHtcbiAgICAgIGlmICh0aGlzLnN0YXJ0aW5nKSB0aGlzLnN0YXJ0aW5nID0gZmFsc2UsIHRoaXMuZW1pdChcInN0YXJ0XCIsIGV2ZW50LCBtb2RlKTtcbiAgICAgIGVsc2UgdGhpcy5lbWl0KFwiYnJ1c2hcIiwgZXZlbnQpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBicnVzaDogZnVuY3Rpb24oZXZlbnQsIG1vZGUpIHtcbiAgICAgIHRoaXMuZW1pdChcImJydXNoXCIsIGV2ZW50LCBtb2RlKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgZW5kOiBmdW5jdGlvbihldmVudCwgbW9kZSkge1xuICAgICAgaWYgKC0tdGhpcy5hY3RpdmUgPT09IDApIGRlbGV0ZSB0aGlzLnN0YXRlLmVtaXR0ZXIsIHRoaXMuZW1pdChcImVuZFwiLCBldmVudCwgbW9kZSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGVtaXQ6IGZ1bmN0aW9uKHR5cGUsIGV2ZW50LCBtb2RlKSB7XG4gICAgICB2YXIgZCA9IHNlbGVjdCh0aGlzLnRoYXQpLmRhdHVtKCk7XG4gICAgICBsaXN0ZW5lcnMuY2FsbChcbiAgICAgICAgdHlwZSxcbiAgICAgICAgdGhpcy50aGF0LFxuICAgICAgICBuZXcgQnJ1c2hFdmVudCh0eXBlLCB7XG4gICAgICAgICAgc291cmNlRXZlbnQ6IGV2ZW50LFxuICAgICAgICAgIHRhcmdldDogYnJ1c2gsXG4gICAgICAgICAgc2VsZWN0aW9uOiBkaW0ub3V0cHV0KHRoaXMuc3RhdGUuc2VsZWN0aW9uKSxcbiAgICAgICAgICBtb2RlLFxuICAgICAgICAgIGRpc3BhdGNoOiBsaXN0ZW5lcnNcbiAgICAgICAgfSksXG4gICAgICAgIGRcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIGZ1bmN0aW9uIHN0YXJ0ZWQoZXZlbnQpIHtcbiAgICBpZiAodG91Y2hlbmRpbmcgJiYgIWV2ZW50LnRvdWNoZXMpIHJldHVybjtcbiAgICBpZiAoIWZpbHRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSByZXR1cm47XG5cbiAgICB2YXIgdGhhdCA9IHRoaXMsXG4gICAgICAgIHR5cGUgPSBldmVudC50YXJnZXQuX19kYXRhX18udHlwZSxcbiAgICAgICAgbW9kZSA9IChrZXlzICYmIGV2ZW50Lm1ldGFLZXkgPyB0eXBlID0gXCJvdmVybGF5XCIgOiB0eXBlKSA9PT0gXCJzZWxlY3Rpb25cIiA/IE1PREVfRFJBRyA6IChrZXlzICYmIGV2ZW50LmFsdEtleSA/IE1PREVfQ0VOVEVSIDogTU9ERV9IQU5ETEUpLFxuICAgICAgICBzaWduWCA9IGRpbSA9PT0gWSA/IG51bGwgOiBzaWduc1hbdHlwZV0sXG4gICAgICAgIHNpZ25ZID0gZGltID09PSBYID8gbnVsbCA6IHNpZ25zWVt0eXBlXSxcbiAgICAgICAgc3RhdGUgPSBsb2NhbCh0aGF0KSxcbiAgICAgICAgZXh0ZW50ID0gc3RhdGUuZXh0ZW50LFxuICAgICAgICBzZWxlY3Rpb24gPSBzdGF0ZS5zZWxlY3Rpb24sXG4gICAgICAgIFcgPSBleHRlbnRbMF1bMF0sIHcwLCB3MSxcbiAgICAgICAgTiA9IGV4dGVudFswXVsxXSwgbjAsIG4xLFxuICAgICAgICBFID0gZXh0ZW50WzFdWzBdLCBlMCwgZTEsXG4gICAgICAgIFMgPSBleHRlbnRbMV1bMV0sIHMwLCBzMSxcbiAgICAgICAgZHggPSAwLFxuICAgICAgICBkeSA9IDAsXG4gICAgICAgIG1vdmluZyxcbiAgICAgICAgc2hpZnRpbmcgPSBzaWduWCAmJiBzaWduWSAmJiBrZXlzICYmIGV2ZW50LnNoaWZ0S2V5LFxuICAgICAgICBsb2NrWCxcbiAgICAgICAgbG9ja1ksXG4gICAgICAgIHBvaW50cyA9IEFycmF5LmZyb20oZXZlbnQudG91Y2hlcyB8fCBbZXZlbnRdLCB0ID0+IHtcbiAgICAgICAgICBjb25zdCBpID0gdC5pZGVudGlmaWVyO1xuICAgICAgICAgIHQgPSBwb2ludGVyKHQsIHRoYXQpO1xuICAgICAgICAgIHQucG9pbnQwID0gdC5zbGljZSgpO1xuICAgICAgICAgIHQuaWRlbnRpZmllciA9IGk7XG4gICAgICAgICAgcmV0dXJuIHQ7XG4gICAgICAgIH0pO1xuXG4gICAgaWYgKHR5cGUgPT09IFwib3ZlcmxheVwiKSB7XG4gICAgICBpZiAoc2VsZWN0aW9uKSBtb3ZpbmcgPSB0cnVlO1xuICAgICAgY29uc3QgcHRzID0gW3BvaW50c1swXSwgcG9pbnRzWzFdIHx8IHBvaW50c1swXV07XG4gICAgICBzdGF0ZS5zZWxlY3Rpb24gPSBzZWxlY3Rpb24gPSBbW1xuICAgICAgICAgIHcwID0gZGltID09PSBZID8gVyA6IG1pbihwdHNbMF1bMF0sIHB0c1sxXVswXSksXG4gICAgICAgICAgbjAgPSBkaW0gPT09IFggPyBOIDogbWluKHB0c1swXVsxXSwgcHRzWzFdWzFdKVxuICAgICAgICBdLCBbXG4gICAgICAgICAgZTAgPSBkaW0gPT09IFkgPyBFIDogbWF4KHB0c1swXVswXSwgcHRzWzFdWzBdKSxcbiAgICAgICAgICBzMCA9IGRpbSA9PT0gWCA/IFMgOiBtYXgocHRzWzBdWzFdLCBwdHNbMV1bMV0pXG4gICAgICAgIF1dO1xuICAgICAgaWYgKHBvaW50cy5sZW5ndGggPiAxKSBtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHcwID0gc2VsZWN0aW9uWzBdWzBdO1xuICAgICAgbjAgPSBzZWxlY3Rpb25bMF1bMV07XG4gICAgICBlMCA9IHNlbGVjdGlvblsxXVswXTtcbiAgICAgIHMwID0gc2VsZWN0aW9uWzFdWzFdO1xuICAgIH1cblxuICAgIHcxID0gdzA7XG4gICAgbjEgPSBuMDtcbiAgICBlMSA9IGUwO1xuICAgIHMxID0gczA7XG5cbiAgICB2YXIgZ3JvdXAgPSBzZWxlY3QodGhhdClcbiAgICAgICAgLmF0dHIoXCJwb2ludGVyLWV2ZW50c1wiLCBcIm5vbmVcIik7XG5cbiAgICB2YXIgb3ZlcmxheSA9IGdyb3VwLnNlbGVjdEFsbChcIi5vdmVybGF5XCIpXG4gICAgICAgIC5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnNbdHlwZV0pO1xuXG4gICAgaW50ZXJydXB0KHRoYXQpO1xuICAgIHZhciBlbWl0ID0gZW1pdHRlcih0aGF0LCBhcmd1bWVudHMsIHRydWUpLmJlZm9yZXN0YXJ0KCk7XG5cbiAgICBpZiAoZXZlbnQudG91Y2hlcykge1xuICAgICAgZW1pdC5tb3ZlZCA9IG1vdmVkO1xuICAgICAgZW1pdC5lbmRlZCA9IGVuZGVkO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdmlldyA9IHNlbGVjdChldmVudC52aWV3KVxuICAgICAgICAgIC5vbihcIm1vdXNlbW92ZS5icnVzaFwiLCBtb3ZlZCwgdHJ1ZSlcbiAgICAgICAgICAub24oXCJtb3VzZXVwLmJydXNoXCIsIGVuZGVkLCB0cnVlKTtcbiAgICAgIGlmIChrZXlzKSB2aWV3XG4gICAgICAgICAgLm9uKFwia2V5ZG93bi5icnVzaFwiLCBrZXlkb3duZWQsIHRydWUpXG4gICAgICAgICAgLm9uKFwia2V5dXAuYnJ1c2hcIiwga2V5dXBwZWQsIHRydWUpXG5cbiAgICAgIGRyYWdEaXNhYmxlKGV2ZW50LnZpZXcpO1xuICAgIH1cblxuICAgIHJlZHJhdy5jYWxsKHRoYXQpO1xuICAgIGVtaXQuc3RhcnQoZXZlbnQsIG1vZGUubmFtZSk7XG5cbiAgICBmdW5jdGlvbiBtb3ZlZChldmVudCkge1xuICAgICAgZm9yIChjb25zdCBwIG9mIGV2ZW50LmNoYW5nZWRUb3VjaGVzIHx8IFtldmVudF0pIHtcbiAgICAgICAgZm9yIChjb25zdCBkIG9mIHBvaW50cylcbiAgICAgICAgICBpZiAoZC5pZGVudGlmaWVyID09PSBwLmlkZW50aWZpZXIpIGQuY3VyID0gcG9pbnRlcihwLCB0aGF0KTtcbiAgICAgIH1cbiAgICAgIGlmIChzaGlmdGluZyAmJiAhbG9ja1ggJiYgIWxvY2tZICYmIHBvaW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgY29uc3QgcG9pbnQgPSBwb2ludHNbMF07XG4gICAgICAgIGlmIChhYnMocG9pbnQuY3VyWzBdIC0gcG9pbnRbMF0pID4gYWJzKHBvaW50LmN1clsxXSAtIHBvaW50WzFdKSlcbiAgICAgICAgICBsb2NrWSA9IHRydWU7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICBsb2NrWCA9IHRydWU7XG4gICAgICB9XG4gICAgICBmb3IgKGNvbnN0IHBvaW50IG9mIHBvaW50cylcbiAgICAgICAgaWYgKHBvaW50LmN1cikgcG9pbnRbMF0gPSBwb2ludC5jdXJbMF0sIHBvaW50WzFdID0gcG9pbnQuY3VyWzFdO1xuICAgICAgbW92aW5nID0gdHJ1ZTtcbiAgICAgIG5vZXZlbnQoZXZlbnQpO1xuICAgICAgbW92ZShldmVudCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbW92ZShldmVudCkge1xuICAgICAgY29uc3QgcG9pbnQgPSBwb2ludHNbMF0sIHBvaW50MCA9IHBvaW50LnBvaW50MDtcbiAgICAgIHZhciB0O1xuXG4gICAgICBkeCA9IHBvaW50WzBdIC0gcG9pbnQwWzBdO1xuICAgICAgZHkgPSBwb2ludFsxXSAtIHBvaW50MFsxXTtcblxuICAgICAgc3dpdGNoIChtb2RlKSB7XG4gICAgICAgIGNhc2UgTU9ERV9TUEFDRTpcbiAgICAgICAgY2FzZSBNT0RFX0RSQUc6IHtcbiAgICAgICAgICBpZiAoc2lnblgpIGR4ID0gbWF4KFcgLSB3MCwgbWluKEUgLSBlMCwgZHgpKSwgdzEgPSB3MCArIGR4LCBlMSA9IGUwICsgZHg7XG4gICAgICAgICAgaWYgKHNpZ25ZKSBkeSA9IG1heChOIC0gbjAsIG1pbihTIC0gczAsIGR5KSksIG4xID0gbjAgKyBkeSwgczEgPSBzMCArIGR5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgTU9ERV9IQU5ETEU6IHtcbiAgICAgICAgICBpZiAocG9pbnRzWzFdKSB7XG4gICAgICAgICAgICBpZiAoc2lnblgpIHcxID0gbWF4KFcsIG1pbihFLCBwb2ludHNbMF1bMF0pKSwgZTEgPSBtYXgoVywgbWluKEUsIHBvaW50c1sxXVswXSkpLCBzaWduWCA9IDE7XG4gICAgICAgICAgICBpZiAoc2lnblkpIG4xID0gbWF4KE4sIG1pbihTLCBwb2ludHNbMF1bMV0pKSwgczEgPSBtYXgoTiwgbWluKFMsIHBvaW50c1sxXVsxXSkpLCBzaWduWSA9IDE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChzaWduWCA8IDApIGR4ID0gbWF4KFcgLSB3MCwgbWluKEUgLSB3MCwgZHgpKSwgdzEgPSB3MCArIGR4LCBlMSA9IGUwO1xuICAgICAgICAgICAgZWxzZSBpZiAoc2lnblggPiAwKSBkeCA9IG1heChXIC0gZTAsIG1pbihFIC0gZTAsIGR4KSksIHcxID0gdzAsIGUxID0gZTAgKyBkeDtcbiAgICAgICAgICAgIGlmIChzaWduWSA8IDApIGR5ID0gbWF4KE4gLSBuMCwgbWluKFMgLSBuMCwgZHkpKSwgbjEgPSBuMCArIGR5LCBzMSA9IHMwO1xuICAgICAgICAgICAgZWxzZSBpZiAoc2lnblkgPiAwKSBkeSA9IG1heChOIC0gczAsIG1pbihTIC0gczAsIGR5KSksIG4xID0gbjAsIHMxID0gczAgKyBkeTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBNT0RFX0NFTlRFUjoge1xuICAgICAgICAgIGlmIChzaWduWCkgdzEgPSBtYXgoVywgbWluKEUsIHcwIC0gZHggKiBzaWduWCkpLCBlMSA9IG1heChXLCBtaW4oRSwgZTAgKyBkeCAqIHNpZ25YKSk7XG4gICAgICAgICAgaWYgKHNpZ25ZKSBuMSA9IG1heChOLCBtaW4oUywgbjAgLSBkeSAqIHNpZ25ZKSksIHMxID0gbWF4KE4sIG1pbihTLCBzMCArIGR5ICogc2lnblkpKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZTEgPCB3MSkge1xuICAgICAgICBzaWduWCAqPSAtMTtcbiAgICAgICAgdCA9IHcwLCB3MCA9IGUwLCBlMCA9IHQ7XG4gICAgICAgIHQgPSB3MSwgdzEgPSBlMSwgZTEgPSB0O1xuICAgICAgICBpZiAodHlwZSBpbiBmbGlwWCkgb3ZlcmxheS5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnNbdHlwZSA9IGZsaXBYW3R5cGVdXSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzMSA8IG4xKSB7XG4gICAgICAgIHNpZ25ZICo9IC0xO1xuICAgICAgICB0ID0gbjAsIG4wID0gczAsIHMwID0gdDtcbiAgICAgICAgdCA9IG4xLCBuMSA9IHMxLCBzMSA9IHQ7XG4gICAgICAgIGlmICh0eXBlIGluIGZsaXBZKSBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29yc1t0eXBlID0gZmxpcFlbdHlwZV1dKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlLnNlbGVjdGlvbikgc2VsZWN0aW9uID0gc3RhdGUuc2VsZWN0aW9uOyAvLyBNYXkgYmUgc2V0IGJ5IGJydXNoLm1vdmUhXG4gICAgICBpZiAobG9ja1gpIHcxID0gc2VsZWN0aW9uWzBdWzBdLCBlMSA9IHNlbGVjdGlvblsxXVswXTtcbiAgICAgIGlmIChsb2NrWSkgbjEgPSBzZWxlY3Rpb25bMF1bMV0sIHMxID0gc2VsZWN0aW9uWzFdWzFdO1xuXG4gICAgICBpZiAoc2VsZWN0aW9uWzBdWzBdICE9PSB3MVxuICAgICAgICAgIHx8IHNlbGVjdGlvblswXVsxXSAhPT0gbjFcbiAgICAgICAgICB8fCBzZWxlY3Rpb25bMV1bMF0gIT09IGUxXG4gICAgICAgICAgfHwgc2VsZWN0aW9uWzFdWzFdICE9PSBzMSkge1xuICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSBbW3cxLCBuMV0sIFtlMSwgczFdXTtcbiAgICAgICAgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICAgIGVtaXQuYnJ1c2goZXZlbnQsIG1vZGUubmFtZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZW5kZWQoZXZlbnQpIHtcbiAgICAgIG5vcHJvcGFnYXRpb24oZXZlbnQpO1xuICAgICAgaWYgKGV2ZW50LnRvdWNoZXMpIHtcbiAgICAgICAgaWYgKGV2ZW50LnRvdWNoZXMubGVuZ3RoKSByZXR1cm47XG4gICAgICAgIGlmICh0b3VjaGVuZGluZykgY2xlYXJUaW1lb3V0KHRvdWNoZW5kaW5nKTtcbiAgICAgICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIDUwMCk7IC8vIEdob3N0IGNsaWNrcyBhcmUgZGVsYXllZCFcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRyYWdFbmFibGUoZXZlbnQudmlldywgbW92aW5nKTtcbiAgICAgICAgdmlldy5vbihcImtleWRvd24uYnJ1c2gga2V5dXAuYnJ1c2ggbW91c2Vtb3ZlLmJydXNoIG1vdXNldXAuYnJ1c2hcIiwgbnVsbCk7XG4gICAgICB9XG4gICAgICBncm91cC5hdHRyKFwicG9pbnRlci1ldmVudHNcIiwgXCJhbGxcIik7XG4gICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5vdmVybGF5KTtcbiAgICAgIGlmIChzdGF0ZS5zZWxlY3Rpb24pIHNlbGVjdGlvbiA9IHN0YXRlLnNlbGVjdGlvbjsgLy8gTWF5IGJlIHNldCBieSBicnVzaC5tb3ZlIChvbiBzdGFydCkhXG4gICAgICBpZiAoZW1wdHkoc2VsZWN0aW9uKSkgc3RhdGUuc2VsZWN0aW9uID0gbnVsbCwgcmVkcmF3LmNhbGwodGhhdCk7XG4gICAgICBlbWl0LmVuZChldmVudCwgbW9kZS5uYW1lKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBrZXlkb3duZWQoZXZlbnQpIHtcbiAgICAgIHN3aXRjaCAoZXZlbnQua2V5Q29kZSkge1xuICAgICAgICBjYXNlIDE2OiB7IC8vIFNISUZUXG4gICAgICAgICAgc2hpZnRpbmcgPSBzaWduWCAmJiBzaWduWTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDE4OiB7IC8vIEFMVFxuICAgICAgICAgIGlmIChtb2RlID09PSBNT0RFX0hBTkRMRSkge1xuICAgICAgICAgICAgaWYgKHNpZ25YKSBlMCA9IGUxIC0gZHggKiBzaWduWCwgdzAgPSB3MSArIGR4ICogc2lnblg7XG4gICAgICAgICAgICBpZiAoc2lnblkpIHMwID0gczEgLSBkeSAqIHNpZ25ZLCBuMCA9IG4xICsgZHkgKiBzaWduWTtcbiAgICAgICAgICAgIG1vZGUgPSBNT0RFX0NFTlRFUjtcbiAgICAgICAgICAgIG1vdmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAzMjogeyAvLyBTUEFDRTsgdGFrZXMgcHJpb3JpdHkgb3ZlciBBTFRcbiAgICAgICAgICBpZiAobW9kZSA9PT0gTU9ERV9IQU5ETEUgfHwgbW9kZSA9PT0gTU9ERV9DRU5URVIpIHtcbiAgICAgICAgICAgIGlmIChzaWduWCA8IDApIGUwID0gZTEgLSBkeDsgZWxzZSBpZiAoc2lnblggPiAwKSB3MCA9IHcxIC0gZHg7XG4gICAgICAgICAgICBpZiAoc2lnblkgPCAwKSBzMCA9IHMxIC0gZHk7IGVsc2UgaWYgKHNpZ25ZID4gMCkgbjAgPSBuMSAtIGR5O1xuICAgICAgICAgICAgbW9kZSA9IE1PREVfU1BBQ0U7XG4gICAgICAgICAgICBvdmVybGF5LmF0dHIoXCJjdXJzb3JcIiwgY3Vyc29ycy5zZWxlY3Rpb24pO1xuICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiByZXR1cm47XG4gICAgICB9XG4gICAgICBub2V2ZW50KGV2ZW50KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBrZXl1cHBlZChldmVudCkge1xuICAgICAgc3dpdGNoIChldmVudC5rZXlDb2RlKSB7XG4gICAgICAgIGNhc2UgMTY6IHsgLy8gU0hJRlRcbiAgICAgICAgICBpZiAoc2hpZnRpbmcpIHtcbiAgICAgICAgICAgIGxvY2tYID0gbG9ja1kgPSBzaGlmdGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDE4OiB7IC8vIEFMVFxuICAgICAgICAgIGlmIChtb2RlID09PSBNT0RFX0NFTlRFUikge1xuICAgICAgICAgICAgaWYgKHNpZ25YIDwgMCkgZTAgPSBlMTsgZWxzZSBpZiAoc2lnblggPiAwKSB3MCA9IHcxO1xuICAgICAgICAgICAgaWYgKHNpZ25ZIDwgMCkgczAgPSBzMTsgZWxzZSBpZiAoc2lnblkgPiAwKSBuMCA9IG4xO1xuICAgICAgICAgICAgbW9kZSA9IE1PREVfSEFORExFO1xuICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIDMyOiB7IC8vIFNQQUNFXG4gICAgICAgICAgaWYgKG1vZGUgPT09IE1PREVfU1BBQ0UpIHtcbiAgICAgICAgICAgIGlmIChldmVudC5hbHRLZXkpIHtcbiAgICAgICAgICAgICAgaWYgKHNpZ25YKSBlMCA9IGUxIC0gZHggKiBzaWduWCwgdzAgPSB3MSArIGR4ICogc2lnblg7XG4gICAgICAgICAgICAgIGlmIChzaWduWSkgczAgPSBzMSAtIGR5ICogc2lnblksIG4wID0gbjEgKyBkeSAqIHNpZ25ZO1xuICAgICAgICAgICAgICBtb2RlID0gTU9ERV9DRU5URVI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBpZiAoc2lnblggPCAwKSBlMCA9IGUxOyBlbHNlIGlmIChzaWduWCA+IDApIHcwID0gdzE7XG4gICAgICAgICAgICAgIGlmIChzaWduWSA8IDApIHMwID0gczE7IGVsc2UgaWYgKHNpZ25ZID4gMCkgbjAgPSBuMTtcbiAgICAgICAgICAgICAgbW9kZSA9IE1PREVfSEFORExFO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3ZlcmxheS5hdHRyKFwiY3Vyc29yXCIsIGN1cnNvcnNbdHlwZV0pO1xuICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiByZXR1cm47XG4gICAgICB9XG4gICAgICBub2V2ZW50KGV2ZW50KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaG1vdmVkKGV2ZW50KSB7XG4gICAgZW1pdHRlcih0aGlzLCBhcmd1bWVudHMpLm1vdmVkKGV2ZW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNoZW5kZWQoZXZlbnQpIHtcbiAgICBlbWl0dGVyKHRoaXMsIGFyZ3VtZW50cykuZW5kZWQoZXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICB2YXIgc3RhdGUgPSB0aGlzLl9fYnJ1c2ggfHwge3NlbGVjdGlvbjogbnVsbH07XG4gICAgc3RhdGUuZXh0ZW50ID0gbnVtYmVyMihleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgc3RhdGUuZGltID0gZGltO1xuICAgIHJldHVybiBzdGF0ZTtcbiAgfVxuXG4gIGJydXNoLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChleHRlbnQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KG51bWJlcjIoXykpLCBicnVzaCkgOiBleHRlbnQ7XG4gIH07XG5cbiAgYnJ1c2guZmlsdGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZpbHRlciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgYnJ1c2gpIDogZmlsdGVyO1xuICB9O1xuXG4gIGJydXNoLnRvdWNoYWJsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0b3VjaGFibGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCEhXyksIGJydXNoKSA6IHRvdWNoYWJsZTtcbiAgfTtcblxuICBicnVzaC5oYW5kbGVTaXplID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGhhbmRsZVNpemUgPSArXywgYnJ1c2gpIDogaGFuZGxlU2l6ZTtcbiAgfTtcblxuICBicnVzaC5rZXlNb2RpZmllcnMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoa2V5cyA9ICEhXywgYnJ1c2gpIDoga2V5cztcbiAgfTtcblxuICBicnVzaC5vbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZSA9IGxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHZhbHVlID09PSBsaXN0ZW5lcnMgPyBicnVzaCA6IHZhbHVlO1xuICB9O1xuXG4gIHJldHVybiBicnVzaDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IHggPT4gKCkgPT4geDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJydXNoRXZlbnQodHlwZSwge1xuICBzb3VyY2VFdmVudCxcbiAgdGFyZ2V0LFxuICBzZWxlY3Rpb24sXG4gIG1vZGUsXG4gIGRpc3BhdGNoXG59KSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHtcbiAgICB0eXBlOiB7dmFsdWU6IHR5cGUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0sXG4gICAgc291cmNlRXZlbnQ6IHt2YWx1ZTogc291cmNlRXZlbnQsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0sXG4gICAgdGFyZ2V0OiB7dmFsdWU6IHRhcmdldCwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICBzZWxlY3Rpb246IHt2YWx1ZTogc2VsZWN0aW9uLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIG1vZGU6IHt2YWx1ZTogbW9kZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICBfOiB7dmFsdWU6IGRpc3BhdGNofVxuICB9KTtcbn1cbiIsImV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgYnJ1c2gsXG4gIGJydXNoWCxcbiAgYnJ1c2hZLFxuICBicnVzaFNlbGVjdGlvblxufSBmcm9tIFwiLi9icnVzaC5qc1wiO1xuIiwiZXhwb3J0IGZ1bmN0aW9uIG5vcHJvcGFnYXRpb24oZXZlbnQpIHtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGV2ZW50KSB7XG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xufVxuIiwiZXhwb3J0IHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbiIsImltcG9ydCB7bWF4LCB0YXV9IGZyb20gXCIuL21hdGguanNcIjtcblxuZnVuY3Rpb24gcmFuZ2UoaSwgaikge1xuICByZXR1cm4gQXJyYXkuZnJvbSh7bGVuZ3RoOiBqIC0gaX0sIChfLCBrKSA9PiBpICsgayk7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVWYWx1ZShjb21wYXJlKSB7XG4gIHJldHVybiBmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGNvbXBhcmUoXG4gICAgICBhLnNvdXJjZS52YWx1ZSArIGEudGFyZ2V0LnZhbHVlLFxuICAgICAgYi5zb3VyY2UudmFsdWUgKyBiLnRhcmdldC52YWx1ZVxuICAgICk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gY2hvcmQoZmFsc2UsIGZhbHNlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNob3JkVHJhbnNwb3NlKCkge1xuICByZXR1cm4gY2hvcmQoZmFsc2UsIHRydWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hvcmREaXJlY3RlZCgpIHtcbiAgcmV0dXJuIGNob3JkKHRydWUsIGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gY2hvcmQoZGlyZWN0ZWQsIHRyYW5zcG9zZSkge1xuICB2YXIgcGFkQW5nbGUgPSAwLFxuICAgICAgc29ydEdyb3VwcyA9IG51bGwsXG4gICAgICBzb3J0U3ViZ3JvdXBzID0gbnVsbCxcbiAgICAgIHNvcnRDaG9yZHMgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGNob3JkKG1hdHJpeCkge1xuICAgIHZhciBuID0gbWF0cml4Lmxlbmd0aCxcbiAgICAgICAgZ3JvdXBTdW1zID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBncm91cEluZGV4ID0gcmFuZ2UoMCwgbiksXG4gICAgICAgIGNob3JkcyA9IG5ldyBBcnJheShuICogbiksXG4gICAgICAgIGdyb3VwcyA9IG5ldyBBcnJheShuKSxcbiAgICAgICAgayA9IDAsIGR4O1xuXG4gICAgbWF0cml4ID0gRmxvYXQ2NEFycmF5LmZyb20oe2xlbmd0aDogbiAqIG59LCB0cmFuc3Bvc2VcbiAgICAgICAgPyAoXywgaSkgPT4gbWF0cml4W2kgJSBuXVtpIC8gbiB8IDBdXG4gICAgICAgIDogKF8sIGkpID0+IG1hdHJpeFtpIC8gbiB8IDBdW2kgJSBuXSk7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBzY2FsaW5nIGZhY3RvciBmcm9tIHZhbHVlIHRvIGFuZ2xlIGluIFswLCAycGldLlxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBsZXQgeCA9IDA7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IG47ICsraikgeCArPSBtYXRyaXhbaSAqIG4gKyBqXSArIGRpcmVjdGVkICogbWF0cml4W2ogKiBuICsgaV07XG4gICAgICBrICs9IGdyb3VwU3Vtc1tpXSA9IHg7XG4gICAgfVxuICAgIGsgPSBtYXgoMCwgdGF1IC0gcGFkQW5nbGUgKiBuKSAvIGs7XG4gICAgZHggPSBrID8gcGFkQW5nbGUgOiB0YXUgLyBuO1xuXG4gICAgLy8gQ29tcHV0ZSB0aGUgYW5nbGVzIGZvciBlYWNoIGdyb3VwIGFuZCBjb25zdGl0dWVudCBjaG9yZC5cbiAgICB7XG4gICAgICBsZXQgeCA9IDA7XG4gICAgICBpZiAoc29ydEdyb3VwcykgZ3JvdXBJbmRleC5zb3J0KChhLCBiKSA9PiBzb3J0R3JvdXBzKGdyb3VwU3Vtc1thXSwgZ3JvdXBTdW1zW2JdKSk7XG4gICAgICBmb3IgKGNvbnN0IGkgb2YgZ3JvdXBJbmRleCkge1xuICAgICAgICBjb25zdCB4MCA9IHg7XG4gICAgICAgIGlmIChkaXJlY3RlZCkge1xuICAgICAgICAgIGNvbnN0IHN1Ymdyb3VwSW5kZXggPSByYW5nZSh+biArIDEsIG4pLmZpbHRlcihqID0+IGogPCAwID8gbWF0cml4W35qICogbiArIGldIDogbWF0cml4W2kgKiBuICsgal0pO1xuICAgICAgICAgIGlmIChzb3J0U3ViZ3JvdXBzKSBzdWJncm91cEluZGV4LnNvcnQoKGEsIGIpID0+IHNvcnRTdWJncm91cHMoYSA8IDAgPyAtbWF0cml4W35hICogbiArIGldIDogbWF0cml4W2kgKiBuICsgYV0sIGIgPCAwID8gLW1hdHJpeFt+YiAqIG4gKyBpXSA6IG1hdHJpeFtpICogbiArIGJdKSk7XG4gICAgICAgICAgZm9yIChjb25zdCBqIG9mIHN1Ymdyb3VwSW5kZXgpIHtcbiAgICAgICAgICAgIGlmIChqIDwgMCkge1xuICAgICAgICAgICAgICBjb25zdCBjaG9yZCA9IGNob3Jkc1t+aiAqIG4gKyBpXSB8fCAoY2hvcmRzW35qICogbiArIGldID0ge3NvdXJjZTogbnVsbCwgdGFyZ2V0OiBudWxsfSk7XG4gICAgICAgICAgICAgIGNob3JkLnRhcmdldCA9IHtpbmRleDogaSwgc3RhcnRBbmdsZTogeCwgZW5kQW5nbGU6IHggKz0gbWF0cml4W35qICogbiArIGldICogaywgdmFsdWU6IG1hdHJpeFt+aiAqIG4gKyBpXX07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb25zdCBjaG9yZCA9IGNob3Jkc1tpICogbiArIGpdIHx8IChjaG9yZHNbaSAqIG4gKyBqXSA9IHtzb3VyY2U6IG51bGwsIHRhcmdldDogbnVsbH0pO1xuICAgICAgICAgICAgICBjaG9yZC5zb3VyY2UgPSB7aW5kZXg6IGksIHN0YXJ0QW5nbGU6IHgsIGVuZEFuZ2xlOiB4ICs9IG1hdHJpeFtpICogbiArIGpdICogaywgdmFsdWU6IG1hdHJpeFtpICogbiArIGpdfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZ3JvdXBzW2ldID0ge2luZGV4OiBpLCBzdGFydEFuZ2xlOiB4MCwgZW5kQW5nbGU6IHgsIHZhbHVlOiBncm91cFN1bXNbaV19O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IHN1Ymdyb3VwSW5kZXggPSByYW5nZSgwLCBuKS5maWx0ZXIoaiA9PiBtYXRyaXhbaSAqIG4gKyBqXSB8fCBtYXRyaXhbaiAqIG4gKyBpXSk7XG4gICAgICAgICAgaWYgKHNvcnRTdWJncm91cHMpIHN1Ymdyb3VwSW5kZXguc29ydCgoYSwgYikgPT4gc29ydFN1Ymdyb3VwcyhtYXRyaXhbaSAqIG4gKyBhXSwgbWF0cml4W2kgKiBuICsgYl0pKTtcbiAgICAgICAgICBmb3IgKGNvbnN0IGogb2Ygc3ViZ3JvdXBJbmRleCkge1xuICAgICAgICAgICAgbGV0IGNob3JkO1xuICAgICAgICAgICAgaWYgKGkgPCBqKSB7XG4gICAgICAgICAgICAgIGNob3JkID0gY2hvcmRzW2kgKiBuICsgal0gfHwgKGNob3Jkc1tpICogbiArIGpdID0ge3NvdXJjZTogbnVsbCwgdGFyZ2V0OiBudWxsfSk7XG4gICAgICAgICAgICAgIGNob3JkLnNvdXJjZSA9IHtpbmRleDogaSwgc3RhcnRBbmdsZTogeCwgZW5kQW5nbGU6IHggKz0gbWF0cml4W2kgKiBuICsgal0gKiBrLCB2YWx1ZTogbWF0cml4W2kgKiBuICsgal19O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY2hvcmQgPSBjaG9yZHNbaiAqIG4gKyBpXSB8fCAoY2hvcmRzW2ogKiBuICsgaV0gPSB7c291cmNlOiBudWxsLCB0YXJnZXQ6IG51bGx9KTtcbiAgICAgICAgICAgICAgY2hvcmQudGFyZ2V0ID0ge2luZGV4OiBpLCBzdGFydEFuZ2xlOiB4LCBlbmRBbmdsZTogeCArPSBtYXRyaXhbaSAqIG4gKyBqXSAqIGssIHZhbHVlOiBtYXRyaXhbaSAqIG4gKyBqXX07XG4gICAgICAgICAgICAgIGlmIChpID09PSBqKSBjaG9yZC5zb3VyY2UgPSBjaG9yZC50YXJnZXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2hvcmQuc291cmNlICYmIGNob3JkLnRhcmdldCAmJiBjaG9yZC5zb3VyY2UudmFsdWUgPCBjaG9yZC50YXJnZXQudmFsdWUpIHtcbiAgICAgICAgICAgICAgY29uc3Qgc291cmNlID0gY2hvcmQuc291cmNlO1xuICAgICAgICAgICAgICBjaG9yZC5zb3VyY2UgPSBjaG9yZC50YXJnZXQ7XG4gICAgICAgICAgICAgIGNob3JkLnRhcmdldCA9IHNvdXJjZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgZ3JvdXBzW2ldID0ge2luZGV4OiBpLCBzdGFydEFuZ2xlOiB4MCwgZW5kQW5nbGU6IHgsIHZhbHVlOiBncm91cFN1bXNbaV19O1xuICAgICAgICB9XG4gICAgICAgIHggKz0gZHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVtb3ZlIGVtcHR5IGNob3Jkcy5cbiAgICBjaG9yZHMgPSBPYmplY3QudmFsdWVzKGNob3Jkcyk7XG4gICAgY2hvcmRzLmdyb3VwcyA9IGdyb3VwcztcbiAgICByZXR1cm4gc29ydENob3JkcyA/IGNob3Jkcy5zb3J0KHNvcnRDaG9yZHMpIDogY2hvcmRzO1xuICB9XG5cbiAgY2hvcmQucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSBtYXgoMCwgXyksIGNob3JkKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIGNob3JkLnNvcnRHcm91cHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc29ydEdyb3VwcyA9IF8sIGNob3JkKSA6IHNvcnRHcm91cHM7XG4gIH07XG5cbiAgY2hvcmQuc29ydFN1Ymdyb3VwcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3J0U3ViZ3JvdXBzID0gXywgY2hvcmQpIDogc29ydFN1Ymdyb3VwcztcbiAgfTtcblxuICBjaG9yZC5zb3J0Q2hvcmRzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKF8gPT0gbnVsbCA/IHNvcnRDaG9yZHMgPSBudWxsIDogKHNvcnRDaG9yZHMgPSBjb21wYXJlVmFsdWUoXykpLl8gPSBfLCBjaG9yZCkgOiBzb3J0Q2hvcmRzICYmIHNvcnRDaG9yZHMuXztcbiAgfTtcblxuICByZXR1cm4gY2hvcmQ7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBjaG9yZCwgY2hvcmRUcmFuc3Bvc2UsIGNob3JkRGlyZWN0ZWR9IGZyb20gXCIuL2Nob3JkLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmliYm9uLCByaWJib25BcnJvd30gZnJvbSBcIi4vcmliYm9uLmpzXCI7XG4iLCJleHBvcnQgdmFyIGFicyA9IE1hdGguYWJzO1xuZXhwb3J0IHZhciBjb3MgPSBNYXRoLmNvcztcbmV4cG9ydCB2YXIgc2luID0gTWF0aC5zaW47XG5leHBvcnQgdmFyIHBpID0gTWF0aC5QSTtcbmV4cG9ydCB2YXIgaGFsZlBpID0gcGkgLyAyO1xuZXhwb3J0IHZhciB0YXUgPSBwaSAqIDI7XG5leHBvcnQgdmFyIG1heCA9IE1hdGgubWF4O1xuZXhwb3J0IHZhciBlcHNpbG9uID0gMWUtMTI7XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQge3NsaWNlfSBmcm9tIFwiLi9hcnJheS5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQge2FicywgY29zLCBlcHNpbG9uLCBoYWxmUGksIHNpbn0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBkZWZhdWx0U291cmNlKGQpIHtcbiAgcmV0dXJuIGQuc291cmNlO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0VGFyZ2V0KGQpIHtcbiAgcmV0dXJuIGQudGFyZ2V0O1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0UmFkaXVzKGQpIHtcbiAgcmV0dXJuIGQucmFkaXVzO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0U3RhcnRBbmdsZShkKSB7XG4gIHJldHVybiBkLnN0YXJ0QW5nbGU7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRFbmRBbmdsZShkKSB7XG4gIHJldHVybiBkLmVuZEFuZ2xlO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0UGFkQW5nbGUoKSB7XG4gIHJldHVybiAwO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0QXJyb3doZWFkUmFkaXVzKCkge1xuICByZXR1cm4gMTA7XG59XG5cbmZ1bmN0aW9uIHJpYmJvbihoZWFkUmFkaXVzKSB7XG4gIHZhciBzb3VyY2UgPSBkZWZhdWx0U291cmNlLFxuICAgICAgdGFyZ2V0ID0gZGVmYXVsdFRhcmdldCxcbiAgICAgIHNvdXJjZVJhZGl1cyA9IGRlZmF1bHRSYWRpdXMsXG4gICAgICB0YXJnZXRSYWRpdXMgPSBkZWZhdWx0UmFkaXVzLFxuICAgICAgc3RhcnRBbmdsZSA9IGRlZmF1bHRTdGFydEFuZ2xlLFxuICAgICAgZW5kQW5nbGUgPSBkZWZhdWx0RW5kQW5nbGUsXG4gICAgICBwYWRBbmdsZSA9IGRlZmF1bHRQYWRBbmdsZSxcbiAgICAgIGNvbnRleHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHJpYmJvbigpIHtcbiAgICB2YXIgYnVmZmVyLFxuICAgICAgICBzID0gc291cmNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIHQgPSB0YXJnZXQuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgYXAgPSBwYWRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC8gMixcbiAgICAgICAgYXJndiA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSxcbiAgICAgICAgc3IgPSArc291cmNlUmFkaXVzLmFwcGx5KHRoaXMsIChhcmd2WzBdID0gcywgYXJndikpLFxuICAgICAgICBzYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3YpIC0gaGFsZlBpLFxuICAgICAgICBzYTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaSxcbiAgICAgICAgdHIgPSArdGFyZ2V0UmFkaXVzLmFwcGx5KHRoaXMsIChhcmd2WzBdID0gdCwgYXJndikpLFxuICAgICAgICB0YTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3YpIC0gaGFsZlBpLFxuICAgICAgICB0YTEgPSBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd2KSAtIGhhbGZQaTtcblxuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcblxuICAgIGlmIChhcCA+IGVwc2lsb24pIHtcbiAgICAgIGlmIChhYnMoc2ExIC0gc2EwKSA+IGFwICogMiArIGVwc2lsb24pIHNhMSA+IHNhMCA/IChzYTAgKz0gYXAsIHNhMSAtPSBhcCkgOiAoc2EwIC09IGFwLCBzYTEgKz0gYXApO1xuICAgICAgZWxzZSBzYTAgPSBzYTEgPSAoc2EwICsgc2ExKSAvIDI7XG4gICAgICBpZiAoYWJzKHRhMSAtIHRhMCkgPiBhcCAqIDIgKyBlcHNpbG9uKSB0YTEgPiB0YTAgPyAodGEwICs9IGFwLCB0YTEgLT0gYXApIDogKHRhMCAtPSBhcCwgdGExICs9IGFwKTtcbiAgICAgIGVsc2UgdGEwID0gdGExID0gKHRhMCArIHRhMSkgLyAyO1xuICAgIH1cblxuICAgIGNvbnRleHQubW92ZVRvKHNyICogY29zKHNhMCksIHNyICogc2luKHNhMCkpO1xuICAgIGNvbnRleHQuYXJjKDAsIDAsIHNyLCBzYTAsIHNhMSk7XG4gICAgaWYgKHNhMCAhPT0gdGEwIHx8IHNhMSAhPT0gdGExKSB7XG4gICAgICBpZiAoaGVhZFJhZGl1cykge1xuICAgICAgICB2YXIgaHIgPSAraGVhZFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB0cjIgPSB0ciAtIGhyLCB0YTIgPSAodGEwICsgdGExKSAvIDI7XG4gICAgICAgIGNvbnRleHQucXVhZHJhdGljQ3VydmVUbygwLCAwLCB0cjIgKiBjb3ModGEwKSwgdHIyICogc2luKHRhMCkpO1xuICAgICAgICBjb250ZXh0LmxpbmVUbyh0ciAqIGNvcyh0YTIpLCB0ciAqIHNpbih0YTIpKTtcbiAgICAgICAgY29udGV4dC5saW5lVG8odHIyICogY29zKHRhMSksIHRyMiAqIHNpbih0YTEpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnRleHQucXVhZHJhdGljQ3VydmVUbygwLCAwLCB0ciAqIGNvcyh0YTApLCB0ciAqIHNpbih0YTApKTtcbiAgICAgICAgY29udGV4dC5hcmMoMCwgMCwgdHIsIHRhMCwgdGExKTtcbiAgICAgIH1cbiAgICB9XG4gICAgY29udGV4dC5xdWFkcmF0aWNDdXJ2ZVRvKDAsIDAsIHNyICogY29zKHNhMCksIHNyICogc2luKHNhMCkpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG5cbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGlmIChoZWFkUmFkaXVzKSByaWJib24uaGVhZFJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChoZWFkUmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHJpYmJvbikgOiBoZWFkUmFkaXVzO1xuICB9O1xuXG4gIHJpYmJvbi5yYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc291cmNlUmFkaXVzID0gdGFyZ2V0UmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHJpYmJvbikgOiBzb3VyY2VSYWRpdXM7XG4gIH07XG5cbiAgcmliYm9uLnNvdXJjZVJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3VyY2VSYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcmliYm9uKSA6IHNvdXJjZVJhZGl1cztcbiAgfTtcblxuICByaWJib24udGFyZ2V0UmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRhcmdldFJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCByaWJib24pIDogdGFyZ2V0UmFkaXVzO1xuICB9O1xuXG4gIHJpYmJvbi5zdGFydEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0YXJ0QW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcmliYm9uKSA6IHN0YXJ0QW5nbGU7XG4gIH07XG5cbiAgcmliYm9uLmVuZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGVuZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHJpYmJvbikgOiBlbmRBbmdsZTtcbiAgfTtcblxuICByaWJib24ucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcmliYm9uKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIHJpYmJvbi5zb3VyY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc291cmNlID0gXywgcmliYm9uKSA6IHNvdXJjZTtcbiAgfTtcblxuICByaWJib24udGFyZ2V0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRhcmdldCA9IF8sIHJpYmJvbikgOiB0YXJnZXQ7XG4gIH07XG5cbiAgcmliYm9uLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoKGNvbnRleHQgPSBfID09IG51bGwgPyBudWxsIDogXyksIHJpYmJvbikgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiByaWJib247XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcmliYm9uKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByaWJib25BcnJvdygpIHtcbiAgcmV0dXJuIHJpYmJvbihkZWZhdWx0QXJyb3doZWFkUmFkaXVzKTtcbn1cbiIsImltcG9ydCBkZWZpbmUsIHtleHRlbmR9IGZyb20gXCIuL2RlZmluZS5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gQ29sb3IoKSB7fVxuXG5leHBvcnQgdmFyIGRhcmtlciA9IDAuNztcbmV4cG9ydCB2YXIgYnJpZ2h0ZXIgPSAxIC8gZGFya2VyO1xuXG52YXIgcmVJID0gXCJcXFxccyooWystXT9cXFxcZCspXFxcXHMqXCIsXG4gICAgcmVOID0gXCJcXFxccyooWystXT9cXFxcZCpcXFxcLj9cXFxcZCsoPzpbZUVdWystXT9cXFxcZCspPylcXFxccypcIixcbiAgICByZVAgPSBcIlxcXFxzKihbKy1dP1xcXFxkKlxcXFwuP1xcXFxkKyg/OltlRV1bKy1dP1xcXFxkKyk/KSVcXFxccypcIixcbiAgICByZUhleCA9IC9eIyhbMC05YS1mXXszLDh9KSQvLFxuICAgIHJlUmdiSW50ZWdlciA9IG5ldyBSZWdFeHAoXCJecmdiXFxcXChcIiArIFtyZUksIHJlSSwgcmVJXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlUmdiUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJecmdiXFxcXChcIiArIFtyZVAsIHJlUCwgcmVQXSArIFwiXFxcXCkkXCIpLFxuICAgIHJlUmdiYUludGVnZXIgPSBuZXcgUmVnRXhwKFwiXnJnYmFcXFxcKFwiICsgW3JlSSwgcmVJLCByZUksIHJlTl0gKyBcIlxcXFwpJFwiKSxcbiAgICByZVJnYmFQZXJjZW50ID0gbmV3IFJlZ0V4cChcIl5yZ2JhXFxcXChcIiArIFtyZVAsIHJlUCwgcmVQLCByZU5dICsgXCJcXFxcKSRcIiksXG4gICAgcmVIc2xQZXJjZW50ID0gbmV3IFJlZ0V4cChcIl5oc2xcXFxcKFwiICsgW3JlTiwgcmVQLCByZVBdICsgXCJcXFxcKSRcIiksXG4gICAgcmVIc2xhUGVyY2VudCA9IG5ldyBSZWdFeHAoXCJeaHNsYVxcXFwoXCIgKyBbcmVOLCByZVAsIHJlUCwgcmVOXSArIFwiXFxcXCkkXCIpO1xuXG52YXIgbmFtZWQgPSB7XG4gIGFsaWNlYmx1ZTogMHhmMGY4ZmYsXG4gIGFudGlxdWV3aGl0ZTogMHhmYWViZDcsXG4gIGFxdWE6IDB4MDBmZmZmLFxuICBhcXVhbWFyaW5lOiAweDdmZmZkNCxcbiAgYXp1cmU6IDB4ZjBmZmZmLFxuICBiZWlnZTogMHhmNWY1ZGMsXG4gIGJpc3F1ZTogMHhmZmU0YzQsXG4gIGJsYWNrOiAweDAwMDAwMCxcbiAgYmxhbmNoZWRhbG1vbmQ6IDB4ZmZlYmNkLFxuICBibHVlOiAweDAwMDBmZixcbiAgYmx1ZXZpb2xldDogMHg4YTJiZTIsXG4gIGJyb3duOiAweGE1MmEyYSxcbiAgYnVybHl3b29kOiAweGRlYjg4NyxcbiAgY2FkZXRibHVlOiAweDVmOWVhMCxcbiAgY2hhcnRyZXVzZTogMHg3ZmZmMDAsXG4gIGNob2NvbGF0ZTogMHhkMjY5MWUsXG4gIGNvcmFsOiAweGZmN2Y1MCxcbiAgY29ybmZsb3dlcmJsdWU6IDB4NjQ5NWVkLFxuICBjb3Juc2lsazogMHhmZmY4ZGMsXG4gIGNyaW1zb246IDB4ZGMxNDNjLFxuICBjeWFuOiAweDAwZmZmZixcbiAgZGFya2JsdWU6IDB4MDAwMDhiLFxuICBkYXJrY3lhbjogMHgwMDhiOGIsXG4gIGRhcmtnb2xkZW5yb2Q6IDB4Yjg4NjBiLFxuICBkYXJrZ3JheTogMHhhOWE5YTksXG4gIGRhcmtncmVlbjogMHgwMDY0MDAsXG4gIGRhcmtncmV5OiAweGE5YTlhOSxcbiAgZGFya2toYWtpOiAweGJkYjc2YixcbiAgZGFya21hZ2VudGE6IDB4OGIwMDhiLFxuICBkYXJrb2xpdmVncmVlbjogMHg1NTZiMmYsXG4gIGRhcmtvcmFuZ2U6IDB4ZmY4YzAwLFxuICBkYXJrb3JjaGlkOiAweDk5MzJjYyxcbiAgZGFya3JlZDogMHg4YjAwMDAsXG4gIGRhcmtzYWxtb246IDB4ZTk5NjdhLFxuICBkYXJrc2VhZ3JlZW46IDB4OGZiYzhmLFxuICBkYXJrc2xhdGVibHVlOiAweDQ4M2Q4YixcbiAgZGFya3NsYXRlZ3JheTogMHgyZjRmNGYsXG4gIGRhcmtzbGF0ZWdyZXk6IDB4MmY0ZjRmLFxuICBkYXJrdHVycXVvaXNlOiAweDAwY2VkMSxcbiAgZGFya3Zpb2xldDogMHg5NDAwZDMsXG4gIGRlZXBwaW5rOiAweGZmMTQ5MyxcbiAgZGVlcHNreWJsdWU6IDB4MDBiZmZmLFxuICBkaW1ncmF5OiAweDY5Njk2OSxcbiAgZGltZ3JleTogMHg2OTY5NjksXG4gIGRvZGdlcmJsdWU6IDB4MWU5MGZmLFxuICBmaXJlYnJpY2s6IDB4YjIyMjIyLFxuICBmbG9yYWx3aGl0ZTogMHhmZmZhZjAsXG4gIGZvcmVzdGdyZWVuOiAweDIyOGIyMixcbiAgZnVjaHNpYTogMHhmZjAwZmYsXG4gIGdhaW5zYm9ybzogMHhkY2RjZGMsXG4gIGdob3N0d2hpdGU6IDB4ZjhmOGZmLFxuICBnb2xkOiAweGZmZDcwMCxcbiAgZ29sZGVucm9kOiAweGRhYTUyMCxcbiAgZ3JheTogMHg4MDgwODAsXG4gIGdyZWVuOiAweDAwODAwMCxcbiAgZ3JlZW55ZWxsb3c6IDB4YWRmZjJmLFxuICBncmV5OiAweDgwODA4MCxcbiAgaG9uZXlkZXc6IDB4ZjBmZmYwLFxuICBob3RwaW5rOiAweGZmNjliNCxcbiAgaW5kaWFucmVkOiAweGNkNWM1YyxcbiAgaW5kaWdvOiAweDRiMDA4MixcbiAgaXZvcnk6IDB4ZmZmZmYwLFxuICBraGFraTogMHhmMGU2OGMsXG4gIGxhdmVuZGVyOiAweGU2ZTZmYSxcbiAgbGF2ZW5kZXJibHVzaDogMHhmZmYwZjUsXG4gIGxhd25ncmVlbjogMHg3Y2ZjMDAsXG4gIGxlbW9uY2hpZmZvbjogMHhmZmZhY2QsXG4gIGxpZ2h0Ymx1ZTogMHhhZGQ4ZTYsXG4gIGxpZ2h0Y29yYWw6IDB4ZjA4MDgwLFxuICBsaWdodGN5YW46IDB4ZTBmZmZmLFxuICBsaWdodGdvbGRlbnJvZHllbGxvdzogMHhmYWZhZDIsXG4gIGxpZ2h0Z3JheTogMHhkM2QzZDMsXG4gIGxpZ2h0Z3JlZW46IDB4OTBlZTkwLFxuICBsaWdodGdyZXk6IDB4ZDNkM2QzLFxuICBsaWdodHBpbms6IDB4ZmZiNmMxLFxuICBsaWdodHNhbG1vbjogMHhmZmEwN2EsXG4gIGxpZ2h0c2VhZ3JlZW46IDB4MjBiMmFhLFxuICBsaWdodHNreWJsdWU6IDB4ODdjZWZhLFxuICBsaWdodHNsYXRlZ3JheTogMHg3Nzg4OTksXG4gIGxpZ2h0c2xhdGVncmV5OiAweDc3ODg5OSxcbiAgbGlnaHRzdGVlbGJsdWU6IDB4YjBjNGRlLFxuICBsaWdodHllbGxvdzogMHhmZmZmZTAsXG4gIGxpbWU6IDB4MDBmZjAwLFxuICBsaW1lZ3JlZW46IDB4MzJjZDMyLFxuICBsaW5lbjogMHhmYWYwZTYsXG4gIG1hZ2VudGE6IDB4ZmYwMGZmLFxuICBtYXJvb246IDB4ODAwMDAwLFxuICBtZWRpdW1hcXVhbWFyaW5lOiAweDY2Y2RhYSxcbiAgbWVkaXVtYmx1ZTogMHgwMDAwY2QsXG4gIG1lZGl1bW9yY2hpZDogMHhiYTU1ZDMsXG4gIG1lZGl1bXB1cnBsZTogMHg5MzcwZGIsXG4gIG1lZGl1bXNlYWdyZWVuOiAweDNjYjM3MSxcbiAgbWVkaXVtc2xhdGVibHVlOiAweDdiNjhlZSxcbiAgbWVkaXVtc3ByaW5nZ3JlZW46IDB4MDBmYTlhLFxuICBtZWRpdW10dXJxdW9pc2U6IDB4NDhkMWNjLFxuICBtZWRpdW12aW9sZXRyZWQ6IDB4YzcxNTg1LFxuICBtaWRuaWdodGJsdWU6IDB4MTkxOTcwLFxuICBtaW50Y3JlYW06IDB4ZjVmZmZhLFxuICBtaXN0eXJvc2U6IDB4ZmZlNGUxLFxuICBtb2NjYXNpbjogMHhmZmU0YjUsXG4gIG5hdmFqb3doaXRlOiAweGZmZGVhZCxcbiAgbmF2eTogMHgwMDAwODAsXG4gIG9sZGxhY2U6IDB4ZmRmNWU2LFxuICBvbGl2ZTogMHg4MDgwMDAsXG4gIG9saXZlZHJhYjogMHg2YjhlMjMsXG4gIG9yYW5nZTogMHhmZmE1MDAsXG4gIG9yYW5nZXJlZDogMHhmZjQ1MDAsXG4gIG9yY2hpZDogMHhkYTcwZDYsXG4gIHBhbGVnb2xkZW5yb2Q6IDB4ZWVlOGFhLFxuICBwYWxlZ3JlZW46IDB4OThmYjk4LFxuICBwYWxldHVycXVvaXNlOiAweGFmZWVlZSxcbiAgcGFsZXZpb2xldHJlZDogMHhkYjcwOTMsXG4gIHBhcGF5YXdoaXA6IDB4ZmZlZmQ1LFxuICBwZWFjaHB1ZmY6IDB4ZmZkYWI5LFxuICBwZXJ1OiAweGNkODUzZixcbiAgcGluazogMHhmZmMwY2IsXG4gIHBsdW06IDB4ZGRhMGRkLFxuICBwb3dkZXJibHVlOiAweGIwZTBlNixcbiAgcHVycGxlOiAweDgwMDA4MCxcbiAgcmViZWNjYXB1cnBsZTogMHg2NjMzOTksXG4gIHJlZDogMHhmZjAwMDAsXG4gIHJvc3licm93bjogMHhiYzhmOGYsXG4gIHJveWFsYmx1ZTogMHg0MTY5ZTEsXG4gIHNhZGRsZWJyb3duOiAweDhiNDUxMyxcbiAgc2FsbW9uOiAweGZhODA3MixcbiAgc2FuZHlicm93bjogMHhmNGE0NjAsXG4gIHNlYWdyZWVuOiAweDJlOGI1NyxcbiAgc2Vhc2hlbGw6IDB4ZmZmNWVlLFxuICBzaWVubmE6IDB4YTA1MjJkLFxuICBzaWx2ZXI6IDB4YzBjMGMwLFxuICBza3libHVlOiAweDg3Y2VlYixcbiAgc2xhdGVibHVlOiAweDZhNWFjZCxcbiAgc2xhdGVncmF5OiAweDcwODA5MCxcbiAgc2xhdGVncmV5OiAweDcwODA5MCxcbiAgc25vdzogMHhmZmZhZmEsXG4gIHNwcmluZ2dyZWVuOiAweDAwZmY3ZixcbiAgc3RlZWxibHVlOiAweDQ2ODJiNCxcbiAgdGFuOiAweGQyYjQ4YyxcbiAgdGVhbDogMHgwMDgwODAsXG4gIHRoaXN0bGU6IDB4ZDhiZmQ4LFxuICB0b21hdG86IDB4ZmY2MzQ3LFxuICB0dXJxdW9pc2U6IDB4NDBlMGQwLFxuICB2aW9sZXQ6IDB4ZWU4MmVlLFxuICB3aGVhdDogMHhmNWRlYjMsXG4gIHdoaXRlOiAweGZmZmZmZixcbiAgd2hpdGVzbW9rZTogMHhmNWY1ZjUsXG4gIHllbGxvdzogMHhmZmZmMDAsXG4gIHllbGxvd2dyZWVuOiAweDlhY2QzMlxufTtcblxuZGVmaW5lKENvbG9yLCBjb2xvciwge1xuICBjb3B5OiBmdW5jdGlvbihjaGFubmVscykge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyB0aGlzLmNvbnN0cnVjdG9yLCB0aGlzLCBjaGFubmVscyk7XG4gIH0sXG4gIGRpc3BsYXlhYmxlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5yZ2IoKS5kaXNwbGF5YWJsZSgpO1xuICB9LFxuICBoZXg6IGNvbG9yX2Zvcm1hdEhleCwgLy8gRGVwcmVjYXRlZCEgVXNlIGNvbG9yLmZvcm1hdEhleC5cbiAgZm9ybWF0SGV4OiBjb2xvcl9mb3JtYXRIZXgsXG4gIGZvcm1hdEhzbDogY29sb3JfZm9ybWF0SHNsLFxuICBmb3JtYXRSZ2I6IGNvbG9yX2Zvcm1hdFJnYixcbiAgdG9TdHJpbmc6IGNvbG9yX2Zvcm1hdFJnYlxufSk7XG5cbmZ1bmN0aW9uIGNvbG9yX2Zvcm1hdEhleCgpIHtcbiAgcmV0dXJuIHRoaXMucmdiKCkuZm9ybWF0SGV4KCk7XG59XG5cbmZ1bmN0aW9uIGNvbG9yX2Zvcm1hdEhzbCgpIHtcbiAgcmV0dXJuIGhzbENvbnZlcnQodGhpcykuZm9ybWF0SHNsKCk7XG59XG5cbmZ1bmN0aW9uIGNvbG9yX2Zvcm1hdFJnYigpIHtcbiAgcmV0dXJuIHRoaXMucmdiKCkuZm9ybWF0UmdiKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbG9yKGZvcm1hdCkge1xuICB2YXIgbSwgbDtcbiAgZm9ybWF0ID0gKGZvcm1hdCArIFwiXCIpLnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICByZXR1cm4gKG0gPSByZUhleC5leGVjKGZvcm1hdCkpID8gKGwgPSBtWzFdLmxlbmd0aCwgbSA9IHBhcnNlSW50KG1bMV0sIDE2KSwgbCA9PT0gNiA/IHJnYm4obSkgLy8gI2ZmMDAwMFxuICAgICAgOiBsID09PSAzID8gbmV3IFJnYigobSA+PiA4ICYgMHhmKSB8IChtID4+IDQgJiAweGYwKSwgKG0gPj4gNCAmIDB4ZikgfCAobSAmIDB4ZjApLCAoKG0gJiAweGYpIDw8IDQpIHwgKG0gJiAweGYpLCAxKSAvLyAjZjAwXG4gICAgICA6IGwgPT09IDggPyByZ2JhKG0gPj4gMjQgJiAweGZmLCBtID4+IDE2ICYgMHhmZiwgbSA+PiA4ICYgMHhmZiwgKG0gJiAweGZmKSAvIDB4ZmYpIC8vICNmZjAwMDAwMFxuICAgICAgOiBsID09PSA0ID8gcmdiYSgobSA+PiAxMiAmIDB4ZikgfCAobSA+PiA4ICYgMHhmMCksIChtID4+IDggJiAweGYpIHwgKG0gPj4gNCAmIDB4ZjApLCAobSA+PiA0ICYgMHhmKSB8IChtICYgMHhmMCksICgoKG0gJiAweGYpIDw8IDQpIHwgKG0gJiAweGYpKSAvIDB4ZmYpIC8vICNmMDAwXG4gICAgICA6IG51bGwpIC8vIGludmFsaWQgaGV4XG4gICAgICA6IChtID0gcmVSZ2JJbnRlZ2VyLmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0sIG1bMl0sIG1bM10sIDEpIC8vIHJnYigyNTUsIDAsIDApXG4gICAgICA6IChtID0gcmVSZ2JQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBuZXcgUmdiKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIDEpIC8vIHJnYigxMDAlLCAwJSwgMCUpXG4gICAgICA6IChtID0gcmVSZ2JhSW50ZWdlci5leGVjKGZvcm1hdCkpID8gcmdiYShtWzFdLCBtWzJdLCBtWzNdLCBtWzRdKSAvLyByZ2JhKDI1NSwgMCwgMCwgMSlcbiAgICAgIDogKG0gPSByZVJnYmFQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyByZ2JhKG1bMV0gKiAyNTUgLyAxMDAsIG1bMl0gKiAyNTUgLyAxMDAsIG1bM10gKiAyNTUgLyAxMDAsIG1bNF0pIC8vIHJnYigxMDAlLCAwJSwgMCUsIDEpXG4gICAgICA6IChtID0gcmVIc2xQZXJjZW50LmV4ZWMoZm9ybWF0KSkgPyBoc2xhKG1bMV0sIG1bMl0gLyAxMDAsIG1bM10gLyAxMDAsIDEpIC8vIGhzbCgxMjAsIDUwJSwgNTAlKVxuICAgICAgOiAobSA9IHJlSHNsYVBlcmNlbnQuZXhlYyhmb3JtYXQpKSA/IGhzbGEobVsxXSwgbVsyXSAvIDEwMCwgbVszXSAvIDEwMCwgbVs0XSkgLy8gaHNsYSgxMjAsIDUwJSwgNTAlLCAxKVxuICAgICAgOiBuYW1lZC5oYXNPd25Qcm9wZXJ0eShmb3JtYXQpID8gcmdibihuYW1lZFtmb3JtYXRdKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xuICAgICAgOiBmb3JtYXQgPT09IFwidHJhbnNwYXJlbnRcIiA/IG5ldyBSZ2IoTmFOLCBOYU4sIE5hTiwgMClcbiAgICAgIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gcmdibihuKSB7XG4gIHJldHVybiBuZXcgUmdiKG4gPj4gMTYgJiAweGZmLCBuID4+IDggJiAweGZmLCBuICYgMHhmZiwgMSk7XG59XG5cbmZ1bmN0aW9uIHJnYmEociwgZywgYiwgYSkge1xuICBpZiAoYSA8PSAwKSByID0gZyA9IGIgPSBOYU47XG4gIHJldHVybiBuZXcgUmdiKHIsIGcsIGIsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmdiQ29udmVydChvKSB7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBDb2xvcikpIG8gPSBjb2xvcihvKTtcbiAgaWYgKCFvKSByZXR1cm4gbmV3IFJnYjtcbiAgbyA9IG8ucmdiKCk7XG4gIHJldHVybiBuZXcgUmdiKG8uciwgby5nLCBvLmIsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZ2IociwgZywgYiwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IHJnYkNvbnZlcnQocikgOiBuZXcgUmdiKHIsIGcsIGIsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFJnYihyLCBnLCBiLCBvcGFjaXR5KSB7XG4gIHRoaXMuciA9ICtyO1xuICB0aGlzLmcgPSArZztcbiAgdGhpcy5iID0gK2I7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoUmdiLCByZ2IsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcjogZnVuY3Rpb24oaykge1xuICAgIGsgPSBrID09IG51bGwgPyBicmlnaHRlciA6IE1hdGgucG93KGJyaWdodGVyLCBrKTtcbiAgICByZXR1cm4gbmV3IFJnYih0aGlzLnIgKiBrLCB0aGlzLmcgKiBrLCB0aGlzLmIgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IFJnYih0aGlzLnIgKiBrLCB0aGlzLmcgKiBrLCB0aGlzLmIgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBkaXNwbGF5YWJsZTogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICgtMC41IDw9IHRoaXMuciAmJiB0aGlzLnIgPCAyNTUuNSlcbiAgICAgICAgJiYgKC0wLjUgPD0gdGhpcy5nICYmIHRoaXMuZyA8IDI1NS41KVxuICAgICAgICAmJiAoLTAuNSA8PSB0aGlzLmIgJiYgdGhpcy5iIDwgMjU1LjUpXG4gICAgICAgICYmICgwIDw9IHRoaXMub3BhY2l0eSAmJiB0aGlzLm9wYWNpdHkgPD0gMSk7XG4gIH0sXG4gIGhleDogcmdiX2Zvcm1hdEhleCwgLy8gRGVwcmVjYXRlZCEgVXNlIGNvbG9yLmZvcm1hdEhleC5cbiAgZm9ybWF0SGV4OiByZ2JfZm9ybWF0SGV4LFxuICBmb3JtYXRSZ2I6IHJnYl9mb3JtYXRSZ2IsXG4gIHRvU3RyaW5nOiByZ2JfZm9ybWF0UmdiXG59KSk7XG5cbmZ1bmN0aW9uIHJnYl9mb3JtYXRIZXgoKSB7XG4gIHJldHVybiBcIiNcIiArIGhleCh0aGlzLnIpICsgaGV4KHRoaXMuZykgKyBoZXgodGhpcy5iKTtcbn1cblxuZnVuY3Rpb24gcmdiX2Zvcm1hdFJnYigpIHtcbiAgdmFyIGEgPSB0aGlzLm9wYWNpdHk7IGEgPSBpc05hTihhKSA/IDEgOiBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBhKSk7XG4gIHJldHVybiAoYSA9PT0gMSA/IFwicmdiKFwiIDogXCJyZ2JhKFwiKVxuICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodGhpcy5yKSB8fCAwKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMuZykgfHwgMCkpICsgXCIsIFwiXG4gICAgICArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCh0aGlzLmIpIHx8IDApKVxuICAgICAgKyAoYSA9PT0gMSA/IFwiKVwiIDogXCIsIFwiICsgYSArIFwiKVwiKTtcbn1cblxuZnVuY3Rpb24gaGV4KHZhbHVlKSB7XG4gIHZhbHVlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHZhbHVlKSB8fCAwKSk7XG4gIHJldHVybiAodmFsdWUgPCAxNiA/IFwiMFwiIDogXCJcIikgKyB2YWx1ZS50b1N0cmluZygxNik7XG59XG5cbmZ1bmN0aW9uIGhzbGEoaCwgcywgbCwgYSkge1xuICBpZiAoYSA8PSAwKSBoID0gcyA9IGwgPSBOYU47XG4gIGVsc2UgaWYgKGwgPD0gMCB8fCBsID49IDEpIGggPSBzID0gTmFOO1xuICBlbHNlIGlmIChzIDw9IDApIGggPSBOYU47XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIGEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaHNsQ29udmVydChvKSB7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbmV3IEhzbChvLmgsIG8ucywgby5sLCBvLm9wYWNpdHkpO1xuICBpZiAoIShvIGluc3RhbmNlb2YgQ29sb3IpKSBvID0gY29sb3Iobyk7XG4gIGlmICghbykgcmV0dXJuIG5ldyBIc2w7XG4gIGlmIChvIGluc3RhbmNlb2YgSHNsKSByZXR1cm4gbztcbiAgbyA9IG8ucmdiKCk7XG4gIHZhciByID0gby5yIC8gMjU1LFxuICAgICAgZyA9IG8uZyAvIDI1NSxcbiAgICAgIGIgPSBvLmIgLyAyNTUsXG4gICAgICBtaW4gPSBNYXRoLm1pbihyLCBnLCBiKSxcbiAgICAgIG1heCA9IE1hdGgubWF4KHIsIGcsIGIpLFxuICAgICAgaCA9IE5hTixcbiAgICAgIHMgPSBtYXggLSBtaW4sXG4gICAgICBsID0gKG1heCArIG1pbikgLyAyO1xuICBpZiAocykge1xuICAgIGlmIChyID09PSBtYXgpIGggPSAoZyAtIGIpIC8gcyArIChnIDwgYikgKiA2O1xuICAgIGVsc2UgaWYgKGcgPT09IG1heCkgaCA9IChiIC0gcikgLyBzICsgMjtcbiAgICBlbHNlIGggPSAociAtIGcpIC8gcyArIDQ7XG4gICAgcyAvPSBsIDwgMC41ID8gbWF4ICsgbWluIDogMiAtIG1heCAtIG1pbjtcbiAgICBoICo9IDYwO1xuICB9IGVsc2Uge1xuICAgIHMgPSBsID4gMCAmJiBsIDwgMSA/IDAgOiBoO1xuICB9XG4gIHJldHVybiBuZXcgSHNsKGgsIHMsIGwsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoc2woaCwgcywgbCwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGhzbENvbnZlcnQoaCkgOiBuZXcgSHNsKGgsIHMsIGwsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZnVuY3Rpb24gSHNsKGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgdGhpcy5oID0gK2g7XG4gIHRoaXMucyA9ICtzO1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShIc2wsIGhzbCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgSHNsKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IEhzbCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgaCA9IHRoaXMuaCAlIDM2MCArICh0aGlzLmggPCAwKSAqIDM2MCxcbiAgICAgICAgcyA9IGlzTmFOKGgpIHx8IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zLFxuICAgICAgICBsID0gdGhpcy5sLFxuICAgICAgICBtMiA9IGwgKyAobCA8IDAuNSA/IGwgOiAxIC0gbCkgKiBzLFxuICAgICAgICBtMSA9IDIgKiBsIC0gbTI7XG4gICAgcmV0dXJuIG5ldyBSZ2IoXG4gICAgICBoc2wycmdiKGggPj0gMjQwID8gaCAtIDI0MCA6IGggKyAxMjAsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGgsIG0xLCBtMiksXG4gICAgICBoc2wycmdiKGggPCAxMjAgPyBoICsgMjQwIDogaCAtIDEyMCwgbTEsIG0yKSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH0sXG4gIGRpc3BsYXlhYmxlOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gKDAgPD0gdGhpcy5zICYmIHRoaXMucyA8PSAxIHx8IGlzTmFOKHRoaXMucykpXG4gICAgICAgICYmICgwIDw9IHRoaXMubCAmJiB0aGlzLmwgPD0gMSlcbiAgICAgICAgJiYgKDAgPD0gdGhpcy5vcGFjaXR5ICYmIHRoaXMub3BhY2l0eSA8PSAxKTtcbiAgfSxcbiAgZm9ybWF0SHNsOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYSA9IHRoaXMub3BhY2l0eTsgYSA9IGlzTmFOKGEpID8gMSA6IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIGEpKTtcbiAgICByZXR1cm4gKGEgPT09IDEgPyBcImhzbChcIiA6IFwiaHNsYShcIilcbiAgICAgICAgKyAodGhpcy5oIHx8IDApICsgXCIsIFwiXG4gICAgICAgICsgKHRoaXMucyB8fCAwKSAqIDEwMCArIFwiJSwgXCJcbiAgICAgICAgKyAodGhpcy5sIHx8IDApICogMTAwICsgXCIlXCJcbiAgICAgICAgKyAoYSA9PT0gMSA/IFwiKVwiIDogXCIsIFwiICsgYSArIFwiKVwiKTtcbiAgfVxufSkpO1xuXG4vKiBGcm9tIEZ2RCAxMy4zNywgQ1NTIENvbG9yIE1vZHVsZSBMZXZlbCAzICovXG5mdW5jdGlvbiBoc2wycmdiKGgsIG0xLCBtMikge1xuICByZXR1cm4gKGggPCA2MCA/IG0xICsgKG0yIC0gbTEpICogaCAvIDYwXG4gICAgICA6IGggPCAxODAgPyBtMlxuICAgICAgOiBoIDwgMjQwID8gbTEgKyAobTIgLSBtMSkgKiAoMjQwIC0gaCkgLyA2MFxuICAgICAgOiBtMSkgKiAyNTU7XG59XG4iLCJpbXBvcnQgZGVmaW5lLCB7ZXh0ZW5kfSBmcm9tIFwiLi9kZWZpbmUuanNcIjtcbmltcG9ydCB7Q29sb3IsIHJnYkNvbnZlcnQsIFJnYiwgZGFya2VyLCBicmlnaHRlcn0gZnJvbSBcIi4vY29sb3IuanNcIjtcbmltcG9ydCB7ZGVncmVlcywgcmFkaWFuc30gZnJvbSBcIi4vbWF0aC5qc1wiO1xuXG52YXIgQSA9IC0wLjE0ODYxLFxuICAgIEIgPSArMS43ODI3NyxcbiAgICBDID0gLTAuMjkyMjcsXG4gICAgRCA9IC0wLjkwNjQ5LFxuICAgIEUgPSArMS45NzI5NCxcbiAgICBFRCA9IEUgKiBELFxuICAgIEVCID0gRSAqIEIsXG4gICAgQkNfREEgPSBCICogQyAtIEQgKiBBO1xuXG5mdW5jdGlvbiBjdWJlaGVsaXhDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBDdWJlaGVsaXgpIHJldHVybiBuZXcgQ3ViZWhlbGl4KG8uaCwgby5zLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBSZ2IpKSBvID0gcmdiQ29udmVydChvKTtcbiAgdmFyIHIgPSBvLnIgLyAyNTUsXG4gICAgICBnID0gby5nIC8gMjU1LFxuICAgICAgYiA9IG8uYiAvIDI1NSxcbiAgICAgIGwgPSAoQkNfREEgKiBiICsgRUQgKiByIC0gRUIgKiBnKSAvIChCQ19EQSArIEVEIC0gRUIpLFxuICAgICAgYmwgPSBiIC0gbCxcbiAgICAgIGsgPSAoRSAqIChnIC0gbCkgLSBDICogYmwpIC8gRCxcbiAgICAgIHMgPSBNYXRoLnNxcnQoayAqIGsgKyBibCAqIGJsKSAvIChFICogbCAqICgxIC0gbCkpLCAvLyBOYU4gaWYgbD0wIG9yIGw9MVxuICAgICAgaCA9IHMgPyBNYXRoLmF0YW4yKGssIGJsKSAqIGRlZ3JlZXMgLSAxMjAgOiBOYU47XG4gIHJldHVybiBuZXcgQ3ViZWhlbGl4KGggPCAwID8gaCArIDM2MCA6IGgsIHMsIGwsIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGN1YmVoZWxpeChoLCBzLCBsLCBvcGFjaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gY3ViZWhlbGl4Q29udmVydChoKSA6IG5ldyBDdWJlaGVsaXgoaCwgcywgbCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ3ViZWhlbGl4KGgsIHMsIGwsIG9wYWNpdHkpIHtcbiAgdGhpcy5oID0gK2g7XG4gIHRoaXMucyA9ICtzO1xuICB0aGlzLmwgPSArbDtcbiAgdGhpcy5vcGFjaXR5ID0gK29wYWNpdHk7XG59XG5cbmRlZmluZShDdWJlaGVsaXgsIGN1YmVoZWxpeCwgZXh0ZW5kKENvbG9yLCB7XG4gIGJyaWdodGVyOiBmdW5jdGlvbihrKSB7XG4gICAgayA9IGsgPT0gbnVsbCA/IGJyaWdodGVyIDogTWF0aC5wb3coYnJpZ2h0ZXIsIGspO1xuICAgIHJldHVybiBuZXcgQ3ViZWhlbGl4KHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiBrLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICBkYXJrZXI6IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gayA9PSBudWxsID8gZGFya2VyIDogTWF0aC5wb3coZGFya2VyLCBrKTtcbiAgICByZXR1cm4gbmV3IEN1YmVoZWxpeCh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogaywgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgaCA9IGlzTmFOKHRoaXMuaCkgPyAwIDogKHRoaXMuaCArIDEyMCkgKiByYWRpYW5zLFxuICAgICAgICBsID0gK3RoaXMubCxcbiAgICAgICAgYSA9IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zICogbCAqICgxIC0gbCksXG4gICAgICAgIGNvc2ggPSBNYXRoLmNvcyhoKSxcbiAgICAgICAgc2luaCA9IE1hdGguc2luKGgpO1xuICAgIHJldHVybiBuZXcgUmdiKFxuICAgICAgMjU1ICogKGwgKyBhICogKEEgKiBjb3NoICsgQiAqIHNpbmgpKSxcbiAgICAgIDI1NSAqIChsICsgYSAqIChDICogY29zaCArIEQgKiBzaW5oKSksXG4gICAgICAyNTUgKiAobCArIGEgKiAoRSAqIGNvc2gpKSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH1cbn0pKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnN0cnVjdG9yLCBmYWN0b3J5LCBwcm90b3R5cGUpIHtcbiAgY29uc3RydWN0b3IucHJvdG90eXBlID0gZmFjdG9yeS5wcm90b3R5cGUgPSBwcm90b3R5cGU7XG4gIHByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGNvbnN0cnVjdG9yO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXh0ZW5kKHBhcmVudCwgZGVmaW5pdGlvbikge1xuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwYXJlbnQucHJvdG90eXBlKTtcbiAgZm9yICh2YXIga2V5IGluIGRlZmluaXRpb24pIHByb3RvdHlwZVtrZXldID0gZGVmaW5pdGlvbltrZXldO1xuICByZXR1cm4gcHJvdG90eXBlO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNvbG9yLCByZ2IsIGhzbH0gZnJvbSBcIi4vY29sb3IuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsYWIsIGhjbCwgbGNoLCBncmF5fSBmcm9tIFwiLi9sYWIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdWJlaGVsaXh9IGZyb20gXCIuL2N1YmVoZWxpeC5qc1wiO1xuIiwiaW1wb3J0IGRlZmluZSwge2V4dGVuZH0gZnJvbSBcIi4vZGVmaW5lLmpzXCI7XG5pbXBvcnQge0NvbG9yLCByZ2JDb252ZXJ0LCBSZ2J9IGZyb20gXCIuL2NvbG9yLmpzXCI7XG5pbXBvcnQge2RlZ3JlZXMsIHJhZGlhbnN9IGZyb20gXCIuL21hdGguanNcIjtcblxuLy8gaHR0cHM6Ly9vYnNlcnZhYmxlaHEuY29tL0BtYm9zdG9jay9sYWItYW5kLXJnYlxuY29uc3QgSyA9IDE4LFxuICAgIFhuID0gMC45NjQyMixcbiAgICBZbiA9IDEsXG4gICAgWm4gPSAwLjgyNTIxLFxuICAgIHQwID0gNCAvIDI5LFxuICAgIHQxID0gNiAvIDI5LFxuICAgIHQyID0gMyAqIHQxICogdDEsXG4gICAgdDMgPSB0MSAqIHQxICogdDE7XG5cbmZ1bmN0aW9uIGxhYkNvbnZlcnQobykge1xuICBpZiAobyBpbnN0YW5jZW9mIExhYikgcmV0dXJuIG5ldyBMYWIoby5sLCBvLmEsIG8uYiwgby5vcGFjaXR5KTtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIY2wpIHJldHVybiBoY2wybGFiKG8pO1xuICBpZiAoIShvIGluc3RhbmNlb2YgUmdiKSkgbyA9IHJnYkNvbnZlcnQobyk7XG4gIHZhciByID0gcmdiMmxyZ2Ioby5yKSxcbiAgICAgIGcgPSByZ2IybHJnYihvLmcpLFxuICAgICAgYiA9IHJnYjJscmdiKG8uYiksXG4gICAgICB5ID0geHl6MmxhYigoMC4yMjI1MDQ1ICogciArIDAuNzE2ODc4NiAqIGcgKyAwLjA2MDYxNjkgKiBiKSAvIFluKSwgeCwgejtcbiAgaWYgKHIgPT09IGcgJiYgZyA9PT0gYikgeCA9IHogPSB5OyBlbHNlIHtcbiAgICB4ID0geHl6MmxhYigoMC40MzYwNzQ3ICogciArIDAuMzg1MDY0OSAqIGcgKyAwLjE0MzA4MDQgKiBiKSAvIFhuKTtcbiAgICB6ID0geHl6MmxhYigoMC4wMTM5MzIyICogciArIDAuMDk3MTA0NSAqIGcgKyAwLjcxNDE3MzMgKiBiKSAvIFpuKTtcbiAgfVxuICByZXR1cm4gbmV3IExhYigxMTYgKiB5IC0gMTYsIDUwMCAqICh4IC0geSksIDIwMCAqICh5IC0geiksIG8ub3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBncmF5KGwsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIG5ldyBMYWIobCwgMCwgMCwgb3BhY2l0eSA9PSBudWxsID8gMSA6IG9wYWNpdHkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsYWIobCwgYSwgYiwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGxhYkNvbnZlcnQobCkgOiBuZXcgTGFiKGwsIGEsIGIsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIExhYihsLCBhLCBiLCBvcGFjaXR5KSB7XG4gIHRoaXMubCA9ICtsO1xuICB0aGlzLmEgPSArYTtcbiAgdGhpcy5iID0gK2I7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5kZWZpbmUoTGFiLCBsYWIsIGV4dGVuZChDb2xvciwge1xuICBicmlnaHRlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgTGFiKHRoaXMubCArIEsgKiAoayA9PSBudWxsID8gMSA6IGspLCB0aGlzLmEsIHRoaXMuYiwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgZGFya2VyOiBmdW5jdGlvbihrKSB7XG4gICAgcmV0dXJuIG5ldyBMYWIodGhpcy5sIC0gSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMuYSwgdGhpcy5iLCB0aGlzLm9wYWNpdHkpO1xuICB9LFxuICByZ2I6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB5ID0gKHRoaXMubCArIDE2KSAvIDExNixcbiAgICAgICAgeCA9IGlzTmFOKHRoaXMuYSkgPyB5IDogeSArIHRoaXMuYSAvIDUwMCxcbiAgICAgICAgeiA9IGlzTmFOKHRoaXMuYikgPyB5IDogeSAtIHRoaXMuYiAvIDIwMDtcbiAgICB4ID0gWG4gKiBsYWIyeHl6KHgpO1xuICAgIHkgPSBZbiAqIGxhYjJ4eXooeSk7XG4gICAgeiA9IFpuICogbGFiMnh5eih6KTtcbiAgICByZXR1cm4gbmV3IFJnYihcbiAgICAgIGxyZ2IycmdiKCAzLjEzMzg1NjEgKiB4IC0gMS42MTY4NjY3ICogeSAtIDAuNDkwNjE0NiAqIHopLFxuICAgICAgbHJnYjJyZ2IoLTAuOTc4NzY4NCAqIHggKyAxLjkxNjE0MTUgKiB5ICsgMC4wMzM0NTQwICogeiksXG4gICAgICBscmdiMnJnYiggMC4wNzE5NDUzICogeCAtIDAuMjI4OTkxNCAqIHkgKyAxLjQwNTI0MjcgKiB6KSxcbiAgICAgIHRoaXMub3BhY2l0eVxuICAgICk7XG4gIH1cbn0pKTtcblxuZnVuY3Rpb24geHl6MmxhYih0KSB7XG4gIHJldHVybiB0ID4gdDMgPyBNYXRoLnBvdyh0LCAxIC8gMykgOiB0IC8gdDIgKyB0MDtcbn1cblxuZnVuY3Rpb24gbGFiMnh5eih0KSB7XG4gIHJldHVybiB0ID4gdDEgPyB0ICogdCAqIHQgOiB0MiAqICh0IC0gdDApO1xufVxuXG5mdW5jdGlvbiBscmdiMnJnYih4KSB7XG4gIHJldHVybiAyNTUgKiAoeCA8PSAwLjAwMzEzMDggPyAxMi45MiAqIHggOiAxLjA1NSAqIE1hdGgucG93KHgsIDEgLyAyLjQpIC0gMC4wNTUpO1xufVxuXG5mdW5jdGlvbiByZ2IybHJnYih4KSB7XG4gIHJldHVybiAoeCAvPSAyNTUpIDw9IDAuMDQwNDUgPyB4IC8gMTIuOTIgOiBNYXRoLnBvdygoeCArIDAuMDU1KSAvIDEuMDU1LCAyLjQpO1xufVxuXG5mdW5jdGlvbiBoY2xDb252ZXJ0KG8pIHtcbiAgaWYgKG8gaW5zdGFuY2VvZiBIY2wpIHJldHVybiBuZXcgSGNsKG8uaCwgby5jLCBvLmwsIG8ub3BhY2l0eSk7XG4gIGlmICghKG8gaW5zdGFuY2VvZiBMYWIpKSBvID0gbGFiQ29udmVydChvKTtcbiAgaWYgKG8uYSA9PT0gMCAmJiBvLmIgPT09IDApIHJldHVybiBuZXcgSGNsKE5hTiwgMCA8IG8ubCAmJiBvLmwgPCAxMDAgPyAwIDogTmFOLCBvLmwsIG8ub3BhY2l0eSk7XG4gIHZhciBoID0gTWF0aC5hdGFuMihvLmIsIG8uYSkgKiBkZWdyZWVzO1xuICByZXR1cm4gbmV3IEhjbChoIDwgMCA/IGggKyAzNjAgOiBoLCBNYXRoLnNxcnQoby5hICogby5hICsgby5iICogby5iKSwgby5sLCBvLm9wYWNpdHkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGNoKGwsIGMsIGgsIG9wYWNpdHkpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBoY2xDb252ZXJ0KGwpIDogbmV3IEhjbChoLCBjLCBsLCBvcGFjaXR5ID09IG51bGwgPyAxIDogb3BhY2l0eSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoY2woaCwgYywgbCwgb3BhY2l0eSkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/IGhjbENvbnZlcnQoaCkgOiBuZXcgSGNsKGgsIGMsIGwsIG9wYWNpdHkgPT0gbnVsbCA/IDEgOiBvcGFjaXR5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEhjbChoLCBjLCBsLCBvcGFjaXR5KSB7XG4gIHRoaXMuaCA9ICtoO1xuICB0aGlzLmMgPSArYztcbiAgdGhpcy5sID0gK2w7XG4gIHRoaXMub3BhY2l0eSA9ICtvcGFjaXR5O1xufVxuXG5mdW5jdGlvbiBoY2wybGFiKG8pIHtcbiAgaWYgKGlzTmFOKG8uaCkpIHJldHVybiBuZXcgTGFiKG8ubCwgMCwgMCwgby5vcGFjaXR5KTtcbiAgdmFyIGggPSBvLmggKiByYWRpYW5zO1xuICByZXR1cm4gbmV3IExhYihvLmwsIE1hdGguY29zKGgpICogby5jLCBNYXRoLnNpbihoKSAqIG8uYywgby5vcGFjaXR5KTtcbn1cblxuZGVmaW5lKEhjbCwgaGNsLCBleHRlbmQoQ29sb3IsIHtcbiAgYnJpZ2h0ZXI6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gbmV3IEhjbCh0aGlzLmgsIHRoaXMuYywgdGhpcy5sICsgSyAqIChrID09IG51bGwgPyAxIDogayksIHRoaXMub3BhY2l0eSk7XG4gIH0sXG4gIGRhcmtlcjogZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBuZXcgSGNsKHRoaXMuaCwgdGhpcy5jLCB0aGlzLmwgLSBLICogKGsgPT0gbnVsbCA/IDEgOiBrKSwgdGhpcy5vcGFjaXR5KTtcbiAgfSxcbiAgcmdiOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gaGNsMmxhYih0aGlzKS5yZ2IoKTtcbiAgfVxufSkpO1xuIiwiZXhwb3J0IGNvbnN0IHJhZGlhbnMgPSBNYXRoLlBJIC8gMTgwO1xuZXhwb3J0IGNvbnN0IGRlZ3JlZXMgPSAxODAgLyBNYXRoLlBJO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmluZykge1xuICB2YXIgaSA9IDAsIG4gPSByaW5nLmxlbmd0aCwgYXJlYSA9IHJpbmdbbiAtIDFdWzFdICogcmluZ1swXVswXSAtIHJpbmdbbiAtIDFdWzBdICogcmluZ1swXVsxXTtcbiAgd2hpbGUgKCsraSA8IG4pIGFyZWEgKz0gcmluZ1tpIC0gMV1bMV0gKiByaW5nW2ldWzBdIC0gcmluZ1tpIC0gMV1bMF0gKiByaW5nW2ldWzFdO1xuICByZXR1cm4gYXJlYTtcbn1cbiIsInZhciBhcnJheSA9IEFycmF5LnByb3RvdHlwZTtcblxuZXhwb3J0IHZhciBzbGljZSA9IGFycmF5LnNsaWNlO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICByZXR1cm4gYSAtIGI7XG59XG4iLCIvLyBUT0RPIE9wdGltaXplIGVkZ2UgY2FzZXMuXG4vLyBUT0RPIE9wdGltaXplIGluZGV4IGNhbGN1bGF0aW9uLlxuLy8gVE9ETyBPcHRpbWl6ZSBhcmd1bWVudHMuXG5leHBvcnQgZnVuY3Rpb24gYmx1clgoc291cmNlLCB0YXJnZXQsIHIpIHtcbiAgdmFyIG4gPSBzb3VyY2Uud2lkdGgsXG4gICAgICBtID0gc291cmNlLmhlaWdodCxcbiAgICAgIHcgPSAociA8PCAxKSArIDE7XG4gIGZvciAodmFyIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIHNyID0gMDsgaSA8IG4gKyByOyArK2kpIHtcbiAgICAgIGlmIChpIDwgbikge1xuICAgICAgICBzciArPSBzb3VyY2UuZGF0YVtpICsgaiAqIG5dO1xuICAgICAgfVxuICAgICAgaWYgKGkgPj0gcikge1xuICAgICAgICBpZiAoaSA+PSB3KSB7XG4gICAgICAgICAgc3IgLT0gc291cmNlLmRhdGFbaSAtIHcgKyBqICogbl07XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0LmRhdGFbaSAtIHIgKyBqICogbl0gPSBzciAvIE1hdGgubWluKGkgKyAxLCBuIC0gMSArIHcgLSBpLCB3KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gVE9ETyBPcHRpbWl6ZSBlZGdlIGNhc2VzLlxuLy8gVE9ETyBPcHRpbWl6ZSBpbmRleCBjYWxjdWxhdGlvbi5cbi8vIFRPRE8gT3B0aW1pemUgYXJndW1lbnRzLlxuZXhwb3J0IGZ1bmN0aW9uIGJsdXJZKHNvdXJjZSwgdGFyZ2V0LCByKSB7XG4gIHZhciBuID0gc291cmNlLndpZHRoLFxuICAgICAgbSA9IHNvdXJjZS5oZWlnaHQsXG4gICAgICB3ID0gKHIgPDwgMSkgKyAxO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIGZvciAodmFyIGogPSAwLCBzciA9IDA7IGogPCBtICsgcjsgKytqKSB7XG4gICAgICBpZiAoaiA8IG0pIHtcbiAgICAgICAgc3IgKz0gc291cmNlLmRhdGFbaSArIGogKiBuXTtcbiAgICAgIH1cbiAgICAgIGlmIChqID49IHIpIHtcbiAgICAgICAgaWYgKGogPj0gdykge1xuICAgICAgICAgIHNyIC09IHNvdXJjZS5kYXRhW2kgKyAoaiAtIHcpICogbl07XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0LmRhdGFbaSArIChqIC0gcikgKiBuXSA9IHNyIC8gTWF0aC5taW4oaiArIDEsIG0gLSAxICsgdyAtIGosIHcpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgeCA9PiAoKSA9PiB4O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmluZywgaG9sZSkge1xuICB2YXIgaSA9IC0xLCBuID0gaG9sZS5sZW5ndGgsIGM7XG4gIHdoaWxlICgrK2kgPCBuKSBpZiAoYyA9IHJpbmdDb250YWlucyhyaW5nLCBob2xlW2ldKSkgcmV0dXJuIGM7XG4gIHJldHVybiAwO1xufVxuXG5mdW5jdGlvbiByaW5nQ29udGFpbnMocmluZywgcG9pbnQpIHtcbiAgdmFyIHggPSBwb2ludFswXSwgeSA9IHBvaW50WzFdLCBjb250YWlucyA9IC0xO1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHJpbmcubGVuZ3RoLCBqID0gbiAtIDE7IGkgPCBuOyBqID0gaSsrKSB7XG4gICAgdmFyIHBpID0gcmluZ1tpXSwgeGkgPSBwaVswXSwgeWkgPSBwaVsxXSwgcGogPSByaW5nW2pdLCB4aiA9IHBqWzBdLCB5aiA9IHBqWzFdO1xuICAgIGlmIChzZWdtZW50Q29udGFpbnMocGksIHBqLCBwb2ludCkpIHJldHVybiAwO1xuICAgIGlmICgoKHlpID4geSkgIT09ICh5aiA+IHkpKSAmJiAoKHggPCAoeGogLSB4aSkgKiAoeSAtIHlpKSAvICh5aiAtIHlpKSArIHhpKSkpIGNvbnRhaW5zID0gLWNvbnRhaW5zO1xuICB9XG4gIHJldHVybiBjb250YWlucztcbn1cblxuZnVuY3Rpb24gc2VnbWVudENvbnRhaW5zKGEsIGIsIGMpIHtcbiAgdmFyIGk7IHJldHVybiBjb2xsaW5lYXIoYSwgYiwgYykgJiYgd2l0aGluKGFbaSA9ICsoYVswXSA9PT0gYlswXSldLCBjW2ldLCBiW2ldKTtcbn1cblxuZnVuY3Rpb24gY29sbGluZWFyKGEsIGIsIGMpIHtcbiAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAoY1sxXSAtIGFbMV0pID09PSAoY1swXSAtIGFbMF0pICogKGJbMV0gLSBhWzFdKTtcbn1cblxuZnVuY3Rpb24gd2l0aGluKHAsIHEsIHIpIHtcbiAgcmV0dXJuIHAgPD0gcSAmJiBxIDw9IHIgfHwgciA8PSBxICYmIHEgPD0gcDtcbn1cbiIsImltcG9ydCB7ZXh0ZW50LCB0aHJlc2hvbGRTdHVyZ2VzLCB0aWNrU3RlcCwgcmFuZ2V9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtzbGljZX0gZnJvbSBcIi4vYXJyYXkuanNcIjtcbmltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5pbXBvcnQgYXJlYSBmcm9tIFwiLi9hcmVhLmpzXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCBjb250YWlucyBmcm9tIFwiLi9jb250YWlucy5qc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcC5qc1wiO1xuXG52YXIgY2FzZXMgPSBbXG4gIFtdLFxuICBbW1sxLjAsIDEuNV0sIFswLjUsIDEuMF1dXSxcbiAgW1tbMS41LCAxLjBdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuNSwgMS4wXSwgWzAuNSwgMS4wXV1dLFxuICBbW1sxLjAsIDAuNV0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMC41LCAxLjBdXSwgW1sxLjAsIDAuNV0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAwLjVdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuMCwgMC41XSwgWzAuNSwgMS4wXV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjAsIDAuNV1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMS4wLCAwLjVdXV0sXG4gIFtbWzAuNSwgMS4wXSwgWzEuMCwgMC41XV0sIFtbMS41LCAxLjBdLCBbMS4wLCAxLjVdXV0sXG4gIFtbWzEuNSwgMS4wXSwgWzEuMCwgMC41XV1dLFxuICBbW1swLjUsIDEuMF0sIFsxLjUsIDEuMF1dXSxcbiAgW1tbMS4wLCAxLjVdLCBbMS41LCAxLjBdXV0sXG4gIFtbWzAuNSwgMS4wXSwgWzEuMCwgMS41XV1dLFxuICBbXVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICB0aHJlc2hvbGQgPSB0aHJlc2hvbGRTdHVyZ2VzLFxuICAgICAgc21vb3RoID0gc21vb3RoTGluZWFyO1xuXG4gIGZ1bmN0aW9uIGNvbnRvdXJzKHZhbHVlcykge1xuICAgIHZhciB0eiA9IHRocmVzaG9sZCh2YWx1ZXMpO1xuXG4gICAgLy8gQ29udmVydCBudW1iZXIgb2YgdGhyZXNob2xkcyBpbnRvIHVuaWZvcm0gdGhyZXNob2xkcy5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodHopKSB7XG4gICAgICB2YXIgZG9tYWluID0gZXh0ZW50KHZhbHVlcyksIHN0YXJ0ID0gZG9tYWluWzBdLCBzdG9wID0gZG9tYWluWzFdO1xuICAgICAgdHogPSB0aWNrU3RlcChzdGFydCwgc3RvcCwgdHopO1xuICAgICAgdHogPSByYW5nZShNYXRoLmZsb29yKHN0YXJ0IC8gdHopICogdHosIE1hdGguZmxvb3Ioc3RvcCAvIHR6KSAqIHR6LCB0eik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHR6ID0gdHouc2xpY2UoKS5zb3J0KGFzY2VuZGluZyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHR6Lm1hcChmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIGNvbnRvdXIodmFsdWVzLCB2YWx1ZSk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBBY2N1bXVsYXRlLCBzbW9vdGggY29udG91ciByaW5ncywgYXNzaWduIGhvbGVzIHRvIGV4dGVyaW9yIHJpbmdzLlxuICAvLyBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vbWJvc3RvY2svc2hhcGVmaWxlL2Jsb2IvdjAuNi4yL3NocC9wb2x5Z29uLmpzXG4gIGZ1bmN0aW9uIGNvbnRvdXIodmFsdWVzLCB2YWx1ZSkge1xuICAgIHZhciBwb2x5Z29ucyA9IFtdLFxuICAgICAgICBob2xlcyA9IFtdO1xuXG4gICAgaXNvcmluZ3ModmFsdWVzLCB2YWx1ZSwgZnVuY3Rpb24ocmluZykge1xuICAgICAgc21vb3RoKHJpbmcsIHZhbHVlcywgdmFsdWUpO1xuICAgICAgaWYgKGFyZWEocmluZykgPiAwKSBwb2x5Z29ucy5wdXNoKFtyaW5nXSk7XG4gICAgICBlbHNlIGhvbGVzLnB1c2gocmluZyk7XG4gICAgfSk7XG5cbiAgICBob2xlcy5mb3JFYWNoKGZ1bmN0aW9uKGhvbGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gcG9seWdvbnMubGVuZ3RoLCBwb2x5Z29uOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmIChjb250YWlucygocG9seWdvbiA9IHBvbHlnb25zW2ldKVswXSwgaG9sZSkgIT09IC0xKSB7XG4gICAgICAgICAgcG9seWdvbi5wdXNoKGhvbGUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwiTXVsdGlQb2x5Z29uXCIsXG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBjb29yZGluYXRlczogcG9seWdvbnNcbiAgICB9O1xuICB9XG5cbiAgLy8gTWFyY2hpbmcgc3F1YXJlcyB3aXRoIGlzb2xpbmVzIHN0aXRjaGVkIGludG8gcmluZ3MuXG4gIC8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS90b3BvanNvbi90b3BvanNvbi1jbGllbnQvYmxvYi92My4wLjAvc3JjL3N0aXRjaC5qc1xuICBmdW5jdGlvbiBpc29yaW5ncyh2YWx1ZXMsIHZhbHVlLCBjYWxsYmFjaykge1xuICAgIHZhciBmcmFnbWVudEJ5U3RhcnQgPSBuZXcgQXJyYXksXG4gICAgICAgIGZyYWdtZW50QnlFbmQgPSBuZXcgQXJyYXksXG4gICAgICAgIHgsIHksIHQwLCB0MSwgdDIsIHQzO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIGZvciB0aGUgZmlyc3Qgcm93ICh5ID0gLTEsIHQyID0gdDMgPSAwKS5cbiAgICB4ID0geSA9IC0xO1xuICAgIHQxID0gdmFsdWVzWzBdID49IHZhbHVlO1xuICAgIGNhc2VzW3QxIDw8IDFdLmZvckVhY2goc3RpdGNoKTtcbiAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICB0MCA9IHQxLCB0MSA9IHZhbHVlc1t4ICsgMV0gPj0gdmFsdWU7XG4gICAgICBjYXNlc1t0MCB8IHQxIDw8IDFdLmZvckVhY2goc3RpdGNoKTtcbiAgICB9XG4gICAgY2FzZXNbdDEgPDwgMF0uZm9yRWFjaChzdGl0Y2gpO1xuXG4gICAgLy8gR2VuZXJhbCBjYXNlIGZvciB0aGUgaW50ZXJtZWRpYXRlIHJvd3MuXG4gICAgd2hpbGUgKCsreSA8IGR5IC0gMSkge1xuICAgICAgeCA9IC0xO1xuICAgICAgdDEgPSB2YWx1ZXNbeSAqIGR4ICsgZHhdID49IHZhbHVlO1xuICAgICAgdDIgPSB2YWx1ZXNbeSAqIGR4XSA+PSB2YWx1ZTtcbiAgICAgIGNhc2VzW3QxIDw8IDEgfCB0MiA8PCAyXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICAgIHQwID0gdDEsIHQxID0gdmFsdWVzW3kgKiBkeCArIGR4ICsgeCArIDFdID49IHZhbHVlO1xuICAgICAgICB0MyA9IHQyLCB0MiA9IHZhbHVlc1t5ICogZHggKyB4ICsgMV0gPj0gdmFsdWU7XG4gICAgICAgIGNhc2VzW3QwIHwgdDEgPDwgMSB8IHQyIDw8IDIgfCB0MyA8PCAzXS5mb3JFYWNoKHN0aXRjaCk7XG4gICAgICB9XG4gICAgICBjYXNlc1t0MSB8IHQyIDw8IDNdLmZvckVhY2goc3RpdGNoKTtcbiAgICB9XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIHRoZSBsYXN0IHJvdyAoeSA9IGR5IC0gMSwgdDAgPSB0MSA9IDApLlxuICAgIHggPSAtMTtcbiAgICB0MiA9IHZhbHVlc1t5ICogZHhdID49IHZhbHVlO1xuICAgIGNhc2VzW3QyIDw8IDJdLmZvckVhY2goc3RpdGNoKTtcbiAgICB3aGlsZSAoKyt4IDwgZHggLSAxKSB7XG4gICAgICB0MyA9IHQyLCB0MiA9IHZhbHVlc1t5ICogZHggKyB4ICsgMV0gPj0gdmFsdWU7XG4gICAgICBjYXNlc1t0MiA8PCAyIHwgdDMgPDwgM10uZm9yRWFjaChzdGl0Y2gpO1xuICAgIH1cbiAgICBjYXNlc1t0MiA8PCAzXS5mb3JFYWNoKHN0aXRjaCk7XG5cbiAgICBmdW5jdGlvbiBzdGl0Y2gobGluZSkge1xuICAgICAgdmFyIHN0YXJ0ID0gW2xpbmVbMF1bMF0gKyB4LCBsaW5lWzBdWzFdICsgeV0sXG4gICAgICAgICAgZW5kID0gW2xpbmVbMV1bMF0gKyB4LCBsaW5lWzFdWzFdICsgeV0sXG4gICAgICAgICAgc3RhcnRJbmRleCA9IGluZGV4KHN0YXJ0KSxcbiAgICAgICAgICBlbmRJbmRleCA9IGluZGV4KGVuZCksXG4gICAgICAgICAgZiwgZztcbiAgICAgIGlmIChmID0gZnJhZ21lbnRCeUVuZFtzdGFydEluZGV4XSkge1xuICAgICAgICBpZiAoZyA9IGZyYWdtZW50QnlTdGFydFtlbmRJbmRleF0pIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeUVuZFtmLmVuZF07XG4gICAgICAgICAgZGVsZXRlIGZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XTtcbiAgICAgICAgICBpZiAoZiA9PT0gZykge1xuICAgICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGYucmluZyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZyYWdtZW50QnlTdGFydFtmLnN0YXJ0XSA9IGZyYWdtZW50QnlFbmRbZy5lbmRdID0ge3N0YXJ0OiBmLnN0YXJ0LCBlbmQ6IGcuZW5kLCByaW5nOiBmLnJpbmcuY29uY2F0KGcucmluZyl9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeUVuZFtmLmVuZF07XG4gICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICBmcmFnbWVudEJ5RW5kW2YuZW5kID0gZW5kSW5kZXhdID0gZjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChmID0gZnJhZ21lbnRCeVN0YXJ0W2VuZEluZGV4XSkge1xuICAgICAgICBpZiAoZyA9IGZyYWdtZW50QnlFbmRbc3RhcnRJbmRleF0pIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnRdO1xuICAgICAgICAgIGRlbGV0ZSBmcmFnbWVudEJ5RW5kW2cuZW5kXTtcbiAgICAgICAgICBpZiAoZiA9PT0gZykge1xuICAgICAgICAgICAgZi5yaW5nLnB1c2goZW5kKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGYucmluZyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZyYWdtZW50QnlTdGFydFtnLnN0YXJ0XSA9IGZyYWdtZW50QnlFbmRbZi5lbmRdID0ge3N0YXJ0OiBnLnN0YXJ0LCBlbmQ6IGYuZW5kLCByaW5nOiBnLnJpbmcuY29uY2F0KGYucmluZyl9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWxldGUgZnJhZ21lbnRCeVN0YXJ0W2Yuc3RhcnRdO1xuICAgICAgICAgIGYucmluZy51bnNoaWZ0KHN0YXJ0KTtcbiAgICAgICAgICBmcmFnbWVudEJ5U3RhcnRbZi5zdGFydCA9IHN0YXJ0SW5kZXhdID0gZjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnJhZ21lbnRCeVN0YXJ0W3N0YXJ0SW5kZXhdID0gZnJhZ21lbnRCeUVuZFtlbmRJbmRleF0gPSB7c3RhcnQ6IHN0YXJ0SW5kZXgsIGVuZDogZW5kSW5kZXgsIHJpbmc6IFtzdGFydCwgZW5kXX07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5kZXgocG9pbnQpIHtcbiAgICByZXR1cm4gcG9pbnRbMF0gKiAyICsgcG9pbnRbMV0gKiAoZHggKyAxKSAqIDQ7XG4gIH1cblxuICBmdW5jdGlvbiBzbW9vdGhMaW5lYXIocmluZywgdmFsdWVzLCB2YWx1ZSkge1xuICAgIHJpbmcuZm9yRWFjaChmdW5jdGlvbihwb2ludCkge1xuICAgICAgdmFyIHggPSBwb2ludFswXSxcbiAgICAgICAgICB5ID0gcG9pbnRbMV0sXG4gICAgICAgICAgeHQgPSB4IHwgMCxcbiAgICAgICAgICB5dCA9IHkgfCAwLFxuICAgICAgICAgIHYwLFxuICAgICAgICAgIHYxID0gdmFsdWVzW3l0ICogZHggKyB4dF07XG4gICAgICBpZiAoeCA+IDAgJiYgeCA8IGR4ICYmIHh0ID09PSB4KSB7XG4gICAgICAgIHYwID0gdmFsdWVzW3l0ICogZHggKyB4dCAtIDFdO1xuICAgICAgICBwb2ludFswXSA9IHggKyAodmFsdWUgLSB2MCkgLyAodjEgLSB2MCkgLSAwLjU7XG4gICAgICB9XG4gICAgICBpZiAoeSA+IDAgJiYgeSA8IGR5ICYmIHl0ID09PSB5KSB7XG4gICAgICAgIHYwID0gdmFsdWVzWyh5dCAtIDEpICogZHggKyB4dF07XG4gICAgICAgIHBvaW50WzFdID0geSArICh2YWx1ZSAtIHYwKSAvICh2MSAtIHYwKSAtIDAuNTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGNvbnRvdXJzLmNvbnRvdXIgPSBjb250b3VyO1xuXG4gIGNvbnRvdXJzLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gW2R4LCBkeV07XG4gICAgdmFyIF8wID0gTWF0aC5mbG9vcihfWzBdKSwgXzEgPSBNYXRoLmZsb29yKF9bMV0pO1xuICAgIGlmICghKF8wID49IDAgJiYgXzEgPj0gMCkpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgc2l6ZVwiKTtcbiAgICByZXR1cm4gZHggPSBfMCwgZHkgPSBfMSwgY29udG91cnM7XG4gIH07XG5cbiAgY29udG91cnMudGhyZXNob2xkcyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0aHJlc2hvbGQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IEFycmF5LmlzQXJyYXkoXykgPyBjb25zdGFudChzbGljZS5jYWxsKF8pKSA6IGNvbnN0YW50KF8pLCBjb250b3VycykgOiB0aHJlc2hvbGQ7XG4gIH07XG5cbiAgY29udG91cnMuc21vb3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNtb290aCA9IF8gPyBzbW9vdGhMaW5lYXIgOiBub29wLCBjb250b3VycykgOiBzbW9vdGggPT09IHNtb290aExpbmVhcjtcbiAgfTtcblxuICByZXR1cm4gY29udG91cnM7XG59XG4iLCJpbXBvcnQge21heCwgcmFuZ2UsIHRpY2tTdGVwfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7c2xpY2V9IGZyb20gXCIuL2FycmF5LmpzXCI7XG5pbXBvcnQge2JsdXJYLCBibHVyWX0gZnJvbSBcIi4vYmx1ci5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgY29udG91cnMgZnJvbSBcIi4vY29udG91cnMuanNcIjtcblxuZnVuY3Rpb24gZGVmYXVsdFgoZCkge1xuICByZXR1cm4gZFswXTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFkoZCkge1xuICByZXR1cm4gZFsxXTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFdlaWdodCgpIHtcbiAgcmV0dXJuIDE7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgeCA9IGRlZmF1bHRYLFxuICAgICAgeSA9IGRlZmF1bHRZLFxuICAgICAgd2VpZ2h0ID0gZGVmYXVsdFdlaWdodCxcbiAgICAgIGR4ID0gOTYwLFxuICAgICAgZHkgPSA1MDAsXG4gICAgICByID0gMjAsIC8vIGJsdXIgcmFkaXVzXG4gICAgICBrID0gMiwgLy8gbG9nMihncmlkIGNlbGwgc2l6ZSlcbiAgICAgIG8gPSByICogMywgLy8gZ3JpZCBvZmZzZXQsIHRvIHBhZCBmb3IgYmx1clxuICAgICAgbiA9IChkeCArIG8gKiAyKSA+PiBrLCAvLyBncmlkIHdpZHRoXG4gICAgICBtID0gKGR5ICsgbyAqIDIpID4+IGssIC8vIGdyaWQgaGVpZ2h0XG4gICAgICB0aHJlc2hvbGQgPSBjb25zdGFudCgyMCk7XG5cbiAgZnVuY3Rpb24gZGVuc2l0eShkYXRhKSB7XG4gICAgdmFyIHZhbHVlczAgPSBuZXcgRmxvYXQzMkFycmF5KG4gKiBtKSxcbiAgICAgICAgdmFsdWVzMSA9IG5ldyBGbG9hdDMyQXJyYXkobiAqIG0pO1xuXG4gICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKGQsIGksIGRhdGEpIHtcbiAgICAgIHZhciB4aSA9ICgreChkLCBpLCBkYXRhKSArIG8pID4+IGssXG4gICAgICAgICAgeWkgPSAoK3koZCwgaSwgZGF0YSkgKyBvKSA+PiBrLFxuICAgICAgICAgIHdpID0gK3dlaWdodChkLCBpLCBkYXRhKTtcbiAgICAgIGlmICh4aSA+PSAwICYmIHhpIDwgbiAmJiB5aSA+PSAwICYmIHlpIDwgbSkge1xuICAgICAgICB2YWx1ZXMwW3hpICsgeWkgKiBuXSArPSB3aTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFRPRE8gT3B0aW1pemUuXG4gICAgYmx1clgoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHIgPj4gayk7XG4gICAgYmx1clkoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHIgPj4gayk7XG4gICAgYmx1clgoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHIgPj4gayk7XG4gICAgYmx1clkoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHIgPj4gayk7XG4gICAgYmx1clgoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczB9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMX0sIHIgPj4gayk7XG4gICAgYmx1clkoe3dpZHRoOiBuLCBoZWlnaHQ6IG0sIGRhdGE6IHZhbHVlczF9LCB7d2lkdGg6IG4sIGhlaWdodDogbSwgZGF0YTogdmFsdWVzMH0sIHIgPj4gayk7XG5cbiAgICB2YXIgdHogPSB0aHJlc2hvbGQodmFsdWVzMCk7XG5cbiAgICAvLyBDb252ZXJ0IG51bWJlciBvZiB0aHJlc2hvbGRzIGludG8gdW5pZm9ybSB0aHJlc2hvbGRzLlxuICAgIGlmICghQXJyYXkuaXNBcnJheSh0eikpIHtcbiAgICAgIHZhciBzdG9wID0gbWF4KHZhbHVlczApO1xuICAgICAgdHogPSB0aWNrU3RlcCgwLCBzdG9wLCB0eik7XG4gICAgICB0eiA9IHJhbmdlKDAsIE1hdGguZmxvb3Ioc3RvcCAvIHR6KSAqIHR6LCB0eik7XG4gICAgICB0ei5zaGlmdCgpO1xuICAgIH1cblxuICAgIHJldHVybiBjb250b3VycygpXG4gICAgICAgIC50aHJlc2hvbGRzKHR6KVxuICAgICAgICAuc2l6ZShbbiwgbV0pXG4gICAgICAodmFsdWVzMClcbiAgICAgICAgLm1hcCh0cmFuc2Zvcm0pO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtKGdlb21ldHJ5KSB7XG4gICAgZ2VvbWV0cnkudmFsdWUgKj0gTWF0aC5wb3coMiwgLTIgKiBrKTsgLy8gRGVuc2l0eSBpbiBwb2ludHMgcGVyIHNxdWFyZSBwaXhlbC5cbiAgICBnZW9tZXRyeS5jb29yZGluYXRlcy5mb3JFYWNoKHRyYW5zZm9ybVBvbHlnb24pO1xuICAgIHJldHVybiBnZW9tZXRyeTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zZm9ybVBvbHlnb24oY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlcy5mb3JFYWNoKHRyYW5zZm9ybVJpbmcpO1xuICB9XG5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtUmluZyhjb29yZGluYXRlcykge1xuICAgIGNvb3JkaW5hdGVzLmZvckVhY2godHJhbnNmb3JtUG9pbnQpO1xuICB9XG5cbiAgLy8gVE9ETyBPcHRpbWl6ZS5cbiAgZnVuY3Rpb24gdHJhbnNmb3JtUG9pbnQoY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlc1swXSA9IGNvb3JkaW5hdGVzWzBdICogTWF0aC5wb3coMiwgaykgLSBvO1xuICAgIGNvb3JkaW5hdGVzWzFdID0gY29vcmRpbmF0ZXNbMV0gKiBNYXRoLnBvdygyLCBrKSAtIG87XG4gIH1cblxuICBmdW5jdGlvbiByZXNpemUoKSB7XG4gICAgbyA9IHIgKiAzO1xuICAgIG4gPSAoZHggKyBvICogMikgPj4gaztcbiAgICBtID0gKGR5ICsgbyAqIDIpID4+IGs7XG4gICAgcmV0dXJuIGRlbnNpdHk7XG4gIH1cblxuICBkZW5zaXR5LnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBkZW5zaXR5KSA6IHg7XG4gIH07XG5cbiAgZGVuc2l0eS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgZGVuc2l0eSkgOiB5O1xuICB9O1xuXG4gIGRlbnNpdHkud2VpZ2h0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHdlaWdodCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBkZW5zaXR5KSA6IHdlaWdodDtcbiAgfTtcblxuICBkZW5zaXR5LnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gW2R4LCBkeV07XG4gICAgdmFyIF8wID0gK19bMF0sIF8xID0gK19bMV07XG4gICAgaWYgKCEoXzAgPj0gMCAmJiBfMSA+PSAwKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaXplXCIpO1xuICAgIHJldHVybiBkeCA9IF8wLCBkeSA9IF8xLCByZXNpemUoKTtcbiAgfTtcblxuICBkZW5zaXR5LmNlbGxTaXplID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIDEgPDwgaztcbiAgICBpZiAoISgoXyA9ICtfKSA+PSAxKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBjZWxsIHNpemVcIik7XG4gICAgcmV0dXJuIGsgPSBNYXRoLmZsb29yKE1hdGgubG9nKF8pIC8gTWF0aC5MTjIpLCByZXNpemUoKTtcbiAgfTtcblxuICBkZW5zaXR5LnRocmVzaG9sZHMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhyZXNob2xkID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBBcnJheS5pc0FycmF5KF8pID8gY29uc3RhbnQoc2xpY2UuY2FsbChfKSkgOiBjb25zdGFudChfKSwgZGVuc2l0eSkgOiB0aHJlc2hvbGQ7XG4gIH07XG5cbiAgZGVuc2l0eS5iYW5kd2lkdGggPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gTWF0aC5zcXJ0KHIgKiAociArIDEpKTtcbiAgICBpZiAoISgoXyA9ICtfKSA+PSAwKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBiYW5kd2lkdGhcIik7XG4gICAgcmV0dXJuIHIgPSBNYXRoLnJvdW5kKChNYXRoLnNxcnQoNCAqIF8gKiBfICsgMSkgLSAxKSAvIDIpLCByZXNpemUoKTtcbiAgfTtcblxuICByZXR1cm4gZGVuc2l0eTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBjb250b3Vyc30gZnJvbSBcIi4vY29udG91cnMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjb250b3VyRGVuc2l0eX0gZnJvbSBcIi4vZGVuc2l0eS5qc1wiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7fVxuIiwiaW1wb3J0IERlbGF1bmF0b3IgZnJvbSBcImRlbGF1bmF0b3JcIjtcbmltcG9ydCBQYXRoIGZyb20gXCIuL3BhdGguanNcIjtcbmltcG9ydCBQb2x5Z29uIGZyb20gXCIuL3BvbHlnb24uanNcIjtcbmltcG9ydCBWb3Jvbm9pIGZyb20gXCIuL3Zvcm9ub2kuanNcIjtcblxuY29uc3QgdGF1ID0gMiAqIE1hdGguUEksIHBvdyA9IE1hdGgucG93O1xuXG5mdW5jdGlvbiBwb2ludFgocCkge1xuICByZXR1cm4gcFswXTtcbn1cblxuZnVuY3Rpb24gcG9pbnRZKHApIHtcbiAgcmV0dXJuIHBbMV07XG59XG5cbi8vIEEgdHJpYW5ndWxhdGlvbiBpcyBjb2xsaW5lYXIgaWYgYWxsIGl0cyB0cmlhbmdsZXMgaGF2ZSBhIG5vbi1udWxsIGFyZWFcbmZ1bmN0aW9uIGNvbGxpbmVhcihkKSB7XG4gIGNvbnN0IHt0cmlhbmdsZXMsIGNvb3Jkc30gPSBkO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHRyaWFuZ2xlcy5sZW5ndGg7IGkgKz0gMykge1xuICAgIGNvbnN0IGEgPSAyICogdHJpYW5nbGVzW2ldLFxuICAgICAgICAgIGIgPSAyICogdHJpYW5nbGVzW2kgKyAxXSxcbiAgICAgICAgICBjID0gMiAqIHRyaWFuZ2xlc1tpICsgMl0sXG4gICAgICAgICAgY3Jvc3MgPSAoY29vcmRzW2NdIC0gY29vcmRzW2FdKSAqIChjb29yZHNbYiArIDFdIC0gY29vcmRzW2EgKyAxXSlcbiAgICAgICAgICAgICAgICAtIChjb29yZHNbYl0gLSBjb29yZHNbYV0pICogKGNvb3Jkc1tjICsgMV0gLSBjb29yZHNbYSArIDFdKTtcbiAgICBpZiAoY3Jvc3MgPiAxZS0xMCkgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBqaXR0ZXIoeCwgeSwgcikge1xuICByZXR1cm4gW3ggKyBNYXRoLnNpbih4ICsgeSkgKiByLCB5ICsgTWF0aC5jb3MoeCAtIHkpICogcl07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlbGF1bmF5IHtcbiAgc3RhdGljIGZyb20ocG9pbnRzLCBmeCA9IHBvaW50WCwgZnkgPSBwb2ludFksIHRoYXQpIHtcbiAgICByZXR1cm4gbmV3IERlbGF1bmF5KFwibGVuZ3RoXCIgaW4gcG9pbnRzXG4gICAgICAgID8gZmxhdEFycmF5KHBvaW50cywgZngsIGZ5LCB0aGF0KVxuICAgICAgICA6IEZsb2F0NjRBcnJheS5mcm9tKGZsYXRJdGVyYWJsZShwb2ludHMsIGZ4LCBmeSwgdGhhdCkpKTtcbiAgfVxuICBjb25zdHJ1Y3Rvcihwb2ludHMpIHtcbiAgICB0aGlzLl9kZWxhdW5hdG9yID0gbmV3IERlbGF1bmF0b3IocG9pbnRzKTtcbiAgICB0aGlzLmluZWRnZXMgPSBuZXcgSW50MzJBcnJheShwb2ludHMubGVuZ3RoIC8gMik7XG4gICAgdGhpcy5faHVsbEluZGV4ID0gbmV3IEludDMyQXJyYXkocG9pbnRzLmxlbmd0aCAvIDIpO1xuICAgIHRoaXMucG9pbnRzID0gdGhpcy5fZGVsYXVuYXRvci5jb29yZHM7XG4gICAgdGhpcy5faW5pdCgpO1xuICB9XG4gIHVwZGF0ZSgpIHtcbiAgICB0aGlzLl9kZWxhdW5hdG9yLnVwZGF0ZSgpO1xuICAgIHRoaXMuX2luaXQoKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBfaW5pdCgpIHtcbiAgICBjb25zdCBkID0gdGhpcy5fZGVsYXVuYXRvciwgcG9pbnRzID0gdGhpcy5wb2ludHM7XG5cbiAgICAvLyBjaGVjayBmb3IgY29sbGluZWFyXG4gICAgaWYgKGQuaHVsbCAmJiBkLmh1bGwubGVuZ3RoID4gMiAmJiBjb2xsaW5lYXIoZCkpIHtcbiAgICAgIHRoaXMuY29sbGluZWFyID0gSW50MzJBcnJheS5mcm9tKHtsZW5ndGg6IHBvaW50cy5sZW5ndGgvMn0sIChfLGkpID0+IGkpXG4gICAgICAgIC5zb3J0KChpLCBqKSA9PiBwb2ludHNbMiAqIGldIC0gcG9pbnRzWzIgKiBqXSB8fCBwb2ludHNbMiAqIGkgKyAxXSAtIHBvaW50c1syICogaiArIDFdKTsgLy8gZm9yIGV4YWN0IG5laWdoYm9yc1xuICAgICAgY29uc3QgZSA9IHRoaXMuY29sbGluZWFyWzBdLCBmID0gdGhpcy5jb2xsaW5lYXJbdGhpcy5jb2xsaW5lYXIubGVuZ3RoIC0gMV0sXG4gICAgICAgIGJvdW5kcyA9IFsgcG9pbnRzWzIgKiBlXSwgcG9pbnRzWzIgKiBlICsgMV0sIHBvaW50c1syICogZl0sIHBvaW50c1syICogZiArIDFdIF0sXG4gICAgICAgIHIgPSAxZS04ICogTWF0aC5oeXBvdChib3VuZHNbM10gLSBib3VuZHNbMV0sIGJvdW5kc1syXSAtIGJvdW5kc1swXSk7XG4gICAgICBmb3IgKGxldCBpID0gMCwgbiA9IHBvaW50cy5sZW5ndGggLyAyOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGNvbnN0IHAgPSBqaXR0ZXIocG9pbnRzWzIgKiBpXSwgcG9pbnRzWzIgKiBpICsgMV0sIHIpO1xuICAgICAgICBwb2ludHNbMiAqIGldID0gcFswXTtcbiAgICAgICAgcG9pbnRzWzIgKiBpICsgMV0gPSBwWzFdO1xuICAgICAgfVxuICAgICAgdGhpcy5fZGVsYXVuYXRvciA9IG5ldyBEZWxhdW5hdG9yKHBvaW50cyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSB0aGlzLmNvbGxpbmVhcjtcbiAgICB9XG5cbiAgICBjb25zdCBoYWxmZWRnZXMgPSB0aGlzLmhhbGZlZGdlcyA9IHRoaXMuX2RlbGF1bmF0b3IuaGFsZmVkZ2VzO1xuICAgIGNvbnN0IGh1bGwgPSB0aGlzLmh1bGwgPSB0aGlzLl9kZWxhdW5hdG9yLmh1bGw7XG4gICAgY29uc3QgdHJpYW5nbGVzID0gdGhpcy50cmlhbmdsZXMgPSB0aGlzLl9kZWxhdW5hdG9yLnRyaWFuZ2xlcztcbiAgICBjb25zdCBpbmVkZ2VzID0gdGhpcy5pbmVkZ2VzLmZpbGwoLTEpO1xuICAgIGNvbnN0IGh1bGxJbmRleCA9IHRoaXMuX2h1bGxJbmRleC5maWxsKC0xKTtcblxuICAgIC8vIENvbXB1dGUgYW4gaW5kZXggZnJvbSBlYWNoIHBvaW50IHRvIGFuIChhcmJpdHJhcnkpIGluY29taW5nIGhhbGZlZGdlXG4gICAgLy8gVXNlZCB0byBnaXZlIHRoZSBmaXJzdCBuZWlnaGJvciBvZiBlYWNoIHBvaW50OyBmb3IgdGhpcyByZWFzb24sXG4gICAgLy8gb24gdGhlIGh1bGwgd2UgZ2l2ZSBwcmlvcml0eSB0byBleHRlcmlvciBoYWxmZWRnZXNcbiAgICBmb3IgKGxldCBlID0gMCwgbiA9IGhhbGZlZGdlcy5sZW5ndGg7IGUgPCBuOyArK2UpIHtcbiAgICAgIGNvbnN0IHAgPSB0cmlhbmdsZXNbZSAlIDMgPT09IDIgPyBlIC0gMiA6IGUgKyAxXTtcbiAgICAgIGlmIChoYWxmZWRnZXNbZV0gPT09IC0xIHx8IGluZWRnZXNbcF0gPT09IC0xKSBpbmVkZ2VzW3BdID0gZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDAsIG4gPSBodWxsLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgaHVsbEluZGV4W2h1bGxbaV1dID0gaTtcbiAgICB9XG5cbiAgICAvLyBkZWdlbmVyYXRlIGNhc2U6IDEgb3IgMiAoZGlzdGluY3QpIHBvaW50c1xuICAgIGlmIChodWxsLmxlbmd0aCA8PSAyICYmIGh1bGwubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy50cmlhbmdsZXMgPSBuZXcgSW50MzJBcnJheSgzKS5maWxsKC0xKTtcbiAgICAgIHRoaXMuaGFsZmVkZ2VzID0gbmV3IEludDMyQXJyYXkoMykuZmlsbCgtMSk7XG4gICAgICB0aGlzLnRyaWFuZ2xlc1swXSA9IGh1bGxbMF07XG4gICAgICB0aGlzLnRyaWFuZ2xlc1sxXSA9IGh1bGxbMV07XG4gICAgICB0aGlzLnRyaWFuZ2xlc1syXSA9IGh1bGxbMV07XG4gICAgICBpbmVkZ2VzW2h1bGxbMF1dID0gMTtcbiAgICAgIGlmIChodWxsLmxlbmd0aCA9PT0gMikgaW5lZGdlc1todWxsWzFdXSA9IDA7XG4gICAgfVxuICB9XG4gIHZvcm9ub2koYm91bmRzKSB7XG4gICAgcmV0dXJuIG5ldyBWb3Jvbm9pKHRoaXMsIGJvdW5kcyk7XG4gIH1cbiAgKm5laWdoYm9ycyhpKSB7XG4gICAgY29uc3Qge2luZWRnZXMsIGh1bGwsIF9odWxsSW5kZXgsIGhhbGZlZGdlcywgdHJpYW5nbGVzLCBjb2xsaW5lYXJ9ID0gdGhpcztcblxuICAgIC8vIGRlZ2VuZXJhdGUgY2FzZSB3aXRoIHNldmVyYWwgY29sbGluZWFyIHBvaW50c1xuICAgIGlmIChjb2xsaW5lYXIpIHtcbiAgICAgIGNvbnN0IGwgPSBjb2xsaW5lYXIuaW5kZXhPZihpKTtcbiAgICAgIGlmIChsID4gMCkgeWllbGQgY29sbGluZWFyW2wgLSAxXTtcbiAgICAgIGlmIChsIDwgY29sbGluZWFyLmxlbmd0aCAtIDEpIHlpZWxkIGNvbGxpbmVhcltsICsgMV07XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZTAgPSBpbmVkZ2VzW2ldO1xuICAgIGlmIChlMCA9PT0gLTEpIHJldHVybjsgLy8gY29pbmNpZGVudCBwb2ludFxuICAgIGxldCBlID0gZTAsIHAwID0gLTE7XG4gICAgZG8ge1xuICAgICAgeWllbGQgcDAgPSB0cmlhbmdsZXNbZV07XG4gICAgICBlID0gZSAlIDMgPT09IDIgPyBlIC0gMiA6IGUgKyAxO1xuICAgICAgaWYgKHRyaWFuZ2xlc1tlXSAhPT0gaSkgcmV0dXJuOyAvLyBiYWQgdHJpYW5ndWxhdGlvblxuICAgICAgZSA9IGhhbGZlZGdlc1tlXTtcbiAgICAgIGlmIChlID09PSAtMSkge1xuICAgICAgICBjb25zdCBwID0gaHVsbFsoX2h1bGxJbmRleFtpXSArIDEpICUgaHVsbC5sZW5ndGhdO1xuICAgICAgICBpZiAocCAhPT0gcDApIHlpZWxkIHA7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9IHdoaWxlIChlICE9PSBlMCk7XG4gIH1cbiAgZmluZCh4LCB5LCBpID0gMCkge1xuICAgIGlmICgoeCA9ICt4LCB4ICE9PSB4KSB8fCAoeSA9ICt5LCB5ICE9PSB5KSkgcmV0dXJuIC0xO1xuICAgIGNvbnN0IGkwID0gaTtcbiAgICBsZXQgYztcbiAgICB3aGlsZSAoKGMgPSB0aGlzLl9zdGVwKGksIHgsIHkpKSA+PSAwICYmIGMgIT09IGkgJiYgYyAhPT0gaTApIGkgPSBjO1xuICAgIHJldHVybiBjO1xuICB9XG4gIF9zdGVwKGksIHgsIHkpIHtcbiAgICBjb25zdCB7aW5lZGdlcywgaHVsbCwgX2h1bGxJbmRleCwgaGFsZmVkZ2VzLCB0cmlhbmdsZXMsIHBvaW50c30gPSB0aGlzO1xuICAgIGlmIChpbmVkZ2VzW2ldID09PSAtMSB8fCAhcG9pbnRzLmxlbmd0aCkgcmV0dXJuIChpICsgMSkgJSAocG9pbnRzLmxlbmd0aCA+PiAxKTtcbiAgICBsZXQgYyA9IGk7XG4gICAgbGV0IGRjID0gcG93KHggLSBwb2ludHNbaSAqIDJdLCAyKSArIHBvdyh5IC0gcG9pbnRzW2kgKiAyICsgMV0sIDIpO1xuICAgIGNvbnN0IGUwID0gaW5lZGdlc1tpXTtcbiAgICBsZXQgZSA9IGUwO1xuICAgIGRvIHtcbiAgICAgIGxldCB0ID0gdHJpYW5nbGVzW2VdO1xuICAgICAgY29uc3QgZHQgPSBwb3coeCAtIHBvaW50c1t0ICogMl0sIDIpICsgcG93KHkgLSBwb2ludHNbdCAqIDIgKyAxXSwgMik7XG4gICAgICBpZiAoZHQgPCBkYykgZGMgPSBkdCwgYyA9IHQ7XG4gICAgICBlID0gZSAlIDMgPT09IDIgPyBlIC0gMiA6IGUgKyAxO1xuICAgICAgaWYgKHRyaWFuZ2xlc1tlXSAhPT0gaSkgYnJlYWs7IC8vIGJhZCB0cmlhbmd1bGF0aW9uXG4gICAgICBlID0gaGFsZmVkZ2VzW2VdO1xuICAgICAgaWYgKGUgPT09IC0xKSB7XG4gICAgICAgIGUgPSBodWxsWyhfaHVsbEluZGV4W2ldICsgMSkgJSBodWxsLmxlbmd0aF07XG4gICAgICAgIGlmIChlICE9PSB0KSB7XG4gICAgICAgICAgaWYgKHBvdyh4IC0gcG9pbnRzW2UgKiAyXSwgMikgKyBwb3coeSAtIHBvaW50c1tlICogMiArIDFdLCAyKSA8IGRjKSByZXR1cm4gZTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9IHdoaWxlIChlICE9PSBlMCk7XG4gICAgcmV0dXJuIGM7XG4gIH1cbiAgcmVuZGVyKGNvbnRleHQpIHtcbiAgICBjb25zdCBidWZmZXIgPSBjb250ZXh0ID09IG51bGwgPyBjb250ZXh0ID0gbmV3IFBhdGggOiB1bmRlZmluZWQ7XG4gICAgY29uc3Qge3BvaW50cywgaGFsZmVkZ2VzLCB0cmlhbmdsZXN9ID0gdGhpcztcbiAgICBmb3IgKGxldCBpID0gMCwgbiA9IGhhbGZlZGdlcy5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIGNvbnN0IGogPSBoYWxmZWRnZXNbaV07XG4gICAgICBpZiAoaiA8IGkpIGNvbnRpbnVlO1xuICAgICAgY29uc3QgdGkgPSB0cmlhbmdsZXNbaV0gKiAyO1xuICAgICAgY29uc3QgdGogPSB0cmlhbmdsZXNbal0gKiAyO1xuICAgICAgY29udGV4dC5tb3ZlVG8ocG9pbnRzW3RpXSwgcG9pbnRzW3RpICsgMV0pO1xuICAgICAgY29udGV4dC5saW5lVG8ocG9pbnRzW3RqXSwgcG9pbnRzW3RqICsgMV0pO1xuICAgIH1cbiAgICB0aGlzLnJlbmRlckh1bGwoY29udGV4dCk7XG4gICAgcmV0dXJuIGJ1ZmZlciAmJiBidWZmZXIudmFsdWUoKTtcbiAgfVxuICByZW5kZXJQb2ludHMoY29udGV4dCwgciA9IDIpIHtcbiAgICBjb25zdCBidWZmZXIgPSBjb250ZXh0ID09IG51bGwgPyBjb250ZXh0ID0gbmV3IFBhdGggOiB1bmRlZmluZWQ7XG4gICAgY29uc3Qge3BvaW50c30gPSB0aGlzO1xuICAgIGZvciAobGV0IGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aDsgaSA8IG47IGkgKz0gMikge1xuICAgICAgY29uc3QgeCA9IHBvaW50c1tpXSwgeSA9IHBvaW50c1tpICsgMV07XG4gICAgICBjb250ZXh0Lm1vdmVUbyh4ICsgciwgeSk7XG4gICAgICBjb250ZXh0LmFyYyh4LCB5LCByLCAwLCB0YXUpO1xuICAgIH1cbiAgICByZXR1cm4gYnVmZmVyICYmIGJ1ZmZlci52YWx1ZSgpO1xuICB9XG4gIHJlbmRlckh1bGwoY29udGV4dCkge1xuICAgIGNvbnN0IGJ1ZmZlciA9IGNvbnRleHQgPT0gbnVsbCA/IGNvbnRleHQgPSBuZXcgUGF0aCA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCB7aHVsbCwgcG9pbnRzfSA9IHRoaXM7XG4gICAgY29uc3QgaCA9IGh1bGxbMF0gKiAyLCBuID0gaHVsbC5sZW5ndGg7XG4gICAgY29udGV4dC5tb3ZlVG8ocG9pbnRzW2hdLCBwb2ludHNbaCArIDFdKTtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IG47ICsraSkge1xuICAgICAgY29uc3QgaCA9IDIgKiBodWxsW2ldO1xuICAgICAgY29udGV4dC5saW5lVG8ocG9pbnRzW2hdLCBwb2ludHNbaCArIDFdKTtcbiAgICB9XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICByZXR1cm4gYnVmZmVyICYmIGJ1ZmZlci52YWx1ZSgpO1xuICB9XG4gIGh1bGxQb2x5Z29uKCkge1xuICAgIGNvbnN0IHBvbHlnb24gPSBuZXcgUG9seWdvbjtcbiAgICB0aGlzLnJlbmRlckh1bGwocG9seWdvbik7XG4gICAgcmV0dXJuIHBvbHlnb24udmFsdWUoKTtcbiAgfVxuICByZW5kZXJUcmlhbmdsZShpLCBjb250ZXh0KSB7XG4gICAgY29uc3QgYnVmZmVyID0gY29udGV4dCA9PSBudWxsID8gY29udGV4dCA9IG5ldyBQYXRoIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHtwb2ludHMsIHRyaWFuZ2xlc30gPSB0aGlzO1xuICAgIGNvbnN0IHQwID0gdHJpYW5nbGVzW2kgKj0gM10gKiAyO1xuICAgIGNvbnN0IHQxID0gdHJpYW5nbGVzW2kgKyAxXSAqIDI7XG4gICAgY29uc3QgdDIgPSB0cmlhbmdsZXNbaSArIDJdICogMjtcbiAgICBjb250ZXh0Lm1vdmVUbyhwb2ludHNbdDBdLCBwb2ludHNbdDAgKyAxXSk7XG4gICAgY29udGV4dC5saW5lVG8ocG9pbnRzW3QxXSwgcG9pbnRzW3QxICsgMV0pO1xuICAgIGNvbnRleHQubGluZVRvKHBvaW50c1t0Ml0sIHBvaW50c1t0MiArIDFdKTtcbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHJldHVybiBidWZmZXIgJiYgYnVmZmVyLnZhbHVlKCk7XG4gIH1cbiAgKnRyaWFuZ2xlUG9seWdvbnMoKSB7XG4gICAgY29uc3Qge3RyaWFuZ2xlc30gPSB0aGlzO1xuICAgIGZvciAobGV0IGkgPSAwLCBuID0gdHJpYW5nbGVzLmxlbmd0aCAvIDM7IGkgPCBuOyArK2kpIHtcbiAgICAgIHlpZWxkIHRoaXMudHJpYW5nbGVQb2x5Z29uKGkpO1xuICAgIH1cbiAgfVxuICB0cmlhbmdsZVBvbHlnb24oaSkge1xuICAgIGNvbnN0IHBvbHlnb24gPSBuZXcgUG9seWdvbjtcbiAgICB0aGlzLnJlbmRlclRyaWFuZ2xlKGksIHBvbHlnb24pO1xuICAgIHJldHVybiBwb2x5Z29uLnZhbHVlKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZmxhdEFycmF5KHBvaW50cywgZngsIGZ5LCB0aGF0KSB7XG4gIGNvbnN0IG4gPSBwb2ludHMubGVuZ3RoO1xuICBjb25zdCBhcnJheSA9IG5ldyBGbG9hdDY0QXJyYXkobiAqIDIpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIGNvbnN0IHAgPSBwb2ludHNbaV07XG4gICAgYXJyYXlbaSAqIDJdID0gZnguY2FsbCh0aGF0LCBwLCBpLCBwb2ludHMpO1xuICAgIGFycmF5W2kgKiAyICsgMV0gPSBmeS5jYWxsKHRoYXQsIHAsIGksIHBvaW50cyk7XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5mdW5jdGlvbiogZmxhdEl0ZXJhYmxlKHBvaW50cywgZngsIGZ5LCB0aGF0KSB7XG4gIGxldCBpID0gMDtcbiAgZm9yIChjb25zdCBwIG9mIHBvaW50cykge1xuICAgIHlpZWxkIGZ4LmNhbGwodGhhdCwgcCwgaSwgcG9pbnRzKTtcbiAgICB5aWVsZCBmeS5jYWxsKHRoYXQsIHAsIGksIHBvaW50cyk7XG4gICAgKytpO1xuICB9XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgRGVsYXVuYXl9IGZyb20gXCIuL2RlbGF1bmF5LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgVm9yb25vaX0gZnJvbSBcIi4vdm9yb25vaS5qc1wiO1xuIiwiY29uc3QgZXBzaWxvbiA9IDFlLTY7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhdGgge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3kwID0gLy8gc3RhcnQgb2YgY3VycmVudCBzdWJwYXRoXG4gICAgdGhpcy5feDEgPSB0aGlzLl95MSA9IG51bGw7IC8vIGVuZCBvZiBjdXJyZW50IHN1YnBhdGhcbiAgICB0aGlzLl8gPSBcIlwiO1xuICB9XG4gIG1vdmVUbyh4LCB5KSB7XG4gICAgdGhpcy5fICs9IGBNJHt0aGlzLl94MCA9IHRoaXMuX3gxID0gK3h9LCR7dGhpcy5feTAgPSB0aGlzLl95MSA9ICt5fWA7XG4gIH1cbiAgY2xvc2VQYXRoKCkge1xuICAgIGlmICh0aGlzLl94MSAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5feDEgPSB0aGlzLl94MCwgdGhpcy5feTEgPSB0aGlzLl95MDtcbiAgICAgIHRoaXMuXyArPSBcIlpcIjtcbiAgICB9XG4gIH1cbiAgbGluZVRvKHgsIHkpIHtcbiAgICB0aGlzLl8gKz0gYEwke3RoaXMuX3gxID0gK3h9LCR7dGhpcy5feTEgPSAreX1gO1xuICB9XG4gIGFyYyh4LCB5LCByKSB7XG4gICAgeCA9ICt4LCB5ID0gK3ksIHIgPSArcjtcbiAgICBjb25zdCB4MCA9IHggKyByO1xuICAgIGNvbnN0IHkwID0geTtcbiAgICBpZiAociA8IDApIHRocm93IG5ldyBFcnJvcihcIm5lZ2F0aXZlIHJhZGl1c1wiKTtcbiAgICBpZiAodGhpcy5feDEgPT09IG51bGwpIHRoaXMuXyArPSBgTSR7eDB9LCR7eTB9YDtcbiAgICBlbHNlIGlmIChNYXRoLmFicyh0aGlzLl94MSAtIHgwKSA+IGVwc2lsb24gfHwgTWF0aC5hYnModGhpcy5feTEgLSB5MCkgPiBlcHNpbG9uKSB0aGlzLl8gKz0gXCJMXCIgKyB4MCArIFwiLFwiICsgeTA7XG4gICAgaWYgKCFyKSByZXR1cm47XG4gICAgdGhpcy5fICs9IGBBJHtyfSwke3J9LDAsMSwxLCR7eCAtIHJ9LCR7eX1BJHtyfSwke3J9LDAsMSwxLCR7dGhpcy5feDEgPSB4MH0sJHt0aGlzLl95MSA9IHkwfWA7XG4gIH1cbiAgcmVjdCh4LCB5LCB3LCBoKSB7XG4gICAgdGhpcy5fICs9IGBNJHt0aGlzLl94MCA9IHRoaXMuX3gxID0gK3h9LCR7dGhpcy5feTAgPSB0aGlzLl95MSA9ICt5fWgkeyt3fXYkeytofWgkey13fVpgO1xuICB9XG4gIHZhbHVlKCkge1xuICAgIHJldHVybiB0aGlzLl8gfHwgbnVsbDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9seWdvbiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuXyA9IFtdO1xuICB9XG4gIG1vdmVUbyh4LCB5KSB7XG4gICAgdGhpcy5fLnB1c2goW3gsIHldKTtcbiAgfVxuICBjbG9zZVBhdGgoKSB7XG4gICAgdGhpcy5fLnB1c2godGhpcy5fWzBdLnNsaWNlKCkpO1xuICB9XG4gIGxpbmVUbyh4LCB5KSB7XG4gICAgdGhpcy5fLnB1c2goW3gsIHldKTtcbiAgfVxuICB2YWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fLmxlbmd0aCA/IHRoaXMuXyA6IG51bGw7XG4gIH1cbn1cbiIsImltcG9ydCBQYXRoIGZyb20gXCIuL3BhdGguanNcIjtcbmltcG9ydCBQb2x5Z29uIGZyb20gXCIuL3BvbHlnb24uanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVm9yb25vaSB7XG4gIGNvbnN0cnVjdG9yKGRlbGF1bmF5LCBbeG1pbiwgeW1pbiwgeG1heCwgeW1heF0gPSBbMCwgMCwgOTYwLCA1MDBdKSB7XG4gICAgaWYgKCEoKHhtYXggPSAreG1heCkgPj0gKHhtaW4gPSAreG1pbikpIHx8ICEoKHltYXggPSAreW1heCkgPj0gKHltaW4gPSAreW1pbikpKSB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGJvdW5kc1wiKTtcbiAgICB0aGlzLmRlbGF1bmF5ID0gZGVsYXVuYXk7XG4gICAgdGhpcy5fY2lyY3VtY2VudGVycyA9IG5ldyBGbG9hdDY0QXJyYXkoZGVsYXVuYXkucG9pbnRzLmxlbmd0aCAqIDIpO1xuICAgIHRoaXMudmVjdG9ycyA9IG5ldyBGbG9hdDY0QXJyYXkoZGVsYXVuYXkucG9pbnRzLmxlbmd0aCAqIDIpO1xuICAgIHRoaXMueG1heCA9IHhtYXgsIHRoaXMueG1pbiA9IHhtaW47XG4gICAgdGhpcy55bWF4ID0geW1heCwgdGhpcy55bWluID0geW1pbjtcbiAgICB0aGlzLl9pbml0KCk7XG4gIH1cbiAgdXBkYXRlKCkge1xuICAgIHRoaXMuZGVsYXVuYXkudXBkYXRlKCk7XG4gICAgdGhpcy5faW5pdCgpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIF9pbml0KCkge1xuICAgIGNvbnN0IHtkZWxhdW5heToge3BvaW50cywgaHVsbCwgdHJpYW5nbGVzfSwgdmVjdG9yc30gPSB0aGlzO1xuXG4gICAgLy8gQ29tcHV0ZSBjaXJjdW1jZW50ZXJzLlxuICAgIGNvbnN0IGNpcmN1bWNlbnRlcnMgPSB0aGlzLmNpcmN1bWNlbnRlcnMgPSB0aGlzLl9jaXJjdW1jZW50ZXJzLnN1YmFycmF5KDAsIHRyaWFuZ2xlcy5sZW5ndGggLyAzICogMik7XG4gICAgZm9yIChsZXQgaSA9IDAsIGogPSAwLCBuID0gdHJpYW5nbGVzLmxlbmd0aCwgeCwgeTsgaSA8IG47IGkgKz0gMywgaiArPSAyKSB7XG4gICAgICBjb25zdCB0MSA9IHRyaWFuZ2xlc1tpXSAqIDI7XG4gICAgICBjb25zdCB0MiA9IHRyaWFuZ2xlc1tpICsgMV0gKiAyO1xuICAgICAgY29uc3QgdDMgPSB0cmlhbmdsZXNbaSArIDJdICogMjtcbiAgICAgIGNvbnN0IHgxID0gcG9pbnRzW3QxXTtcbiAgICAgIGNvbnN0IHkxID0gcG9pbnRzW3QxICsgMV07XG4gICAgICBjb25zdCB4MiA9IHBvaW50c1t0Ml07XG4gICAgICBjb25zdCB5MiA9IHBvaW50c1t0MiArIDFdO1xuICAgICAgY29uc3QgeDMgPSBwb2ludHNbdDNdO1xuICAgICAgY29uc3QgeTMgPSBwb2ludHNbdDMgKyAxXTtcblxuICAgICAgY29uc3QgZHggPSB4MiAtIHgxO1xuICAgICAgY29uc3QgZHkgPSB5MiAtIHkxO1xuICAgICAgY29uc3QgZXggPSB4MyAtIHgxO1xuICAgICAgY29uc3QgZXkgPSB5MyAtIHkxO1xuICAgICAgY29uc3QgYmwgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICAgIGNvbnN0IGNsID0gZXggKiBleCArIGV5ICogZXk7XG4gICAgICBjb25zdCBhYiA9IChkeCAqIGV5IC0gZHkgKiBleCkgKiAyO1xuXG4gICAgICBpZiAoIWFiKSB7XG4gICAgICAgIC8vIGRlZ2VuZXJhdGUgY2FzZSAoY29sbGluZWFyIGRpYWdyYW0pXG4gICAgICAgIHggPSAoeDEgKyB4MykgLyAyIC0gMWU4ICogZXk7XG4gICAgICAgIHkgPSAoeTEgKyB5MykgLyAyICsgMWU4ICogZXg7XG4gICAgICB9XG4gICAgICBlbHNlIGlmIChNYXRoLmFicyhhYikgPCAxZS04KSB7XG4gICAgICAgIC8vIGFsbW9zdCBlcXVhbCBwb2ludHMgKGRlZ2VuZXJhdGUgdHJpYW5nbGUpXG4gICAgICAgIHggPSAoeDEgKyB4MykgLyAyO1xuICAgICAgICB5ID0gKHkxICsgeTMpIC8gMjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGQgPSAxIC8gYWI7XG4gICAgICAgIHggPSB4MSArIChleSAqIGJsIC0gZHkgKiBjbCkgKiBkO1xuICAgICAgICB5ID0geTEgKyAoZHggKiBjbCAtIGV4ICogYmwpICogZDtcbiAgICAgIH1cbiAgICAgIGNpcmN1bWNlbnRlcnNbal0gPSB4O1xuICAgICAgY2lyY3VtY2VudGVyc1tqICsgMV0gPSB5O1xuICAgIH1cblxuICAgIC8vIENvbXB1dGUgZXh0ZXJpb3IgY2VsbCByYXlzLlxuICAgIGxldCBoID0gaHVsbFtodWxsLmxlbmd0aCAtIDFdO1xuICAgIGxldCBwMCwgcDEgPSBoICogNDtcbiAgICBsZXQgeDAsIHgxID0gcG9pbnRzWzIgKiBoXTtcbiAgICBsZXQgeTAsIHkxID0gcG9pbnRzWzIgKiBoICsgMV07XG4gICAgdmVjdG9ycy5maWxsKDApO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaHVsbC5sZW5ndGg7ICsraSkge1xuICAgICAgaCA9IGh1bGxbaV07XG4gICAgICBwMCA9IHAxLCB4MCA9IHgxLCB5MCA9IHkxO1xuICAgICAgcDEgPSBoICogNCwgeDEgPSBwb2ludHNbMiAqIGhdLCB5MSA9IHBvaW50c1syICogaCArIDFdO1xuICAgICAgdmVjdG9yc1twMCArIDJdID0gdmVjdG9yc1twMV0gPSB5MCAtIHkxO1xuICAgICAgdmVjdG9yc1twMCArIDNdID0gdmVjdG9yc1twMSArIDFdID0geDEgLSB4MDtcbiAgICB9XG4gIH1cbiAgcmVuZGVyKGNvbnRleHQpIHtcbiAgICBjb25zdCBidWZmZXIgPSBjb250ZXh0ID09IG51bGwgPyBjb250ZXh0ID0gbmV3IFBhdGggOiB1bmRlZmluZWQ7XG4gICAgY29uc3Qge2RlbGF1bmF5OiB7aGFsZmVkZ2VzLCBpbmVkZ2VzLCBodWxsfSwgY2lyY3VtY2VudGVycywgdmVjdG9yc30gPSB0aGlzO1xuICAgIGlmIChodWxsLmxlbmd0aCA8PSAxKSByZXR1cm4gbnVsbDtcbiAgICBmb3IgKGxldCBpID0gMCwgbiA9IGhhbGZlZGdlcy5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgIGNvbnN0IGogPSBoYWxmZWRnZXNbaV07XG4gICAgICBpZiAoaiA8IGkpIGNvbnRpbnVlO1xuICAgICAgY29uc3QgdGkgPSBNYXRoLmZsb29yKGkgLyAzKSAqIDI7XG4gICAgICBjb25zdCB0aiA9IE1hdGguZmxvb3IoaiAvIDMpICogMjtcbiAgICAgIGNvbnN0IHhpID0gY2lyY3VtY2VudGVyc1t0aV07XG4gICAgICBjb25zdCB5aSA9IGNpcmN1bWNlbnRlcnNbdGkgKyAxXTtcbiAgICAgIGNvbnN0IHhqID0gY2lyY3VtY2VudGVyc1t0al07XG4gICAgICBjb25zdCB5aiA9IGNpcmN1bWNlbnRlcnNbdGogKyAxXTtcbiAgICAgIHRoaXMuX3JlbmRlclNlZ21lbnQoeGksIHlpLCB4aiwgeWosIGNvbnRleHQpO1xuICAgIH1cbiAgICBsZXQgaDAsIGgxID0gaHVsbFtodWxsLmxlbmd0aCAtIDFdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaHVsbC5sZW5ndGg7ICsraSkge1xuICAgICAgaDAgPSBoMSwgaDEgPSBodWxsW2ldO1xuICAgICAgY29uc3QgdCA9IE1hdGguZmxvb3IoaW5lZGdlc1toMV0gLyAzKSAqIDI7XG4gICAgICBjb25zdCB4ID0gY2lyY3VtY2VudGVyc1t0XTtcbiAgICAgIGNvbnN0IHkgPSBjaXJjdW1jZW50ZXJzW3QgKyAxXTtcbiAgICAgIGNvbnN0IHYgPSBoMCAqIDQ7XG4gICAgICBjb25zdCBwID0gdGhpcy5fcHJvamVjdCh4LCB5LCB2ZWN0b3JzW3YgKyAyXSwgdmVjdG9yc1t2ICsgM10pO1xuICAgICAgaWYgKHApIHRoaXMuX3JlbmRlclNlZ21lbnQoeCwgeSwgcFswXSwgcFsxXSwgY29udGV4dCk7XG4gICAgfVxuICAgIHJldHVybiBidWZmZXIgJiYgYnVmZmVyLnZhbHVlKCk7XG4gIH1cbiAgcmVuZGVyQm91bmRzKGNvbnRleHQpIHtcbiAgICBjb25zdCBidWZmZXIgPSBjb250ZXh0ID09IG51bGwgPyBjb250ZXh0ID0gbmV3IFBhdGggOiB1bmRlZmluZWQ7XG4gICAgY29udGV4dC5yZWN0KHRoaXMueG1pbiwgdGhpcy55bWluLCB0aGlzLnhtYXggLSB0aGlzLnhtaW4sIHRoaXMueW1heCAtIHRoaXMueW1pbik7XG4gICAgcmV0dXJuIGJ1ZmZlciAmJiBidWZmZXIudmFsdWUoKTtcbiAgfVxuICByZW5kZXJDZWxsKGksIGNvbnRleHQpIHtcbiAgICBjb25zdCBidWZmZXIgPSBjb250ZXh0ID09IG51bGwgPyBjb250ZXh0ID0gbmV3IFBhdGggOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgcG9pbnRzID0gdGhpcy5fY2xpcChpKTtcbiAgICBpZiAocG9pbnRzID09PSBudWxsIHx8ICFwb2ludHMubGVuZ3RoKSByZXR1cm47XG4gICAgY29udGV4dC5tb3ZlVG8ocG9pbnRzWzBdLCBwb2ludHNbMV0pO1xuICAgIGxldCBuID0gcG9pbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAocG9pbnRzWzBdID09PSBwb2ludHNbbi0yXSAmJiBwb2ludHNbMV0gPT09IHBvaW50c1tuLTFdICYmIG4gPiAxKSBuIC09IDI7XG4gICAgZm9yIChsZXQgaSA9IDI7IGkgPCBuOyBpICs9IDIpIHtcbiAgICAgIGlmIChwb2ludHNbaV0gIT09IHBvaW50c1tpLTJdIHx8IHBvaW50c1tpKzFdICE9PSBwb2ludHNbaS0xXSlcbiAgICAgICAgY29udGV4dC5saW5lVG8ocG9pbnRzW2ldLCBwb2ludHNbaSArIDFdKTtcbiAgICB9XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICByZXR1cm4gYnVmZmVyICYmIGJ1ZmZlci52YWx1ZSgpO1xuICB9XG4gICpjZWxsUG9seWdvbnMoKSB7XG4gICAgY29uc3Qge2RlbGF1bmF5OiB7cG9pbnRzfX0gPSB0aGlzO1xuICAgIGZvciAobGV0IGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aCAvIDI7IGkgPCBuOyArK2kpIHtcbiAgICAgIGNvbnN0IGNlbGwgPSB0aGlzLmNlbGxQb2x5Z29uKGkpO1xuICAgICAgaWYgKGNlbGwpIGNlbGwuaW5kZXggPSBpLCB5aWVsZCBjZWxsO1xuICAgIH1cbiAgfVxuICBjZWxsUG9seWdvbihpKSB7XG4gICAgY29uc3QgcG9seWdvbiA9IG5ldyBQb2x5Z29uO1xuICAgIHRoaXMucmVuZGVyQ2VsbChpLCBwb2x5Z29uKTtcbiAgICByZXR1cm4gcG9seWdvbi52YWx1ZSgpO1xuICB9XG4gIF9yZW5kZXJTZWdtZW50KHgwLCB5MCwgeDEsIHkxLCBjb250ZXh0KSB7XG4gICAgbGV0IFM7XG4gICAgY29uc3QgYzAgPSB0aGlzLl9yZWdpb25jb2RlKHgwLCB5MCk7XG4gICAgY29uc3QgYzEgPSB0aGlzLl9yZWdpb25jb2RlKHgxLCB5MSk7XG4gICAgaWYgKGMwID09PSAwICYmIGMxID09PSAwKSB7XG4gICAgICBjb250ZXh0Lm1vdmVUbyh4MCwgeTApO1xuICAgICAgY29udGV4dC5saW5lVG8oeDEsIHkxKTtcbiAgICB9IGVsc2UgaWYgKFMgPSB0aGlzLl9jbGlwU2VnbWVudCh4MCwgeTAsIHgxLCB5MSwgYzAsIGMxKSkge1xuICAgICAgY29udGV4dC5tb3ZlVG8oU1swXSwgU1sxXSk7XG4gICAgICBjb250ZXh0LmxpbmVUbyhTWzJdLCBTWzNdKTtcbiAgICB9XG4gIH1cbiAgY29udGFpbnMoaSwgeCwgeSkge1xuICAgIGlmICgoeCA9ICt4LCB4ICE9PSB4KSB8fCAoeSA9ICt5LCB5ICE9PSB5KSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0aGlzLmRlbGF1bmF5Ll9zdGVwKGksIHgsIHkpID09PSBpO1xuICB9XG4gICpuZWlnaGJvcnMoaSkge1xuICAgIGNvbnN0IGNpID0gdGhpcy5fY2xpcChpKTtcbiAgICBpZiAoY2kpIGZvciAoY29uc3QgaiBvZiB0aGlzLmRlbGF1bmF5Lm5laWdoYm9ycyhpKSkge1xuICAgICAgY29uc3QgY2ogPSB0aGlzLl9jbGlwKGopO1xuICAgICAgLy8gZmluZCB0aGUgY29tbW9uIGVkZ2VcbiAgICAgIGlmIChjaikgbG9vcDogZm9yIChsZXQgYWkgPSAwLCBsaSA9IGNpLmxlbmd0aDsgYWkgPCBsaTsgYWkgKz0gMikge1xuICAgICAgICBmb3IgKGxldCBhaiA9IDAsIGxqID0gY2oubGVuZ3RoOyBhaiA8IGxqOyBhaiArPSAyKSB7XG4gICAgICAgICAgaWYgKGNpW2FpXSA9PSBjalthal1cbiAgICAgICAgICAmJiBjaVthaSArIDFdID09IGNqW2FqICsgMV1cbiAgICAgICAgICAmJiBjaVsoYWkgKyAyKSAlIGxpXSA9PSBjalsoYWogKyBsaiAtIDIpICUgbGpdXG4gICAgICAgICAgJiYgY2lbKGFpICsgMykgJSBsaV0gPT0gY2pbKGFqICsgbGogLSAxKSAlIGxqXVxuICAgICAgICAgICkge1xuICAgICAgICAgICAgeWllbGQgajtcbiAgICAgICAgICAgIGJyZWFrIGxvb3A7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIF9jZWxsKGkpIHtcbiAgICBjb25zdCB7Y2lyY3VtY2VudGVycywgZGVsYXVuYXk6IHtpbmVkZ2VzLCBoYWxmZWRnZXMsIHRyaWFuZ2xlc319ID0gdGhpcztcbiAgICBjb25zdCBlMCA9IGluZWRnZXNbaV07XG4gICAgaWYgKGUwID09PSAtMSkgcmV0dXJuIG51bGw7IC8vIGNvaW5jaWRlbnQgcG9pbnRcbiAgICBjb25zdCBwb2ludHMgPSBbXTtcbiAgICBsZXQgZSA9IGUwO1xuICAgIGRvIHtcbiAgICAgIGNvbnN0IHQgPSBNYXRoLmZsb29yKGUgLyAzKTtcbiAgICAgIHBvaW50cy5wdXNoKGNpcmN1bWNlbnRlcnNbdCAqIDJdLCBjaXJjdW1jZW50ZXJzW3QgKiAyICsgMV0pO1xuICAgICAgZSA9IGUgJSAzID09PSAyID8gZSAtIDIgOiBlICsgMTtcbiAgICAgIGlmICh0cmlhbmdsZXNbZV0gIT09IGkpIGJyZWFrOyAvLyBiYWQgdHJpYW5ndWxhdGlvblxuICAgICAgZSA9IGhhbGZlZGdlc1tlXTtcbiAgICB9IHdoaWxlIChlICE9PSBlMCAmJiBlICE9PSAtMSk7XG4gICAgcmV0dXJuIHBvaW50cztcbiAgfVxuICBfY2xpcChpKSB7XG4gICAgLy8gZGVnZW5lcmF0ZSBjYXNlICgxIHZhbGlkIHBvaW50OiByZXR1cm4gdGhlIGJveClcbiAgICBpZiAoaSA9PT0gMCAmJiB0aGlzLmRlbGF1bmF5Lmh1bGwubGVuZ3RoID09PSAxKSB7XG4gICAgICByZXR1cm4gW3RoaXMueG1heCwgdGhpcy55bWluLCB0aGlzLnhtYXgsIHRoaXMueW1heCwgdGhpcy54bWluLCB0aGlzLnltYXgsIHRoaXMueG1pbiwgdGhpcy55bWluXTtcbiAgICB9XG4gICAgY29uc3QgcG9pbnRzID0gdGhpcy5fY2VsbChpKTtcbiAgICBpZiAocG9pbnRzID09PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICBjb25zdCB7dmVjdG9yczogVn0gPSB0aGlzO1xuICAgIGNvbnN0IHYgPSBpICogNDtcbiAgICByZXR1cm4gVlt2XSB8fCBWW3YgKyAxXVxuICAgICAgICA/IHRoaXMuX2NsaXBJbmZpbml0ZShpLCBwb2ludHMsIFZbdl0sIFZbdiArIDFdLCBWW3YgKyAyXSwgVlt2ICsgM10pXG4gICAgICAgIDogdGhpcy5fY2xpcEZpbml0ZShpLCBwb2ludHMpO1xuICB9XG4gIF9jbGlwRmluaXRlKGksIHBvaW50cykge1xuICAgIGNvbnN0IG4gPSBwb2ludHMubGVuZ3RoO1xuICAgIGxldCBQID0gbnVsbDtcbiAgICBsZXQgeDAsIHkwLCB4MSA9IHBvaW50c1tuIC0gMl0sIHkxID0gcG9pbnRzW24gLSAxXTtcbiAgICBsZXQgYzAsIGMxID0gdGhpcy5fcmVnaW9uY29kZSh4MSwgeTEpO1xuICAgIGxldCBlMCwgZTE7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBuOyBqICs9IDIpIHtcbiAgICAgIHgwID0geDEsIHkwID0geTEsIHgxID0gcG9pbnRzW2pdLCB5MSA9IHBvaW50c1tqICsgMV07XG4gICAgICBjMCA9IGMxLCBjMSA9IHRoaXMuX3JlZ2lvbmNvZGUoeDEsIHkxKTtcbiAgICAgIGlmIChjMCA9PT0gMCAmJiBjMSA9PT0gMCkge1xuICAgICAgICBlMCA9IGUxLCBlMSA9IDA7XG4gICAgICAgIGlmIChQKSBQLnB1c2goeDEsIHkxKTtcbiAgICAgICAgZWxzZSBQID0gW3gxLCB5MV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsZXQgUywgc3gwLCBzeTAsIHN4MSwgc3kxO1xuICAgICAgICBpZiAoYzAgPT09IDApIHtcbiAgICAgICAgICBpZiAoKFMgPSB0aGlzLl9jbGlwU2VnbWVudCh4MCwgeTAsIHgxLCB5MSwgYzAsIGMxKSkgPT09IG51bGwpIGNvbnRpbnVlO1xuICAgICAgICAgIFtzeDAsIHN5MCwgc3gxLCBzeTFdID0gUztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoKFMgPSB0aGlzLl9jbGlwU2VnbWVudCh4MSwgeTEsIHgwLCB5MCwgYzEsIGMwKSkgPT09IG51bGwpIGNvbnRpbnVlO1xuICAgICAgICAgIFtzeDEsIHN5MSwgc3gwLCBzeTBdID0gUztcbiAgICAgICAgICBlMCA9IGUxLCBlMSA9IHRoaXMuX2VkZ2Vjb2RlKHN4MCwgc3kwKTtcbiAgICAgICAgICBpZiAoZTAgJiYgZTEpIHRoaXMuX2VkZ2UoaSwgZTAsIGUxLCBQLCBQLmxlbmd0aCk7XG4gICAgICAgICAgaWYgKFApIFAucHVzaChzeDAsIHN5MCk7XG4gICAgICAgICAgZWxzZSBQID0gW3N4MCwgc3kwXTtcbiAgICAgICAgfVxuICAgICAgICBlMCA9IGUxLCBlMSA9IHRoaXMuX2VkZ2Vjb2RlKHN4MSwgc3kxKTtcbiAgICAgICAgaWYgKGUwICYmIGUxKSB0aGlzLl9lZGdlKGksIGUwLCBlMSwgUCwgUC5sZW5ndGgpO1xuICAgICAgICBpZiAoUCkgUC5wdXNoKHN4MSwgc3kxKTtcbiAgICAgICAgZWxzZSBQID0gW3N4MSwgc3kxXTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKFApIHtcbiAgICAgIGUwID0gZTEsIGUxID0gdGhpcy5fZWRnZWNvZGUoUFswXSwgUFsxXSk7XG4gICAgICBpZiAoZTAgJiYgZTEpIHRoaXMuX2VkZ2UoaSwgZTAsIGUxLCBQLCBQLmxlbmd0aCk7XG4gICAgfSBlbHNlIGlmICh0aGlzLmNvbnRhaW5zKGksICh0aGlzLnhtaW4gKyB0aGlzLnhtYXgpIC8gMiwgKHRoaXMueW1pbiArIHRoaXMueW1heCkgLyAyKSkge1xuICAgICAgcmV0dXJuIFt0aGlzLnhtYXgsIHRoaXMueW1pbiwgdGhpcy54bWF4LCB0aGlzLnltYXgsIHRoaXMueG1pbiwgdGhpcy55bWF4LCB0aGlzLnhtaW4sIHRoaXMueW1pbl07XG4gICAgfVxuICAgIHJldHVybiBQO1xuICB9XG4gIF9jbGlwU2VnbWVudCh4MCwgeTAsIHgxLCB5MSwgYzAsIGMxKSB7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGlmIChjMCA9PT0gMCAmJiBjMSA9PT0gMCkgcmV0dXJuIFt4MCwgeTAsIHgxLCB5MV07XG4gICAgICBpZiAoYzAgJiBjMSkgcmV0dXJuIG51bGw7XG4gICAgICBsZXQgeCwgeSwgYyA9IGMwIHx8IGMxO1xuICAgICAgaWYgKGMgJiAwYjEwMDApIHggPSB4MCArICh4MSAtIHgwKSAqICh0aGlzLnltYXggLSB5MCkgLyAoeTEgLSB5MCksIHkgPSB0aGlzLnltYXg7XG4gICAgICBlbHNlIGlmIChjICYgMGIwMTAwKSB4ID0geDAgKyAoeDEgLSB4MCkgKiAodGhpcy55bWluIC0geTApIC8gKHkxIC0geTApLCB5ID0gdGhpcy55bWluO1xuICAgICAgZWxzZSBpZiAoYyAmIDBiMDAxMCkgeSA9IHkwICsgKHkxIC0geTApICogKHRoaXMueG1heCAtIHgwKSAvICh4MSAtIHgwKSwgeCA9IHRoaXMueG1heDtcbiAgICAgIGVsc2UgeSA9IHkwICsgKHkxIC0geTApICogKHRoaXMueG1pbiAtIHgwKSAvICh4MSAtIHgwKSwgeCA9IHRoaXMueG1pbjtcbiAgICAgIGlmIChjMCkgeDAgPSB4LCB5MCA9IHksIGMwID0gdGhpcy5fcmVnaW9uY29kZSh4MCwgeTApO1xuICAgICAgZWxzZSB4MSA9IHgsIHkxID0geSwgYzEgPSB0aGlzLl9yZWdpb25jb2RlKHgxLCB5MSk7XG4gICAgfVxuICB9XG4gIF9jbGlwSW5maW5pdGUoaSwgcG9pbnRzLCB2eDAsIHZ5MCwgdnhuLCB2eW4pIHtcbiAgICBsZXQgUCA9IEFycmF5LmZyb20ocG9pbnRzKSwgcDtcbiAgICBpZiAocCA9IHRoaXMuX3Byb2plY3QoUFswXSwgUFsxXSwgdngwLCB2eTApKSBQLnVuc2hpZnQocFswXSwgcFsxXSk7XG4gICAgaWYgKHAgPSB0aGlzLl9wcm9qZWN0KFBbUC5sZW5ndGggLSAyXSwgUFtQLmxlbmd0aCAtIDFdLCB2eG4sIHZ5bikpIFAucHVzaChwWzBdLCBwWzFdKTtcbiAgICBpZiAoUCA9IHRoaXMuX2NsaXBGaW5pdGUoaSwgUCkpIHtcbiAgICAgIGZvciAobGV0IGogPSAwLCBuID0gUC5sZW5ndGgsIGMwLCBjMSA9IHRoaXMuX2VkZ2Vjb2RlKFBbbiAtIDJdLCBQW24gLSAxXSk7IGogPCBuOyBqICs9IDIpIHtcbiAgICAgICAgYzAgPSBjMSwgYzEgPSB0aGlzLl9lZGdlY29kZShQW2pdLCBQW2ogKyAxXSk7XG4gICAgICAgIGlmIChjMCAmJiBjMSkgaiA9IHRoaXMuX2VkZ2UoaSwgYzAsIGMxLCBQLCBqKSwgbiA9IFAubGVuZ3RoO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodGhpcy5jb250YWlucyhpLCAodGhpcy54bWluICsgdGhpcy54bWF4KSAvIDIsICh0aGlzLnltaW4gKyB0aGlzLnltYXgpIC8gMikpIHtcbiAgICAgIFAgPSBbdGhpcy54bWluLCB0aGlzLnltaW4sIHRoaXMueG1heCwgdGhpcy55bWluLCB0aGlzLnhtYXgsIHRoaXMueW1heCwgdGhpcy54bWluLCB0aGlzLnltYXhdO1xuICAgIH1cbiAgICByZXR1cm4gUDtcbiAgfVxuICBfZWRnZShpLCBlMCwgZTEsIFAsIGopIHtcbiAgICB3aGlsZSAoZTAgIT09IGUxKSB7XG4gICAgICBsZXQgeCwgeTtcbiAgICAgIHN3aXRjaCAoZTApIHtcbiAgICAgICAgY2FzZSAwYjAxMDE6IGUwID0gMGIwMTAwOyBjb250aW51ZTsgLy8gdG9wLWxlZnRcbiAgICAgICAgY2FzZSAwYjAxMDA6IGUwID0gMGIwMTEwLCB4ID0gdGhpcy54bWF4LCB5ID0gdGhpcy55bWluOyBicmVhazsgLy8gdG9wXG4gICAgICAgIGNhc2UgMGIwMTEwOiBlMCA9IDBiMDAxMDsgY29udGludWU7IC8vIHRvcC1yaWdodFxuICAgICAgICBjYXNlIDBiMDAxMDogZTAgPSAwYjEwMTAsIHggPSB0aGlzLnhtYXgsIHkgPSB0aGlzLnltYXg7IGJyZWFrOyAvLyByaWdodFxuICAgICAgICBjYXNlIDBiMTAxMDogZTAgPSAwYjEwMDA7IGNvbnRpbnVlOyAvLyBib3R0b20tcmlnaHRcbiAgICAgICAgY2FzZSAwYjEwMDA6IGUwID0gMGIxMDAxLCB4ID0gdGhpcy54bWluLCB5ID0gdGhpcy55bWF4OyBicmVhazsgLy8gYm90dG9tXG4gICAgICAgIGNhc2UgMGIxMDAxOiBlMCA9IDBiMDAwMTsgY29udGludWU7IC8vIGJvdHRvbS1sZWZ0XG4gICAgICAgIGNhc2UgMGIwMDAxOiBlMCA9IDBiMDEwMSwgeCA9IHRoaXMueG1pbiwgeSA9IHRoaXMueW1pbjsgYnJlYWs7IC8vIGxlZnRcbiAgICAgIH1cbiAgICAgIGlmICgoUFtqXSAhPT0geCB8fCBQW2ogKyAxXSAhPT0geSkgJiYgdGhpcy5jb250YWlucyhpLCB4LCB5KSkge1xuICAgICAgICBQLnNwbGljZShqLCAwLCB4LCB5KSwgaiArPSAyO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoUC5sZW5ndGggPiA0KSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IFAubGVuZ3RoOyBpKz0gMikge1xuICAgICAgICBjb25zdCBqID0gKGkgKyAyKSAlIFAubGVuZ3RoLCBrID0gKGkgKyA0KSAlIFAubGVuZ3RoO1xuICAgICAgICBpZiAoUFtpXSA9PT0gUFtqXSAmJiBQW2pdID09PSBQW2tdXG4gICAgICAgIHx8IFBbaSArIDFdID09PSBQW2ogKyAxXSAmJiBQW2ogKyAxXSA9PT0gUFtrICsgMV0pXG4gICAgICAgICAgUC5zcGxpY2UoaiwgMiksIGkgLT0gMjtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGo7XG4gIH1cbiAgX3Byb2plY3QoeDAsIHkwLCB2eCwgdnkpIHtcbiAgICBsZXQgdCA9IEluZmluaXR5LCBjLCB4LCB5O1xuICAgIGlmICh2eSA8IDApIHsgLy8gdG9wXG4gICAgICBpZiAoeTAgPD0gdGhpcy55bWluKSByZXR1cm4gbnVsbDtcbiAgICAgIGlmICgoYyA9ICh0aGlzLnltaW4gLSB5MCkgLyB2eSkgPCB0KSB5ID0gdGhpcy55bWluLCB4ID0geDAgKyAodCA9IGMpICogdng7XG4gICAgfSBlbHNlIGlmICh2eSA+IDApIHsgLy8gYm90dG9tXG4gICAgICBpZiAoeTAgPj0gdGhpcy55bWF4KSByZXR1cm4gbnVsbDtcbiAgICAgIGlmICgoYyA9ICh0aGlzLnltYXggLSB5MCkgLyB2eSkgPCB0KSB5ID0gdGhpcy55bWF4LCB4ID0geDAgKyAodCA9IGMpICogdng7XG4gICAgfVxuICAgIGlmICh2eCA+IDApIHsgLy8gcmlnaHRcbiAgICAgIGlmICh4MCA+PSB0aGlzLnhtYXgpIHJldHVybiBudWxsO1xuICAgICAgaWYgKChjID0gKHRoaXMueG1heCAtIHgwKSAvIHZ4KSA8IHQpIHggPSB0aGlzLnhtYXgsIHkgPSB5MCArICh0ID0gYykgKiB2eTtcbiAgICB9IGVsc2UgaWYgKHZ4IDwgMCkgeyAvLyBsZWZ0XG4gICAgICBpZiAoeDAgPD0gdGhpcy54bWluKSByZXR1cm4gbnVsbDtcbiAgICAgIGlmICgoYyA9ICh0aGlzLnhtaW4gLSB4MCkgLyB2eCkgPCB0KSB4ID0gdGhpcy54bWluLCB5ID0geTAgKyAodCA9IGMpICogdnk7XG4gICAgfVxuICAgIHJldHVybiBbeCwgeV07XG4gIH1cbiAgX2VkZ2Vjb2RlKHgsIHkpIHtcbiAgICByZXR1cm4gKHggPT09IHRoaXMueG1pbiA/IDBiMDAwMVxuICAgICAgICA6IHggPT09IHRoaXMueG1heCA/IDBiMDAxMCA6IDBiMDAwMClcbiAgICAgICAgfCAoeSA9PT0gdGhpcy55bWluID8gMGIwMTAwXG4gICAgICAgIDogeSA9PT0gdGhpcy55bWF4ID8gMGIxMDAwIDogMGIwMDAwKTtcbiAgfVxuICBfcmVnaW9uY29kZSh4LCB5KSB7XG4gICAgcmV0dXJuICh4IDwgdGhpcy54bWluID8gMGIwMDAxXG4gICAgICAgIDogeCA+IHRoaXMueG1heCA/IDBiMDAxMCA6IDBiMDAwMClcbiAgICAgICAgfCAoeSA8IHRoaXMueW1pbiA/IDBiMDEwMFxuICAgICAgICA6IHkgPiB0aGlzLnltYXggPyAwYjEwMDAgOiAwYjAwMDApO1xuICB9XG59XG4iLCJ2YXIgbm9vcCA9IHt2YWx1ZTogKCkgPT4ge319O1xuXG5mdW5jdGlvbiBkaXNwYXRjaCgpIHtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSBhcmd1bWVudHMubGVuZ3RoLCBfID0ge30sIHQ7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoISh0ID0gYXJndW1lbnRzW2ldICsgXCJcIikgfHwgKHQgaW4gXykgfHwgL1tcXHMuXS8udGVzdCh0KSkgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCB0eXBlOiBcIiArIHQpO1xuICAgIF9bdF0gPSBbXTtcbiAgfVxuICByZXR1cm4gbmV3IERpc3BhdGNoKF8pO1xufVxuXG5mdW5jdGlvbiBEaXNwYXRjaChfKSB7XG4gIHRoaXMuXyA9IF87XG59XG5cbmZ1bmN0aW9uIHBhcnNlVHlwZW5hbWVzKHR5cGVuYW1lcywgdHlwZXMpIHtcbiAgcmV0dXJuIHR5cGVuYW1lcy50cmltKCkuc3BsaXQoL158XFxzKy8pLm1hcChmdW5jdGlvbih0KSB7XG4gICAgdmFyIG5hbWUgPSBcIlwiLCBpID0gdC5pbmRleE9mKFwiLlwiKTtcbiAgICBpZiAoaSA+PSAwKSBuYW1lID0gdC5zbGljZShpICsgMSksIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIGlmICh0ICYmICF0eXBlcy5oYXNPd25Qcm9wZXJ0eSh0KSkgdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biB0eXBlOiBcIiArIHQpO1xuICAgIHJldHVybiB7dHlwZTogdCwgbmFtZTogbmFtZX07XG4gIH0pO1xufVxuXG5EaXNwYXRjaC5wcm90b3R5cGUgPSBkaXNwYXRjaC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBEaXNwYXRjaCxcbiAgb246IGZ1bmN0aW9uKHR5cGVuYW1lLCBjYWxsYmFjaykge1xuICAgIHZhciBfID0gdGhpcy5fLFxuICAgICAgICBUID0gcGFyc2VUeXBlbmFtZXModHlwZW5hbWUgKyBcIlwiLCBfKSxcbiAgICAgICAgdCxcbiAgICAgICAgaSA9IC0xLFxuICAgICAgICBuID0gVC5sZW5ndGg7XG5cbiAgICAvLyBJZiBubyBjYWxsYmFjayB3YXMgc3BlY2lmaWVkLCByZXR1cm4gdGhlIGNhbGxiYWNrIG9mIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpICYmICh0ID0gZ2V0KF9bdF0sIHR5cGVuYW1lLm5hbWUpKSkgcmV0dXJuIHQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gSWYgYSB0eXBlIHdhcyBzcGVjaWZpZWQsIHNldCB0aGUgY2FsbGJhY2sgZm9yIHRoZSBnaXZlbiB0eXBlIGFuZCBuYW1lLlxuICAgIC8vIE90aGVyd2lzZSwgaWYgYSBudWxsIGNhbGxiYWNrIHdhcyBzcGVjaWZpZWQsIHJlbW92ZSBjYWxsYmFja3Mgb2YgdGhlIGdpdmVuIG5hbWUuXG4gICAgaWYgKGNhbGxiYWNrICE9IG51bGwgJiYgdHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgY2FsbGJhY2s6IFwiICsgY2FsbGJhY2spO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpZiAodCA9ICh0eXBlbmFtZSA9IFRbaV0pLnR5cGUpIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgY2FsbGJhY2spO1xuICAgICAgZWxzZSBpZiAoY2FsbGJhY2sgPT0gbnVsbCkgZm9yICh0IGluIF8pIF9bdF0gPSBzZXQoX1t0XSwgdHlwZW5hbWUubmFtZSwgbnVsbCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG4gIGNvcHk6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBjb3B5ID0ge30sIF8gPSB0aGlzLl87XG4gICAgZm9yICh2YXIgdCBpbiBfKSBjb3B5W3RdID0gX1t0XS5zbGljZSgpO1xuICAgIHJldHVybiBuZXcgRGlzcGF0Y2goY29weSk7XG4gIH0sXG4gIGNhbGw6IGZ1bmN0aW9uKHR5cGUsIHRoYXQpIHtcbiAgICBpZiAoKG4gPSBhcmd1bWVudHMubGVuZ3RoIC0gMikgPiAwKSBmb3IgKHZhciBhcmdzID0gbmV3IEFycmF5KG4pLCBpID0gMCwgbiwgdDsgaSA8IG47ICsraSkgYXJnc1tpXSA9IGFyZ3VtZW50c1tpICsgMl07XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHQgPSB0aGlzLl9bdHlwZV0sIGkgPSAwLCBuID0gdC5sZW5ndGg7IGkgPCBuOyArK2kpIHRbaV0udmFsdWUuYXBwbHkodGhhdCwgYXJncyk7XG4gIH0sXG4gIGFwcGx5OiBmdW5jdGlvbih0eXBlLCB0aGF0LCBhcmdzKSB7XG4gICAgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodHlwZSkpIHRocm93IG5ldyBFcnJvcihcInVua25vd24gdHlwZTogXCIgKyB0eXBlKTtcbiAgICBmb3IgKHZhciB0ID0gdGhpcy5fW3R5cGVdLCBpID0gMCwgbiA9IHQubGVuZ3RoOyBpIDwgbjsgKytpKSB0W2ldLnZhbHVlLmFwcGx5KHRoYXQsIGFyZ3MpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBnZXQodHlwZSwgbmFtZSkge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoLCBjOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKChjID0gdHlwZVtpXSkubmFtZSA9PT0gbmFtZSkge1xuICAgICAgcmV0dXJuIGMudmFsdWU7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNldCh0eXBlLCBuYW1lLCBjYWxsYmFjaykge1xuICBmb3IgKHZhciBpID0gMCwgbiA9IHR5cGUubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKHR5cGVbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgdHlwZVtpXSA9IG5vb3AsIHR5cGUgPSB0eXBlLnNsaWNlKDAsIGkpLmNvbmNhdCh0eXBlLnNsaWNlKGkgKyAxKSk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgaWYgKGNhbGxiYWNrICE9IG51bGwpIHR5cGUucHVzaCh7bmFtZTogbmFtZSwgdmFsdWU6IGNhbGxiYWNrfSk7XG4gIHJldHVybiB0eXBlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkaXNwYXRjaDtcbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBkaXNwYXRjaH0gZnJvbSBcIi4vZGlzcGF0Y2guanNcIjtcbiIsImV4cG9ydCBkZWZhdWx0IHggPT4gKCkgPT4geDtcbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHtzZWxlY3QsIHBvaW50ZXJ9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCBub2RyYWcsIHt5ZXNkcmFnfSBmcm9tIFwiLi9ub2RyYWcuanNcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudC5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgRHJhZ0V2ZW50IGZyb20gXCIuL2V2ZW50LmpzXCI7XG5cbi8vIElnbm9yZSByaWdodC1jbGljaywgc2luY2UgdGhhdCBzaG91bGQgb3BlbiB0aGUgY29udGV4dCBtZW51LlxuZnVuY3Rpb24gZGVmYXVsdEZpbHRlcihldmVudCkge1xuICByZXR1cm4gIWV2ZW50LmN0cmxLZXkgJiYgIWV2ZW50LmJ1dHRvbjtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdENvbnRhaW5lcigpIHtcbiAgcmV0dXJuIHRoaXMucGFyZW50Tm9kZTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFN1YmplY3QoZXZlbnQsIGQpIHtcbiAgcmV0dXJuIGQgPT0gbnVsbCA/IHt4OiBldmVudC54LCB5OiBldmVudC55fSA6IGQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRUb3VjaGFibGUoKSB7XG4gIHJldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgfHwgKFwib250b3VjaHN0YXJ0XCIgaW4gdGhpcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZmlsdGVyID0gZGVmYXVsdEZpbHRlcixcbiAgICAgIGNvbnRhaW5lciA9IGRlZmF1bHRDb250YWluZXIsXG4gICAgICBzdWJqZWN0ID0gZGVmYXVsdFN1YmplY3QsXG4gICAgICB0b3VjaGFibGUgPSBkZWZhdWx0VG91Y2hhYmxlLFxuICAgICAgZ2VzdHVyZXMgPSB7fSxcbiAgICAgIGxpc3RlbmVycyA9IGRpc3BhdGNoKFwic3RhcnRcIiwgXCJkcmFnXCIsIFwiZW5kXCIpLFxuICAgICAgYWN0aXZlID0gMCxcbiAgICAgIG1vdXNlZG93bngsXG4gICAgICBtb3VzZWRvd255LFxuICAgICAgbW91c2Vtb3ZpbmcsXG4gICAgICB0b3VjaGVuZGluZyxcbiAgICAgIGNsaWNrRGlzdGFuY2UyID0gMDtcblxuICBmdW5jdGlvbiBkcmFnKHNlbGVjdGlvbikge1xuICAgIHNlbGVjdGlvblxuICAgICAgICAub24oXCJtb3VzZWRvd24uZHJhZ1wiLCBtb3VzZWRvd25lZClcbiAgICAgIC5maWx0ZXIodG91Y2hhYmxlKVxuICAgICAgICAub24oXCJ0b3VjaHN0YXJ0LmRyYWdcIiwgdG91Y2hzdGFydGVkKVxuICAgICAgICAub24oXCJ0b3VjaG1vdmUuZHJhZ1wiLCB0b3VjaG1vdmVkKVxuICAgICAgICAub24oXCJ0b3VjaGVuZC5kcmFnIHRvdWNoY2FuY2VsLmRyYWdcIiwgdG91Y2hlbmRlZClcbiAgICAgICAgLnN0eWxlKFwidG91Y2gtYWN0aW9uXCIsIFwibm9uZVwiKVxuICAgICAgICAuc3R5bGUoXCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3JcIiwgXCJyZ2JhKDAsMCwwLDApXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gbW91c2Vkb3duZWQoZXZlbnQsIGQpIHtcbiAgICBpZiAodG91Y2hlbmRpbmcgfHwgIWZpbHRlci5jYWxsKHRoaXMsIGV2ZW50LCBkKSkgcmV0dXJuO1xuICAgIHZhciBnZXN0dXJlID0gYmVmb3Jlc3RhcnQodGhpcywgY29udGFpbmVyLmNhbGwodGhpcywgZXZlbnQsIGQpLCBldmVudCwgZCwgXCJtb3VzZVwiKTtcbiAgICBpZiAoIWdlc3R1cmUpIHJldHVybjtcbiAgICBzZWxlY3QoZXZlbnQudmlldykub24oXCJtb3VzZW1vdmUuZHJhZ1wiLCBtb3VzZW1vdmVkLCB0cnVlKS5vbihcIm1vdXNldXAuZHJhZ1wiLCBtb3VzZXVwcGVkLCB0cnVlKTtcbiAgICBub2RyYWcoZXZlbnQudmlldyk7XG4gICAgbm9wcm9wYWdhdGlvbihldmVudCk7XG4gICAgbW91c2Vtb3ZpbmcgPSBmYWxzZTtcbiAgICBtb3VzZWRvd254ID0gZXZlbnQuY2xpZW50WDtcbiAgICBtb3VzZWRvd255ID0gZXZlbnQuY2xpZW50WTtcbiAgICBnZXN0dXJlKFwic3RhcnRcIiwgZXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbW91c2Vtb3ZlZChldmVudCkge1xuICAgIG5vZXZlbnQoZXZlbnQpO1xuICAgIGlmICghbW91c2Vtb3ZpbmcpIHtcbiAgICAgIHZhciBkeCA9IGV2ZW50LmNsaWVudFggLSBtb3VzZWRvd254LCBkeSA9IGV2ZW50LmNsaWVudFkgLSBtb3VzZWRvd255O1xuICAgICAgbW91c2Vtb3ZpbmcgPSBkeCAqIGR4ICsgZHkgKiBkeSA+IGNsaWNrRGlzdGFuY2UyO1xuICAgIH1cbiAgICBnZXN0dXJlcy5tb3VzZShcImRyYWdcIiwgZXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gbW91c2V1cHBlZChldmVudCkge1xuICAgIHNlbGVjdChldmVudC52aWV3KS5vbihcIm1vdXNlbW92ZS5kcmFnIG1vdXNldXAuZHJhZ1wiLCBudWxsKTtcbiAgICB5ZXNkcmFnKGV2ZW50LnZpZXcsIG1vdXNlbW92aW5nKTtcbiAgICBub2V2ZW50KGV2ZW50KTtcbiAgICBnZXN0dXJlcy5tb3VzZShcImVuZFwiLCBldmVudCk7XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaHN0YXJ0ZWQoZXZlbnQsIGQpIHtcbiAgICBpZiAoIWZpbHRlci5jYWxsKHRoaXMsIGV2ZW50LCBkKSkgcmV0dXJuO1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIGMgPSBjb250YWluZXIuY2FsbCh0aGlzLCBldmVudCwgZCksXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgZ2VzdHVyZTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChnZXN0dXJlID0gYmVmb3Jlc3RhcnQodGhpcywgYywgZXZlbnQsIGQsIHRvdWNoZXNbaV0uaWRlbnRpZmllciwgdG91Y2hlc1tpXSkpIHtcbiAgICAgICAgbm9wcm9wYWdhdGlvbihldmVudCk7XG4gICAgICAgIGdlc3R1cmUoXCJzdGFydFwiLCBldmVudCwgdG91Y2hlc1tpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2htb3ZlZChldmVudCkge1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMsXG4gICAgICAgIG4gPSB0b3VjaGVzLmxlbmd0aCwgaSwgZ2VzdHVyZTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChnZXN0dXJlID0gZ2VzdHVyZXNbdG91Y2hlc1tpXS5pZGVudGlmaWVyXSkge1xuICAgICAgICBub2V2ZW50KGV2ZW50KTtcbiAgICAgICAgZ2VzdHVyZShcImRyYWdcIiwgZXZlbnQsIHRvdWNoZXNbaV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNoZW5kZWQoZXZlbnQpIHtcbiAgICB2YXIgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIGdlc3R1cmU7XG5cbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIDUwMCk7IC8vIEdob3N0IGNsaWNrcyBhcmUgZGVsYXllZCFcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoZ2VzdHVyZSA9IGdlc3R1cmVzW3RvdWNoZXNbaV0uaWRlbnRpZmllcl0pIHtcbiAgICAgICAgbm9wcm9wYWdhdGlvbihldmVudCk7XG4gICAgICAgIGdlc3R1cmUoXCJlbmRcIiwgZXZlbnQsIHRvdWNoZXNbaV0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGJlZm9yZXN0YXJ0KHRoYXQsIGNvbnRhaW5lciwgZXZlbnQsIGQsIGlkZW50aWZpZXIsIHRvdWNoKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gbGlzdGVuZXJzLmNvcHkoKSxcbiAgICAgICAgcCA9IHBvaW50ZXIodG91Y2ggfHwgZXZlbnQsIGNvbnRhaW5lciksIGR4LCBkeSxcbiAgICAgICAgcztcblxuICAgIGlmICgocyA9IHN1YmplY3QuY2FsbCh0aGF0LCBuZXcgRHJhZ0V2ZW50KFwiYmVmb3Jlc3RhcnRcIiwge1xuICAgICAgICBzb3VyY2VFdmVudDogZXZlbnQsXG4gICAgICAgIHRhcmdldDogZHJhZyxcbiAgICAgICAgaWRlbnRpZmllcixcbiAgICAgICAgYWN0aXZlLFxuICAgICAgICB4OiBwWzBdLFxuICAgICAgICB5OiBwWzFdLFxuICAgICAgICBkeDogMCxcbiAgICAgICAgZHk6IDAsXG4gICAgICAgIGRpc3BhdGNoXG4gICAgICB9KSwgZCkpID09IG51bGwpIHJldHVybjtcblxuICAgIGR4ID0gcy54IC0gcFswXSB8fCAwO1xuICAgIGR5ID0gcy55IC0gcFsxXSB8fCAwO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGdlc3R1cmUodHlwZSwgZXZlbnQsIHRvdWNoKSB7XG4gICAgICB2YXIgcDAgPSBwLCBuO1xuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgXCJzdGFydFwiOiBnZXN0dXJlc1tpZGVudGlmaWVyXSA9IGdlc3R1cmUsIG4gPSBhY3RpdmUrKzsgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJlbmRcIjogZGVsZXRlIGdlc3R1cmVzW2lkZW50aWZpZXJdLCAtLWFjdGl2ZTsgLy8gbm9icmVha1xuICAgICAgICBjYXNlIFwiZHJhZ1wiOiBwID0gcG9pbnRlcih0b3VjaCB8fCBldmVudCwgY29udGFpbmVyKSwgbiA9IGFjdGl2ZTsgYnJlYWs7XG4gICAgICB9XG4gICAgICBkaXNwYXRjaC5jYWxsKFxuICAgICAgICB0eXBlLFxuICAgICAgICB0aGF0LFxuICAgICAgICBuZXcgRHJhZ0V2ZW50KHR5cGUsIHtcbiAgICAgICAgICBzb3VyY2VFdmVudDogZXZlbnQsXG4gICAgICAgICAgc3ViamVjdDogcyxcbiAgICAgICAgICB0YXJnZXQ6IGRyYWcsXG4gICAgICAgICAgaWRlbnRpZmllcixcbiAgICAgICAgICBhY3RpdmU6IG4sXG4gICAgICAgICAgeDogcFswXSArIGR4LFxuICAgICAgICAgIHk6IHBbMV0gKyBkeSxcbiAgICAgICAgICBkeDogcFswXSAtIHAwWzBdLFxuICAgICAgICAgIGR5OiBwWzFdIC0gcDBbMV0sXG4gICAgICAgICAgZGlzcGF0Y2hcbiAgICAgICAgfSksXG4gICAgICAgIGRcbiAgICAgICk7XG4gICAgfTtcbiAgfVxuXG4gIGRyYWcuZmlsdGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZpbHRlciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgZHJhZykgOiBmaWx0ZXI7XG4gIH07XG5cbiAgZHJhZy5jb250YWluZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29udGFpbmVyID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudChfKSwgZHJhZykgOiBjb250YWluZXI7XG4gIH07XG5cbiAgZHJhZy5zdWJqZWN0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN1YmplY3QgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KF8pLCBkcmFnKSA6IHN1YmplY3Q7XG4gIH07XG5cbiAgZHJhZy50b3VjaGFibGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodG91Y2hhYmxlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBkcmFnKSA6IHRvdWNoYWJsZTtcbiAgfTtcblxuICBkcmFnLm9uID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlID0gbGlzdGVuZXJzLm9uLmFwcGx5KGxpc3RlbmVycywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gdmFsdWUgPT09IGxpc3RlbmVycyA/IGRyYWcgOiB2YWx1ZTtcbiAgfTtcblxuICBkcmFnLmNsaWNrRGlzdGFuY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xpY2tEaXN0YW5jZTIgPSAoXyA9ICtfKSAqIF8sIGRyYWcpIDogTWF0aC5zcXJ0KGNsaWNrRGlzdGFuY2UyKTtcbiAgfTtcblxuICByZXR1cm4gZHJhZztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERyYWdFdmVudCh0eXBlLCB7XG4gIHNvdXJjZUV2ZW50LFxuICBzdWJqZWN0LFxuICB0YXJnZXQsXG4gIGlkZW50aWZpZXIsXG4gIGFjdGl2ZSxcbiAgeCwgeSwgZHgsIGR5LFxuICBkaXNwYXRjaFxufSkge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCB7XG4gICAgdHlwZToge3ZhbHVlOiB0eXBlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIHNvdXJjZUV2ZW50OiB7dmFsdWU6IHNvdXJjZUV2ZW50LCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIHN1YmplY3Q6IHt2YWx1ZTogc3ViamVjdCwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICB0YXJnZXQ6IHt2YWx1ZTogdGFyZ2V0LCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIGlkZW50aWZpZXI6IHt2YWx1ZTogaWRlbnRpZmllciwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICBhY3RpdmU6IHt2YWx1ZTogYWN0aXZlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIHg6IHt2YWx1ZTogeCwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICB5OiB7dmFsdWU6IHksIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0sXG4gICAgZHg6IHt2YWx1ZTogZHgsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0sXG4gICAgZHk6IHt2YWx1ZTogZHksIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0sXG4gICAgXzoge3ZhbHVlOiBkaXNwYXRjaH1cbiAgfSk7XG59XG5cbkRyYWdFdmVudC5wcm90b3R5cGUub24gPSBmdW5jdGlvbigpIHtcbiAgdmFyIHZhbHVlID0gdGhpcy5fLm9uLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgcmV0dXJuIHZhbHVlID09PSB0aGlzLl8gPyB0aGlzIDogdmFsdWU7XG59O1xuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGRyYWd9IGZyb20gXCIuL2RyYWcuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBkcmFnRGlzYWJsZSwgeWVzZHJhZyBhcyBkcmFnRW5hYmxlfSBmcm9tIFwiLi9ub2RyYWcuanNcIjtcbiIsImltcG9ydCB7c2VsZWN0fSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQgbm9ldmVudCBmcm9tIFwiLi9ub2V2ZW50LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZpZXcpIHtcbiAgdmFyIHJvb3QgPSB2aWV3LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxcbiAgICAgIHNlbGVjdGlvbiA9IHNlbGVjdCh2aWV3KS5vbihcImRyYWdzdGFydC5kcmFnXCIsIG5vZXZlbnQsIHRydWUpO1xuICBpZiAoXCJvbnNlbGVjdHN0YXJ0XCIgaW4gcm9vdCkge1xuICAgIHNlbGVjdGlvbi5vbihcInNlbGVjdHN0YXJ0LmRyYWdcIiwgbm9ldmVudCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5fX25vc2VsZWN0ID0gcm9vdC5zdHlsZS5Nb3pVc2VyU2VsZWN0O1xuICAgIHJvb3Quc3R5bGUuTW96VXNlclNlbGVjdCA9IFwibm9uZVwiO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB5ZXNkcmFnKHZpZXcsIG5vY2xpY2spIHtcbiAgdmFyIHJvb3QgPSB2aWV3LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxcbiAgICAgIHNlbGVjdGlvbiA9IHNlbGVjdCh2aWV3KS5vbihcImRyYWdzdGFydC5kcmFnXCIsIG51bGwpO1xuICBpZiAobm9jbGljaykge1xuICAgIHNlbGVjdGlvbi5vbihcImNsaWNrLmRyYWdcIiwgbm9ldmVudCwgdHJ1ZSk7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsgc2VsZWN0aW9uLm9uKFwiY2xpY2suZHJhZ1wiLCBudWxsKTsgfSwgMCk7XG4gIH1cbiAgaWYgKFwib25zZWxlY3RzdGFydFwiIGluIHJvb3QpIHtcbiAgICBzZWxlY3Rpb24ub24oXCJzZWxlY3RzdGFydC5kcmFnXCIsIG51bGwpO1xuICB9IGVsc2Uge1xuICAgIHJvb3Quc3R5bGUuTW96VXNlclNlbGVjdCA9IHJvb3QuX19ub3NlbGVjdDtcbiAgICBkZWxldGUgcm9vdC5fX25vc2VsZWN0O1xuICB9XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gbm9wcm9wYWdhdGlvbihldmVudCkge1xuICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZXZlbnQpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhdXRvVHlwZShvYmplY3QpIHtcbiAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgIHZhciB2YWx1ZSA9IG9iamVjdFtrZXldLnRyaW0oKSwgbnVtYmVyLCBtO1xuICAgIGlmICghdmFsdWUpIHZhbHVlID0gbnVsbDtcbiAgICBlbHNlIGlmICh2YWx1ZSA9PT0gXCJ0cnVlXCIpIHZhbHVlID0gdHJ1ZTtcbiAgICBlbHNlIGlmICh2YWx1ZSA9PT0gXCJmYWxzZVwiKSB2YWx1ZSA9IGZhbHNlO1xuICAgIGVsc2UgaWYgKHZhbHVlID09PSBcIk5hTlwiKSB2YWx1ZSA9IE5hTjtcbiAgICBlbHNlIGlmICghaXNOYU4obnVtYmVyID0gK3ZhbHVlKSkgdmFsdWUgPSBudW1iZXI7XG4gICAgZWxzZSBpZiAobSA9IHZhbHVlLm1hdGNoKC9eKFstK11cXGR7Mn0pP1xcZHs0fSgtXFxkezJ9KC1cXGR7Mn0pPyk/KFRcXGR7Mn06XFxkezJ9KDpcXGR7Mn0oXFwuXFxkezN9KT8pPyhafFstK11cXGR7Mn06XFxkezJ9KT8pPyQvKSkge1xuICAgICAgaWYgKGZpeHR6ICYmICEhbVs0XSAmJiAhbVs3XSkgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC8tL2csIFwiL1wiKS5yZXBsYWNlKC9ULywgXCIgXCIpO1xuICAgICAgdmFsdWUgPSBuZXcgRGF0ZSh2YWx1ZSk7XG4gICAgfVxuICAgIGVsc2UgY29udGludWU7XG4gICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gb2JqZWN0O1xufVxuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZDMvZDMtZHN2L2lzc3Vlcy80NVxuY29uc3QgZml4dHogPSBuZXcgRGF0ZShcIjIwMTktMDEtMDFUMDA6MDBcIikuZ2V0SG91cnMoKSB8fCBuZXcgRGF0ZShcIjIwMTktMDctMDFUMDA6MDBcIikuZ2V0SG91cnMoKTsiLCJpbXBvcnQgZHN2IGZyb20gXCIuL2Rzdi5qc1wiO1xuXG52YXIgY3N2ID0gZHN2KFwiLFwiKTtcblxuZXhwb3J0IHZhciBjc3ZQYXJzZSA9IGNzdi5wYXJzZTtcbmV4cG9ydCB2YXIgY3N2UGFyc2VSb3dzID0gY3N2LnBhcnNlUm93cztcbmV4cG9ydCB2YXIgY3N2Rm9ybWF0ID0gY3N2LmZvcm1hdDtcbmV4cG9ydCB2YXIgY3N2Rm9ybWF0Qm9keSA9IGNzdi5mb3JtYXRCb2R5O1xuZXhwb3J0IHZhciBjc3ZGb3JtYXRSb3dzID0gY3N2LmZvcm1hdFJvd3M7XG5leHBvcnQgdmFyIGNzdkZvcm1hdFJvdyA9IGNzdi5mb3JtYXRSb3c7XG5leHBvcnQgdmFyIGNzdkZvcm1hdFZhbHVlID0gY3N2LmZvcm1hdFZhbHVlO1xuIiwidmFyIEVPTCA9IHt9LFxuICAgIEVPRiA9IHt9LFxuICAgIFFVT1RFID0gMzQsXG4gICAgTkVXTElORSA9IDEwLFxuICAgIFJFVFVSTiA9IDEzO1xuXG5mdW5jdGlvbiBvYmplY3RDb252ZXJ0ZXIoY29sdW1ucykge1xuICByZXR1cm4gbmV3IEZ1bmN0aW9uKFwiZFwiLCBcInJldHVybiB7XCIgKyBjb2x1bW5zLm1hcChmdW5jdGlvbihuYW1lLCBpKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG5hbWUpICsgXCI6IGRbXCIgKyBpICsgXCJdIHx8IFxcXCJcXFwiXCI7XG4gIH0pLmpvaW4oXCIsXCIpICsgXCJ9XCIpO1xufVxuXG5mdW5jdGlvbiBjdXN0b21Db252ZXJ0ZXIoY29sdW1ucywgZikge1xuICB2YXIgb2JqZWN0ID0gb2JqZWN0Q29udmVydGVyKGNvbHVtbnMpO1xuICByZXR1cm4gZnVuY3Rpb24ocm93LCBpKSB7XG4gICAgcmV0dXJuIGYob2JqZWN0KHJvdyksIGksIGNvbHVtbnMpO1xuICB9O1xufVxuXG4vLyBDb21wdXRlIHVuaXF1ZSBjb2x1bW5zIGluIG9yZGVyIG9mIGRpc2NvdmVyeS5cbmZ1bmN0aW9uIGluZmVyQ29sdW1ucyhyb3dzKSB7XG4gIHZhciBjb2x1bW5TZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpLFxuICAgICAgY29sdW1ucyA9IFtdO1xuXG4gIHJvd3MuZm9yRWFjaChmdW5jdGlvbihyb3cpIHtcbiAgICBmb3IgKHZhciBjb2x1bW4gaW4gcm93KSB7XG4gICAgICBpZiAoIShjb2x1bW4gaW4gY29sdW1uU2V0KSkge1xuICAgICAgICBjb2x1bW5zLnB1c2goY29sdW1uU2V0W2NvbHVtbl0gPSBjb2x1bW4pO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNvbHVtbnM7XG59XG5cbmZ1bmN0aW9uIHBhZCh2YWx1ZSwgd2lkdGgpIHtcbiAgdmFyIHMgPSB2YWx1ZSArIFwiXCIsIGxlbmd0aCA9IHMubGVuZ3RoO1xuICByZXR1cm4gbGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKDApICsgcyA6IHM7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFllYXIoeWVhcikge1xuICByZXR1cm4geWVhciA8IDAgPyBcIi1cIiArIHBhZCgteWVhciwgNilcbiAgICA6IHllYXIgPiA5OTk5ID8gXCIrXCIgKyBwYWQoeWVhciwgNilcbiAgICA6IHBhZCh5ZWFyLCA0KTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RGF0ZShkYXRlKSB7XG4gIHZhciBob3VycyA9IGRhdGUuZ2V0VVRDSG91cnMoKSxcbiAgICAgIG1pbnV0ZXMgPSBkYXRlLmdldFVUQ01pbnV0ZXMoKSxcbiAgICAgIHNlY29uZHMgPSBkYXRlLmdldFVUQ1NlY29uZHMoKSxcbiAgICAgIG1pbGxpc2Vjb25kcyA9IGRhdGUuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gIHJldHVybiBpc05hTihkYXRlKSA/IFwiSW52YWxpZCBEYXRlXCJcbiAgICAgIDogZm9ybWF0WWVhcihkYXRlLmdldFVUQ0Z1bGxZZWFyKCksIDQpICsgXCItXCIgKyBwYWQoZGF0ZS5nZXRVVENNb250aCgpICsgMSwgMikgKyBcIi1cIiArIHBhZChkYXRlLmdldFVUQ0RhdGUoKSwgMilcbiAgICAgICsgKG1pbGxpc2Vjb25kcyA/IFwiVFwiICsgcGFkKGhvdXJzLCAyKSArIFwiOlwiICsgcGFkKG1pbnV0ZXMsIDIpICsgXCI6XCIgKyBwYWQoc2Vjb25kcywgMikgKyBcIi5cIiArIHBhZChtaWxsaXNlY29uZHMsIDMpICsgXCJaXCJcbiAgICAgIDogc2Vjb25kcyA/IFwiVFwiICsgcGFkKGhvdXJzLCAyKSArIFwiOlwiICsgcGFkKG1pbnV0ZXMsIDIpICsgXCI6XCIgKyBwYWQoc2Vjb25kcywgMikgKyBcIlpcIlxuICAgICAgOiBtaW51dGVzIHx8IGhvdXJzID8gXCJUXCIgKyBwYWQoaG91cnMsIDIpICsgXCI6XCIgKyBwYWQobWludXRlcywgMikgKyBcIlpcIlxuICAgICAgOiBcIlwiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZGVsaW1pdGVyKSB7XG4gIHZhciByZUZvcm1hdCA9IG5ldyBSZWdFeHAoXCJbXFxcIlwiICsgZGVsaW1pdGVyICsgXCJcXG5cXHJdXCIpLFxuICAgICAgREVMSU1JVEVSID0gZGVsaW1pdGVyLmNoYXJDb2RlQXQoMCk7XG5cbiAgZnVuY3Rpb24gcGFyc2UodGV4dCwgZikge1xuICAgIHZhciBjb252ZXJ0LCBjb2x1bW5zLCByb3dzID0gcGFyc2VSb3dzKHRleHQsIGZ1bmN0aW9uKHJvdywgaSkge1xuICAgICAgaWYgKGNvbnZlcnQpIHJldHVybiBjb252ZXJ0KHJvdywgaSAtIDEpO1xuICAgICAgY29sdW1ucyA9IHJvdywgY29udmVydCA9IGYgPyBjdXN0b21Db252ZXJ0ZXIocm93LCBmKSA6IG9iamVjdENvbnZlcnRlcihyb3cpO1xuICAgIH0pO1xuICAgIHJvd3MuY29sdW1ucyA9IGNvbHVtbnMgfHwgW107XG4gICAgcmV0dXJuIHJvd3M7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVJvd3ModGV4dCwgZikge1xuICAgIHZhciByb3dzID0gW10sIC8vIG91dHB1dCByb3dzXG4gICAgICAgIE4gPSB0ZXh0Lmxlbmd0aCxcbiAgICAgICAgSSA9IDAsIC8vIGN1cnJlbnQgY2hhcmFjdGVyIGluZGV4XG4gICAgICAgIG4gPSAwLCAvLyBjdXJyZW50IGxpbmUgbnVtYmVyXG4gICAgICAgIHQsIC8vIGN1cnJlbnQgdG9rZW5cbiAgICAgICAgZW9mID0gTiA8PSAwLCAvLyBjdXJyZW50IHRva2VuIGZvbGxvd2VkIGJ5IEVPRj9cbiAgICAgICAgZW9sID0gZmFsc2U7IC8vIGN1cnJlbnQgdG9rZW4gZm9sbG93ZWQgYnkgRU9MP1xuXG4gICAgLy8gU3RyaXAgdGhlIHRyYWlsaW5nIG5ld2xpbmUuXG4gICAgaWYgKHRleHQuY2hhckNvZGVBdChOIC0gMSkgPT09IE5FV0xJTkUpIC0tTjtcbiAgICBpZiAodGV4dC5jaGFyQ29kZUF0KE4gLSAxKSA9PT0gUkVUVVJOKSAtLU47XG5cbiAgICBmdW5jdGlvbiB0b2tlbigpIHtcbiAgICAgIGlmIChlb2YpIHJldHVybiBFT0Y7XG4gICAgICBpZiAoZW9sKSByZXR1cm4gZW9sID0gZmFsc2UsIEVPTDtcblxuICAgICAgLy8gVW5lc2NhcGUgcXVvdGVzLlxuICAgICAgdmFyIGksIGogPSBJLCBjO1xuICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChqKSA9PT0gUVVPVEUpIHtcbiAgICAgICAgd2hpbGUgKEkrKyA8IE4gJiYgdGV4dC5jaGFyQ29kZUF0KEkpICE9PSBRVU9URSB8fCB0ZXh0LmNoYXJDb2RlQXQoKytJKSA9PT0gUVVPVEUpO1xuICAgICAgICBpZiAoKGkgPSBJKSA+PSBOKSBlb2YgPSB0cnVlO1xuICAgICAgICBlbHNlIGlmICgoYyA9IHRleHQuY2hhckNvZGVBdChJKyspKSA9PT0gTkVXTElORSkgZW9sID0gdHJ1ZTtcbiAgICAgICAgZWxzZSBpZiAoYyA9PT0gUkVUVVJOKSB7IGVvbCA9IHRydWU7IGlmICh0ZXh0LmNoYXJDb2RlQXQoSSkgPT09IE5FV0xJTkUpICsrSTsgfVxuICAgICAgICByZXR1cm4gdGV4dC5zbGljZShqICsgMSwgaSAtIDEpLnJlcGxhY2UoL1wiXCIvZywgXCJcXFwiXCIpO1xuICAgICAgfVxuXG4gICAgICAvLyBGaW5kIG5leHQgZGVsaW1pdGVyIG9yIG5ld2xpbmUuXG4gICAgICB3aGlsZSAoSSA8IE4pIHtcbiAgICAgICAgaWYgKChjID0gdGV4dC5jaGFyQ29kZUF0KGkgPSBJKyspKSA9PT0gTkVXTElORSkgZW9sID0gdHJ1ZTtcbiAgICAgICAgZWxzZSBpZiAoYyA9PT0gUkVUVVJOKSB7IGVvbCA9IHRydWU7IGlmICh0ZXh0LmNoYXJDb2RlQXQoSSkgPT09IE5FV0xJTkUpICsrSTsgfVxuICAgICAgICBlbHNlIGlmIChjICE9PSBERUxJTUlURVIpIGNvbnRpbnVlO1xuICAgICAgICByZXR1cm4gdGV4dC5zbGljZShqLCBpKTtcbiAgICAgIH1cblxuICAgICAgLy8gUmV0dXJuIGxhc3QgdG9rZW4gYmVmb3JlIEVPRi5cbiAgICAgIHJldHVybiBlb2YgPSB0cnVlLCB0ZXh0LnNsaWNlKGosIE4pO1xuICAgIH1cblxuICAgIHdoaWxlICgodCA9IHRva2VuKCkpICE9PSBFT0YpIHtcbiAgICAgIHZhciByb3cgPSBbXTtcbiAgICAgIHdoaWxlICh0ICE9PSBFT0wgJiYgdCAhPT0gRU9GKSByb3cucHVzaCh0KSwgdCA9IHRva2VuKCk7XG4gICAgICBpZiAoZiAmJiAocm93ID0gZihyb3csIG4rKykpID09IG51bGwpIGNvbnRpbnVlO1xuICAgICAgcm93cy5wdXNoKHJvdyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJvd3M7XG4gIH1cblxuICBmdW5jdGlvbiBwcmVmb3JtYXRCb2R5KHJvd3MsIGNvbHVtbnMpIHtcbiAgICByZXR1cm4gcm93cy5tYXAoZnVuY3Rpb24ocm93KSB7XG4gICAgICByZXR1cm4gY29sdW1ucy5tYXAoZnVuY3Rpb24oY29sdW1uKSB7XG4gICAgICAgIHJldHVybiBmb3JtYXRWYWx1ZShyb3dbY29sdW1uXSk7XG4gICAgICB9KS5qb2luKGRlbGltaXRlcik7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXQocm93cywgY29sdW1ucykge1xuICAgIGlmIChjb2x1bW5zID09IG51bGwpIGNvbHVtbnMgPSBpbmZlckNvbHVtbnMocm93cyk7XG4gICAgcmV0dXJuIFtjb2x1bW5zLm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpXS5jb25jYXQocHJlZm9ybWF0Qm9keShyb3dzLCBjb2x1bW5zKSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdEJvZHkocm93cywgY29sdW1ucykge1xuICAgIGlmIChjb2x1bW5zID09IG51bGwpIGNvbHVtbnMgPSBpbmZlckNvbHVtbnMocm93cyk7XG4gICAgcmV0dXJuIHByZWZvcm1hdEJvZHkocm93cywgY29sdW1ucykuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFJvd3Mocm93cykge1xuICAgIHJldHVybiByb3dzLm1hcChmb3JtYXRSb3cpLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRSb3cocm93KSB7XG4gICAgcmV0dXJuIHJvdy5tYXAoZm9ybWF0VmFsdWUpLmpvaW4oZGVsaW1pdGVyKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFZhbHVlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiXG4gICAgICAgIDogdmFsdWUgaW5zdGFuY2VvZiBEYXRlID8gZm9ybWF0RGF0ZSh2YWx1ZSlcbiAgICAgICAgOiByZUZvcm1hdC50ZXN0KHZhbHVlICs9IFwiXCIpID8gXCJcXFwiXCIgKyB2YWx1ZS5yZXBsYWNlKC9cIi9nLCBcIlxcXCJcXFwiXCIpICsgXCJcXFwiXCJcbiAgICAgICAgOiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGFyc2U6IHBhcnNlLFxuICAgIHBhcnNlUm93czogcGFyc2VSb3dzLFxuICAgIGZvcm1hdDogZm9ybWF0LFxuICAgIGZvcm1hdEJvZHk6IGZvcm1hdEJvZHksXG4gICAgZm9ybWF0Um93czogZm9ybWF0Um93cyxcbiAgICBmb3JtYXRSb3c6IGZvcm1hdFJvdyxcbiAgICBmb3JtYXRWYWx1ZTogZm9ybWF0VmFsdWVcbiAgfTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBkc3ZGb3JtYXR9IGZyb20gXCIuL2Rzdi5qc1wiO1xuZXhwb3J0IHtjc3ZQYXJzZSwgY3N2UGFyc2VSb3dzLCBjc3ZGb3JtYXQsIGNzdkZvcm1hdEJvZHksIGNzdkZvcm1hdFJvd3MsIGNzdkZvcm1hdFJvdywgY3N2Rm9ybWF0VmFsdWV9IGZyb20gXCIuL2Nzdi5qc1wiO1xuZXhwb3J0IHt0c3ZQYXJzZSwgdHN2UGFyc2VSb3dzLCB0c3ZGb3JtYXQsIHRzdkZvcm1hdEJvZHksIHRzdkZvcm1hdFJvd3MsIHRzdkZvcm1hdFJvdywgdHN2Rm9ybWF0VmFsdWV9IGZyb20gXCIuL3Rzdi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGF1dG9UeXBlfSBmcm9tIFwiLi9hdXRvVHlwZS5qc1wiO1xuIiwiaW1wb3J0IGRzdiBmcm9tIFwiLi9kc3YuanNcIjtcblxudmFyIHRzdiA9IGRzdihcIlxcdFwiKTtcblxuZXhwb3J0IHZhciB0c3ZQYXJzZSA9IHRzdi5wYXJzZTtcbmV4cG9ydCB2YXIgdHN2UGFyc2VSb3dzID0gdHN2LnBhcnNlUm93cztcbmV4cG9ydCB2YXIgdHN2Rm9ybWF0ID0gdHN2LmZvcm1hdDtcbmV4cG9ydCB2YXIgdHN2Rm9ybWF0Qm9keSA9IHRzdi5mb3JtYXRCb2R5O1xuZXhwb3J0IHZhciB0c3ZGb3JtYXRSb3dzID0gdHN2LmZvcm1hdFJvd3M7XG5leHBvcnQgdmFyIHRzdkZvcm1hdFJvdyA9IHRzdi5mb3JtYXRSb3c7XG5leHBvcnQgdmFyIHRzdkZvcm1hdFZhbHVlID0gdHN2LmZvcm1hdFZhbHVlO1xuIiwidmFyIG92ZXJzaG9vdCA9IDEuNzAxNTg7XG5cbmV4cG9ydCB2YXIgYmFja0luID0gKGZ1bmN0aW9uIGN1c3RvbShzKSB7XG4gIHMgPSArcztcblxuICBmdW5jdGlvbiBiYWNrSW4odCkge1xuICAgIHJldHVybiAodCA9ICt0KSAqIHQgKiAocyAqICh0IC0gMSkgKyB0KTtcbiAgfVxuXG4gIGJhY2tJbi5vdmVyc2hvb3QgPSBjdXN0b207XG5cbiAgcmV0dXJuIGJhY2tJbjtcbn0pKG92ZXJzaG9vdCk7XG5cbmV4cG9ydCB2YXIgYmFja091dCA9IChmdW5jdGlvbiBjdXN0b20ocykge1xuICBzID0gK3M7XG5cbiAgZnVuY3Rpb24gYmFja091dCh0KSB7XG4gICAgcmV0dXJuIC0tdCAqIHQgKiAoKHQgKyAxKSAqIHMgKyB0KSArIDE7XG4gIH1cblxuICBiYWNrT3V0Lm92ZXJzaG9vdCA9IGN1c3RvbTtcblxuICByZXR1cm4gYmFja091dDtcbn0pKG92ZXJzaG9vdCk7XG5cbmV4cG9ydCB2YXIgYmFja0luT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShzKSB7XG4gIHMgPSArcztcblxuICBmdW5jdGlvbiBiYWNrSW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgKj0gMikgPCAxID8gdCAqIHQgKiAoKHMgKyAxKSAqIHQgLSBzKSA6ICh0IC09IDIpICogdCAqICgocyArIDEpICogdCArIHMpICsgMikgLyAyO1xuICB9XG5cbiAgYmFja0luT3V0Lm92ZXJzaG9vdCA9IGN1c3RvbTtcblxuICByZXR1cm4gYmFja0luT3V0O1xufSkob3ZlcnNob290KTtcbiIsInZhciBiMSA9IDQgLyAxMSxcbiAgICBiMiA9IDYgLyAxMSxcbiAgICBiMyA9IDggLyAxMSxcbiAgICBiNCA9IDMgLyA0LFxuICAgIGI1ID0gOSAvIDExLFxuICAgIGI2ID0gMTAgLyAxMSxcbiAgICBiNyA9IDE1IC8gMTYsXG4gICAgYjggPSAyMSAvIDIyLFxuICAgIGI5ID0gNjMgLyA2NCxcbiAgICBiMCA9IDEgLyBiMSAvIGIxO1xuXG5leHBvcnQgZnVuY3Rpb24gYm91bmNlSW4odCkge1xuICByZXR1cm4gMSAtIGJvdW5jZU91dCgxIC0gdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBib3VuY2VPdXQodCkge1xuICByZXR1cm4gKHQgPSArdCkgPCBiMSA/IGIwICogdCAqIHQgOiB0IDwgYjMgPyBiMCAqICh0IC09IGIyKSAqIHQgKyBiNCA6IHQgPCBiNiA/IGIwICogKHQgLT0gYjUpICogdCArIGI3IDogYjAgKiAodCAtPSBiOCkgKiB0ICsgYjk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBib3VuY2VJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IDEgLSBib3VuY2VPdXQoMSAtIHQpIDogYm91bmNlT3V0KHQgLSAxKSArIDEpIC8gMjtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBjaXJjbGVJbih0KSB7XG4gIHJldHVybiAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaXJjbGVPdXQodCkge1xuICByZXR1cm4gTWF0aC5zcXJ0KDEgLSAtLXQgKiB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZUluT3V0KHQpIHtcbiAgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gMSAtIE1hdGguc3FydCgxIC0gdCAqIHQpIDogTWF0aC5zcXJ0KDEgLSAodCAtPSAyKSAqIHQpICsgMSkgLyAyO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGN1YmljSW4odCkge1xuICByZXR1cm4gdCAqIHQgKiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNPdXQodCkge1xuICByZXR1cm4gLS10ICogdCAqIHQgKyAxO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3ViaWNJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHQgKiB0ICogdCA6ICh0IC09IDIpICogdCAqIHQgKyAyKSAvIDI7XG59XG4iLCJpbXBvcnQge3RwbXR9IGZyb20gXCIuL21hdGguanNcIjtcblxudmFyIHRhdSA9IDIgKiBNYXRoLlBJLFxuICAgIGFtcGxpdHVkZSA9IDEsXG4gICAgcGVyaW9kID0gMC4zO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNJbiA9IChmdW5jdGlvbiBjdXN0b20oYSwgcCkge1xuICB2YXIgcyA9IE1hdGguYXNpbigxIC8gKGEgPSBNYXRoLm1heCgxLCBhKSkpICogKHAgLz0gdGF1KTtcblxuICBmdW5jdGlvbiBlbGFzdGljSW4odCkge1xuICAgIHJldHVybiBhICogdHBtdCgtKC0tdCkpICogTWF0aC5zaW4oKHMgLSB0KSAvIHApO1xuICB9XG5cbiAgZWxhc3RpY0luLmFtcGxpdHVkZSA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIGN1c3RvbShhLCBwICogdGF1KTsgfTtcbiAgZWxhc3RpY0luLnBlcmlvZCA9IGZ1bmN0aW9uKHApIHsgcmV0dXJuIGN1c3RvbShhLCBwKTsgfTtcblxuICByZXR1cm4gZWxhc3RpY0luO1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNPdXQgPSAoZnVuY3Rpb24gY3VzdG9tKGEsIHApIHtcbiAgdmFyIHMgPSBNYXRoLmFzaW4oMSAvIChhID0gTWF0aC5tYXgoMSwgYSkpKSAqIChwIC89IHRhdSk7XG5cbiAgZnVuY3Rpb24gZWxhc3RpY091dCh0KSB7XG4gICAgcmV0dXJuIDEgLSBhICogdHBtdCh0ID0gK3QpICogTWF0aC5zaW4oKHQgKyBzKSAvIHApO1xuICB9XG5cbiAgZWxhc3RpY091dC5hbXBsaXR1ZGUgPSBmdW5jdGlvbihhKSB7IHJldHVybiBjdXN0b20oYSwgcCAqIHRhdSk7IH07XG4gIGVsYXN0aWNPdXQucGVyaW9kID0gZnVuY3Rpb24ocCkgeyByZXR1cm4gY3VzdG9tKGEsIHApOyB9O1xuXG4gIHJldHVybiBlbGFzdGljT3V0O1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuXG5leHBvcnQgdmFyIGVsYXN0aWNJbk91dCA9IChmdW5jdGlvbiBjdXN0b20oYSwgcCkge1xuICB2YXIgcyA9IE1hdGguYXNpbigxIC8gKGEgPSBNYXRoLm1heCgxLCBhKSkpICogKHAgLz0gdGF1KTtcblxuICBmdW5jdGlvbiBlbGFzdGljSW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgPSB0ICogMiAtIDEpIDwgMFxuICAgICAgICA/IGEgKiB0cG10KC10KSAqIE1hdGguc2luKChzIC0gdCkgLyBwKVxuICAgICAgICA6IDIgLSBhICogdHBtdCh0KSAqIE1hdGguc2luKChzICsgdCkgLyBwKSkgLyAyO1xuICB9XG5cbiAgZWxhc3RpY0luT3V0LmFtcGxpdHVkZSA9IGZ1bmN0aW9uKGEpIHsgcmV0dXJuIGN1c3RvbShhLCBwICogdGF1KTsgfTtcbiAgZWxhc3RpY0luT3V0LnBlcmlvZCA9IGZ1bmN0aW9uKHApIHsgcmV0dXJuIGN1c3RvbShhLCBwKTsgfTtcblxuICByZXR1cm4gZWxhc3RpY0luT3V0O1xufSkoYW1wbGl0dWRlLCBwZXJpb2QpO1xuIiwiaW1wb3J0IHt0cG10fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBJbih0KSB7XG4gIHJldHVybiB0cG10KDEgLSArdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBPdXQodCkge1xuICByZXR1cm4gMSAtIHRwbXQodCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHRwbXQoMSAtIHQpIDogMiAtIHRwbXQodCAtIDEpKSAvIDI7XG59XG4iLCJleHBvcnQge1xuICBsaW5lYXIgYXMgZWFzZUxpbmVhclxufSBmcm9tIFwiLi9saW5lYXIuanNcIjtcblxuZXhwb3J0IHtcbiAgcXVhZEluT3V0IGFzIGVhc2VRdWFkLFxuICBxdWFkSW4gYXMgZWFzZVF1YWRJbixcbiAgcXVhZE91dCBhcyBlYXNlUXVhZE91dCxcbiAgcXVhZEluT3V0IGFzIGVhc2VRdWFkSW5PdXRcbn0gZnJvbSBcIi4vcXVhZC5qc1wiO1xuXG5leHBvcnQge1xuICBjdWJpY0luT3V0IGFzIGVhc2VDdWJpYyxcbiAgY3ViaWNJbiBhcyBlYXNlQ3ViaWNJbixcbiAgY3ViaWNPdXQgYXMgZWFzZUN1YmljT3V0LFxuICBjdWJpY0luT3V0IGFzIGVhc2VDdWJpY0luT3V0XG59IGZyb20gXCIuL2N1YmljLmpzXCI7XG5cbmV4cG9ydCB7XG4gIHBvbHlJbk91dCBhcyBlYXNlUG9seSxcbiAgcG9seUluIGFzIGVhc2VQb2x5SW4sXG4gIHBvbHlPdXQgYXMgZWFzZVBvbHlPdXQsXG4gIHBvbHlJbk91dCBhcyBlYXNlUG9seUluT3V0XG59IGZyb20gXCIuL3BvbHkuanNcIjtcblxuZXhwb3J0IHtcbiAgc2luSW5PdXQgYXMgZWFzZVNpbixcbiAgc2luSW4gYXMgZWFzZVNpbkluLFxuICBzaW5PdXQgYXMgZWFzZVNpbk91dCxcbiAgc2luSW5PdXQgYXMgZWFzZVNpbkluT3V0XG59IGZyb20gXCIuL3Npbi5qc1wiO1xuXG5leHBvcnQge1xuICBleHBJbk91dCBhcyBlYXNlRXhwLFxuICBleHBJbiBhcyBlYXNlRXhwSW4sXG4gIGV4cE91dCBhcyBlYXNlRXhwT3V0LFxuICBleHBJbk91dCBhcyBlYXNlRXhwSW5PdXRcbn0gZnJvbSBcIi4vZXhwLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGNpcmNsZUluT3V0IGFzIGVhc2VDaXJjbGUsXG4gIGNpcmNsZUluIGFzIGVhc2VDaXJjbGVJbixcbiAgY2lyY2xlT3V0IGFzIGVhc2VDaXJjbGVPdXQsXG4gIGNpcmNsZUluT3V0IGFzIGVhc2VDaXJjbGVJbk91dFxufSBmcm9tIFwiLi9jaXJjbGUuanNcIjtcblxuZXhwb3J0IHtcbiAgYm91bmNlT3V0IGFzIGVhc2VCb3VuY2UsXG4gIGJvdW5jZUluIGFzIGVhc2VCb3VuY2VJbixcbiAgYm91bmNlT3V0IGFzIGVhc2VCb3VuY2VPdXQsXG4gIGJvdW5jZUluT3V0IGFzIGVhc2VCb3VuY2VJbk91dFxufSBmcm9tIFwiLi9ib3VuY2UuanNcIjtcblxuZXhwb3J0IHtcbiAgYmFja0luT3V0IGFzIGVhc2VCYWNrLFxuICBiYWNrSW4gYXMgZWFzZUJhY2tJbixcbiAgYmFja091dCBhcyBlYXNlQmFja091dCxcbiAgYmFja0luT3V0IGFzIGVhc2VCYWNrSW5PdXRcbn0gZnJvbSBcIi4vYmFjay5qc1wiO1xuXG5leHBvcnQge1xuICBlbGFzdGljT3V0IGFzIGVhc2VFbGFzdGljLFxuICBlbGFzdGljSW4gYXMgZWFzZUVsYXN0aWNJbixcbiAgZWxhc3RpY091dCBhcyBlYXNlRWxhc3RpY091dCxcbiAgZWxhc3RpY0luT3V0IGFzIGVhc2VFbGFzdGljSW5PdXRcbn0gZnJvbSBcIi4vZWxhc3RpYy5qc1wiO1xuIiwiZXhwb3J0IGNvbnN0IGxpbmVhciA9IHQgPT4gK3Q7XG4iLCIvLyB0cG10IGlzIHR3byBwb3dlciBtaW51cyB0ZW4gdGltZXMgdCBzY2FsZWQgdG8gWzAsMV1cbmV4cG9ydCBmdW5jdGlvbiB0cG10KHgpIHtcbiAgcmV0dXJuIChNYXRoLnBvdygyLCAtMTAgKiB4KSAtIDAuMDAwOTc2NTYyNSkgKiAxLjAwMDk3NzUxNzEwNjU0OTQ7XG59XG4iLCJ2YXIgZXhwb25lbnQgPSAzO1xuXG5leHBvcnQgdmFyIHBvbHlJbiA9IChmdW5jdGlvbiBjdXN0b20oZSkge1xuICBlID0gK2U7XG5cbiAgZnVuY3Rpb24gcG9seUluKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3codCwgZSk7XG4gIH1cblxuICBwb2x5SW4uZXhwb25lbnQgPSBjdXN0b207XG5cbiAgcmV0dXJuIHBvbHlJbjtcbn0pKGV4cG9uZW50KTtcblxuZXhwb3J0IHZhciBwb2x5T3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShlKSB7XG4gIGUgPSArZTtcblxuICBmdW5jdGlvbiBwb2x5T3V0KHQpIHtcbiAgICByZXR1cm4gMSAtIE1hdGgucG93KDEgLSB0LCBlKTtcbiAgfVxuXG4gIHBvbHlPdXQuZXhwb25lbnQgPSBjdXN0b207XG5cbiAgcmV0dXJuIHBvbHlPdXQ7XG59KShleHBvbmVudCk7XG5cbmV4cG9ydCB2YXIgcG9seUluT3V0ID0gKGZ1bmN0aW9uIGN1c3RvbShlKSB7XG4gIGUgPSArZTtcblxuICBmdW5jdGlvbiBwb2x5SW5PdXQodCkge1xuICAgIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IE1hdGgucG93KHQsIGUpIDogMiAtIE1hdGgucG93KDIgLSB0LCBlKSkgLyAyO1xuICB9XG5cbiAgcG9seUluT3V0LmV4cG9uZW50ID0gY3VzdG9tO1xuXG4gIHJldHVybiBwb2x5SW5PdXQ7XG59KShleHBvbmVudCk7XG4iLCJleHBvcnQgZnVuY3Rpb24gcXVhZEluKHQpIHtcbiAgcmV0dXJuIHQgKiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcXVhZE91dCh0KSB7XG4gIHJldHVybiB0ICogKDIgLSB0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHF1YWRJbk91dCh0KSB7XG4gIHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHQgKiB0IDogLS10ICogKDIgLSB0KSArIDEpIC8gMjtcbn1cbiIsInZhciBwaSA9IE1hdGguUEksXG4gICAgaGFsZlBpID0gcGkgLyAyO1xuXG5leHBvcnQgZnVuY3Rpb24gc2luSW4odCkge1xuICByZXR1cm4gKCt0ID09PSAxKSA/IDEgOiAxIC0gTWF0aC5jb3ModCAqIGhhbGZQaSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaW5PdXQodCkge1xuICByZXR1cm4gTWF0aC5zaW4odCAqIGhhbGZQaSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaW5Jbk91dCh0KSB7XG4gIHJldHVybiAoMSAtIE1hdGguY29zKHBpICogdCkpIC8gMjtcbn1cbiIsImZ1bmN0aW9uIHJlc3BvbnNlQmxvYihyZXNwb25zZSkge1xuICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzICsgXCIgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgcmV0dXJuIHJlc3BvbnNlLmJsb2IoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIGZldGNoKGlucHV0LCBpbml0KS50aGVuKHJlc3BvbnNlQmxvYik7XG59XG4iLCJmdW5jdGlvbiByZXNwb25zZUFycmF5QnVmZmVyKHJlc3BvbnNlKSB7XG4gIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMgKyBcIiBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICByZXR1cm4gcmVzcG9uc2UuYXJyYXlCdWZmZXIoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5wdXQsIGluaXQpIHtcbiAgcmV0dXJuIGZldGNoKGlucHV0LCBpbml0KS50aGVuKHJlc3BvbnNlQXJyYXlCdWZmZXIpO1xufVxuIiwiaW1wb3J0IHtjc3ZQYXJzZSwgZHN2Rm9ybWF0LCB0c3ZQYXJzZX0gZnJvbSBcImQzLWRzdlwiO1xuaW1wb3J0IHRleHQgZnJvbSBcIi4vdGV4dC5qc1wiO1xuXG5mdW5jdGlvbiBkc3ZQYXJzZShwYXJzZSkge1xuICByZXR1cm4gZnVuY3Rpb24oaW5wdXQsIGluaXQsIHJvdykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBpbml0ID09PSBcImZ1bmN0aW9uXCIpIHJvdyA9IGluaXQsIGluaXQgPSB1bmRlZmluZWQ7XG4gICAgcmV0dXJuIHRleHQoaW5wdXQsIGluaXQpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgIHJldHVybiBwYXJzZShyZXNwb25zZSwgcm93KTtcbiAgICB9KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZHN2KGRlbGltaXRlciwgaW5wdXQsIGluaXQsIHJvdykge1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMyAmJiB0eXBlb2YgaW5pdCA9PT0gXCJmdW5jdGlvblwiKSByb3cgPSBpbml0LCBpbml0ID0gdW5kZWZpbmVkO1xuICB2YXIgZm9ybWF0ID0gZHN2Rm9ybWF0KGRlbGltaXRlcik7XG4gIHJldHVybiB0ZXh0KGlucHV0LCBpbml0KS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIGZvcm1hdC5wYXJzZShyZXNwb25zZSwgcm93KTtcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgY3N2ID0gZHN2UGFyc2UoY3N2UGFyc2UpO1xuZXhwb3J0IHZhciB0c3YgPSBkc3ZQYXJzZSh0c3ZQYXJzZSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGltYWdlID0gbmV3IEltYWdlO1xuICAgIGZvciAodmFyIGtleSBpbiBpbml0KSBpbWFnZVtrZXldID0gaW5pdFtrZXldO1xuICAgIGltYWdlLm9uZXJyb3IgPSByZWplY3Q7XG4gICAgaW1hZ2Uub25sb2FkID0gZnVuY3Rpb24oKSB7IHJlc29sdmUoaW1hZ2UpOyB9O1xuICAgIGltYWdlLnNyYyA9IGlucHV0O1xuICB9KTtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBibG9ifSBmcm9tIFwiLi9ibG9iLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgYnVmZmVyfSBmcm9tIFwiLi9idWZmZXIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBkc3YsIGNzdiwgdHN2fSBmcm9tIFwiLi9kc3YuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbWFnZX0gZnJvbSBcIi4vaW1hZ2UuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBqc29ufSBmcm9tIFwiLi9qc29uLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdGV4dH0gZnJvbSBcIi4vdGV4dC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHhtbCwgaHRtbCwgc3ZnfSBmcm9tIFwiLi94bWwuanNcIjtcbiIsImZ1bmN0aW9uIHJlc3BvbnNlSnNvbihyZXNwb25zZSkge1xuICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2Uuc3RhdHVzICsgXCIgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjA0IHx8IHJlc3BvbnNlLnN0YXR1cyA9PT0gMjA1KSByZXR1cm47XG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGlucHV0LCBpbml0KSB7XG4gIHJldHVybiBmZXRjaChpbnB1dCwgaW5pdCkudGhlbihyZXNwb25zZUpzb24pO1xufVxuIiwiZnVuY3Rpb24gcmVzcG9uc2VUZXh0KHJlc3BvbnNlKSB7XG4gIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMgKyBcIiBcIiArIHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICByZXR1cm4gcmVzcG9uc2UudGV4dCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnB1dCwgaW5pdCkge1xuICByZXR1cm4gZmV0Y2goaW5wdXQsIGluaXQpLnRoZW4ocmVzcG9uc2VUZXh0KTtcbn1cbiIsImltcG9ydCB0ZXh0IGZyb20gXCIuL3RleHQuanNcIjtcblxuZnVuY3Rpb24gcGFyc2VyKHR5cGUpIHtcbiAgcmV0dXJuIChpbnB1dCwgaW5pdCkgPT4gdGV4dChpbnB1dCwgaW5pdClcbiAgICAudGhlbih0ZXh0ID0+IChuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcodGV4dCwgdHlwZSkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBwYXJzZXIoXCJhcHBsaWNhdGlvbi94bWxcIik7XG5cbmV4cG9ydCB2YXIgaHRtbCA9IHBhcnNlcihcInRleHQvaHRtbFwiKTtcblxuZXhwb3J0IHZhciBzdmcgPSBwYXJzZXIoXCJpbWFnZS9zdmcreG1sXCIpO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgeSkge1xuICB2YXIgbm9kZXMsIHN0cmVuZ3RoID0gMTtcblxuICBpZiAoeCA9PSBudWxsKSB4ID0gMDtcbiAgaWYgKHkgPT0gbnVsbCkgeSA9IDA7XG5cbiAgZnVuY3Rpb24gZm9yY2UoKSB7XG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgIG5vZGUsXG4gICAgICAgIHN4ID0gMCxcbiAgICAgICAgc3kgPSAwO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBzeCArPSBub2RlLngsIHN5ICs9IG5vZGUueTtcbiAgICB9XG5cbiAgICBmb3IgKHN4ID0gKHN4IC8gbiAtIHgpICogc3RyZW5ndGgsIHN5ID0gKHN5IC8gbiAtIHkpICogc3RyZW5ndGgsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBub2RlID0gbm9kZXNbaV0sIG5vZGUueCAtPSBzeCwgbm9kZS55IC09IHN5O1xuICAgIH1cbiAgfVxuXG4gIGZvcmNlLmluaXRpYWxpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgbm9kZXMgPSBfO1xuICB9O1xuXG4gIGZvcmNlLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9ICtfLCBmb3JjZSkgOiB4O1xuICB9O1xuXG4gIGZvcmNlLnkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9ICtfLCBmb3JjZSkgOiB5O1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gK18sIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImltcG9ydCB7cXVhZHRyZWV9IGZyb20gXCJkMy1xdWFkdHJlZVwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgamlnZ2xlIGZyb20gXCIuL2ppZ2dsZS5qc1wiO1xuXG5mdW5jdGlvbiB4KGQpIHtcbiAgcmV0dXJuIGQueCArIGQudng7XG59XG5cbmZ1bmN0aW9uIHkoZCkge1xuICByZXR1cm4gZC55ICsgZC52eTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFkaXVzKSB7XG4gIHZhciBub2RlcyxcbiAgICAgIHJhZGlpLFxuICAgICAgcmFuZG9tLFxuICAgICAgc3RyZW5ndGggPSAxLFxuICAgICAgaXRlcmF0aW9ucyA9IDE7XG5cbiAgaWYgKHR5cGVvZiByYWRpdXMgIT09IFwiZnVuY3Rpb25cIikgcmFkaXVzID0gY29uc3RhbnQocmFkaXVzID09IG51bGwgPyAxIDogK3JhZGl1cyk7XG5cbiAgZnVuY3Rpb24gZm9yY2UoKSB7XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgIHRyZWUsXG4gICAgICAgIG5vZGUsXG4gICAgICAgIHhpLFxuICAgICAgICB5aSxcbiAgICAgICAgcmksXG4gICAgICAgIHJpMjtcblxuICAgIGZvciAodmFyIGsgPSAwOyBrIDwgaXRlcmF0aW9uczsgKytrKSB7XG4gICAgICB0cmVlID0gcXVhZHRyZWUobm9kZXMsIHgsIHkpLnZpc2l0QWZ0ZXIocHJlcGFyZSk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgICAgcmkgPSByYWRpaVtub2RlLmluZGV4XSwgcmkyID0gcmkgKiByaTtcbiAgICAgICAgeGkgPSBub2RlLnggKyBub2RlLnZ4O1xuICAgICAgICB5aSA9IG5vZGUueSArIG5vZGUudnk7XG4gICAgICAgIHRyZWUudmlzaXQoYXBwbHkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFwcGx5KHF1YWQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgICB2YXIgZGF0YSA9IHF1YWQuZGF0YSwgcmogPSBxdWFkLnIsIHIgPSByaSArIHJqO1xuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgaWYgKGRhdGEuaW5kZXggPiBub2RlLmluZGV4KSB7XG4gICAgICAgICAgdmFyIHggPSB4aSAtIGRhdGEueCAtIGRhdGEudngsXG4gICAgICAgICAgICAgIHkgPSB5aSAtIGRhdGEueSAtIGRhdGEudnksXG4gICAgICAgICAgICAgIGwgPSB4ICogeCArIHkgKiB5O1xuICAgICAgICAgIGlmIChsIDwgciAqIHIpIHtcbiAgICAgICAgICAgIGlmICh4ID09PSAwKSB4ID0gamlnZ2xlKHJhbmRvbSksIGwgKz0geCAqIHg7XG4gICAgICAgICAgICBpZiAoeSA9PT0gMCkgeSA9IGppZ2dsZShyYW5kb20pLCBsICs9IHkgKiB5O1xuICAgICAgICAgICAgbCA9IChyIC0gKGwgPSBNYXRoLnNxcnQobCkpKSAvIGwgKiBzdHJlbmd0aDtcbiAgICAgICAgICAgIG5vZGUudnggKz0gKHggKj0gbCkgKiAociA9IChyaiAqPSByaikgLyAocmkyICsgcmopKTtcbiAgICAgICAgICAgIG5vZGUudnkgKz0gKHkgKj0gbCkgKiByO1xuICAgICAgICAgICAgZGF0YS52eCAtPSB4ICogKHIgPSAxIC0gcik7XG4gICAgICAgICAgICBkYXRhLnZ5IC09IHkgKiByO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICByZXR1cm4geDAgPiB4aSArIHIgfHwgeDEgPCB4aSAtIHIgfHwgeTAgPiB5aSArIHIgfHwgeTEgPCB5aSAtIHI7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcHJlcGFyZShxdWFkKSB7XG4gICAgaWYgKHF1YWQuZGF0YSkgcmV0dXJuIHF1YWQuciA9IHJhZGlpW3F1YWQuZGF0YS5pbmRleF07XG4gICAgZm9yICh2YXIgaSA9IHF1YWQuciA9IDA7IGkgPCA0OyArK2kpIHtcbiAgICAgIGlmIChxdWFkW2ldICYmIHF1YWRbaV0uciA+IHF1YWQucikge1xuICAgICAgICBxdWFkLnIgPSBxdWFkW2ldLnI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGgsIG5vZGU7XG4gICAgcmFkaWkgPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgbm9kZSA9IG5vZGVzW2ldLCByYWRpaVtub2RlLmluZGV4XSA9ICtyYWRpdXMobm9kZSwgaSwgbm9kZXMpO1xuICB9XG5cbiAgZm9yY2UuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKF9ub2RlcywgX3JhbmRvbSkge1xuICAgIG5vZGVzID0gX25vZGVzO1xuICAgIHJhbmRvbSA9IF9yYW5kb207XG4gICAgaW5pdGlhbGl6ZSgpO1xuICB9O1xuXG4gIGZvcmNlLml0ZXJhdGlvbnMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaXRlcmF0aW9ucyA9ICtfLCBmb3JjZSkgOiBpdGVyYXRpb25zO1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gK18sIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIGZvcmNlLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYWRpdXMgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiByYWRpdXM7XG4gIH07XG5cbiAgcmV0dXJuIGZvcmNlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZm9yY2VDZW50ZXJ9IGZyb20gXCIuL2NlbnRlci5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlQ29sbGlkZX0gZnJvbSBcIi4vY29sbGlkZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlTGlua30gZnJvbSBcIi4vbGluay5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlTWFueUJvZHl9IGZyb20gXCIuL21hbnlCb2R5LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZm9yY2VSYWRpYWx9IGZyb20gXCIuL3JhZGlhbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlU2ltdWxhdGlvbn0gZnJvbSBcIi4vc2ltdWxhdGlvbi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlWH0gZnJvbSBcIi4veC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcmNlWX0gZnJvbSBcIi4veS5qc1wiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFuZG9tKSB7XG4gIHJldHVybiAocmFuZG9tKCkgLSAwLjUpICogMWUtNjtcbn1cbiIsIi8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpbmVhcl9jb25ncnVlbnRpYWxfZ2VuZXJhdG9yI1BhcmFtZXRlcnNfaW5fY29tbW9uX3VzZVxuY29uc3QgYSA9IDE2NjQ1MjU7XG5jb25zdCBjID0gMTAxMzkwNDIyMztcbmNvbnN0IG0gPSA0Mjk0OTY3Mjk2OyAvLyAyXjMyXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICBsZXQgcyA9IDE7XG4gIHJldHVybiAoKSA9PiAocyA9IChhICogcyArIGMpICUgbSkgLyBtO1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgamlnZ2xlIGZyb20gXCIuL2ppZ2dsZS5qc1wiO1xuXG5mdW5jdGlvbiBpbmRleChkKSB7XG4gIHJldHVybiBkLmluZGV4O1xufVxuXG5mdW5jdGlvbiBmaW5kKG5vZGVCeUlkLCBub2RlSWQpIHtcbiAgdmFyIG5vZGUgPSBub2RlQnlJZC5nZXQobm9kZUlkKTtcbiAgaWYgKCFub2RlKSB0aHJvdyBuZXcgRXJyb3IoXCJub2RlIG5vdCBmb3VuZDogXCIgKyBub2RlSWQpO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obGlua3MpIHtcbiAgdmFyIGlkID0gaW5kZXgsXG4gICAgICBzdHJlbmd0aCA9IGRlZmF1bHRTdHJlbmd0aCxcbiAgICAgIHN0cmVuZ3RocyxcbiAgICAgIGRpc3RhbmNlID0gY29uc3RhbnQoMzApLFxuICAgICAgZGlzdGFuY2VzLFxuICAgICAgbm9kZXMsXG4gICAgICBjb3VudCxcbiAgICAgIGJpYXMsXG4gICAgICByYW5kb20sXG4gICAgICBpdGVyYXRpb25zID0gMTtcblxuICBpZiAobGlua3MgPT0gbnVsbCkgbGlua3MgPSBbXTtcblxuICBmdW5jdGlvbiBkZWZhdWx0U3RyZW5ndGgobGluaykge1xuICAgIHJldHVybiAxIC8gTWF0aC5taW4oY291bnRbbGluay5zb3VyY2UuaW5kZXhdLCBjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBrID0gMCwgbiA9IGxpbmtzLmxlbmd0aDsgayA8IGl0ZXJhdGlvbnM7ICsraykge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxpbmssIHNvdXJjZSwgdGFyZ2V0LCB4LCB5LCBsLCBiOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGxpbmsgPSBsaW5rc1tpXSwgc291cmNlID0gbGluay5zb3VyY2UsIHRhcmdldCA9IGxpbmsudGFyZ2V0O1xuICAgICAgICB4ID0gdGFyZ2V0LnggKyB0YXJnZXQudnggLSBzb3VyY2UueCAtIHNvdXJjZS52eCB8fCBqaWdnbGUocmFuZG9tKTtcbiAgICAgICAgeSA9IHRhcmdldC55ICsgdGFyZ2V0LnZ5IC0gc291cmNlLnkgLSBzb3VyY2UudnkgfHwgamlnZ2xlKHJhbmRvbSk7XG4gICAgICAgIGwgPSBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7XG4gICAgICAgIGwgPSAobCAtIGRpc3RhbmNlc1tpXSkgLyBsICogYWxwaGEgKiBzdHJlbmd0aHNbaV07XG4gICAgICAgIHggKj0gbCwgeSAqPSBsO1xuICAgICAgICB0YXJnZXQudnggLT0geCAqIChiID0gYmlhc1tpXSk7XG4gICAgICAgIHRhcmdldC52eSAtPSB5ICogYjtcbiAgICAgICAgc291cmNlLnZ4ICs9IHggKiAoYiA9IDEgLSBiKTtcbiAgICAgICAgc291cmNlLnZ5ICs9IHkgKiBiO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuXG4gICAgdmFyIGksXG4gICAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgIG0gPSBsaW5rcy5sZW5ndGgsXG4gICAgICAgIG5vZGVCeUlkID0gbmV3IE1hcChub2Rlcy5tYXAoKGQsIGkpID0+IFtpZChkLCBpLCBub2RlcyksIGRdKSksXG4gICAgICAgIGxpbms7XG5cbiAgICBmb3IgKGkgPSAwLCBjb3VudCA9IG5ldyBBcnJheShuKTsgaSA8IG07ICsraSkge1xuICAgICAgbGluayA9IGxpbmtzW2ldLCBsaW5rLmluZGV4ID0gaTtcbiAgICAgIGlmICh0eXBlb2YgbGluay5zb3VyY2UgIT09IFwib2JqZWN0XCIpIGxpbmsuc291cmNlID0gZmluZChub2RlQnlJZCwgbGluay5zb3VyY2UpO1xuICAgICAgaWYgKHR5cGVvZiBsaW5rLnRhcmdldCAhPT0gXCJvYmplY3RcIikgbGluay50YXJnZXQgPSBmaW5kKG5vZGVCeUlkLCBsaW5rLnRhcmdldCk7XG4gICAgICBjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0gPSAoY291bnRbbGluay5zb3VyY2UuaW5kZXhdIHx8IDApICsgMTtcbiAgICAgIGNvdW50W2xpbmsudGFyZ2V0LmluZGV4XSA9IChjb3VudFtsaW5rLnRhcmdldC5pbmRleF0gfHwgMCkgKyAxO1xuICAgIH1cblxuICAgIGZvciAoaSA9IDAsIGJpYXMgPSBuZXcgQXJyYXkobSk7IGkgPCBtOyArK2kpIHtcbiAgICAgIGxpbmsgPSBsaW5rc1tpXSwgYmlhc1tpXSA9IGNvdW50W2xpbmsuc291cmNlLmluZGV4XSAvIChjb3VudFtsaW5rLnNvdXJjZS5pbmRleF0gKyBjb3VudFtsaW5rLnRhcmdldC5pbmRleF0pO1xuICAgIH1cblxuICAgIHN0cmVuZ3RocyA9IG5ldyBBcnJheShtKSwgaW5pdGlhbGl6ZVN0cmVuZ3RoKCk7XG4gICAgZGlzdGFuY2VzID0gbmV3IEFycmF5KG0pLCBpbml0aWFsaXplRGlzdGFuY2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemVTdHJlbmd0aCgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGxpbmtzLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgc3RyZW5ndGhzW2ldID0gK3N0cmVuZ3RoKGxpbmtzW2ldLCBpLCBsaW5rcyk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZURpc3RhbmNlKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcblxuICAgIGZvciAodmFyIGkgPSAwLCBuID0gbGlua3MubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICBkaXN0YW5jZXNbaV0gPSArZGlzdGFuY2UobGlua3NbaV0sIGksIGxpbmtzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oX25vZGVzLCBfcmFuZG9tKSB7XG4gICAgbm9kZXMgPSBfbm9kZXM7XG4gICAgcmFuZG9tID0gX3JhbmRvbTtcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2UubGlua3MgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobGlua3MgPSBfLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IGxpbmtzO1xuICB9O1xuXG4gIGZvcmNlLmlkID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGlkID0gXywgZm9yY2UpIDogaWQ7XG4gIH07XG5cbiAgZm9yY2UuaXRlcmF0aW9ucyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpdGVyYXRpb25zID0gK18sIGZvcmNlKSA6IGl0ZXJhdGlvbnM7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZVN0cmVuZ3RoKCksIGZvcmNlKSA6IHN0cmVuZ3RoO1xuICB9O1xuXG4gIGZvcmNlLmRpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRpc3RhbmNlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemVEaXN0YW5jZSgpLCBmb3JjZSkgOiBkaXN0YW5jZTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQge3F1YWR0cmVlfSBmcm9tIFwiZDMtcXVhZHRyZWVcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IGppZ2dsZSBmcm9tIFwiLi9qaWdnbGUuanNcIjtcbmltcG9ydCB7eCwgeX0gZnJvbSBcIi4vc2ltdWxhdGlvbi5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG5vZGVzLFxuICAgICAgbm9kZSxcbiAgICAgIHJhbmRvbSxcbiAgICAgIGFscGhhLFxuICAgICAgc3RyZW5ndGggPSBjb25zdGFudCgtMzApLFxuICAgICAgc3RyZW5ndGhzLFxuICAgICAgZGlzdGFuY2VNaW4yID0gMSxcbiAgICAgIGRpc3RhbmNlTWF4MiA9IEluZmluaXR5LFxuICAgICAgdGhldGEyID0gMC44MTtcblxuICBmdW5jdGlvbiBmb3JjZShfKSB7XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGgsIHRyZWUgPSBxdWFkdHJlZShub2RlcywgeCwgeSkudmlzaXRBZnRlcihhY2N1bXVsYXRlKTtcbiAgICBmb3IgKGFscGhhID0gXywgaSA9IDA7IGkgPCBuOyArK2kpIG5vZGUgPSBub2Rlc1tpXSwgdHJlZS52aXNpdChhcHBseSk7XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTtcbiAgICBzdHJlbmd0aHMgPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgbm9kZSA9IG5vZGVzW2ldLCBzdHJlbmd0aHNbbm9kZS5pbmRleF0gPSArc3RyZW5ndGgobm9kZSwgaSwgbm9kZXMpO1xuICB9XG5cbiAgZnVuY3Rpb24gYWNjdW11bGF0ZShxdWFkKSB7XG4gICAgdmFyIHN0cmVuZ3RoID0gMCwgcSwgYywgd2VpZ2h0ID0gMCwgeCwgeSwgaTtcblxuICAgIC8vIEZvciBpbnRlcm5hbCBub2RlcywgYWNjdW11bGF0ZSBmb3JjZXMgZnJvbSBjaGlsZCBxdWFkcmFudHMuXG4gICAgaWYgKHF1YWQubGVuZ3RoKSB7XG4gICAgICBmb3IgKHggPSB5ID0gaSA9IDA7IGkgPCA0OyArK2kpIHtcbiAgICAgICAgaWYgKChxID0gcXVhZFtpXSkgJiYgKGMgPSBNYXRoLmFicyhxLnZhbHVlKSkpIHtcbiAgICAgICAgICBzdHJlbmd0aCArPSBxLnZhbHVlLCB3ZWlnaHQgKz0gYywgeCArPSBjICogcS54LCB5ICs9IGMgKiBxLnk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHF1YWQueCA9IHggLyB3ZWlnaHQ7XG4gICAgICBxdWFkLnkgPSB5IC8gd2VpZ2h0O1xuICAgIH1cblxuICAgIC8vIEZvciBsZWFmIG5vZGVzLCBhY2N1bXVsYXRlIGZvcmNlcyBmcm9tIGNvaW5jaWRlbnQgcXVhZHJhbnRzLlxuICAgIGVsc2Uge1xuICAgICAgcSA9IHF1YWQ7XG4gICAgICBxLnggPSBxLmRhdGEueDtcbiAgICAgIHEueSA9IHEuZGF0YS55O1xuICAgICAgZG8gc3RyZW5ndGggKz0gc3RyZW5ndGhzW3EuZGF0YS5pbmRleF07XG4gICAgICB3aGlsZSAocSA9IHEubmV4dCk7XG4gICAgfVxuXG4gICAgcXVhZC52YWx1ZSA9IHN0cmVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwbHkocXVhZCwgeDEsIF8sIHgyKSB7XG4gICAgaWYgKCFxdWFkLnZhbHVlKSByZXR1cm4gdHJ1ZTtcblxuICAgIHZhciB4ID0gcXVhZC54IC0gbm9kZS54LFxuICAgICAgICB5ID0gcXVhZC55IC0gbm9kZS55LFxuICAgICAgICB3ID0geDIgLSB4MSxcbiAgICAgICAgbCA9IHggKiB4ICsgeSAqIHk7XG5cbiAgICAvLyBBcHBseSB0aGUgQmFybmVzLUh1dCBhcHByb3hpbWF0aW9uIGlmIHBvc3NpYmxlLlxuICAgIC8vIExpbWl0IGZvcmNlcyBmb3IgdmVyeSBjbG9zZSBub2RlczsgcmFuZG9taXplIGRpcmVjdGlvbiBpZiBjb2luY2lkZW50LlxuICAgIGlmICh3ICogdyAvIHRoZXRhMiA8IGwpIHtcbiAgICAgIGlmIChsIDwgZGlzdGFuY2VNYXgyKSB7XG4gICAgICAgIGlmICh4ID09PSAwKSB4ID0gamlnZ2xlKHJhbmRvbSksIGwgKz0geCAqIHg7XG4gICAgICAgIGlmICh5ID09PSAwKSB5ID0gamlnZ2xlKHJhbmRvbSksIGwgKz0geSAqIHk7XG4gICAgICAgIGlmIChsIDwgZGlzdGFuY2VNaW4yKSBsID0gTWF0aC5zcXJ0KGRpc3RhbmNlTWluMiAqIGwpO1xuICAgICAgICBub2RlLnZ4ICs9IHggKiBxdWFkLnZhbHVlICogYWxwaGEgLyBsO1xuICAgICAgICBub2RlLnZ5ICs9IHkgKiBxdWFkLnZhbHVlICogYWxwaGEgLyBsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgLy8gT3RoZXJ3aXNlLCBwcm9jZXNzIHBvaW50cyBkaXJlY3RseS5cbiAgICBlbHNlIGlmIChxdWFkLmxlbmd0aCB8fCBsID49IGRpc3RhbmNlTWF4MikgcmV0dXJuO1xuXG4gICAgLy8gTGltaXQgZm9yY2VzIGZvciB2ZXJ5IGNsb3NlIG5vZGVzOyByYW5kb21pemUgZGlyZWN0aW9uIGlmIGNvaW5jaWRlbnQuXG4gICAgaWYgKHF1YWQuZGF0YSAhPT0gbm9kZSB8fCBxdWFkLm5leHQpIHtcbiAgICAgIGlmICh4ID09PSAwKSB4ID0gamlnZ2xlKHJhbmRvbSksIGwgKz0geCAqIHg7XG4gICAgICBpZiAoeSA9PT0gMCkgeSA9IGppZ2dsZShyYW5kb20pLCBsICs9IHkgKiB5O1xuICAgICAgaWYgKGwgPCBkaXN0YW5jZU1pbjIpIGwgPSBNYXRoLnNxcnQoZGlzdGFuY2VNaW4yICogbCk7XG4gICAgfVxuXG4gICAgZG8gaWYgKHF1YWQuZGF0YSAhPT0gbm9kZSkge1xuICAgICAgdyA9IHN0cmVuZ3Roc1txdWFkLmRhdGEuaW5kZXhdICogYWxwaGEgLyBsO1xuICAgICAgbm9kZS52eCArPSB4ICogdztcbiAgICAgIG5vZGUudnkgKz0geSAqIHc7XG4gICAgfSB3aGlsZSAocXVhZCA9IHF1YWQubmV4dCk7XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oX25vZGVzLCBfcmFuZG9tKSB7XG4gICAgbm9kZXMgPSBfbm9kZXM7XG4gICAgcmFuZG9tID0gX3JhbmRvbTtcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS5kaXN0YW5jZU1pbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkaXN0YW5jZU1pbjIgPSBfICogXywgZm9yY2UpIDogTWF0aC5zcXJ0KGRpc3RhbmNlTWluMik7XG4gIH07XG5cbiAgZm9yY2UuZGlzdGFuY2VNYXggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGlzdGFuY2VNYXgyID0gXyAqIF8sIGZvcmNlKSA6IE1hdGguc3FydChkaXN0YW5jZU1heDIpO1xuICB9O1xuXG4gIGZvcmNlLnRoZXRhID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoZXRhMiA9IF8gKiBfLCBmb3JjZSkgOiBNYXRoLnNxcnQodGhldGEyKTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFkaXVzLCB4LCB5KSB7XG4gIHZhciBub2RlcyxcbiAgICAgIHN0cmVuZ3RoID0gY29uc3RhbnQoMC4xKSxcbiAgICAgIHN0cmVuZ3RocyxcbiAgICAgIHJhZGl1c2VzO1xuXG4gIGlmICh0eXBlb2YgcmFkaXVzICE9PSBcImZ1bmN0aW9uXCIpIHJhZGl1cyA9IGNvbnN0YW50KCtyYWRpdXMpO1xuICBpZiAoeCA9PSBudWxsKSB4ID0gMDtcbiAgaWYgKHkgPT0gbnVsbCkgeSA9IDA7XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG5vZGVzLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIG5vZGUgPSBub2Rlc1tpXSxcbiAgICAgICAgICBkeCA9IG5vZGUueCAtIHggfHwgMWUtNixcbiAgICAgICAgICBkeSA9IG5vZGUueSAtIHkgfHwgMWUtNixcbiAgICAgICAgICByID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KSxcbiAgICAgICAgICBrID0gKHJhZGl1c2VzW2ldIC0gcikgKiBzdHJlbmd0aHNbaV0gKiBhbHBoYSAvIHI7XG4gICAgICBub2RlLnZ4ICs9IGR4ICogaztcbiAgICAgIG5vZGUudnkgKz0gZHkgKiBrO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgaWYgKCFub2RlcykgcmV0dXJuO1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoO1xuICAgIHN0cmVuZ3RocyA9IG5ldyBBcnJheShuKTtcbiAgICByYWRpdXNlcyA9IG5ldyBBcnJheShuKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICByYWRpdXNlc1tpXSA9ICtyYWRpdXMobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICAgIHN0cmVuZ3Roc1tpXSA9IGlzTmFOKHJhZGl1c2VzW2ldKSA/IDAgOiArc3RyZW5ndGgobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXywgaW5pdGlhbGl6ZSgpO1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UucmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBpbml0aWFsaXplKCksIGZvcmNlKSA6IHJhZGl1cztcbiAgfTtcblxuICBmb3JjZS54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSArXywgZm9yY2UpIDogeDtcbiAgfTtcblxuICBmb3JjZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSArXywgZm9yY2UpIDogeTtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQge2Rpc3BhdGNofSBmcm9tIFwiZDMtZGlzcGF0Y2hcIjtcbmltcG9ydCB7dGltZXJ9IGZyb20gXCJkMy10aW1lclwiO1xuaW1wb3J0IGxjZyBmcm9tIFwiLi9sY2cuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHgoZCkge1xuICByZXR1cm4gZC54O1xufVxuXG5leHBvcnQgZnVuY3Rpb24geShkKSB7XG4gIHJldHVybiBkLnk7XG59XG5cbnZhciBpbml0aWFsUmFkaXVzID0gMTAsXG4gICAgaW5pdGlhbEFuZ2xlID0gTWF0aC5QSSAqICgzIC0gTWF0aC5zcXJ0KDUpKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZXMpIHtcbiAgdmFyIHNpbXVsYXRpb24sXG4gICAgICBhbHBoYSA9IDEsXG4gICAgICBhbHBoYU1pbiA9IDAuMDAxLFxuICAgICAgYWxwaGFEZWNheSA9IDEgLSBNYXRoLnBvdyhhbHBoYU1pbiwgMSAvIDMwMCksXG4gICAgICBhbHBoYVRhcmdldCA9IDAsXG4gICAgICB2ZWxvY2l0eURlY2F5ID0gMC42LFxuICAgICAgZm9yY2VzID0gbmV3IE1hcCgpLFxuICAgICAgc3RlcHBlciA9IHRpbWVyKHN0ZXApLFxuICAgICAgZXZlbnQgPSBkaXNwYXRjaChcInRpY2tcIiwgXCJlbmRcIiksXG4gICAgICByYW5kb20gPSBsY2coKTtcblxuICBpZiAobm9kZXMgPT0gbnVsbCkgbm9kZXMgPSBbXTtcblxuICBmdW5jdGlvbiBzdGVwKCkge1xuICAgIHRpY2soKTtcbiAgICBldmVudC5jYWxsKFwidGlja1wiLCBzaW11bGF0aW9uKTtcbiAgICBpZiAoYWxwaGEgPCBhbHBoYU1pbikge1xuICAgICAgc3RlcHBlci5zdG9wKCk7XG4gICAgICBldmVudC5jYWxsKFwiZW5kXCIsIHNpbXVsYXRpb24pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRpY2soaXRlcmF0aW9ucykge1xuICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLCBub2RlO1xuXG4gICAgaWYgKGl0ZXJhdGlvbnMgPT09IHVuZGVmaW5lZCkgaXRlcmF0aW9ucyA9IDE7XG5cbiAgICBmb3IgKHZhciBrID0gMDsgayA8IGl0ZXJhdGlvbnM7ICsraykge1xuICAgICAgYWxwaGEgKz0gKGFscGhhVGFyZ2V0IC0gYWxwaGEpICogYWxwaGFEZWNheTtcblxuICAgICAgZm9yY2VzLmZvckVhY2goZnVuY3Rpb24oZm9yY2UpIHtcbiAgICAgICAgZm9yY2UoYWxwaGEpO1xuICAgICAgfSk7XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICBpZiAobm9kZS5meCA9PSBudWxsKSBub2RlLnggKz0gbm9kZS52eCAqPSB2ZWxvY2l0eURlY2F5O1xuICAgICAgICBlbHNlIG5vZGUueCA9IG5vZGUuZngsIG5vZGUudnggPSAwO1xuICAgICAgICBpZiAobm9kZS5meSA9PSBudWxsKSBub2RlLnkgKz0gbm9kZS52eSAqPSB2ZWxvY2l0eURlY2F5O1xuICAgICAgICBlbHNlIG5vZGUueSA9IG5vZGUuZnksIG5vZGUudnkgPSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzaW11bGF0aW9uO1xuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZU5vZGVzKCkge1xuICAgIGZvciAodmFyIGkgPSAwLCBuID0gbm9kZXMubGVuZ3RoLCBub2RlOyBpIDwgbjsgKytpKSB7XG4gICAgICBub2RlID0gbm9kZXNbaV0sIG5vZGUuaW5kZXggPSBpO1xuICAgICAgaWYgKG5vZGUuZnggIT0gbnVsbCkgbm9kZS54ID0gbm9kZS5meDtcbiAgICAgIGlmIChub2RlLmZ5ICE9IG51bGwpIG5vZGUueSA9IG5vZGUuZnk7XG4gICAgICBpZiAoaXNOYU4obm9kZS54KSB8fCBpc05hTihub2RlLnkpKSB7XG4gICAgICAgIHZhciByYWRpdXMgPSBpbml0aWFsUmFkaXVzICogTWF0aC5zcXJ0KDAuNSArIGkpLCBhbmdsZSA9IGkgKiBpbml0aWFsQW5nbGU7XG4gICAgICAgIG5vZGUueCA9IHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKTtcbiAgICAgICAgbm9kZS55ID0gcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpO1xuICAgICAgfVxuICAgICAgaWYgKGlzTmFOKG5vZGUudngpIHx8IGlzTmFOKG5vZGUudnkpKSB7XG4gICAgICAgIG5vZGUudnggPSBub2RlLnZ5ID0gMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplRm9yY2UoZm9yY2UpIHtcbiAgICBpZiAoZm9yY2UuaW5pdGlhbGl6ZSkgZm9yY2UuaW5pdGlhbGl6ZShub2RlcywgcmFuZG9tKTtcbiAgICByZXR1cm4gZm9yY2U7XG4gIH1cblxuICBpbml0aWFsaXplTm9kZXMoKTtcblxuICByZXR1cm4gc2ltdWxhdGlvbiA9IHtcbiAgICB0aWNrOiB0aWNrLFxuXG4gICAgcmVzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc3RlcHBlci5yZXN0YXJ0KHN0ZXApLCBzaW11bGF0aW9uO1xuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzdGVwcGVyLnN0b3AoKSwgc2ltdWxhdGlvbjtcbiAgICB9LFxuXG4gICAgbm9kZXM6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVzID0gXywgaW5pdGlhbGl6ZU5vZGVzKCksIGZvcmNlcy5mb3JFYWNoKGluaXRpYWxpemVGb3JjZSksIHNpbXVsYXRpb24pIDogbm9kZXM7XG4gICAgfSxcblxuICAgIGFscGhhOiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYSA9ICtfLCBzaW11bGF0aW9uKSA6IGFscGhhO1xuICAgIH0sXG5cbiAgICBhbHBoYU1pbjogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFNaW4gPSArXywgc2ltdWxhdGlvbikgOiBhbHBoYU1pbjtcbiAgICB9LFxuXG4gICAgYWxwaGFEZWNheTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFEZWNheSA9ICtfLCBzaW11bGF0aW9uKSA6ICthbHBoYURlY2F5O1xuICAgIH0sXG5cbiAgICBhbHBoYVRhcmdldDogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGFUYXJnZXQgPSArXywgc2ltdWxhdGlvbikgOiBhbHBoYVRhcmdldDtcbiAgICB9LFxuXG4gICAgdmVsb2NpdHlEZWNheTogZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmVsb2NpdHlEZWNheSA9IDEgLSBfLCBzaW11bGF0aW9uKSA6IDEgLSB2ZWxvY2l0eURlY2F5O1xuICAgIH0sXG5cbiAgICByYW5kb21Tb3VyY2U6IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhbmRvbSA9IF8sIGZvcmNlcy5mb3JFYWNoKGluaXRpYWxpemVGb3JjZSksIHNpbXVsYXRpb24pIDogcmFuZG9tO1xuICAgIH0sXG5cbiAgICBmb3JjZTogZnVuY3Rpb24obmFtZSwgXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gKChfID09IG51bGwgPyBmb3JjZXMuZGVsZXRlKG5hbWUpIDogZm9yY2VzLnNldChuYW1lLCBpbml0aWFsaXplRm9yY2UoXykpKSwgc2ltdWxhdGlvbikgOiBmb3JjZXMuZ2V0KG5hbWUpO1xuICAgIH0sXG5cbiAgICBmaW5kOiBmdW5jdGlvbih4LCB5LCByYWRpdXMpIHtcbiAgICAgIHZhciBpID0gMCxcbiAgICAgICAgICBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgICAgIGR4LFxuICAgICAgICAgIGR5LFxuICAgICAgICAgIGQyLFxuICAgICAgICAgIG5vZGUsXG4gICAgICAgICAgY2xvc2VzdDtcblxuICAgICAgaWYgKHJhZGl1cyA9PSBudWxsKSByYWRpdXMgPSBJbmZpbml0eTtcbiAgICAgIGVsc2UgcmFkaXVzICo9IHJhZGl1cztcblxuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIGR4ID0geCAtIG5vZGUueDtcbiAgICAgICAgZHkgPSB5IC0gbm9kZS55O1xuICAgICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICBpZiAoZDIgPCByYWRpdXMpIGNsb3Nlc3QgPSBub2RlLCByYWRpdXMgPSBkMjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNsb3Nlc3Q7XG4gICAgfSxcblxuICAgIG9uOiBmdW5jdGlvbihuYW1lLCBfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyAoZXZlbnQub24obmFtZSwgXyksIHNpbXVsYXRpb24pIDogZXZlbnQub24obmFtZSk7XG4gICAgfVxuICB9O1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgdmFyIHN0cmVuZ3RoID0gY29uc3RhbnQoMC4xKSxcbiAgICAgIG5vZGVzLFxuICAgICAgc3RyZW5ndGhzLFxuICAgICAgeHo7XG5cbiAgaWYgKHR5cGVvZiB4ICE9PSBcImZ1bmN0aW9uXCIpIHggPSBjb25zdGFudCh4ID09IG51bGwgPyAwIDogK3gpO1xuXG4gIGZ1bmN0aW9uIGZvcmNlKGFscGhhKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBub2Rlcy5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIG5vZGUgPSBub2Rlc1tpXSwgbm9kZS52eCArPSAoeHpbaV0gLSBub2RlLngpICogc3RyZW5ndGhzW2ldICogYWxwaGE7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcbiAgICBpZiAoIW5vZGVzKSByZXR1cm47XG4gICAgdmFyIGksIG4gPSBub2Rlcy5sZW5ndGg7XG4gICAgc3RyZW5ndGhzID0gbmV3IEFycmF5KG4pO1xuICAgIHh6ID0gbmV3IEFycmF5KG4pO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHN0cmVuZ3Roc1tpXSA9IGlzTmFOKHh6W2ldID0gK3gobm9kZXNbaV0sIGksIG5vZGVzKSkgPyAwIDogK3N0cmVuZ3RoKG5vZGVzW2ldLCBpLCBub2Rlcyk7XG4gICAgfVxuICB9XG5cbiAgZm9yY2UuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBub2RlcyA9IF87XG4gICAgaW5pdGlhbGl6ZSgpO1xuICB9O1xuXG4gIGZvcmNlLnN0cmVuZ3RoID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0cmVuZ3RoID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogc3RyZW5ndGg7XG4gIH07XG5cbiAgZm9yY2UueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGluaXRpYWxpemUoKSwgZm9yY2UpIDogeDtcbiAgfTtcblxuICByZXR1cm4gZm9yY2U7XG59XG4iLCJpbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeSkge1xuICB2YXIgc3RyZW5ndGggPSBjb25zdGFudCgwLjEpLFxuICAgICAgbm9kZXMsXG4gICAgICBzdHJlbmd0aHMsXG4gICAgICB5ejtcblxuICBpZiAodHlwZW9mIHkgIT09IFwiZnVuY3Rpb25cIikgeSA9IGNvbnN0YW50KHkgPT0gbnVsbCA/IDAgOiAreSk7XG5cbiAgZnVuY3Rpb24gZm9yY2UoYWxwaGEpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IG5vZGVzLmxlbmd0aCwgbm9kZTsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnZ5ICs9ICh5eltpXSAtIG5vZGUueSkgKiBzdHJlbmd0aHNbaV0gKiBhbHBoYTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIGlmICghbm9kZXMpIHJldHVybjtcbiAgICB2YXIgaSwgbiA9IG5vZGVzLmxlbmd0aDtcbiAgICBzdHJlbmd0aHMgPSBuZXcgQXJyYXkobik7XG4gICAgeXogPSBuZXcgQXJyYXkobik7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgc3RyZW5ndGhzW2ldID0gaXNOYU4oeXpbaV0gPSAreShub2Rlc1tpXSwgaSwgbm9kZXMpKSA/IDAgOiArc3RyZW5ndGgobm9kZXNbaV0sIGksIG5vZGVzKTtcbiAgICB9XG4gIH1cblxuICBmb3JjZS5pbml0aWFsaXplID0gZnVuY3Rpb24oXykge1xuICAgIG5vZGVzID0gXztcbiAgICBpbml0aWFsaXplKCk7XG4gIH07XG5cbiAgZm9yY2Uuc3RyZW5ndGggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3RyZW5ndGggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiBzdHJlbmd0aDtcbiAgfTtcblxuICBmb3JjZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgaW5pdGlhbGl6ZSgpLCBmb3JjZSkgOiB5O1xuICB9O1xuXG4gIHJldHVybiBmb3JjZTtcbn1cbiIsImltcG9ydCBmb3JtYXRMb2NhbGUgZnJvbSBcIi4vbG9jYWxlLmpzXCI7XG5cbnZhciBsb2NhbGU7XG5leHBvcnQgdmFyIGZvcm1hdDtcbmV4cG9ydCB2YXIgZm9ybWF0UHJlZml4O1xuXG5kZWZhdWx0TG9jYWxlKHtcbiAgdGhvdXNhbmRzOiBcIixcIixcbiAgZ3JvdXBpbmc6IFszXSxcbiAgY3VycmVuY3k6IFtcIiRcIiwgXCJcIl1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWZhdWx0TG9jYWxlKGRlZmluaXRpb24pIHtcbiAgbG9jYWxlID0gZm9ybWF0TG9jYWxlKGRlZmluaXRpb24pO1xuICBmb3JtYXQgPSBsb2NhbGUuZm9ybWF0O1xuICBmb3JtYXRQcmVmaXggPSBsb2NhbGUuZm9ybWF0UHJlZml4O1xuICByZXR1cm4gbG9jYWxlO1xufVxuIiwiaW1wb3J0IHtmb3JtYXREZWNpbWFsUGFydHN9IGZyb20gXCIuL2Zvcm1hdERlY2ltYWwuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4geCA9IGZvcm1hdERlY2ltYWxQYXJ0cyhNYXRoLmFicyh4KSksIHggPyB4WzFdIDogTmFOO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gTWF0aC5hYnMoeCA9IE1hdGgucm91bmQoeCkpID49IDFlMjFcbiAgICAgID8geC50b0xvY2FsZVN0cmluZyhcImVuXCIpLnJlcGxhY2UoLywvZywgXCJcIilcbiAgICAgIDogeC50b1N0cmluZygxMCk7XG59XG5cbi8vIENvbXB1dGVzIHRoZSBkZWNpbWFsIGNvZWZmaWNpZW50IGFuZCBleHBvbmVudCBvZiB0aGUgc3BlY2lmaWVkIG51bWJlciB4IHdpdGhcbi8vIHNpZ25pZmljYW50IGRpZ2l0cyBwLCB3aGVyZSB4IGlzIHBvc2l0aXZlIGFuZCBwIGlzIGluIFsxLCAyMV0gb3IgdW5kZWZpbmVkLlxuLy8gRm9yIGV4YW1wbGUsIGZvcm1hdERlY2ltYWxQYXJ0cygxLjIzKSByZXR1cm5zIFtcIjEyM1wiLCAwXS5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREZWNpbWFsUGFydHMoeCwgcCkge1xuICBpZiAoKGkgPSAoeCA9IHAgPyB4LnRvRXhwb25lbnRpYWwocCAtIDEpIDogeC50b0V4cG9uZW50aWFsKCkpLmluZGV4T2YoXCJlXCIpKSA8IDApIHJldHVybiBudWxsOyAvLyBOYU4sIMKxSW5maW5pdHlcbiAgdmFyIGksIGNvZWZmaWNpZW50ID0geC5zbGljZSgwLCBpKTtcblxuICAvLyBUaGUgc3RyaW5nIHJldHVybmVkIGJ5IHRvRXhwb25lbnRpYWwgZWl0aGVyIGhhcyB0aGUgZm9ybSBcXGRcXC5cXGQrZVstK11cXGQrXG4gIC8vIChlLmcuLCAxLjJlKzMpIG9yIHRoZSBmb3JtIFxcZGVbLStdXFxkKyAoZS5nLiwgMWUrMykuXG4gIHJldHVybiBbXG4gICAgY29lZmZpY2llbnQubGVuZ3RoID4gMSA/IGNvZWZmaWNpZW50WzBdICsgY29lZmZpY2llbnQuc2xpY2UoMikgOiBjb2VmZmljaWVudCxcbiAgICAreC5zbGljZShpICsgMSlcbiAgXTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGdyb3VwaW5nLCB0aG91c2FuZHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCB3aWR0aCkge1xuICAgIHZhciBpID0gdmFsdWUubGVuZ3RoLFxuICAgICAgICB0ID0gW10sXG4gICAgICAgIGogPSAwLFxuICAgICAgICBnID0gZ3JvdXBpbmdbMF0sXG4gICAgICAgIGxlbmd0aCA9IDA7XG5cbiAgICB3aGlsZSAoaSA+IDAgJiYgZyA+IDApIHtcbiAgICAgIGlmIChsZW5ndGggKyBnICsgMSA+IHdpZHRoKSBnID0gTWF0aC5tYXgoMSwgd2lkdGggLSBsZW5ndGgpO1xuICAgICAgdC5wdXNoKHZhbHVlLnN1YnN0cmluZyhpIC09IGcsIGkgKyBnKSk7XG4gICAgICBpZiAoKGxlbmd0aCArPSBnICsgMSkgPiB3aWR0aCkgYnJlYWs7XG4gICAgICBnID0gZ3JvdXBpbmdbaiA9IChqICsgMSkgJSBncm91cGluZy5sZW5ndGhdO1xuICAgIH1cblxuICAgIHJldHVybiB0LnJldmVyc2UoKS5qb2luKHRob3VzYW5kcyk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihudW1lcmFscykge1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvWzAtOV0vZywgZnVuY3Rpb24oaSkge1xuICAgICAgcmV0dXJuIG51bWVyYWxzWytpXTtcbiAgICB9KTtcbiAgfTtcbn1cbiIsImltcG9ydCB7Zm9ybWF0RGVjaW1hbFBhcnRzfSBmcm9tIFwiLi9mb3JtYXREZWNpbWFsLmpzXCI7XG5cbmV4cG9ydCB2YXIgcHJlZml4RXhwb25lbnQ7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHApIHtcbiAgdmFyIGQgPSBmb3JtYXREZWNpbWFsUGFydHMoeCwgcCk7XG4gIGlmICghZCkgcmV0dXJuIHggKyBcIlwiO1xuICB2YXIgY29lZmZpY2llbnQgPSBkWzBdLFxuICAgICAgZXhwb25lbnQgPSBkWzFdLFxuICAgICAgaSA9IGV4cG9uZW50IC0gKHByZWZpeEV4cG9uZW50ID0gTWF0aC5tYXgoLTgsIE1hdGgubWluKDgsIE1hdGguZmxvb3IoZXhwb25lbnQgLyAzKSkpICogMykgKyAxLFxuICAgICAgbiA9IGNvZWZmaWNpZW50Lmxlbmd0aDtcbiAgcmV0dXJuIGkgPT09IG4gPyBjb2VmZmljaWVudFxuICAgICAgOiBpID4gbiA/IGNvZWZmaWNpZW50ICsgbmV3IEFycmF5KGkgLSBuICsgMSkuam9pbihcIjBcIilcbiAgICAgIDogaSA+IDAgPyBjb2VmZmljaWVudC5zbGljZSgwLCBpKSArIFwiLlwiICsgY29lZmZpY2llbnQuc2xpY2UoaSlcbiAgICAgIDogXCIwLlwiICsgbmV3IEFycmF5KDEgLSBpKS5qb2luKFwiMFwiKSArIGZvcm1hdERlY2ltYWxQYXJ0cyh4LCBNYXRoLm1heCgwLCBwICsgaSAtIDEpKVswXTsgLy8gbGVzcyB0aGFuIDF5IVxufVxuIiwiaW1wb3J0IHtmb3JtYXREZWNpbWFsUGFydHN9IGZyb20gXCIuL2Zvcm1hdERlY2ltYWwuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgcCkge1xuICB2YXIgZCA9IGZvcm1hdERlY2ltYWxQYXJ0cyh4LCBwKTtcbiAgaWYgKCFkKSByZXR1cm4geCArIFwiXCI7XG4gIHZhciBjb2VmZmljaWVudCA9IGRbMF0sXG4gICAgICBleHBvbmVudCA9IGRbMV07XG4gIHJldHVybiBleHBvbmVudCA8IDAgPyBcIjAuXCIgKyBuZXcgQXJyYXkoLWV4cG9uZW50KS5qb2luKFwiMFwiKSArIGNvZWZmaWNpZW50XG4gICAgICA6IGNvZWZmaWNpZW50Lmxlbmd0aCA+IGV4cG9uZW50ICsgMSA/IGNvZWZmaWNpZW50LnNsaWNlKDAsIGV4cG9uZW50ICsgMSkgKyBcIi5cIiArIGNvZWZmaWNpZW50LnNsaWNlKGV4cG9uZW50ICsgMSlcbiAgICAgIDogY29lZmZpY2llbnQgKyBuZXcgQXJyYXkoZXhwb25lbnQgLSBjb2VmZmljaWVudC5sZW5ndGggKyAyKS5qb2luKFwiMFwiKTtcbn1cbiIsIi8vIFtbZmlsbF1hbGlnbl1bc2lnbl1bc3ltYm9sXVswXVt3aWR0aF1bLF1bLnByZWNpc2lvbl1bfl1bdHlwZV1cbnZhciByZSA9IC9eKD86KC4pPyhbPD49Xl0pKT8oWytcXC0oIF0pPyhbJCNdKT8oMCk/KFxcZCspPygsKT8oXFwuXFxkKyk/KH4pPyhbYS16JV0pPyQvaTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllcikge1xuICBpZiAoIShtYXRjaCA9IHJlLmV4ZWMoc3BlY2lmaWVyKSkpIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgZm9ybWF0OiBcIiArIHNwZWNpZmllcik7XG4gIHZhciBtYXRjaDtcbiAgcmV0dXJuIG5ldyBGb3JtYXRTcGVjaWZpZXIoe1xuICAgIGZpbGw6IG1hdGNoWzFdLFxuICAgIGFsaWduOiBtYXRjaFsyXSxcbiAgICBzaWduOiBtYXRjaFszXSxcbiAgICBzeW1ib2w6IG1hdGNoWzRdLFxuICAgIHplcm86IG1hdGNoWzVdLFxuICAgIHdpZHRoOiBtYXRjaFs2XSxcbiAgICBjb21tYTogbWF0Y2hbN10sXG4gICAgcHJlY2lzaW9uOiBtYXRjaFs4XSAmJiBtYXRjaFs4XS5zbGljZSgxKSxcbiAgICB0cmltOiBtYXRjaFs5XSxcbiAgICB0eXBlOiBtYXRjaFsxMF1cbiAgfSk7XG59XG5cbmZvcm1hdFNwZWNpZmllci5wcm90b3R5cGUgPSBGb3JtYXRTcGVjaWZpZXIucHJvdG90eXBlOyAvLyBpbnN0YW5jZW9mXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3JtYXRTcGVjaWZpZXIoc3BlY2lmaWVyKSB7XG4gIHRoaXMuZmlsbCA9IHNwZWNpZmllci5maWxsID09PSB1bmRlZmluZWQgPyBcIiBcIiA6IHNwZWNpZmllci5maWxsICsgXCJcIjtcbiAgdGhpcy5hbGlnbiA9IHNwZWNpZmllci5hbGlnbiA9PT0gdW5kZWZpbmVkID8gXCI+XCIgOiBzcGVjaWZpZXIuYWxpZ24gKyBcIlwiO1xuICB0aGlzLnNpZ24gPSBzcGVjaWZpZXIuc2lnbiA9PT0gdW5kZWZpbmVkID8gXCItXCIgOiBzcGVjaWZpZXIuc2lnbiArIFwiXCI7XG4gIHRoaXMuc3ltYm9sID0gc3BlY2lmaWVyLnN5bWJvbCA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IHNwZWNpZmllci5zeW1ib2wgKyBcIlwiO1xuICB0aGlzLnplcm8gPSAhIXNwZWNpZmllci56ZXJvO1xuICB0aGlzLndpZHRoID0gc3BlY2lmaWVyLndpZHRoID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiArc3BlY2lmaWVyLndpZHRoO1xuICB0aGlzLmNvbW1hID0gISFzcGVjaWZpZXIuY29tbWE7XG4gIHRoaXMucHJlY2lzaW9uID0gc3BlY2lmaWVyLnByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogK3NwZWNpZmllci5wcmVjaXNpb247XG4gIHRoaXMudHJpbSA9ICEhc3BlY2lmaWVyLnRyaW07XG4gIHRoaXMudHlwZSA9IHNwZWNpZmllci50eXBlID09PSB1bmRlZmluZWQgPyBcIlwiIDogc3BlY2lmaWVyLnR5cGUgKyBcIlwiO1xufVxuXG5Gb3JtYXRTcGVjaWZpZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmZpbGxcbiAgICAgICsgdGhpcy5hbGlnblxuICAgICAgKyB0aGlzLnNpZ25cbiAgICAgICsgdGhpcy5zeW1ib2xcbiAgICAgICsgKHRoaXMuemVybyA/IFwiMFwiIDogXCJcIilcbiAgICAgICsgKHRoaXMud2lkdGggPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBNYXRoLm1heCgxLCB0aGlzLndpZHRoIHwgMCkpXG4gICAgICArICh0aGlzLmNvbW1hID8gXCIsXCIgOiBcIlwiKVxuICAgICAgKyAodGhpcy5wcmVjaXNpb24gPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBcIi5cIiArIE1hdGgubWF4KDAsIHRoaXMucHJlY2lzaW9uIHwgMCkpXG4gICAgICArICh0aGlzLnRyaW0gPyBcIn5cIiA6IFwiXCIpXG4gICAgICArIHRoaXMudHlwZTtcbn07XG4iLCIvLyBUcmltcyBpbnNpZ25pZmljYW50IHplcm9zLCBlLmcuLCByZXBsYWNlcyAxLjIwMDBrIHdpdGggMS4yay5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHMpIHtcbiAgb3V0OiBmb3IgKHZhciBuID0gcy5sZW5ndGgsIGkgPSAxLCBpMCA9IC0xLCBpMTsgaSA8IG47ICsraSkge1xuICAgIHN3aXRjaCAoc1tpXSkge1xuICAgICAgY2FzZSBcIi5cIjogaTAgPSBpMSA9IGk7IGJyZWFrO1xuICAgICAgY2FzZSBcIjBcIjogaWYgKGkwID09PSAwKSBpMCA9IGk7IGkxID0gaTsgYnJlYWs7XG4gICAgICBkZWZhdWx0OiBpZiAoIStzW2ldKSBicmVhayBvdXQ7IGlmIChpMCA+IDApIGkwID0gMDsgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBpMCA+IDAgPyBzLnNsaWNlKDAsIGkwKSArIHMuc2xpY2UoaTEgKyAxKSA6IHM7XG59XG4iLCJpbXBvcnQgZm9ybWF0RGVjaW1hbCBmcm9tIFwiLi9mb3JtYXREZWNpbWFsLmpzXCI7XG5pbXBvcnQgZm9ybWF0UHJlZml4QXV0byBmcm9tIFwiLi9mb3JtYXRQcmVmaXhBdXRvLmpzXCI7XG5pbXBvcnQgZm9ybWF0Um91bmRlZCBmcm9tIFwiLi9mb3JtYXRSb3VuZGVkLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgXCIlXCI6ICh4LCBwKSA9PiAoeCAqIDEwMCkudG9GaXhlZChwKSxcbiAgXCJiXCI6ICh4KSA9PiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDIpLFxuICBcImNcIjogKHgpID0+IHggKyBcIlwiLFxuICBcImRcIjogZm9ybWF0RGVjaW1hbCxcbiAgXCJlXCI6ICh4LCBwKSA9PiB4LnRvRXhwb25lbnRpYWwocCksXG4gIFwiZlwiOiAoeCwgcCkgPT4geC50b0ZpeGVkKHApLFxuICBcImdcIjogKHgsIHApID0+IHgudG9QcmVjaXNpb24ocCksXG4gIFwib1wiOiAoeCkgPT4gTWF0aC5yb3VuZCh4KS50b1N0cmluZyg4KSxcbiAgXCJwXCI6ICh4LCBwKSA9PiBmb3JtYXRSb3VuZGVkKHggKiAxMDAsIHApLFxuICBcInJcIjogZm9ybWF0Um91bmRlZCxcbiAgXCJzXCI6IGZvcm1hdFByZWZpeEF1dG8sXG4gIFwiWFwiOiAoeCkgPT4gTWF0aC5yb3VuZCh4KS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKSxcbiAgXCJ4XCI6ICh4KSA9PiBNYXRoLnJvdW5kKHgpLnRvU3RyaW5nKDE2KVxufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHg7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZm9ybWF0RGVmYXVsdExvY2FsZSwgZm9ybWF0LCBmb3JtYXRQcmVmaXh9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBmb3JtYXRMb2NhbGV9IGZyb20gXCIuL2xvY2FsZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGZvcm1hdFNwZWNpZmllciwgRm9ybWF0U3BlY2lmaWVyfSBmcm9tIFwiLi9mb3JtYXRTcGVjaWZpZXIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwcmVjaXNpb25GaXhlZH0gZnJvbSBcIi4vcHJlY2lzaW9uRml4ZWQuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwcmVjaXNpb25QcmVmaXh9IGZyb20gXCIuL3ByZWNpc2lvblByZWZpeC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHByZWNpc2lvblJvdW5kfSBmcm9tIFwiLi9wcmVjaXNpb25Sb3VuZC5qc1wiO1xuIiwiaW1wb3J0IGV4cG9uZW50IGZyb20gXCIuL2V4cG9uZW50LmpzXCI7XG5pbXBvcnQgZm9ybWF0R3JvdXAgZnJvbSBcIi4vZm9ybWF0R3JvdXAuanNcIjtcbmltcG9ydCBmb3JtYXROdW1lcmFscyBmcm9tIFwiLi9mb3JtYXROdW1lcmFscy5qc1wiO1xuaW1wb3J0IGZvcm1hdFNwZWNpZmllciBmcm9tIFwiLi9mb3JtYXRTcGVjaWZpZXIuanNcIjtcbmltcG9ydCBmb3JtYXRUcmltIGZyb20gXCIuL2Zvcm1hdFRyaW0uanNcIjtcbmltcG9ydCBmb3JtYXRUeXBlcyBmcm9tIFwiLi9mb3JtYXRUeXBlcy5qc1wiO1xuaW1wb3J0IHtwcmVmaXhFeHBvbmVudH0gZnJvbSBcIi4vZm9ybWF0UHJlZml4QXV0by5qc1wiO1xuaW1wb3J0IGlkZW50aXR5IGZyb20gXCIuL2lkZW50aXR5LmpzXCI7XG5cbnZhciBtYXAgPSBBcnJheS5wcm90b3R5cGUubWFwLFxuICAgIHByZWZpeGVzID0gW1wieVwiLFwielwiLFwiYVwiLFwiZlwiLFwicFwiLFwiblwiLFwiwrVcIixcIm1cIixcIlwiLFwia1wiLFwiTVwiLFwiR1wiLFwiVFwiLFwiUFwiLFwiRVwiLFwiWlwiLFwiWVwiXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obG9jYWxlKSB7XG4gIHZhciBncm91cCA9IGxvY2FsZS5ncm91cGluZyA9PT0gdW5kZWZpbmVkIHx8IGxvY2FsZS50aG91c2FuZHMgPT09IHVuZGVmaW5lZCA/IGlkZW50aXR5IDogZm9ybWF0R3JvdXAobWFwLmNhbGwobG9jYWxlLmdyb3VwaW5nLCBOdW1iZXIpLCBsb2NhbGUudGhvdXNhbmRzICsgXCJcIiksXG4gICAgICBjdXJyZW5jeVByZWZpeCA9IGxvY2FsZS5jdXJyZW5jeSA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IGxvY2FsZS5jdXJyZW5jeVswXSArIFwiXCIsXG4gICAgICBjdXJyZW5jeVN1ZmZpeCA9IGxvY2FsZS5jdXJyZW5jeSA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IGxvY2FsZS5jdXJyZW5jeVsxXSArIFwiXCIsXG4gICAgICBkZWNpbWFsID0gbG9jYWxlLmRlY2ltYWwgPT09IHVuZGVmaW5lZCA/IFwiLlwiIDogbG9jYWxlLmRlY2ltYWwgKyBcIlwiLFxuICAgICAgbnVtZXJhbHMgPSBsb2NhbGUubnVtZXJhbHMgPT09IHVuZGVmaW5lZCA/IGlkZW50aXR5IDogZm9ybWF0TnVtZXJhbHMobWFwLmNhbGwobG9jYWxlLm51bWVyYWxzLCBTdHJpbmcpKSxcbiAgICAgIHBlcmNlbnQgPSBsb2NhbGUucGVyY2VudCA9PT0gdW5kZWZpbmVkID8gXCIlXCIgOiBsb2NhbGUucGVyY2VudCArIFwiXCIsXG4gICAgICBtaW51cyA9IGxvY2FsZS5taW51cyA9PT0gdW5kZWZpbmVkID8gXCLiiJJcIiA6IGxvY2FsZS5taW51cyArIFwiXCIsXG4gICAgICBuYW4gPSBsb2NhbGUubmFuID09PSB1bmRlZmluZWQgPyBcIk5hTlwiIDogbG9jYWxlLm5hbiArIFwiXCI7XG5cbiAgZnVuY3Rpb24gbmV3Rm9ybWF0KHNwZWNpZmllcikge1xuICAgIHNwZWNpZmllciA9IGZvcm1hdFNwZWNpZmllcihzcGVjaWZpZXIpO1xuXG4gICAgdmFyIGZpbGwgPSBzcGVjaWZpZXIuZmlsbCxcbiAgICAgICAgYWxpZ24gPSBzcGVjaWZpZXIuYWxpZ24sXG4gICAgICAgIHNpZ24gPSBzcGVjaWZpZXIuc2lnbixcbiAgICAgICAgc3ltYm9sID0gc3BlY2lmaWVyLnN5bWJvbCxcbiAgICAgICAgemVybyA9IHNwZWNpZmllci56ZXJvLFxuICAgICAgICB3aWR0aCA9IHNwZWNpZmllci53aWR0aCxcbiAgICAgICAgY29tbWEgPSBzcGVjaWZpZXIuY29tbWEsXG4gICAgICAgIHByZWNpc2lvbiA9IHNwZWNpZmllci5wcmVjaXNpb24sXG4gICAgICAgIHRyaW0gPSBzcGVjaWZpZXIudHJpbSxcbiAgICAgICAgdHlwZSA9IHNwZWNpZmllci50eXBlO1xuXG4gICAgLy8gVGhlIFwiblwiIHR5cGUgaXMgYW4gYWxpYXMgZm9yIFwiLGdcIi5cbiAgICBpZiAodHlwZSA9PT0gXCJuXCIpIGNvbW1hID0gdHJ1ZSwgdHlwZSA9IFwiZ1wiO1xuXG4gICAgLy8gVGhlIFwiXCIgdHlwZSwgYW5kIGFueSBpbnZhbGlkIHR5cGUsIGlzIGFuIGFsaWFzIGZvciBcIi4xMn5nXCIuXG4gICAgZWxzZSBpZiAoIWZvcm1hdFR5cGVzW3R5cGVdKSBwcmVjaXNpb24gPT09IHVuZGVmaW5lZCAmJiAocHJlY2lzaW9uID0gMTIpLCB0cmltID0gdHJ1ZSwgdHlwZSA9IFwiZ1wiO1xuXG4gICAgLy8gSWYgemVybyBmaWxsIGlzIHNwZWNpZmllZCwgcGFkZGluZyBnb2VzIGFmdGVyIHNpZ24gYW5kIGJlZm9yZSBkaWdpdHMuXG4gICAgaWYgKHplcm8gfHwgKGZpbGwgPT09IFwiMFwiICYmIGFsaWduID09PSBcIj1cIikpIHplcm8gPSB0cnVlLCBmaWxsID0gXCIwXCIsIGFsaWduID0gXCI9XCI7XG5cbiAgICAvLyBDb21wdXRlIHRoZSBwcmVmaXggYW5kIHN1ZmZpeC5cbiAgICAvLyBGb3IgU0ktcHJlZml4LCB0aGUgc3VmZml4IGlzIGxhemlseSBjb21wdXRlZC5cbiAgICB2YXIgcHJlZml4ID0gc3ltYm9sID09PSBcIiRcIiA/IGN1cnJlbmN5UHJlZml4IDogc3ltYm9sID09PSBcIiNcIiAmJiAvW2JveFhdLy50ZXN0KHR5cGUpID8gXCIwXCIgKyB0eXBlLnRvTG93ZXJDYXNlKCkgOiBcIlwiLFxuICAgICAgICBzdWZmaXggPSBzeW1ib2wgPT09IFwiJFwiID8gY3VycmVuY3lTdWZmaXggOiAvWyVwXS8udGVzdCh0eXBlKSA/IHBlcmNlbnQgOiBcIlwiO1xuXG4gICAgLy8gV2hhdCBmb3JtYXQgZnVuY3Rpb24gc2hvdWxkIHdlIHVzZT9cbiAgICAvLyBJcyB0aGlzIGFuIGludGVnZXIgdHlwZT9cbiAgICAvLyBDYW4gdGhpcyB0eXBlIGdlbmVyYXRlIGV4cG9uZW50aWFsIG5vdGF0aW9uP1xuICAgIHZhciBmb3JtYXRUeXBlID0gZm9ybWF0VHlwZXNbdHlwZV0sXG4gICAgICAgIG1heWJlU3VmZml4ID0gL1tkZWZncHJzJV0vLnRlc3QodHlwZSk7XG5cbiAgICAvLyBTZXQgdGhlIGRlZmF1bHQgcHJlY2lzaW9uIGlmIG5vdCBzcGVjaWZpZWQsXG4gICAgLy8gb3IgY2xhbXAgdGhlIHNwZWNpZmllZCBwcmVjaXNpb24gdG8gdGhlIHN1cHBvcnRlZCByYW5nZS5cbiAgICAvLyBGb3Igc2lnbmlmaWNhbnQgcHJlY2lzaW9uLCBpdCBtdXN0IGJlIGluIFsxLCAyMV0uXG4gICAgLy8gRm9yIGZpeGVkIHByZWNpc2lvbiwgaXQgbXVzdCBiZSBpbiBbMCwgMjBdLlxuICAgIHByZWNpc2lvbiA9IHByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gNlxuICAgICAgICA6IC9bZ3Byc10vLnRlc3QodHlwZSkgPyBNYXRoLm1heCgxLCBNYXRoLm1pbigyMSwgcHJlY2lzaW9uKSlcbiAgICAgICAgOiBNYXRoLm1heCgwLCBNYXRoLm1pbigyMCwgcHJlY2lzaW9uKSk7XG5cbiAgICBmdW5jdGlvbiBmb3JtYXQodmFsdWUpIHtcbiAgICAgIHZhciB2YWx1ZVByZWZpeCA9IHByZWZpeCxcbiAgICAgICAgICB2YWx1ZVN1ZmZpeCA9IHN1ZmZpeCxcbiAgICAgICAgICBpLCBuLCBjO1xuXG4gICAgICBpZiAodHlwZSA9PT0gXCJjXCIpIHtcbiAgICAgICAgdmFsdWVTdWZmaXggPSBmb3JtYXRUeXBlKHZhbHVlKSArIHZhbHVlU3VmZml4O1xuICAgICAgICB2YWx1ZSA9IFwiXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWx1ZSA9ICt2YWx1ZTtcblxuICAgICAgICAvLyBEZXRlcm1pbmUgdGhlIHNpZ24uIC0wIGlzIG5vdCBsZXNzIHRoYW4gMCwgYnV0IDEgLyAtMCBpcyFcbiAgICAgICAgdmFyIHZhbHVlTmVnYXRpdmUgPSB2YWx1ZSA8IDAgfHwgMSAvIHZhbHVlIDwgMDtcblxuICAgICAgICAvLyBQZXJmb3JtIHRoZSBpbml0aWFsIGZvcm1hdHRpbmcuXG4gICAgICAgIHZhbHVlID0gaXNOYU4odmFsdWUpID8gbmFuIDogZm9ybWF0VHlwZShNYXRoLmFicyh2YWx1ZSksIHByZWNpc2lvbik7XG5cbiAgICAgICAgLy8gVHJpbSBpbnNpZ25pZmljYW50IHplcm9zLlxuICAgICAgICBpZiAodHJpbSkgdmFsdWUgPSBmb3JtYXRUcmltKHZhbHVlKTtcblxuICAgICAgICAvLyBJZiBhIG5lZ2F0aXZlIHZhbHVlIHJvdW5kcyB0byB6ZXJvIGFmdGVyIGZvcm1hdHRpbmcsIGFuZCBubyBleHBsaWNpdCBwb3NpdGl2ZSBzaWduIGlzIHJlcXVlc3RlZCwgaGlkZSB0aGUgc2lnbi5cbiAgICAgICAgaWYgKHZhbHVlTmVnYXRpdmUgJiYgK3ZhbHVlID09PSAwICYmIHNpZ24gIT09IFwiK1wiKSB2YWx1ZU5lZ2F0aXZlID0gZmFsc2U7XG5cbiAgICAgICAgLy8gQ29tcHV0ZSB0aGUgcHJlZml4IGFuZCBzdWZmaXguXG4gICAgICAgIHZhbHVlUHJlZml4ID0gKHZhbHVlTmVnYXRpdmUgPyAoc2lnbiA9PT0gXCIoXCIgPyBzaWduIDogbWludXMpIDogc2lnbiA9PT0gXCItXCIgfHwgc2lnbiA9PT0gXCIoXCIgPyBcIlwiIDogc2lnbikgKyB2YWx1ZVByZWZpeDtcbiAgICAgICAgdmFsdWVTdWZmaXggPSAodHlwZSA9PT0gXCJzXCIgPyBwcmVmaXhlc1s4ICsgcHJlZml4RXhwb25lbnQgLyAzXSA6IFwiXCIpICsgdmFsdWVTdWZmaXggKyAodmFsdWVOZWdhdGl2ZSAmJiBzaWduID09PSBcIihcIiA/IFwiKVwiIDogXCJcIik7XG5cbiAgICAgICAgLy8gQnJlYWsgdGhlIGZvcm1hdHRlZCB2YWx1ZSBpbnRvIHRoZSBpbnRlZ2VyIOKAnHZhbHVl4oCdIHBhcnQgdGhhdCBjYW4gYmVcbiAgICAgICAgLy8gZ3JvdXBlZCwgYW5kIGZyYWN0aW9uYWwgb3IgZXhwb25lbnRpYWwg4oCcc3VmZml44oCdIHBhcnQgdGhhdCBpcyBub3QuXG4gICAgICAgIGlmIChtYXliZVN1ZmZpeCkge1xuICAgICAgICAgIGkgPSAtMSwgbiA9IHZhbHVlLmxlbmd0aDtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgICAgaWYgKGMgPSB2YWx1ZS5jaGFyQ29kZUF0KGkpLCA0OCA+IGMgfHwgYyA+IDU3KSB7XG4gICAgICAgICAgICAgIHZhbHVlU3VmZml4ID0gKGMgPT09IDQ2ID8gZGVjaW1hbCArIHZhbHVlLnNsaWNlKGkgKyAxKSA6IHZhbHVlLnNsaWNlKGkpKSArIHZhbHVlU3VmZml4O1xuICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDAsIGkpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gSWYgdGhlIGZpbGwgY2hhcmFjdGVyIGlzIG5vdCBcIjBcIiwgZ3JvdXBpbmcgaXMgYXBwbGllZCBiZWZvcmUgcGFkZGluZy5cbiAgICAgIGlmIChjb21tYSAmJiAhemVybykgdmFsdWUgPSBncm91cCh2YWx1ZSwgSW5maW5pdHkpO1xuXG4gICAgICAvLyBDb21wdXRlIHRoZSBwYWRkaW5nLlxuICAgICAgdmFyIGxlbmd0aCA9IHZhbHVlUHJlZml4Lmxlbmd0aCArIHZhbHVlLmxlbmd0aCArIHZhbHVlU3VmZml4Lmxlbmd0aCxcbiAgICAgICAgICBwYWRkaW5nID0gbGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKGZpbGwpIDogXCJcIjtcblxuICAgICAgLy8gSWYgdGhlIGZpbGwgY2hhcmFjdGVyIGlzIFwiMFwiLCBncm91cGluZyBpcyBhcHBsaWVkIGFmdGVyIHBhZGRpbmcuXG4gICAgICBpZiAoY29tbWEgJiYgemVybykgdmFsdWUgPSBncm91cChwYWRkaW5nICsgdmFsdWUsIHBhZGRpbmcubGVuZ3RoID8gd2lkdGggLSB2YWx1ZVN1ZmZpeC5sZW5ndGggOiBJbmZpbml0eSksIHBhZGRpbmcgPSBcIlwiO1xuXG4gICAgICAvLyBSZWNvbnN0cnVjdCB0aGUgZmluYWwgb3V0cHV0IGJhc2VkIG9uIHRoZSBkZXNpcmVkIGFsaWdubWVudC5cbiAgICAgIHN3aXRjaCAoYWxpZ24pIHtcbiAgICAgICAgY2FzZSBcIjxcIjogdmFsdWUgPSB2YWx1ZVByZWZpeCArIHZhbHVlICsgdmFsdWVTdWZmaXggKyBwYWRkaW5nOyBicmVhaztcbiAgICAgICAgY2FzZSBcIj1cIjogdmFsdWUgPSB2YWx1ZVByZWZpeCArIHBhZGRpbmcgKyB2YWx1ZSArIHZhbHVlU3VmZml4OyBicmVhaztcbiAgICAgICAgY2FzZSBcIl5cIjogdmFsdWUgPSBwYWRkaW5nLnNsaWNlKDAsIGxlbmd0aCA9IHBhZGRpbmcubGVuZ3RoID4+IDEpICsgdmFsdWVQcmVmaXggKyB2YWx1ZSArIHZhbHVlU3VmZml4ICsgcGFkZGluZy5zbGljZShsZW5ndGgpOyBicmVhaztcbiAgICAgICAgZGVmYXVsdDogdmFsdWUgPSBwYWRkaW5nICsgdmFsdWVQcmVmaXggKyB2YWx1ZSArIHZhbHVlU3VmZml4OyBicmVhaztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bWVyYWxzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBmb3JtYXQudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBzcGVjaWZpZXIgKyBcIlwiO1xuICAgIH07XG5cbiAgICByZXR1cm4gZm9ybWF0O1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0UHJlZml4KHNwZWNpZmllciwgdmFsdWUpIHtcbiAgICB2YXIgZiA9IG5ld0Zvcm1hdCgoc3BlY2lmaWVyID0gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllciksIHNwZWNpZmllci50eXBlID0gXCJmXCIsIHNwZWNpZmllcikpLFxuICAgICAgICBlID0gTWF0aC5tYXgoLTgsIE1hdGgubWluKDgsIE1hdGguZmxvb3IoZXhwb25lbnQodmFsdWUpIC8gMykpKSAqIDMsXG4gICAgICAgIGsgPSBNYXRoLnBvdygxMCwgLWUpLFxuICAgICAgICBwcmVmaXggPSBwcmVmaXhlc1s4ICsgZSAvIDNdO1xuICAgIHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgcmV0dXJuIGYoayAqIHZhbHVlKSArIHByZWZpeDtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmb3JtYXQ6IG5ld0Zvcm1hdCxcbiAgICBmb3JtYXRQcmVmaXg6IGZvcm1hdFByZWZpeFxuICB9O1xufVxuIiwiaW1wb3J0IGV4cG9uZW50IGZyb20gXCIuL2V4cG9uZW50LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0ZXApIHtcbiAgcmV0dXJuIE1hdGgubWF4KDAsIC1leHBvbmVudChNYXRoLmFicyhzdGVwKSkpO1xufVxuIiwiaW1wb3J0IGV4cG9uZW50IGZyb20gXCIuL2V4cG9uZW50LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0ZXAsIHZhbHVlKSB7XG4gIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihleHBvbmVudCh2YWx1ZSkgLyAzKSkpICogMyAtIGV4cG9uZW50KE1hdGguYWJzKHN0ZXApKSk7XG59XG4iLCJpbXBvcnQgZXhwb25lbnQgZnJvbSBcIi4vZXhwb25lbnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc3RlcCwgbWF4KSB7XG4gIHN0ZXAgPSBNYXRoLmFicyhzdGVwKSwgbWF4ID0gTWF0aC5hYnMobWF4KSAtIHN0ZXA7XG4gIHJldHVybiBNYXRoLm1heCgwLCBleHBvbmVudChtYXgpIC0gZXhwb25lbnQoc3RlcCkpICsgMTtcbn1cbiIsImltcG9ydCB7QWRkZXJ9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHthdGFuMiwgY29zLCBxdWFydGVyUGksIHJhZGlhbnMsIHNpbiwgdGF1fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5pbXBvcnQgbm9vcCBmcm9tIFwiLi9ub29wLmpzXCI7XG5pbXBvcnQgc3RyZWFtIGZyb20gXCIuL3N0cmVhbS5qc1wiO1xuXG5leHBvcnQgdmFyIGFyZWFSaW5nU3VtID0gbmV3IEFkZGVyKCk7XG5cbi8vIGhlbGxvP1xuXG52YXIgYXJlYVN1bSA9IG5ldyBBZGRlcigpLFxuICAgIGxhbWJkYTAwLFxuICAgIHBoaTAwLFxuICAgIGxhbWJkYTAsXG4gICAgY29zUGhpMCxcbiAgICBzaW5QaGkwO1xuXG5leHBvcnQgdmFyIGFyZWFTdHJlYW0gPSB7XG4gIHBvaW50OiBub29wLFxuICBsaW5lU3RhcnQ6IG5vb3AsXG4gIGxpbmVFbmQ6IG5vb3AsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgYXJlYVJpbmdTdW0gPSBuZXcgQWRkZXIoKTtcbiAgICBhcmVhU3RyZWFtLmxpbmVTdGFydCA9IGFyZWFSaW5nU3RhcnQ7XG4gICAgYXJlYVN0cmVhbS5saW5lRW5kID0gYXJlYVJpbmdFbmQ7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmVhUmluZyA9ICthcmVhUmluZ1N1bTtcbiAgICBhcmVhU3VtLmFkZChhcmVhUmluZyA8IDAgPyB0YXUgKyBhcmVhUmluZyA6IGFyZWFSaW5nKTtcbiAgICB0aGlzLmxpbmVTdGFydCA9IHRoaXMubGluZUVuZCA9IHRoaXMucG9pbnQgPSBub29wO1xuICB9LFxuICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgIGFyZWFTdW0uYWRkKHRhdSk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGFyZWFSaW5nU3RhcnQoKSB7XG4gIGFyZWFTdHJlYW0ucG9pbnQgPSBhcmVhUG9pbnRGaXJzdDtcbn1cblxuZnVuY3Rpb24gYXJlYVJpbmdFbmQoKSB7XG4gIGFyZWFQb2ludChsYW1iZGEwMCwgcGhpMDApO1xufVxuXG5mdW5jdGlvbiBhcmVhUG9pbnRGaXJzdChsYW1iZGEsIHBoaSkge1xuICBhcmVhU3RyZWFtLnBvaW50ID0gYXJlYVBvaW50O1xuICBsYW1iZGEwMCA9IGxhbWJkYSwgcGhpMDAgPSBwaGk7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgbGFtYmRhMCA9IGxhbWJkYSwgY29zUGhpMCA9IGNvcyhwaGkgPSBwaGkgLyAyICsgcXVhcnRlclBpKSwgc2luUGhpMCA9IHNpbihwaGkpO1xufVxuXG5mdW5jdGlvbiBhcmVhUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICBwaGkgPSBwaGkgLyAyICsgcXVhcnRlclBpOyAvLyBoYWxmIHRoZSBhbmd1bGFyIGRpc3RhbmNlIGZyb20gc291dGggcG9sZVxuXG4gIC8vIFNwaGVyaWNhbCBleGNlc3MgRSBmb3IgYSBzcGhlcmljYWwgdHJpYW5nbGUgd2l0aCB2ZXJ0aWNlczogc291dGggcG9sZSxcbiAgLy8gcHJldmlvdXMgcG9pbnQsIGN1cnJlbnQgcG9pbnQuICBVc2VzIGEgZm9ybXVsYSBkZXJpdmVkIGZyb20gQ2Fnbm9saeKAmXNcbiAgLy8gdGhlb3JlbS4gIFNlZSBUb2RodW50ZXIsIFNwaGVyaWNhbCBUcmlnLiAoMTg3MSksIFNlYy4gMTAzLCBFcS4gKDIpLlxuICB2YXIgZExhbWJkYSA9IGxhbWJkYSAtIGxhbWJkYTAsXG4gICAgICBzZExhbWJkYSA9IGRMYW1iZGEgPj0gMCA/IDEgOiAtMSxcbiAgICAgIGFkTGFtYmRhID0gc2RMYW1iZGEgKiBkTGFtYmRhLFxuICAgICAgY29zUGhpID0gY29zKHBoaSksXG4gICAgICBzaW5QaGkgPSBzaW4ocGhpKSxcbiAgICAgIGsgPSBzaW5QaGkwICogc2luUGhpLFxuICAgICAgdSA9IGNvc1BoaTAgKiBjb3NQaGkgKyBrICogY29zKGFkTGFtYmRhKSxcbiAgICAgIHYgPSBrICogc2RMYW1iZGEgKiBzaW4oYWRMYW1iZGEpO1xuICBhcmVhUmluZ1N1bS5hZGQoYXRhbjIodiwgdSkpO1xuXG4gIC8vIEFkdmFuY2UgdGhlIHByZXZpb3VzIHBvaW50cy5cbiAgbGFtYmRhMCA9IGxhbWJkYSwgY29zUGhpMCA9IGNvc1BoaSwgc2luUGhpMCA9IHNpblBoaTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqZWN0KSB7XG4gIGFyZWFTdW0gPSBuZXcgQWRkZXIoKTtcbiAgc3RyZWFtKG9iamVjdCwgYXJlYVN0cmVhbSk7XG4gIHJldHVybiBhcmVhU3VtICogMjtcbn1cbiIsImltcG9ydCB7QWRkZXJ9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHthcmVhU3RyZWFtLCBhcmVhUmluZ1N1bX0gZnJvbSBcIi4vYXJlYS5qc1wiO1xuaW1wb3J0IHtjYXJ0ZXNpYW4sIGNhcnRlc2lhbkNyb3NzLCBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlLCBzcGhlcmljYWx9IGZyb20gXCIuL2NhcnRlc2lhbi5qc1wiO1xuaW1wb3J0IHthYnMsIGRlZ3JlZXMsIGVwc2lsb24sIHJhZGlhbnN9IGZyb20gXCIuL21hdGguanNcIjtcbmltcG9ydCBzdHJlYW0gZnJvbSBcIi4vc3RyZWFtLmpzXCI7XG5cbnZhciBsYW1iZGEwLCBwaGkwLCBsYW1iZGExLCBwaGkxLCAvLyBib3VuZHNcbiAgICBsYW1iZGEyLCAvLyBwcmV2aW91cyBsYW1iZGEtY29vcmRpbmF0ZVxuICAgIGxhbWJkYTAwLCBwaGkwMCwgLy8gZmlyc3QgcG9pbnRcbiAgICBwMCwgLy8gcHJldmlvdXMgM0QgcG9pbnRcbiAgICBkZWx0YVN1bSxcbiAgICByYW5nZXMsXG4gICAgcmFuZ2U7XG5cbnZhciBib3VuZHNTdHJlYW0gPSB7XG4gIHBvaW50OiBib3VuZHNQb2ludCxcbiAgbGluZVN0YXJ0OiBib3VuZHNMaW5lU3RhcnQsXG4gIGxpbmVFbmQ6IGJvdW5kc0xpbmVFbmQsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgYm91bmRzU3RyZWFtLnBvaW50ID0gYm91bmRzUmluZ1BvaW50O1xuICAgIGJvdW5kc1N0cmVhbS5saW5lU3RhcnQgPSBib3VuZHNSaW5nU3RhcnQ7XG4gICAgYm91bmRzU3RyZWFtLmxpbmVFbmQgPSBib3VuZHNSaW5nRW5kO1xuICAgIGRlbHRhU3VtID0gbmV3IEFkZGVyKCk7XG4gICAgYXJlYVN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgYXJlYVN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgYm91bmRzU3RyZWFtLnBvaW50ID0gYm91bmRzUG9pbnQ7XG4gICAgYm91bmRzU3RyZWFtLmxpbmVTdGFydCA9IGJvdW5kc0xpbmVTdGFydDtcbiAgICBib3VuZHNTdHJlYW0ubGluZUVuZCA9IGJvdW5kc0xpbmVFbmQ7XG4gICAgaWYgKGFyZWFSaW5nU3VtIDwgMCkgbGFtYmRhMCA9IC0obGFtYmRhMSA9IDE4MCksIHBoaTAgPSAtKHBoaTEgPSA5MCk7XG4gICAgZWxzZSBpZiAoZGVsdGFTdW0gPiBlcHNpbG9uKSBwaGkxID0gOTA7XG4gICAgZWxzZSBpZiAoZGVsdGFTdW0gPCAtZXBzaWxvbikgcGhpMCA9IC05MDtcbiAgICByYW5nZVswXSA9IGxhbWJkYTAsIHJhbmdlWzFdID0gbGFtYmRhMTtcbiAgfSxcbiAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICBsYW1iZGEwID0gLShsYW1iZGExID0gMTgwKSwgcGhpMCA9IC0ocGhpMSA9IDkwKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gYm91bmRzUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgcmFuZ2VzLnB1c2gocmFuZ2UgPSBbbGFtYmRhMCA9IGxhbWJkYSwgbGFtYmRhMSA9IGxhbWJkYV0pO1xuICBpZiAocGhpIDwgcGhpMCkgcGhpMCA9IHBoaTtcbiAgaWYgKHBoaSA+IHBoaTEpIHBoaTEgPSBwaGk7XG59XG5cbmZ1bmN0aW9uIGxpbmVQb2ludChsYW1iZGEsIHBoaSkge1xuICB2YXIgcCA9IGNhcnRlc2lhbihbbGFtYmRhICogcmFkaWFucywgcGhpICogcmFkaWFuc10pO1xuICBpZiAocDApIHtcbiAgICB2YXIgbm9ybWFsID0gY2FydGVzaWFuQ3Jvc3MocDAsIHApLFxuICAgICAgICBlcXVhdG9yaWFsID0gW25vcm1hbFsxXSwgLW5vcm1hbFswXSwgMF0sXG4gICAgICAgIGluZmxlY3Rpb24gPSBjYXJ0ZXNpYW5Dcm9zcyhlcXVhdG9yaWFsLCBub3JtYWwpO1xuICAgIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoaW5mbGVjdGlvbik7XG4gICAgaW5mbGVjdGlvbiA9IHNwaGVyaWNhbChpbmZsZWN0aW9uKTtcbiAgICB2YXIgZGVsdGEgPSBsYW1iZGEgLSBsYW1iZGEyLFxuICAgICAgICBzaWduID0gZGVsdGEgPiAwID8gMSA6IC0xLFxuICAgICAgICBsYW1iZGFpID0gaW5mbGVjdGlvblswXSAqIGRlZ3JlZXMgKiBzaWduLFxuICAgICAgICBwaGlpLFxuICAgICAgICBhbnRpbWVyaWRpYW4gPSBhYnMoZGVsdGEpID4gMTgwO1xuICAgIGlmIChhbnRpbWVyaWRpYW4gXiAoc2lnbiAqIGxhbWJkYTIgPCBsYW1iZGFpICYmIGxhbWJkYWkgPCBzaWduICogbGFtYmRhKSkge1xuICAgICAgcGhpaSA9IGluZmxlY3Rpb25bMV0gKiBkZWdyZWVzO1xuICAgICAgaWYgKHBoaWkgPiBwaGkxKSBwaGkxID0gcGhpaTtcbiAgICB9IGVsc2UgaWYgKGxhbWJkYWkgPSAobGFtYmRhaSArIDM2MCkgJSAzNjAgLSAxODAsIGFudGltZXJpZGlhbiBeIChzaWduICogbGFtYmRhMiA8IGxhbWJkYWkgJiYgbGFtYmRhaSA8IHNpZ24gKiBsYW1iZGEpKSB7XG4gICAgICBwaGlpID0gLWluZmxlY3Rpb25bMV0gKiBkZWdyZWVzO1xuICAgICAgaWYgKHBoaWkgPCBwaGkwKSBwaGkwID0gcGhpaTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHBoaSA8IHBoaTApIHBoaTAgPSBwaGk7XG4gICAgICBpZiAocGhpID4gcGhpMSkgcGhpMSA9IHBoaTtcbiAgICB9XG4gICAgaWYgKGFudGltZXJpZGlhbikge1xuICAgICAgaWYgKGxhbWJkYSA8IGxhbWJkYTIpIHtcbiAgICAgICAgaWYgKGFuZ2xlKGxhbWJkYTAsIGxhbWJkYSkgPiBhbmdsZShsYW1iZGEwLCBsYW1iZGExKSkgbGFtYmRhMSA9IGxhbWJkYTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChhbmdsZShsYW1iZGEsIGxhbWJkYTEpID4gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkpIGxhbWJkYTAgPSBsYW1iZGE7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChsYW1iZGExID49IGxhbWJkYTApIHtcbiAgICAgICAgaWYgKGxhbWJkYSA8IGxhbWJkYTApIGxhbWJkYTAgPSBsYW1iZGE7XG4gICAgICAgIGlmIChsYW1iZGEgPiBsYW1iZGExKSBsYW1iZGExID0gbGFtYmRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGxhbWJkYSA+IGxhbWJkYTIpIHtcbiAgICAgICAgICBpZiAoYW5nbGUobGFtYmRhMCwgbGFtYmRhKSA+IGFuZ2xlKGxhbWJkYTAsIGxhbWJkYTEpKSBsYW1iZGExID0gbGFtYmRhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChhbmdsZShsYW1iZGEsIGxhbWJkYTEpID4gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkpIGxhbWJkYTAgPSBsYW1iZGE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmFuZ2VzLnB1c2gocmFuZ2UgPSBbbGFtYmRhMCA9IGxhbWJkYSwgbGFtYmRhMSA9IGxhbWJkYV0pO1xuICB9XG4gIGlmIChwaGkgPCBwaGkwKSBwaGkwID0gcGhpO1xuICBpZiAocGhpID4gcGhpMSkgcGhpMSA9IHBoaTtcbiAgcDAgPSBwLCBsYW1iZGEyID0gbGFtYmRhO1xufVxuXG5mdW5jdGlvbiBib3VuZHNMaW5lU3RhcnQoKSB7XG4gIGJvdW5kc1N0cmVhbS5wb2ludCA9IGxpbmVQb2ludDtcbn1cblxuZnVuY3Rpb24gYm91bmRzTGluZUVuZCgpIHtcbiAgcmFuZ2VbMF0gPSBsYW1iZGEwLCByYW5nZVsxXSA9IGxhbWJkYTE7XG4gIGJvdW5kc1N0cmVhbS5wb2ludCA9IGJvdW5kc1BvaW50O1xuICBwMCA9IG51bGw7XG59XG5cbmZ1bmN0aW9uIGJvdW5kc1JpbmdQb2ludChsYW1iZGEsIHBoaSkge1xuICBpZiAocDApIHtcbiAgICB2YXIgZGVsdGEgPSBsYW1iZGEgLSBsYW1iZGEyO1xuICAgIGRlbHRhU3VtLmFkZChhYnMoZGVsdGEpID4gMTgwID8gZGVsdGEgKyAoZGVsdGEgPiAwID8gMzYwIDogLTM2MCkgOiBkZWx0YSk7XG4gIH0gZWxzZSB7XG4gICAgbGFtYmRhMDAgPSBsYW1iZGEsIHBoaTAwID0gcGhpO1xuICB9XG4gIGFyZWFTdHJlYW0ucG9pbnQobGFtYmRhLCBwaGkpO1xuICBsaW5lUG9pbnQobGFtYmRhLCBwaGkpO1xufVxuXG5mdW5jdGlvbiBib3VuZHNSaW5nU3RhcnQoKSB7XG4gIGFyZWFTdHJlYW0ubGluZVN0YXJ0KCk7XG59XG5cbmZ1bmN0aW9uIGJvdW5kc1JpbmdFbmQoKSB7XG4gIGJvdW5kc1JpbmdQb2ludChsYW1iZGEwMCwgcGhpMDApO1xuICBhcmVhU3RyZWFtLmxpbmVFbmQoKTtcbiAgaWYgKGFicyhkZWx0YVN1bSkgPiBlcHNpbG9uKSBsYW1iZGEwID0gLShsYW1iZGExID0gMTgwKTtcbiAgcmFuZ2VbMF0gPSBsYW1iZGEwLCByYW5nZVsxXSA9IGxhbWJkYTE7XG4gIHAwID0gbnVsbDtcbn1cblxuLy8gRmluZHMgdGhlIGxlZnQtcmlnaHQgZGlzdGFuY2UgYmV0d2VlbiB0d28gbG9uZ2l0dWRlcy5cbi8vIFRoaXMgaXMgYWxtb3N0IHRoZSBzYW1lIGFzIChsYW1iZGExIC0gbGFtYmRhMCArIDM2MMKwKSAlIDM2MMKwLCBleGNlcHQgdGhhdCB3ZSB3YW50XG4vLyB0aGUgZGlzdGFuY2UgYmV0d2VlbiDCsTE4MMKwIHRvIGJlIDM2MMKwLlxuZnVuY3Rpb24gYW5nbGUobGFtYmRhMCwgbGFtYmRhMSkge1xuICByZXR1cm4gKGxhbWJkYTEgLT0gbGFtYmRhMCkgPCAwID8gbGFtYmRhMSArIDM2MCA6IGxhbWJkYTE7XG59XG5cbmZ1bmN0aW9uIHJhbmdlQ29tcGFyZShhLCBiKSB7XG4gIHJldHVybiBhWzBdIC0gYlswXTtcbn1cblxuZnVuY3Rpb24gcmFuZ2VDb250YWlucyhyYW5nZSwgeCkge1xuICByZXR1cm4gcmFuZ2VbMF0gPD0gcmFuZ2VbMV0gPyByYW5nZVswXSA8PSB4ICYmIHggPD0gcmFuZ2VbMV0gOiB4IDwgcmFuZ2VbMF0gfHwgcmFuZ2VbMV0gPCB4O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihmZWF0dXJlKSB7XG4gIHZhciBpLCBuLCBhLCBiLCBtZXJnZWQsIGRlbHRhTWF4LCBkZWx0YTtcblxuICBwaGkxID0gbGFtYmRhMSA9IC0obGFtYmRhMCA9IHBoaTAgPSBJbmZpbml0eSk7XG4gIHJhbmdlcyA9IFtdO1xuICBzdHJlYW0oZmVhdHVyZSwgYm91bmRzU3RyZWFtKTtcblxuICAvLyBGaXJzdCwgc29ydCByYW5nZXMgYnkgdGhlaXIgbWluaW11bSBsb25naXR1ZGVzLlxuICBpZiAobiA9IHJhbmdlcy5sZW5ndGgpIHtcbiAgICByYW5nZXMuc29ydChyYW5nZUNvbXBhcmUpO1xuXG4gICAgLy8gVGhlbiwgbWVyZ2UgYW55IHJhbmdlcyB0aGF0IG92ZXJsYXAuXG4gICAgZm9yIChpID0gMSwgYSA9IHJhbmdlc1swXSwgbWVyZ2VkID0gW2FdOyBpIDwgbjsgKytpKSB7XG4gICAgICBiID0gcmFuZ2VzW2ldO1xuICAgICAgaWYgKHJhbmdlQ29udGFpbnMoYSwgYlswXSkgfHwgcmFuZ2VDb250YWlucyhhLCBiWzFdKSkge1xuICAgICAgICBpZiAoYW5nbGUoYVswXSwgYlsxXSkgPiBhbmdsZShhWzBdLCBhWzFdKSkgYVsxXSA9IGJbMV07XG4gICAgICAgIGlmIChhbmdsZShiWzBdLCBhWzFdKSA+IGFuZ2xlKGFbMF0sIGFbMV0pKSBhWzBdID0gYlswXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1lcmdlZC5wdXNoKGEgPSBiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBGaW5hbGx5LCBmaW5kIHRoZSBsYXJnZXN0IGdhcCBiZXR3ZWVuIHRoZSBtZXJnZWQgcmFuZ2VzLlxuICAgIC8vIFRoZSBmaW5hbCBib3VuZGluZyBib3ggd2lsbCBiZSB0aGUgaW52ZXJzZSBvZiB0aGlzIGdhcC5cbiAgICBmb3IgKGRlbHRhTWF4ID0gLUluZmluaXR5LCBuID0gbWVyZ2VkLmxlbmd0aCAtIDEsIGkgPSAwLCBhID0gbWVyZ2VkW25dOyBpIDw9IG47IGEgPSBiLCArK2kpIHtcbiAgICAgIGIgPSBtZXJnZWRbaV07XG4gICAgICBpZiAoKGRlbHRhID0gYW5nbGUoYVsxXSwgYlswXSkpID4gZGVsdGFNYXgpIGRlbHRhTWF4ID0gZGVsdGEsIGxhbWJkYTAgPSBiWzBdLCBsYW1iZGExID0gYVsxXTtcbiAgICB9XG4gIH1cblxuICByYW5nZXMgPSByYW5nZSA9IG51bGw7XG5cbiAgcmV0dXJuIGxhbWJkYTAgPT09IEluZmluaXR5IHx8IHBoaTAgPT09IEluZmluaXR5XG4gICAgICA/IFtbTmFOLCBOYU5dLCBbTmFOLCBOYU5dXVxuICAgICAgOiBbW2xhbWJkYTAsIHBoaTBdLCBbbGFtYmRhMSwgcGhpMV1dO1xufVxuIiwiaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBzaW4sIHNxcnR9IGZyb20gXCIuL21hdGguanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHNwaGVyaWNhbChjYXJ0ZXNpYW4pIHtcbiAgcmV0dXJuIFthdGFuMihjYXJ0ZXNpYW5bMV0sIGNhcnRlc2lhblswXSksIGFzaW4oY2FydGVzaWFuWzJdKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW4oc3BoZXJpY2FsKSB7XG4gIHZhciBsYW1iZGEgPSBzcGhlcmljYWxbMF0sIHBoaSA9IHNwaGVyaWNhbFsxXSwgY29zUGhpID0gY29zKHBoaSk7XG4gIHJldHVybiBbY29zUGhpICogY29zKGxhbWJkYSksIGNvc1BoaSAqIHNpbihsYW1iZGEpLCBzaW4ocGhpKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5Eb3QoYSwgYikge1xuICByZXR1cm4gYVswXSAqIGJbMF0gKyBhWzFdICogYlsxXSArIGFbMl0gKiBiWzJdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FydGVzaWFuQ3Jvc3MoYSwgYikge1xuICByZXR1cm4gW2FbMV0gKiBiWzJdIC0gYVsyXSAqIGJbMV0sIGFbMl0gKiBiWzBdIC0gYVswXSAqIGJbMl0sIGFbMF0gKiBiWzFdIC0gYVsxXSAqIGJbMF1dO1xufVxuXG4vLyBUT0RPIHJldHVybiBhXG5leHBvcnQgZnVuY3Rpb24gY2FydGVzaWFuQWRkSW5QbGFjZShhLCBiKSB7XG4gIGFbMF0gKz0gYlswXSwgYVsxXSArPSBiWzFdLCBhWzJdICs9IGJbMl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5TY2FsZSh2ZWN0b3IsIGspIHtcbiAgcmV0dXJuIFt2ZWN0b3JbMF0gKiBrLCB2ZWN0b3JbMV0gKiBrLCB2ZWN0b3JbMl0gKiBrXTtcbn1cblxuLy8gVE9ETyByZXR1cm4gZFxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoZCkge1xuICB2YXIgbCA9IHNxcnQoZFswXSAqIGRbMF0gKyBkWzFdICogZFsxXSArIGRbMl0gKiBkWzJdKTtcbiAgZFswXSAvPSBsLCBkWzFdIC89IGwsIGRbMl0gLz0gbDtcbn1cbiIsImltcG9ydCB7QWRkZXJ9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBkZWdyZWVzLCBlcHNpbG9uLCBlcHNpbG9uMiwgaHlwb3QsIHJhZGlhbnMsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcC5qc1wiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi9zdHJlYW0uanNcIjtcblxudmFyIFcwLCBXMSxcbiAgICBYMCwgWTAsIFowLFxuICAgIFgxLCBZMSwgWjEsXG4gICAgWDIsIFkyLCBaMixcbiAgICBsYW1iZGEwMCwgcGhpMDAsIC8vIGZpcnN0IHBvaW50XG4gICAgeDAsIHkwLCB6MDsgLy8gcHJldmlvdXMgcG9pbnRcblxudmFyIGNlbnRyb2lkU3RyZWFtID0ge1xuICBzcGhlcmU6IG5vb3AsXG4gIHBvaW50OiBjZW50cm9pZFBvaW50LFxuICBsaW5lU3RhcnQ6IGNlbnRyb2lkTGluZVN0YXJ0LFxuICBsaW5lRW5kOiBjZW50cm9pZExpbmVFbmQsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZVN0YXJ0ID0gY2VudHJvaWRSaW5nU3RhcnQ7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZUVuZCA9IGNlbnRyb2lkUmluZ0VuZDtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZVN0YXJ0ID0gY2VudHJvaWRMaW5lU3RhcnQ7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZUVuZCA9IGNlbnRyb2lkTGluZUVuZDtcbiAgfVxufTtcblxuLy8gQXJpdGhtZXRpYyBtZWFuIG9mIENhcnRlc2lhbiB2ZWN0b3JzLlxuZnVuY3Rpb24gY2VudHJvaWRQb2ludChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIHZhciBjb3NQaGkgPSBjb3MocGhpKTtcbiAgY2VudHJvaWRQb2ludENhcnRlc2lhbihjb3NQaGkgKiBjb3MobGFtYmRhKSwgY29zUGhpICogc2luKGxhbWJkYSksIHNpbihwaGkpKTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRQb2ludENhcnRlc2lhbih4LCB5LCB6KSB7XG4gICsrVzA7XG4gIFgwICs9ICh4IC0gWDApIC8gVzA7XG4gIFkwICs9ICh5IC0gWTApIC8gVzA7XG4gIFowICs9ICh6IC0gWjApIC8gVzA7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkTGluZVN0YXJ0KCkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkTGluZVBvaW50Rmlyc3Q7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkTGluZVBvaW50Rmlyc3QobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICB2YXIgY29zUGhpID0gY29zKHBoaSk7XG4gIHgwID0gY29zUGhpICogY29zKGxhbWJkYSk7XG4gIHkwID0gY29zUGhpICogc2luKGxhbWJkYSk7XG4gIHowID0gc2luKHBoaSk7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRMaW5lUG9pbnQ7XG4gIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeDAsIHkwLCB6MCk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkTGluZVBvaW50KGxhbWJkYSwgcGhpKSB7XG4gIGxhbWJkYSAqPSByYWRpYW5zLCBwaGkgKj0gcmFkaWFucztcbiAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgeCA9IGNvc1BoaSAqIGNvcyhsYW1iZGEpLFxuICAgICAgeSA9IGNvc1BoaSAqIHNpbihsYW1iZGEpLFxuICAgICAgeiA9IHNpbihwaGkpLFxuICAgICAgdyA9IGF0YW4yKHNxcnQoKHcgPSB5MCAqIHogLSB6MCAqIHkpICogdyArICh3ID0gejAgKiB4IC0geDAgKiB6KSAqIHcgKyAodyA9IHgwICogeSAtIHkwICogeCkgKiB3KSwgeDAgKiB4ICsgeTAgKiB5ICsgejAgKiB6KTtcbiAgVzEgKz0gdztcbiAgWDEgKz0gdyAqICh4MCArICh4MCA9IHgpKTtcbiAgWTEgKz0gdyAqICh5MCArICh5MCA9IHkpKTtcbiAgWjEgKz0gdyAqICh6MCArICh6MCA9IHopKTtcbiAgY2VudHJvaWRQb2ludENhcnRlc2lhbih4MCwgeTAsIHowKTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lRW5kKCkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnQ7XG59XG5cbi8vIFNlZSBKLiBFLiBCcm9jaywgVGhlIEluZXJ0aWEgVGVuc29yIGZvciBhIFNwaGVyaWNhbCBUcmlhbmdsZSxcbi8vIEouIEFwcGxpZWQgTWVjaGFuaWNzIDQyLCAyMzkgKDE5NzUpLlxuZnVuY3Rpb24gY2VudHJvaWRSaW5nU3RhcnQoKSB7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRSaW5nUG9pbnRGaXJzdDtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nRW5kKCkge1xuICBjZW50cm9pZFJpbmdQb2ludChsYW1iZGEwMCwgcGhpMDApO1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnQ7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUmluZ1BvaW50Rmlyc3QobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhMDAgPSBsYW1iZGEsIHBoaTAwID0gcGhpO1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIGNlbnRyb2lkU3RyZWFtLnBvaW50ID0gY2VudHJvaWRSaW5nUG9pbnQ7XG4gIHZhciBjb3NQaGkgPSBjb3MocGhpKTtcbiAgeDAgPSBjb3NQaGkgKiBjb3MobGFtYmRhKTtcbiAgeTAgPSBjb3NQaGkgKiBzaW4obGFtYmRhKTtcbiAgejAgPSBzaW4ocGhpKTtcbiAgY2VudHJvaWRQb2ludENhcnRlc2lhbih4MCwgeTAsIHowKTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRSaW5nUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICB2YXIgY29zUGhpID0gY29zKHBoaSksXG4gICAgICB4ID0gY29zUGhpICogY29zKGxhbWJkYSksXG4gICAgICB5ID0gY29zUGhpICogc2luKGxhbWJkYSksXG4gICAgICB6ID0gc2luKHBoaSksXG4gICAgICBjeCA9IHkwICogeiAtIHowICogeSxcbiAgICAgIGN5ID0gejAgKiB4IC0geDAgKiB6LFxuICAgICAgY3ogPSB4MCAqIHkgLSB5MCAqIHgsXG4gICAgICBtID0gaHlwb3QoY3gsIGN5LCBjeiksXG4gICAgICB3ID0gYXNpbihtKSwgLy8gbGluZSB3ZWlnaHQgPSBhbmdsZVxuICAgICAgdiA9IG0gJiYgLXcgLyBtOyAvLyBhcmVhIHdlaWdodCBtdWx0aXBsaWVyXG4gIFgyLmFkZCh2ICogY3gpO1xuICBZMi5hZGQodiAqIGN5KTtcbiAgWjIuYWRkKHYgKiBjeik7XG4gIFcxICs9IHc7XG4gIFgxICs9IHcgKiAoeDAgKyAoeDAgPSB4KSk7XG4gIFkxICs9IHcgKiAoeTAgKyAoeTAgPSB5KSk7XG4gIFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gIGNlbnRyb2lkUG9pbnRDYXJ0ZXNpYW4oeDAsIHkwLCB6MCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCkge1xuICBXMCA9IFcxID1cbiAgWDAgPSBZMCA9IFowID1cbiAgWDEgPSBZMSA9IFoxID0gMDtcbiAgWDIgPSBuZXcgQWRkZXIoKTtcbiAgWTIgPSBuZXcgQWRkZXIoKTtcbiAgWjIgPSBuZXcgQWRkZXIoKTtcbiAgc3RyZWFtKG9iamVjdCwgY2VudHJvaWRTdHJlYW0pO1xuXG4gIHZhciB4ID0gK1gyLFxuICAgICAgeSA9ICtZMixcbiAgICAgIHogPSArWjIsXG4gICAgICBtID0gaHlwb3QoeCwgeSwgeik7XG5cbiAgLy8gSWYgdGhlIGFyZWEtd2VpZ2h0ZWQgY2NlbnRyb2lkIGlzIHVuZGVmaW5lZCwgZmFsbCBiYWNrIHRvIGxlbmd0aC13ZWlnaHRlZCBjY2VudHJvaWQuXG4gIGlmIChtIDwgZXBzaWxvbjIpIHtcbiAgICB4ID0gWDEsIHkgPSBZMSwgeiA9IFoxO1xuICAgIC8vIElmIHRoZSBmZWF0dXJlIGhhcyB6ZXJvIGxlbmd0aCwgZmFsbCBiYWNrIHRvIGFyaXRobWV0aWMgbWVhbiBvZiBwb2ludCB2ZWN0b3JzLlxuICAgIGlmIChXMSA8IGVwc2lsb24pIHggPSBYMCwgeSA9IFkwLCB6ID0gWjA7XG4gICAgbSA9IGh5cG90KHgsIHksIHopO1xuICAgIC8vIElmIHRoZSBmZWF0dXJlIHN0aWxsIGhhcyBhbiB1bmRlZmluZWQgY2NlbnRyb2lkLCB0aGVuIHJldHVybi5cbiAgICBpZiAobSA8IGVwc2lsb24yKSByZXR1cm4gW05hTiwgTmFOXTtcbiAgfVxuXG4gIHJldHVybiBbYXRhbjIoeSwgeCkgKiBkZWdyZWVzLCBhc2luKHogLyBtKSAqIGRlZ3JlZXNdO1xufVxuIiwiaW1wb3J0IHtjYXJ0ZXNpYW4sIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UsIHNwaGVyaWNhbH0gZnJvbSBcIi4vY2FydGVzaWFuLmpzXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCB7YWNvcywgY29zLCBkZWdyZWVzLCBlcHNpbG9uLCByYWRpYW5zLCBzaW4sIHRhdX0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuaW1wb3J0IHtyb3RhdGVSYWRpYW5zfSBmcm9tIFwiLi9yb3RhdGlvbi5qc1wiO1xuXG4vLyBHZW5lcmF0ZXMgYSBjaXJjbGUgY2VudGVyZWQgYXQgWzDCsCwgMMKwXSwgd2l0aCBhIGdpdmVuIHJhZGl1cyBhbmQgcHJlY2lzaW9uLlxuZXhwb3J0IGZ1bmN0aW9uIGNpcmNsZVN0cmVhbShzdHJlYW0sIHJhZGl1cywgZGVsdGEsIGRpcmVjdGlvbiwgdDAsIHQxKSB7XG4gIGlmICghZGVsdGEpIHJldHVybjtcbiAgdmFyIGNvc1JhZGl1cyA9IGNvcyhyYWRpdXMpLFxuICAgICAgc2luUmFkaXVzID0gc2luKHJhZGl1cyksXG4gICAgICBzdGVwID0gZGlyZWN0aW9uICogZGVsdGE7XG4gIGlmICh0MCA9PSBudWxsKSB7XG4gICAgdDAgPSByYWRpdXMgKyBkaXJlY3Rpb24gKiB0YXU7XG4gICAgdDEgPSByYWRpdXMgLSBzdGVwIC8gMjtcbiAgfSBlbHNlIHtcbiAgICB0MCA9IGNpcmNsZVJhZGl1cyhjb3NSYWRpdXMsIHQwKTtcbiAgICB0MSA9IGNpcmNsZVJhZGl1cyhjb3NSYWRpdXMsIHQxKTtcbiAgICBpZiAoZGlyZWN0aW9uID4gMCA/IHQwIDwgdDEgOiB0MCA+IHQxKSB0MCArPSBkaXJlY3Rpb24gKiB0YXU7XG4gIH1cbiAgZm9yICh2YXIgcG9pbnQsIHQgPSB0MDsgZGlyZWN0aW9uID4gMCA/IHQgPiB0MSA6IHQgPCB0MTsgdCAtPSBzdGVwKSB7XG4gICAgcG9pbnQgPSBzcGhlcmljYWwoW2Nvc1JhZGl1cywgLXNpblJhZGl1cyAqIGNvcyh0KSwgLXNpblJhZGl1cyAqIHNpbih0KV0pO1xuICAgIHN0cmVhbS5wb2ludChwb2ludFswXSwgcG9pbnRbMV0pO1xuICB9XG59XG5cbi8vIFJldHVybnMgdGhlIHNpZ25lZCBhbmdsZSBvZiBhIGNhcnRlc2lhbiBwb2ludCByZWxhdGl2ZSB0byBbY29zUmFkaXVzLCAwLCAwXS5cbmZ1bmN0aW9uIGNpcmNsZVJhZGl1cyhjb3NSYWRpdXMsIHBvaW50KSB7XG4gIHBvaW50ID0gY2FydGVzaWFuKHBvaW50KSwgcG9pbnRbMF0gLT0gY29zUmFkaXVzO1xuICBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlKHBvaW50KTtcbiAgdmFyIHJhZGl1cyA9IGFjb3MoLXBvaW50WzFdKTtcbiAgcmV0dXJuICgoLXBvaW50WzJdIDwgMCA/IC1yYWRpdXMgOiByYWRpdXMpICsgdGF1IC0gZXBzaWxvbikgJSB0YXU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY2VudGVyID0gY29uc3RhbnQoWzAsIDBdKSxcbiAgICAgIHJhZGl1cyA9IGNvbnN0YW50KDkwKSxcbiAgICAgIHByZWNpc2lvbiA9IGNvbnN0YW50KDYpLFxuICAgICAgcmluZyxcbiAgICAgIHJvdGF0ZSxcbiAgICAgIHN0cmVhbSA9IHtwb2ludDogcG9pbnR9O1xuXG4gIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICByaW5nLnB1c2goeCA9IHJvdGF0ZSh4LCB5KSk7XG4gICAgeFswXSAqPSBkZWdyZWVzLCB4WzFdICo9IGRlZ3JlZXM7XG4gIH1cblxuICBmdW5jdGlvbiBjaXJjbGUoKSB7XG4gICAgdmFyIGMgPSBjZW50ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgciA9IHJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpICogcmFkaWFucyxcbiAgICAgICAgcCA9IHByZWNpc2lvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpICogcmFkaWFucztcbiAgICByaW5nID0gW107XG4gICAgcm90YXRlID0gcm90YXRlUmFkaWFucygtY1swXSAqIHJhZGlhbnMsIC1jWzFdICogcmFkaWFucywgMCkuaW52ZXJ0O1xuICAgIGNpcmNsZVN0cmVhbShzdHJlYW0sIHIsIHAsIDEpO1xuICAgIGMgPSB7dHlwZTogXCJQb2x5Z29uXCIsIGNvb3JkaW5hdGVzOiBbcmluZ119O1xuICAgIHJpbmcgPSByb3RhdGUgPSBudWxsO1xuICAgIHJldHVybiBjO1xuICB9XG5cbiAgY2lyY2xlLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjZW50ZXIgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KFsrX1swXSwgK19bMV1dKSwgY2lyY2xlKSA6IGNlbnRlcjtcbiAgfTtcblxuICBjaXJjbGUucmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBjaXJjbGUpIDogcmFkaXVzO1xuICB9O1xuXG4gIGNpcmNsZS5wcmVjaXNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocHJlY2lzaW9uID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGNpcmNsZSkgOiBwcmVjaXNpb247XG4gIH07XG5cbiAgcmV0dXJuIGNpcmNsZTtcbn1cbiIsImltcG9ydCBjbGlwIGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQge2FicywgYXRhbiwgY29zLCBlcHNpbG9uLCBoYWxmUGksIHBpLCBzaW59IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsaXAoXG4gIGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSxcbiAgY2xpcEFudGltZXJpZGlhbkxpbmUsXG4gIGNsaXBBbnRpbWVyaWRpYW5JbnRlcnBvbGF0ZSxcbiAgWy1waSwgLWhhbGZQaV1cbik7XG5cbi8vIFRha2VzIGEgbGluZSBhbmQgY3V0cyBpbnRvIHZpc2libGUgc2VnbWVudHMuIFJldHVybiB2YWx1ZXM6IDAgLSB0aGVyZSB3ZXJlXG4vLyBpbnRlcnNlY3Rpb25zIG9yIHRoZSBsaW5lIHdhcyBlbXB0eTsgMSAtIG5vIGludGVyc2VjdGlvbnM7IDIgLSB0aGVyZSB3ZXJlXG4vLyBpbnRlcnNlY3Rpb25zLCBhbmQgdGhlIGZpcnN0IGFuZCBsYXN0IHNlZ21lbnRzIHNob3VsZCBiZSByZWpvaW5lZC5cbmZ1bmN0aW9uIGNsaXBBbnRpbWVyaWRpYW5MaW5lKHN0cmVhbSkge1xuICB2YXIgbGFtYmRhMCA9IE5hTixcbiAgICAgIHBoaTAgPSBOYU4sXG4gICAgICBzaWduMCA9IE5hTixcbiAgICAgIGNsZWFuOyAvLyBubyBpbnRlcnNlY3Rpb25zXG5cbiAgcmV0dXJuIHtcbiAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgY2xlYW4gPSAxO1xuICAgIH0sXG4gICAgcG9pbnQ6IGZ1bmN0aW9uKGxhbWJkYTEsIHBoaTEpIHtcbiAgICAgIHZhciBzaWduMSA9IGxhbWJkYTEgPiAwID8gcGkgOiAtcGksXG4gICAgICAgICAgZGVsdGEgPSBhYnMobGFtYmRhMSAtIGxhbWJkYTApO1xuICAgICAgaWYgKGFicyhkZWx0YSAtIHBpKSA8IGVwc2lsb24pIHsgLy8gbGluZSBjcm9zc2VzIGEgcG9sZVxuICAgICAgICBzdHJlYW0ucG9pbnQobGFtYmRhMCwgcGhpMCA9IChwaGkwICsgcGhpMSkgLyAyID4gMCA/IGhhbGZQaSA6IC1oYWxmUGkpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoc2lnbjAsIHBoaTApO1xuICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgIHN0cmVhbS5wb2ludChzaWduMSwgcGhpMCk7XG4gICAgICAgIHN0cmVhbS5wb2ludChsYW1iZGExLCBwaGkwKTtcbiAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgfSBlbHNlIGlmIChzaWduMCAhPT0gc2lnbjEgJiYgZGVsdGEgPj0gcGkpIHsgLy8gbGluZSBjcm9zc2VzIGFudGltZXJpZGlhblxuICAgICAgICBpZiAoYWJzKGxhbWJkYTAgLSBzaWduMCkgPCBlcHNpbG9uKSBsYW1iZGEwIC09IHNpZ24wICogZXBzaWxvbjsgLy8gaGFuZGxlIGRlZ2VuZXJhY2llc1xuICAgICAgICBpZiAoYWJzKGxhbWJkYTEgLSBzaWduMSkgPCBlcHNpbG9uKSBsYW1iZGExIC09IHNpZ24xICogZXBzaWxvbjtcbiAgICAgICAgcGhpMCA9IGNsaXBBbnRpbWVyaWRpYW5JbnRlcnNlY3QobGFtYmRhMCwgcGhpMCwgbGFtYmRhMSwgcGhpMSk7XG4gICAgICAgIHN0cmVhbS5wb2ludChzaWduMCwgcGhpMCk7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHNpZ24xLCBwaGkwKTtcbiAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgfVxuICAgICAgc3RyZWFtLnBvaW50KGxhbWJkYTAgPSBsYW1iZGExLCBwaGkwID0gcGhpMSk7XG4gICAgICBzaWduMCA9IHNpZ24xO1xuICAgIH0sXG4gICAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgbGFtYmRhMCA9IHBoaTAgPSBOYU47XG4gICAgfSxcbiAgICBjbGVhbjogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gMiAtIGNsZWFuOyAvLyBpZiBpbnRlcnNlY3Rpb25zLCByZWpvaW4gZmlyc3QgYW5kIGxhc3Qgc2VnbWVudHNcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNsaXBBbnRpbWVyaWRpYW5JbnRlcnNlY3QobGFtYmRhMCwgcGhpMCwgbGFtYmRhMSwgcGhpMSkge1xuICB2YXIgY29zUGhpMCxcbiAgICAgIGNvc1BoaTEsXG4gICAgICBzaW5MYW1iZGEwTGFtYmRhMSA9IHNpbihsYW1iZGEwIC0gbGFtYmRhMSk7XG4gIHJldHVybiBhYnMoc2luTGFtYmRhMExhbWJkYTEpID4gZXBzaWxvblxuICAgICAgPyBhdGFuKChzaW4ocGhpMCkgKiAoY29zUGhpMSA9IGNvcyhwaGkxKSkgKiBzaW4obGFtYmRhMSlcbiAgICAgICAgICAtIHNpbihwaGkxKSAqIChjb3NQaGkwID0gY29zKHBoaTApKSAqIHNpbihsYW1iZGEwKSlcbiAgICAgICAgICAvIChjb3NQaGkwICogY29zUGhpMSAqIHNpbkxhbWJkYTBMYW1iZGExKSlcbiAgICAgIDogKHBoaTAgKyBwaGkxKSAvIDI7XG59XG5cbmZ1bmN0aW9uIGNsaXBBbnRpbWVyaWRpYW5JbnRlcnBvbGF0ZShmcm9tLCB0bywgZGlyZWN0aW9uLCBzdHJlYW0pIHtcbiAgdmFyIHBoaTtcbiAgaWYgKGZyb20gPT0gbnVsbCkge1xuICAgIHBoaSA9IGRpcmVjdGlvbiAqIGhhbGZQaTtcbiAgICBzdHJlYW0ucG9pbnQoLXBpLCBwaGkpO1xuICAgIHN0cmVhbS5wb2ludCgwLCBwaGkpO1xuICAgIHN0cmVhbS5wb2ludChwaSwgcGhpKTtcbiAgICBzdHJlYW0ucG9pbnQocGksIDApO1xuICAgIHN0cmVhbS5wb2ludChwaSwgLXBoaSk7XG4gICAgc3RyZWFtLnBvaW50KDAsIC1waGkpO1xuICAgIHN0cmVhbS5wb2ludCgtcGksIC1waGkpO1xuICAgIHN0cmVhbS5wb2ludCgtcGksIDApO1xuICAgIHN0cmVhbS5wb2ludCgtcGksIHBoaSk7XG4gIH0gZWxzZSBpZiAoYWJzKGZyb21bMF0gLSB0b1swXSkgPiBlcHNpbG9uKSB7XG4gICAgdmFyIGxhbWJkYSA9IGZyb21bMF0gPCB0b1swXSA/IHBpIDogLXBpO1xuICAgIHBoaSA9IGRpcmVjdGlvbiAqIGxhbWJkYSAvIDI7XG4gICAgc3RyZWFtLnBvaW50KC1sYW1iZGEsIHBoaSk7XG4gICAgc3RyZWFtLnBvaW50KDAsIHBoaSk7XG4gICAgc3RyZWFtLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgfSBlbHNlIHtcbiAgICBzdHJlYW0ucG9pbnQodG9bMF0sIHRvWzFdKTtcbiAgfVxufVxuIiwiaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3AuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBsaW5lcyA9IFtdLFxuICAgICAgbGluZTtcbiAgcmV0dXJuIHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSwgbSkge1xuICAgICAgbGluZS5wdXNoKFt4LCB5LCBtXSk7XG4gICAgfSxcbiAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgbGluZXMucHVzaChsaW5lID0gW10pO1xuICAgIH0sXG4gICAgbGluZUVuZDogbm9vcCxcbiAgICByZWpvaW46IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKGxpbmVzLmxlbmd0aCA+IDEpIGxpbmVzLnB1c2gobGluZXMucG9wKCkuY29uY2F0KGxpbmVzLnNoaWZ0KCkpKTtcbiAgICB9LFxuICAgIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gbGluZXM7XG4gICAgICBsaW5lcyA9IFtdO1xuICAgICAgbGluZSA9IG51bGw7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfTtcbn1cbiIsImltcG9ydCB7Y2FydGVzaWFuLCBjYXJ0ZXNpYW5BZGRJblBsYWNlLCBjYXJ0ZXNpYW5Dcm9zcywgY2FydGVzaWFuRG90LCBjYXJ0ZXNpYW5TY2FsZSwgc3BoZXJpY2FsfSBmcm9tIFwiLi4vY2FydGVzaWFuLmpzXCI7XG5pbXBvcnQge2NpcmNsZVN0cmVhbX0gZnJvbSBcIi4uL2NpcmNsZS5qc1wiO1xuaW1wb3J0IHthYnMsIGNvcywgZXBzaWxvbiwgcGksIHJhZGlhbnMsIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQgcG9pbnRFcXVhbCBmcm9tIFwiLi4vcG9pbnRFcXVhbC5qc1wiO1xuaW1wb3J0IGNsaXAgZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocmFkaXVzKSB7XG4gIHZhciBjciA9IGNvcyhyYWRpdXMpLFxuICAgICAgZGVsdGEgPSA2ICogcmFkaWFucyxcbiAgICAgIHNtYWxsUmFkaXVzID0gY3IgPiAwLFxuICAgICAgbm90SGVtaXNwaGVyZSA9IGFicyhjcikgPiBlcHNpbG9uOyAvLyBUT0RPIG9wdGltaXNlIGZvciB0aGlzIGNvbW1vbiBjYXNlXG5cbiAgZnVuY3Rpb24gaW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgc3RyZWFtKSB7XG4gICAgY2lyY2xlU3RyZWFtKHN0cmVhbSwgcmFkaXVzLCBkZWx0YSwgZGlyZWN0aW9uLCBmcm9tLCB0byk7XG4gIH1cblxuICBmdW5jdGlvbiB2aXNpYmxlKGxhbWJkYSwgcGhpKSB7XG4gICAgcmV0dXJuIGNvcyhsYW1iZGEpICogY29zKHBoaSkgPiBjcjtcbiAgfVxuXG4gIC8vIFRha2VzIGEgbGluZSBhbmQgY3V0cyBpbnRvIHZpc2libGUgc2VnbWVudHMuIFJldHVybiB2YWx1ZXMgdXNlZCBmb3IgcG9seWdvblxuICAvLyBjbGlwcGluZzogMCAtIHRoZXJlIHdlcmUgaW50ZXJzZWN0aW9ucyBvciB0aGUgbGluZSB3YXMgZW1wdHk7IDEgLSBub1xuICAvLyBpbnRlcnNlY3Rpb25zIDIgLSB0aGVyZSB3ZXJlIGludGVyc2VjdGlvbnMsIGFuZCB0aGUgZmlyc3QgYW5kIGxhc3Qgc2VnbWVudHNcbiAgLy8gc2hvdWxkIGJlIHJlam9pbmVkLlxuICBmdW5jdGlvbiBjbGlwTGluZShzdHJlYW0pIHtcbiAgICB2YXIgcG9pbnQwLCAvLyBwcmV2aW91cyBwb2ludFxuICAgICAgICBjMCwgLy8gY29kZSBmb3IgcHJldmlvdXMgcG9pbnRcbiAgICAgICAgdjAsIC8vIHZpc2liaWxpdHkgb2YgcHJldmlvdXMgcG9pbnRcbiAgICAgICAgdjAwLCAvLyB2aXNpYmlsaXR5IG9mIGZpcnN0IHBvaW50XG4gICAgICAgIGNsZWFuOyAvLyBubyBpbnRlcnNlY3Rpb25zXG4gICAgcmV0dXJuIHtcbiAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHYwMCA9IHYwID0gZmFsc2U7XG4gICAgICAgIGNsZWFuID0gMTtcbiAgICAgIH0sXG4gICAgICBwb2ludDogZnVuY3Rpb24obGFtYmRhLCBwaGkpIHtcbiAgICAgICAgdmFyIHBvaW50MSA9IFtsYW1iZGEsIHBoaV0sXG4gICAgICAgICAgICBwb2ludDIsXG4gICAgICAgICAgICB2ID0gdmlzaWJsZShsYW1iZGEsIHBoaSksXG4gICAgICAgICAgICBjID0gc21hbGxSYWRpdXNcbiAgICAgICAgICAgICAgPyB2ID8gMCA6IGNvZGUobGFtYmRhLCBwaGkpXG4gICAgICAgICAgICAgIDogdiA/IGNvZGUobGFtYmRhICsgKGxhbWJkYSA8IDAgPyBwaSA6IC1waSksIHBoaSkgOiAwO1xuICAgICAgICBpZiAoIXBvaW50MCAmJiAodjAwID0gdjAgPSB2KSkgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICBpZiAodiAhPT0gdjApIHtcbiAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQwLCBwb2ludDEpO1xuICAgICAgICAgIGlmICghcG9pbnQyIHx8IHBvaW50RXF1YWwocG9pbnQwLCBwb2ludDIpIHx8IHBvaW50RXF1YWwocG9pbnQxLCBwb2ludDIpKVxuICAgICAgICAgICAgcG9pbnQxWzJdID0gMTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodiAhPT0gdjApIHtcbiAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgIC8vIG91dHNpZGUgZ29pbmcgaW5cbiAgICAgICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDEsIHBvaW50MCk7XG4gICAgICAgICAgICBzdHJlYW0ucG9pbnQocG9pbnQyWzBdLCBwb2ludDJbMV0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBpbnNpZGUgZ29pbmcgb3V0XG4gICAgICAgICAgICBwb2ludDIgPSBpbnRlcnNlY3QocG9pbnQwLCBwb2ludDEpO1xuICAgICAgICAgICAgc3RyZWFtLnBvaW50KHBvaW50MlswXSwgcG9pbnQyWzFdLCAyKTtcbiAgICAgICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvaW50MCA9IHBvaW50MjtcbiAgICAgICAgfSBlbHNlIGlmIChub3RIZW1pc3BoZXJlICYmIHBvaW50MCAmJiBzbWFsbFJhZGl1cyBeIHYpIHtcbiAgICAgICAgICB2YXIgdDtcbiAgICAgICAgICAvLyBJZiB0aGUgY29kZXMgZm9yIHR3byBwb2ludHMgYXJlIGRpZmZlcmVudCwgb3IgYXJlIGJvdGggemVybyxcbiAgICAgICAgICAvLyBhbmQgdGhlcmUgdGhpcyBzZWdtZW50IGludGVyc2VjdHMgd2l0aCB0aGUgc21hbGwgY2lyY2xlLlxuICAgICAgICAgIGlmICghKGMgJiBjMCkgJiYgKHQgPSBpbnRlcnNlY3QocG9pbnQxLCBwb2ludDAsIHRydWUpKSkge1xuICAgICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICAgICAgaWYgKHNtYWxsUmFkaXVzKSB7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgc3RyZWFtLnBvaW50KHRbMF1bMF0sIHRbMF1bMV0pO1xuICAgICAgICAgICAgICBzdHJlYW0ucG9pbnQodFsxXVswXSwgdFsxXVsxXSk7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBzdHJlYW0ucG9pbnQodFsxXVswXSwgdFsxXVsxXSk7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgICAgc3RyZWFtLnBvaW50KHRbMF1bMF0sIHRbMF1bMV0sIDMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodiAmJiAoIXBvaW50MCB8fCAhcG9pbnRFcXVhbChwb2ludDAsIHBvaW50MSkpKSB7XG4gICAgICAgICAgc3RyZWFtLnBvaW50KHBvaW50MVswXSwgcG9pbnQxWzFdKTtcbiAgICAgICAgfVxuICAgICAgICBwb2ludDAgPSBwb2ludDEsIHYwID0gdiwgYzAgPSBjO1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAodjApIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgIHBvaW50MCA9IG51bGw7XG4gICAgICB9LFxuICAgICAgLy8gUmVqb2luIGZpcnN0IGFuZCBsYXN0IHNlZ21lbnRzIGlmIHRoZXJlIHdlcmUgaW50ZXJzZWN0aW9ucyBhbmQgdGhlIGZpcnN0XG4gICAgICAvLyBhbmQgbGFzdCBwb2ludHMgd2VyZSB2aXNpYmxlLlxuICAgICAgY2xlYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY2xlYW4gfCAoKHYwMCAmJiB2MCkgPDwgMSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIC8vIEludGVyc2VjdHMgdGhlIGdyZWF0IGNpcmNsZSBiZXR3ZWVuIGEgYW5kIGIgd2l0aCB0aGUgY2xpcCBjaXJjbGUuXG4gIGZ1bmN0aW9uIGludGVyc2VjdChhLCBiLCB0d28pIHtcbiAgICB2YXIgcGEgPSBjYXJ0ZXNpYW4oYSksXG4gICAgICAgIHBiID0gY2FydGVzaWFuKGIpO1xuXG4gICAgLy8gV2UgaGF2ZSB0d28gcGxhbmVzLCBuMS5wID0gZDEgYW5kIG4yLnAgPSBkMi5cbiAgICAvLyBGaW5kIGludGVyc2VjdGlvbiBsaW5lIHAodCkgPSBjMSBuMSArIGMyIG4yICsgdCAobjEg4qivIG4yKS5cbiAgICB2YXIgbjEgPSBbMSwgMCwgMF0sIC8vIG5vcm1hbFxuICAgICAgICBuMiA9IGNhcnRlc2lhbkNyb3NzKHBhLCBwYiksXG4gICAgICAgIG4ybjIgPSBjYXJ0ZXNpYW5Eb3QobjIsIG4yKSxcbiAgICAgICAgbjFuMiA9IG4yWzBdLCAvLyBjYXJ0ZXNpYW5Eb3QobjEsIG4yKSxcbiAgICAgICAgZGV0ZXJtaW5hbnQgPSBuMm4yIC0gbjFuMiAqIG4xbjI7XG5cbiAgICAvLyBUd28gcG9sYXIgcG9pbnRzLlxuICAgIGlmICghZGV0ZXJtaW5hbnQpIHJldHVybiAhdHdvICYmIGE7XG5cbiAgICB2YXIgYzEgPSAgY3IgKiBuMm4yIC8gZGV0ZXJtaW5hbnQsXG4gICAgICAgIGMyID0gLWNyICogbjFuMiAvIGRldGVybWluYW50LFxuICAgICAgICBuMXhuMiA9IGNhcnRlc2lhbkNyb3NzKG4xLCBuMiksXG4gICAgICAgIEEgPSBjYXJ0ZXNpYW5TY2FsZShuMSwgYzEpLFxuICAgICAgICBCID0gY2FydGVzaWFuU2NhbGUobjIsIGMyKTtcbiAgICBjYXJ0ZXNpYW5BZGRJblBsYWNlKEEsIEIpO1xuXG4gICAgLy8gU29sdmUgfHAodCl8XjIgPSAxLlxuICAgIHZhciB1ID0gbjF4bjIsXG4gICAgICAgIHcgPSBjYXJ0ZXNpYW5Eb3QoQSwgdSksXG4gICAgICAgIHV1ID0gY2FydGVzaWFuRG90KHUsIHUpLFxuICAgICAgICB0MiA9IHcgKiB3IC0gdXUgKiAoY2FydGVzaWFuRG90KEEsIEEpIC0gMSk7XG5cbiAgICBpZiAodDIgPCAwKSByZXR1cm47XG5cbiAgICB2YXIgdCA9IHNxcnQodDIpLFxuICAgICAgICBxID0gY2FydGVzaWFuU2NhbGUodSwgKC13IC0gdCkgLyB1dSk7XG4gICAgY2FydGVzaWFuQWRkSW5QbGFjZShxLCBBKTtcbiAgICBxID0gc3BoZXJpY2FsKHEpO1xuXG4gICAgaWYgKCF0d28pIHJldHVybiBxO1xuXG4gICAgLy8gVHdvIGludGVyc2VjdGlvbiBwb2ludHMuXG4gICAgdmFyIGxhbWJkYTAgPSBhWzBdLFxuICAgICAgICBsYW1iZGExID0gYlswXSxcbiAgICAgICAgcGhpMCA9IGFbMV0sXG4gICAgICAgIHBoaTEgPSBiWzFdLFxuICAgICAgICB6O1xuXG4gICAgaWYgKGxhbWJkYTEgPCBsYW1iZGEwKSB6ID0gbGFtYmRhMCwgbGFtYmRhMCA9IGxhbWJkYTEsIGxhbWJkYTEgPSB6O1xuXG4gICAgdmFyIGRlbHRhID0gbGFtYmRhMSAtIGxhbWJkYTAsXG4gICAgICAgIHBvbGFyID0gYWJzKGRlbHRhIC0gcGkpIDwgZXBzaWxvbixcbiAgICAgICAgbWVyaWRpYW4gPSBwb2xhciB8fCBkZWx0YSA8IGVwc2lsb247XG5cbiAgICBpZiAoIXBvbGFyICYmIHBoaTEgPCBwaGkwKSB6ID0gcGhpMCwgcGhpMCA9IHBoaTEsIHBoaTEgPSB6O1xuXG4gICAgLy8gQ2hlY2sgdGhhdCB0aGUgZmlyc3QgcG9pbnQgaXMgYmV0d2VlbiBhIGFuZCBiLlxuICAgIGlmIChtZXJpZGlhblxuICAgICAgICA/IHBvbGFyXG4gICAgICAgICAgPyBwaGkwICsgcGhpMSA+IDAgXiBxWzFdIDwgKGFicyhxWzBdIC0gbGFtYmRhMCkgPCBlcHNpbG9uID8gcGhpMCA6IHBoaTEpXG4gICAgICAgICAgOiBwaGkwIDw9IHFbMV0gJiYgcVsxXSA8PSBwaGkxXG4gICAgICAgIDogZGVsdGEgPiBwaSBeIChsYW1iZGEwIDw9IHFbMF0gJiYgcVswXSA8PSBsYW1iZGExKSkge1xuICAgICAgdmFyIHExID0gY2FydGVzaWFuU2NhbGUodSwgKC13ICsgdCkgLyB1dSk7XG4gICAgICBjYXJ0ZXNpYW5BZGRJblBsYWNlKHExLCBBKTtcbiAgICAgIHJldHVybiBbcSwgc3BoZXJpY2FsKHExKV07XG4gICAgfVxuICB9XG5cbiAgLy8gR2VuZXJhdGVzIGEgNC1iaXQgdmVjdG9yIHJlcHJlc2VudGluZyB0aGUgbG9jYXRpb24gb2YgYSBwb2ludCByZWxhdGl2ZSB0b1xuICAvLyB0aGUgc21hbGwgY2lyY2xlJ3MgYm91bmRpbmcgYm94LlxuICBmdW5jdGlvbiBjb2RlKGxhbWJkYSwgcGhpKSB7XG4gICAgdmFyIHIgPSBzbWFsbFJhZGl1cyA/IHJhZGl1cyA6IHBpIC0gcmFkaXVzLFxuICAgICAgICBjb2RlID0gMDtcbiAgICBpZiAobGFtYmRhIDwgLXIpIGNvZGUgfD0gMTsgLy8gbGVmdFxuICAgIGVsc2UgaWYgKGxhbWJkYSA+IHIpIGNvZGUgfD0gMjsgLy8gcmlnaHRcbiAgICBpZiAocGhpIDwgLXIpIGNvZGUgfD0gNDsgLy8gYmVsb3dcbiAgICBlbHNlIGlmIChwaGkgPiByKSBjb2RlIHw9IDg7IC8vIGFib3ZlXG4gICAgcmV0dXJuIGNvZGU7XG4gIH1cblxuICByZXR1cm4gY2xpcCh2aXNpYmxlLCBjbGlwTGluZSwgaW50ZXJwb2xhdGUsIHNtYWxsUmFkaXVzID8gWzAsIC1yYWRpdXNdIDogWy1waSwgcmFkaXVzIC0gcGldKTtcbn1cbiIsImltcG9ydCBjbGlwUmVjdGFuZ2xlIGZyb20gXCIuL3JlY3RhbmdsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHgwID0gMCxcbiAgICAgIHkwID0gMCxcbiAgICAgIHgxID0gOTYwLFxuICAgICAgeTEgPSA1MDAsXG4gICAgICBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtLFxuICAgICAgY2xpcDtcblxuICByZXR1cm4gY2xpcCA9IHtcbiAgICBzdHJlYW06IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gY2xpcFJlY3RhbmdsZSh4MCwgeTAsIHgxLCB5MSkoY2FjaGVTdHJlYW0gPSBzdHJlYW0pO1xuICAgIH0sXG4gICAgZXh0ZW50OiBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdLCBjYWNoZSA9IGNhY2hlU3RyZWFtID0gbnVsbCwgY2xpcCkgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgY2xpcEJ1ZmZlciBmcm9tIFwiLi9idWZmZXIuanNcIjtcbmltcG9ydCBjbGlwUmVqb2luIGZyb20gXCIuL3Jlam9pbi5qc1wiO1xuaW1wb3J0IHtlcHNpbG9uLCBoYWxmUGl9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQgcG9seWdvbkNvbnRhaW5zIGZyb20gXCIuLi9wb2x5Z29uQ29udGFpbnMuanNcIjtcbmltcG9ydCB7bWVyZ2V9IGZyb20gXCJkMy1hcnJheVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwb2ludFZpc2libGUsIGNsaXBMaW5lLCBpbnRlcnBvbGF0ZSwgc3RhcnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHNpbmspIHtcbiAgICB2YXIgbGluZSA9IGNsaXBMaW5lKHNpbmspLFxuICAgICAgICByaW5nQnVmZmVyID0gY2xpcEJ1ZmZlcigpLFxuICAgICAgICByaW5nU2luayA9IGNsaXBMaW5lKHJpbmdCdWZmZXIpLFxuICAgICAgICBwb2x5Z29uU3RhcnRlZCA9IGZhbHNlLFxuICAgICAgICBwb2x5Z29uLFxuICAgICAgICBzZWdtZW50cyxcbiAgICAgICAgcmluZztcblxuICAgIHZhciBjbGlwID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50UmluZztcbiAgICAgICAgY2xpcC5saW5lU3RhcnQgPSByaW5nU3RhcnQ7XG4gICAgICAgIGNsaXAubGluZUVuZCA9IHJpbmdFbmQ7XG4gICAgICAgIHNlZ21lbnRzID0gW107XG4gICAgICAgIHBvbHlnb24gPSBbXTtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgICBjbGlwLmxpbmVTdGFydCA9IGxpbmVTdGFydDtcbiAgICAgICAgY2xpcC5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgc2VnbWVudHMgPSBtZXJnZShzZWdtZW50cyk7XG4gICAgICAgIHZhciBzdGFydEluc2lkZSA9IHBvbHlnb25Db250YWlucyhwb2x5Z29uLCBzdGFydCk7XG4gICAgICAgIGlmIChzZWdtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBzaW5rLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgY2xpcFJlam9pbihzZWdtZW50cywgY29tcGFyZUludGVyc2VjdGlvbiwgc3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBzaW5rKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdGFydEluc2lkZSkge1xuICAgICAgICAgIGlmICghcG9seWdvblN0YXJ0ZWQpIHNpbmsucG9seWdvblN0YXJ0KCksIHBvbHlnb25TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICBzaW5rLmxpbmVTdGFydCgpO1xuICAgICAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIHNpbmspO1xuICAgICAgICAgIHNpbmsubGluZUVuZCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb2x5Z29uU3RhcnRlZCkgc2luay5wb2x5Z29uRW5kKCksIHBvbHlnb25TdGFydGVkID0gZmFsc2U7XG4gICAgICAgIHNlZ21lbnRzID0gcG9seWdvbiA9IG51bGw7XG4gICAgICB9LFxuICAgICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc2luay5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgc2luay5saW5lU3RhcnQoKTtcbiAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgc2luayk7XG4gICAgICAgIHNpbmsubGluZUVuZCgpO1xuICAgICAgICBzaW5rLnBvbHlnb25FbmQoKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gcG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgICAgIGlmIChwb2ludFZpc2libGUobGFtYmRhLCBwaGkpKSBzaW5rLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2ludExpbmUobGFtYmRhLCBwaGkpIHtcbiAgICAgIGxpbmUucG9pbnQobGFtYmRhLCBwaGkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgIGNsaXAucG9pbnQgPSBwb2ludExpbmU7XG4gICAgICBsaW5lLmxpbmVTdGFydCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICBjbGlwLnBvaW50ID0gcG9pbnQ7XG4gICAgICBsaW5lLmxpbmVFbmQoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2ludFJpbmcobGFtYmRhLCBwaGkpIHtcbiAgICAgIHJpbmcucHVzaChbbGFtYmRhLCBwaGldKTtcbiAgICAgIHJpbmdTaW5rLnBvaW50KGxhbWJkYSwgcGhpKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICByaW5nU2luay5saW5lU3RhcnQoKTtcbiAgICAgIHJpbmcgPSBbXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nRW5kKCkge1xuICAgICAgcG9pbnRSaW5nKHJpbmdbMF1bMF0sIHJpbmdbMF1bMV0pO1xuICAgICAgcmluZ1NpbmsubGluZUVuZCgpO1xuXG4gICAgICB2YXIgY2xlYW4gPSByaW5nU2luay5jbGVhbigpLFxuICAgICAgICAgIHJpbmdTZWdtZW50cyA9IHJpbmdCdWZmZXIucmVzdWx0KCksXG4gICAgICAgICAgaSwgbiA9IHJpbmdTZWdtZW50cy5sZW5ndGgsIG0sXG4gICAgICAgICAgc2VnbWVudCxcbiAgICAgICAgICBwb2ludDtcblxuICAgICAgcmluZy5wb3AoKTtcbiAgICAgIHBvbHlnb24ucHVzaChyaW5nKTtcbiAgICAgIHJpbmcgPSBudWxsO1xuXG4gICAgICBpZiAoIW4pIHJldHVybjtcblxuICAgICAgLy8gTm8gaW50ZXJzZWN0aW9ucy5cbiAgICAgIGlmIChjbGVhbiAmIDEpIHtcbiAgICAgICAgc2VnbWVudCA9IHJpbmdTZWdtZW50c1swXTtcbiAgICAgICAgaWYgKChtID0gc2VnbWVudC5sZW5ndGggLSAxKSA+IDApIHtcbiAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBzaW5rLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgc2luay5saW5lU3RhcnQoKTtcbiAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBzaW5rLnBvaW50KChwb2ludCA9IHNlZ21lbnRbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgICAgc2luay5saW5lRW5kKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBSZWpvaW4gY29ubmVjdGVkIHNlZ21lbnRzLlxuICAgICAgLy8gVE9ETyByZXVzZSByaW5nQnVmZmVyLnJlam9pbigpP1xuICAgICAgaWYgKG4gPiAxICYmIGNsZWFuICYgMikgcmluZ1NlZ21lbnRzLnB1c2gocmluZ1NlZ21lbnRzLnBvcCgpLmNvbmNhdChyaW5nU2VnbWVudHMuc2hpZnQoKSkpO1xuXG4gICAgICBzZWdtZW50cy5wdXNoKHJpbmdTZWdtZW50cy5maWx0ZXIodmFsaWRTZWdtZW50KSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNsaXA7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHZhbGlkU2VnbWVudChzZWdtZW50KSB7XG4gIHJldHVybiBzZWdtZW50Lmxlbmd0aCA+IDE7XG59XG5cbi8vIEludGVyc2VjdGlvbnMgYXJlIHNvcnRlZCBhbG9uZyB0aGUgY2xpcCBlZGdlLiBGb3IgYm90aCBhbnRpbWVyaWRpYW4gY3V0dGluZ1xuLy8gYW5kIGNpcmNsZSBjbGlwcGluZywgdGhlIHNhbWUgY29tcGFyaXNvbiBpcyB1c2VkLlxuZnVuY3Rpb24gY29tcGFyZUludGVyc2VjdGlvbihhLCBiKSB7XG4gIHJldHVybiAoKGEgPSBhLngpWzBdIDwgMCA/IGFbMV0gLSBoYWxmUGkgLSBlcHNpbG9uIDogaGFsZlBpIC0gYVsxXSlcbiAgICAgICAtICgoYiA9IGIueClbMF0gPCAwID8gYlsxXSAtIGhhbGZQaSAtIGVwc2lsb24gOiBoYWxmUGkgLSBiWzFdKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIHZhciBheCA9IGFbMF0sXG4gICAgICBheSA9IGFbMV0sXG4gICAgICBieCA9IGJbMF0sXG4gICAgICBieSA9IGJbMV0sXG4gICAgICB0MCA9IDAsXG4gICAgICB0MSA9IDEsXG4gICAgICBkeCA9IGJ4IC0gYXgsXG4gICAgICBkeSA9IGJ5IC0gYXksXG4gICAgICByO1xuXG4gIHIgPSB4MCAtIGF4O1xuICBpZiAoIWR4ICYmIHIgPiAwKSByZXR1cm47XG4gIHIgLz0gZHg7XG4gIGlmIChkeCA8IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9IGVsc2UgaWYgKGR4ID4gMCkge1xuICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICBpZiAociA+IHQwKSB0MCA9IHI7XG4gIH1cblxuICByID0geDEgLSBheDtcbiAgaWYgKCFkeCAmJiByIDwgMCkgcmV0dXJuO1xuICByIC89IGR4O1xuICBpZiAoZHggPCAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfSBlbHNlIGlmIChkeCA+IDApIHtcbiAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICB9XG5cbiAgciA9IHkwIC0gYXk7XG4gIGlmICghZHkgJiYgciA+IDApIHJldHVybjtcbiAgciAvPSBkeTtcbiAgaWYgKGR5IDwgMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgaWYgKHIgPiB0MSkgcmV0dXJuO1xuICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgfVxuXG4gIHIgPSB5MSAtIGF5O1xuICBpZiAoIWR5ICYmIHIgPCAwKSByZXR1cm47XG4gIHIgLz0gZHk7XG4gIGlmIChkeSA8IDApIHtcbiAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICB9IGVsc2UgaWYgKGR5ID4gMCkge1xuICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICBpZiAociA8IHQxKSB0MSA9IHI7XG4gIH1cblxuICBpZiAodDAgPiAwKSBhWzBdID0gYXggKyB0MCAqIGR4LCBhWzFdID0gYXkgKyB0MCAqIGR5O1xuICBpZiAodDEgPCAxKSBiWzBdID0gYXggKyB0MSAqIGR4LCBiWzFdID0gYXkgKyB0MSAqIGR5O1xuICByZXR1cm4gdHJ1ZTtcbn1cbiIsImltcG9ydCB7YWJzLCBlcHNpbG9ufSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IGNsaXBCdWZmZXIgZnJvbSBcIi4vYnVmZmVyLmpzXCI7XG5pbXBvcnQgY2xpcExpbmUgZnJvbSBcIi4vbGluZS5qc1wiO1xuaW1wb3J0IGNsaXBSZWpvaW4gZnJvbSBcIi4vcmVqb2luLmpzXCI7XG5pbXBvcnQge21lcmdlfSBmcm9tIFwiZDMtYXJyYXlcIjtcblxudmFyIGNsaXBNYXggPSAxZTksIGNsaXBNaW4gPSAtY2xpcE1heDtcblxuLy8gVE9ETyBVc2UgZDMtcG9seWdvbuKAmXMgcG9seWdvbkNvbnRhaW5zIGhlcmUgZm9yIHRoZSByaW5nIGNoZWNrP1xuLy8gVE9ETyBFbGltaW5hdGUgZHVwbGljYXRlIGJ1ZmZlcmluZyBpbiBjbGlwQnVmZmVyIGFuZCBwb2x5Z29uLnB1c2g/XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNsaXBSZWN0YW5nbGUoeDAsIHkwLCB4MSwgeTEpIHtcblxuICBmdW5jdGlvbiB2aXNpYmxlKHgsIHkpIHtcbiAgICByZXR1cm4geDAgPD0geCAmJiB4IDw9IHgxICYmIHkwIDw9IHkgJiYgeSA8PSB5MTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGludGVycG9sYXRlKGZyb20sIHRvLCBkaXJlY3Rpb24sIHN0cmVhbSkge1xuICAgIHZhciBhID0gMCwgYTEgPSAwO1xuICAgIGlmIChmcm9tID09IG51bGxcbiAgICAgICAgfHwgKGEgPSBjb3JuZXIoZnJvbSwgZGlyZWN0aW9uKSkgIT09IChhMSA9IGNvcm5lcih0bywgZGlyZWN0aW9uKSlcbiAgICAgICAgfHwgY29tcGFyZVBvaW50KGZyb20sIHRvKSA8IDAgXiBkaXJlY3Rpb24gPiAwKSB7XG4gICAgICBkbyBzdHJlYW0ucG9pbnQoYSA9PT0gMCB8fCBhID09PSAzID8geDAgOiB4MSwgYSA+IDEgPyB5MSA6IHkwKTtcbiAgICAgIHdoaWxlICgoYSA9IChhICsgZGlyZWN0aW9uICsgNCkgJSA0KSAhPT0gYTEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHJlYW0ucG9pbnQodG9bMF0sIHRvWzFdKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjb3JuZXIocCwgZGlyZWN0aW9uKSB7XG4gICAgcmV0dXJuIGFicyhwWzBdIC0geDApIDwgZXBzaWxvbiA/IGRpcmVjdGlvbiA+IDAgPyAwIDogM1xuICAgICAgICA6IGFicyhwWzBdIC0geDEpIDwgZXBzaWxvbiA/IGRpcmVjdGlvbiA+IDAgPyAyIDogMVxuICAgICAgICA6IGFicyhwWzFdIC0geTApIDwgZXBzaWxvbiA/IGRpcmVjdGlvbiA+IDAgPyAxIDogMFxuICAgICAgICA6IGRpcmVjdGlvbiA+IDAgPyAzIDogMjsgLy8gYWJzKHBbMV0gLSB5MSkgPCBlcHNpbG9uXG4gIH1cblxuICBmdW5jdGlvbiBjb21wYXJlSW50ZXJzZWN0aW9uKGEsIGIpIHtcbiAgICByZXR1cm4gY29tcGFyZVBvaW50KGEueCwgYi54KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbXBhcmVQb2ludChhLCBiKSB7XG4gICAgdmFyIGNhID0gY29ybmVyKGEsIDEpLFxuICAgICAgICBjYiA9IGNvcm5lcihiLCAxKTtcbiAgICByZXR1cm4gY2EgIT09IGNiID8gY2EgLSBjYlxuICAgICAgICA6IGNhID09PSAwID8gYlsxXSAtIGFbMV1cbiAgICAgICAgOiBjYSA9PT0gMSA/IGFbMF0gLSBiWzBdXG4gICAgICAgIDogY2EgPT09IDIgPyBhWzFdIC0gYlsxXVxuICAgICAgICA6IGJbMF0gLSBhWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHZhciBhY3RpdmVTdHJlYW0gPSBzdHJlYW0sXG4gICAgICAgIGJ1ZmZlclN0cmVhbSA9IGNsaXBCdWZmZXIoKSxcbiAgICAgICAgc2VnbWVudHMsXG4gICAgICAgIHBvbHlnb24sXG4gICAgICAgIHJpbmcsXG4gICAgICAgIHhfXywgeV9fLCB2X18sIC8vIGZpcnN0IHBvaW50XG4gICAgICAgIHhfLCB5Xywgdl8sIC8vIHByZXZpb3VzIHBvaW50XG4gICAgICAgIGZpcnN0LFxuICAgICAgICBjbGVhbjtcblxuICAgIHZhciBjbGlwU3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBwb2x5Z29uU3RhcnQsXG4gICAgICBwb2x5Z29uRW5kOiBwb2x5Z29uRW5kXG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgIGlmICh2aXNpYmxlKHgsIHkpKSBhY3RpdmVTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcG9seWdvbkluc2lkZSgpIHtcbiAgICAgIHZhciB3aW5kaW5nID0gMDtcblxuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBwb2x5Z29uLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBmb3IgKHZhciByaW5nID0gcG9seWdvbltpXSwgaiA9IDEsIG0gPSByaW5nLmxlbmd0aCwgcG9pbnQgPSByaW5nWzBdLCBhMCwgYTEsIGIwID0gcG9pbnRbMF0sIGIxID0gcG9pbnRbMV07IGogPCBtOyArK2opIHtcbiAgICAgICAgICBhMCA9IGIwLCBhMSA9IGIxLCBwb2ludCA9IHJpbmdbal0sIGIwID0gcG9pbnRbMF0sIGIxID0gcG9pbnRbMV07XG4gICAgICAgICAgaWYgKGExIDw9IHkxKSB7IGlmIChiMSA+IHkxICYmIChiMCAtIGEwKSAqICh5MSAtIGExKSA+IChiMSAtIGExKSAqICh4MCAtIGEwKSkgKyt3aW5kaW5nOyB9XG4gICAgICAgICAgZWxzZSB7IGlmIChiMSA8PSB5MSAmJiAoYjAgLSBhMCkgKiAoeTEgLSBhMSkgPCAoYjEgLSBhMSkgKiAoeDAgLSBhMCkpIC0td2luZGluZzsgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB3aW5kaW5nO1xuICAgIH1cblxuICAgIC8vIEJ1ZmZlciBnZW9tZXRyeSB3aXRoaW4gYSBwb2x5Z29uIGFuZCB0aGVuIGNsaXAgaXQgZW4gbWFzc2UuXG4gICAgZnVuY3Rpb24gcG9seWdvblN0YXJ0KCkge1xuICAgICAgYWN0aXZlU3RyZWFtID0gYnVmZmVyU3RyZWFtLCBzZWdtZW50cyA9IFtdLCBwb2x5Z29uID0gW10sIGNsZWFuID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwb2x5Z29uRW5kKCkge1xuICAgICAgdmFyIHN0YXJ0SW5zaWRlID0gcG9seWdvbkluc2lkZSgpLFxuICAgICAgICAgIGNsZWFuSW5zaWRlID0gY2xlYW4gJiYgc3RhcnRJbnNpZGUsXG4gICAgICAgICAgdmlzaWJsZSA9IChzZWdtZW50cyA9IG1lcmdlKHNlZ21lbnRzKSkubGVuZ3RoO1xuICAgICAgaWYgKGNsZWFuSW5zaWRlIHx8IHZpc2libGUpIHtcbiAgICAgICAgc3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgICBpZiAoY2xlYW5JbnNpZGUpIHtcbiAgICAgICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgc3RyZWFtKTtcbiAgICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgY2xpcFJlam9pbihzZWdtZW50cywgY29tcGFyZUludGVyc2VjdGlvbiwgc3RhcnRJbnNpZGUsIGludGVycG9sYXRlLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICAgIHN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICB9XG4gICAgICBhY3RpdmVTdHJlYW0gPSBzdHJlYW0sIHNlZ21lbnRzID0gcG9seWdvbiA9IHJpbmcgPSBudWxsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgIGNsaXBTdHJlYW0ucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICBpZiAocG9seWdvbikgcG9seWdvbi5wdXNoKHJpbmcgPSBbXSk7XG4gICAgICBmaXJzdCA9IHRydWU7XG4gICAgICB2XyA9IGZhbHNlO1xuICAgICAgeF8gPSB5XyA9IE5hTjtcbiAgICB9XG5cbiAgICAvLyBUT0RPIHJhdGhlciB0aGFuIHNwZWNpYWwtY2FzZSBwb2x5Z29ucywgc2ltcGx5IGhhbmRsZSB0aGVtIHNlcGFyYXRlbHkuXG4gICAgLy8gSWRlYWxseSwgY29pbmNpZGVudCBpbnRlcnNlY3Rpb24gcG9pbnRzIHNob3VsZCBiZSBqaXR0ZXJlZCB0byBhdm9pZFxuICAgIC8vIGNsaXBwaW5nIGlzc3Vlcy5cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgaWYgKHNlZ21lbnRzKSB7XG4gICAgICAgIGxpbmVQb2ludCh4X18sIHlfXyk7XG4gICAgICAgIGlmICh2X18gJiYgdl8pIGJ1ZmZlclN0cmVhbS5yZWpvaW4oKTtcbiAgICAgICAgc2VnbWVudHMucHVzaChidWZmZXJTdHJlYW0ucmVzdWx0KCkpO1xuICAgICAgfVxuICAgICAgY2xpcFN0cmVhbS5wb2ludCA9IHBvaW50O1xuICAgICAgaWYgKHZfKSBhY3RpdmVTdHJlYW0ubGluZUVuZCgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVQb2ludCh4LCB5KSB7XG4gICAgICB2YXIgdiA9IHZpc2libGUoeCwgeSk7XG4gICAgICBpZiAocG9seWdvbikgcmluZy5wdXNoKFt4LCB5XSk7XG4gICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgeF9fID0geCwgeV9fID0geSwgdl9fID0gdjtcbiAgICAgICAgZmlyc3QgPSBmYWxzZTtcbiAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICBhY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgYWN0aXZlU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodiAmJiB2XykgYWN0aXZlU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICB2YXIgYSA9IFt4XyA9IE1hdGgubWF4KGNsaXBNaW4sIE1hdGgubWluKGNsaXBNYXgsIHhfKSksIHlfID0gTWF0aC5tYXgoY2xpcE1pbiwgTWF0aC5taW4oY2xpcE1heCwgeV8pKV0sXG4gICAgICAgICAgICAgIGIgPSBbeCA9IE1hdGgubWF4KGNsaXBNaW4sIE1hdGgubWluKGNsaXBNYXgsIHgpKSwgeSA9IE1hdGgubWF4KGNsaXBNaW4sIE1hdGgubWluKGNsaXBNYXgsIHkpKV07XG4gICAgICAgICAgaWYgKGNsaXBMaW5lKGEsIGIsIHgwLCB5MCwgeDEsIHkxKSkge1xuICAgICAgICAgICAgaWYgKCF2Xykge1xuICAgICAgICAgICAgICBhY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIGFjdGl2ZVN0cmVhbS5wb2ludChhWzBdLCBhWzFdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFjdGl2ZVN0cmVhbS5wb2ludChiWzBdLCBiWzFdKTtcbiAgICAgICAgICAgIGlmICghdikgYWN0aXZlU3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICAgIGNsZWFuID0gZmFsc2U7XG4gICAgICAgICAgfSBlbHNlIGlmICh2KSB7XG4gICAgICAgICAgICBhY3RpdmVTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICBhY3RpdmVTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgICAgICBjbGVhbiA9IGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgeF8gPSB4LCB5XyA9IHksIHZfID0gdjtcbiAgICB9XG5cbiAgICByZXR1cm4gY2xpcFN0cmVhbTtcbiAgfTtcbn1cbiIsImltcG9ydCBwb2ludEVxdWFsIGZyb20gXCIuLi9wb2ludEVxdWFsLmpzXCI7XG5pbXBvcnQge2Vwc2lsb259IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIEludGVyc2VjdGlvbihwb2ludCwgcG9pbnRzLCBvdGhlciwgZW50cnkpIHtcbiAgdGhpcy54ID0gcG9pbnQ7XG4gIHRoaXMueiA9IHBvaW50cztcbiAgdGhpcy5vID0gb3RoZXI7IC8vIGFub3RoZXIgaW50ZXJzZWN0aW9uXG4gIHRoaXMuZSA9IGVudHJ5OyAvLyBpcyBhbiBlbnRyeT9cbiAgdGhpcy52ID0gZmFsc2U7IC8vIHZpc2l0ZWRcbiAgdGhpcy5uID0gdGhpcy5wID0gbnVsbDsgLy8gbmV4dCAmIHByZXZpb3VzXG59XG5cbi8vIEEgZ2VuZXJhbGl6ZWQgcG9seWdvbiBjbGlwcGluZyBhbGdvcml0aG06IGdpdmVuIGEgcG9seWdvbiB0aGF0IGhhcyBiZWVuIGN1dFxuLy8gaW50byBpdHMgdmlzaWJsZSBsaW5lIHNlZ21lbnRzLCBhbmQgcmVqb2lucyB0aGUgc2VnbWVudHMgYnkgaW50ZXJwb2xhdGluZ1xuLy8gYWxvbmcgdGhlIGNsaXAgZWRnZS5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlZ21lbnRzLCBjb21wYXJlSW50ZXJzZWN0aW9uLCBzdGFydEluc2lkZSwgaW50ZXJwb2xhdGUsIHN0cmVhbSkge1xuICB2YXIgc3ViamVjdCA9IFtdLFxuICAgICAgY2xpcCA9IFtdLFxuICAgICAgaSxcbiAgICAgIG47XG5cbiAgc2VnbWVudHMuZm9yRWFjaChmdW5jdGlvbihzZWdtZW50KSB7XG4gICAgaWYgKChuID0gc2VnbWVudC5sZW5ndGggLSAxKSA8PSAwKSByZXR1cm47XG4gICAgdmFyIG4sIHAwID0gc2VnbWVudFswXSwgcDEgPSBzZWdtZW50W25dLCB4O1xuXG4gICAgaWYgKHBvaW50RXF1YWwocDAsIHAxKSkge1xuICAgICAgaWYgKCFwMFsyXSAmJiAhcDFbMl0pIHtcbiAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBzdHJlYW0ucG9pbnQoKHAwID0gc2VnbWVudFtpXSlbMF0sIHAwWzFdKTtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gaGFuZGxlIGRlZ2VuZXJhdGUgY2FzZXMgYnkgbW92aW5nIHRoZSBwb2ludFxuICAgICAgcDFbMF0gKz0gMiAqIGVwc2lsb247XG4gICAgfVxuXG4gICAgc3ViamVjdC5wdXNoKHggPSBuZXcgSW50ZXJzZWN0aW9uKHAwLCBzZWdtZW50LCBudWxsLCB0cnVlKSk7XG4gICAgY2xpcC5wdXNoKHgubyA9IG5ldyBJbnRlcnNlY3Rpb24ocDAsIG51bGwsIHgsIGZhbHNlKSk7XG4gICAgc3ViamVjdC5wdXNoKHggPSBuZXcgSW50ZXJzZWN0aW9uKHAxLCBzZWdtZW50LCBudWxsLCBmYWxzZSkpO1xuICAgIGNsaXAucHVzaCh4Lm8gPSBuZXcgSW50ZXJzZWN0aW9uKHAxLCBudWxsLCB4LCB0cnVlKSk7XG4gIH0pO1xuXG4gIGlmICghc3ViamVjdC5sZW5ndGgpIHJldHVybjtcblxuICBjbGlwLnNvcnQoY29tcGFyZUludGVyc2VjdGlvbik7XG4gIGxpbmsoc3ViamVjdCk7XG4gIGxpbmsoY2xpcCk7XG5cbiAgZm9yIChpID0gMCwgbiA9IGNsaXAubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgY2xpcFtpXS5lID0gc3RhcnRJbnNpZGUgPSAhc3RhcnRJbnNpZGU7XG4gIH1cblxuICB2YXIgc3RhcnQgPSBzdWJqZWN0WzBdLFxuICAgICAgcG9pbnRzLFxuICAgICAgcG9pbnQ7XG5cbiAgd2hpbGUgKDEpIHtcbiAgICAvLyBGaW5kIGZpcnN0IHVudmlzaXRlZCBpbnRlcnNlY3Rpb24uXG4gICAgdmFyIGN1cnJlbnQgPSBzdGFydCxcbiAgICAgICAgaXNTdWJqZWN0ID0gdHJ1ZTtcbiAgICB3aGlsZSAoY3VycmVudC52KSBpZiAoKGN1cnJlbnQgPSBjdXJyZW50Lm4pID09PSBzdGFydCkgcmV0dXJuO1xuICAgIHBvaW50cyA9IGN1cnJlbnQuejtcbiAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgZG8ge1xuICAgICAgY3VycmVudC52ID0gY3VycmVudC5vLnYgPSB0cnVlO1xuICAgICAgaWYgKGN1cnJlbnQuZSkge1xuICAgICAgICBpZiAoaXNTdWJqZWN0KSB7XG4gICAgICAgICAgZm9yIChpID0gMCwgbiA9IHBvaW50cy5sZW5ndGg7IGkgPCBuOyArK2kpIHN0cmVhbS5wb2ludCgocG9pbnQgPSBwb2ludHNbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW50ZXJwb2xhdGUoY3VycmVudC54LCBjdXJyZW50Lm4ueCwgMSwgc3RyZWFtKTtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50ID0gY3VycmVudC5uO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGlzU3ViamVjdCkge1xuICAgICAgICAgIHBvaW50cyA9IGN1cnJlbnQucC56O1xuICAgICAgICAgIGZvciAoaSA9IHBvaW50cy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgc3RyZWFtLnBvaW50KChwb2ludCA9IHBvaW50c1tpXSlbMF0sIHBvaW50WzFdKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpbnRlcnBvbGF0ZShjdXJyZW50LngsIGN1cnJlbnQucC54LCAtMSwgc3RyZWFtKTtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50ID0gY3VycmVudC5wO1xuICAgICAgfVxuICAgICAgY3VycmVudCA9IGN1cnJlbnQubztcbiAgICAgIHBvaW50cyA9IGN1cnJlbnQuejtcbiAgICAgIGlzU3ViamVjdCA9ICFpc1N1YmplY3Q7XG4gICAgfSB3aGlsZSAoIWN1cnJlbnQudik7XG4gICAgc3RyZWFtLmxpbmVFbmQoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBsaW5rKGFycmF5KSB7XG4gIGlmICghKG4gPSBhcnJheS5sZW5ndGgpKSByZXR1cm47XG4gIHZhciBuLFxuICAgICAgaSA9IDAsXG4gICAgICBhID0gYXJyYXlbMF0sXG4gICAgICBiO1xuICB3aGlsZSAoKytpIDwgbikge1xuICAgIGEubiA9IGIgPSBhcnJheVtpXTtcbiAgICBiLnAgPSBhO1xuICAgIGEgPSBiO1xuICB9XG4gIGEubiA9IGIgPSBhcnJheVswXTtcbiAgYi5wID0gYTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcblxuICBmdW5jdGlvbiBjb21wb3NlKHgsIHkpIHtcbiAgICByZXR1cm4geCA9IGEoeCwgeSksIGIoeFswXSwgeFsxXSk7XG4gIH1cblxuICBpZiAoYS5pbnZlcnQgJiYgYi5pbnZlcnQpIGNvbXBvc2UuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiB4ID0gYi5pbnZlcnQoeCwgeSksIHggJiYgYS5pbnZlcnQoeFswXSwgeFsxXSk7XG4gIH07XG5cbiAgcmV0dXJuIGNvbXBvc2U7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCB7ZGVmYXVsdCBhcyBwb2x5Z29uQ29udGFpbnN9IGZyb20gXCIuL3BvbHlnb25Db250YWlucy5qc1wiO1xuaW1wb3J0IHtkZWZhdWx0IGFzIGRpc3RhbmNlfSBmcm9tIFwiLi9kaXN0YW5jZS5qc1wiO1xuaW1wb3J0IHtlcHNpbG9uMiwgcmFkaWFuc30gZnJvbSBcIi4vbWF0aC5qc1wiO1xuXG52YXIgY29udGFpbnNPYmplY3RUeXBlID0ge1xuICBGZWF0dXJlOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgcmV0dXJuIGNvbnRhaW5zR2VvbWV0cnkob2JqZWN0Lmdlb21ldHJ5LCBwb2ludCk7XG4gIH0sXG4gIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGZlYXR1cmVzID0gb2JqZWN0LmZlYXR1cmVzLCBpID0gLTEsIG4gPSBmZWF0dXJlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc0dlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcblxudmFyIGNvbnRhaW5zR2VvbWV0cnlUeXBlID0ge1xuICBTcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuICBQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHJldHVybiBjb250YWluc1BvaW50KG9iamVjdC5jb29yZGluYXRlcywgcG9pbnQpO1xuICB9LFxuICBNdWx0aVBvaW50OiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc1BvaW50KGNvb3JkaW5hdGVzW2ldLCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcbiAgTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHJldHVybiBjb250YWluc0xpbmUob2JqZWN0LmNvb3JkaW5hdGVzLCBwb2ludCk7XG4gIH0sXG4gIE11bHRpTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoY29udGFpbnNMaW5lKGNvb3JkaW5hdGVzW2ldLCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcbiAgUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHJldHVybiBjb250YWluc1BvbHlnb24ob2JqZWN0LmNvb3JkaW5hdGVzLCBwb2ludCk7XG4gIH0sXG4gIE11bHRpUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBwb2ludCkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoY29udGFpbnNQb2x5Z29uKGNvb3JkaW5hdGVzW2ldLCBwb2ludCkpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcbiAgR2VvbWV0cnlDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHBvaW50KSB7XG4gICAgdmFyIGdlb21ldHJpZXMgPSBvYmplY3QuZ2VvbWV0cmllcywgaSA9IC0xLCBuID0gZ2VvbWV0cmllcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmIChjb250YWluc0dlb21ldHJ5KGdlb21ldHJpZXNbaV0sIHBvaW50KSkgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG5mdW5jdGlvbiBjb250YWluc0dlb21ldHJ5KGdlb21ldHJ5LCBwb2ludCkge1xuICByZXR1cm4gZ2VvbWV0cnkgJiYgY29udGFpbnNHZW9tZXRyeVR5cGUuaGFzT3duUHJvcGVydHkoZ2VvbWV0cnkudHlwZSlcbiAgICAgID8gY29udGFpbnNHZW9tZXRyeVR5cGVbZ2VvbWV0cnkudHlwZV0oZ2VvbWV0cnksIHBvaW50KVxuICAgICAgOiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gY29udGFpbnNQb2ludChjb29yZGluYXRlcywgcG9pbnQpIHtcbiAgcmV0dXJuIGRpc3RhbmNlKGNvb3JkaW5hdGVzLCBwb2ludCkgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGNvbnRhaW5zTGluZShjb29yZGluYXRlcywgcG9pbnQpIHtcbiAgdmFyIGFvLCBibywgYWI7XG4gIGZvciAodmFyIGkgPSAwLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgYm8gPSBkaXN0YW5jZShjb29yZGluYXRlc1tpXSwgcG9pbnQpO1xuICAgIGlmIChibyA9PT0gMCkgcmV0dXJuIHRydWU7XG4gICAgaWYgKGkgPiAwKSB7XG4gICAgICBhYiA9IGRpc3RhbmNlKGNvb3JkaW5hdGVzW2ldLCBjb29yZGluYXRlc1tpIC0gMV0pO1xuICAgICAgaWYgKFxuICAgICAgICBhYiA+IDAgJiZcbiAgICAgICAgYW8gPD0gYWIgJiZcbiAgICAgICAgYm8gPD0gYWIgJiZcbiAgICAgICAgKGFvICsgYm8gLSBhYikgKiAoMSAtIE1hdGgucG93KChhbyAtIGJvKSAvIGFiLCAyKSkgPCBlcHNpbG9uMiAqIGFiXG4gICAgICApXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBhbyA9IGJvO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gY29udGFpbnNQb2x5Z29uKGNvb3JkaW5hdGVzLCBwb2ludCkge1xuICByZXR1cm4gISFwb2x5Z29uQ29udGFpbnMoY29vcmRpbmF0ZXMubWFwKHJpbmdSYWRpYW5zKSwgcG9pbnRSYWRpYW5zKHBvaW50KSk7XG59XG5cbmZ1bmN0aW9uIHJpbmdSYWRpYW5zKHJpbmcpIHtcbiAgcmV0dXJuIHJpbmcgPSByaW5nLm1hcChwb2ludFJhZGlhbnMpLCByaW5nLnBvcCgpLCByaW5nO1xufVxuXG5mdW5jdGlvbiBwb2ludFJhZGlhbnMocG9pbnQpIHtcbiAgcmV0dXJuIFtwb2ludFswXSAqIHJhZGlhbnMsIHBvaW50WzFdICogcmFkaWFuc107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCwgcG9pbnQpIHtcbiAgcmV0dXJuIChvYmplY3QgJiYgY29udGFpbnNPYmplY3RUeXBlLmhhc093blByb3BlcnR5KG9iamVjdC50eXBlKVxuICAgICAgPyBjb250YWluc09iamVjdFR5cGVbb2JqZWN0LnR5cGVdXG4gICAgICA6IGNvbnRhaW5zR2VvbWV0cnkpKG9iamVjdCwgcG9pbnQpO1xufVxuIiwiaW1wb3J0IGxlbmd0aCBmcm9tIFwiLi9sZW5ndGguanNcIjtcblxudmFyIGNvb3JkaW5hdGVzID0gW251bGwsIG51bGxdLFxuICAgIG9iamVjdCA9IHt0eXBlOiBcIkxpbmVTdHJpbmdcIiwgY29vcmRpbmF0ZXM6IGNvb3JkaW5hdGVzfTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICBjb29yZGluYXRlc1swXSA9IGE7XG4gIGNvb3JkaW5hdGVzWzFdID0gYjtcbiAgcmV0dXJuIGxlbmd0aChvYmplY3QpO1xufVxuIiwiaW1wb3J0IHtyYW5nZX0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2FicywgY2VpbCwgZXBzaWxvbn0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuXG5mdW5jdGlvbiBncmF0aWN1bGVYKHkwLCB5MSwgZHkpIHtcbiAgdmFyIHkgPSByYW5nZSh5MCwgeTEgLSBlcHNpbG9uLCBkeSkuY29uY2F0KHkxKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHkubWFwKGZ1bmN0aW9uKHkpIHsgcmV0dXJuIFt4LCB5XTsgfSk7IH07XG59XG5cbmZ1bmN0aW9uIGdyYXRpY3VsZVkoeDAsIHgxLCBkeCkge1xuICB2YXIgeCA9IHJhbmdlKHgwLCB4MSAtIGVwc2lsb24sIGR4KS5jb25jYXQoeDEpO1xuICByZXR1cm4gZnVuY3Rpb24oeSkgeyByZXR1cm4geC5tYXAoZnVuY3Rpb24oeCkgeyByZXR1cm4gW3gsIHldOyB9KTsgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ3JhdGljdWxlKCkge1xuICB2YXIgeDEsIHgwLCBYMSwgWDAsXG4gICAgICB5MSwgeTAsIFkxLCBZMCxcbiAgICAgIGR4ID0gMTAsIGR5ID0gZHgsIERYID0gOTAsIERZID0gMzYwLFxuICAgICAgeCwgeSwgWCwgWSxcbiAgICAgIHByZWNpc2lvbiA9IDIuNTtcblxuICBmdW5jdGlvbiBncmF0aWN1bGUoKSB7XG4gICAgcmV0dXJuIHt0eXBlOiBcIk11bHRpTGluZVN0cmluZ1wiLCBjb29yZGluYXRlczogbGluZXMoKX07XG4gIH1cblxuICBmdW5jdGlvbiBsaW5lcygpIHtcbiAgICByZXR1cm4gcmFuZ2UoY2VpbChYMCAvIERYKSAqIERYLCBYMSwgRFgpLm1hcChYKVxuICAgICAgICAuY29uY2F0KHJhbmdlKGNlaWwoWTAgLyBEWSkgKiBEWSwgWTEsIERZKS5tYXAoWSkpXG4gICAgICAgIC5jb25jYXQocmFuZ2UoY2VpbCh4MCAvIGR4KSAqIGR4LCB4MSwgZHgpLmZpbHRlcihmdW5jdGlvbih4KSB7IHJldHVybiBhYnMoeCAlIERYKSA+IGVwc2lsb247IH0pLm1hcCh4KSlcbiAgICAgICAgLmNvbmNhdChyYW5nZShjZWlsKHkwIC8gZHkpICogZHksIHkxLCBkeSkuZmlsdGVyKGZ1bmN0aW9uKHkpIHsgcmV0dXJuIGFicyh5ICUgRFkpID4gZXBzaWxvbjsgfSkubWFwKHkpKTtcbiAgfVxuXG4gIGdyYXRpY3VsZS5saW5lcyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBsaW5lcygpLm1hcChmdW5jdGlvbihjb29yZGluYXRlcykgeyByZXR1cm4ge3R5cGU6IFwiTGluZVN0cmluZ1wiLCBjb29yZGluYXRlczogY29vcmRpbmF0ZXN9OyB9KTtcbiAgfTtcblxuICBncmF0aWN1bGUub3V0bGluZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBcIlBvbHlnb25cIixcbiAgICAgIGNvb3JkaW5hdGVzOiBbXG4gICAgICAgIFgoWDApLmNvbmNhdChcbiAgICAgICAgWShZMSkuc2xpY2UoMSksXG4gICAgICAgIFgoWDEpLnJldmVyc2UoKS5zbGljZSgxKSxcbiAgICAgICAgWShZMCkucmV2ZXJzZSgpLnNsaWNlKDEpKVxuICAgICAgXVxuICAgIH07XG4gIH07XG5cbiAgZ3JhdGljdWxlLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBncmF0aWN1bGUuZXh0ZW50TWlub3IoKTtcbiAgICByZXR1cm4gZ3JhdGljdWxlLmV4dGVudE1ham9yKF8pLmV4dGVudE1pbm9yKF8pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5leHRlbnRNYWpvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbW1gwLCBZMF0sIFtYMSwgWTFdXTtcbiAgICBYMCA9ICtfWzBdWzBdLCBYMSA9ICtfWzFdWzBdO1xuICAgIFkwID0gK19bMF1bMV0sIFkxID0gK19bMV1bMV07XG4gICAgaWYgKFgwID4gWDEpIF8gPSBYMCwgWDAgPSBYMSwgWDEgPSBfO1xuICAgIGlmIChZMCA+IFkxKSBfID0gWTAsIFkwID0gWTEsIFkxID0gXztcbiAgICByZXR1cm4gZ3JhdGljdWxlLnByZWNpc2lvbihwcmVjaXNpb24pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5leHRlbnRNaW5vciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgICB4MCA9ICtfWzBdWzBdLCB4MSA9ICtfWzFdWzBdO1xuICAgIHkwID0gK19bMF1bMV0sIHkxID0gK19bMV1bMV07XG4gICAgaWYgKHgwID4geDEpIF8gPSB4MCwgeDAgPSB4MSwgeDEgPSBfO1xuICAgIGlmICh5MCA+IHkxKSBfID0geTAsIHkwID0geTEsIHkxID0gXztcbiAgICByZXR1cm4gZ3JhdGljdWxlLnByZWNpc2lvbihwcmVjaXNpb24pO1xuICB9O1xuXG4gIGdyYXRpY3VsZS5zdGVwID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGdyYXRpY3VsZS5zdGVwTWlub3IoKTtcbiAgICByZXR1cm4gZ3JhdGljdWxlLnN0ZXBNYWpvcihfKS5zdGVwTWlub3IoXyk7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnN0ZXBNYWpvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbRFgsIERZXTtcbiAgICBEWCA9ICtfWzBdLCBEWSA9ICtfWzFdO1xuICAgIHJldHVybiBncmF0aWN1bGU7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnN0ZXBNaW5vciA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbZHgsIGR5XTtcbiAgICBkeCA9ICtfWzBdLCBkeSA9ICtfWzFdO1xuICAgIHJldHVybiBncmF0aWN1bGU7XG4gIH07XG5cbiAgZ3JhdGljdWxlLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwcmVjaXNpb247XG4gICAgcHJlY2lzaW9uID0gK187XG4gICAgeCA9IGdyYXRpY3VsZVgoeTAsIHkxLCA5MCk7XG4gICAgeSA9IGdyYXRpY3VsZVkoeDAsIHgxLCBwcmVjaXNpb24pO1xuICAgIFggPSBncmF0aWN1bGVYKFkwLCBZMSwgOTApO1xuICAgIFkgPSBncmF0aWN1bGVZKFgwLCBYMSwgcHJlY2lzaW9uKTtcbiAgICByZXR1cm4gZ3JhdGljdWxlO1xuICB9O1xuXG4gIHJldHVybiBncmF0aWN1bGVcbiAgICAgIC5leHRlbnRNYWpvcihbWy0xODAsIC05MCArIGVwc2lsb25dLCBbMTgwLCA5MCAtIGVwc2lsb25dXSlcbiAgICAgIC5leHRlbnRNaW5vcihbWy0xODAsIC04MCAtIGVwc2lsb25dLCBbMTgwLCA4MCArIGVwc2lsb25dXSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBncmF0aWN1bGUxMCgpIHtcbiAgcmV0dXJuIGdyYXRpY3VsZSgpKCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCB4ID0+IHg7XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgZ2VvQXJlYX0gZnJvbSBcIi4vYXJlYS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0JvdW5kc30gZnJvbSBcIi4vYm91bmRzLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ2VudHJvaWR9IGZyb20gXCIuL2NlbnRyb2lkLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ2lyY2xlfSBmcm9tIFwiLi9jaXJjbGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9DbGlwQW50aW1lcmlkaWFufSBmcm9tIFwiLi9jbGlwL2FudGltZXJpZGlhbi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NsaXBDaXJjbGV9IGZyb20gXCIuL2NsaXAvY2lyY2xlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ2xpcEV4dGVudH0gZnJvbSBcIi4vY2xpcC9leHRlbnQuanNcIjsgLy8gREVQUkVDQVRFRCEgVXNlIGQzLmdlb0lkZW50aXR5KCkuY2xpcEV4dGVudCjigKYpLlxuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0NsaXBSZWN0YW5nbGV9IGZyb20gXCIuL2NsaXAvcmVjdGFuZ2xlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29udGFpbnN9IGZyb20gXCIuL2NvbnRhaW5zLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvRGlzdGFuY2V9IGZyb20gXCIuL2Rpc3RhbmNlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvR3JhdGljdWxlLCBncmF0aWN1bGUxMCBhcyBnZW9HcmF0aWN1bGUxMH0gZnJvbSBcIi4vZ3JhdGljdWxlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvSW50ZXJwb2xhdGV9IGZyb20gXCIuL2ludGVycG9sYXRlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvTGVuZ3RofSBmcm9tIFwiLi9sZW5ndGguanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9QYXRofSBmcm9tIFwiLi9wYXRoL2luZGV4LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQWxiZXJzfSBmcm9tIFwiLi9wcm9qZWN0aW9uL2FsYmVycy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0FsYmVyc1VzYX0gZnJvbSBcIi4vcHJvamVjdGlvbi9hbGJlcnNVc2EuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9BemltdXRoYWxFcXVhbEFyZWEsIGF6aW11dGhhbEVxdWFsQXJlYVJhdyBhcyBnZW9BemltdXRoYWxFcXVhbEFyZWFSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vYXppbXV0aGFsRXF1YWxBcmVhLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQXppbXV0aGFsRXF1aWRpc3RhbnQsIGF6aW11dGhhbEVxdWlkaXN0YW50UmF3IGFzIGdlb0F6aW11dGhhbEVxdWlkaXN0YW50UmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2F6aW11dGhhbEVxdWlkaXN0YW50LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29uaWNDb25mb3JtYWwsIGNvbmljQ29uZm9ybWFsUmF3IGFzIGdlb0NvbmljQ29uZm9ybWFsUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2NvbmljQ29uZm9ybWFsLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29uaWNFcXVhbEFyZWEsIGNvbmljRXF1YWxBcmVhUmF3IGFzIGdlb0NvbmljRXF1YWxBcmVhUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2NvbmljRXF1YWxBcmVhLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvQ29uaWNFcXVpZGlzdGFudCwgY29uaWNFcXVpZGlzdGFudFJhdyBhcyBnZW9Db25pY0VxdWlkaXN0YW50UmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL2NvbmljRXF1aWRpc3RhbnQuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9FcXVhbEVhcnRoLCBlcXVhbEVhcnRoUmF3IGFzIGdlb0VxdWFsRWFydGhSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vZXF1YWxFYXJ0aC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb0VxdWlyZWN0YW5ndWxhciwgZXF1aXJlY3Rhbmd1bGFyUmF3IGFzIGdlb0VxdWlyZWN0YW5ndWxhclJhd30gZnJvbSBcIi4vcHJvamVjdGlvbi9lcXVpcmVjdGFuZ3VsYXIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9Hbm9tb25pYywgZ25vbW9uaWNSYXcgYXMgZ2VvR25vbW9uaWNSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vZ25vbW9uaWMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9JZGVudGl0eX0gZnJvbSBcIi4vcHJvamVjdGlvbi9pZGVudGl0eS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGdlb1Byb2plY3Rpb24sIHByb2plY3Rpb25NdXRhdG9yIGFzIGdlb1Byb2plY3Rpb25NdXRhdG9yfSBmcm9tIFwiLi9wcm9qZWN0aW9uL2luZGV4LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvTWVyY2F0b3IsIG1lcmNhdG9yUmF3IGFzIGdlb01lcmNhdG9yUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL21lcmNhdG9yLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvTmF0dXJhbEVhcnRoMSwgbmF0dXJhbEVhcnRoMVJhdyBhcyBnZW9OYXR1cmFsRWFydGgxUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL25hdHVyYWxFYXJ0aDEuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9PcnRob2dyYXBoaWMsIG9ydGhvZ3JhcGhpY1JhdyBhcyBnZW9PcnRob2dyYXBoaWNSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vb3J0aG9ncmFwaGljLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvU3RlcmVvZ3JhcGhpYywgc3RlcmVvZ3JhcGhpY1JhdyBhcyBnZW9TdGVyZW9ncmFwaGljUmF3fSBmcm9tIFwiLi9wcm9qZWN0aW9uL3N0ZXJlb2dyYXBoaWMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9UcmFuc3ZlcnNlTWVyY2F0b3IsIHRyYW5zdmVyc2VNZXJjYXRvclJhdyBhcyBnZW9UcmFuc3ZlcnNlTWVyY2F0b3JSYXd9IGZyb20gXCIuL3Byb2plY3Rpb24vdHJhbnN2ZXJzZU1lcmNhdG9yLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvUm90YXRpb259IGZyb20gXCIuL3JvdGF0aW9uLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgZ2VvU3RyZWFtfSBmcm9tIFwiLi9zdHJlYW0uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBnZW9UcmFuc2Zvcm19IGZyb20gXCIuL3RyYW5zZm9ybS5qc1wiO1xuIiwiaW1wb3J0IHthc2luLCBhdGFuMiwgY29zLCBkZWdyZWVzLCBoYXZlcnNpbiwgcmFkaWFucywgc2luLCBzcXJ0fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIHgwID0gYVswXSAqIHJhZGlhbnMsXG4gICAgICB5MCA9IGFbMV0gKiByYWRpYW5zLFxuICAgICAgeDEgPSBiWzBdICogcmFkaWFucyxcbiAgICAgIHkxID0gYlsxXSAqIHJhZGlhbnMsXG4gICAgICBjeTAgPSBjb3MoeTApLFxuICAgICAgc3kwID0gc2luKHkwKSxcbiAgICAgIGN5MSA9IGNvcyh5MSksXG4gICAgICBzeTEgPSBzaW4oeTEpLFxuICAgICAga3gwID0gY3kwICogY29zKHgwKSxcbiAgICAgIGt5MCA9IGN5MCAqIHNpbih4MCksXG4gICAgICBreDEgPSBjeTEgKiBjb3MoeDEpLFxuICAgICAga3kxID0gY3kxICogc2luKHgxKSxcbiAgICAgIGQgPSAyICogYXNpbihzcXJ0KGhhdmVyc2luKHkxIC0geTApICsgY3kwICogY3kxICogaGF2ZXJzaW4oeDEgLSB4MCkpKSxcbiAgICAgIGsgPSBzaW4oZCk7XG5cbiAgdmFyIGludGVycG9sYXRlID0gZCA/IGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgQiA9IHNpbih0ICo9IGQpIC8gayxcbiAgICAgICAgQSA9IHNpbihkIC0gdCkgLyBrLFxuICAgICAgICB4ID0gQSAqIGt4MCArIEIgKiBreDEsXG4gICAgICAgIHkgPSBBICoga3kwICsgQiAqIGt5MSxcbiAgICAgICAgeiA9IEEgKiBzeTAgKyBCICogc3kxO1xuICAgIHJldHVybiBbXG4gICAgICBhdGFuMih5LCB4KSAqIGRlZ3JlZXMsXG4gICAgICBhdGFuMih6LCBzcXJ0KHggKiB4ICsgeSAqIHkpKSAqIGRlZ3JlZXNcbiAgICBdO1xuICB9IDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFt4MCAqIGRlZ3JlZXMsIHkwICogZGVncmVlc107XG4gIH07XG5cbiAgaW50ZXJwb2xhdGUuZGlzdGFuY2UgPSBkO1xuXG4gIHJldHVybiBpbnRlcnBvbGF0ZTtcbn1cbiIsImltcG9ydCB7QWRkZXJ9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHthYnMsIGF0YW4yLCBjb3MsIHJhZGlhbnMsIHNpbiwgc3FydH0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4vbm9vcC5qc1wiO1xuaW1wb3J0IHN0cmVhbSBmcm9tIFwiLi9zdHJlYW0uanNcIjtcblxudmFyIGxlbmd0aFN1bSxcbiAgICBsYW1iZGEwLFxuICAgIHNpblBoaTAsXG4gICAgY29zUGhpMDtcblxudmFyIGxlbmd0aFN0cmVhbSA9IHtcbiAgc3BoZXJlOiBub29wLFxuICBwb2ludDogbm9vcCxcbiAgbGluZVN0YXJ0OiBsZW5ndGhMaW5lU3RhcnQsXG4gIGxpbmVFbmQ6IG5vb3AsXG4gIHBvbHlnb25TdGFydDogbm9vcCxcbiAgcG9seWdvbkVuZDogbm9vcFxufTtcblxuZnVuY3Rpb24gbGVuZ3RoTGluZVN0YXJ0KCkge1xuICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhQb2ludEZpcnN0O1xuICBsZW5ndGhTdHJlYW0ubGluZUVuZCA9IGxlbmd0aExpbmVFbmQ7XG59XG5cbmZ1bmN0aW9uIGxlbmd0aExpbmVFbmQoKSB7XG4gIGxlbmd0aFN0cmVhbS5wb2ludCA9IGxlbmd0aFN0cmVhbS5saW5lRW5kID0gbm9vcDtcbn1cblxuZnVuY3Rpb24gbGVuZ3RoUG9pbnRGaXJzdChsYW1iZGEsIHBoaSkge1xuICBsYW1iZGEgKj0gcmFkaWFucywgcGhpICo9IHJhZGlhbnM7XG4gIGxhbWJkYTAgPSBsYW1iZGEsIHNpblBoaTAgPSBzaW4ocGhpKSwgY29zUGhpMCA9IGNvcyhwaGkpO1xuICBsZW5ndGhTdHJlYW0ucG9pbnQgPSBsZW5ndGhQb2ludDtcbn1cblxuZnVuY3Rpb24gbGVuZ3RoUG9pbnQobGFtYmRhLCBwaGkpIHtcbiAgbGFtYmRhICo9IHJhZGlhbnMsIHBoaSAqPSByYWRpYW5zO1xuICB2YXIgc2luUGhpID0gc2luKHBoaSksXG4gICAgICBjb3NQaGkgPSBjb3MocGhpKSxcbiAgICAgIGRlbHRhID0gYWJzKGxhbWJkYSAtIGxhbWJkYTApLFxuICAgICAgY29zRGVsdGEgPSBjb3MoZGVsdGEpLFxuICAgICAgc2luRGVsdGEgPSBzaW4oZGVsdGEpLFxuICAgICAgeCA9IGNvc1BoaSAqIHNpbkRlbHRhLFxuICAgICAgeSA9IGNvc1BoaTAgKiBzaW5QaGkgLSBzaW5QaGkwICogY29zUGhpICogY29zRGVsdGEsXG4gICAgICB6ID0gc2luUGhpMCAqIHNpblBoaSArIGNvc1BoaTAgKiBjb3NQaGkgKiBjb3NEZWx0YTtcbiAgbGVuZ3RoU3VtLmFkZChhdGFuMihzcXJ0KHggKiB4ICsgeSAqIHkpLCB6KSk7XG4gIGxhbWJkYTAgPSBsYW1iZGEsIHNpblBoaTAgPSBzaW5QaGksIGNvc1BoaTAgPSBjb3NQaGk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iamVjdCkge1xuICBsZW5ndGhTdW0gPSBuZXcgQWRkZXIoKTtcbiAgc3RyZWFtKG9iamVjdCwgbGVuZ3RoU3RyZWFtKTtcbiAgcmV0dXJuICtsZW5ndGhTdW07XG59XG4iLCJleHBvcnQgdmFyIGVwc2lsb24gPSAxZS02O1xuZXhwb3J0IHZhciBlcHNpbG9uMiA9IDFlLTEyO1xuZXhwb3J0IHZhciBwaSA9IE1hdGguUEk7XG5leHBvcnQgdmFyIGhhbGZQaSA9IHBpIC8gMjtcbmV4cG9ydCB2YXIgcXVhcnRlclBpID0gcGkgLyA0O1xuZXhwb3J0IHZhciB0YXUgPSBwaSAqIDI7XG5cbmV4cG9ydCB2YXIgZGVncmVlcyA9IDE4MCAvIHBpO1xuZXhwb3J0IHZhciByYWRpYW5zID0gcGkgLyAxODA7XG5cbmV4cG9ydCB2YXIgYWJzID0gTWF0aC5hYnM7XG5leHBvcnQgdmFyIGF0YW4gPSBNYXRoLmF0YW47XG5leHBvcnQgdmFyIGF0YW4yID0gTWF0aC5hdGFuMjtcbmV4cG9ydCB2YXIgY29zID0gTWF0aC5jb3M7XG5leHBvcnQgdmFyIGNlaWwgPSBNYXRoLmNlaWw7XG5leHBvcnQgdmFyIGV4cCA9IE1hdGguZXhwO1xuZXhwb3J0IHZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5leHBvcnQgdmFyIGh5cG90ID0gTWF0aC5oeXBvdDtcbmV4cG9ydCB2YXIgbG9nID0gTWF0aC5sb2c7XG5leHBvcnQgdmFyIHBvdyA9IE1hdGgucG93O1xuZXhwb3J0IHZhciBzaW4gPSBNYXRoLnNpbjtcbmV4cG9ydCB2YXIgc2lnbiA9IE1hdGguc2lnbiB8fCBmdW5jdGlvbih4KSB7IHJldHVybiB4ID4gMCA/IDEgOiB4IDwgMCA/IC0xIDogMDsgfTtcbmV4cG9ydCB2YXIgc3FydCA9IE1hdGguc3FydDtcbmV4cG9ydCB2YXIgdGFuID0gTWF0aC50YW47XG5cbmV4cG9ydCBmdW5jdGlvbiBhY29zKHgpIHtcbiAgcmV0dXJuIHggPiAxID8gMCA6IHggPCAtMSA/IHBpIDogTWF0aC5hY29zKHgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNpbih4KSB7XG4gIHJldHVybiB4ID4gMSA/IGhhbGZQaSA6IHggPCAtMSA/IC1oYWxmUGkgOiBNYXRoLmFzaW4oeCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYXZlcnNpbih4KSB7XG4gIHJldHVybiAoeCA9IHNpbih4IC8gMikpICogeDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vb3AoKSB7fVxuIiwiaW1wb3J0IHtBZGRlcn0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2Fic30gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5cbnZhciBhcmVhU3VtID0gbmV3IEFkZGVyKCksXG4gICAgYXJlYVJpbmdTdW0gPSBuZXcgQWRkZXIoKSxcbiAgICB4MDAsXG4gICAgeTAwLFxuICAgIHgwLFxuICAgIHkwO1xuXG52YXIgYXJlYVN0cmVhbSA9IHtcbiAgcG9pbnQ6IG5vb3AsXG4gIGxpbmVTdGFydDogbm9vcCxcbiAgbGluZUVuZDogbm9vcCxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBhcmVhU3RyZWFtLmxpbmVTdGFydCA9IGFyZWFSaW5nU3RhcnQ7XG4gICAgYXJlYVN0cmVhbS5saW5lRW5kID0gYXJlYVJpbmdFbmQ7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGFyZWFTdHJlYW0ubGluZVN0YXJ0ID0gYXJlYVN0cmVhbS5saW5lRW5kID0gYXJlYVN0cmVhbS5wb2ludCA9IG5vb3A7XG4gICAgYXJlYVN1bS5hZGQoYWJzKGFyZWFSaW5nU3VtKSk7XG4gICAgYXJlYVJpbmdTdW0gPSBuZXcgQWRkZXIoKTtcbiAgfSxcbiAgcmVzdWx0OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgYXJlYSA9IGFyZWFTdW0gLyAyO1xuICAgIGFyZWFTdW0gPSBuZXcgQWRkZXIoKTtcbiAgICByZXR1cm4gYXJlYTtcbiAgfVxufTtcblxuZnVuY3Rpb24gYXJlYVJpbmdTdGFydCgpIHtcbiAgYXJlYVN0cmVhbS5wb2ludCA9IGFyZWFQb2ludEZpcnN0O1xufVxuXG5mdW5jdGlvbiBhcmVhUG9pbnRGaXJzdCh4LCB5KSB7XG4gIGFyZWFTdHJlYW0ucG9pbnQgPSBhcmVhUG9pbnQ7XG4gIHgwMCA9IHgwID0geCwgeTAwID0geTAgPSB5O1xufVxuXG5mdW5jdGlvbiBhcmVhUG9pbnQoeCwgeSkge1xuICBhcmVhUmluZ1N1bS5hZGQoeTAgKiB4IC0geDAgKiB5KTtcbiAgeDAgPSB4LCB5MCA9IHk7XG59XG5cbmZ1bmN0aW9uIGFyZWFSaW5nRW5kKCkge1xuICBhcmVhUG9pbnQoeDAwLCB5MDApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBhcmVhU3RyZWFtO1xuIiwiaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3AuanNcIjtcblxudmFyIHgwID0gSW5maW5pdHksXG4gICAgeTAgPSB4MCxcbiAgICB4MSA9IC14MCxcbiAgICB5MSA9IHgxO1xuXG52YXIgYm91bmRzU3RyZWFtID0ge1xuICBwb2ludDogYm91bmRzUG9pbnQsXG4gIGxpbmVTdGFydDogbm9vcCxcbiAgbGluZUVuZDogbm9vcCxcbiAgcG9seWdvblN0YXJ0OiBub29wLFxuICBwb2x5Z29uRW5kOiBub29wLFxuICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBib3VuZHMgPSBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgICB4MSA9IHkxID0gLSh5MCA9IHgwID0gSW5maW5pdHkpO1xuICAgIHJldHVybiBib3VuZHM7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGJvdW5kc1BvaW50KHgsIHkpIHtcbiAgaWYgKHggPCB4MCkgeDAgPSB4O1xuICBpZiAoeCA+IHgxKSB4MSA9IHg7XG4gIGlmICh5IDwgeTApIHkwID0geTtcbiAgaWYgKHkgPiB5MSkgeTEgPSB5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBib3VuZHNTdHJlYW07XG4iLCJpbXBvcnQge3NxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbi8vIFRPRE8gRW5mb3JjZSBwb3NpdGl2ZSBhcmVhIGZvciBleHRlcmlvciwgbmVnYXRpdmUgYXJlYSBmb3IgaW50ZXJpb3I/XG5cbnZhciBYMCA9IDAsXG4gICAgWTAgPSAwLFxuICAgIFowID0gMCxcbiAgICBYMSA9IDAsXG4gICAgWTEgPSAwLFxuICAgIFoxID0gMCxcbiAgICBYMiA9IDAsXG4gICAgWTIgPSAwLFxuICAgIFoyID0gMCxcbiAgICB4MDAsXG4gICAgeTAwLFxuICAgIHgwLFxuICAgIHkwO1xuXG52YXIgY2VudHJvaWRTdHJlYW0gPSB7XG4gIHBvaW50OiBjZW50cm9pZFBvaW50LFxuICBsaW5lU3RhcnQ6IGNlbnRyb2lkTGluZVN0YXJ0LFxuICBsaW5lRW5kOiBjZW50cm9pZExpbmVFbmQsXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZVN0YXJ0ID0gY2VudHJvaWRSaW5nU3RhcnQ7XG4gICAgY2VudHJvaWRTdHJlYW0ubGluZUVuZCA9IGNlbnRyb2lkUmluZ0VuZDtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50O1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVTdGFydCA9IGNlbnRyb2lkTGluZVN0YXJ0O1xuICAgIGNlbnRyb2lkU3RyZWFtLmxpbmVFbmQgPSBjZW50cm9pZExpbmVFbmQ7XG4gIH0sXG4gIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNlbnRyb2lkID0gWjIgPyBbWDIgLyBaMiwgWTIgLyBaMl1cbiAgICAgICAgOiBaMSA/IFtYMSAvIFoxLCBZMSAvIFoxXVxuICAgICAgICA6IFowID8gW1gwIC8gWjAsIFkwIC8gWjBdXG4gICAgICAgIDogW05hTiwgTmFOXTtcbiAgICBYMCA9IFkwID0gWjAgPVxuICAgIFgxID0gWTEgPSBaMSA9XG4gICAgWDIgPSBZMiA9IFoyID0gMDtcbiAgICByZXR1cm4gY2VudHJvaWQ7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnQoeCwgeSkge1xuICBYMCArPSB4O1xuICBZMCArPSB5O1xuICArK1owO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZExpbmVTdGFydCgpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50Rmlyc3RMaW5lO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50Rmlyc3RMaW5lKHgsIHkpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50TGluZTtcbiAgY2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRMaW5lKHgsIHkpIHtcbiAgdmFyIGR4ID0geCAtIHgwLCBkeSA9IHkgLSB5MCwgeiA9IHNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuICBYMSArPSB6ICogKHgwICsgeCkgLyAyO1xuICBZMSArPSB6ICogKHkwICsgeSkgLyAyO1xuICBaMSArPSB6O1xuICBjZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbn1cblxuZnVuY3Rpb24gY2VudHJvaWRMaW5lRW5kKCkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnQ7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUmluZ1N0YXJ0KCkge1xuICBjZW50cm9pZFN0cmVhbS5wb2ludCA9IGNlbnRyb2lkUG9pbnRGaXJzdFJpbmc7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUmluZ0VuZCgpIHtcbiAgY2VudHJvaWRQb2ludFJpbmcoeDAwLCB5MDApO1xufVxuXG5mdW5jdGlvbiBjZW50cm9pZFBvaW50Rmlyc3RSaW5nKHgsIHkpIHtcbiAgY2VudHJvaWRTdHJlYW0ucG9pbnQgPSBjZW50cm9pZFBvaW50UmluZztcbiAgY2VudHJvaWRQb2ludCh4MDAgPSB4MCA9IHgsIHkwMCA9IHkwID0geSk7XG59XG5cbmZ1bmN0aW9uIGNlbnRyb2lkUG9pbnRSaW5nKHgsIHkpIHtcbiAgdmFyIGR4ID0geCAtIHgwLFxuICAgICAgZHkgPSB5IC0geTAsXG4gICAgICB6ID0gc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG5cbiAgWDEgKz0geiAqICh4MCArIHgpIC8gMjtcbiAgWTEgKz0geiAqICh5MCArIHkpIC8gMjtcbiAgWjEgKz0gejtcblxuICB6ID0geTAgKiB4IC0geDAgKiB5O1xuICBYMiArPSB6ICogKHgwICsgeCk7XG4gIFkyICs9IHogKiAoeTAgKyB5KTtcbiAgWjIgKz0geiAqIDM7XG4gIGNlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjZW50cm9pZFN0cmVhbTtcbiIsImltcG9ydCB7dGF1fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3AuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGF0aENvbnRleHQoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuUGF0aENvbnRleHQucHJvdG90eXBlID0ge1xuICBfcmFkaXVzOiA0LjUsXG4gIHBvaW50UmFkaXVzOiBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIHRoaXMuX3JhZGl1cyA9IF8sIHRoaXM7XG4gIH0sXG4gIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSA9PT0gMCkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9wb2ludCA9IE5hTjtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7XG4gICAgICAgIHRoaXMuX3BvaW50ID0gMTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDE6IHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgZGVmYXVsdDoge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4ICsgdGhpcy5fcmFkaXVzLCB5KTtcbiAgICAgICAgdGhpcy5fY29udGV4dC5hcmMoeCwgeSwgdGhpcy5fcmFkaXVzLCAwLCB0YXUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHJlc3VsdDogbm9vcFxufTtcbiIsImltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi4vaWRlbnRpdHkuanNcIjtcbmltcG9ydCBzdHJlYW0gZnJvbSBcIi4uL3N0cmVhbS5qc1wiO1xuaW1wb3J0IHBhdGhBcmVhIGZyb20gXCIuL2FyZWEuanNcIjtcbmltcG9ydCBwYXRoQm91bmRzIGZyb20gXCIuL2JvdW5kcy5qc1wiO1xuaW1wb3J0IHBhdGhDZW50cm9pZCBmcm9tIFwiLi9jZW50cm9pZC5qc1wiO1xuaW1wb3J0IFBhdGhDb250ZXh0IGZyb20gXCIuL2NvbnRleHQuanNcIjtcbmltcG9ydCBwYXRoTWVhc3VyZSBmcm9tIFwiLi9tZWFzdXJlLmpzXCI7XG5pbXBvcnQgUGF0aFN0cmluZyBmcm9tIFwiLi9zdHJpbmcuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocHJvamVjdGlvbiwgY29udGV4dCkge1xuICB2YXIgcG9pbnRSYWRpdXMgPSA0LjUsXG4gICAgICBwcm9qZWN0aW9uU3RyZWFtLFxuICAgICAgY29udGV4dFN0cmVhbTtcblxuICBmdW5jdGlvbiBwYXRoKG9iamVjdCkge1xuICAgIGlmIChvYmplY3QpIHtcbiAgICAgIGlmICh0eXBlb2YgcG9pbnRSYWRpdXMgPT09IFwiZnVuY3Rpb25cIikgY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cygrcG9pbnRSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgICBzdHJlYW0ob2JqZWN0LCBwcm9qZWN0aW9uU3RyZWFtKGNvbnRleHRTdHJlYW0pKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHRTdHJlYW0ucmVzdWx0KCk7XG4gIH1cblxuICBwYXRoLmFyZWEgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBzdHJlYW0ob2JqZWN0LCBwcm9qZWN0aW9uU3RyZWFtKHBhdGhBcmVhKSk7XG4gICAgcmV0dXJuIHBhdGhBcmVhLnJlc3VsdCgpO1xuICB9O1xuXG4gIHBhdGgubWVhc3VyZSA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHN0cmVhbShvYmplY3QsIHByb2plY3Rpb25TdHJlYW0ocGF0aE1lYXN1cmUpKTtcbiAgICByZXR1cm4gcGF0aE1lYXN1cmUucmVzdWx0KCk7XG4gIH07XG5cbiAgcGF0aC5ib3VuZHMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBzdHJlYW0ob2JqZWN0LCBwcm9qZWN0aW9uU3RyZWFtKHBhdGhCb3VuZHMpKTtcbiAgICByZXR1cm4gcGF0aEJvdW5kcy5yZXN1bHQoKTtcbiAgfTtcblxuICBwYXRoLmNlbnRyb2lkID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgc3RyZWFtKG9iamVjdCwgcHJvamVjdGlvblN0cmVhbShwYXRoQ2VudHJvaWQpKTtcbiAgICByZXR1cm4gcGF0aENlbnRyb2lkLnJlc3VsdCgpO1xuICB9O1xuXG4gIHBhdGgucHJvamVjdGlvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwcm9qZWN0aW9uU3RyZWFtID0gXyA9PSBudWxsID8gKHByb2plY3Rpb24gPSBudWxsLCBpZGVudGl0eSkgOiAocHJvamVjdGlvbiA9IF8pLnN0cmVhbSwgcGF0aCkgOiBwcm9qZWN0aW9uO1xuICB9O1xuXG4gIHBhdGguY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjb250ZXh0O1xuICAgIGNvbnRleHRTdHJlYW0gPSBfID09IG51bGwgPyAoY29udGV4dCA9IG51bGwsIG5ldyBQYXRoU3RyaW5nKSA6IG5ldyBQYXRoQ29udGV4dChjb250ZXh0ID0gXyk7XG4gICAgaWYgKHR5cGVvZiBwb2ludFJhZGl1cyAhPT0gXCJmdW5jdGlvblwiKSBjb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKHBvaW50UmFkaXVzKTtcbiAgICByZXR1cm4gcGF0aDtcbiAgfTtcblxuICBwYXRoLnBvaW50UmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBvaW50UmFkaXVzO1xuICAgIHBvaW50UmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiAoY29udGV4dFN0cmVhbS5wb2ludFJhZGl1cygrXyksICtfKTtcbiAgICByZXR1cm4gcGF0aDtcbiAgfTtcblxuICByZXR1cm4gcGF0aC5wcm9qZWN0aW9uKHByb2plY3Rpb24pLmNvbnRleHQoY29udGV4dCk7XG59XG4iLCJpbXBvcnQge0FkZGVyfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7c3FydH0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5cbnZhciBsZW5ndGhTdW0gPSBuZXcgQWRkZXIoKSxcbiAgICBsZW5ndGhSaW5nLFxuICAgIHgwMCxcbiAgICB5MDAsXG4gICAgeDAsXG4gICAgeTA7XG5cbnZhciBsZW5ndGhTdHJlYW0gPSB7XG4gIHBvaW50OiBub29wLFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIGxlbmd0aFN0cmVhbS5wb2ludCA9IGxlbmd0aFBvaW50Rmlyc3Q7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmIChsZW5ndGhSaW5nKSBsZW5ndGhQb2ludCh4MDAsIHkwMCk7XG4gICAgbGVuZ3RoU3RyZWFtLnBvaW50ID0gbm9vcDtcbiAgfSxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBsZW5ndGhSaW5nID0gdHJ1ZTtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgbGVuZ3RoUmluZyA9IG51bGw7XG4gIH0sXG4gIHJlc3VsdDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGxlbmd0aCA9ICtsZW5ndGhTdW07XG4gICAgbGVuZ3RoU3VtID0gbmV3IEFkZGVyKCk7XG4gICAgcmV0dXJuIGxlbmd0aDtcbiAgfVxufTtcblxuZnVuY3Rpb24gbGVuZ3RoUG9pbnRGaXJzdCh4LCB5KSB7XG4gIGxlbmd0aFN0cmVhbS5wb2ludCA9IGxlbmd0aFBvaW50O1xuICB4MDAgPSB4MCA9IHgsIHkwMCA9IHkwID0geTtcbn1cblxuZnVuY3Rpb24gbGVuZ3RoUG9pbnQoeCwgeSkge1xuICB4MCAtPSB4LCB5MCAtPSB5O1xuICBsZW5ndGhTdW0uYWRkKHNxcnQoeDAgKiB4MCArIHkwICogeTApKTtcbiAgeDAgPSB4LCB5MCA9IHk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxlbmd0aFN0cmVhbTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBhdGhTdHJpbmcoKSB7XG4gIHRoaXMuX3N0cmluZyA9IFtdO1xufVxuXG5QYXRoU3RyaW5nLnByb3RvdHlwZSA9IHtcbiAgX3JhZGl1czogNC41LFxuICBfY2lyY2xlOiBjaXJjbGUoNC41KSxcbiAgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoKF8gPSArXykgIT09IHRoaXMuX3JhZGl1cykgdGhpcy5fcmFkaXVzID0gXywgdGhpcy5fY2lyY2xlID0gbnVsbDtcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbiAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lID09PSAwKSB0aGlzLl9zdHJpbmcucHVzaChcIlpcIik7XG4gICAgdGhpcy5fcG9pbnQgPSBOYU47XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB7XG4gICAgICAgIHRoaXMuX3N0cmluZy5wdXNoKFwiTVwiLCB4LCBcIixcIiwgeSk7XG4gICAgICAgIHRoaXMuX3BvaW50ID0gMTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIDE6IHtcbiAgICAgICAgdGhpcy5fc3RyaW5nLnB1c2goXCJMXCIsIHgsIFwiLFwiLCB5KTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIGlmICh0aGlzLl9jaXJjbGUgPT0gbnVsbCkgdGhpcy5fY2lyY2xlID0gY2lyY2xlKHRoaXMuX3JhZGl1cyk7XG4gICAgICAgIHRoaXMuX3N0cmluZy5wdXNoKFwiTVwiLCB4LCBcIixcIiwgeSwgdGhpcy5fY2lyY2xlKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9zdHJpbmcubGVuZ3RoKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdGhpcy5fc3RyaW5nLmpvaW4oXCJcIik7XG4gICAgICB0aGlzLl9zdHJpbmcgPSBbXTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gY2lyY2xlKHJhZGl1cykge1xuICByZXR1cm4gXCJtMCxcIiArIHJhZGl1c1xuICAgICAgKyBcImFcIiArIHJhZGl1cyArIFwiLFwiICsgcmFkaXVzICsgXCIgMCAxLDEgMCxcIiArIC0yICogcmFkaXVzXG4gICAgICArIFwiYVwiICsgcmFkaXVzICsgXCIsXCIgKyByYWRpdXMgKyBcIiAwIDEsMSAwLFwiICsgMiAqIHJhZGl1c1xuICAgICAgKyBcInpcIjtcbn1cbiIsImltcG9ydCB7YWJzLCBlcHNpbG9ufSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGFicyhhWzBdIC0gYlswXSkgPCBlcHNpbG9uICYmIGFicyhhWzFdIC0gYlsxXSkgPCBlcHNpbG9uO1xufVxuIiwiaW1wb3J0IHtBZGRlcn0gZnJvbSBcImQzLWFycmF5XCI7XG5pbXBvcnQge2NhcnRlc2lhbiwgY2FydGVzaWFuQ3Jvc3MsIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2V9IGZyb20gXCIuL2NhcnRlc2lhbi5qc1wiO1xuaW1wb3J0IHthYnMsIGFzaW4sIGF0YW4yLCBjb3MsIGVwc2lsb24sIGVwc2lsb24yLCBoYWxmUGksIHBpLCBxdWFydGVyUGksIHNpZ24sIHNpbiwgdGF1fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIGxvbmdpdHVkZShwb2ludCkge1xuICBpZiAoYWJzKHBvaW50WzBdKSA8PSBwaSlcbiAgICByZXR1cm4gcG9pbnRbMF07XG4gIGVsc2VcbiAgICByZXR1cm4gc2lnbihwb2ludFswXSkgKiAoKGFicyhwb2ludFswXSkgKyBwaSkgJSB0YXUgLSBwaSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBvbHlnb24sIHBvaW50KSB7XG4gIHZhciBsYW1iZGEgPSBsb25naXR1ZGUocG9pbnQpLFxuICAgICAgcGhpID0gcG9pbnRbMV0sXG4gICAgICBzaW5QaGkgPSBzaW4ocGhpKSxcbiAgICAgIG5vcm1hbCA9IFtzaW4obGFtYmRhKSwgLWNvcyhsYW1iZGEpLCAwXSxcbiAgICAgIGFuZ2xlID0gMCxcbiAgICAgIHdpbmRpbmcgPSAwO1xuXG4gIHZhciBzdW0gPSBuZXcgQWRkZXIoKTtcblxuICBpZiAoc2luUGhpID09PSAxKSBwaGkgPSBoYWxmUGkgKyBlcHNpbG9uO1xuICBlbHNlIGlmIChzaW5QaGkgPT09IC0xKSBwaGkgPSAtaGFsZlBpIC0gZXBzaWxvbjtcblxuICBmb3IgKHZhciBpID0gMCwgbiA9IHBvbHlnb24ubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgaWYgKCEobSA9IChyaW5nID0gcG9seWdvbltpXSkubGVuZ3RoKSkgY29udGludWU7XG4gICAgdmFyIHJpbmcsXG4gICAgICAgIG0sXG4gICAgICAgIHBvaW50MCA9IHJpbmdbbSAtIDFdLFxuICAgICAgICBsYW1iZGEwID0gbG9uZ2l0dWRlKHBvaW50MCksXG4gICAgICAgIHBoaTAgPSBwb2ludDBbMV0gLyAyICsgcXVhcnRlclBpLFxuICAgICAgICBzaW5QaGkwID0gc2luKHBoaTApLFxuICAgICAgICBjb3NQaGkwID0gY29zKHBoaTApO1xuXG4gICAgZm9yICh2YXIgaiA9IDA7IGogPCBtOyArK2osIGxhbWJkYTAgPSBsYW1iZGExLCBzaW5QaGkwID0gc2luUGhpMSwgY29zUGhpMCA9IGNvc1BoaTEsIHBvaW50MCA9IHBvaW50MSkge1xuICAgICAgdmFyIHBvaW50MSA9IHJpbmdbal0sXG4gICAgICAgICAgbGFtYmRhMSA9IGxvbmdpdHVkZShwb2ludDEpLFxuICAgICAgICAgIHBoaTEgPSBwb2ludDFbMV0gLyAyICsgcXVhcnRlclBpLFxuICAgICAgICAgIHNpblBoaTEgPSBzaW4ocGhpMSksXG4gICAgICAgICAgY29zUGhpMSA9IGNvcyhwaGkxKSxcbiAgICAgICAgICBkZWx0YSA9IGxhbWJkYTEgLSBsYW1iZGEwLFxuICAgICAgICAgIHNpZ24gPSBkZWx0YSA+PSAwID8gMSA6IC0xLFxuICAgICAgICAgIGFic0RlbHRhID0gc2lnbiAqIGRlbHRhLFxuICAgICAgICAgIGFudGltZXJpZGlhbiA9IGFic0RlbHRhID4gcGksXG4gICAgICAgICAgayA9IHNpblBoaTAgKiBzaW5QaGkxO1xuXG4gICAgICBzdW0uYWRkKGF0YW4yKGsgKiBzaWduICogc2luKGFic0RlbHRhKSwgY29zUGhpMCAqIGNvc1BoaTEgKyBrICogY29zKGFic0RlbHRhKSkpO1xuICAgICAgYW5nbGUgKz0gYW50aW1lcmlkaWFuID8gZGVsdGEgKyBzaWduICogdGF1IDogZGVsdGE7XG5cbiAgICAgIC8vIEFyZSB0aGUgbG9uZ2l0dWRlcyBlaXRoZXIgc2lkZSBvZiB0aGUgcG9pbnTigJlzIG1lcmlkaWFuIChsYW1iZGEpLFxuICAgICAgLy8gYW5kIGFyZSB0aGUgbGF0aXR1ZGVzIHNtYWxsZXIgdGhhbiB0aGUgcGFyYWxsZWwgKHBoaSk/XG4gICAgICBpZiAoYW50aW1lcmlkaWFuIF4gbGFtYmRhMCA+PSBsYW1iZGEgXiBsYW1iZGExID49IGxhbWJkYSkge1xuICAgICAgICB2YXIgYXJjID0gY2FydGVzaWFuQ3Jvc3MoY2FydGVzaWFuKHBvaW50MCksIGNhcnRlc2lhbihwb2ludDEpKTtcbiAgICAgICAgY2FydGVzaWFuTm9ybWFsaXplSW5QbGFjZShhcmMpO1xuICAgICAgICB2YXIgaW50ZXJzZWN0aW9uID0gY2FydGVzaWFuQ3Jvc3Mobm9ybWFsLCBhcmMpO1xuICAgICAgICBjYXJ0ZXNpYW5Ob3JtYWxpemVJblBsYWNlKGludGVyc2VjdGlvbik7XG4gICAgICAgIHZhciBwaGlBcmMgPSAoYW50aW1lcmlkaWFuIF4gZGVsdGEgPj0gMCA/IC0xIDogMSkgKiBhc2luKGludGVyc2VjdGlvblsyXSk7XG4gICAgICAgIGlmIChwaGkgPiBwaGlBcmMgfHwgcGhpID09PSBwaGlBcmMgJiYgKGFyY1swXSB8fCBhcmNbMV0pKSB7XG4gICAgICAgICAgd2luZGluZyArPSBhbnRpbWVyaWRpYW4gXiBkZWx0YSA+PSAwID8gMSA6IC0xO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gRmlyc3QsIGRldGVybWluZSB3aGV0aGVyIHRoZSBTb3V0aCBwb2xlIGlzIGluc2lkZSBvciBvdXRzaWRlOlxuICAvL1xuICAvLyBJdCBpcyBpbnNpZGUgaWY6XG4gIC8vICogdGhlIHBvbHlnb24gd2luZHMgYXJvdW5kIGl0IGluIGEgY2xvY2t3aXNlIGRpcmVjdGlvbi5cbiAgLy8gKiB0aGUgcG9seWdvbiBkb2VzIG5vdCAoY3VtdWxhdGl2ZWx5KSB3aW5kIGFyb3VuZCBpdCwgYnV0IGhhcyBhIG5lZ2F0aXZlXG4gIC8vICAgKGNvdW50ZXItY2xvY2t3aXNlKSBhcmVhLlxuICAvL1xuICAvLyBTZWNvbmQsIGNvdW50IHRoZSAoc2lnbmVkKSBudW1iZXIgb2YgdGltZXMgYSBzZWdtZW50IGNyb3NzZXMgYSBsYW1iZGFcbiAgLy8gZnJvbSB0aGUgcG9pbnQgdG8gdGhlIFNvdXRoIHBvbGUuICBJZiBpdCBpcyB6ZXJvLCB0aGVuIHRoZSBwb2ludCBpcyB0aGVcbiAgLy8gc2FtZSBzaWRlIGFzIHRoZSBTb3V0aCBwb2xlLlxuXG4gIHJldHVybiAoYW5nbGUgPCAtZXBzaWxvbiB8fCBhbmdsZSA8IGVwc2lsb24gJiYgc3VtIDwgLWVwc2lsb24yKSBeICh3aW5kaW5nICYgMSk7XG59XG4iLCJpbXBvcnQgY29uaWNFcXVhbEFyZWEgZnJvbSBcIi4vY29uaWNFcXVhbEFyZWEuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjb25pY0VxdWFsQXJlYSgpXG4gICAgICAucGFyYWxsZWxzKFsyOS41LCA0NS41XSlcbiAgICAgIC5zY2FsZSgxMDcwKVxuICAgICAgLnRyYW5zbGF0ZShbNDgwLCAyNTBdKVxuICAgICAgLnJvdGF0ZShbOTYsIDBdKVxuICAgICAgLmNlbnRlcihbLTAuNiwgMzguN10pO1xufVxuIiwiaW1wb3J0IHtlcHNpbG9ufSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IGFsYmVycyBmcm9tIFwiLi9hbGJlcnMuanNcIjtcbmltcG9ydCBjb25pY0VxdWFsQXJlYSBmcm9tIFwiLi9jb25pY0VxdWFsQXJlYS5qc1wiO1xuaW1wb3J0IHtmaXRFeHRlbnQsIGZpdFNpemUsIGZpdFdpZHRoLCBmaXRIZWlnaHR9IGZyb20gXCIuL2ZpdC5qc1wiO1xuXG4vLyBUaGUgcHJvamVjdGlvbnMgbXVzdCBoYXZlIG11dHVhbGx5IGV4Y2x1c2l2ZSBjbGlwIHJlZ2lvbnMgb24gdGhlIHNwaGVyZSxcbi8vIGFzIHRoaXMgd2lsbCBhdm9pZCBlbWl0dGluZyBpbnRlcmxlYXZpbmcgbGluZXMgYW5kIHBvbHlnb25zLlxuZnVuY3Rpb24gbXVsdGlwbGV4KHN0cmVhbXMpIHtcbiAgdmFyIG4gPSBzdHJlYW1zLmxlbmd0aDtcbiAgcmV0dXJuIHtcbiAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5wb2ludCh4LCB5KTsgfSxcbiAgICBzcGhlcmU6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5zcGhlcmUoKTsgfSxcbiAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5saW5lU3RhcnQoKTsgfSxcbiAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHsgdmFyIGkgPSAtMTsgd2hpbGUgKCsraSA8IG4pIHN0cmVhbXNbaV0ubGluZUVuZCgpOyB9LFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7IHZhciBpID0gLTE7IHdoaWxlICgrK2kgPCBuKSBzdHJlYW1zW2ldLnBvbHlnb25TdGFydCgpOyB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkgeyB2YXIgaSA9IC0xOyB3aGlsZSAoKytpIDwgbikgc3RyZWFtc1tpXS5wb2x5Z29uRW5kKCk7IH1cbiAgfTtcbn1cblxuLy8gQSBjb21wb3NpdGUgcHJvamVjdGlvbiBmb3IgdGhlIFVuaXRlZCBTdGF0ZXMsIGNvbmZpZ3VyZWQgYnkgZGVmYXVsdCBmb3Jcbi8vIDk2MMOXNTAwLiBUaGUgcHJvamVjdGlvbiBhbHNvIHdvcmtzIHF1aXRlIHdlbGwgYXQgOTYww5c2MDAgaWYgeW91IGNoYW5nZSB0aGVcbi8vIHNjYWxlIHRvIDEyODUgYW5kIGFkanVzdCB0aGUgdHJhbnNsYXRlIGFjY29yZGluZ2x5LiBUaGUgc2V0IG9mIHN0YW5kYXJkXG4vLyBwYXJhbGxlbHMgZm9yIGVhY2ggcmVnaW9uIGNvbWVzIGZyb20gVVNHUywgd2hpY2ggaXMgcHVibGlzaGVkIGhlcmU6XG4vLyBodHRwOi8vZWdzYy51c2dzLmdvdi9pc2IvcHVicy9NYXBQcm9qZWN0aW9ucy9wcm9qZWN0aW9ucy5odG1sI2FsYmVyc1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtLFxuICAgICAgbG93ZXI0OCA9IGFsYmVycygpLCBsb3dlcjQ4UG9pbnQsXG4gICAgICBhbGFza2EgPSBjb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbMTU0LCAwXSkuY2VudGVyKFstMiwgNTguNV0pLnBhcmFsbGVscyhbNTUsIDY1XSksIGFsYXNrYVBvaW50LCAvLyBFUFNHOjMzMzhcbiAgICAgIGhhd2FpaSA9IGNvbmljRXF1YWxBcmVhKCkucm90YXRlKFsxNTcsIDBdKS5jZW50ZXIoWy0zLCAxOS45XSkucGFyYWxsZWxzKFs4LCAxOF0pLCBoYXdhaWlQb2ludCwgLy8gRVNSSToxMDIwMDdcbiAgICAgIHBvaW50LCBwb2ludFN0cmVhbSA9IHtwb2ludDogZnVuY3Rpb24oeCwgeSkgeyBwb2ludCA9IFt4LCB5XTsgfX07XG5cbiAgZnVuY3Rpb24gYWxiZXJzVXNhKGNvb3JkaW5hdGVzKSB7XG4gICAgdmFyIHggPSBjb29yZGluYXRlc1swXSwgeSA9IGNvb3JkaW5hdGVzWzFdO1xuICAgIHJldHVybiBwb2ludCA9IG51bGwsXG4gICAgICAgIChsb3dlcjQ4UG9pbnQucG9pbnQoeCwgeSksIHBvaW50KVxuICAgICAgICB8fCAoYWxhc2thUG9pbnQucG9pbnQoeCwgeSksIHBvaW50KVxuICAgICAgICB8fCAoaGF3YWlpUG9pbnQucG9pbnQoeCwgeSksIHBvaW50KTtcbiAgfVxuXG4gIGFsYmVyc1VzYS5pbnZlcnQgPSBmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgIHZhciBrID0gbG93ZXI0OC5zY2FsZSgpLFxuICAgICAgICB0ID0gbG93ZXI0OC50cmFuc2xhdGUoKSxcbiAgICAgICAgeCA9IChjb29yZGluYXRlc1swXSAtIHRbMF0pIC8gayxcbiAgICAgICAgeSA9IChjb29yZGluYXRlc1sxXSAtIHRbMV0pIC8gaztcbiAgICByZXR1cm4gKHkgPj0gMC4xMjAgJiYgeSA8IDAuMjM0ICYmIHggPj0gLTAuNDI1ICYmIHggPCAtMC4yMTQgPyBhbGFza2FcbiAgICAgICAgOiB5ID49IDAuMTY2ICYmIHkgPCAwLjIzNCAmJiB4ID49IC0wLjIxNCAmJiB4IDwgLTAuMTE1ID8gaGF3YWlpXG4gICAgICAgIDogbG93ZXI0OCkuaW52ZXJ0KGNvb3JkaW5hdGVzKTtcbiAgfTtcblxuICBhbGJlcnNVc2Euc3RyZWFtID0gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgcmV0dXJuIGNhY2hlICYmIGNhY2hlU3RyZWFtID09PSBzdHJlYW0gPyBjYWNoZSA6IGNhY2hlID0gbXVsdGlwbGV4KFtsb3dlcjQ4LnN0cmVhbShjYWNoZVN0cmVhbSA9IHN0cmVhbSksIGFsYXNrYS5zdHJlYW0oc3RyZWFtKSwgaGF3YWlpLnN0cmVhbShzdHJlYW0pXSk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsb3dlcjQ4LnByZWNpc2lvbigpO1xuICAgIGxvd2VyNDgucHJlY2lzaW9uKF8pLCBhbGFza2EucHJlY2lzaW9uKF8pLCBoYXdhaWkucHJlY2lzaW9uKF8pO1xuICAgIHJldHVybiByZXNldCgpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5zY2FsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsb3dlcjQ4LnNjYWxlKCk7XG4gICAgbG93ZXI0OC5zY2FsZShfKSwgYWxhc2thLnNjYWxlKF8gKiAwLjM1KSwgaGF3YWlpLnNjYWxlKF8pO1xuICAgIHJldHVybiBhbGJlcnNVc2EudHJhbnNsYXRlKGxvd2VyNDgudHJhbnNsYXRlKCkpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC50cmFuc2xhdGUoKTtcbiAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSwgeCA9ICtfWzBdLCB5ID0gK19bMV07XG5cbiAgICBsb3dlcjQ4UG9pbnQgPSBsb3dlcjQ4XG4gICAgICAgIC50cmFuc2xhdGUoXylcbiAgICAgICAgLmNsaXBFeHRlbnQoW1t4IC0gMC40NTUgKiBrLCB5IC0gMC4yMzggKiBrXSwgW3ggKyAwLjQ1NSAqIGssIHkgKyAwLjIzOCAqIGtdXSlcbiAgICAgICAgLnN0cmVhbShwb2ludFN0cmVhbSk7XG5cbiAgICBhbGFza2FQb2ludCA9IGFsYXNrYVxuICAgICAgICAudHJhbnNsYXRlKFt4IC0gMC4zMDcgKiBrLCB5ICsgMC4yMDEgKiBrXSlcbiAgICAgICAgLmNsaXBFeHRlbnQoW1t4IC0gMC40MjUgKiBrICsgZXBzaWxvbiwgeSArIDAuMTIwICogayArIGVwc2lsb25dLCBbeCAtIDAuMjE0ICogayAtIGVwc2lsb24sIHkgKyAwLjIzNCAqIGsgLSBlcHNpbG9uXV0pXG4gICAgICAgIC5zdHJlYW0ocG9pbnRTdHJlYW0pO1xuXG4gICAgaGF3YWlpUG9pbnQgPSBoYXdhaWlcbiAgICAgICAgLnRyYW5zbGF0ZShbeCAtIDAuMjA1ICogaywgeSArIDAuMjEyICoga10pXG4gICAgICAgIC5jbGlwRXh0ZW50KFtbeCAtIDAuMjE0ICogayArIGVwc2lsb24sIHkgKyAwLjE2NiAqIGsgKyBlcHNpbG9uXSwgW3ggLSAwLjExNSAqIGsgLSBlcHNpbG9uLCB5ICsgMC4yMzQgKiBrIC0gZXBzaWxvbl1dKVxuICAgICAgICAuc3RyZWFtKHBvaW50U3RyZWFtKTtcblxuICAgIHJldHVybiByZXNldCgpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRFeHRlbnQgPSBmdW5jdGlvbihleHRlbnQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRFeHRlbnQoYWxiZXJzVXNhLCBleHRlbnQsIG9iamVjdCk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLmZpdFNpemUgPSBmdW5jdGlvbihzaXplLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0U2l6ZShhbGJlcnNVc2EsIHNpemUsIG9iamVjdCk7XG4gIH07XG5cbiAgYWxiZXJzVXNhLmZpdFdpZHRoID0gZnVuY3Rpb24od2lkdGgsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRXaWR0aChhbGJlcnNVc2EsIHdpZHRoLCBvYmplY3QpO1xuICB9O1xuXG4gIGFsYmVyc1VzYS5maXRIZWlnaHQgPSBmdW5jdGlvbihoZWlnaHQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRIZWlnaHQoYWxiZXJzVXNhLCBoZWlnaHQsIG9iamVjdCk7XG4gIH07XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgY2FjaGUgPSBjYWNoZVN0cmVhbSA9IG51bGw7XG4gICAgcmV0dXJuIGFsYmVyc1VzYTtcbiAgfVxuXG4gIHJldHVybiBhbGJlcnNVc2Euc2NhbGUoMTA3MCk7XG59XG4iLCJpbXBvcnQge2FzaW4sIGF0YW4yLCBjb3MsIHNpbiwgc3FydH0gZnJvbSBcIi4uL21hdGguanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGF6aW11dGhhbFJhdyhzY2FsZSkge1xuICByZXR1cm4gZnVuY3Rpb24oeCwgeSkge1xuICAgIHZhciBjeCA9IGNvcyh4KSxcbiAgICAgICAgY3kgPSBjb3MoeSksXG4gICAgICAgIGsgPSBzY2FsZShjeCAqIGN5KTtcbiAgICAgICAgaWYgKGsgPT09IEluZmluaXR5KSByZXR1cm4gWzIsIDBdO1xuICAgIHJldHVybiBbXG4gICAgICBrICogY3kgKiBzaW4oeCksXG4gICAgICBrICogc2luKHkpXG4gICAgXTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXppbXV0aGFsSW52ZXJ0KGFuZ2xlKSB7XG4gIHJldHVybiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdmFyIHogPSBzcXJ0KHggKiB4ICsgeSAqIHkpLFxuICAgICAgICBjID0gYW5nbGUoeiksXG4gICAgICAgIHNjID0gc2luKGMpLFxuICAgICAgICBjYyA9IGNvcyhjKTtcbiAgICByZXR1cm4gW1xuICAgICAgYXRhbjIoeCAqIHNjLCB6ICogY2MpLFxuICAgICAgYXNpbih6ICYmIHkgKiBzYyAvIHopXG4gICAgXTtcbiAgfVxufVxuIiwiaW1wb3J0IHthc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHthemltdXRoYWxSYXcsIGF6aW11dGhhbEludmVydH0gZnJvbSBcIi4vYXppbXV0aGFsLmpzXCI7XG5pbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgdmFyIGF6aW11dGhhbEVxdWFsQXJlYVJhdyA9IGF6aW11dGhhbFJhdyhmdW5jdGlvbihjeGN5KSB7XG4gIHJldHVybiBzcXJ0KDIgLyAoMSArIGN4Y3kpKTtcbn0pO1xuXG5hemltdXRoYWxFcXVhbEFyZWFSYXcuaW52ZXJ0ID0gYXppbXV0aGFsSW52ZXJ0KGZ1bmN0aW9uKHopIHtcbiAgcmV0dXJuIDIgKiBhc2luKHogLyAyKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHByb2plY3Rpb24oYXppbXV0aGFsRXF1YWxBcmVhUmF3KVxuICAgICAgLnNjYWxlKDEyNC43NSlcbiAgICAgIC5jbGlwQW5nbGUoMTgwIC0gMWUtMyk7XG59XG4iLCJpbXBvcnQge2Fjb3MsIHNpbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7YXppbXV0aGFsUmF3LCBhemltdXRoYWxJbnZlcnR9IGZyb20gXCIuL2F6aW11dGhhbC5qc1wiO1xuaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IHZhciBhemltdXRoYWxFcXVpZGlzdGFudFJhdyA9IGF6aW11dGhhbFJhdyhmdW5jdGlvbihjKSB7XG4gIHJldHVybiAoYyA9IGFjb3MoYykpICYmIGMgLyBzaW4oYyk7XG59KTtcblxuYXppbXV0aGFsRXF1aWRpc3RhbnRSYXcuaW52ZXJ0ID0gYXppbXV0aGFsSW52ZXJ0KGZ1bmN0aW9uKHopIHtcbiAgcmV0dXJuIHo7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKGF6aW11dGhhbEVxdWlkaXN0YW50UmF3KVxuICAgICAgLnNjYWxlKDc5LjQxODgpXG4gICAgICAuY2xpcEFuZ2xlKDE4MCAtIDFlLTMpO1xufVxuIiwiaW1wb3J0IHtkZWdyZWVzLCBwaSwgcmFkaWFuc30gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7cHJvamVjdGlvbk11dGF0b3J9IGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25pY1Byb2plY3Rpb24ocHJvamVjdEF0KSB7XG4gIHZhciBwaGkwID0gMCxcbiAgICAgIHBoaTEgPSBwaSAvIDMsXG4gICAgICBtID0gcHJvamVjdGlvbk11dGF0b3IocHJvamVjdEF0KSxcbiAgICAgIHAgPSBtKHBoaTAsIHBoaTEpO1xuXG4gIHAucGFyYWxsZWxzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gbShwaGkwID0gX1swXSAqIHJhZGlhbnMsIHBoaTEgPSBfWzFdICogcmFkaWFucykgOiBbcGhpMCAqIGRlZ3JlZXMsIHBoaTEgKiBkZWdyZWVzXTtcbiAgfTtcblxuICByZXR1cm4gcDtcbn1cbiIsImltcG9ydCB7YWJzLCBhdGFuLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBoYWxmUGksIGxvZywgcGksIHBvdywgc2lnbiwgc2luLCBzcXJ0LCB0YW59IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge2NvbmljUHJvamVjdGlvbn0gZnJvbSBcIi4vY29uaWMuanNcIjtcbmltcG9ydCB7bWVyY2F0b3JSYXd9IGZyb20gXCIuL21lcmNhdG9yLmpzXCI7XG5cbmZ1bmN0aW9uIHRhbnkoeSkge1xuICByZXR1cm4gdGFuKChoYWxmUGkgKyB5KSAvIDIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uaWNDb25mb3JtYWxSYXcoeTAsIHkxKSB7XG4gIHZhciBjeTAgPSBjb3MoeTApLFxuICAgICAgbiA9IHkwID09PSB5MSA/IHNpbih5MCkgOiBsb2coY3kwIC8gY29zKHkxKSkgLyBsb2codGFueSh5MSkgLyB0YW55KHkwKSksXG4gICAgICBmID0gY3kwICogcG93KHRhbnkoeTApLCBuKSAvIG47XG5cbiAgaWYgKCFuKSByZXR1cm4gbWVyY2F0b3JSYXc7XG5cbiAgZnVuY3Rpb24gcHJvamVjdCh4LCB5KSB7XG4gICAgaWYgKGYgPiAwKSB7IGlmICh5IDwgLWhhbGZQaSArIGVwc2lsb24pIHkgPSAtaGFsZlBpICsgZXBzaWxvbjsgfVxuICAgIGVsc2UgeyBpZiAoeSA+IGhhbGZQaSAtIGVwc2lsb24pIHkgPSBoYWxmUGkgLSBlcHNpbG9uOyB9XG4gICAgdmFyIHIgPSBmIC8gcG93KHRhbnkoeSksIG4pO1xuICAgIHJldHVybiBbciAqIHNpbihuICogeCksIGYgLSByICogY29zKG4gKiB4KV07XG4gIH1cblxuICBwcm9qZWN0LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgZnkgPSBmIC0geSwgciA9IHNpZ24obikgKiBzcXJ0KHggKiB4ICsgZnkgKiBmeSksXG4gICAgICBsID0gYXRhbjIoeCwgYWJzKGZ5KSkgKiBzaWduKGZ5KTtcbiAgICBpZiAoZnkgKiBuIDwgMClcbiAgICAgIGwgLT0gcGkgKiBzaWduKHgpICogc2lnbihmeSk7XG4gICAgcmV0dXJuIFtsIC8gbiwgMiAqIGF0YW4ocG93KGYgLyByLCAxIC8gbikpIC0gaGFsZlBpXTtcbiAgfTtcblxuICByZXR1cm4gcHJvamVjdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjb25pY1Byb2plY3Rpb24oY29uaWNDb25mb3JtYWxSYXcpXG4gICAgICAuc2NhbGUoMTA5LjUpXG4gICAgICAucGFyYWxsZWxzKFszMCwgMzBdKTtcbn1cbiIsImltcG9ydCB7YWJzLCBhc2luLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBwaSwgc2lnbiwgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHtjb25pY1Byb2plY3Rpb259IGZyb20gXCIuL2NvbmljLmpzXCI7XG5pbXBvcnQge2N5bGluZHJpY2FsRXF1YWxBcmVhUmF3fSBmcm9tIFwiLi9jeWxpbmRyaWNhbEVxdWFsQXJlYS5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uaWNFcXVhbEFyZWFSYXcoeTAsIHkxKSB7XG4gIHZhciBzeTAgPSBzaW4oeTApLCBuID0gKHN5MCArIHNpbih5MSkpIC8gMjtcblxuICAvLyBBcmUgdGhlIHBhcmFsbGVscyBzeW1tZXRyaWNhbCBhcm91bmQgdGhlIEVxdWF0b3I/XG4gIGlmIChhYnMobikgPCBlcHNpbG9uKSByZXR1cm4gY3lsaW5kcmljYWxFcXVhbEFyZWFSYXcoeTApO1xuXG4gIHZhciBjID0gMSArIHN5MCAqICgyICogbiAtIHN5MCksIHIwID0gc3FydChjKSAvIG47XG5cbiAgZnVuY3Rpb24gcHJvamVjdCh4LCB5KSB7XG4gICAgdmFyIHIgPSBzcXJ0KGMgLSAyICogbiAqIHNpbih5KSkgLyBuO1xuICAgIHJldHVybiBbciAqIHNpbih4ICo9IG4pLCByMCAtIHIgKiBjb3MoeCldO1xuICB9XG5cbiAgcHJvamVjdC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgdmFyIHIweSA9IHIwIC0geSxcbiAgICAgICAgbCA9IGF0YW4yKHgsIGFicyhyMHkpKSAqIHNpZ24ocjB5KTtcbiAgICBpZiAocjB5ICogbiA8IDApXG4gICAgICBsIC09IHBpICogc2lnbih4KSAqIHNpZ24ocjB5KTtcbiAgICByZXR1cm4gW2wgLyBuLCBhc2luKChjIC0gKHggKiB4ICsgcjB5ICogcjB5KSAqIG4gKiBuKSAvICgyICogbikpXTtcbiAgfTtcblxuICByZXR1cm4gcHJvamVjdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjb25pY1Byb2plY3Rpb24oY29uaWNFcXVhbEFyZWFSYXcpXG4gICAgICAuc2NhbGUoMTU1LjQyNClcbiAgICAgIC5jZW50ZXIoWzAsIDMzLjY0NDJdKTtcbn1cbiIsImltcG9ydCB7YWJzLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBwaSwgc2lnbiwgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHtjb25pY1Byb2plY3Rpb259IGZyb20gXCIuL2NvbmljLmpzXCI7XG5pbXBvcnQge2VxdWlyZWN0YW5ndWxhclJhd30gZnJvbSBcIi4vZXF1aXJlY3Rhbmd1bGFyLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb25pY0VxdWlkaXN0YW50UmF3KHkwLCB5MSkge1xuICB2YXIgY3kwID0gY29zKHkwKSxcbiAgICAgIG4gPSB5MCA9PT0geTEgPyBzaW4oeTApIDogKGN5MCAtIGNvcyh5MSkpIC8gKHkxIC0geTApLFxuICAgICAgZyA9IGN5MCAvIG4gKyB5MDtcblxuICBpZiAoYWJzKG4pIDwgZXBzaWxvbikgcmV0dXJuIGVxdWlyZWN0YW5ndWxhclJhdztcblxuICBmdW5jdGlvbiBwcm9qZWN0KHgsIHkpIHtcbiAgICB2YXIgZ3kgPSBnIC0geSwgbnggPSBuICogeDtcbiAgICByZXR1cm4gW2d5ICogc2luKG54KSwgZyAtIGd5ICogY29zKG54KV07XG4gIH1cblxuICBwcm9qZWN0LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgZ3kgPSBnIC0geSxcbiAgICAgICAgbCA9IGF0YW4yKHgsIGFicyhneSkpICogc2lnbihneSk7XG4gICAgaWYgKGd5ICogbiA8IDApXG4gICAgICBsIC09IHBpICogc2lnbih4KSAqIHNpZ24oZ3kpO1xuICAgIHJldHVybiBbbCAvIG4sIGcgLSBzaWduKG4pICogc3FydCh4ICogeCArIGd5ICogZ3kpXTtcbiAgfTtcblxuICByZXR1cm4gcHJvamVjdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjb25pY1Byb2plY3Rpb24oY29uaWNFcXVpZGlzdGFudFJhdylcbiAgICAgIC5zY2FsZSgxMzEuMTU0KVxuICAgICAgLmNlbnRlcihbMCwgMTMuOTM4OV0pO1xufVxuIiwiaW1wb3J0IHthc2luLCBjb3MsIHNpbn0gZnJvbSBcIi4uL21hdGguanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGN5bGluZHJpY2FsRXF1YWxBcmVhUmF3KHBoaTApIHtcbiAgdmFyIGNvc1BoaTAgPSBjb3MocGhpMCk7XG5cbiAgZnVuY3Rpb24gZm9yd2FyZChsYW1iZGEsIHBoaSkge1xuICAgIHJldHVybiBbbGFtYmRhICogY29zUGhpMCwgc2luKHBoaSkgLyBjb3NQaGkwXTtcbiAgfVxuXG4gIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHJldHVybiBbeCAvIGNvc1BoaTAsIGFzaW4oeSAqIGNvc1BoaTApXTtcbiAgfTtcblxuICByZXR1cm4gZm9yd2FyZDtcbn1cbiIsImltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQge2FicywgYXNpbiwgY29zLCBlcHNpbG9uMiwgc2luLCBzcXJ0fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuXG52YXIgQTEgPSAxLjM0MDI2NCxcbiAgICBBMiA9IC0wLjA4MTEwNixcbiAgICBBMyA9IDAuMDAwODkzLFxuICAgIEE0ID0gMC4wMDM3OTYsXG4gICAgTSA9IHNxcnQoMykgLyAyLFxuICAgIGl0ZXJhdGlvbnMgPSAxMjtcblxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFsRWFydGhSYXcobGFtYmRhLCBwaGkpIHtcbiAgdmFyIGwgPSBhc2luKE0gKiBzaW4ocGhpKSksIGwyID0gbCAqIGwsIGw2ID0gbDIgKiBsMiAqIGwyO1xuICByZXR1cm4gW1xuICAgIGxhbWJkYSAqIGNvcyhsKSAvIChNICogKEExICsgMyAqIEEyICogbDIgKyBsNiAqICg3ICogQTMgKyA5ICogQTQgKiBsMikpKSxcbiAgICBsICogKEExICsgQTIgKiBsMiArIGw2ICogKEEzICsgQTQgKiBsMikpXG4gIF07XG59XG5cbmVxdWFsRWFydGhSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICB2YXIgbCA9IHksIGwyID0gbCAqIGwsIGw2ID0gbDIgKiBsMiAqIGwyO1xuICBmb3IgKHZhciBpID0gMCwgZGVsdGEsIGZ5LCBmcHk7IGkgPCBpdGVyYXRpb25zOyArK2kpIHtcbiAgICBmeSA9IGwgKiAoQTEgKyBBMiAqIGwyICsgbDYgKiAoQTMgKyBBNCAqIGwyKSkgLSB5O1xuICAgIGZweSA9IEExICsgMyAqIEEyICogbDIgKyBsNiAqICg3ICogQTMgKyA5ICogQTQgKiBsMik7XG4gICAgbCAtPSBkZWx0YSA9IGZ5IC8gZnB5LCBsMiA9IGwgKiBsLCBsNiA9IGwyICogbDIgKiBsMjtcbiAgICBpZiAoYWJzKGRlbHRhKSA8IGVwc2lsb24yKSBicmVhaztcbiAgfVxuICByZXR1cm4gW1xuICAgIE0gKiB4ICogKEExICsgMyAqIEEyICogbDIgKyBsNiAqICg3ICogQTMgKyA5ICogQTQgKiBsMikpIC8gY29zKGwpLFxuICAgIGFzaW4oc2luKGwpIC8gTSlcbiAgXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihlcXVhbEVhcnRoUmF3KVxuICAgICAgLnNjYWxlKDE3Ny4xNTgpO1xufVxuIiwiaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGVxdWlyZWN0YW5ndWxhclJhdyhsYW1iZGEsIHBoaSkge1xuICByZXR1cm4gW2xhbWJkYSwgcGhpXTtcbn1cblxuZXF1aXJlY3Rhbmd1bGFyUmF3LmludmVydCA9IGVxdWlyZWN0YW5ndWxhclJhdztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKGVxdWlyZWN0YW5ndWxhclJhdylcbiAgICAgIC5zY2FsZSgxNTIuNjMpO1xufVxuIiwiaW1wb3J0IHtkZWZhdWx0IGFzIGdlb1N0cmVhbX0gZnJvbSBcIi4uL3N0cmVhbS5qc1wiO1xuaW1wb3J0IGJvdW5kc1N0cmVhbSBmcm9tIFwiLi4vcGF0aC9ib3VuZHMuanNcIjtcblxuZnVuY3Rpb24gZml0KHByb2plY3Rpb24sIGZpdEJvdW5kcywgb2JqZWN0KSB7XG4gIHZhciBjbGlwID0gcHJvamVjdGlvbi5jbGlwRXh0ZW50ICYmIHByb2plY3Rpb24uY2xpcEV4dGVudCgpO1xuICBwcm9qZWN0aW9uLnNjYWxlKDE1MCkudHJhbnNsYXRlKFswLCAwXSk7XG4gIGlmIChjbGlwICE9IG51bGwpIHByb2plY3Rpb24uY2xpcEV4dGVudChudWxsKTtcbiAgZ2VvU3RyZWFtKG9iamVjdCwgcHJvamVjdGlvbi5zdHJlYW0oYm91bmRzU3RyZWFtKSk7XG4gIGZpdEJvdW5kcyhib3VuZHNTdHJlYW0ucmVzdWx0KCkpO1xuICBpZiAoY2xpcCAhPSBudWxsKSBwcm9qZWN0aW9uLmNsaXBFeHRlbnQoY2xpcCk7XG4gIHJldHVybiBwcm9qZWN0aW9uO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZml0RXh0ZW50KHByb2plY3Rpb24sIGV4dGVudCwgb2JqZWN0KSB7XG4gIHJldHVybiBmaXQocHJvamVjdGlvbiwgZnVuY3Rpb24oYikge1xuICAgIHZhciB3ID0gZXh0ZW50WzFdWzBdIC0gZXh0ZW50WzBdWzBdLFxuICAgICAgICBoID0gZXh0ZW50WzFdWzFdIC0gZXh0ZW50WzBdWzFdLFxuICAgICAgICBrID0gTWF0aC5taW4odyAvIChiWzFdWzBdIC0gYlswXVswXSksIGggLyAoYlsxXVsxXSAtIGJbMF1bMV0pKSxcbiAgICAgICAgeCA9ICtleHRlbnRbMF1bMF0gKyAodyAtIGsgKiAoYlsxXVswXSArIGJbMF1bMF0pKSAvIDIsXG4gICAgICAgIHkgPSArZXh0ZW50WzBdWzFdICsgKGggLSBrICogKGJbMV1bMV0gKyBiWzBdWzFdKSkgLyAyO1xuICAgIHByb2plY3Rpb24uc2NhbGUoMTUwICogaykudHJhbnNsYXRlKFt4LCB5XSk7XG4gIH0sIG9iamVjdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaXRTaXplKHByb2plY3Rpb24sIHNpemUsIG9iamVjdCkge1xuICByZXR1cm4gZml0RXh0ZW50KHByb2plY3Rpb24sIFtbMCwgMF0sIHNpemVdLCBvYmplY3QpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZml0V2lkdGgocHJvamVjdGlvbiwgd2lkdGgsIG9iamVjdCkge1xuICByZXR1cm4gZml0KHByb2plY3Rpb24sIGZ1bmN0aW9uKGIpIHtcbiAgICB2YXIgdyA9ICt3aWR0aCxcbiAgICAgICAgayA9IHcgLyAoYlsxXVswXSAtIGJbMF1bMF0pLFxuICAgICAgICB4ID0gKHcgLSBrICogKGJbMV1bMF0gKyBiWzBdWzBdKSkgLyAyLFxuICAgICAgICB5ID0gLWsgKiBiWzBdWzFdO1xuICAgIHByb2plY3Rpb24uc2NhbGUoMTUwICogaykudHJhbnNsYXRlKFt4LCB5XSk7XG4gIH0sIG9iamVjdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmaXRIZWlnaHQocHJvamVjdGlvbiwgaGVpZ2h0LCBvYmplY3QpIHtcbiAgcmV0dXJuIGZpdChwcm9qZWN0aW9uLCBmdW5jdGlvbihiKSB7XG4gICAgdmFyIGggPSAraGVpZ2h0LFxuICAgICAgICBrID0gaCAvIChiWzFdWzFdIC0gYlswXVsxXSksXG4gICAgICAgIHggPSAtayAqIGJbMF1bMF0sXG4gICAgICAgIHkgPSAoaCAtIGsgKiAoYlsxXVsxXSArIGJbMF1bMV0pKSAvIDI7XG4gICAgcHJvamVjdGlvbi5zY2FsZSgxNTAgKiBrKS50cmFuc2xhdGUoW3gsIHldKTtcbiAgfSwgb2JqZWN0KTtcbn1cbiIsImltcG9ydCB7YXRhbiwgY29zLCBzaW59IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge2F6aW11dGhhbEludmVydH0gZnJvbSBcIi4vYXppbXV0aGFsLmpzXCI7XG5pbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZ25vbW9uaWNSYXcoeCwgeSkge1xuICB2YXIgY3kgPSBjb3MoeSksIGsgPSBjb3MoeCkgKiBjeTtcbiAgcmV0dXJuIFtjeSAqIHNpbih4KSAvIGssIHNpbih5KSAvIGtdO1xufVxuXG5nbm9tb25pY1Jhdy5pbnZlcnQgPSBhemltdXRoYWxJbnZlcnQoYXRhbik7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihnbm9tb25pY1JhdylcbiAgICAgIC5zY2FsZSgxNDQuMDQ5KVxuICAgICAgLmNsaXBBbmdsZSg2MCk7XG59XG4iLCJpbXBvcnQgY2xpcFJlY3RhbmdsZSBmcm9tIFwiLi4vY2xpcC9yZWN0YW5nbGUuanNcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi4vaWRlbnRpdHkuanNcIjtcbmltcG9ydCB7dHJhbnNmb3JtZXJ9IGZyb20gXCIuLi90cmFuc2Zvcm0uanNcIjtcbmltcG9ydCB7Zml0RXh0ZW50LCBmaXRTaXplLCBmaXRXaWR0aCwgZml0SGVpZ2h0fSBmcm9tIFwiLi9maXQuanNcIjtcbmltcG9ydCB7Y29zLCBkZWdyZWVzLCByYWRpYW5zLCBzaW59IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgayA9IDEsIHR4ID0gMCwgdHkgPSAwLCBzeCA9IDEsIHN5ID0gMSwgLy8gc2NhbGUsIHRyYW5zbGF0ZSBhbmQgcmVmbGVjdFxuICAgICAgYWxwaGEgPSAwLCBjYSwgc2EsIC8vIGFuZ2xlXG4gICAgICB4MCA9IG51bGwsIHkwLCB4MSwgeTEsIC8vIGNsaXAgZXh0ZW50XG4gICAgICBreCA9IDEsIGt5ID0gMSxcbiAgICAgIHRyYW5zZm9ybSA9IHRyYW5zZm9ybWVyKHtcbiAgICAgICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgICB2YXIgcCA9IHByb2plY3Rpb24oW3gsIHldKVxuICAgICAgICAgIHRoaXMuc3RyZWFtLnBvaW50KHBbMF0sIHBbMV0pO1xuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIHBvc3RjbGlwID0gaWRlbnRpdHksXG4gICAgICBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtO1xuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIGt4ID0gayAqIHN4O1xuICAgIGt5ID0gayAqIHN5O1xuICAgIGNhY2hlID0gY2FjaGVTdHJlYW0gPSBudWxsO1xuICAgIHJldHVybiBwcm9qZWN0aW9uO1xuICB9XG5cbiAgZnVuY3Rpb24gcHJvamVjdGlvbiAocCkge1xuICAgIHZhciB4ID0gcFswXSAqIGt4LCB5ID0gcFsxXSAqIGt5O1xuICAgIGlmIChhbHBoYSkge1xuICAgICAgdmFyIHQgPSB5ICogY2EgLSB4ICogc2E7XG4gICAgICB4ID0geCAqIGNhICsgeSAqIHNhO1xuICAgICAgeSA9IHQ7XG4gICAgfSAgICBcbiAgICByZXR1cm4gW3ggKyB0eCwgeSArIHR5XTtcbiAgfVxuICBwcm9qZWN0aW9uLmludmVydCA9IGZ1bmN0aW9uKHApIHtcbiAgICB2YXIgeCA9IHBbMF0gLSB0eCwgeSA9IHBbMV0gLSB0eTtcbiAgICBpZiAoYWxwaGEpIHtcbiAgICAgIHZhciB0ID0geSAqIGNhICsgeCAqIHNhO1xuICAgICAgeCA9IHggKiBjYSAtIHkgKiBzYTtcbiAgICAgIHkgPSB0O1xuICAgIH1cbiAgICByZXR1cm4gW3ggLyBreCwgeSAvIGt5XTtcbiAgfTtcbiAgcHJvamVjdGlvbi5zdHJlYW0gPSBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICByZXR1cm4gY2FjaGUgJiYgY2FjaGVTdHJlYW0gPT09IHN0cmVhbSA/IGNhY2hlIDogY2FjaGUgPSB0cmFuc2Zvcm0ocG9zdGNsaXAoY2FjaGVTdHJlYW0gPSBzdHJlYW0pKTtcbiAgfTtcbiAgcHJvamVjdGlvbi5wb3N0Y2xpcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8sIHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgcmVzZXQoKSkgOiBwb3N0Y2xpcDtcbiAgfTtcbiAgcHJvamVjdGlvbi5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBvc3RjbGlwID0gXyA9PSBudWxsID8gKHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgaWRlbnRpdHkpIDogY2xpcFJlY3RhbmdsZSh4MCA9ICtfWzBdWzBdLCB5MCA9ICtfWzBdWzFdLCB4MSA9ICtfWzFdWzBdLCB5MSA9ICtfWzFdWzFdKSwgcmVzZXQoKSkgOiB4MCA9PSBudWxsID8gbnVsbCA6IFtbeDAsIHkwXSwgW3gxLCB5MV1dO1xuICB9O1xuICBwcm9qZWN0aW9uLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGsgPSArXywgcmVzZXQoKSkgOiBrO1xuICB9O1xuICBwcm9qZWN0aW9uLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0eCA9ICtfWzBdLCB0eSA9ICtfWzFdLCByZXNldCgpKSA6IFt0eCwgdHldO1xuICB9XG4gIHByb2plY3Rpb24uYW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYWxwaGEgPSBfICUgMzYwICogcmFkaWFucywgc2EgPSBzaW4oYWxwaGEpLCBjYSA9IGNvcyhhbHBoYSksIHJlc2V0KCkpIDogYWxwaGEgKiBkZWdyZWVzO1xuICB9O1xuICBwcm9qZWN0aW9uLnJlZmxlY3RYID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN4ID0gXyA/IC0xIDogMSwgcmVzZXQoKSkgOiBzeCA8IDA7XG4gIH07XG4gIHByb2plY3Rpb24ucmVmbGVjdFkgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc3kgPSBfID8gLTEgOiAxLCByZXNldCgpKSA6IHN5IDwgMDtcbiAgfTtcbiAgcHJvamVjdGlvbi5maXRFeHRlbnQgPSBmdW5jdGlvbihleHRlbnQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbiwgZXh0ZW50LCBvYmplY3QpO1xuICB9O1xuICBwcm9qZWN0aW9uLmZpdFNpemUgPSBmdW5jdGlvbihzaXplLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0U2l6ZShwcm9qZWN0aW9uLCBzaXplLCBvYmplY3QpO1xuICB9O1xuICBwcm9qZWN0aW9uLmZpdFdpZHRoID0gZnVuY3Rpb24od2lkdGgsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRXaWR0aChwcm9qZWN0aW9uLCB3aWR0aCwgb2JqZWN0KTtcbiAgfTtcbiAgcHJvamVjdGlvbi5maXRIZWlnaHQgPSBmdW5jdGlvbihoZWlnaHQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRIZWlnaHQocHJvamVjdGlvbiwgaGVpZ2h0LCBvYmplY3QpO1xuICB9O1xuXG4gIHJldHVybiBwcm9qZWN0aW9uO1xufVxuIiwiaW1wb3J0IGNsaXBBbnRpbWVyaWRpYW4gZnJvbSBcIi4uL2NsaXAvYW50aW1lcmlkaWFuLmpzXCI7XG5pbXBvcnQgY2xpcENpcmNsZSBmcm9tIFwiLi4vY2xpcC9jaXJjbGUuanNcIjtcbmltcG9ydCBjbGlwUmVjdGFuZ2xlIGZyb20gXCIuLi9jbGlwL3JlY3RhbmdsZS5qc1wiO1xuaW1wb3J0IGNvbXBvc2UgZnJvbSBcIi4uL2NvbXBvc2UuanNcIjtcbmltcG9ydCBpZGVudGl0eSBmcm9tIFwiLi4vaWRlbnRpdHkuanNcIjtcbmltcG9ydCB7Y29zLCBkZWdyZWVzLCByYWRpYW5zLCBzaW4sIHNxcnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge3JvdGF0ZVJhZGlhbnN9IGZyb20gXCIuLi9yb3RhdGlvbi5qc1wiO1xuaW1wb3J0IHt0cmFuc2Zvcm1lcn0gZnJvbSBcIi4uL3RyYW5zZm9ybS5qc1wiO1xuaW1wb3J0IHtmaXRFeHRlbnQsIGZpdFNpemUsIGZpdFdpZHRoLCBmaXRIZWlnaHR9IGZyb20gXCIuL2ZpdC5qc1wiO1xuaW1wb3J0IHJlc2FtcGxlIGZyb20gXCIuL3Jlc2FtcGxlLmpzXCI7XG5cbnZhciB0cmFuc2Zvcm1SYWRpYW5zID0gdHJhbnNmb3JtZXIoe1xuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHRoaXMuc3RyZWFtLnBvaW50KHggKiByYWRpYW5zLCB5ICogcmFkaWFucyk7XG4gIH1cbn0pO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1Sb3RhdGUocm90YXRlKSB7XG4gIHJldHVybiB0cmFuc2Zvcm1lcih7XG4gICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHZhciByID0gcm90YXRlKHgsIHkpO1xuICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtLnBvaW50KHJbMF0sIHJbMV0pO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNjYWxlVHJhbnNsYXRlKGssIGR4LCBkeSwgc3gsIHN5KSB7XG4gIGZ1bmN0aW9uIHRyYW5zZm9ybSh4LCB5KSB7XG4gICAgeCAqPSBzeDsgeSAqPSBzeTtcbiAgICByZXR1cm4gW2R4ICsgayAqIHgsIGR5IC0gayAqIHldO1xuICB9XG4gIHRyYW5zZm9ybS5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFsoeCAtIGR4KSAvIGsgKiBzeCwgKGR5IC0geSkgLyBrICogc3ldO1xuICB9O1xuICByZXR1cm4gdHJhbnNmb3JtO1xufVxuXG5mdW5jdGlvbiBzY2FsZVRyYW5zbGF0ZVJvdGF0ZShrLCBkeCwgZHksIHN4LCBzeSwgYWxwaGEpIHtcbiAgaWYgKCFhbHBoYSkgcmV0dXJuIHNjYWxlVHJhbnNsYXRlKGssIGR4LCBkeSwgc3gsIHN5KTtcbiAgdmFyIGNvc0FscGhhID0gY29zKGFscGhhKSxcbiAgICAgIHNpbkFscGhhID0gc2luKGFscGhhKSxcbiAgICAgIGEgPSBjb3NBbHBoYSAqIGssXG4gICAgICBiID0gc2luQWxwaGEgKiBrLFxuICAgICAgYWkgPSBjb3NBbHBoYSAvIGssXG4gICAgICBiaSA9IHNpbkFscGhhIC8gayxcbiAgICAgIGNpID0gKHNpbkFscGhhICogZHkgLSBjb3NBbHBoYSAqIGR4KSAvIGssXG4gICAgICBmaSA9IChzaW5BbHBoYSAqIGR4ICsgY29zQWxwaGEgKiBkeSkgLyBrO1xuICBmdW5jdGlvbiB0cmFuc2Zvcm0oeCwgeSkge1xuICAgIHggKj0gc3g7IHkgKj0gc3k7XG4gICAgcmV0dXJuIFthICogeCAtIGIgKiB5ICsgZHgsIGR5IC0gYiAqIHggLSBhICogeV07XG4gIH1cbiAgdHJhbnNmb3JtLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4gW3N4ICogKGFpICogeCAtIGJpICogeSArIGNpKSwgc3kgKiAoZmkgLSBiaSAqIHggLSBhaSAqIHkpXTtcbiAgfTtcbiAgcmV0dXJuIHRyYW5zZm9ybTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvamVjdGlvbihwcm9qZWN0KSB7XG4gIHJldHVybiBwcm9qZWN0aW9uTXV0YXRvcihmdW5jdGlvbigpIHsgcmV0dXJuIHByb2plY3Q7IH0pKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpIHtcbiAgdmFyIHByb2plY3QsXG4gICAgICBrID0gMTUwLCAvLyBzY2FsZVxuICAgICAgeCA9IDQ4MCwgeSA9IDI1MCwgLy8gdHJhbnNsYXRlXG4gICAgICBsYW1iZGEgPSAwLCBwaGkgPSAwLCAvLyBjZW50ZXJcbiAgICAgIGRlbHRhTGFtYmRhID0gMCwgZGVsdGFQaGkgPSAwLCBkZWx0YUdhbW1hID0gMCwgcm90YXRlLCAvLyBwcmUtcm90YXRlXG4gICAgICBhbHBoYSA9IDAsIC8vIHBvc3Qtcm90YXRlIGFuZ2xlXG4gICAgICBzeCA9IDEsIC8vIHJlZmxlY3RYXG4gICAgICBzeSA9IDEsIC8vIHJlZmxlY3RYXG4gICAgICB0aGV0YSA9IG51bGwsIHByZWNsaXAgPSBjbGlwQW50aW1lcmlkaWFuLCAvLyBwcmUtY2xpcCBhbmdsZVxuICAgICAgeDAgPSBudWxsLCB5MCwgeDEsIHkxLCBwb3N0Y2xpcCA9IGlkZW50aXR5LCAvLyBwb3N0LWNsaXAgZXh0ZW50XG4gICAgICBkZWx0YTIgPSAwLjUsIC8vIHByZWNpc2lvblxuICAgICAgcHJvamVjdFJlc2FtcGxlLFxuICAgICAgcHJvamVjdFRyYW5zZm9ybSxcbiAgICAgIHByb2plY3RSb3RhdGVUcmFuc2Zvcm0sXG4gICAgICBjYWNoZSxcbiAgICAgIGNhY2hlU3RyZWFtO1xuXG4gIGZ1bmN0aW9uIHByb2plY3Rpb24ocG9pbnQpIHtcbiAgICByZXR1cm4gcHJvamVjdFJvdGF0ZVRyYW5zZm9ybShwb2ludFswXSAqIHJhZGlhbnMsIHBvaW50WzFdICogcmFkaWFucyk7XG4gIH1cblxuICBmdW5jdGlvbiBpbnZlcnQocG9pbnQpIHtcbiAgICBwb2ludCA9IHByb2plY3RSb3RhdGVUcmFuc2Zvcm0uaW52ZXJ0KHBvaW50WzBdLCBwb2ludFsxXSk7XG4gICAgcmV0dXJuIHBvaW50ICYmIFtwb2ludFswXSAqIGRlZ3JlZXMsIHBvaW50WzFdICogZGVncmVlc107XG4gIH1cblxuICBwcm9qZWN0aW9uLnN0cmVhbSA9IGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHJldHVybiBjYWNoZSAmJiBjYWNoZVN0cmVhbSA9PT0gc3RyZWFtID8gY2FjaGUgOiBjYWNoZSA9IHRyYW5zZm9ybVJhZGlhbnModHJhbnNmb3JtUm90YXRlKHJvdGF0ZSkocHJlY2xpcChwcm9qZWN0UmVzYW1wbGUocG9zdGNsaXAoY2FjaGVTdHJlYW0gPSBzdHJlYW0pKSkpKTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLnByZWNsaXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocHJlY2xpcCA9IF8sIHRoZXRhID0gdW5kZWZpbmVkLCByZXNldCgpKSA6IHByZWNsaXA7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5wb3N0Y2xpcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8sIHgwID0geTAgPSB4MSA9IHkxID0gbnVsbCwgcmVzZXQoKSkgOiBwb3N0Y2xpcDtcbiAgfTtcblxuICBwcm9qZWN0aW9uLmNsaXBBbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwcmVjbGlwID0gK18gPyBjbGlwQ2lyY2xlKHRoZXRhID0gXyAqIHJhZGlhbnMpIDogKHRoZXRhID0gbnVsbCwgY2xpcEFudGltZXJpZGlhbiksIHJlc2V0KCkpIDogdGhldGEgKiBkZWdyZWVzO1xuICB9O1xuXG4gIHByb2plY3Rpb24uY2xpcEV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwb3N0Y2xpcCA9IF8gPT0gbnVsbCA/ICh4MCA9IHkwID0geDEgPSB5MSA9IG51bGwsIGlkZW50aXR5KSA6IGNsaXBSZWN0YW5nbGUoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSksIHJlc2V0KCkpIDogeDAgPT0gbnVsbCA/IG51bGwgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGsgPSArXywgcmVjZW50ZXIoKSkgOiBrO1xuICB9O1xuXG4gIHByb2plY3Rpb24udHJhbnNsYXRlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSArX1swXSwgeSA9ICtfWzFdLCByZWNlbnRlcigpKSA6IFt4LCB5XTtcbiAgfTtcblxuICBwcm9qZWN0aW9uLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChsYW1iZGEgPSBfWzBdICUgMzYwICogcmFkaWFucywgcGhpID0gX1sxXSAlIDM2MCAqIHJhZGlhbnMsIHJlY2VudGVyKCkpIDogW2xhbWJkYSAqIGRlZ3JlZXMsIHBoaSAqIGRlZ3JlZXNdO1xuICB9O1xuXG4gIHByb2plY3Rpb24ucm90YXRlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRlbHRhTGFtYmRhID0gX1swXSAlIDM2MCAqIHJhZGlhbnMsIGRlbHRhUGhpID0gX1sxXSAlIDM2MCAqIHJhZGlhbnMsIGRlbHRhR2FtbWEgPSBfLmxlbmd0aCA+IDIgPyBfWzJdICUgMzYwICogcmFkaWFucyA6IDAsIHJlY2VudGVyKCkpIDogW2RlbHRhTGFtYmRhICogZGVncmVlcywgZGVsdGFQaGkgKiBkZWdyZWVzLCBkZWx0YUdhbW1hICogZGVncmVlc107XG4gIH07XG5cbiAgcHJvamVjdGlvbi5hbmdsZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbHBoYSA9IF8gJSAzNjAgKiByYWRpYW5zLCByZWNlbnRlcigpKSA6IGFscGhhICogZGVncmVlcztcbiAgfTtcblxuICBwcm9qZWN0aW9uLnJlZmxlY3RYID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN4ID0gXyA/IC0xIDogMSwgcmVjZW50ZXIoKSkgOiBzeCA8IDA7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5yZWZsZWN0WSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzeSA9IF8gPyAtMSA6IDEsIHJlY2VudGVyKCkpIDogc3kgPCAwO1xuICB9O1xuXG4gIHByb2plY3Rpb24ucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHByb2plY3RSZXNhbXBsZSA9IHJlc2FtcGxlKHByb2plY3RUcmFuc2Zvcm0sIGRlbHRhMiA9IF8gKiBfKSwgcmVzZXQoKSkgOiBzcXJ0KGRlbHRhMik7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRFeHRlbnQgPSBmdW5jdGlvbihleHRlbnQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRFeHRlbnQocHJvamVjdGlvbiwgZXh0ZW50LCBvYmplY3QpO1xuICB9O1xuXG4gIHByb2plY3Rpb24uZml0U2l6ZSA9IGZ1bmN0aW9uKHNpemUsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRTaXplKHByb2plY3Rpb24sIHNpemUsIG9iamVjdCk7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRXaWR0aCA9IGZ1bmN0aW9uKHdpZHRoLCBvYmplY3QpIHtcbiAgICByZXR1cm4gZml0V2lkdGgocHJvamVjdGlvbiwgd2lkdGgsIG9iamVjdCk7XG4gIH07XG5cbiAgcHJvamVjdGlvbi5maXRIZWlnaHQgPSBmdW5jdGlvbihoZWlnaHQsIG9iamVjdCkge1xuICAgIHJldHVybiBmaXRIZWlnaHQocHJvamVjdGlvbiwgaGVpZ2h0LCBvYmplY3QpO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHJlY2VudGVyKCkge1xuICAgIHZhciBjZW50ZXIgPSBzY2FsZVRyYW5zbGF0ZVJvdGF0ZShrLCAwLCAwLCBzeCwgc3ksIGFscGhhKS5hcHBseShudWxsLCBwcm9qZWN0KGxhbWJkYSwgcGhpKSksXG4gICAgICAgIHRyYW5zZm9ybSA9IHNjYWxlVHJhbnNsYXRlUm90YXRlKGssIHggLSBjZW50ZXJbMF0sIHkgLSBjZW50ZXJbMV0sIHN4LCBzeSwgYWxwaGEpO1xuICAgIHJvdGF0ZSA9IHJvdGF0ZVJhZGlhbnMoZGVsdGFMYW1iZGEsIGRlbHRhUGhpLCBkZWx0YUdhbW1hKTtcbiAgICBwcm9qZWN0VHJhbnNmb3JtID0gY29tcG9zZShwcm9qZWN0LCB0cmFuc2Zvcm0pO1xuICAgIHByb2plY3RSb3RhdGVUcmFuc2Zvcm0gPSBjb21wb3NlKHJvdGF0ZSwgcHJvamVjdFRyYW5zZm9ybSk7XG4gICAgcHJvamVjdFJlc2FtcGxlID0gcmVzYW1wbGUocHJvamVjdFRyYW5zZm9ybSwgZGVsdGEyKTtcbiAgICByZXR1cm4gcmVzZXQoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIGNhY2hlID0gY2FjaGVTdHJlYW0gPSBudWxsO1xuICAgIHJldHVybiBwcm9qZWN0aW9uO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHByb2plY3QgPSBwcm9qZWN0QXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBwcm9qZWN0aW9uLmludmVydCA9IHByb2plY3QuaW52ZXJ0ICYmIGludmVydDtcbiAgICByZXR1cm4gcmVjZW50ZXIoKTtcbiAgfTtcbn1cbiIsImltcG9ydCB7YXRhbiwgZXhwLCBoYWxmUGksIGxvZywgcGksIHRhbiwgdGF1fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHJvdGF0aW9uIGZyb20gXCIuLi9yb3RhdGlvbi5qc1wiO1xuaW1wb3J0IHByb2plY3Rpb24gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmNhdG9yUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHJldHVybiBbbGFtYmRhLCBsb2codGFuKChoYWxmUGkgKyBwaGkpIC8gMikpXTtcbn1cblxubWVyY2F0b3JSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICByZXR1cm4gW3gsIDIgKiBhdGFuKGV4cCh5KSkgLSBoYWxmUGldO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBtZXJjYXRvclByb2plY3Rpb24obWVyY2F0b3JSYXcpXG4gICAgICAuc2NhbGUoOTYxIC8gdGF1KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmNhdG9yUHJvamVjdGlvbihwcm9qZWN0KSB7XG4gIHZhciBtID0gcHJvamVjdGlvbihwcm9qZWN0KSxcbiAgICAgIGNlbnRlciA9IG0uY2VudGVyLFxuICAgICAgc2NhbGUgPSBtLnNjYWxlLFxuICAgICAgdHJhbnNsYXRlID0gbS50cmFuc2xhdGUsXG4gICAgICBjbGlwRXh0ZW50ID0gbS5jbGlwRXh0ZW50LFxuICAgICAgeDAgPSBudWxsLCB5MCwgeDEsIHkxOyAvLyBjbGlwIGV4dGVudFxuXG4gIG0uc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc2NhbGUoXyksIHJlY2xpcCgpKSA6IHNjYWxlKCk7XG4gIH07XG5cbiAgbS50cmFuc2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodHJhbnNsYXRlKF8pLCByZWNsaXAoKSkgOiB0cmFuc2xhdGUoKTtcbiAgfTtcblxuICBtLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjZW50ZXIoXyksIHJlY2xpcCgpKSA6IGNlbnRlcigpO1xuICB9O1xuXG4gIG0uY2xpcEV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICgoXyA9PSBudWxsID8geDAgPSB5MCA9IHgxID0geTEgPSBudWxsIDogKHgwID0gK19bMF1bMF0sIHkwID0gK19bMF1bMV0sIHgxID0gK19bMV1bMF0sIHkxID0gK19bMV1bMV0pKSwgcmVjbGlwKCkpIDogeDAgPT0gbnVsbCA/IG51bGwgOiBbW3gwLCB5MF0sIFt4MSwgeTFdXTtcbiAgfTtcblxuICBmdW5jdGlvbiByZWNsaXAoKSB7XG4gICAgdmFyIGsgPSBwaSAqIHNjYWxlKCksXG4gICAgICAgIHQgPSBtKHJvdGF0aW9uKG0ucm90YXRlKCkpLmludmVydChbMCwgMF0pKTtcbiAgICByZXR1cm4gY2xpcEV4dGVudCh4MCA9PSBudWxsXG4gICAgICAgID8gW1t0WzBdIC0gaywgdFsxXSAtIGtdLCBbdFswXSArIGssIHRbMV0gKyBrXV0gOiBwcm9qZWN0ID09PSBtZXJjYXRvclJhd1xuICAgICAgICA/IFtbTWF0aC5tYXgodFswXSAtIGssIHgwKSwgeTBdLCBbTWF0aC5taW4odFswXSArIGssIHgxKSwgeTFdXVxuICAgICAgICA6IFtbeDAsIE1hdGgubWF4KHRbMV0gLSBrLCB5MCldLCBbeDEsIE1hdGgubWluKHRbMV0gKyBrLCB5MSldXSk7XG4gIH1cblxuICByZXR1cm4gcmVjbGlwKCk7XG59XG4iLCJpbXBvcnQgcHJvamVjdGlvbiBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHthYnMsIGVwc2lsb259IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBuYXR1cmFsRWFydGgxUmF3KGxhbWJkYSwgcGhpKSB7XG4gIHZhciBwaGkyID0gcGhpICogcGhpLCBwaGk0ID0gcGhpMiAqIHBoaTI7XG4gIHJldHVybiBbXG4gICAgbGFtYmRhICogKDAuODcwNyAtIDAuMTMxOTc5ICogcGhpMiArIHBoaTQgKiAoLTAuMDEzNzkxICsgcGhpNCAqICgwLjAwMzk3MSAqIHBoaTIgLSAwLjAwMTUyOSAqIHBoaTQpKSksXG4gICAgcGhpICogKDEuMDA3MjI2ICsgcGhpMiAqICgwLjAxNTA4NSArIHBoaTQgKiAoLTAuMDQ0NDc1ICsgMC4wMjg4NzQgKiBwaGkyIC0gMC4wMDU5MTYgKiBwaGk0KSkpXG4gIF07XG59XG5cbm5hdHVyYWxFYXJ0aDFSYXcuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICB2YXIgcGhpID0geSwgaSA9IDI1LCBkZWx0YTtcbiAgZG8ge1xuICAgIHZhciBwaGkyID0gcGhpICogcGhpLCBwaGk0ID0gcGhpMiAqIHBoaTI7XG4gICAgcGhpIC09IGRlbHRhID0gKHBoaSAqICgxLjAwNzIyNiArIHBoaTIgKiAoMC4wMTUwODUgKyBwaGk0ICogKC0wLjA0NDQ3NSArIDAuMDI4ODc0ICogcGhpMiAtIDAuMDA1OTE2ICogcGhpNCkpKSAtIHkpIC9cbiAgICAgICAgKDEuMDA3MjI2ICsgcGhpMiAqICgwLjAxNTA4NSAqIDMgKyBwaGk0ICogKC0wLjA0NDQ3NSAqIDcgKyAwLjAyODg3NCAqIDkgKiBwaGkyIC0gMC4wMDU5MTYgKiAxMSAqIHBoaTQpKSk7XG4gIH0gd2hpbGUgKGFicyhkZWx0YSkgPiBlcHNpbG9uICYmIC0taSA+IDApO1xuICByZXR1cm4gW1xuICAgIHggLyAoMC44NzA3ICsgKHBoaTIgPSBwaGkgKiBwaGkpICogKC0wLjEzMTk3OSArIHBoaTIgKiAoLTAuMDEzNzkxICsgcGhpMiAqIHBoaTIgKiBwaGkyICogKDAuMDAzOTcxIC0gMC4wMDE1MjkgKiBwaGkyKSkpKSxcbiAgICBwaGlcbiAgXTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihuYXR1cmFsRWFydGgxUmF3KVxuICAgICAgLnNjYWxlKDE3NS4yOTUpO1xufVxuIiwiaW1wb3J0IHthc2luLCBjb3MsIGVwc2lsb24sIHNpbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7YXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWwuanNcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBvcnRob2dyYXBoaWNSYXcoeCwgeSkge1xuICByZXR1cm4gW2Nvcyh5KSAqIHNpbih4KSwgc2luKHkpXTtcbn1cblxub3J0aG9ncmFwaGljUmF3LmludmVydCA9IGF6aW11dGhhbEludmVydChhc2luKTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBwcm9qZWN0aW9uKG9ydGhvZ3JhcGhpY1JhdylcbiAgICAgIC5zY2FsZSgyNDkuNSlcbiAgICAgIC5jbGlwQW5nbGUoOTAgKyBlcHNpbG9uKTtcbn1cbiIsImltcG9ydCB7Y2FydGVzaWFufSBmcm9tIFwiLi4vY2FydGVzaWFuLmpzXCI7XG5pbXBvcnQge2FicywgYXNpbiwgYXRhbjIsIGNvcywgZXBzaWxvbiwgcmFkaWFucywgc3FydH0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7dHJhbnNmb3JtZXJ9IGZyb20gXCIuLi90cmFuc2Zvcm0uanNcIjtcblxudmFyIG1heERlcHRoID0gMTYsIC8vIG1heGltdW0gZGVwdGggb2Ygc3ViZGl2aXNpb25cbiAgICBjb3NNaW5EaXN0YW5jZSA9IGNvcygzMCAqIHJhZGlhbnMpOyAvLyBjb3MobWluaW11bSBhbmd1bGFyIGRpc3RhbmNlKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwcm9qZWN0LCBkZWx0YTIpIHtcbiAgcmV0dXJuICtkZWx0YTIgPyByZXNhbXBsZShwcm9qZWN0LCBkZWx0YTIpIDogcmVzYW1wbGVOb25lKHByb2plY3QpO1xufVxuXG5mdW5jdGlvbiByZXNhbXBsZU5vbmUocHJvamVjdCkge1xuICByZXR1cm4gdHJhbnNmb3JtZXIoe1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB4ID0gcHJvamVjdCh4LCB5KTtcbiAgICAgIHRoaXMuc3RyZWFtLnBvaW50KHhbMF0sIHhbMV0pO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHJlc2FtcGxlKHByb2plY3QsIGRlbHRhMikge1xuXG4gIGZ1bmN0aW9uIHJlc2FtcGxlTGluZVRvKHgwLCB5MCwgbGFtYmRhMCwgYTAsIGIwLCBjMCwgeDEsIHkxLCBsYW1iZGExLCBhMSwgYjEsIGMxLCBkZXB0aCwgc3RyZWFtKSB7XG4gICAgdmFyIGR4ID0geDEgLSB4MCxcbiAgICAgICAgZHkgPSB5MSAtIHkwLFxuICAgICAgICBkMiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgIGlmIChkMiA+IDQgKiBkZWx0YTIgJiYgZGVwdGgtLSkge1xuICAgICAgdmFyIGEgPSBhMCArIGExLFxuICAgICAgICAgIGIgPSBiMCArIGIxLFxuICAgICAgICAgIGMgPSBjMCArIGMxLFxuICAgICAgICAgIG0gPSBzcXJ0KGEgKiBhICsgYiAqIGIgKyBjICogYyksXG4gICAgICAgICAgcGhpMiA9IGFzaW4oYyAvPSBtKSxcbiAgICAgICAgICBsYW1iZGEyID0gYWJzKGFicyhjKSAtIDEpIDwgZXBzaWxvbiB8fCBhYnMobGFtYmRhMCAtIGxhbWJkYTEpIDwgZXBzaWxvbiA/IChsYW1iZGEwICsgbGFtYmRhMSkgLyAyIDogYXRhbjIoYiwgYSksXG4gICAgICAgICAgcCA9IHByb2plY3QobGFtYmRhMiwgcGhpMiksXG4gICAgICAgICAgeDIgPSBwWzBdLFxuICAgICAgICAgIHkyID0gcFsxXSxcbiAgICAgICAgICBkeDIgPSB4MiAtIHgwLFxuICAgICAgICAgIGR5MiA9IHkyIC0geTAsXG4gICAgICAgICAgZHogPSBkeSAqIGR4MiAtIGR4ICogZHkyO1xuICAgICAgaWYgKGR6ICogZHogLyBkMiA+IGRlbHRhMiAvLyBwZXJwZW5kaWN1bGFyIHByb2plY3RlZCBkaXN0YW5jZVxuICAgICAgICAgIHx8IGFicygoZHggKiBkeDIgKyBkeSAqIGR5MikgLyBkMiAtIDAuNSkgPiAwLjMgLy8gbWlkcG9pbnQgY2xvc2UgdG8gYW4gZW5kXG4gICAgICAgICAgfHwgYTAgKiBhMSArIGIwICogYjEgKyBjMCAqIGMxIDwgY29zTWluRGlzdGFuY2UpIHsgLy8gYW5ndWxhciBkaXN0YW5jZVxuICAgICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIGxhbWJkYTAsIGEwLCBiMCwgYzAsIHgyLCB5MiwgbGFtYmRhMiwgYSAvPSBtLCBiIC89IG0sIGMsIGRlcHRoLCBzdHJlYW0pO1xuICAgICAgICBzdHJlYW0ucG9pbnQoeDIsIHkyKTtcbiAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDIsIHkyLCBsYW1iZGEyLCBhLCBiLCBjLCB4MSwgeTEsIGxhbWJkYTEsIGExLCBiMSwgYzEsIGRlcHRoLCBzdHJlYW0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgdmFyIGxhbWJkYTAwLCB4MDAsIHkwMCwgYTAwLCBiMDAsIGMwMCwgLy8gZmlyc3QgcG9pbnRcbiAgICAgICAgbGFtYmRhMCwgeDAsIHkwLCBhMCwgYjAsIGMwOyAvLyBwcmV2aW91cyBwb2ludFxuXG4gICAgdmFyIHJlc2FtcGxlU3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHsgc3RyZWFtLnBvbHlnb25TdGFydCgpOyByZXNhbXBsZVN0cmVhbS5saW5lU3RhcnQgPSByaW5nU3RhcnQ7IH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHsgc3RyZWFtLnBvbHlnb25FbmQoKTsgcmVzYW1wbGVTdHJlYW0ubGluZVN0YXJ0ID0gbGluZVN0YXJ0OyB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgIHggPSBwcm9qZWN0KHgsIHkpO1xuICAgICAgc3RyZWFtLnBvaW50KHhbMF0sIHhbMV0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxpbmVTdGFydCgpIHtcbiAgICAgIHgwID0gTmFOO1xuICAgICAgcmVzYW1wbGVTdHJlYW0ucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICBzdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbGluZVBvaW50KGxhbWJkYSwgcGhpKSB7XG4gICAgICB2YXIgYyA9IGNhcnRlc2lhbihbbGFtYmRhLCBwaGldKSwgcCA9IHByb2plY3QobGFtYmRhLCBwaGkpO1xuICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCBsYW1iZGEwLCBhMCwgYjAsIGMwLCB4MCA9IHBbMF0sIHkwID0gcFsxXSwgbGFtYmRhMCA9IGxhbWJkYSwgYTAgPSBjWzBdLCBiMCA9IGNbMV0sIGMwID0gY1syXSwgbWF4RGVwdGgsIHN0cmVhbSk7XG4gICAgICBzdHJlYW0ucG9pbnQoeDAsIHkwKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgcmVzYW1wbGVTdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICAgIHN0cmVhbS5saW5lRW5kKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgbGluZVN0YXJ0KCk7XG4gICAgICByZXNhbXBsZVN0cmVhbS5wb2ludCA9IHJpbmdQb2ludDtcbiAgICAgIHJlc2FtcGxlU3RyZWFtLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJpbmdQb2ludChsYW1iZGEsIHBoaSkge1xuICAgICAgbGluZVBvaW50KGxhbWJkYTAwID0gbGFtYmRhLCBwaGkpLCB4MDAgPSB4MCwgeTAwID0geTAsIGEwMCA9IGEwLCBiMDAgPSBiMCwgYzAwID0gYzA7XG4gICAgICByZXNhbXBsZVN0cmVhbS5wb2ludCA9IGxpbmVQb2ludDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByaW5nRW5kKCkge1xuICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCBsYW1iZGEwLCBhMCwgYjAsIGMwLCB4MDAsIHkwMCwgbGFtYmRhMDAsIGEwMCwgYjAwLCBjMDAsIG1heERlcHRoLCBzdHJlYW0pO1xuICAgICAgcmVzYW1wbGVTdHJlYW0ubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICBsaW5lRW5kKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc2FtcGxlU3RyZWFtO1xuICB9O1xufVxuIiwiaW1wb3J0IHthdGFuLCBjb3MsIHNpbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7YXppbXV0aGFsSW52ZXJ0fSBmcm9tIFwiLi9hemltdXRoYWwuanNcIjtcbmltcG9ydCBwcm9qZWN0aW9uIGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGVyZW9ncmFwaGljUmF3KHgsIHkpIHtcbiAgdmFyIGN5ID0gY29zKHkpLCBrID0gMSArIGNvcyh4KSAqIGN5O1xuICByZXR1cm4gW2N5ICogc2luKHgpIC8gaywgc2luKHkpIC8ga107XG59XG5cbnN0ZXJlb2dyYXBoaWNSYXcuaW52ZXJ0ID0gYXppbXV0aGFsSW52ZXJ0KGZ1bmN0aW9uKHopIHtcbiAgcmV0dXJuIDIgKiBhdGFuKHopO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcHJvamVjdGlvbihzdGVyZW9ncmFwaGljUmF3KVxuICAgICAgLnNjYWxlKDI1MClcbiAgICAgIC5jbGlwQW5nbGUoMTQyKTtcbn1cbiIsImltcG9ydCB7YXRhbiwgZXhwLCBoYWxmUGksIGxvZywgdGFufSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHttZXJjYXRvclByb2plY3Rpb259IGZyb20gXCIuL21lcmNhdG9yLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc3ZlcnNlTWVyY2F0b3JSYXcobGFtYmRhLCBwaGkpIHtcbiAgcmV0dXJuIFtsb2codGFuKChoYWxmUGkgKyBwaGkpIC8gMikpLCAtbGFtYmRhXTtcbn1cblxudHJhbnN2ZXJzZU1lcmNhdG9yUmF3LmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgcmV0dXJuIFsteSwgMiAqIGF0YW4oZXhwKHgpKSAtIGhhbGZQaV07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIG0gPSBtZXJjYXRvclByb2plY3Rpb24odHJhbnN2ZXJzZU1lcmNhdG9yUmF3KSxcbiAgICAgIGNlbnRlciA9IG0uY2VudGVyLFxuICAgICAgcm90YXRlID0gbS5yb3RhdGU7XG5cbiAgbS5jZW50ZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBjZW50ZXIoWy1fWzFdLCBfWzBdXSkgOiAoXyA9IGNlbnRlcigpLCBbX1sxXSwgLV9bMF1dKTtcbiAgfTtcblxuICBtLnJvdGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHJvdGF0ZShbX1swXSwgX1sxXSwgXy5sZW5ndGggPiAyID8gX1syXSArIDkwIDogOTBdKSA6IChfID0gcm90YXRlKCksIFtfWzBdLCBfWzFdLCBfWzJdIC0gOTBdKTtcbiAgfTtcblxuICByZXR1cm4gcm90YXRlKFswLCAwLCA5MF0pXG4gICAgICAuc2NhbGUoMTU5LjE1NSk7XG59XG4iLCJpbXBvcnQgY29tcG9zZSBmcm9tIFwiLi9jb21wb3NlLmpzXCI7XG5pbXBvcnQge2FicywgYXNpbiwgYXRhbjIsIGNvcywgZGVncmVlcywgcGksIHJhZGlhbnMsIHNpbiwgdGF1fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmZ1bmN0aW9uIHJvdGF0aW9uSWRlbnRpdHkobGFtYmRhLCBwaGkpIHtcbiAgcmV0dXJuIFthYnMobGFtYmRhKSA+IHBpID8gbGFtYmRhICsgTWF0aC5yb3VuZCgtbGFtYmRhIC8gdGF1KSAqIHRhdSA6IGxhbWJkYSwgcGhpXTtcbn1cblxucm90YXRpb25JZGVudGl0eS5pbnZlcnQgPSByb3RhdGlvbklkZW50aXR5O1xuXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlUmFkaWFucyhkZWx0YUxhbWJkYSwgZGVsdGFQaGksIGRlbHRhR2FtbWEpIHtcbiAgcmV0dXJuIChkZWx0YUxhbWJkYSAlPSB0YXUpID8gKGRlbHRhUGhpIHx8IGRlbHRhR2FtbWEgPyBjb21wb3NlKHJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSwgcm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSwgZGVsdGFHYW1tYSkpXG4gICAgOiByb3RhdGlvbkxhbWJkYShkZWx0YUxhbWJkYSkpXG4gICAgOiAoZGVsdGFQaGkgfHwgZGVsdGFHYW1tYSA/IHJvdGF0aW9uUGhpR2FtbWEoZGVsdGFQaGksIGRlbHRhR2FtbWEpXG4gICAgOiByb3RhdGlvbklkZW50aXR5KTtcbn1cblxuZnVuY3Rpb24gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKSB7XG4gIHJldHVybiBmdW5jdGlvbihsYW1iZGEsIHBoaSkge1xuICAgIHJldHVybiBsYW1iZGEgKz0gZGVsdGFMYW1iZGEsIFtsYW1iZGEgPiBwaSA/IGxhbWJkYSAtIHRhdSA6IGxhbWJkYSA8IC1waSA/IGxhbWJkYSArIHRhdSA6IGxhbWJkYSwgcGhpXTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcm90YXRpb25MYW1iZGEoZGVsdGFMYW1iZGEpIHtcbiAgdmFyIHJvdGF0aW9uID0gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKGRlbHRhTGFtYmRhKTtcbiAgcm90YXRpb24uaW52ZXJ0ID0gZm9yd2FyZFJvdGF0aW9uTGFtYmRhKC1kZWx0YUxhbWJkYSk7XG4gIHJldHVybiByb3RhdGlvbjtcbn1cblxuZnVuY3Rpb24gcm90YXRpb25QaGlHYW1tYShkZWx0YVBoaSwgZGVsdGFHYW1tYSkge1xuICB2YXIgY29zRGVsdGFQaGkgPSBjb3MoZGVsdGFQaGkpLFxuICAgICAgc2luRGVsdGFQaGkgPSBzaW4oZGVsdGFQaGkpLFxuICAgICAgY29zRGVsdGFHYW1tYSA9IGNvcyhkZWx0YUdhbW1hKSxcbiAgICAgIHNpbkRlbHRhR2FtbWEgPSBzaW4oZGVsdGFHYW1tYSk7XG5cbiAgZnVuY3Rpb24gcm90YXRpb24obGFtYmRhLCBwaGkpIHtcbiAgICB2YXIgY29zUGhpID0gY29zKHBoaSksXG4gICAgICAgIHggPSBjb3MobGFtYmRhKSAqIGNvc1BoaSxcbiAgICAgICAgeSA9IHNpbihsYW1iZGEpICogY29zUGhpLFxuICAgICAgICB6ID0gc2luKHBoaSksXG4gICAgICAgIGsgPSB6ICogY29zRGVsdGFQaGkgKyB4ICogc2luRGVsdGFQaGk7XG4gICAgcmV0dXJuIFtcbiAgICAgIGF0YW4yKHkgKiBjb3NEZWx0YUdhbW1hIC0gayAqIHNpbkRlbHRhR2FtbWEsIHggKiBjb3NEZWx0YVBoaSAtIHogKiBzaW5EZWx0YVBoaSksXG4gICAgICBhc2luKGsgKiBjb3NEZWx0YUdhbW1hICsgeSAqIHNpbkRlbHRhR2FtbWEpXG4gICAgXTtcbiAgfVxuXG4gIHJvdGF0aW9uLmludmVydCA9IGZ1bmN0aW9uKGxhbWJkYSwgcGhpKSB7XG4gICAgdmFyIGNvc1BoaSA9IGNvcyhwaGkpLFxuICAgICAgICB4ID0gY29zKGxhbWJkYSkgKiBjb3NQaGksXG4gICAgICAgIHkgPSBzaW4obGFtYmRhKSAqIGNvc1BoaSxcbiAgICAgICAgeiA9IHNpbihwaGkpLFxuICAgICAgICBrID0geiAqIGNvc0RlbHRhR2FtbWEgLSB5ICogc2luRGVsdGFHYW1tYTtcbiAgICByZXR1cm4gW1xuICAgICAgYXRhbjIoeSAqIGNvc0RlbHRhR2FtbWEgKyB6ICogc2luRGVsdGFHYW1tYSwgeCAqIGNvc0RlbHRhUGhpICsgayAqIHNpbkRlbHRhUGhpKSxcbiAgICAgIGFzaW4oayAqIGNvc0RlbHRhUGhpIC0geCAqIHNpbkRlbHRhUGhpKVxuICAgIF07XG4gIH07XG5cbiAgcmV0dXJuIHJvdGF0aW9uO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyb3RhdGUpIHtcbiAgcm90YXRlID0gcm90YXRlUmFkaWFucyhyb3RhdGVbMF0gKiByYWRpYW5zLCByb3RhdGVbMV0gKiByYWRpYW5zLCByb3RhdGUubGVuZ3RoID4gMiA/IHJvdGF0ZVsyXSAqIHJhZGlhbnMgOiAwKTtcblxuICBmdW5jdGlvbiBmb3J3YXJkKGNvb3JkaW5hdGVzKSB7XG4gICAgY29vcmRpbmF0ZXMgPSByb3RhdGUoY29vcmRpbmF0ZXNbMF0gKiByYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIHJhZGlhbnMpO1xuICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlcztcbiAgfVxuXG4gIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICBjb29yZGluYXRlcyA9IHJvdGF0ZS5pbnZlcnQoY29vcmRpbmF0ZXNbMF0gKiByYWRpYW5zLCBjb29yZGluYXRlc1sxXSAqIHJhZGlhbnMpO1xuICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkZWdyZWVzLCBjb29yZGluYXRlcztcbiAgfTtcblxuICByZXR1cm4gZm9yd2FyZDtcbn1cbiIsImZ1bmN0aW9uIHN0cmVhbUdlb21ldHJ5KGdlb21ldHJ5LCBzdHJlYW0pIHtcbiAgaWYgKGdlb21ldHJ5ICYmIHN0cmVhbUdlb21ldHJ5VHlwZS5oYXNPd25Qcm9wZXJ0eShnZW9tZXRyeS50eXBlKSkge1xuICAgIHN0cmVhbUdlb21ldHJ5VHlwZVtnZW9tZXRyeS50eXBlXShnZW9tZXRyeSwgc3RyZWFtKTtcbiAgfVxufVxuXG52YXIgc3RyZWFtT2JqZWN0VHlwZSA9IHtcbiAgRmVhdHVyZTogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICBzdHJlYW1HZW9tZXRyeShvYmplY3QuZ2VvbWV0cnksIHN0cmVhbSk7XG4gIH0sXG4gIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBmZWF0dXJlcyA9IG9iamVjdC5mZWF0dXJlcywgaSA9IC0xLCBuID0gZmVhdHVyZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1HZW9tZXRyeShmZWF0dXJlc1tpXS5nZW9tZXRyeSwgc3RyZWFtKTtcbiAgfVxufTtcblxudmFyIHN0cmVhbUdlb21ldHJ5VHlwZSA9IHtcbiAgU3BoZXJlOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbS5zcGhlcmUoKTtcbiAgfSxcbiAgUG9pbnQ6IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgb2JqZWN0ID0gb2JqZWN0LmNvb3JkaW5hdGVzO1xuICAgIHN0cmVhbS5wb2ludChvYmplY3RbMF0sIG9iamVjdFsxXSwgb2JqZWN0WzJdKTtcbiAgfSxcbiAgTXVsdGlQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICB2YXIgY29vcmRpbmF0ZXMgPSBvYmplY3QuY29vcmRpbmF0ZXMsIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgb2JqZWN0ID0gY29vcmRpbmF0ZXNbaV0sIHN0cmVhbS5wb2ludChvYmplY3RbMF0sIG9iamVjdFsxXSwgb2JqZWN0WzJdKTtcbiAgfSxcbiAgTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICBzdHJlYW1MaW5lKG9iamVjdC5jb29yZGluYXRlcywgc3RyZWFtLCAwKTtcbiAgfSxcbiAgTXVsdGlMaW5lU3RyaW5nOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLCBzdHJlYW0sIDApO1xuICB9LFxuICBQb2x5Z29uOiBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICAgIHN0cmVhbVBvbHlnb24ob2JqZWN0LmNvb3JkaW5hdGVzLCBzdHJlYW0pO1xuICB9LFxuICBNdWx0aVBvbHlnb246IGZ1bmN0aW9uKG9iamVjdCwgc3RyZWFtKSB7XG4gICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIHN0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXNbaV0sIHN0cmVhbSk7XG4gIH0sXG4gIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBzdHJlYW0pIHtcbiAgICB2YXIgZ2VvbWV0cmllcyA9IG9iamVjdC5nZW9tZXRyaWVzLCBpID0gLTEsIG4gPSBnZW9tZXRyaWVzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikgc3RyZWFtR2VvbWV0cnkoZ2VvbWV0cmllc1tpXSwgc3RyZWFtKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyZWFtTGluZShjb29yZGluYXRlcywgc3RyZWFtLCBjbG9zZWQpIHtcbiAgdmFyIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aCAtIGNsb3NlZCwgY29vcmRpbmF0ZTtcbiAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICB3aGlsZSAoKytpIDwgbikgY29vcmRpbmF0ZSA9IGNvb3JkaW5hdGVzW2ldLCBzdHJlYW0ucG9pbnQoY29vcmRpbmF0ZVswXSwgY29vcmRpbmF0ZVsxXSwgY29vcmRpbmF0ZVsyXSk7XG4gIHN0cmVhbS5saW5lRW5kKCk7XG59XG5cbmZ1bmN0aW9uIHN0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXMsIHN0cmVhbSkge1xuICB2YXIgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICBzdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gIHdoaWxlICgrK2kgPCBuKSBzdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLCBzdHJlYW0sIDEpO1xuICBzdHJlYW0ucG9seWdvbkVuZCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmplY3QsIHN0cmVhbSkge1xuICBpZiAob2JqZWN0ICYmIHN0cmVhbU9iamVjdFR5cGUuaGFzT3duUHJvcGVydHkob2JqZWN0LnR5cGUpKSB7XG4gICAgc3RyZWFtT2JqZWN0VHlwZVtvYmplY3QudHlwZV0ob2JqZWN0LCBzdHJlYW0pO1xuICB9IGVsc2Uge1xuICAgIHN0cmVhbUdlb21ldHJ5KG9iamVjdCwgc3RyZWFtKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWV0aG9kcykge1xuICByZXR1cm4ge1xuICAgIHN0cmVhbTogdHJhbnNmb3JtZXIobWV0aG9kcylcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybWVyKG1ldGhvZHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHN0cmVhbSkge1xuICAgIHZhciBzID0gbmV3IFRyYW5zZm9ybVN0cmVhbTtcbiAgICBmb3IgKHZhciBrZXkgaW4gbWV0aG9kcykgc1trZXldID0gbWV0aG9kc1trZXldO1xuICAgIHMuc3RyZWFtID0gc3RyZWFtO1xuICAgIHJldHVybiBzO1xuICB9O1xufVxuXG5mdW5jdGlvbiBUcmFuc2Zvcm1TdHJlYW0oKSB7fVxuXG5UcmFuc2Zvcm1TdHJlYW0ucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogVHJhbnNmb3JtU3RyZWFtLFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkgeyB0aGlzLnN0cmVhbS5wb2ludCh4LCB5KTsgfSxcbiAgc3BoZXJlOiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0uc3BoZXJlKCk7IH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7IHRoaXMuc3RyZWFtLmxpbmVTdGFydCgpOyB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHsgdGhpcy5zdHJlYW0ubGluZUVuZCgpOyB9LFxuICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkgeyB0aGlzLnN0cmVhbS5wb2x5Z29uU3RhcnQoKTsgfSxcbiAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7IHRoaXMuc3RyZWFtLnBvbHlnb25FbmQoKTsgfVxufTtcbiIsImV4cG9ydCBmdW5jdGlvbiBvcHRpb25hbChmKSB7XG4gIHJldHVybiBmID09IG51bGwgPyBudWxsIDogcmVxdWlyZWQoZik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXF1aXJlZChmKSB7XG4gIGlmICh0eXBlb2YgZiAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHJldHVybiBmO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gdHlwZW9mIHggPT09IFwib2JqZWN0XCIgJiYgXCJsZW5ndGhcIiBpbiB4XG4gICAgPyB4IC8vIEFycmF5LCBUeXBlZEFycmF5LCBOb2RlTGlzdCwgYXJyYXktbGlrZVxuICAgIDogQXJyYXkuZnJvbSh4KTsgLy8gTWFwLCBTZXQsIGl0ZXJhYmxlLCBzdHJpbmcsIG9yIGFueXRoaW5nIGVsc2Vcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNodWZmbGUoYXJyYXkpIHtcbiAgdmFyIG0gPSBhcnJheS5sZW5ndGgsXG4gICAgICB0LFxuICAgICAgaTtcblxuICB3aGlsZSAobSkge1xuICAgIGkgPSBNYXRoLnJhbmRvbSgpICogbS0tIHwgMDtcbiAgICB0ID0gYXJyYXlbbV07XG4gICAgYXJyYXlbbV0gPSBhcnJheVtpXTtcbiAgICBhcnJheVtpXSA9IHQ7XG4gIH1cblxuICByZXR1cm4gYXJyYXk7XG59XG4iLCJmdW5jdGlvbiBkZWZhdWx0U2VwYXJhdGlvbihhLCBiKSB7XG4gIHJldHVybiBhLnBhcmVudCA9PT0gYi5wYXJlbnQgPyAxIDogMjtcbn1cblxuZnVuY3Rpb24gbWVhblgoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIGNoaWxkcmVuLnJlZHVjZShtZWFuWFJlZHVjZSwgMCkgLyBjaGlsZHJlbi5sZW5ndGg7XG59XG5cbmZ1bmN0aW9uIG1lYW5YUmVkdWNlKHgsIGMpIHtcbiAgcmV0dXJuIHggKyBjLng7XG59XG5cbmZ1bmN0aW9uIG1heFkoY2hpbGRyZW4pIHtcbiAgcmV0dXJuIDEgKyBjaGlsZHJlbi5yZWR1Y2UobWF4WVJlZHVjZSwgMCk7XG59XG5cbmZ1bmN0aW9uIG1heFlSZWR1Y2UoeSwgYykge1xuICByZXR1cm4gTWF0aC5tYXgoeSwgYy55KTtcbn1cblxuZnVuY3Rpb24gbGVhZkxlZnQobm9kZSkge1xuICB2YXIgY2hpbGRyZW47XG4gIHdoaWxlIChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pIG5vZGUgPSBjaGlsZHJlblswXTtcbiAgcmV0dXJuIG5vZGU7XG59XG5cbmZ1bmN0aW9uIGxlYWZSaWdodChub2RlKSB7XG4gIHZhciBjaGlsZHJlbjtcbiAgd2hpbGUgKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgbm9kZSA9IGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdO1xuICByZXR1cm4gbm9kZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBzZXBhcmF0aW9uID0gZGVmYXVsdFNlcGFyYXRpb24sXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBub2RlU2l6ZSA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGNsdXN0ZXIocm9vdCkge1xuICAgIHZhciBwcmV2aW91c05vZGUsXG4gICAgICAgIHggPSAwO1xuXG4gICAgLy8gRmlyc3Qgd2FsaywgY29tcHV0aW5nIHRoZSBpbml0aWFsIHggJiB5IHZhbHVlcy5cbiAgICByb290LmVhY2hBZnRlcihmdW5jdGlvbihub2RlKSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgaWYgKGNoaWxkcmVuKSB7XG4gICAgICAgIG5vZGUueCA9IG1lYW5YKGNoaWxkcmVuKTtcbiAgICAgICAgbm9kZS55ID0gbWF4WShjaGlsZHJlbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLnggPSBwcmV2aW91c05vZGUgPyB4ICs9IHNlcGFyYXRpb24obm9kZSwgcHJldmlvdXNOb2RlKSA6IDA7XG4gICAgICAgIG5vZGUueSA9IDA7XG4gICAgICAgIHByZXZpb3VzTm9kZSA9IG5vZGU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB2YXIgbGVmdCA9IGxlYWZMZWZ0KHJvb3QpLFxuICAgICAgICByaWdodCA9IGxlYWZSaWdodChyb290KSxcbiAgICAgICAgeDAgPSBsZWZ0LnggLSBzZXBhcmF0aW9uKGxlZnQsIHJpZ2h0KSAvIDIsXG4gICAgICAgIHgxID0gcmlnaHQueCArIHNlcGFyYXRpb24ocmlnaHQsIGxlZnQpIC8gMjtcblxuICAgIC8vIFNlY29uZCB3YWxrLCBub3JtYWxpemluZyB4ICYgeSB0byB0aGUgZGVzaXJlZCBzaXplLlxuICAgIHJldHVybiByb290LmVhY2hBZnRlcihub2RlU2l6ZSA/IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGUueCA9IChub2RlLnggLSByb290LngpICogZHg7XG4gICAgICBub2RlLnkgPSAocm9vdC55IC0gbm9kZS55KSAqIGR5O1xuICAgIH0gOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlLnggPSAobm9kZS54IC0geDApIC8gKHgxIC0geDApICogZHg7XG4gICAgICBub2RlLnkgPSAoMSAtIChyb290LnkgPyBub2RlLnkgLyByb290LnkgOiAxKSkgKiBkeTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsdXN0ZXIuc2VwYXJhdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzZXBhcmF0aW9uID0geCwgY2x1c3RlcikgOiBzZXBhcmF0aW9uO1xuICB9O1xuXG4gIGNsdXN0ZXIuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChub2RlU2l6ZSA9IGZhbHNlLCBkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCBjbHVzdGVyKSA6IChub2RlU2l6ZSA/IG51bGwgOiBbZHgsIGR5XSk7XG4gIH07XG5cbiAgY2x1c3Rlci5ub2RlU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChub2RlU2l6ZSA9IHRydWUsIGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIGNsdXN0ZXIpIDogKG5vZGVTaXplID8gW2R4LCBkeV0gOiBudWxsKTtcbiAgfTtcblxuICByZXR1cm4gY2x1c3Rlcjtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBjb25zdGFudFplcm8oKSB7XG4gIHJldHVybiAwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbm9kZSA9IHRoaXMsIG5vZGVzID0gW25vZGVdO1xuICB3aGlsZSAobm9kZSA9IG5vZGUucGFyZW50KSB7XG4gICAgbm9kZXMucHVzaChub2RlKTtcbiAgfVxuICByZXR1cm4gbm9kZXM7XG59XG4iLCJmdW5jdGlvbiBjb3VudChub2RlKSB7XG4gIHZhciBzdW0gPSAwLFxuICAgICAgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLFxuICAgICAgaSA9IGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aDtcbiAgaWYgKCFpKSBzdW0gPSAxO1xuICBlbHNlIHdoaWxlICgtLWkgPj0gMCkgc3VtICs9IGNoaWxkcmVuW2ldLnZhbHVlO1xuICBub2RlLnZhbHVlID0gc3VtO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKGNvdW50KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrLCB0aGF0KSB7XG4gIGxldCBpbmRleCA9IC0xO1xuICBmb3IgKGNvbnN0IG5vZGUgb2YgdGhpcykge1xuICAgIGNhbGxiYWNrLmNhbGwodGhhdCwgbm9kZSwgKytpbmRleCwgdGhpcyk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaywgdGhhdCkge1xuICB2YXIgbm9kZSA9IHRoaXMsIG5vZGVzID0gW25vZGVdLCBuZXh0ID0gW10sIGNoaWxkcmVuLCBpLCBuLCBpbmRleCA9IC0xO1xuICB3aGlsZSAobm9kZSA9IG5vZGVzLnBvcCgpKSB7XG4gICAgbmV4dC5wdXNoKG5vZGUpO1xuICAgIGlmIChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIGZvciAoaSA9IDAsIG4gPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgbm9kZXMucHVzaChjaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHdoaWxlIChub2RlID0gbmV4dC5wb3AoKSkge1xuICAgIGNhbGxiYWNrLmNhbGwodGhhdCwgbm9kZSwgKytpbmRleCwgdGhpcyk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaywgdGhhdCkge1xuICB2YXIgbm9kZSA9IHRoaXMsIG5vZGVzID0gW25vZGVdLCBjaGlsZHJlbiwgaSwgaW5kZXggPSAtMTtcbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIGNhbGxiYWNrLmNhbGwodGhhdCwgbm9kZSwgKytpbmRleCwgdGhpcyk7XG4gICAgaWYgKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikge1xuICAgICAgZm9yIChpID0gY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgbm9kZXMucHVzaChjaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2FsbGJhY2ssIHRoYXQpIHtcbiAgbGV0IGluZGV4ID0gLTE7XG4gIGZvciAoY29uc3Qgbm9kZSBvZiB0aGlzKSB7XG4gICAgaWYgKGNhbGxiYWNrLmNhbGwodGhhdCwgbm9kZSwgKytpbmRleCwgdGhpcykpIHtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IG5vZGVfY291bnQgZnJvbSBcIi4vY291bnQuanNcIjtcbmltcG9ydCBub2RlX2VhY2ggZnJvbSBcIi4vZWFjaC5qc1wiO1xuaW1wb3J0IG5vZGVfZWFjaEJlZm9yZSBmcm9tIFwiLi9lYWNoQmVmb3JlLmpzXCI7XG5pbXBvcnQgbm9kZV9lYWNoQWZ0ZXIgZnJvbSBcIi4vZWFjaEFmdGVyLmpzXCI7XG5pbXBvcnQgbm9kZV9maW5kIGZyb20gXCIuL2ZpbmQuanNcIjtcbmltcG9ydCBub2RlX3N1bSBmcm9tIFwiLi9zdW0uanNcIjtcbmltcG9ydCBub2RlX3NvcnQgZnJvbSBcIi4vc29ydC5qc1wiO1xuaW1wb3J0IG5vZGVfcGF0aCBmcm9tIFwiLi9wYXRoLmpzXCI7XG5pbXBvcnQgbm9kZV9hbmNlc3RvcnMgZnJvbSBcIi4vYW5jZXN0b3JzLmpzXCI7XG5pbXBvcnQgbm9kZV9kZXNjZW5kYW50cyBmcm9tIFwiLi9kZXNjZW5kYW50cy5qc1wiO1xuaW1wb3J0IG5vZGVfbGVhdmVzIGZyb20gXCIuL2xlYXZlcy5qc1wiO1xuaW1wb3J0IG5vZGVfbGlua3MgZnJvbSBcIi4vbGlua3MuanNcIjtcbmltcG9ydCBub2RlX2l0ZXJhdG9yIGZyb20gXCIuL2l0ZXJhdG9yLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhpZXJhcmNoeShkYXRhLCBjaGlsZHJlbikge1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIE1hcCkge1xuICAgIGRhdGEgPSBbdW5kZWZpbmVkLCBkYXRhXTtcbiAgICBpZiAoY2hpbGRyZW4gPT09IHVuZGVmaW5lZCkgY2hpbGRyZW4gPSBtYXBDaGlsZHJlbjtcbiAgfSBlbHNlIGlmIChjaGlsZHJlbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2hpbGRyZW4gPSBvYmplY3RDaGlsZHJlbjtcbiAgfVxuXG4gIHZhciByb290ID0gbmV3IE5vZGUoZGF0YSksXG4gICAgICBub2RlLFxuICAgICAgbm9kZXMgPSBbcm9vdF0sXG4gICAgICBjaGlsZCxcbiAgICAgIGNoaWxkcyxcbiAgICAgIGksXG4gICAgICBuO1xuXG4gIHdoaWxlIChub2RlID0gbm9kZXMucG9wKCkpIHtcbiAgICBpZiAoKGNoaWxkcyA9IGNoaWxkcmVuKG5vZGUuZGF0YSkpICYmIChuID0gKGNoaWxkcyA9IEFycmF5LmZyb20oY2hpbGRzKSkubGVuZ3RoKSkge1xuICAgICAgbm9kZS5jaGlsZHJlbiA9IGNoaWxkcztcbiAgICAgIGZvciAoaSA9IG4gLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICBub2Rlcy5wdXNoKGNoaWxkID0gY2hpbGRzW2ldID0gbmV3IE5vZGUoY2hpbGRzW2ldKSk7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IG5vZGU7XG4gICAgICAgIGNoaWxkLmRlcHRoID0gbm9kZS5kZXB0aCArIDE7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJvb3QuZWFjaEJlZm9yZShjb21wdXRlSGVpZ2h0KTtcbn1cblxuZnVuY3Rpb24gbm9kZV9jb3B5KCkge1xuICByZXR1cm4gaGllcmFyY2h5KHRoaXMpLmVhY2hCZWZvcmUoY29weURhdGEpO1xufVxuXG5mdW5jdGlvbiBvYmplY3RDaGlsZHJlbihkKSB7XG4gIHJldHVybiBkLmNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBtYXBDaGlsZHJlbihkKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGQpID8gZFsxXSA6IG51bGw7XG59XG5cbmZ1bmN0aW9uIGNvcHlEYXRhKG5vZGUpIHtcbiAgaWYgKG5vZGUuZGF0YS52YWx1ZSAhPT0gdW5kZWZpbmVkKSBub2RlLnZhbHVlID0gbm9kZS5kYXRhLnZhbHVlO1xuICBub2RlLmRhdGEgPSBub2RlLmRhdGEuZGF0YTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVIZWlnaHQobm9kZSkge1xuICB2YXIgaGVpZ2h0ID0gMDtcbiAgZG8gbm9kZS5oZWlnaHQgPSBoZWlnaHQ7XG4gIHdoaWxlICgobm9kZSA9IG5vZGUucGFyZW50KSAmJiAobm9kZS5oZWlnaHQgPCArK2hlaWdodCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTm9kZShkYXRhKSB7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG4gIHRoaXMuZGVwdGggPVxuICB0aGlzLmhlaWdodCA9IDA7XG4gIHRoaXMucGFyZW50ID0gbnVsbDtcbn1cblxuTm9kZS5wcm90b3R5cGUgPSBoaWVyYXJjaHkucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogTm9kZSxcbiAgY291bnQ6IG5vZGVfY291bnQsXG4gIGVhY2g6IG5vZGVfZWFjaCxcbiAgZWFjaEFmdGVyOiBub2RlX2VhY2hBZnRlcixcbiAgZWFjaEJlZm9yZTogbm9kZV9lYWNoQmVmb3JlLFxuICBmaW5kOiBub2RlX2ZpbmQsXG4gIHN1bTogbm9kZV9zdW0sXG4gIHNvcnQ6IG5vZGVfc29ydCxcbiAgcGF0aDogbm9kZV9wYXRoLFxuICBhbmNlc3RvcnM6IG5vZGVfYW5jZXN0b3JzLFxuICBkZXNjZW5kYW50czogbm9kZV9kZXNjZW5kYW50cyxcbiAgbGVhdmVzOiBub2RlX2xlYXZlcyxcbiAgbGlua3M6IG5vZGVfbGlua3MsXG4gIGNvcHk6IG5vZGVfY29weSxcbiAgW1N5bWJvbC5pdGVyYXRvcl06IG5vZGVfaXRlcmF0b3Jcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiooKSB7XG4gIHZhciBub2RlID0gdGhpcywgY3VycmVudCwgbmV4dCA9IFtub2RlXSwgY2hpbGRyZW4sIGksIG47XG4gIGRvIHtcbiAgICBjdXJyZW50ID0gbmV4dC5yZXZlcnNlKCksIG5leHQgPSBbXTtcbiAgICB3aGlsZSAobm9kZSA9IGN1cnJlbnQucG9wKCkpIHtcbiAgICAgIHlpZWxkIG5vZGU7XG4gICAgICBpZiAoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSB7XG4gICAgICAgIGZvciAoaSA9IDAsIG4gPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBuZXh0LnB1c2goY2hpbGRyZW5baV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9IHdoaWxlIChuZXh0Lmxlbmd0aCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGxlYXZlcyA9IFtdO1xuICB0aGlzLmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkge1xuICAgIGlmICghbm9kZS5jaGlsZHJlbikge1xuICAgICAgbGVhdmVzLnB1c2gobm9kZSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGxlYXZlcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgcm9vdCA9IHRoaXMsIGxpbmtzID0gW107XG4gIHJvb3QuZWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUgIT09IHJvb3QpIHsgLy8gRG9u4oCZdCBpbmNsdWRlIHRoZSByb2904oCZcyBwYXJlbnQsIGlmIGFueS5cbiAgICAgIGxpbmtzLnB1c2goe3NvdXJjZTogbm9kZS5wYXJlbnQsIHRhcmdldDogbm9kZX0pO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBsaW5rcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGVuZCkge1xuICB2YXIgc3RhcnQgPSB0aGlzLFxuICAgICAgYW5jZXN0b3IgPSBsZWFzdENvbW1vbkFuY2VzdG9yKHN0YXJ0LCBlbmQpLFxuICAgICAgbm9kZXMgPSBbc3RhcnRdO1xuICB3aGlsZSAoc3RhcnQgIT09IGFuY2VzdG9yKSB7XG4gICAgc3RhcnQgPSBzdGFydC5wYXJlbnQ7XG4gICAgbm9kZXMucHVzaChzdGFydCk7XG4gIH1cbiAgdmFyIGsgPSBub2Rlcy5sZW5ndGg7XG4gIHdoaWxlIChlbmQgIT09IGFuY2VzdG9yKSB7XG4gICAgbm9kZXMuc3BsaWNlKGssIDAsIGVuZCk7XG4gICAgZW5kID0gZW5kLnBhcmVudDtcbiAgfVxuICByZXR1cm4gbm9kZXM7XG59XG5cbmZ1bmN0aW9uIGxlYXN0Q29tbW9uQW5jZXN0b3IoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIGE7XG4gIHZhciBhTm9kZXMgPSBhLmFuY2VzdG9ycygpLFxuICAgICAgYk5vZGVzID0gYi5hbmNlc3RvcnMoKSxcbiAgICAgIGMgPSBudWxsO1xuICBhID0gYU5vZGVzLnBvcCgpO1xuICBiID0gYk5vZGVzLnBvcCgpO1xuICB3aGlsZSAoYSA9PT0gYikge1xuICAgIGMgPSBhO1xuICAgIGEgPSBhTm9kZXMucG9wKCk7XG4gICAgYiA9IGJOb2Rlcy5wb3AoKTtcbiAgfVxuICByZXR1cm4gYztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbXBhcmUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIG5vZGUuY2hpbGRyZW4uc29ydChjb21wYXJlKTtcbiAgICB9XG4gIH0pO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICB2YXIgc3VtID0gK3ZhbHVlKG5vZGUuZGF0YSkgfHwgMCxcbiAgICAgICAgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLFxuICAgICAgICBpID0gY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoO1xuICAgIHdoaWxlICgtLWkgPj0gMCkgc3VtICs9IGNoaWxkcmVuW2ldLnZhbHVlO1xuICAgIG5vZGUudmFsdWUgPSBzdW07XG4gIH0pO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNsdXN0ZXJ9IGZyb20gXCIuL2NsdXN0ZXIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBoaWVyYXJjaHl9IGZyb20gXCIuL2hpZXJhcmNoeS9pbmRleC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBhY2t9IGZyb20gXCIuL3BhY2svaW5kZXguanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwYWNrU2libGluZ3N9IGZyb20gXCIuL3BhY2svc2libGluZ3MuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwYWNrRW5jbG9zZX0gZnJvbSBcIi4vcGFjay9lbmNsb3NlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGFydGl0aW9ufSBmcm9tIFwiLi9wYXJ0aXRpb24uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdHJhdGlmeX0gZnJvbSBcIi4vc3RyYXRpZnkuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0cmVlfSBmcm9tIFwiLi90cmVlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcH0gZnJvbSBcIi4vdHJlZW1hcC9pbmRleC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBCaW5hcnl9IGZyb20gXCIuL3RyZWVtYXAvYmluYXJ5LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcERpY2V9IGZyb20gXCIuL3RyZWVtYXAvZGljZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBTbGljZX0gZnJvbSBcIi4vdHJlZW1hcC9zbGljZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyZWVtYXBTbGljZURpY2V9IGZyb20gXCIuL3RyZWVtYXAvc2xpY2VEaWNlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcFNxdWFyaWZ5fSBmcm9tIFwiLi90cmVlbWFwL3NxdWFyaWZ5LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgdHJlZW1hcFJlc3F1YXJpZnl9IGZyb20gXCIuL3RyZWVtYXAvcmVzcXVhcmlmeS5qc1wiO1xuIiwiaW1wb3J0IHtzaHVmZmxlfSBmcm9tIFwiLi4vYXJyYXkuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2lyY2xlcykge1xuICB2YXIgaSA9IDAsIG4gPSAoY2lyY2xlcyA9IHNodWZmbGUoQXJyYXkuZnJvbShjaXJjbGVzKSkpLmxlbmd0aCwgQiA9IFtdLCBwLCBlO1xuXG4gIHdoaWxlIChpIDwgbikge1xuICAgIHAgPSBjaXJjbGVzW2ldO1xuICAgIGlmIChlICYmIGVuY2xvc2VzV2VhayhlLCBwKSkgKytpO1xuICAgIGVsc2UgZSA9IGVuY2xvc2VCYXNpcyhCID0gZXh0ZW5kQmFzaXMoQiwgcCkpLCBpID0gMDtcbiAgfVxuXG4gIHJldHVybiBlO1xufVxuXG5mdW5jdGlvbiBleHRlbmRCYXNpcyhCLCBwKSB7XG4gIHZhciBpLCBqO1xuXG4gIGlmIChlbmNsb3Nlc1dlYWtBbGwocCwgQikpIHJldHVybiBbcF07XG5cbiAgLy8gSWYgd2UgZ2V0IGhlcmUgdGhlbiBCIG11c3QgaGF2ZSBhdCBsZWFzdCBvbmUgZWxlbWVudC5cbiAgZm9yIChpID0gMDsgaSA8IEIubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoZW5jbG9zZXNOb3QocCwgQltpXSlcbiAgICAgICAgJiYgZW5jbG9zZXNXZWFrQWxsKGVuY2xvc2VCYXNpczIoQltpXSwgcCksIEIpKSB7XG4gICAgICByZXR1cm4gW0JbaV0sIHBdO1xuICAgIH1cbiAgfVxuXG4gIC8vIElmIHdlIGdldCBoZXJlIHRoZW4gQiBtdXN0IGhhdmUgYXQgbGVhc3QgdHdvIGVsZW1lbnRzLlxuICBmb3IgKGkgPSAwOyBpIDwgQi5sZW5ndGggLSAxOyArK2kpIHtcbiAgICBmb3IgKGogPSBpICsgMTsgaiA8IEIubGVuZ3RoOyArK2opIHtcbiAgICAgIGlmIChlbmNsb3Nlc05vdChlbmNsb3NlQmFzaXMyKEJbaV0sIEJbal0pLCBwKVxuICAgICAgICAgICYmIGVuY2xvc2VzTm90KGVuY2xvc2VCYXNpczIoQltpXSwgcCksIEJbal0pXG4gICAgICAgICAgJiYgZW5jbG9zZXNOb3QoZW5jbG9zZUJhc2lzMihCW2pdLCBwKSwgQltpXSlcbiAgICAgICAgICAmJiBlbmNsb3Nlc1dlYWtBbGwoZW5jbG9zZUJhc2lzMyhCW2ldLCBCW2pdLCBwKSwgQikpIHtcbiAgICAgICAgcmV0dXJuIFtCW2ldLCBCW2pdLCBwXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBJZiB3ZSBnZXQgaGVyZSB0aGVuIHNvbWV0aGluZyBpcyB2ZXJ5IHdyb25nLlxuICB0aHJvdyBuZXcgRXJyb3I7XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VzTm90KGEsIGIpIHtcbiAgdmFyIGRyID0gYS5yIC0gYi5yLCBkeCA9IGIueCAtIGEueCwgZHkgPSBiLnkgLSBhLnk7XG4gIHJldHVybiBkciA8IDAgfHwgZHIgKiBkciA8IGR4ICogZHggKyBkeSAqIGR5O1xufVxuXG5mdW5jdGlvbiBlbmNsb3Nlc1dlYWsoYSwgYikge1xuICB2YXIgZHIgPSBhLnIgLSBiLnIgKyBNYXRoLm1heChhLnIsIGIuciwgMSkgKiAxZS05LCBkeCA9IGIueCAtIGEueCwgZHkgPSBiLnkgLSBhLnk7XG4gIHJldHVybiBkciA+IDAgJiYgZHIgKiBkciA+IGR4ICogZHggKyBkeSAqIGR5O1xufVxuXG5mdW5jdGlvbiBlbmNsb3Nlc1dlYWtBbGwoYSwgQikge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IEIubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoIWVuY2xvc2VzV2VhayhhLCBCW2ldKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gZW5jbG9zZUJhc2lzKEIpIHtcbiAgc3dpdGNoIChCLmxlbmd0aCkge1xuICAgIGNhc2UgMTogcmV0dXJuIGVuY2xvc2VCYXNpczEoQlswXSk7XG4gICAgY2FzZSAyOiByZXR1cm4gZW5jbG9zZUJhc2lzMihCWzBdLCBCWzFdKTtcbiAgICBjYXNlIDM6IHJldHVybiBlbmNsb3NlQmFzaXMzKEJbMF0sIEJbMV0sIEJbMl0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VCYXNpczEoYSkge1xuICByZXR1cm4ge1xuICAgIHg6IGEueCxcbiAgICB5OiBhLnksXG4gICAgcjogYS5yXG4gIH07XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VCYXNpczIoYSwgYikge1xuICB2YXIgeDEgPSBhLngsIHkxID0gYS55LCByMSA9IGEucixcbiAgICAgIHgyID0gYi54LCB5MiA9IGIueSwgcjIgPSBiLnIsXG4gICAgICB4MjEgPSB4MiAtIHgxLCB5MjEgPSB5MiAtIHkxLCByMjEgPSByMiAtIHIxLFxuICAgICAgbCA9IE1hdGguc3FydCh4MjEgKiB4MjEgKyB5MjEgKiB5MjEpO1xuICByZXR1cm4ge1xuICAgIHg6ICh4MSArIHgyICsgeDIxIC8gbCAqIHIyMSkgLyAyLFxuICAgIHk6ICh5MSArIHkyICsgeTIxIC8gbCAqIHIyMSkgLyAyLFxuICAgIHI6IChsICsgcjEgKyByMikgLyAyXG4gIH07XG59XG5cbmZ1bmN0aW9uIGVuY2xvc2VCYXNpczMoYSwgYiwgYykge1xuICB2YXIgeDEgPSBhLngsIHkxID0gYS55LCByMSA9IGEucixcbiAgICAgIHgyID0gYi54LCB5MiA9IGIueSwgcjIgPSBiLnIsXG4gICAgICB4MyA9IGMueCwgeTMgPSBjLnksIHIzID0gYy5yLFxuICAgICAgYTIgPSB4MSAtIHgyLFxuICAgICAgYTMgPSB4MSAtIHgzLFxuICAgICAgYjIgPSB5MSAtIHkyLFxuICAgICAgYjMgPSB5MSAtIHkzLFxuICAgICAgYzIgPSByMiAtIHIxLFxuICAgICAgYzMgPSByMyAtIHIxLFxuICAgICAgZDEgPSB4MSAqIHgxICsgeTEgKiB5MSAtIHIxICogcjEsXG4gICAgICBkMiA9IGQxIC0geDIgKiB4MiAtIHkyICogeTIgKyByMiAqIHIyLFxuICAgICAgZDMgPSBkMSAtIHgzICogeDMgLSB5MyAqIHkzICsgcjMgKiByMyxcbiAgICAgIGFiID0gYTMgKiBiMiAtIGEyICogYjMsXG4gICAgICB4YSA9IChiMiAqIGQzIC0gYjMgKiBkMikgLyAoYWIgKiAyKSAtIHgxLFxuICAgICAgeGIgPSAoYjMgKiBjMiAtIGIyICogYzMpIC8gYWIsXG4gICAgICB5YSA9IChhMyAqIGQyIC0gYTIgKiBkMykgLyAoYWIgKiAyKSAtIHkxLFxuICAgICAgeWIgPSAoYTIgKiBjMyAtIGEzICogYzIpIC8gYWIsXG4gICAgICBBID0geGIgKiB4YiArIHliICogeWIgLSAxLFxuICAgICAgQiA9IDIgKiAocjEgKyB4YSAqIHhiICsgeWEgKiB5YiksXG4gICAgICBDID0geGEgKiB4YSArIHlhICogeWEgLSByMSAqIHIxLFxuICAgICAgciA9IC0oQSA/IChCICsgTWF0aC5zcXJ0KEIgKiBCIC0gNCAqIEEgKiBDKSkgLyAoMiAqIEEpIDogQyAvIEIpO1xuICByZXR1cm4ge1xuICAgIHg6IHgxICsgeGEgKyB4YiAqIHIsXG4gICAgeTogeTEgKyB5YSArIHliICogcixcbiAgICByOiByXG4gIH07XG59XG4iLCJpbXBvcnQge3BhY2tFbmNsb3NlfSBmcm9tIFwiLi9zaWJsaW5ncy5qc1wiO1xuaW1wb3J0IHtvcHRpb25hbH0gZnJvbSBcIi4uL2FjY2Vzc29ycy5qc1wiO1xuaW1wb3J0IGNvbnN0YW50LCB7Y29uc3RhbnRaZXJvfSBmcm9tIFwiLi4vY29uc3RhbnQuanNcIjtcblxuZnVuY3Rpb24gZGVmYXVsdFJhZGl1cyhkKSB7XG4gIHJldHVybiBNYXRoLnNxcnQoZC52YWx1ZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgcmFkaXVzID0gbnVsbCxcbiAgICAgIGR4ID0gMSxcbiAgICAgIGR5ID0gMSxcbiAgICAgIHBhZGRpbmcgPSBjb25zdGFudFplcm87XG5cbiAgZnVuY3Rpb24gcGFjayhyb290KSB7XG4gICAgcm9vdC54ID0gZHggLyAyLCByb290LnkgPSBkeSAvIDI7XG4gICAgaWYgKHJhZGl1cykge1xuICAgICAgcm9vdC5lYWNoQmVmb3JlKHJhZGl1c0xlYWYocmFkaXVzKSlcbiAgICAgICAgICAuZWFjaEFmdGVyKHBhY2tDaGlsZHJlbihwYWRkaW5nLCAwLjUpKVxuICAgICAgICAgIC5lYWNoQmVmb3JlKHRyYW5zbGF0ZUNoaWxkKDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcm9vdC5lYWNoQmVmb3JlKHJhZGl1c0xlYWYoZGVmYXVsdFJhZGl1cykpXG4gICAgICAgICAgLmVhY2hBZnRlcihwYWNrQ2hpbGRyZW4oY29uc3RhbnRaZXJvLCAxKSlcbiAgICAgICAgICAuZWFjaEFmdGVyKHBhY2tDaGlsZHJlbihwYWRkaW5nLCByb290LnIgLyBNYXRoLm1pbihkeCwgZHkpKSlcbiAgICAgICAgICAuZWFjaEJlZm9yZSh0cmFuc2xhdGVDaGlsZChNYXRoLm1pbihkeCwgZHkpIC8gKDIgKiByb290LnIpKSk7XG4gICAgfVxuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgcGFjay5yYWRpdXMgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFkaXVzID0gb3B0aW9uYWwoeCksIHBhY2spIDogcmFkaXVzO1xuICB9O1xuXG4gIHBhY2suc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkeCA9ICt4WzBdLCBkeSA9ICt4WzFdLCBwYWNrKSA6IFtkeCwgZHldO1xuICB9O1xuXG4gIHBhY2sucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBjb25zdGFudCgreCksIHBhY2spIDogcGFkZGluZztcbiAgfTtcblxuICByZXR1cm4gcGFjaztcbn1cblxuZnVuY3Rpb24gcmFkaXVzTGVhZihyYWRpdXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIG5vZGUuciA9IE1hdGgubWF4KDAsICtyYWRpdXMobm9kZSkgfHwgMCk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBwYWNrQ2hpbGRyZW4ocGFkZGluZywgaykge1xuICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgIGlmIChjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW4pIHtcbiAgICAgIHZhciBjaGlsZHJlbixcbiAgICAgICAgICBpLFxuICAgICAgICAgIG4gPSBjaGlsZHJlbi5sZW5ndGgsXG4gICAgICAgICAgciA9IHBhZGRpbmcobm9kZSkgKiBrIHx8IDAsXG4gICAgICAgICAgZTtcblxuICAgICAgaWYgKHIpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIGNoaWxkcmVuW2ldLnIgKz0gcjtcbiAgICAgIGUgPSBwYWNrRW5jbG9zZShjaGlsZHJlbik7XG4gICAgICBpZiAocikgZm9yIChpID0gMDsgaSA8IG47ICsraSkgY2hpbGRyZW5baV0uciAtPSByO1xuICAgICAgbm9kZS5yID0gZSArIHI7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGVDaGlsZChrKSB7XG4gIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIHBhcmVudCA9IG5vZGUucGFyZW50O1xuICAgIG5vZGUuciAqPSBrO1xuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIG5vZGUueCA9IHBhcmVudC54ICsgayAqIG5vZGUueDtcbiAgICAgIG5vZGUueSA9IHBhcmVudC55ICsgayAqIG5vZGUueTtcbiAgICB9XG4gIH07XG59XG4iLCJpbXBvcnQgYXJyYXkgZnJvbSBcIi4uL2FycmF5LmpzXCI7XG5pbXBvcnQgZW5jbG9zZSBmcm9tIFwiLi9lbmNsb3NlLmpzXCI7XG5cbmZ1bmN0aW9uIHBsYWNlKGIsIGEsIGMpIHtcbiAgdmFyIGR4ID0gYi54IC0gYS54LCB4LCBhMixcbiAgICAgIGR5ID0gYi55IC0gYS55LCB5LCBiMixcbiAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gIGlmIChkMikge1xuICAgIGEyID0gYS5yICsgYy5yLCBhMiAqPSBhMjtcbiAgICBiMiA9IGIuciArIGMuciwgYjIgKj0gYjI7XG4gICAgaWYgKGEyID4gYjIpIHtcbiAgICAgIHggPSAoZDIgKyBiMiAtIGEyKSAvICgyICogZDIpO1xuICAgICAgeSA9IE1hdGguc3FydChNYXRoLm1heCgwLCBiMiAvIGQyIC0geCAqIHgpKTtcbiAgICAgIGMueCA9IGIueCAtIHggKiBkeCAtIHkgKiBkeTtcbiAgICAgIGMueSA9IGIueSAtIHggKiBkeSArIHkgKiBkeDtcbiAgICB9IGVsc2Uge1xuICAgICAgeCA9IChkMiArIGEyIC0gYjIpIC8gKDIgKiBkMik7XG4gICAgICB5ID0gTWF0aC5zcXJ0KE1hdGgubWF4KDAsIGEyIC8gZDIgLSB4ICogeCkpO1xuICAgICAgYy54ID0gYS54ICsgeCAqIGR4IC0geSAqIGR5O1xuICAgICAgYy55ID0gYS55ICsgeCAqIGR5ICsgeSAqIGR4O1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBjLnggPSBhLnggKyBjLnI7XG4gICAgYy55ID0gYS55O1xuICB9XG59XG5cbmZ1bmN0aW9uIGludGVyc2VjdHMoYSwgYikge1xuICB2YXIgZHIgPSBhLnIgKyBiLnIgLSAxZS02LCBkeCA9IGIueCAtIGEueCwgZHkgPSBiLnkgLSBhLnk7XG4gIHJldHVybiBkciA+IDAgJiYgZHIgKiBkciA+IGR4ICogZHggKyBkeSAqIGR5O1xufVxuXG5mdW5jdGlvbiBzY29yZShub2RlKSB7XG4gIHZhciBhID0gbm9kZS5fLFxuICAgICAgYiA9IG5vZGUubmV4dC5fLFxuICAgICAgYWIgPSBhLnIgKyBiLnIsXG4gICAgICBkeCA9IChhLnggKiBiLnIgKyBiLnggKiBhLnIpIC8gYWIsXG4gICAgICBkeSA9IChhLnkgKiBiLnIgKyBiLnkgKiBhLnIpIC8gYWI7XG4gIHJldHVybiBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuZnVuY3Rpb24gTm9kZShjaXJjbGUpIHtcbiAgdGhpcy5fID0gY2lyY2xlO1xuICB0aGlzLm5leHQgPSBudWxsO1xuICB0aGlzLnByZXZpb3VzID0gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhY2tFbmNsb3NlKGNpcmNsZXMpIHtcbiAgaWYgKCEobiA9IChjaXJjbGVzID0gYXJyYXkoY2lyY2xlcykpLmxlbmd0aCkpIHJldHVybiAwO1xuXG4gIHZhciBhLCBiLCBjLCBuLCBhYSwgY2EsIGksIGosIGssIHNqLCBzaztcblxuICAvLyBQbGFjZSB0aGUgZmlyc3QgY2lyY2xlLlxuICBhID0gY2lyY2xlc1swXSwgYS54ID0gMCwgYS55ID0gMDtcbiAgaWYgKCEobiA+IDEpKSByZXR1cm4gYS5yO1xuXG4gIC8vIFBsYWNlIHRoZSBzZWNvbmQgY2lyY2xlLlxuICBiID0gY2lyY2xlc1sxXSwgYS54ID0gLWIuciwgYi54ID0gYS5yLCBiLnkgPSAwO1xuICBpZiAoIShuID4gMikpIHJldHVybiBhLnIgKyBiLnI7XG5cbiAgLy8gUGxhY2UgdGhlIHRoaXJkIGNpcmNsZS5cbiAgcGxhY2UoYiwgYSwgYyA9IGNpcmNsZXNbMl0pO1xuXG4gIC8vIEluaXRpYWxpemUgdGhlIGZyb250LWNoYWluIHVzaW5nIHRoZSBmaXJzdCB0aHJlZSBjaXJjbGVzIGEsIGIgYW5kIGMuXG4gIGEgPSBuZXcgTm9kZShhKSwgYiA9IG5ldyBOb2RlKGIpLCBjID0gbmV3IE5vZGUoYyk7XG4gIGEubmV4dCA9IGMucHJldmlvdXMgPSBiO1xuICBiLm5leHQgPSBhLnByZXZpb3VzID0gYztcbiAgYy5uZXh0ID0gYi5wcmV2aW91cyA9IGE7XG5cbiAgLy8gQXR0ZW1wdCB0byBwbGFjZSBlYWNoIHJlbWFpbmluZyBjaXJjbGXigKZcbiAgcGFjazogZm9yIChpID0gMzsgaSA8IG47ICsraSkge1xuICAgIHBsYWNlKGEuXywgYi5fLCBjID0gY2lyY2xlc1tpXSksIGMgPSBuZXcgTm9kZShjKTtcblxuICAgIC8vIEZpbmQgdGhlIGNsb3Nlc3QgaW50ZXJzZWN0aW5nIGNpcmNsZSBvbiB0aGUgZnJvbnQtY2hhaW4sIGlmIGFueS5cbiAgICAvLyDigJxDbG9zZW5lc3PigJ0gaXMgZGV0ZXJtaW5lZCBieSBsaW5lYXIgZGlzdGFuY2UgYWxvbmcgdGhlIGZyb250LWNoYWluLlxuICAgIC8vIOKAnEFoZWFk4oCdIG9yIOKAnGJlaGluZOKAnSBpcyBsaWtld2lzZSBkZXRlcm1pbmVkIGJ5IGxpbmVhciBkaXN0YW5jZS5cbiAgICBqID0gYi5uZXh0LCBrID0gYS5wcmV2aW91cywgc2ogPSBiLl8uciwgc2sgPSBhLl8ucjtcbiAgICBkbyB7XG4gICAgICBpZiAoc2ogPD0gc2spIHtcbiAgICAgICAgaWYgKGludGVyc2VjdHMoai5fLCBjLl8pKSB7XG4gICAgICAgICAgYiA9IGosIGEubmV4dCA9IGIsIGIucHJldmlvdXMgPSBhLCAtLWk7XG4gICAgICAgICAgY29udGludWUgcGFjaztcbiAgICAgICAgfVxuICAgICAgICBzaiArPSBqLl8uciwgaiA9IGoubmV4dDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChpbnRlcnNlY3RzKGsuXywgYy5fKSkge1xuICAgICAgICAgIGEgPSBrLCBhLm5leHQgPSBiLCBiLnByZXZpb3VzID0gYSwgLS1pO1xuICAgICAgICAgIGNvbnRpbnVlIHBhY2s7XG4gICAgICAgIH1cbiAgICAgICAgc2sgKz0gay5fLnIsIGsgPSBrLnByZXZpb3VzO1xuICAgICAgfVxuICAgIH0gd2hpbGUgKGogIT09IGsubmV4dCk7XG5cbiAgICAvLyBTdWNjZXNzISBJbnNlcnQgdGhlIG5ldyBjaXJjbGUgYyBiZXR3ZWVuIGEgYW5kIGIuXG4gICAgYy5wcmV2aW91cyA9IGEsIGMubmV4dCA9IGIsIGEubmV4dCA9IGIucHJldmlvdXMgPSBiID0gYztcblxuICAgIC8vIENvbXB1dGUgdGhlIG5ldyBjbG9zZXN0IGNpcmNsZSBwYWlyIHRvIHRoZSBjZW50cm9pZC5cbiAgICBhYSA9IHNjb3JlKGEpO1xuICAgIHdoaWxlICgoYyA9IGMubmV4dCkgIT09IGIpIHtcbiAgICAgIGlmICgoY2EgPSBzY29yZShjKSkgPCBhYSkge1xuICAgICAgICBhID0gYywgYWEgPSBjYTtcbiAgICAgIH1cbiAgICB9XG4gICAgYiA9IGEubmV4dDtcbiAgfVxuXG4gIC8vIENvbXB1dGUgdGhlIGVuY2xvc2luZyBjaXJjbGUgb2YgdGhlIGZyb250IGNoYWluLlxuICBhID0gW2IuX10sIGMgPSBiOyB3aGlsZSAoKGMgPSBjLm5leHQpICE9PSBiKSBhLnB1c2goYy5fKTsgYyA9IGVuY2xvc2UoYSk7XG5cbiAgLy8gVHJhbnNsYXRlIHRoZSBjaXJjbGVzIHRvIHB1dCB0aGUgZW5jbG9zaW5nIGNpcmNsZSBhcm91bmQgdGhlIG9yaWdpbi5cbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgYSA9IGNpcmNsZXNbaV0sIGEueCAtPSBjLngsIGEueSAtPSBjLnk7XG5cbiAgcmV0dXJuIGMucjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY2lyY2xlcykge1xuICBwYWNrRW5jbG9zZShjaXJjbGVzKTtcbiAgcmV0dXJuIGNpcmNsZXM7XG59XG4iLCJpbXBvcnQgcm91bmROb2RlIGZyb20gXCIuL3RyZWVtYXAvcm91bmQuanNcIjtcbmltcG9ydCB0cmVlbWFwRGljZSBmcm9tIFwiLi90cmVlbWFwL2RpY2UuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nID0gMCxcbiAgICAgIHJvdW5kID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gcGFydGl0aW9uKHJvb3QpIHtcbiAgICB2YXIgbiA9IHJvb3QuaGVpZ2h0ICsgMTtcbiAgICByb290LngwID1cbiAgICByb290LnkwID0gcGFkZGluZztcbiAgICByb290LngxID0gZHg7XG4gICAgcm9vdC55MSA9IGR5IC8gbjtcbiAgICByb290LmVhY2hCZWZvcmUocG9zaXRpb25Ob2RlKGR5LCBuKSk7XG4gICAgaWYgKHJvdW5kKSByb290LmVhY2hCZWZvcmUocm91bmROb2RlKTtcbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBvc2l0aW9uTm9kZShkeSwgbikge1xuICAgIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBpZiAobm9kZS5jaGlsZHJlbikge1xuICAgICAgICB0cmVlbWFwRGljZShub2RlLCBub2RlLngwLCBkeSAqIChub2RlLmRlcHRoICsgMSkgLyBuLCBub2RlLngxLCBkeSAqIChub2RlLmRlcHRoICsgMikgLyBuKTtcbiAgICAgIH1cbiAgICAgIHZhciB4MCA9IG5vZGUueDAsXG4gICAgICAgICAgeTAgPSBub2RlLnkwLFxuICAgICAgICAgIHgxID0gbm9kZS54MSAtIHBhZGRpbmcsXG4gICAgICAgICAgeTEgPSBub2RlLnkxIC0gcGFkZGluZztcbiAgICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICAgIGlmICh5MSA8IHkwKSB5MCA9IHkxID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIG5vZGUueDAgPSB4MDtcbiAgICAgIG5vZGUueTAgPSB5MDtcbiAgICAgIG5vZGUueDEgPSB4MTtcbiAgICAgIG5vZGUueTEgPSB5MTtcbiAgICB9O1xuICB9XG5cbiAgcGFydGl0aW9uLnJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdW5kID0gISF4LCBwYXJ0aXRpb24pIDogcm91bmQ7XG4gIH07XG5cbiAgcGFydGl0aW9uLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZHggPSAreFswXSwgZHkgPSAreFsxXSwgcGFydGl0aW9uKSA6IFtkeCwgZHldO1xuICB9O1xuXG4gIHBhcnRpdGlvbi5wYWRkaW5nID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmcgPSAreCwgcGFydGl0aW9uKSA6IHBhZGRpbmc7XG4gIH07XG5cbiAgcmV0dXJuIHBhcnRpdGlvbjtcbn1cbiIsImltcG9ydCB7cmVxdWlyZWR9IGZyb20gXCIuL2FjY2Vzc29ycy5qc1wiO1xuaW1wb3J0IHtOb2RlLCBjb21wdXRlSGVpZ2h0fSBmcm9tIFwiLi9oaWVyYXJjaHkvaW5kZXguanNcIjtcblxudmFyIHByZXJvb3QgPSB7ZGVwdGg6IC0xfSxcbiAgICBhbWJpZ3VvdXMgPSB7fTtcblxuZnVuY3Rpb24gZGVmYXVsdElkKGQpIHtcbiAgcmV0dXJuIGQuaWQ7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQYXJlbnRJZChkKSB7XG4gIHJldHVybiBkLnBhcmVudElkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGlkID0gZGVmYXVsdElkLFxuICAgICAgcGFyZW50SWQgPSBkZWZhdWx0UGFyZW50SWQ7XG5cbiAgZnVuY3Rpb24gc3RyYXRpZnkoZGF0YSkge1xuICAgIHZhciBub2RlcyA9IEFycmF5LmZyb20oZGF0YSksXG4gICAgICAgIG4gPSBub2Rlcy5sZW5ndGgsXG4gICAgICAgIGQsXG4gICAgICAgIGksXG4gICAgICAgIHJvb3QsXG4gICAgICAgIHBhcmVudCxcbiAgICAgICAgbm9kZSxcbiAgICAgICAgbm9kZUlkLFxuICAgICAgICBub2RlS2V5LFxuICAgICAgICBub2RlQnlLZXkgPSBuZXcgTWFwO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgZCA9IG5vZGVzW2ldLCBub2RlID0gbm9kZXNbaV0gPSBuZXcgTm9kZShkKTtcbiAgICAgIGlmICgobm9kZUlkID0gaWQoZCwgaSwgZGF0YSkpICE9IG51bGwgJiYgKG5vZGVJZCArPSBcIlwiKSkge1xuICAgICAgICBub2RlS2V5ID0gbm9kZS5pZCA9IG5vZGVJZDtcbiAgICAgICAgbm9kZUJ5S2V5LnNldChub2RlS2V5LCBub2RlQnlLZXkuaGFzKG5vZGVLZXkpID8gYW1iaWd1b3VzIDogbm9kZSk7XG4gICAgICB9XG4gICAgICBpZiAoKG5vZGVJZCA9IHBhcmVudElkKGQsIGksIGRhdGEpKSAhPSBudWxsICYmIChub2RlSWQgKz0gXCJcIikpIHtcbiAgICAgICAgbm9kZS5wYXJlbnQgPSBub2RlSWQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgaWYgKG5vZGVJZCA9IG5vZGUucGFyZW50KSB7XG4gICAgICAgIHBhcmVudCA9IG5vZGVCeUtleS5nZXQobm9kZUlkKTtcbiAgICAgICAgaWYgKCFwYXJlbnQpIHRocm93IG5ldyBFcnJvcihcIm1pc3Npbmc6IFwiICsgbm9kZUlkKTtcbiAgICAgICAgaWYgKHBhcmVudCA9PT0gYW1iaWd1b3VzKSB0aHJvdyBuZXcgRXJyb3IoXCJhbWJpZ3VvdXM6IFwiICsgbm9kZUlkKTtcbiAgICAgICAgaWYgKHBhcmVudC5jaGlsZHJlbikgcGFyZW50LmNoaWxkcmVuLnB1c2gobm9kZSk7XG4gICAgICAgIGVsc2UgcGFyZW50LmNoaWxkcmVuID0gW25vZGVdO1xuICAgICAgICBub2RlLnBhcmVudCA9IHBhcmVudDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChyb290KSB0aHJvdyBuZXcgRXJyb3IoXCJtdWx0aXBsZSByb290c1wiKTtcbiAgICAgICAgcm9vdCA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFyb290KSB0aHJvdyBuZXcgRXJyb3IoXCJubyByb290XCIpO1xuICAgIHJvb3QucGFyZW50ID0gcHJlcm9vdDtcbiAgICByb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkgeyBub2RlLmRlcHRoID0gbm9kZS5wYXJlbnQuZGVwdGggKyAxOyAtLW47IH0pLmVhY2hCZWZvcmUoY29tcHV0ZUhlaWdodCk7XG4gICAgcm9vdC5wYXJlbnQgPSBudWxsO1xuICAgIGlmIChuID4gMCkgdGhyb3cgbmV3IEVycm9yKFwiY3ljbGVcIik7XG5cbiAgICByZXR1cm4gcm9vdDtcbiAgfVxuXG4gIHN0cmF0aWZ5LmlkID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGlkID0gcmVxdWlyZWQoeCksIHN0cmF0aWZ5KSA6IGlkO1xuICB9O1xuXG4gIHN0cmF0aWZ5LnBhcmVudElkID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhcmVudElkID0gcmVxdWlyZWQoeCksIHN0cmF0aWZ5KSA6IHBhcmVudElkO1xuICB9O1xuXG4gIHJldHVybiBzdHJhdGlmeTtcbn1cbiIsImltcG9ydCB7Tm9kZX0gZnJvbSBcIi4vaGllcmFyY2h5L2luZGV4LmpzXCI7XG5cbmZ1bmN0aW9uIGRlZmF1bHRTZXBhcmF0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEucGFyZW50ID09PSBiLnBhcmVudCA/IDEgOiAyO1xufVxuXG4vLyBmdW5jdGlvbiByYWRpYWxTZXBhcmF0aW9uKGEsIGIpIHtcbi8vICAgcmV0dXJuIChhLnBhcmVudCA9PT0gYi5wYXJlbnQgPyAxIDogMikgLyBhLmRlcHRoO1xuLy8gfVxuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgdG8gdHJhdmVyc2UgdGhlIGxlZnQgY29udG91ciBvZiBhIHN1YnRyZWUgKG9yXG4vLyBzdWJmb3Jlc3QpLiBJdCByZXR1cm5zIHRoZSBzdWNjZXNzb3Igb2YgdiBvbiB0aGlzIGNvbnRvdXIuIFRoaXMgc3VjY2Vzc29yIGlzXG4vLyBlaXRoZXIgZ2l2ZW4gYnkgdGhlIGxlZnRtb3N0IGNoaWxkIG9mIHYgb3IgYnkgdGhlIHRocmVhZCBvZiB2LiBUaGUgZnVuY3Rpb25cbi8vIHJldHVybnMgbnVsbCBpZiBhbmQgb25seSBpZiB2IGlzIG9uIHRoZSBoaWdoZXN0IGxldmVsIG9mIGl0cyBzdWJ0cmVlLlxuZnVuY3Rpb24gbmV4dExlZnQodikge1xuICB2YXIgY2hpbGRyZW4gPSB2LmNoaWxkcmVuO1xuICByZXR1cm4gY2hpbGRyZW4gPyBjaGlsZHJlblswXSA6IHYudDtcbn1cblxuLy8gVGhpcyBmdW5jdGlvbiB3b3JrcyBhbmFsb2dvdXNseSB0byBuZXh0TGVmdC5cbmZ1bmN0aW9uIG5leHRSaWdodCh2KSB7XG4gIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW47XG4gIHJldHVybiBjaGlsZHJlbiA/IGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdIDogdi50O1xufVxuXG4vLyBTaGlmdHMgdGhlIGN1cnJlbnQgc3VidHJlZSByb290ZWQgYXQgdysuIFRoaXMgaXMgZG9uZSBieSBpbmNyZWFzaW5nXG4vLyBwcmVsaW0odyspIGFuZCBtb2QodyspIGJ5IHNoaWZ0LlxuZnVuY3Rpb24gbW92ZVN1YnRyZWUod20sIHdwLCBzaGlmdCkge1xuICB2YXIgY2hhbmdlID0gc2hpZnQgLyAod3AuaSAtIHdtLmkpO1xuICB3cC5jIC09IGNoYW5nZTtcbiAgd3AucyArPSBzaGlmdDtcbiAgd20uYyArPSBjaGFuZ2U7XG4gIHdwLnogKz0gc2hpZnQ7XG4gIHdwLm0gKz0gc2hpZnQ7XG59XG5cbi8vIEFsbCBvdGhlciBzaGlmdHMsIGFwcGxpZWQgdG8gdGhlIHNtYWxsZXIgc3VidHJlZXMgYmV0d2VlbiB3LSBhbmQgdyssIGFyZVxuLy8gcGVyZm9ybWVkIGJ5IHRoaXMgZnVuY3Rpb24uIFRvIHByZXBhcmUgdGhlIHNoaWZ0cywgd2UgaGF2ZSB0byBhZGp1c3Rcbi8vIGNoYW5nZSh3KyksIHNoaWZ0KHcrKSwgYW5kIGNoYW5nZSh3LSkuXG5mdW5jdGlvbiBleGVjdXRlU2hpZnRzKHYpIHtcbiAgdmFyIHNoaWZ0ID0gMCxcbiAgICAgIGNoYW5nZSA9IDAsXG4gICAgICBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sXG4gICAgICBpID0gY2hpbGRyZW4ubGVuZ3RoLFxuICAgICAgdztcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgdyA9IGNoaWxkcmVuW2ldO1xuICAgIHcueiArPSBzaGlmdDtcbiAgICB3Lm0gKz0gc2hpZnQ7XG4gICAgc2hpZnQgKz0gdy5zICsgKGNoYW5nZSArPSB3LmMpO1xuICB9XG59XG5cbi8vIElmIHZpLeKAmXMgYW5jZXN0b3IgaXMgYSBzaWJsaW5nIG9mIHYsIHJldHVybnMgdmkt4oCZcyBhbmNlc3Rvci4gT3RoZXJ3aXNlLFxuLy8gcmV0dXJucyB0aGUgc3BlY2lmaWVkIChkZWZhdWx0KSBhbmNlc3Rvci5cbmZ1bmN0aW9uIG5leHRBbmNlc3Rvcih2aW0sIHYsIGFuY2VzdG9yKSB7XG4gIHJldHVybiB2aW0uYS5wYXJlbnQgPT09IHYucGFyZW50ID8gdmltLmEgOiBhbmNlc3Rvcjtcbn1cblxuZnVuY3Rpb24gVHJlZU5vZGUobm9kZSwgaSkge1xuICB0aGlzLl8gPSBub2RlO1xuICB0aGlzLnBhcmVudCA9IG51bGw7XG4gIHRoaXMuY2hpbGRyZW4gPSBudWxsO1xuICB0aGlzLkEgPSBudWxsOyAvLyBkZWZhdWx0IGFuY2VzdG9yXG4gIHRoaXMuYSA9IHRoaXM7IC8vIGFuY2VzdG9yXG4gIHRoaXMueiA9IDA7IC8vIHByZWxpbVxuICB0aGlzLm0gPSAwOyAvLyBtb2RcbiAgdGhpcy5jID0gMDsgLy8gY2hhbmdlXG4gIHRoaXMucyA9IDA7IC8vIHNoaWZ0XG4gIHRoaXMudCA9IG51bGw7IC8vIHRocmVhZFxuICB0aGlzLmkgPSBpOyAvLyBudW1iZXJcbn1cblxuVHJlZU5vZGUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShOb2RlLnByb3RvdHlwZSk7XG5cbmZ1bmN0aW9uIHRyZWVSb290KHJvb3QpIHtcbiAgdmFyIHRyZWUgPSBuZXcgVHJlZU5vZGUocm9vdCwgMCksXG4gICAgICBub2RlLFxuICAgICAgbm9kZXMgPSBbdHJlZV0sXG4gICAgICBjaGlsZCxcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgaSxcbiAgICAgIG47XG5cbiAgd2hpbGUgKG5vZGUgPSBub2Rlcy5wb3AoKSkge1xuICAgIGlmIChjaGlsZHJlbiA9IG5vZGUuXy5jaGlsZHJlbikge1xuICAgICAgbm9kZS5jaGlsZHJlbiA9IG5ldyBBcnJheShuID0gY2hpbGRyZW4ubGVuZ3RoKTtcbiAgICAgIGZvciAoaSA9IG4gLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICBub2Rlcy5wdXNoKGNoaWxkID0gbm9kZS5jaGlsZHJlbltpXSA9IG5ldyBUcmVlTm9kZShjaGlsZHJlbltpXSwgaSkpO1xuICAgICAgICBjaGlsZC5wYXJlbnQgPSBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICh0cmVlLnBhcmVudCA9IG5ldyBUcmVlTm9kZShudWxsLCAwKSkuY2hpbGRyZW4gPSBbdHJlZV07XG4gIHJldHVybiB0cmVlO1xufVxuXG4vLyBOb2RlLWxpbmsgdHJlZSBkaWFncmFtIHVzaW5nIHRoZSBSZWluZ29sZC1UaWxmb3JkIFwidGlkeVwiIGFsZ29yaXRobVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBzZXBhcmF0aW9uID0gZGVmYXVsdFNlcGFyYXRpb24sXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBub2RlU2l6ZSA9IG51bGw7XG5cbiAgZnVuY3Rpb24gdHJlZShyb290KSB7XG4gICAgdmFyIHQgPSB0cmVlUm9vdChyb290KTtcblxuICAgIC8vIENvbXB1dGUgdGhlIGxheW91dCB1c2luZyBCdWNoaGVpbSBldCBhbC7igJlzIGFsZ29yaXRobS5cbiAgICB0LmVhY2hBZnRlcihmaXJzdFdhbGspLCB0LnBhcmVudC5tID0gLXQuejtcbiAgICB0LmVhY2hCZWZvcmUoc2Vjb25kV2Fsayk7XG5cbiAgICAvLyBJZiBhIGZpeGVkIG5vZGUgc2l6ZSBpcyBzcGVjaWZpZWQsIHNjYWxlIHggYW5kIHkuXG4gICAgaWYgKG5vZGVTaXplKSByb290LmVhY2hCZWZvcmUoc2l6ZU5vZGUpO1xuXG4gICAgLy8gSWYgYSBmaXhlZCB0cmVlIHNpemUgaXMgc3BlY2lmaWVkLCBzY2FsZSB4IGFuZCB5IGJhc2VkIG9uIHRoZSBleHRlbnQuXG4gICAgLy8gQ29tcHV0ZSB0aGUgbGVmdC1tb3N0LCByaWdodC1tb3N0LCBhbmQgZGVwdGgtbW9zdCBub2RlcyBmb3IgZXh0ZW50cy5cbiAgICBlbHNlIHtcbiAgICAgIHZhciBsZWZ0ID0gcm9vdCxcbiAgICAgICAgICByaWdodCA9IHJvb3QsXG4gICAgICAgICAgYm90dG9tID0gcm9vdDtcbiAgICAgIHJvb3QuZWFjaEJlZm9yZShmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIGlmIChub2RlLnggPCBsZWZ0LngpIGxlZnQgPSBub2RlO1xuICAgICAgICBpZiAobm9kZS54ID4gcmlnaHQueCkgcmlnaHQgPSBub2RlO1xuICAgICAgICBpZiAobm9kZS5kZXB0aCA+IGJvdHRvbS5kZXB0aCkgYm90dG9tID0gbm9kZTtcbiAgICAgIH0pO1xuICAgICAgdmFyIHMgPSBsZWZ0ID09PSByaWdodCA/IDEgOiBzZXBhcmF0aW9uKGxlZnQsIHJpZ2h0KSAvIDIsXG4gICAgICAgICAgdHggPSBzIC0gbGVmdC54LFxuICAgICAgICAgIGt4ID0gZHggLyAocmlnaHQueCArIHMgKyB0eCksXG4gICAgICAgICAga3kgPSBkeSAvIChib3R0b20uZGVwdGggfHwgMSk7XG4gICAgICByb290LmVhY2hCZWZvcmUoZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBub2RlLnggPSAobm9kZS54ICsgdHgpICoga3g7XG4gICAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBreTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiByb290O1xuICB9XG5cbiAgLy8gQ29tcHV0ZXMgYSBwcmVsaW1pbmFyeSB4LWNvb3JkaW5hdGUgZm9yIHYuIEJlZm9yZSB0aGF0LCBGSVJTVCBXQUxLIGlzXG4gIC8vIGFwcGxpZWQgcmVjdXJzaXZlbHkgdG8gdGhlIGNoaWxkcmVuIG9mIHYsIGFzIHdlbGwgYXMgdGhlIGZ1bmN0aW9uXG4gIC8vIEFQUE9SVElPTi4gQWZ0ZXIgc3BhY2luZyBvdXQgdGhlIGNoaWxkcmVuIGJ5IGNhbGxpbmcgRVhFQ1VURSBTSElGVFMsIHRoZVxuICAvLyBub2RlIHYgaXMgcGxhY2VkIHRvIHRoZSBtaWRwb2ludCBvZiBpdHMgb3V0ZXJtb3N0IGNoaWxkcmVuLlxuICBmdW5jdGlvbiBmaXJzdFdhbGsodikge1xuICAgIHZhciBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sXG4gICAgICAgIHNpYmxpbmdzID0gdi5wYXJlbnQuY2hpbGRyZW4sXG4gICAgICAgIHcgPSB2LmkgPyBzaWJsaW5nc1t2LmkgLSAxXSA6IG51bGw7XG4gICAgaWYgKGNoaWxkcmVuKSB7XG4gICAgICBleGVjdXRlU2hpZnRzKHYpO1xuICAgICAgdmFyIG1pZHBvaW50ID0gKGNoaWxkcmVuWzBdLnogKyBjaGlsZHJlbltjaGlsZHJlbi5sZW5ndGggLSAxXS56KSAvIDI7XG4gICAgICBpZiAodykge1xuICAgICAgICB2LnogPSB3LnogKyBzZXBhcmF0aW9uKHYuXywgdy5fKTtcbiAgICAgICAgdi5tID0gdi56IC0gbWlkcG9pbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2LnogPSBtaWRwb2ludDtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHcpIHtcbiAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgIH1cbiAgICB2LnBhcmVudC5BID0gYXBwb3J0aW9uKHYsIHcsIHYucGFyZW50LkEgfHwgc2libGluZ3NbMF0pO1xuICB9XG5cbiAgLy8gQ29tcHV0ZXMgYWxsIHJlYWwgeC1jb29yZGluYXRlcyBieSBzdW1taW5nIHVwIHRoZSBtb2RpZmllcnMgcmVjdXJzaXZlbHkuXG4gIGZ1bmN0aW9uIHNlY29uZFdhbGsodikge1xuICAgIHYuXy54ID0gdi56ICsgdi5wYXJlbnQubTtcbiAgICB2Lm0gKz0gdi5wYXJlbnQubTtcbiAgfVxuXG4gIC8vIFRoZSBjb3JlIG9mIHRoZSBhbGdvcml0aG0uIEhlcmUsIGEgbmV3IHN1YnRyZWUgaXMgY29tYmluZWQgd2l0aCB0aGVcbiAgLy8gcHJldmlvdXMgc3VidHJlZXMuIFRocmVhZHMgYXJlIHVzZWQgdG8gdHJhdmVyc2UgdGhlIGluc2lkZSBhbmQgb3V0c2lkZVxuICAvLyBjb250b3VycyBvZiB0aGUgbGVmdCBhbmQgcmlnaHQgc3VidHJlZSB1cCB0byB0aGUgaGlnaGVzdCBjb21tb24gbGV2ZWwuIFRoZVxuICAvLyB2ZXJ0aWNlcyB1c2VkIGZvciB0aGUgdHJhdmVyc2FscyBhcmUgdmkrLCB2aS0sIHZvLSwgYW5kIHZvKywgd2hlcmUgdGhlXG4gIC8vIHN1cGVyc2NyaXB0IG8gbWVhbnMgb3V0c2lkZSBhbmQgaSBtZWFucyBpbnNpZGUsIHRoZSBzdWJzY3JpcHQgLSBtZWFucyBsZWZ0XG4gIC8vIHN1YnRyZWUgYW5kICsgbWVhbnMgcmlnaHQgc3VidHJlZS4gRm9yIHN1bW1pbmcgdXAgdGhlIG1vZGlmaWVycyBhbG9uZyB0aGVcbiAgLy8gY29udG91ciwgd2UgdXNlIHJlc3BlY3RpdmUgdmFyaWFibGVzIHNpKywgc2ktLCBzby0sIGFuZCBzbysuIFdoZW5ldmVyIHR3b1xuICAvLyBub2RlcyBvZiB0aGUgaW5zaWRlIGNvbnRvdXJzIGNvbmZsaWN0LCB3ZSBjb21wdXRlIHRoZSBsZWZ0IG9uZSBvZiB0aGVcbiAgLy8gZ3JlYXRlc3QgdW5jb21tb24gYW5jZXN0b3JzIHVzaW5nIHRoZSBmdW5jdGlvbiBBTkNFU1RPUiBhbmQgY2FsbCBNT1ZFXG4gIC8vIFNVQlRSRUUgdG8gc2hpZnQgdGhlIHN1YnRyZWUgYW5kIHByZXBhcmUgdGhlIHNoaWZ0cyBvZiBzbWFsbGVyIHN1YnRyZWVzLlxuICAvLyBGaW5hbGx5LCB3ZSBhZGQgYSBuZXcgdGhyZWFkIChpZiBuZWNlc3NhcnkpLlxuICBmdW5jdGlvbiBhcHBvcnRpb24odiwgdywgYW5jZXN0b3IpIHtcbiAgICBpZiAodykge1xuICAgICAgdmFyIHZpcCA9IHYsXG4gICAgICAgICAgdm9wID0gdixcbiAgICAgICAgICB2aW0gPSB3LFxuICAgICAgICAgIHZvbSA9IHZpcC5wYXJlbnQuY2hpbGRyZW5bMF0sXG4gICAgICAgICAgc2lwID0gdmlwLm0sXG4gICAgICAgICAgc29wID0gdm9wLm0sXG4gICAgICAgICAgc2ltID0gdmltLm0sXG4gICAgICAgICAgc29tID0gdm9tLm0sXG4gICAgICAgICAgc2hpZnQ7XG4gICAgICB3aGlsZSAodmltID0gbmV4dFJpZ2h0KHZpbSksIHZpcCA9IG5leHRMZWZ0KHZpcCksIHZpbSAmJiB2aXApIHtcbiAgICAgICAgdm9tID0gbmV4dExlZnQodm9tKTtcbiAgICAgICAgdm9wID0gbmV4dFJpZ2h0KHZvcCk7XG4gICAgICAgIHZvcC5hID0gdjtcbiAgICAgICAgc2hpZnQgPSB2aW0ueiArIHNpbSAtIHZpcC56IC0gc2lwICsgc2VwYXJhdGlvbih2aW0uXywgdmlwLl8pO1xuICAgICAgICBpZiAoc2hpZnQgPiAwKSB7XG4gICAgICAgICAgbW92ZVN1YnRyZWUobmV4dEFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpLCB2LCBzaGlmdCk7XG4gICAgICAgICAgc2lwICs9IHNoaWZ0O1xuICAgICAgICAgIHNvcCArPSBzaGlmdDtcbiAgICAgICAgfVxuICAgICAgICBzaW0gKz0gdmltLm07XG4gICAgICAgIHNpcCArPSB2aXAubTtcbiAgICAgICAgc29tICs9IHZvbS5tO1xuICAgICAgICBzb3AgKz0gdm9wLm07XG4gICAgICB9XG4gICAgICBpZiAodmltICYmICFuZXh0UmlnaHQodm9wKSkge1xuICAgICAgICB2b3AudCA9IHZpbTtcbiAgICAgICAgdm9wLm0gKz0gc2ltIC0gc29wO1xuICAgICAgfVxuICAgICAgaWYgKHZpcCAmJiAhbmV4dExlZnQodm9tKSkge1xuICAgICAgICB2b20udCA9IHZpcDtcbiAgICAgICAgdm9tLm0gKz0gc2lwIC0gc29tO1xuICAgICAgICBhbmNlc3RvciA9IHY7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBhbmNlc3RvcjtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNpemVOb2RlKG5vZGUpIHtcbiAgICBub2RlLnggKj0gZHg7XG4gICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIGR5O1xuICB9XG5cbiAgdHJlZS5zZXBhcmF0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNlcGFyYXRpb24gPSB4LCB0cmVlKSA6IHNlcGFyYXRpb247XG4gIH07XG5cbiAgdHJlZS5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gZmFsc2UsIGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHRyZWUpIDogKG5vZGVTaXplID8gbnVsbCA6IFtkeCwgZHldKTtcbiAgfTtcblxuICB0cmVlLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG5vZGVTaXplID0gdHJ1ZSwgZHggPSAreFswXSwgZHkgPSAreFsxXSwgdHJlZSkgOiAobm9kZVNpemUgPyBbZHgsIGR5XSA6IG51bGwpO1xuICB9O1xuXG4gIHJldHVybiB0cmVlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBpLCBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgc3VtLCBzdW1zID0gbmV3IEFycmF5KG4gKyAxKTtcblxuICBmb3IgKHN1bXNbMF0gPSBzdW0gPSBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIHN1bXNbaSArIDFdID0gc3VtICs9IG5vZGVzW2ldLnZhbHVlO1xuICB9XG5cbiAgcGFydGl0aW9uKDAsIG4sIHBhcmVudC52YWx1ZSwgeDAsIHkwLCB4MSwgeTEpO1xuXG4gIGZ1bmN0aW9uIHBhcnRpdGlvbihpLCBqLCB2YWx1ZSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgICBpZiAoaSA+PSBqIC0gMSkge1xuICAgICAgdmFyIG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgIG5vZGUueDAgPSB4MCwgbm9kZS55MCA9IHkwO1xuICAgICAgbm9kZS54MSA9IHgxLCBub2RlLnkxID0geTE7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHZhbHVlT2Zmc2V0ID0gc3Vtc1tpXSxcbiAgICAgICAgdmFsdWVUYXJnZXQgPSAodmFsdWUgLyAyKSArIHZhbHVlT2Zmc2V0LFxuICAgICAgICBrID0gaSArIDEsXG4gICAgICAgIGhpID0gaiAtIDE7XG5cbiAgICB3aGlsZSAoayA8IGhpKSB7XG4gICAgICB2YXIgbWlkID0gayArIGhpID4+PiAxO1xuICAgICAgaWYgKHN1bXNbbWlkXSA8IHZhbHVlVGFyZ2V0KSBrID0gbWlkICsgMTtcbiAgICAgIGVsc2UgaGkgPSBtaWQ7XG4gICAgfVxuXG4gICAgaWYgKCh2YWx1ZVRhcmdldCAtIHN1bXNbayAtIDFdKSA8IChzdW1zW2tdIC0gdmFsdWVUYXJnZXQpICYmIGkgKyAxIDwgaykgLS1rO1xuXG4gICAgdmFyIHZhbHVlTGVmdCA9IHN1bXNba10gLSB2YWx1ZU9mZnNldCxcbiAgICAgICAgdmFsdWVSaWdodCA9IHZhbHVlIC0gdmFsdWVMZWZ0O1xuXG4gICAgaWYgKCh4MSAtIHgwKSA+ICh5MSAtIHkwKSkge1xuICAgICAgdmFyIHhrID0gdmFsdWUgPyAoeDAgKiB2YWx1ZVJpZ2h0ICsgeDEgKiB2YWx1ZUxlZnQpIC8gdmFsdWUgOiB4MTtcbiAgICAgIHBhcnRpdGlvbihpLCBrLCB2YWx1ZUxlZnQsIHgwLCB5MCwgeGssIHkxKTtcbiAgICAgIHBhcnRpdGlvbihrLCBqLCB2YWx1ZVJpZ2h0LCB4aywgeTAsIHgxLCB5MSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB5ayA9IHZhbHVlID8gKHkwICogdmFsdWVSaWdodCArIHkxICogdmFsdWVMZWZ0KSAvIHZhbHVlIDogeTE7XG4gICAgICBwYXJ0aXRpb24oaSwgaywgdmFsdWVMZWZ0LCB4MCwgeTAsIHgxLCB5ayk7XG4gICAgICBwYXJ0aXRpb24oaywgaiwgdmFsdWVSaWdodCwgeDAsIHlrLCB4MSwgeTEpO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBub2RlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGsgPSBwYXJlbnQudmFsdWUgJiYgKHgxIC0geDApIC8gcGFyZW50LnZhbHVlO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLnkwID0geTAsIG5vZGUueTEgPSB5MTtcbiAgICBub2RlLngwID0geDAsIG5vZGUueDEgPSB4MCArPSBub2RlLnZhbHVlICogaztcbiAgfVxufVxuIiwiaW1wb3J0IHJvdW5kTm9kZSBmcm9tIFwiLi9yb3VuZC5qc1wiO1xuaW1wb3J0IHNxdWFyaWZ5IGZyb20gXCIuL3NxdWFyaWZ5LmpzXCI7XG5pbXBvcnQge3JlcXVpcmVkfSBmcm9tIFwiLi4vYWNjZXNzb3JzLmpzXCI7XG5pbXBvcnQgY29uc3RhbnQsIHtjb25zdGFudFplcm99IGZyb20gXCIuLi9jb25zdGFudC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIHRpbGUgPSBzcXVhcmlmeSxcbiAgICAgIHJvdW5kID0gZmFsc2UsXG4gICAgICBkeCA9IDEsXG4gICAgICBkeSA9IDEsXG4gICAgICBwYWRkaW5nU3RhY2sgPSBbMF0sXG4gICAgICBwYWRkaW5nSW5uZXIgPSBjb25zdGFudFplcm8sXG4gICAgICBwYWRkaW5nVG9wID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ1JpZ2h0ID0gY29uc3RhbnRaZXJvLFxuICAgICAgcGFkZGluZ0JvdHRvbSA9IGNvbnN0YW50WmVybyxcbiAgICAgIHBhZGRpbmdMZWZ0ID0gY29uc3RhbnRaZXJvO1xuXG4gIGZ1bmN0aW9uIHRyZWVtYXAocm9vdCkge1xuICAgIHJvb3QueDAgPVxuICAgIHJvb3QueTAgPSAwO1xuICAgIHJvb3QueDEgPSBkeDtcbiAgICByb290LnkxID0gZHk7XG4gICAgcm9vdC5lYWNoQmVmb3JlKHBvc2l0aW9uTm9kZSk7XG4gICAgcGFkZGluZ1N0YWNrID0gWzBdO1xuICAgIGlmIChyb3VuZCkgcm9vdC5lYWNoQmVmb3JlKHJvdW5kTm9kZSk7XG4gICAgcmV0dXJuIHJvb3Q7XG4gIH1cblxuICBmdW5jdGlvbiBwb3NpdGlvbk5vZGUobm9kZSkge1xuICAgIHZhciBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGhdLFxuICAgICAgICB4MCA9IG5vZGUueDAgKyBwLFxuICAgICAgICB5MCA9IG5vZGUueTAgKyBwLFxuICAgICAgICB4MSA9IG5vZGUueDEgLSBwLFxuICAgICAgICB5MSA9IG5vZGUueTEgLSBwO1xuICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICBpZiAoeTEgPCB5MCkgeTAgPSB5MSA9ICh5MCArIHkxKSAvIDI7XG4gICAgbm9kZS54MCA9IHgwO1xuICAgIG5vZGUueTAgPSB5MDtcbiAgICBub2RlLngxID0geDE7XG4gICAgbm9kZS55MSA9IHkxO1xuICAgIGlmIChub2RlLmNoaWxkcmVuKSB7XG4gICAgICBwID0gcGFkZGluZ1N0YWNrW25vZGUuZGVwdGggKyAxXSA9IHBhZGRpbmdJbm5lcihub2RlKSAvIDI7XG4gICAgICB4MCArPSBwYWRkaW5nTGVmdChub2RlKSAtIHA7XG4gICAgICB5MCArPSBwYWRkaW5nVG9wKG5vZGUpIC0gcDtcbiAgICAgIHgxIC09IHBhZGRpbmdSaWdodChub2RlKSAtIHA7XG4gICAgICB5MSAtPSBwYWRkaW5nQm90dG9tKG5vZGUpIC0gcDtcbiAgICAgIGlmICh4MSA8IHgwKSB4MCA9IHgxID0gKHgwICsgeDEpIC8gMjtcbiAgICAgIGlmICh5MSA8IHkwKSB5MCA9IHkxID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIHRpbGUobm9kZSwgeDAsIHkwLCB4MSwgeTEpO1xuICAgIH1cbiAgfVxuXG4gIHRyZWVtYXAucm91bmQgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocm91bmQgPSAhIXgsIHRyZWVtYXApIDogcm91bmQ7XG4gIH07XG5cbiAgdHJlZW1hcC5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR4ID0gK3hbMF0sIGR5ID0gK3hbMV0sIHRyZWVtYXApIDogW2R4LCBkeV07XG4gIH07XG5cbiAgdHJlZW1hcC50aWxlID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRpbGUgPSByZXF1aXJlZCh4KSwgdHJlZW1hcCkgOiB0aWxlO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRyZWVtYXAucGFkZGluZ0lubmVyKHgpLnBhZGRpbmdPdXRlcih4KSA6IHRyZWVtYXAucGFkZGluZ0lubmVyKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nSW5uZXIgPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0lubmVyID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBjb25zdGFudCgreCksIHRyZWVtYXApIDogcGFkZGluZ0lubmVyO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ091dGVyID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdHJlZW1hcC5wYWRkaW5nVG9wKHgpLnBhZGRpbmdSaWdodCh4KS5wYWRkaW5nQm90dG9tKHgpLnBhZGRpbmdMZWZ0KHgpIDogdHJlZW1hcC5wYWRkaW5nVG9wKCk7XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nVG9wID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdUb3AgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGNvbnN0YW50KCt4KSwgdHJlZW1hcCkgOiBwYWRkaW5nVG9wO1xuICB9O1xuXG4gIHRyZWVtYXAucGFkZGluZ1JpZ2h0ID0gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdSaWdodCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdSaWdodDtcbiAgfTtcblxuICB0cmVlbWFwLnBhZGRpbmdCb3R0b20gPSBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkZGluZ0JvdHRvbSA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdCb3R0b207XG4gIH07XG5cbiAgdHJlZW1hcC5wYWRkaW5nTGVmdCA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nTGVmdCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogY29uc3RhbnQoK3gpLCB0cmVlbWFwKSA6IHBhZGRpbmdMZWZ0O1xuICB9O1xuXG4gIHJldHVybiB0cmVlbWFwO1xufVxuIiwiaW1wb3J0IHRyZWVtYXBEaWNlIGZyb20gXCIuL2RpY2UuanNcIjtcbmltcG9ydCB0cmVlbWFwU2xpY2UgZnJvbSBcIi4vc2xpY2UuanNcIjtcbmltcG9ydCB7cGhpLCBzcXVhcmlmeVJhdGlvfSBmcm9tIFwiLi9zcXVhcmlmeS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gY3VzdG9tKHJhdGlvKSB7XG5cbiAgZnVuY3Rpb24gcmVzcXVhcmlmeShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgaWYgKChyb3dzID0gcGFyZW50Ll9zcXVhcmlmeSkgJiYgKHJvd3MucmF0aW8gPT09IHJhdGlvKSkge1xuICAgICAgdmFyIHJvd3MsXG4gICAgICAgICAgcm93LFxuICAgICAgICAgIG5vZGVzLFxuICAgICAgICAgIGksXG4gICAgICAgICAgaiA9IC0xLFxuICAgICAgICAgIG4sXG4gICAgICAgICAgbSA9IHJvd3MubGVuZ3RoLFxuICAgICAgICAgIHZhbHVlID0gcGFyZW50LnZhbHVlO1xuXG4gICAgICB3aGlsZSAoKytqIDwgbSkge1xuICAgICAgICByb3cgPSByb3dzW2pdLCBub2RlcyA9IHJvdy5jaGlsZHJlbjtcbiAgICAgICAgZm9yIChpID0gcm93LnZhbHVlID0gMCwgbiA9IG5vZGVzLmxlbmd0aDsgaSA8IG47ICsraSkgcm93LnZhbHVlICs9IG5vZGVzW2ldLnZhbHVlO1xuICAgICAgICBpZiAocm93LmRpY2UpIHRyZWVtYXBEaWNlKHJvdywgeDAsIHkwLCB4MSwgdmFsdWUgPyB5MCArPSAoeTEgLSB5MCkgKiByb3cudmFsdWUgLyB2YWx1ZSA6IHkxKTtcbiAgICAgICAgZWxzZSB0cmVlbWFwU2xpY2Uocm93LCB4MCwgeTAsIHZhbHVlID8geDAgKz0gKHgxIC0geDApICogcm93LnZhbHVlIC8gdmFsdWUgOiB4MSwgeTEpO1xuICAgICAgICB2YWx1ZSAtPSByb3cudmFsdWU7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcmVudC5fc3F1YXJpZnkgPSByb3dzID0gc3F1YXJpZnlSYXRpbyhyYXRpbywgcGFyZW50LCB4MCwgeTAsIHgxLCB5MSk7XG4gICAgICByb3dzLnJhdGlvID0gcmF0aW87XG4gICAgfVxuICB9XG5cbiAgcmVzcXVhcmlmeS5yYXRpbyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gY3VzdG9tKCh4ID0gK3gpID4gMSA/IHggOiAxKTtcbiAgfTtcblxuICByZXR1cm4gcmVzcXVhcmlmeTtcbn0pKHBoaSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihub2RlKSB7XG4gIG5vZGUueDAgPSBNYXRoLnJvdW5kKG5vZGUueDApO1xuICBub2RlLnkwID0gTWF0aC5yb3VuZChub2RlLnkwKTtcbiAgbm9kZS54MSA9IE1hdGgucm91bmQobm9kZS54MSk7XG4gIG5vZGUueTEgPSBNYXRoLnJvdW5kKG5vZGUueTEpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICBub2RlLFxuICAgICAgaSA9IC0xLFxuICAgICAgbiA9IG5vZGVzLmxlbmd0aCxcbiAgICAgIGsgPSBwYXJlbnQudmFsdWUgJiYgKHkxIC0geTApIC8gcGFyZW50LnZhbHVlO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgbm9kZSA9IG5vZGVzW2ldLCBub2RlLngwID0geDAsIG5vZGUueDEgPSB4MTtcbiAgICBub2RlLnkwID0geTAsIG5vZGUueTEgPSB5MCArPSBub2RlLnZhbHVlICogaztcbiAgfVxufVxuIiwiaW1wb3J0IGRpY2UgZnJvbSBcIi4vZGljZS5qc1wiO1xuaW1wb3J0IHNsaWNlIGZyb20gXCIuL3NsaWNlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgKHBhcmVudC5kZXB0aCAmIDEgPyBzbGljZSA6IGRpY2UpKHBhcmVudCwgeDAsIHkwLCB4MSwgeTEpO1xufVxuIiwiaW1wb3J0IHRyZWVtYXBEaWNlIGZyb20gXCIuL2RpY2UuanNcIjtcbmltcG9ydCB0cmVlbWFwU2xpY2UgZnJvbSBcIi4vc2xpY2UuanNcIjtcblxuZXhwb3J0IHZhciBwaGkgPSAoMSArIE1hdGguc3FydCg1KSkgLyAyO1xuXG5leHBvcnQgZnVuY3Rpb24gc3F1YXJpZnlSYXRpbyhyYXRpbywgcGFyZW50LCB4MCwgeTAsIHgxLCB5MSkge1xuICB2YXIgcm93cyA9IFtdLFxuICAgICAgbm9kZXMgPSBwYXJlbnQuY2hpbGRyZW4sXG4gICAgICByb3csXG4gICAgICBub2RlVmFsdWUsXG4gICAgICBpMCA9IDAsXG4gICAgICBpMSA9IDAsXG4gICAgICBuID0gbm9kZXMubGVuZ3RoLFxuICAgICAgZHgsIGR5LFxuICAgICAgdmFsdWUgPSBwYXJlbnQudmFsdWUsXG4gICAgICBzdW1WYWx1ZSxcbiAgICAgIG1pblZhbHVlLFxuICAgICAgbWF4VmFsdWUsXG4gICAgICBuZXdSYXRpbyxcbiAgICAgIG1pblJhdGlvLFxuICAgICAgYWxwaGEsXG4gICAgICBiZXRhO1xuXG4gIHdoaWxlIChpMCA8IG4pIHtcbiAgICBkeCA9IHgxIC0geDAsIGR5ID0geTEgLSB5MDtcblxuICAgIC8vIEZpbmQgdGhlIG5leHQgbm9uLWVtcHR5IG5vZGUuXG4gICAgZG8gc3VtVmFsdWUgPSBub2Rlc1tpMSsrXS52YWx1ZTsgd2hpbGUgKCFzdW1WYWx1ZSAmJiBpMSA8IG4pO1xuICAgIG1pblZhbHVlID0gbWF4VmFsdWUgPSBzdW1WYWx1ZTtcbiAgICBhbHBoYSA9IE1hdGgubWF4KGR5IC8gZHgsIGR4IC8gZHkpIC8gKHZhbHVlICogcmF0aW8pO1xuICAgIGJldGEgPSBzdW1WYWx1ZSAqIHN1bVZhbHVlICogYWxwaGE7XG4gICAgbWluUmF0aW8gPSBNYXRoLm1heChtYXhWYWx1ZSAvIGJldGEsIGJldGEgLyBtaW5WYWx1ZSk7XG5cbiAgICAvLyBLZWVwIGFkZGluZyBub2RlcyB3aGlsZSB0aGUgYXNwZWN0IHJhdGlvIG1haW50YWlucyBvciBpbXByb3Zlcy5cbiAgICBmb3IgKDsgaTEgPCBuOyArK2kxKSB7XG4gICAgICBzdW1WYWx1ZSArPSBub2RlVmFsdWUgPSBub2Rlc1tpMV0udmFsdWU7XG4gICAgICBpZiAobm9kZVZhbHVlIDwgbWluVmFsdWUpIG1pblZhbHVlID0gbm9kZVZhbHVlO1xuICAgICAgaWYgKG5vZGVWYWx1ZSA+IG1heFZhbHVlKSBtYXhWYWx1ZSA9IG5vZGVWYWx1ZTtcbiAgICAgIGJldGEgPSBzdW1WYWx1ZSAqIHN1bVZhbHVlICogYWxwaGE7XG4gICAgICBuZXdSYXRpbyA9IE1hdGgubWF4KG1heFZhbHVlIC8gYmV0YSwgYmV0YSAvIG1pblZhbHVlKTtcbiAgICAgIGlmIChuZXdSYXRpbyA+IG1pblJhdGlvKSB7IHN1bVZhbHVlIC09IG5vZGVWYWx1ZTsgYnJlYWs7IH1cbiAgICAgIG1pblJhdGlvID0gbmV3UmF0aW87XG4gICAgfVxuXG4gICAgLy8gUG9zaXRpb24gYW5kIHJlY29yZCB0aGUgcm93IG9yaWVudGF0aW9uLlxuICAgIHJvd3MucHVzaChyb3cgPSB7dmFsdWU6IHN1bVZhbHVlLCBkaWNlOiBkeCA8IGR5LCBjaGlsZHJlbjogbm9kZXMuc2xpY2UoaTAsIGkxKX0pO1xuICAgIGlmIChyb3cuZGljZSkgdHJlZW1hcERpY2Uocm93LCB4MCwgeTAsIHgxLCB2YWx1ZSA/IHkwICs9IGR5ICogc3VtVmFsdWUgLyB2YWx1ZSA6IHkxKTtcbiAgICBlbHNlIHRyZWVtYXBTbGljZShyb3csIHgwLCB5MCwgdmFsdWUgPyB4MCArPSBkeCAqIHN1bVZhbHVlIC8gdmFsdWUgOiB4MSwgeTEpO1xuICAgIHZhbHVlIC09IHN1bVZhbHVlLCBpMCA9IGkxO1xuICB9XG5cbiAgcmV0dXJuIHJvd3M7XG59XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20ocmF0aW8pIHtcblxuICBmdW5jdGlvbiBzcXVhcmlmeShwYXJlbnQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgc3F1YXJpZnlSYXRpbyhyYXRpbywgcGFyZW50LCB4MCwgeTAsIHgxLCB5MSk7XG4gIH1cblxuICBzcXVhcmlmeS5yYXRpbyA9IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gY3VzdG9tKCh4ID0gK3gpID4gMSA/IHggOiAxKTtcbiAgfTtcblxuICByZXR1cm4gc3F1YXJpZnk7XG59KShwaGkpO1xuIiwiaW1wb3J0IHZhbHVlIGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5pbXBvcnQgbnVtYmVyQXJyYXksIHtpc051bWJlckFycmF5fSBmcm9tIFwiLi9udW1iZXJBcnJheS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiAoaXNOdW1iZXJBcnJheShiKSA/IG51bWJlckFycmF5IDogZ2VuZXJpY0FycmF5KShhLCBiKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyaWNBcnJheShhLCBiKSB7XG4gIHZhciBuYiA9IGIgPyBiLmxlbmd0aCA6IDAsXG4gICAgICBuYSA9IGEgPyBNYXRoLm1pbihuYiwgYS5sZW5ndGgpIDogMCxcbiAgICAgIHggPSBuZXcgQXJyYXkobmEpLFxuICAgICAgYyA9IG5ldyBBcnJheShuYiksXG4gICAgICBpO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBuYTsgKytpKSB4W2ldID0gdmFsdWUoYVtpXSwgYltpXSk7XG4gIGZvciAoOyBpIDwgbmI7ICsraSkgY1tpXSA9IGJbaV07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbmE7ICsraSkgY1tpXSA9IHhbaV0odCk7XG4gICAgcmV0dXJuIGM7XG4gIH07XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gYmFzaXModDEsIHYwLCB2MSwgdjIsIHYzKSB7XG4gIHZhciB0MiA9IHQxICogdDEsIHQzID0gdDIgKiB0MTtcbiAgcmV0dXJuICgoMSAtIDMgKiB0MSArIDMgKiB0MiAtIHQzKSAqIHYwXG4gICAgICArICg0IC0gNiAqIHQyICsgMyAqIHQzKSAqIHYxXG4gICAgICArICgxICsgMyAqIHQxICsgMyAqIHQyIC0gMyAqIHQzKSAqIHYyXG4gICAgICArIHQzICogdjMpIC8gNjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aCAtIDE7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSB0IDw9IDAgPyAodCA9IDApIDogdCA+PSAxID8gKHQgPSAxLCBuIC0gMSkgOiBNYXRoLmZsb29yKHQgKiBuKSxcbiAgICAgICAgdjEgPSB2YWx1ZXNbaV0sXG4gICAgICAgIHYyID0gdmFsdWVzW2kgKyAxXSxcbiAgICAgICAgdjAgPSBpID4gMCA/IHZhbHVlc1tpIC0gMV0gOiAyICogdjEgLSB2MixcbiAgICAgICAgdjMgPSBpIDwgbiAtIDEgPyB2YWx1ZXNbaSArIDJdIDogMiAqIHYyIC0gdjE7XG4gICAgcmV0dXJuIGJhc2lzKCh0IC0gaSAvIG4pICogbiwgdjAsIHYxLCB2MiwgdjMpO1xuICB9O1xufVxuIiwiaW1wb3J0IHtiYXNpc30gZnJvbSBcIi4vYmFzaXMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWVzKSB7XG4gIHZhciBuID0gdmFsdWVzLmxlbmd0aDtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IE1hdGguZmxvb3IoKCh0ICU9IDEpIDwgMCA/ICsrdCA6IHQpICogbiksXG4gICAgICAgIHYwID0gdmFsdWVzWyhpICsgbiAtIDEpICUgbl0sXG4gICAgICAgIHYxID0gdmFsdWVzW2kgJSBuXSxcbiAgICAgICAgdjIgPSB2YWx1ZXNbKGkgKyAxKSAlIG5dLFxuICAgICAgICB2MyA9IHZhbHVlc1soaSArIDIpICUgbl07XG4gICAgcmV0dXJuIGJhc2lzKCh0IC0gaSAvIG4pICogbiwgdjAsIHYxLCB2MiwgdjMpO1xuICB9O1xufVxuIiwiaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5cbmZ1bmN0aW9uIGxpbmVhcihhLCBkKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIGEgKyB0ICogZDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gZXhwb25lbnRpYWwoYSwgYiwgeSkge1xuICByZXR1cm4gYSA9IE1hdGgucG93KGEsIHkpLCBiID0gTWF0aC5wb3coYiwgeSkgLSBhLCB5ID0gMSAvIHksIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3coYSArIHQgKiBiLCB5KTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGh1ZShhLCBiKSB7XG4gIHZhciBkID0gYiAtIGE7XG4gIHJldHVybiBkID8gbGluZWFyKGEsIGQgPiAxODAgfHwgZCA8IC0xODAgPyBkIC0gMzYwICogTWF0aC5yb3VuZChkIC8gMzYwKSA6IGQpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnYW1tYSh5KSB7XG4gIHJldHVybiAoeSA9ICt5KSA9PT0gMSA/IG5vZ2FtbWEgOiBmdW5jdGlvbihhLCBiKSB7XG4gICAgcmV0dXJuIGIgLSBhID8gZXhwb25lbnRpYWwoYSwgYiwgeSkgOiBjb25zdGFudChpc05hTihhKSA/IGIgOiBhKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9nYW1tYShhLCBiKSB7XG4gIHZhciBkID0gYiAtIGE7XG4gIHJldHVybiBkID8gbGluZWFyKGEsIGQpIDogY29uc3RhbnQoaXNOYU4oYSkgPyBiIDogYSk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCB4ID0+ICgpID0+IHg7XG4iLCJpbXBvcnQge2N1YmVoZWxpeCBhcyBjb2xvckN1YmVoZWxpeH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgY29sb3IsIHtodWV9IGZyb20gXCIuL2NvbG9yLmpzXCI7XG5cbmZ1bmN0aW9uIGN1YmVoZWxpeChodWUpIHtcbiAgcmV0dXJuIChmdW5jdGlvbiBjdWJlaGVsaXhHYW1tYSh5KSB7XG4gICAgeSA9ICt5O1xuXG4gICAgZnVuY3Rpb24gY3ViZWhlbGl4KHN0YXJ0LCBlbmQpIHtcbiAgICAgIHZhciBoID0gaHVlKChzdGFydCA9IGNvbG9yQ3ViZWhlbGl4KHN0YXJ0KSkuaCwgKGVuZCA9IGNvbG9yQ3ViZWhlbGl4KGVuZCkpLmgpLFxuICAgICAgICAgIHMgPSBjb2xvcihzdGFydC5zLCBlbmQucyksXG4gICAgICAgICAgbCA9IGNvbG9yKHN0YXJ0LmwsIGVuZC5sKSxcbiAgICAgICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgc3RhcnQuaCA9IGgodCk7XG4gICAgICAgIHN0YXJ0LnMgPSBzKHQpO1xuICAgICAgICBzdGFydC5sID0gbChNYXRoLnBvdyh0LCB5KSk7XG4gICAgICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgICAgICByZXR1cm4gc3RhcnQgKyBcIlwiO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICBjdWJlaGVsaXguZ2FtbWEgPSBjdWJlaGVsaXhHYW1tYTtcblxuICAgIHJldHVybiBjdWJlaGVsaXg7XG4gIH0pKDEpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjdWJlaGVsaXgoaHVlKTtcbmV4cG9ydCB2YXIgY3ViZWhlbGl4TG9uZyA9IGN1YmVoZWxpeChjb2xvcik7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBkID0gbmV3IERhdGU7XG4gIHJldHVybiBhID0gK2EsIGIgPSArYiwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBkLnNldFRpbWUoYSAqICgxIC0gdCkgKyBiICogdCksIGQ7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihyYW5nZSkge1xuICB2YXIgbiA9IHJhbmdlLmxlbmd0aDtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICByZXR1cm4gcmFuZ2VbTWF0aC5tYXgoMCwgTWF0aC5taW4obiAtIDEsIE1hdGguZmxvb3IodCAqIG4pKSldO1xuICB9O1xufVxuIiwiaW1wb3J0IHtoY2wgYXMgY29sb3JIY2x9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IGNvbG9yLCB7aHVlfSBmcm9tIFwiLi9jb2xvci5qc1wiO1xuXG5mdW5jdGlvbiBoY2woaHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgdmFyIGggPSBodWUoKHN0YXJ0ID0gY29sb3JIY2woc3RhcnQpKS5oLCAoZW5kID0gY29sb3JIY2woZW5kKSkuaCksXG4gICAgICAgIGMgPSBjb2xvcihzdGFydC5jLCBlbmQuYyksXG4gICAgICAgIGwgPSBjb2xvcihzdGFydC5sLCBlbmQubCksXG4gICAgICAgIG9wYWNpdHkgPSBjb2xvcihzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHN0YXJ0LmggPSBoKHQpO1xuICAgICAgc3RhcnQuYyA9IGModCk7XG4gICAgICBzdGFydC5sID0gbCh0KTtcbiAgICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgICAgcmV0dXJuIHN0YXJ0ICsgXCJcIjtcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGhjbChodWUpO1xuZXhwb3J0IHZhciBoY2xMb25nID0gaGNsKGNvbG9yKTtcbiIsImltcG9ydCB7aHNsIGFzIGNvbG9ySHNsfSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciwge2h1ZX0gZnJvbSBcIi4vY29sb3IuanNcIjtcblxuZnVuY3Rpb24gaHNsKGh1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgIHZhciBoID0gaHVlKChzdGFydCA9IGNvbG9ySHNsKHN0YXJ0KSkuaCwgKGVuZCA9IGNvbG9ySHNsKGVuZCkpLmgpLFxuICAgICAgICBzID0gY29sb3Ioc3RhcnQucywgZW5kLnMpLFxuICAgICAgICBsID0gY29sb3Ioc3RhcnQubCwgZW5kLmwpLFxuICAgICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBzdGFydC5oID0gaCh0KTtcbiAgICAgIHN0YXJ0LnMgPSBzKHQpO1xuICAgICAgc3RhcnQubCA9IGwodCk7XG4gICAgICBzdGFydC5vcGFjaXR5ID0gb3BhY2l0eSh0KTtcbiAgICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBoc2woaHVlKTtcbmV4cG9ydCB2YXIgaHNsTG9uZyA9IGhzbChjb2xvcik7XG4iLCJpbXBvcnQge2h1ZX0gZnJvbSBcIi4vY29sb3IuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgaSA9IGh1ZSgrYSwgK2IpO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHZhciB4ID0gaSh0KTtcbiAgICByZXR1cm4geCAtIDM2MCAqIE1hdGguZmxvb3IoeCAvIDM2MCk7XG4gIH07XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGV9IGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVBcnJheX0gZnJvbSBcIi4vYXJyYXkuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUJhc2lzfSBmcm9tIFwiLi9iYXNpcy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQmFzaXNDbG9zZWR9IGZyb20gXCIuL2Jhc2lzQ2xvc2VkLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVEYXRlfSBmcm9tIFwiLi9kYXRlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVEaXNjcmV0ZX0gZnJvbSBcIi4vZGlzY3JldGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUh1ZX0gZnJvbSBcIi4vaHVlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVOdW1iZXJ9IGZyb20gXCIuL251bWJlci5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlTnVtYmVyQXJyYXl9IGZyb20gXCIuL251bWJlckFycmF5LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVPYmplY3R9IGZyb20gXCIuL29iamVjdC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUm91bmR9IGZyb20gXCIuL3JvdW5kLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVTdHJpbmd9IGZyb20gXCIuL3N0cmluZy5qc1wiO1xuZXhwb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybUNzcywgaW50ZXJwb2xhdGVUcmFuc2Zvcm1Tdmd9IGZyb20gXCIuL3RyYW5zZm9ybS9pbmRleC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlWm9vbX0gZnJvbSBcIi4vem9vbS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmdiLCByZ2JCYXNpcyBhcyBpbnRlcnBvbGF0ZVJnYkJhc2lzLCByZ2JCYXNpc0Nsb3NlZCBhcyBpbnRlcnBvbGF0ZVJnYkJhc2lzQ2xvc2VkfSBmcm9tIFwiLi9yZ2IuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUhzbCwgaHNsTG9uZyBhcyBpbnRlcnBvbGF0ZUhzbExvbmd9IGZyb20gXCIuL2hzbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlTGFifSBmcm9tIFwiLi9sYWIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUhjbCwgaGNsTG9uZyBhcyBpbnRlcnBvbGF0ZUhjbExvbmd9IGZyb20gXCIuL2hjbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQ3ViZWhlbGl4LCBjdWJlaGVsaXhMb25nIGFzIGludGVycG9sYXRlQ3ViZWhlbGl4TG9uZ30gZnJvbSBcIi4vY3ViZWhlbGl4LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGllY2V3aXNlfSBmcm9tIFwiLi9waWVjZXdpc2UuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBxdWFudGl6ZX0gZnJvbSBcIi4vcXVhbnRpemUuanNcIjtcbiIsImltcG9ydCB7bGFiIGFzIGNvbG9yTGFifSBmcm9tIFwiZDMtY29sb3JcIjtcbmltcG9ydCBjb2xvciBmcm9tIFwiLi9jb2xvci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsYWIoc3RhcnQsIGVuZCkge1xuICB2YXIgbCA9IGNvbG9yKChzdGFydCA9IGNvbG9yTGFiKHN0YXJ0KSkubCwgKGVuZCA9IGNvbG9yTGFiKGVuZCkpLmwpLFxuICAgICAgYSA9IGNvbG9yKHN0YXJ0LmEsIGVuZC5hKSxcbiAgICAgIGIgPSBjb2xvcihzdGFydC5iLCBlbmQuYiksXG4gICAgICBvcGFjaXR5ID0gY29sb3Ioc3RhcnQub3BhY2l0eSwgZW5kLm9wYWNpdHkpO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHN0YXJ0LmwgPSBsKHQpO1xuICAgIHN0YXJ0LmEgPSBhKHQpO1xuICAgIHN0YXJ0LmIgPSBiKHQpO1xuICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgIHJldHVybiBzdGFydCArIFwiXCI7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHJldHVybiBhID0gK2EsIGIgPSArYiwgZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBhICogKDEgLSB0KSArIGIgKiB0O1xuICB9O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICBpZiAoIWIpIGIgPSBbXTtcbiAgdmFyIG4gPSBhID8gTWF0aC5taW4oYi5sZW5ndGgsIGEubGVuZ3RoKSA6IDAsXG4gICAgICBjID0gYi5zbGljZSgpLFxuICAgICAgaTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjW2ldID0gYVtpXSAqICgxIC0gdCkgKyBiW2ldICogdDtcbiAgICByZXR1cm4gYztcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyQXJyYXkoeCkge1xuICByZXR1cm4gQXJyYXlCdWZmZXIuaXNWaWV3KHgpICYmICEoeCBpbnN0YW5jZW9mIERhdGFWaWV3KTtcbn1cbiIsImltcG9ydCB2YWx1ZSBmcm9tIFwiLi92YWx1ZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBpID0ge30sXG4gICAgICBjID0ge30sXG4gICAgICBrO1xuXG4gIGlmIChhID09PSBudWxsIHx8IHR5cGVvZiBhICE9PSBcIm9iamVjdFwiKSBhID0ge307XG4gIGlmIChiID09PSBudWxsIHx8IHR5cGVvZiBiICE9PSBcIm9iamVjdFwiKSBiID0ge307XG5cbiAgZm9yIChrIGluIGIpIHtcbiAgICBpZiAoayBpbiBhKSB7XG4gICAgICBpW2tdID0gdmFsdWUoYVtrXSwgYltrXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNba10gPSBiW2tdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgZm9yIChrIGluIGkpIGNba10gPSBpW2tdKHQpO1xuICAgIHJldHVybiBjO1xuICB9O1xufVxuIiwiaW1wb3J0IHtkZWZhdWx0IGFzIHZhbHVlfSBmcm9tIFwiLi92YWx1ZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwaWVjZXdpc2UoaW50ZXJwb2xhdGUsIHZhbHVlcykge1xuICBpZiAodmFsdWVzID09PSB1bmRlZmluZWQpIHZhbHVlcyA9IGludGVycG9sYXRlLCBpbnRlcnBvbGF0ZSA9IHZhbHVlO1xuICB2YXIgaSA9IDAsIG4gPSB2YWx1ZXMubGVuZ3RoIC0gMSwgdiA9IHZhbHVlc1swXSwgSSA9IG5ldyBBcnJheShuIDwgMCA/IDAgOiBuKTtcbiAgd2hpbGUgKGkgPCBuKSBJW2ldID0gaW50ZXJwb2xhdGUodiwgdiA9IHZhbHVlc1srK2ldKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB2YXIgaSA9IE1hdGgubWF4KDAsIE1hdGgubWluKG4gLSAxLCBNYXRoLmZsb29yKHQgKj0gbikpKTtcbiAgICByZXR1cm4gSVtpXSh0IC0gaSk7XG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnRlcnBvbGF0b3IsIG4pIHtcbiAgdmFyIHNhbXBsZXMgPSBuZXcgQXJyYXkobik7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgKytpKSBzYW1wbGVzW2ldID0gaW50ZXJwb2xhdG9yKGkgLyAobiAtIDEpKTtcbiAgcmV0dXJuIHNhbXBsZXM7XG59XG4iLCJpbXBvcnQge3JnYiBhcyBjb2xvclJnYn0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgYmFzaXMgZnJvbSBcIi4vYmFzaXMuanNcIjtcbmltcG9ydCBiYXNpc0Nsb3NlZCBmcm9tIFwiLi9iYXNpc0Nsb3NlZC5qc1wiO1xuaW1wb3J0IG5vZ2FtbWEsIHtnYW1tYX0gZnJvbSBcIi4vY29sb3IuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHJnYkdhbW1hKHkpIHtcbiAgdmFyIGNvbG9yID0gZ2FtbWEoeSk7XG5cbiAgZnVuY3Rpb24gcmdiKHN0YXJ0LCBlbmQpIHtcbiAgICB2YXIgciA9IGNvbG9yKChzdGFydCA9IGNvbG9yUmdiKHN0YXJ0KSkuciwgKGVuZCA9IGNvbG9yUmdiKGVuZCkpLnIpLFxuICAgICAgICBnID0gY29sb3Ioc3RhcnQuZywgZW5kLmcpLFxuICAgICAgICBiID0gY29sb3Ioc3RhcnQuYiwgZW5kLmIpLFxuICAgICAgICBvcGFjaXR5ID0gbm9nYW1tYShzdGFydC5vcGFjaXR5LCBlbmQub3BhY2l0eSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHN0YXJ0LnIgPSByKHQpO1xuICAgICAgc3RhcnQuZyA9IGcodCk7XG4gICAgICBzdGFydC5iID0gYih0KTtcbiAgICAgIHN0YXJ0Lm9wYWNpdHkgPSBvcGFjaXR5KHQpO1xuICAgICAgcmV0dXJuIHN0YXJ0ICsgXCJcIjtcbiAgICB9O1xuICB9XG5cbiAgcmdiLmdhbW1hID0gcmdiR2FtbWE7XG5cbiAgcmV0dXJuIHJnYjtcbn0pKDEpO1xuXG5mdW5jdGlvbiByZ2JTcGxpbmUoc3BsaW5lKSB7XG4gIHJldHVybiBmdW5jdGlvbihjb2xvcnMpIHtcbiAgICB2YXIgbiA9IGNvbG9ycy5sZW5ndGgsXG4gICAgICAgIHIgPSBuZXcgQXJyYXkobiksXG4gICAgICAgIGcgPSBuZXcgQXJyYXkobiksXG4gICAgICAgIGIgPSBuZXcgQXJyYXkobiksXG4gICAgICAgIGksIGNvbG9yO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGNvbG9yID0gY29sb3JSZ2IoY29sb3JzW2ldKTtcbiAgICAgIHJbaV0gPSBjb2xvci5yIHx8IDA7XG4gICAgICBnW2ldID0gY29sb3IuZyB8fCAwO1xuICAgICAgYltpXSA9IGNvbG9yLmIgfHwgMDtcbiAgICB9XG4gICAgciA9IHNwbGluZShyKTtcbiAgICBnID0gc3BsaW5lKGcpO1xuICAgIGIgPSBzcGxpbmUoYik7XG4gICAgY29sb3Iub3BhY2l0eSA9IDE7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIGNvbG9yLnIgPSByKHQpO1xuICAgICAgY29sb3IuZyA9IGcodCk7XG4gICAgICBjb2xvci5iID0gYih0KTtcbiAgICAgIHJldHVybiBjb2xvciArIFwiXCI7XG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IHZhciByZ2JCYXNpcyA9IHJnYlNwbGluZShiYXNpcyk7XG5leHBvcnQgdmFyIHJnYkJhc2lzQ2xvc2VkID0gcmdiU3BsaW5lKGJhc2lzQ2xvc2VkKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEgPSArYSwgYiA9ICtiLCBmdW5jdGlvbih0KSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQoYSAqICgxIC0gdCkgKyBiICogdCk7XG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlci5qc1wiO1xuXG52YXIgcmVBID0gL1stK10/KD86XFxkK1xcLj9cXGQqfFxcLj9cXGQrKSg/OltlRV1bLStdP1xcZCspPy9nLFxuICAgIHJlQiA9IG5ldyBSZWdFeHAocmVBLnNvdXJjZSwgXCJnXCIpO1xuXG5mdW5jdGlvbiB6ZXJvKGIpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiO1xuICB9O1xufVxuXG5mdW5jdGlvbiBvbmUoYikge1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiBiKHQpICsgXCJcIjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYikge1xuICB2YXIgYmkgPSByZUEubGFzdEluZGV4ID0gcmVCLmxhc3RJbmRleCA9IDAsIC8vIHNjYW4gaW5kZXggZm9yIG5leHQgbnVtYmVyIGluIGJcbiAgICAgIGFtLCAvLyBjdXJyZW50IG1hdGNoIGluIGFcbiAgICAgIGJtLCAvLyBjdXJyZW50IG1hdGNoIGluIGJcbiAgICAgIGJzLCAvLyBzdHJpbmcgcHJlY2VkaW5nIGN1cnJlbnQgbnVtYmVyIGluIGIsIGlmIGFueVxuICAgICAgaSA9IC0xLCAvLyBpbmRleCBpbiBzXG4gICAgICBzID0gW10sIC8vIHN0cmluZyBjb25zdGFudHMgYW5kIHBsYWNlaG9sZGVyc1xuICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuXG4gIC8vIENvZXJjZSBpbnB1dHMgdG8gc3RyaW5ncy5cbiAgYSA9IGEgKyBcIlwiLCBiID0gYiArIFwiXCI7XG5cbiAgLy8gSW50ZXJwb2xhdGUgcGFpcnMgb2YgbnVtYmVycyBpbiBhICYgYi5cbiAgd2hpbGUgKChhbSA9IHJlQS5leGVjKGEpKVxuICAgICAgJiYgKGJtID0gcmVCLmV4ZWMoYikpKSB7XG4gICAgaWYgKChicyA9IGJtLmluZGV4KSA+IGJpKSB7IC8vIGEgc3RyaW5nIHByZWNlZGVzIHRoZSBuZXh0IG51bWJlciBpbiBiXG4gICAgICBicyA9IGIuc2xpY2UoYmksIGJzKTtcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBicztcbiAgICB9XG4gICAgaWYgKChhbSA9IGFtWzBdKSA9PT0gKGJtID0gYm1bMF0pKSB7IC8vIG51bWJlcnMgaW4gYSAmIGIgbWF0Y2hcbiAgICAgIGlmIChzW2ldKSBzW2ldICs9IGJtOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgICAgZWxzZSBzWysraV0gPSBibTtcbiAgICB9IGVsc2UgeyAvLyBpbnRlcnBvbGF0ZSBub24tbWF0Y2hpbmcgbnVtYmVyc1xuICAgICAgc1srK2ldID0gbnVsbDtcbiAgICAgIHEucHVzaCh7aTogaSwgeDogbnVtYmVyKGFtLCBibSl9KTtcbiAgICB9XG4gICAgYmkgPSByZUIubGFzdEluZGV4O1xuICB9XG5cbiAgLy8gQWRkIHJlbWFpbnMgb2YgYi5cbiAgaWYgKGJpIDwgYi5sZW5ndGgpIHtcbiAgICBicyA9IGIuc2xpY2UoYmkpO1xuICAgIGlmIChzW2ldKSBzW2ldICs9IGJzOyAvLyBjb2FsZXNjZSB3aXRoIHByZXZpb3VzIHN0cmluZ1xuICAgIGVsc2Ugc1srK2ldID0gYnM7XG4gIH1cblxuICAvLyBTcGVjaWFsIG9wdGltaXphdGlvbiBmb3Igb25seSBhIHNpbmdsZSBtYXRjaC5cbiAgLy8gT3RoZXJ3aXNlLCBpbnRlcnBvbGF0ZSBlYWNoIG9mIHRoZSBudW1iZXJzIGFuZCByZWpvaW4gdGhlIHN0cmluZy5cbiAgcmV0dXJuIHMubGVuZ3RoIDwgMiA/IChxWzBdXG4gICAgICA/IG9uZShxWzBdLngpXG4gICAgICA6IHplcm8oYikpXG4gICAgICA6IChiID0gcS5sZW5ndGgsIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbzsgaSA8IGI7ICsraSkgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgICAgIHJldHVybiBzLmpvaW4oXCJcIik7XG4gICAgICAgIH0pO1xufVxuIiwidmFyIGRlZ3JlZXMgPSAxODAgLyBNYXRoLlBJO1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0ge1xuICB0cmFuc2xhdGVYOiAwLFxuICB0cmFuc2xhdGVZOiAwLFxuICByb3RhdGU6IDAsXG4gIHNrZXdYOiAwLFxuICBzY2FsZVg6IDEsXG4gIHNjYWxlWTogMVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgYiwgYywgZCwgZSwgZikge1xuICB2YXIgc2NhbGVYLCBzY2FsZVksIHNrZXdYO1xuICBpZiAoc2NhbGVYID0gTWF0aC5zcXJ0KGEgKiBhICsgYiAqIGIpKSBhIC89IHNjYWxlWCwgYiAvPSBzY2FsZVg7XG4gIGlmIChza2V3WCA9IGEgKiBjICsgYiAqIGQpIGMgLT0gYSAqIHNrZXdYLCBkIC09IGIgKiBza2V3WDtcbiAgaWYgKHNjYWxlWSA9IE1hdGguc3FydChjICogYyArIGQgKiBkKSkgYyAvPSBzY2FsZVksIGQgLz0gc2NhbGVZLCBza2V3WCAvPSBzY2FsZVk7XG4gIGlmIChhICogZCA8IGIgKiBjKSBhID0gLWEsIGIgPSAtYiwgc2tld1ggPSAtc2tld1gsIHNjYWxlWCA9IC1zY2FsZVg7XG4gIHJldHVybiB7XG4gICAgdHJhbnNsYXRlWDogZSxcbiAgICB0cmFuc2xhdGVZOiBmLFxuICAgIHJvdGF0ZTogTWF0aC5hdGFuMihiLCBhKSAqIGRlZ3JlZXMsXG4gICAgc2tld1g6IE1hdGguYXRhbihza2V3WCkgKiBkZWdyZWVzLFxuICAgIHNjYWxlWDogc2NhbGVYLFxuICAgIHNjYWxlWTogc2NhbGVZXG4gIH07XG59XG4iLCJpbXBvcnQgbnVtYmVyIGZyb20gXCIuLi9udW1iZXIuanNcIjtcbmltcG9ydCB7cGFyc2VDc3MsIHBhcnNlU3ZnfSBmcm9tIFwiLi9wYXJzZS5qc1wiO1xuXG5mdW5jdGlvbiBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZSwgcHhDb21tYSwgcHhQYXJlbiwgZGVnUGFyZW4pIHtcblxuICBmdW5jdGlvbiBwb3Aocykge1xuICAgIHJldHVybiBzLmxlbmd0aCA/IHMucG9wKCkgKyBcIiBcIiA6IFwiXCI7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFuc2xhdGUoeGEsIHlhLCB4YiwgeWIsIHMsIHEpIHtcbiAgICBpZiAoeGEgIT09IHhiIHx8IHlhICE9PSB5Yikge1xuICAgICAgdmFyIGkgPSBzLnB1c2goXCJ0cmFuc2xhdGUoXCIsIG51bGwsIHB4Q29tbWEsIG51bGwsIHB4UGFyZW4pO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiB8fCB5Yikge1xuICAgICAgcy5wdXNoKFwidHJhbnNsYXRlKFwiICsgeGIgKyBweENvbW1hICsgeWIgKyBweFBhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByb3RhdGUoYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBpZiAoYSAtIGIgPiAxODApIGIgKz0gMzYwOyBlbHNlIGlmIChiIC0gYSA+IDE4MCkgYSArPSAzNjA7IC8vIHNob3J0ZXN0IHBhdGhcbiAgICAgIHEucHVzaCh7aTogcy5wdXNoKHBvcChzKSArIFwicm90YXRlKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInJvdGF0ZShcIiArIGIgKyBkZWdQYXJlbik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2tld1goYSwgYiwgcywgcSkge1xuICAgIGlmIChhICE9PSBiKSB7XG4gICAgICBxLnB1c2goe2k6IHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiLCBudWxsLCBkZWdQYXJlbikgLSAyLCB4OiBudW1iZXIoYSwgYil9KTtcbiAgICB9IGVsc2UgaWYgKGIpIHtcbiAgICAgIHMucHVzaChwb3AocykgKyBcInNrZXdYKFwiICsgYiArIGRlZ1BhcmVuKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzY2FsZSh4YSwgeWEsIHhiLCB5YiwgcywgcSkge1xuICAgIGlmICh4YSAhPT0geGIgfHwgeWEgIT09IHliKSB7XG4gICAgICB2YXIgaSA9IHMucHVzaChwb3AocykgKyBcInNjYWxlKFwiLCBudWxsLCBcIixcIiwgbnVsbCwgXCIpXCIpO1xuICAgICAgcS5wdXNoKHtpOiBpIC0gNCwgeDogbnVtYmVyKHhhLCB4Yil9LCB7aTogaSAtIDIsIHg6IG51bWJlcih5YSwgeWIpfSk7XG4gICAgfSBlbHNlIGlmICh4YiAhPT0gMSB8fCB5YiAhPT0gMSkge1xuICAgICAgcy5wdXNoKHBvcChzKSArIFwic2NhbGUoXCIgKyB4YiArIFwiLFwiICsgeWIgKyBcIilcIik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgcyA9IFtdLCAvLyBzdHJpbmcgY29uc3RhbnRzIGFuZCBwbGFjZWhvbGRlcnNcbiAgICAgICAgcSA9IFtdOyAvLyBudW1iZXIgaW50ZXJwb2xhdG9yc1xuICAgIGEgPSBwYXJzZShhKSwgYiA9IHBhcnNlKGIpO1xuICAgIHRyYW5zbGF0ZShhLnRyYW5zbGF0ZVgsIGEudHJhbnNsYXRlWSwgYi50cmFuc2xhdGVYLCBiLnRyYW5zbGF0ZVksIHMsIHEpO1xuICAgIHJvdGF0ZShhLnJvdGF0ZSwgYi5yb3RhdGUsIHMsIHEpO1xuICAgIHNrZXdYKGEuc2tld1gsIGIuc2tld1gsIHMsIHEpO1xuICAgIHNjYWxlKGEuc2NhbGVYLCBhLnNjYWxlWSwgYi5zY2FsZVgsIGIuc2NhbGVZLCBzLCBxKTtcbiAgICBhID0gYiA9IG51bGw7IC8vIGdjXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBpID0gLTEsIG4gPSBxLmxlbmd0aCwgbztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZUNzcywgXCJweCwgXCIsIFwicHgpXCIsIFwiZGVnKVwiKTtcbmV4cG9ydCB2YXIgaW50ZXJwb2xhdGVUcmFuc2Zvcm1TdmcgPSBpbnRlcnBvbGF0ZVRyYW5zZm9ybShwYXJzZVN2ZywgXCIsIFwiLCBcIilcIiwgXCIpXCIpO1xuIiwiaW1wb3J0IGRlY29tcG9zZSwge2lkZW50aXR5fSBmcm9tIFwiLi9kZWNvbXBvc2UuanNcIjtcblxudmFyIHN2Z05vZGU7XG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDc3ModmFsdWUpIHtcbiAgY29uc3QgbSA9IG5ldyAodHlwZW9mIERPTU1hdHJpeCA9PT0gXCJmdW5jdGlvblwiID8gRE9NTWF0cml4IDogV2ViS2l0Q1NTTWF0cml4KSh2YWx1ZSArIFwiXCIpO1xuICByZXR1cm4gbS5pc0lkZW50aXR5ID8gaWRlbnRpdHkgOiBkZWNvbXBvc2UobS5hLCBtLmIsIG0uYywgbS5kLCBtLmUsIG0uZik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVN2Zyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIGlkZW50aXR5O1xuICBpZiAoIXN2Z05vZGUpIHN2Z05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcImdcIik7XG4gIHN2Z05vZGUuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIHZhbHVlKTtcbiAgaWYgKCEodmFsdWUgPSBzdmdOb2RlLnRyYW5zZm9ybS5iYXNlVmFsLmNvbnNvbGlkYXRlKCkpKSByZXR1cm4gaWRlbnRpdHk7XG4gIHZhbHVlID0gdmFsdWUubWF0cml4O1xuICByZXR1cm4gZGVjb21wb3NlKHZhbHVlLmEsIHZhbHVlLmIsIHZhbHVlLmMsIHZhbHVlLmQsIHZhbHVlLmUsIHZhbHVlLmYpO1xufVxuIiwiaW1wb3J0IHtjb2xvcn0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQgcmdiIGZyb20gXCIuL3JnYi5qc1wiO1xuaW1wb3J0IHtnZW5lcmljQXJyYXl9IGZyb20gXCIuL2FycmF5LmpzXCI7XG5pbXBvcnQgZGF0ZSBmcm9tIFwiLi9kYXRlLmpzXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlci5qc1wiO1xuaW1wb3J0IG9iamVjdCBmcm9tIFwiLi9vYmplY3QuanNcIjtcbmltcG9ydCBzdHJpbmcgZnJvbSBcIi4vc3RyaW5nLmpzXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCBudW1iZXJBcnJheSwge2lzTnVtYmVyQXJyYXl9IGZyb20gXCIuL251bWJlckFycmF5LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgdmFyIHQgPSB0eXBlb2YgYiwgYztcbiAgcmV0dXJuIGIgPT0gbnVsbCB8fCB0ID09PSBcImJvb2xlYW5cIiA/IGNvbnN0YW50KGIpXG4gICAgICA6ICh0ID09PSBcIm51bWJlclwiID8gbnVtYmVyXG4gICAgICA6IHQgPT09IFwic3RyaW5nXCIgPyAoKGMgPSBjb2xvcihiKSkgPyAoYiA9IGMsIHJnYikgOiBzdHJpbmcpXG4gICAgICA6IGIgaW5zdGFuY2VvZiBjb2xvciA/IHJnYlxuICAgICAgOiBiIGluc3RhbmNlb2YgRGF0ZSA/IGRhdGVcbiAgICAgIDogaXNOdW1iZXJBcnJheShiKSA/IG51bWJlckFycmF5XG4gICAgICA6IEFycmF5LmlzQXJyYXkoYikgPyBnZW5lcmljQXJyYXlcbiAgICAgIDogdHlwZW9mIGIudmFsdWVPZiAhPT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBiLnRvU3RyaW5nICE9PSBcImZ1bmN0aW9uXCIgfHwgaXNOYU4oYikgPyBvYmplY3RcbiAgICAgIDogbnVtYmVyKShhLCBiKTtcbn1cbiIsInZhciBlcHNpbG9uMiA9IDFlLTEyO1xuXG5mdW5jdGlvbiBjb3NoKHgpIHtcbiAgcmV0dXJuICgoeCA9IE1hdGguZXhwKHgpKSArIDEgLyB4KSAvIDI7XG59XG5cbmZ1bmN0aW9uIHNpbmgoeCkge1xuICByZXR1cm4gKCh4ID0gTWF0aC5leHAoeCkpIC0gMSAvIHgpIC8gMjtcbn1cblxuZnVuY3Rpb24gdGFuaCh4KSB7XG4gIHJldHVybiAoKHggPSBNYXRoLmV4cCgyICogeCkpIC0gMSkgLyAoeCArIDEpO1xufVxuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gem9vbVJobyhyaG8sIHJobzIsIHJobzQpIHtcblxuICAvLyBwMCA9IFt1eDAsIHV5MCwgdzBdXG4gIC8vIHAxID0gW3V4MSwgdXkxLCB3MV1cbiAgZnVuY3Rpb24gem9vbShwMCwgcDEpIHtcbiAgICB2YXIgdXgwID0gcDBbMF0sIHV5MCA9IHAwWzFdLCB3MCA9IHAwWzJdLFxuICAgICAgICB1eDEgPSBwMVswXSwgdXkxID0gcDFbMV0sIHcxID0gcDFbMl0sXG4gICAgICAgIGR4ID0gdXgxIC0gdXgwLFxuICAgICAgICBkeSA9IHV5MSAtIHV5MCxcbiAgICAgICAgZDIgPSBkeCAqIGR4ICsgZHkgKiBkeSxcbiAgICAgICAgaSxcbiAgICAgICAgUztcblxuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgdTAg4omFIHUxLlxuICAgIGlmIChkMiA8IGVwc2lsb24yKSB7XG4gICAgICBTID0gTWF0aC5sb2codzEgLyB3MCkgLyByaG87XG4gICAgICBpID0gZnVuY3Rpb24odCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgIHV4MCArIHQgKiBkeCxcbiAgICAgICAgICB1eTAgKyB0ICogZHksXG4gICAgICAgICAgdzAgKiBNYXRoLmV4cChyaG8gKiB0ICogUylcbiAgICAgICAgXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBHZW5lcmFsIGNhc2UuXG4gICAgZWxzZSB7XG4gICAgICB2YXIgZDEgPSBNYXRoLnNxcnQoZDIpLFxuICAgICAgICAgIGIwID0gKHcxICogdzEgLSB3MCAqIHcwICsgcmhvNCAqIGQyKSAvICgyICogdzAgKiByaG8yICogZDEpLFxuICAgICAgICAgIGIxID0gKHcxICogdzEgLSB3MCAqIHcwIC0gcmhvNCAqIGQyKSAvICgyICogdzEgKiByaG8yICogZDEpLFxuICAgICAgICAgIHIwID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIwICogYjAgKyAxKSAtIGIwKSxcbiAgICAgICAgICByMSA9IE1hdGgubG9nKE1hdGguc3FydChiMSAqIGIxICsgMSkgLSBiMSk7XG4gICAgICBTID0gKHIxIC0gcjApIC8gcmhvO1xuICAgICAgaSA9IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdmFyIHMgPSB0ICogUyxcbiAgICAgICAgICAgIGNvc2hyMCA9IGNvc2gocjApLFxuICAgICAgICAgICAgdSA9IHcwIC8gKHJobzIgKiBkMSkgKiAoY29zaHIwICogdGFuaChyaG8gKiBzICsgcjApIC0gc2luaChyMCkpO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgIHV4MCArIHUgKiBkeCxcbiAgICAgICAgICB1eTAgKyB1ICogZHksXG4gICAgICAgICAgdzAgKiBjb3NocjAgLyBjb3NoKHJobyAqIHMgKyByMClcbiAgICAgICAgXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpLmR1cmF0aW9uID0gUyAqIDEwMDAgKiByaG8gLyBNYXRoLlNRUlQyO1xuXG4gICAgcmV0dXJuIGk7XG4gIH1cblxuICB6b29tLnJobyA9IGZ1bmN0aW9uKF8pIHtcbiAgICB2YXIgXzEgPSBNYXRoLm1heCgxZS0zLCArXyksIF8yID0gXzEgKiBfMSwgXzQgPSBfMiAqIF8yO1xuICAgIHJldHVybiB6b29tUmhvKF8xLCBfMiwgXzQpO1xuICB9O1xuXG4gIHJldHVybiB6b29tO1xufSkoTWF0aC5TUVJUMiwgMiwgNCk7XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgcGF0aH0gZnJvbSBcIi4vcGF0aC5qc1wiO1xuIiwiY29uc3QgcGkgPSBNYXRoLlBJLFxuICAgIHRhdSA9IDIgKiBwaSxcbiAgICBlcHNpbG9uID0gMWUtNixcbiAgICB0YXVFcHNpbG9uID0gdGF1IC0gZXBzaWxvbjtcblxuZnVuY3Rpb24gUGF0aCgpIHtcbiAgdGhpcy5feDAgPSB0aGlzLl95MCA9IC8vIHN0YXJ0IG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl94MSA9IHRoaXMuX3kxID0gbnVsbDsgLy8gZW5kIG9mIGN1cnJlbnQgc3VicGF0aFxuICB0aGlzLl8gPSBcIlwiO1xufVxuXG5mdW5jdGlvbiBwYXRoKCkge1xuICByZXR1cm4gbmV3IFBhdGg7XG59XG5cblBhdGgucHJvdG90eXBlID0gcGF0aC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBQYXRoLFxuICBtb3ZlVG86IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDAgPSB0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGNsb3NlUGF0aDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX3gxICE9PSBudWxsKSB7XG4gICAgICB0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwO1xuICAgICAgdGhpcy5fICs9IFwiWlwiO1xuICAgIH1cbiAgfSxcbiAgbGluZVRvOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiTFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIHF1YWRyYXRpY0N1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeCwgeSkge1xuICAgIHRoaXMuXyArPSBcIlFcIiArICgreDEpICsgXCIsXCIgKyAoK3kxKSArIFwiLFwiICsgKHRoaXMuX3gxID0gK3gpICsgXCIsXCIgKyAodGhpcy5feTEgPSAreSk7XG4gIH0sXG4gIGJlemllckN1cnZlVG86IGZ1bmN0aW9uKHgxLCB5MSwgeDIsIHkyLCB4LCB5KSB7XG4gICAgdGhpcy5fICs9IFwiQ1wiICsgKCt4MSkgKyBcIixcIiArICgreTEpICsgXCIsXCIgKyAoK3gyKSArIFwiLFwiICsgKCt5MikgKyBcIixcIiArICh0aGlzLl94MSA9ICt4KSArIFwiLFwiICsgKHRoaXMuX3kxID0gK3kpO1xuICB9LFxuICBhcmNUbzogZnVuY3Rpb24oeDEsIHkxLCB4MiwgeTIsIHIpIHtcbiAgICB4MSA9ICt4MSwgeTEgPSAreTEsIHgyID0gK3gyLCB5MiA9ICt5MiwgciA9ICtyO1xuICAgIHZhciB4MCA9IHRoaXMuX3gxLFxuICAgICAgICB5MCA9IHRoaXMuX3kxLFxuICAgICAgICB4MjEgPSB4MiAtIHgxLFxuICAgICAgICB5MjEgPSB5MiAtIHkxLFxuICAgICAgICB4MDEgPSB4MCAtIHgxLFxuICAgICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgICBsMDFfMiA9IHgwMSAqIHgwMSArIHkwMSAqIHkwMTtcblxuICAgIC8vIElzIHRoZSByYWRpdXMgbmVnYXRpdmU/IEVycm9yLlxuICAgIGlmIChyIDwgMCkgdGhyb3cgbmV3IEVycm9yKFwibmVnYXRpdmUgcmFkaXVzOiBcIiArIHIpO1xuXG4gICAgLy8gSXMgdGhpcyBwYXRoIGVtcHR5PyBNb3ZlIHRvICh4MSx5MSkuXG4gICAgaWYgKHRoaXMuX3gxID09PSBudWxsKSB7XG4gICAgICB0aGlzLl8gKz0gXCJNXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPciwgaXMgKHgxLHkxKSBjb2luY2lkZW50IHdpdGggKHgwLHkwKT8gRG8gbm90aGluZy5cbiAgICBlbHNlIGlmICghKGwwMV8yID4gZXBzaWxvbikpO1xuXG4gICAgLy8gT3IsIGFyZSAoeDAseTApLCAoeDEseTEpIGFuZCAoeDIseTIpIGNvbGxpbmVhcj9cbiAgICAvLyBFcXVpdmFsZW50bHksIGlzICh4MSx5MSkgY29pbmNpZGVudCB3aXRoICh4Mix5Mik/XG4gICAgLy8gT3IsIGlzIHRoZSByYWRpdXMgemVybz8gTGluZSB0byAoeDEseTEpLlxuICAgIGVsc2UgaWYgKCEoTWF0aC5hYnMoeTAxICogeDIxIC0geTIxICogeDAxKSA+IGVwc2lsb24pIHx8ICFyKSB7XG4gICAgICB0aGlzLl8gKz0gXCJMXCIgKyAodGhpcy5feDEgPSB4MSkgKyBcIixcIiArICh0aGlzLl95MSA9IHkxKTtcbiAgICB9XG5cbiAgICAvLyBPdGhlcndpc2UsIGRyYXcgYW4gYXJjIVxuICAgIGVsc2Uge1xuICAgICAgdmFyIHgyMCA9IHgyIC0geDAsXG4gICAgICAgICAgeTIwID0geTIgLSB5MCxcbiAgICAgICAgICBsMjFfMiA9IHgyMSAqIHgyMSArIHkyMSAqIHkyMSxcbiAgICAgICAgICBsMjBfMiA9IHgyMCAqIHgyMCArIHkyMCAqIHkyMCxcbiAgICAgICAgICBsMjEgPSBNYXRoLnNxcnQobDIxXzIpLFxuICAgICAgICAgIGwwMSA9IE1hdGguc3FydChsMDFfMiksXG4gICAgICAgICAgbCA9IHIgKiBNYXRoLnRhbigocGkgLSBNYXRoLmFjb3MoKGwyMV8yICsgbDAxXzIgLSBsMjBfMikgLyAoMiAqIGwyMSAqIGwwMSkpKSAvIDIpLFxuICAgICAgICAgIHQwMSA9IGwgLyBsMDEsXG4gICAgICAgICAgdDIxID0gbCAvIGwyMTtcblxuICAgICAgLy8gSWYgdGhlIHN0YXJ0IHRhbmdlbnQgaXMgbm90IGNvaW5jaWRlbnQgd2l0aCAoeDAseTApLCBsaW5lIHRvLlxuICAgICAgaWYgKE1hdGguYWJzKHQwMSAtIDEpID4gZXBzaWxvbikge1xuICAgICAgICB0aGlzLl8gKz0gXCJMXCIgKyAoeDEgKyB0MDEgKiB4MDEpICsgXCIsXCIgKyAoeTEgKyB0MDEgKiB5MDEpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwwLFwiICsgKCsoeTAxICogeDIwID4geDAxICogeTIwKSkgKyBcIixcIiArICh0aGlzLl94MSA9IHgxICsgdDIxICogeDIxKSArIFwiLFwiICsgKHRoaXMuX3kxID0geTEgKyB0MjEgKiB5MjEpO1xuICAgIH1cbiAgfSxcbiAgYXJjOiBmdW5jdGlvbih4LCB5LCByLCBhMCwgYTEsIGNjdykge1xuICAgIHggPSAreCwgeSA9ICt5LCByID0gK3IsIGNjdyA9ICEhY2N3O1xuICAgIHZhciBkeCA9IHIgKiBNYXRoLmNvcyhhMCksXG4gICAgICAgIGR5ID0gciAqIE1hdGguc2luKGEwKSxcbiAgICAgICAgeDAgPSB4ICsgZHgsXG4gICAgICAgIHkwID0geSArIGR5LFxuICAgICAgICBjdyA9IDEgXiBjY3csXG4gICAgICAgIGRhID0gY2N3ID8gYTAgLSBhMSA6IGExIC0gYTA7XG5cbiAgICAvLyBJcyB0aGUgcmFkaXVzIG5lZ2F0aXZlPyBFcnJvci5cbiAgICBpZiAociA8IDApIHRocm93IG5ldyBFcnJvcihcIm5lZ2F0aXZlIHJhZGl1czogXCIgKyByKTtcblxuICAgIC8vIElzIHRoaXMgcGF0aCBlbXB0eT8gTW92ZSB0byAoeDAseTApLlxuICAgIGlmICh0aGlzLl94MSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5fICs9IFwiTVwiICsgeDAgKyBcIixcIiArIHkwO1xuICAgIH1cblxuICAgIC8vIE9yLCBpcyAoeDAseTApIG5vdCBjb2luY2lkZW50IHdpdGggdGhlIHByZXZpb3VzIHBvaW50PyBMaW5lIHRvICh4MCx5MCkuXG4gICAgZWxzZSBpZiAoTWF0aC5hYnModGhpcy5feDEgLSB4MCkgPiBlcHNpbG9uIHx8IE1hdGguYWJzKHRoaXMuX3kxIC0geTApID4gZXBzaWxvbikge1xuICAgICAgdGhpcy5fICs9IFwiTFwiICsgeDAgKyBcIixcIiArIHkwO1xuICAgIH1cblxuICAgIC8vIElzIHRoaXMgYXJjIGVtcHR5PyBXZeKAmXJlIGRvbmUuXG4gICAgaWYgKCFyKSByZXR1cm47XG5cbiAgICAvLyBEb2VzIHRoZSBhbmdsZSBnbyB0aGUgd3Jvbmcgd2F5PyBGbGlwIHRoZSBkaXJlY3Rpb24uXG4gICAgaWYgKGRhIDwgMCkgZGEgPSBkYSAlIHRhdSArIHRhdTtcblxuICAgIC8vIElzIHRoaXMgYSBjb21wbGV0ZSBjaXJjbGU/IERyYXcgdHdvIGFyY3MgdG8gY29tcGxldGUgdGhlIGNpcmNsZS5cbiAgICBpZiAoZGEgPiB0YXVFcHNpbG9uKSB7XG4gICAgICB0aGlzLl8gKz0gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIsMCwxLFwiICsgY3cgKyBcIixcIiArICh4IC0gZHgpICsgXCIsXCIgKyAoeSAtIGR5KSArIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsMSxcIiArIGN3ICsgXCIsXCIgKyAodGhpcy5feDEgPSB4MCkgKyBcIixcIiArICh0aGlzLl95MSA9IHkwKTtcbiAgICB9XG5cbiAgICAvLyBJcyB0aGlzIGFyYyBub24tZW1wdHk/IERyYXcgYW4gYXJjIVxuICAgIGVsc2UgaWYgKGRhID4gZXBzaWxvbikge1xuICAgICAgdGhpcy5fICs9IFwiQVwiICsgciArIFwiLFwiICsgciArIFwiLDAsXCIgKyAoKyhkYSA+PSBwaSkpICsgXCIsXCIgKyBjdyArIFwiLFwiICsgKHRoaXMuX3gxID0geCArIHIgKiBNYXRoLmNvcyhhMSkpICsgXCIsXCIgKyAodGhpcy5feTEgPSB5ICsgciAqIE1hdGguc2luKGExKSk7XG4gICAgfVxuICB9LFxuICByZWN0OiBmdW5jdGlvbih4LCB5LCB3LCBoKSB7XG4gICAgdGhpcy5fICs9IFwiTVwiICsgKHRoaXMuX3gwID0gdGhpcy5feDEgPSAreCkgKyBcIixcIiArICh0aGlzLl95MCA9IHRoaXMuX3kxID0gK3kpICsgXCJoXCIgKyAoK3cpICsgXCJ2XCIgKyAoK2gpICsgXCJoXCIgKyAoLXcpICsgXCJaXCI7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBwYXRoO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbikge1xuICB2YXIgaSA9IC0xLFxuICAgICAgbiA9IHBvbHlnb24ubGVuZ3RoLFxuICAgICAgYSxcbiAgICAgIGIgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIGFyZWEgPSAwO1xuXG4gIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgYSA9IGI7XG4gICAgYiA9IHBvbHlnb25baV07XG4gICAgYXJlYSArPSBhWzFdICogYlswXSAtIGFbMF0gKiBiWzFdO1xuICB9XG5cbiAgcmV0dXJuIGFyZWEgLyAyO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbikge1xuICB2YXIgaSA9IC0xLFxuICAgICAgbiA9IHBvbHlnb24ubGVuZ3RoLFxuICAgICAgeCA9IDAsXG4gICAgICB5ID0gMCxcbiAgICAgIGEsXG4gICAgICBiID0gcG9seWdvbltuIC0gMV0sXG4gICAgICBjLFxuICAgICAgayA9IDA7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICBhID0gYjtcbiAgICBiID0gcG9seWdvbltpXTtcbiAgICBrICs9IGMgPSBhWzBdICogYlsxXSAtIGJbMF0gKiBhWzFdO1xuICAgIHggKz0gKGFbMF0gKyBiWzBdKSAqIGM7XG4gICAgeSArPSAoYVsxXSArIGJbMV0pICogYztcbiAgfVxuXG4gIHJldHVybiBrICo9IDMsIFt4IC8gaywgeSAvIGtdO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbiwgcG9pbnQpIHtcbiAgdmFyIG4gPSBwb2x5Z29uLmxlbmd0aCxcbiAgICAgIHAgPSBwb2x5Z29uW24gLSAxXSxcbiAgICAgIHggPSBwb2ludFswXSwgeSA9IHBvaW50WzFdLFxuICAgICAgeDAgPSBwWzBdLCB5MCA9IHBbMV0sXG4gICAgICB4MSwgeTEsXG4gICAgICBpbnNpZGUgPSBmYWxzZTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkge1xuICAgIHAgPSBwb2x5Z29uW2ldLCB4MSA9IHBbMF0sIHkxID0gcFsxXTtcbiAgICBpZiAoKCh5MSA+IHkpICE9PSAoeTAgPiB5KSkgJiYgKHggPCAoeDAgLSB4MSkgKiAoeSAtIHkxKSAvICh5MCAtIHkxKSArIHgxKSkgaW5zaWRlID0gIWluc2lkZTtcbiAgICB4MCA9IHgxLCB5MCA9IHkxO1xuICB9XG5cbiAgcmV0dXJuIGluc2lkZTtcbn1cbiIsIi8vIFJldHVybnMgdGhlIDJEIGNyb3NzIHByb2R1Y3Qgb2YgQUIgYW5kIEFDIHZlY3RvcnMsIGkuZS4sIHRoZSB6LWNvbXBvbmVudCBvZlxuLy8gdGhlIDNEIGNyb3NzIHByb2R1Y3QgaW4gYSBxdWFkcmFudCBJIENhcnRlc2lhbiBjb29yZGluYXRlIHN5c3RlbSAoK3ggaXNcbi8vIHJpZ2h0LCAreSBpcyB1cCkuIFJldHVybnMgYSBwb3NpdGl2ZSB2YWx1ZSBpZiBBQkMgaXMgY291bnRlci1jbG9ja3dpc2UsXG4vLyBuZWdhdGl2ZSBpZiBjbG9ja3dpc2UsIGFuZCB6ZXJvIGlmIHRoZSBwb2ludHMgYXJlIGNvbGxpbmVhci5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIsIGMpIHtcbiAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAoY1sxXSAtIGFbMV0pIC0gKGJbMV0gLSBhWzFdKSAqIChjWzBdIC0gYVswXSk7XG59XG4iLCJpbXBvcnQgY3Jvc3MgZnJvbSBcIi4vY3Jvc3MuanNcIjtcblxuZnVuY3Rpb24gbGV4aWNvZ3JhcGhpY09yZGVyKGEsIGIpIHtcbiAgcmV0dXJuIGFbMF0gLSBiWzBdIHx8IGFbMV0gLSBiWzFdO1xufVxuXG4vLyBDb21wdXRlcyB0aGUgdXBwZXIgY29udmV4IGh1bGwgcGVyIHRoZSBtb25vdG9uZSBjaGFpbiBhbGdvcml0aG0uXG4vLyBBc3N1bWVzIHBvaW50cy5sZW5ndGggPj0gMywgaXMgc29ydGVkIGJ5IHgsIHVuaXF1ZSBpbiB5LlxuLy8gUmV0dXJucyBhbiBhcnJheSBvZiBpbmRpY2VzIGludG8gcG9pbnRzIGluIGxlZnQtdG8tcmlnaHQgb3JkZXIuXG5mdW5jdGlvbiBjb21wdXRlVXBwZXJIdWxsSW5kZXhlcyhwb2ludHMpIHtcbiAgY29uc3QgbiA9IHBvaW50cy5sZW5ndGgsXG4gICAgICBpbmRleGVzID0gWzAsIDFdO1xuICBsZXQgc2l6ZSA9IDIsIGk7XG5cbiAgZm9yIChpID0gMjsgaSA8IG47ICsraSkge1xuICAgIHdoaWxlIChzaXplID4gMSAmJiBjcm9zcyhwb2ludHNbaW5kZXhlc1tzaXplIC0gMl1dLCBwb2ludHNbaW5kZXhlc1tzaXplIC0gMV1dLCBwb2ludHNbaV0pIDw9IDApIC0tc2l6ZTtcbiAgICBpbmRleGVzW3NpemUrK10gPSBpO1xuICB9XG5cbiAgcmV0dXJuIGluZGV4ZXMuc2xpY2UoMCwgc2l6ZSk7IC8vIHJlbW92ZSBwb3BwZWQgcG9pbnRzXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHBvaW50cykge1xuICBpZiAoKG4gPSBwb2ludHMubGVuZ3RoKSA8IDMpIHJldHVybiBudWxsO1xuXG4gIHZhciBpLFxuICAgICAgbixcbiAgICAgIHNvcnRlZFBvaW50cyA9IG5ldyBBcnJheShuKSxcbiAgICAgIGZsaXBwZWRQb2ludHMgPSBuZXcgQXJyYXkobik7XG5cbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgc29ydGVkUG9pbnRzW2ldID0gWytwb2ludHNbaV1bMF0sICtwb2ludHNbaV1bMV0sIGldO1xuICBzb3J0ZWRQb2ludHMuc29ydChsZXhpY29ncmFwaGljT3JkZXIpO1xuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBmbGlwcGVkUG9pbnRzW2ldID0gW3NvcnRlZFBvaW50c1tpXVswXSwgLXNvcnRlZFBvaW50c1tpXVsxXV07XG5cbiAgdmFyIHVwcGVySW5kZXhlcyA9IGNvbXB1dGVVcHBlckh1bGxJbmRleGVzKHNvcnRlZFBvaW50cyksXG4gICAgICBsb3dlckluZGV4ZXMgPSBjb21wdXRlVXBwZXJIdWxsSW5kZXhlcyhmbGlwcGVkUG9pbnRzKTtcblxuICAvLyBDb25zdHJ1Y3QgdGhlIGh1bGwgcG9seWdvbiwgcmVtb3ZpbmcgcG9zc2libGUgZHVwbGljYXRlIGVuZHBvaW50cy5cbiAgdmFyIHNraXBMZWZ0ID0gbG93ZXJJbmRleGVzWzBdID09PSB1cHBlckluZGV4ZXNbMF0sXG4gICAgICBza2lwUmlnaHQgPSBsb3dlckluZGV4ZXNbbG93ZXJJbmRleGVzLmxlbmd0aCAtIDFdID09PSB1cHBlckluZGV4ZXNbdXBwZXJJbmRleGVzLmxlbmd0aCAtIDFdLFxuICAgICAgaHVsbCA9IFtdO1xuXG4gIC8vIEFkZCB1cHBlciBodWxsIGluIHJpZ2h0LXRvLWwgb3JkZXIuXG4gIC8vIFRoZW4gYWRkIGxvd2VyIGh1bGwgaW4gbGVmdC10by1yaWdodCBvcmRlci5cbiAgZm9yIChpID0gdXBwZXJJbmRleGVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSBodWxsLnB1c2gocG9pbnRzW3NvcnRlZFBvaW50c1t1cHBlckluZGV4ZXNbaV1dWzJdXSk7XG4gIGZvciAoaSA9ICtza2lwTGVmdDsgaSA8IGxvd2VySW5kZXhlcy5sZW5ndGggLSBza2lwUmlnaHQ7ICsraSkgaHVsbC5wdXNoKHBvaW50c1tzb3J0ZWRQb2ludHNbbG93ZXJJbmRleGVzW2ldXVsyXV0pO1xuXG4gIHJldHVybiBodWxsO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHBvbHlnb25BcmVhfSBmcm9tIFwiLi9hcmVhLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcG9seWdvbkNlbnRyb2lkfSBmcm9tIFwiLi9jZW50cm9pZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBvbHlnb25IdWxsfSBmcm9tIFwiLi9odWxsLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcG9seWdvbkNvbnRhaW5zfSBmcm9tIFwiLi9jb250YWlucy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHBvbHlnb25MZW5ndGh9IGZyb20gXCIuL2xlbmd0aC5qc1wiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocG9seWdvbikge1xuICB2YXIgaSA9IC0xLFxuICAgICAgbiA9IHBvbHlnb24ubGVuZ3RoLFxuICAgICAgYiA9IHBvbHlnb25bbiAtIDFdLFxuICAgICAgeGEsXG4gICAgICB5YSxcbiAgICAgIHhiID0gYlswXSxcbiAgICAgIHliID0gYlsxXSxcbiAgICAgIHBlcmltZXRlciA9IDA7XG5cbiAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICB4YSA9IHhiO1xuICAgIHlhID0geWI7XG4gICAgYiA9IHBvbHlnb25baV07XG4gICAgeGIgPSBiWzBdO1xuICAgIHliID0gYlsxXTtcbiAgICB4YSAtPSB4YjtcbiAgICB5YSAtPSB5YjtcbiAgICBwZXJpbWV0ZXIgKz0gTWF0aC5oeXBvdCh4YSwgeWEpO1xuICB9XG5cbiAgcmV0dXJuIHBlcmltZXRlcjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGQpIHtcbiAgY29uc3QgeCA9ICt0aGlzLl94LmNhbGwobnVsbCwgZCksXG4gICAgICB5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKTtcbiAgcmV0dXJuIGFkZCh0aGlzLmNvdmVyKHgsIHkpLCB4LCB5LCBkKTtcbn1cblxuZnVuY3Rpb24gYWRkKHRyZWUsIHgsIHksIGQpIHtcbiAgaWYgKGlzTmFOKHgpIHx8IGlzTmFOKHkpKSByZXR1cm4gdHJlZTsgLy8gaWdub3JlIGludmFsaWQgcG9pbnRzXG5cbiAgdmFyIHBhcmVudCxcbiAgICAgIG5vZGUgPSB0cmVlLl9yb290LFxuICAgICAgbGVhZiA9IHtkYXRhOiBkfSxcbiAgICAgIHgwID0gdHJlZS5feDAsXG4gICAgICB5MCA9IHRyZWUuX3kwLFxuICAgICAgeDEgPSB0cmVlLl94MSxcbiAgICAgIHkxID0gdHJlZS5feTEsXG4gICAgICB4bSxcbiAgICAgIHltLFxuICAgICAgeHAsXG4gICAgICB5cCxcbiAgICAgIHJpZ2h0LFxuICAgICAgYm90dG9tLFxuICAgICAgaSxcbiAgICAgIGo7XG5cbiAgLy8gSWYgdGhlIHRyZWUgaXMgZW1wdHksIGluaXRpYWxpemUgdGhlIHJvb3QgYXMgYSBsZWFmLlxuICBpZiAoIW5vZGUpIHJldHVybiB0cmVlLl9yb290ID0gbGVhZiwgdHJlZTtcblxuICAvLyBGaW5kIHRoZSBleGlzdGluZyBsZWFmIGZvciB0aGUgbmV3IHBvaW50LCBvciBhZGQgaXQuXG4gIHdoaWxlIChub2RlLmxlbmd0aCkge1xuICAgIGlmIChyaWdodCA9IHggPj0gKHhtID0gKHgwICsgeDEpIC8gMikpIHgwID0geG07IGVsc2UgeDEgPSB4bTtcbiAgICBpZiAoYm90dG9tID0geSA+PSAoeW0gPSAoeTAgKyB5MSkgLyAyKSkgeTAgPSB5bTsgZWxzZSB5MSA9IHltO1xuICAgIGlmIChwYXJlbnQgPSBub2RlLCAhKG5vZGUgPSBub2RlW2kgPSBib3R0b20gPDwgMSB8IHJpZ2h0XSkpIHJldHVybiBwYXJlbnRbaV0gPSBsZWFmLCB0cmVlO1xuICB9XG5cbiAgLy8gSXMgdGhlIG5ldyBwb2ludCBpcyBleGFjdGx5IGNvaW5jaWRlbnQgd2l0aCB0aGUgZXhpc3RpbmcgcG9pbnQ/XG4gIHhwID0gK3RyZWUuX3guY2FsbChudWxsLCBub2RlLmRhdGEpO1xuICB5cCA9ICt0cmVlLl95LmNhbGwobnVsbCwgbm9kZS5kYXRhKTtcbiAgaWYgKHggPT09IHhwICYmIHkgPT09IHlwKSByZXR1cm4gbGVhZi5uZXh0ID0gbm9kZSwgcGFyZW50ID8gcGFyZW50W2ldID0gbGVhZiA6IHRyZWUuX3Jvb3QgPSBsZWFmLCB0cmVlO1xuXG4gIC8vIE90aGVyd2lzZSwgc3BsaXQgdGhlIGxlYWYgbm9kZSB1bnRpbCB0aGUgb2xkIGFuZCBuZXcgcG9pbnQgYXJlIHNlcGFyYXRlZC5cbiAgZG8ge1xuICAgIHBhcmVudCA9IHBhcmVudCA/IHBhcmVudFtpXSA9IG5ldyBBcnJheSg0KSA6IHRyZWUuX3Jvb3QgPSBuZXcgQXJyYXkoNCk7XG4gICAgaWYgKHJpZ2h0ID0geCA+PSAoeG0gPSAoeDAgKyB4MSkgLyAyKSkgeDAgPSB4bTsgZWxzZSB4MSA9IHhtO1xuICAgIGlmIChib3R0b20gPSB5ID49ICh5bSA9ICh5MCArIHkxKSAvIDIpKSB5MCA9IHltOyBlbHNlIHkxID0geW07XG4gIH0gd2hpbGUgKChpID0gYm90dG9tIDw8IDEgfCByaWdodCkgPT09IChqID0gKHlwID49IHltKSA8PCAxIHwgKHhwID49IHhtKSkpO1xuICByZXR1cm4gcGFyZW50W2pdID0gbm9kZSwgcGFyZW50W2ldID0gbGVhZiwgdHJlZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEFsbChkYXRhKSB7XG4gIHZhciBkLCBpLCBuID0gZGF0YS5sZW5ndGgsXG4gICAgICB4LFxuICAgICAgeSxcbiAgICAgIHh6ID0gbmV3IEFycmF5KG4pLFxuICAgICAgeXogPSBuZXcgQXJyYXkobiksXG4gICAgICB4MCA9IEluZmluaXR5LFxuICAgICAgeTAgPSBJbmZpbml0eSxcbiAgICAgIHgxID0gLUluZmluaXR5LFxuICAgICAgeTEgPSAtSW5maW5pdHk7XG5cbiAgLy8gQ29tcHV0ZSB0aGUgcG9pbnRzIGFuZCB0aGVpciBleHRlbnQuXG4gIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICBpZiAoaXNOYU4oeCA9ICt0aGlzLl94LmNhbGwobnVsbCwgZCA9IGRhdGFbaV0pKSB8fCBpc05hTih5ID0gK3RoaXMuX3kuY2FsbChudWxsLCBkKSkpIGNvbnRpbnVlO1xuICAgIHh6W2ldID0geDtcbiAgICB5eltpXSA9IHk7XG4gICAgaWYgKHggPCB4MCkgeDAgPSB4O1xuICAgIGlmICh4ID4geDEpIHgxID0geDtcbiAgICBpZiAoeSA8IHkwKSB5MCA9IHk7XG4gICAgaWYgKHkgPiB5MSkgeTEgPSB5O1xuICB9XG5cbiAgLy8gSWYgdGhlcmUgd2VyZSBubyAodmFsaWQpIHBvaW50cywgYWJvcnQuXG4gIGlmICh4MCA+IHgxIHx8IHkwID4geTEpIHJldHVybiB0aGlzO1xuXG4gIC8vIEV4cGFuZCB0aGUgdHJlZSB0byBjb3ZlciB0aGUgbmV3IHBvaW50cy5cbiAgdGhpcy5jb3Zlcih4MCwgeTApLmNvdmVyKHgxLCB5MSk7XG5cbiAgLy8gQWRkIHRoZSBuZXcgcG9pbnRzLlxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgYWRkKHRoaXMsIHh6W2ldLCB5eltpXSwgZGF0YVtpXSk7XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHkpIHtcbiAgaWYgKGlzTmFOKHggPSAreCkgfHwgaXNOYU4oeSA9ICt5KSkgcmV0dXJuIHRoaXM7IC8vIGlnbm9yZSBpbnZhbGlkIHBvaW50c1xuXG4gIHZhciB4MCA9IHRoaXMuX3gwLFxuICAgICAgeTAgPSB0aGlzLl95MCxcbiAgICAgIHgxID0gdGhpcy5feDEsXG4gICAgICB5MSA9IHRoaXMuX3kxO1xuXG4gIC8vIElmIHRoZSBxdWFkdHJlZSBoYXMgbm8gZXh0ZW50LCBpbml0aWFsaXplIHRoZW0uXG4gIC8vIEludGVnZXIgZXh0ZW50IGFyZSBuZWNlc3Nhcnkgc28gdGhhdCBpZiB3ZSBsYXRlciBkb3VibGUgdGhlIGV4dGVudCxcbiAgLy8gdGhlIGV4aXN0aW5nIHF1YWRyYW50IGJvdW5kYXJpZXMgZG9u4oCZdCBjaGFuZ2UgZHVlIHRvIGZsb2F0aW5nIHBvaW50IGVycm9yIVxuICBpZiAoaXNOYU4oeDApKSB7XG4gICAgeDEgPSAoeDAgPSBNYXRoLmZsb29yKHgpKSArIDE7XG4gICAgeTEgPSAoeTAgPSBNYXRoLmZsb29yKHkpKSArIDE7XG4gIH1cblxuICAvLyBPdGhlcndpc2UsIGRvdWJsZSByZXBlYXRlZGx5IHRvIGNvdmVyLlxuICBlbHNlIHtcbiAgICB2YXIgeiA9IHgxIC0geDAgfHwgMSxcbiAgICAgICAgbm9kZSA9IHRoaXMuX3Jvb3QsXG4gICAgICAgIHBhcmVudCxcbiAgICAgICAgaTtcblxuICAgIHdoaWxlICh4MCA+IHggfHwgeCA+PSB4MSB8fCB5MCA+IHkgfHwgeSA+PSB5MSkge1xuICAgICAgaSA9ICh5IDwgeTApIDw8IDEgfCAoeCA8IHgwKTtcbiAgICAgIHBhcmVudCA9IG5ldyBBcnJheSg0KSwgcGFyZW50W2ldID0gbm9kZSwgbm9kZSA9IHBhcmVudCwgeiAqPSAyO1xuICAgICAgc3dpdGNoIChpKSB7XG4gICAgICAgIGNhc2UgMDogeDEgPSB4MCArIHosIHkxID0geTAgKyB6OyBicmVhaztcbiAgICAgICAgY2FzZSAxOiB4MCA9IHgxIC0geiwgeTEgPSB5MCArIHo7IGJyZWFrO1xuICAgICAgICBjYXNlIDI6IHgxID0geDAgKyB6LCB5MCA9IHkxIC0gejsgYnJlYWs7XG4gICAgICAgIGNhc2UgMzogeDAgPSB4MSAtIHosIHkwID0geTEgLSB6OyBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5fcm9vdCAmJiB0aGlzLl9yb290Lmxlbmd0aCkgdGhpcy5fcm9vdCA9IG5vZGU7XG4gIH1cblxuICB0aGlzLl94MCA9IHgwO1xuICB0aGlzLl95MCA9IHkwO1xuICB0aGlzLl94MSA9IHgxO1xuICB0aGlzLl95MSA9IHkxO1xuICByZXR1cm4gdGhpcztcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgZGF0YSA9IFtdO1xuICB0aGlzLnZpc2l0KGZ1bmN0aW9uKG5vZGUpIHtcbiAgICBpZiAoIW5vZGUubGVuZ3RoKSBkbyBkYXRhLnB1c2gobm9kZS5kYXRhKTsgd2hpbGUgKG5vZGUgPSBub2RlLm5leHQpXG4gIH0pO1xuICByZXR1cm4gZGF0YTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKF8pIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5jb3ZlcigrX1swXVswXSwgK19bMF1bMV0pLmNvdmVyKCtfWzFdWzBdLCArX1sxXVsxXSlcbiAgICAgIDogaXNOYU4odGhpcy5feDApID8gdW5kZWZpbmVkIDogW1t0aGlzLl94MCwgdGhpcy5feTBdLCBbdGhpcy5feDEsIHRoaXMuX3kxXV07XG59XG4iLCJpbXBvcnQgUXVhZCBmcm9tIFwiLi9xdWFkLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHksIHJhZGl1cykge1xuICB2YXIgZGF0YSxcbiAgICAgIHgwID0gdGhpcy5feDAsXG4gICAgICB5MCA9IHRoaXMuX3kwLFxuICAgICAgeDEsXG4gICAgICB5MSxcbiAgICAgIHgyLFxuICAgICAgeTIsXG4gICAgICB4MyA9IHRoaXMuX3gxLFxuICAgICAgeTMgPSB0aGlzLl95MSxcbiAgICAgIHF1YWRzID0gW10sXG4gICAgICBub2RlID0gdGhpcy5fcm9vdCxcbiAgICAgIHEsXG4gICAgICBpO1xuXG4gIGlmIChub2RlKSBxdWFkcy5wdXNoKG5ldyBRdWFkKG5vZGUsIHgwLCB5MCwgeDMsIHkzKSk7XG4gIGlmIChyYWRpdXMgPT0gbnVsbCkgcmFkaXVzID0gSW5maW5pdHk7XG4gIGVsc2Uge1xuICAgIHgwID0geCAtIHJhZGl1cywgeTAgPSB5IC0gcmFkaXVzO1xuICAgIHgzID0geCArIHJhZGl1cywgeTMgPSB5ICsgcmFkaXVzO1xuICAgIHJhZGl1cyAqPSByYWRpdXM7XG4gIH1cblxuICB3aGlsZSAocSA9IHF1YWRzLnBvcCgpKSB7XG5cbiAgICAvLyBTdG9wIHNlYXJjaGluZyBpZiB0aGlzIHF1YWRyYW50IGNhbuKAmXQgY29udGFpbiBhIGNsb3NlciBub2RlLlxuICAgIGlmICghKG5vZGUgPSBxLm5vZGUpXG4gICAgICAgIHx8ICh4MSA9IHEueDApID4geDNcbiAgICAgICAgfHwgKHkxID0gcS55MCkgPiB5M1xuICAgICAgICB8fCAoeDIgPSBxLngxKSA8IHgwXG4gICAgICAgIHx8ICh5MiA9IHEueTEpIDwgeTApIGNvbnRpbnVlO1xuXG4gICAgLy8gQmlzZWN0IHRoZSBjdXJyZW50IHF1YWRyYW50LlxuICAgIGlmIChub2RlLmxlbmd0aCkge1xuICAgICAgdmFyIHhtID0gKHgxICsgeDIpIC8gMixcbiAgICAgICAgICB5bSA9ICh5MSArIHkyKSAvIDI7XG5cbiAgICAgIHF1YWRzLnB1c2goXG4gICAgICAgIG5ldyBRdWFkKG5vZGVbM10sIHhtLCB5bSwgeDIsIHkyKSxcbiAgICAgICAgbmV3IFF1YWQobm9kZVsyXSwgeDEsIHltLCB4bSwgeTIpLFxuICAgICAgICBuZXcgUXVhZChub2RlWzFdLCB4bSwgeTEsIHgyLCB5bSksXG4gICAgICAgIG5ldyBRdWFkKG5vZGVbMF0sIHgxLCB5MSwgeG0sIHltKVxuICAgICAgKTtcblxuICAgICAgLy8gVmlzaXQgdGhlIGNsb3Nlc3QgcXVhZHJhbnQgZmlyc3QuXG4gICAgICBpZiAoaSA9ICh5ID49IHltKSA8PCAxIHwgKHggPj0geG0pKSB7XG4gICAgICAgIHEgPSBxdWFkc1txdWFkcy5sZW5ndGggLSAxXTtcbiAgICAgICAgcXVhZHNbcXVhZHMubGVuZ3RoIC0gMV0gPSBxdWFkc1txdWFkcy5sZW5ndGggLSAxIC0gaV07XG4gICAgICAgIHF1YWRzW3F1YWRzLmxlbmd0aCAtIDEgLSBpXSA9IHE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gVmlzaXQgdGhpcyBwb2ludC4gKFZpc2l0aW5nIGNvaW5jaWRlbnQgcG9pbnRzIGlzbuKAmXQgbmVjZXNzYXJ5ISlcbiAgICBlbHNlIHtcbiAgICAgIHZhciBkeCA9IHggLSArdGhpcy5feC5jYWxsKG51bGwsIG5vZGUuZGF0YSksXG4gICAgICAgICAgZHkgPSB5IC0gK3RoaXMuX3kuY2FsbChudWxsLCBub2RlLmRhdGEpLFxuICAgICAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICBpZiAoZDIgPCByYWRpdXMpIHtcbiAgICAgICAgdmFyIGQgPSBNYXRoLnNxcnQocmFkaXVzID0gZDIpO1xuICAgICAgICB4MCA9IHggLSBkLCB5MCA9IHkgLSBkO1xuICAgICAgICB4MyA9IHggKyBkLCB5MyA9IHkgKyBkO1xuICAgICAgICBkYXRhID0gbm9kZS5kYXRhO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkYXRhO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHF1YWR0cmVlfSBmcm9tIFwiLi9xdWFkdHJlZS5qc1wiO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obm9kZSwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdGhpcy5ub2RlID0gbm9kZTtcbiAgdGhpcy54MCA9IHgwO1xuICB0aGlzLnkwID0geTA7XG4gIHRoaXMueDEgPSB4MTtcbiAgdGhpcy55MSA9IHkxO1xufVxuIiwiaW1wb3J0IHRyZWVfYWRkLCB7YWRkQWxsIGFzIHRyZWVfYWRkQWxsfSBmcm9tIFwiLi9hZGQuanNcIjtcbmltcG9ydCB0cmVlX2NvdmVyIGZyb20gXCIuL2NvdmVyLmpzXCI7XG5pbXBvcnQgdHJlZV9kYXRhIGZyb20gXCIuL2RhdGEuanNcIjtcbmltcG9ydCB0cmVlX2V4dGVudCBmcm9tIFwiLi9leHRlbnQuanNcIjtcbmltcG9ydCB0cmVlX2ZpbmQgZnJvbSBcIi4vZmluZC5qc1wiO1xuaW1wb3J0IHRyZWVfcmVtb3ZlLCB7cmVtb3ZlQWxsIGFzIHRyZWVfcmVtb3ZlQWxsfSBmcm9tIFwiLi9yZW1vdmUuanNcIjtcbmltcG9ydCB0cmVlX3Jvb3QgZnJvbSBcIi4vcm9vdC5qc1wiO1xuaW1wb3J0IHRyZWVfc2l6ZSBmcm9tIFwiLi9zaXplLmpzXCI7XG5pbXBvcnQgdHJlZV92aXNpdCBmcm9tIFwiLi92aXNpdC5qc1wiO1xuaW1wb3J0IHRyZWVfdmlzaXRBZnRlciBmcm9tIFwiLi92aXNpdEFmdGVyLmpzXCI7XG5pbXBvcnQgdHJlZV94LCB7ZGVmYXVsdFh9IGZyb20gXCIuL3guanNcIjtcbmltcG9ydCB0cmVlX3ksIHtkZWZhdWx0WX0gZnJvbSBcIi4veS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBxdWFkdHJlZShub2RlcywgeCwgeSkge1xuICB2YXIgdHJlZSA9IG5ldyBRdWFkdHJlZSh4ID09IG51bGwgPyBkZWZhdWx0WCA6IHgsIHkgPT0gbnVsbCA/IGRlZmF1bHRZIDogeSwgTmFOLCBOYU4sIE5hTiwgTmFOKTtcbiAgcmV0dXJuIG5vZGVzID09IG51bGwgPyB0cmVlIDogdHJlZS5hZGRBbGwobm9kZXMpO1xufVxuXG5mdW5jdGlvbiBRdWFkdHJlZSh4LCB5LCB4MCwgeTAsIHgxLCB5MSkge1xuICB0aGlzLl94ID0geDtcbiAgdGhpcy5feSA9IHk7XG4gIHRoaXMuX3gwID0geDA7XG4gIHRoaXMuX3kwID0geTA7XG4gIHRoaXMuX3gxID0geDE7XG4gIHRoaXMuX3kxID0geTE7XG4gIHRoaXMuX3Jvb3QgPSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGxlYWZfY29weShsZWFmKSB7XG4gIHZhciBjb3B5ID0ge2RhdGE6IGxlYWYuZGF0YX0sIG5leHQgPSBjb3B5O1xuICB3aGlsZSAobGVhZiA9IGxlYWYubmV4dCkgbmV4dCA9IG5leHQubmV4dCA9IHtkYXRhOiBsZWFmLmRhdGF9O1xuICByZXR1cm4gY29weTtcbn1cblxudmFyIHRyZWVQcm90byA9IHF1YWR0cmVlLnByb3RvdHlwZSA9IFF1YWR0cmVlLnByb3RvdHlwZTtcblxudHJlZVByb3RvLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGNvcHkgPSBuZXcgUXVhZHRyZWUodGhpcy5feCwgdGhpcy5feSwgdGhpcy5feDAsIHRoaXMuX3kwLCB0aGlzLl94MSwgdGhpcy5feTEpLFxuICAgICAgbm9kZSA9IHRoaXMuX3Jvb3QsXG4gICAgICBub2RlcyxcbiAgICAgIGNoaWxkO1xuXG4gIGlmICghbm9kZSkgcmV0dXJuIGNvcHk7XG5cbiAgaWYgKCFub2RlLmxlbmd0aCkgcmV0dXJuIGNvcHkuX3Jvb3QgPSBsZWFmX2NvcHkobm9kZSksIGNvcHk7XG5cbiAgbm9kZXMgPSBbe3NvdXJjZTogbm9kZSwgdGFyZ2V0OiBjb3B5Ll9yb290ID0gbmV3IEFycmF5KDQpfV07XG4gIHdoaWxlIChub2RlID0gbm9kZXMucG9wKCkpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7ICsraSkge1xuICAgICAgaWYgKGNoaWxkID0gbm9kZS5zb3VyY2VbaV0pIHtcbiAgICAgICAgaWYgKGNoaWxkLmxlbmd0aCkgbm9kZXMucHVzaCh7c291cmNlOiBjaGlsZCwgdGFyZ2V0OiBub2RlLnRhcmdldFtpXSA9IG5ldyBBcnJheSg0KX0pO1xuICAgICAgICBlbHNlIG5vZGUudGFyZ2V0W2ldID0gbGVhZl9jb3B5KGNoaWxkKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gY29weTtcbn07XG5cbnRyZWVQcm90by5hZGQgPSB0cmVlX2FkZDtcbnRyZWVQcm90by5hZGRBbGwgPSB0cmVlX2FkZEFsbDtcbnRyZWVQcm90by5jb3ZlciA9IHRyZWVfY292ZXI7XG50cmVlUHJvdG8uZGF0YSA9IHRyZWVfZGF0YTtcbnRyZWVQcm90by5leHRlbnQgPSB0cmVlX2V4dGVudDtcbnRyZWVQcm90by5maW5kID0gdHJlZV9maW5kO1xudHJlZVByb3RvLnJlbW92ZSA9IHRyZWVfcmVtb3ZlO1xudHJlZVByb3RvLnJlbW92ZUFsbCA9IHRyZWVfcmVtb3ZlQWxsO1xudHJlZVByb3RvLnJvb3QgPSB0cmVlX3Jvb3Q7XG50cmVlUHJvdG8uc2l6ZSA9IHRyZWVfc2l6ZTtcbnRyZWVQcm90by52aXNpdCA9IHRyZWVfdmlzaXQ7XG50cmVlUHJvdG8udmlzaXRBZnRlciA9IHRyZWVfdmlzaXRBZnRlcjtcbnRyZWVQcm90by54ID0gdHJlZV94O1xudHJlZVByb3RvLnkgPSB0cmVlX3k7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkKSB7XG4gIGlmIChpc05hTih4ID0gK3RoaXMuX3guY2FsbChudWxsLCBkKSkgfHwgaXNOYU4oeSA9ICt0aGlzLl95LmNhbGwobnVsbCwgZCkpKSByZXR1cm4gdGhpczsgLy8gaWdub3JlIGludmFsaWQgcG9pbnRzXG5cbiAgdmFyIHBhcmVudCxcbiAgICAgIG5vZGUgPSB0aGlzLl9yb290LFxuICAgICAgcmV0YWluZXIsXG4gICAgICBwcmV2aW91cyxcbiAgICAgIG5leHQsXG4gICAgICB4MCA9IHRoaXMuX3gwLFxuICAgICAgeTAgPSB0aGlzLl95MCxcbiAgICAgIHgxID0gdGhpcy5feDEsXG4gICAgICB5MSA9IHRoaXMuX3kxLFxuICAgICAgeCxcbiAgICAgIHksXG4gICAgICB4bSxcbiAgICAgIHltLFxuICAgICAgcmlnaHQsXG4gICAgICBib3R0b20sXG4gICAgICBpLFxuICAgICAgajtcblxuICAvLyBJZiB0aGUgdHJlZSBpcyBlbXB0eSwgaW5pdGlhbGl6ZSB0aGUgcm9vdCBhcyBhIGxlYWYuXG4gIGlmICghbm9kZSkgcmV0dXJuIHRoaXM7XG5cbiAgLy8gRmluZCB0aGUgbGVhZiBub2RlIGZvciB0aGUgcG9pbnQuXG4gIC8vIFdoaWxlIGRlc2NlbmRpbmcsIGFsc28gcmV0YWluIHRoZSBkZWVwZXN0IHBhcmVudCB3aXRoIGEgbm9uLXJlbW92ZWQgc2libGluZy5cbiAgaWYgKG5vZGUubGVuZ3RoKSB3aGlsZSAodHJ1ZSkge1xuICAgIGlmIChyaWdodCA9IHggPj0gKHhtID0gKHgwICsgeDEpIC8gMikpIHgwID0geG07IGVsc2UgeDEgPSB4bTtcbiAgICBpZiAoYm90dG9tID0geSA+PSAoeW0gPSAoeTAgKyB5MSkgLyAyKSkgeTAgPSB5bTsgZWxzZSB5MSA9IHltO1xuICAgIGlmICghKHBhcmVudCA9IG5vZGUsIG5vZGUgPSBub2RlW2kgPSBib3R0b20gPDwgMSB8IHJpZ2h0XSkpIHJldHVybiB0aGlzO1xuICAgIGlmICghbm9kZS5sZW5ndGgpIGJyZWFrO1xuICAgIGlmIChwYXJlbnRbKGkgKyAxKSAmIDNdIHx8IHBhcmVudFsoaSArIDIpICYgM10gfHwgcGFyZW50WyhpICsgMykgJiAzXSkgcmV0YWluZXIgPSBwYXJlbnQsIGogPSBpO1xuICB9XG5cbiAgLy8gRmluZCB0aGUgcG9pbnQgdG8gcmVtb3ZlLlxuICB3aGlsZSAobm9kZS5kYXRhICE9PSBkKSBpZiAoIShwcmV2aW91cyA9IG5vZGUsIG5vZGUgPSBub2RlLm5leHQpKSByZXR1cm4gdGhpcztcbiAgaWYgKG5leHQgPSBub2RlLm5leHQpIGRlbGV0ZSBub2RlLm5leHQ7XG5cbiAgLy8gSWYgdGhlcmUgYXJlIG11bHRpcGxlIGNvaW5jaWRlbnQgcG9pbnRzLCByZW1vdmUganVzdCB0aGUgcG9pbnQuXG4gIGlmIChwcmV2aW91cykgcmV0dXJuIChuZXh0ID8gcHJldmlvdXMubmV4dCA9IG5leHQgOiBkZWxldGUgcHJldmlvdXMubmV4dCksIHRoaXM7XG5cbiAgLy8gSWYgdGhpcyBpcyB0aGUgcm9vdCBwb2ludCwgcmVtb3ZlIGl0LlxuICBpZiAoIXBhcmVudCkgcmV0dXJuIHRoaXMuX3Jvb3QgPSBuZXh0LCB0aGlzO1xuXG4gIC8vIFJlbW92ZSB0aGlzIGxlYWYuXG4gIG5leHQgPyBwYXJlbnRbaV0gPSBuZXh0IDogZGVsZXRlIHBhcmVudFtpXTtcblxuICAvLyBJZiB0aGUgcGFyZW50IG5vdyBjb250YWlucyBleGFjdGx5IG9uZSBsZWFmLCBjb2xsYXBzZSBzdXBlcmZsdW91cyBwYXJlbnRzLlxuICBpZiAoKG5vZGUgPSBwYXJlbnRbMF0gfHwgcGFyZW50WzFdIHx8IHBhcmVudFsyXSB8fCBwYXJlbnRbM10pXG4gICAgICAmJiBub2RlID09PSAocGFyZW50WzNdIHx8IHBhcmVudFsyXSB8fCBwYXJlbnRbMV0gfHwgcGFyZW50WzBdKVxuICAgICAgJiYgIW5vZGUubGVuZ3RoKSB7XG4gICAgaWYgKHJldGFpbmVyKSByZXRhaW5lcltqXSA9IG5vZGU7XG4gICAgZWxzZSB0aGlzLl9yb290ID0gbm9kZTtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlQWxsKGRhdGEpIHtcbiAgZm9yICh2YXIgaSA9IDAsIG4gPSBkYXRhLmxlbmd0aDsgaSA8IG47ICsraSkgdGhpcy5yZW1vdmUoZGF0YVtpXSk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLl9yb290O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBzaXplID0gMDtcbiAgdGhpcy52aXNpdChmdW5jdGlvbihub2RlKSB7XG4gICAgaWYgKCFub2RlLmxlbmd0aCkgZG8gKytzaXplOyB3aGlsZSAobm9kZSA9IG5vZGUubmV4dClcbiAgfSk7XG4gIHJldHVybiBzaXplO1xufVxuIiwiaW1wb3J0IFF1YWQgZnJvbSBcIi4vcXVhZC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaykge1xuICB2YXIgcXVhZHMgPSBbXSwgcSwgbm9kZSA9IHRoaXMuX3Jvb3QsIGNoaWxkLCB4MCwgeTAsIHgxLCB5MTtcbiAgaWYgKG5vZGUpIHF1YWRzLnB1c2gobmV3IFF1YWQobm9kZSwgdGhpcy5feDAsIHRoaXMuX3kwLCB0aGlzLl94MSwgdGhpcy5feTEpKTtcbiAgd2hpbGUgKHEgPSBxdWFkcy5wb3AoKSkge1xuICAgIGlmICghY2FsbGJhY2sobm9kZSA9IHEubm9kZSwgeDAgPSBxLngwLCB5MCA9IHEueTAsIHgxID0gcS54MSwgeTEgPSBxLnkxKSAmJiBub2RlLmxlbmd0aCkge1xuICAgICAgdmFyIHhtID0gKHgwICsgeDEpIC8gMiwgeW0gPSAoeTAgKyB5MSkgLyAyO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVszXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeG0sIHltLCB4MSwgeTEpKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMl0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHgwLCB5bSwgeG0sIHkxKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzFdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4bSwgeTAsIHgxLCB5bSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVswXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeDAsIHkwLCB4bSwgeW0pKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJpbXBvcnQgUXVhZCBmcm9tIFwiLi9xdWFkLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gIHZhciBxdWFkcyA9IFtdLCBuZXh0ID0gW10sIHE7XG4gIGlmICh0aGlzLl9yb290KSBxdWFkcy5wdXNoKG5ldyBRdWFkKHRoaXMuX3Jvb3QsIHRoaXMuX3gwLCB0aGlzLl95MCwgdGhpcy5feDEsIHRoaXMuX3kxKSk7XG4gIHdoaWxlIChxID0gcXVhZHMucG9wKCkpIHtcbiAgICB2YXIgbm9kZSA9IHEubm9kZTtcbiAgICBpZiAobm9kZS5sZW5ndGgpIHtcbiAgICAgIHZhciBjaGlsZCwgeDAgPSBxLngwLCB5MCA9IHEueTAsIHgxID0gcS54MSwgeTEgPSBxLnkxLCB4bSA9ICh4MCArIHgxKSAvIDIsIHltID0gKHkwICsgeTEpIC8gMjtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbMF0pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHgwLCB5MCwgeG0sIHltKSk7XG4gICAgICBpZiAoY2hpbGQgPSBub2RlWzFdKSBxdWFkcy5wdXNoKG5ldyBRdWFkKGNoaWxkLCB4bSwgeTAsIHgxLCB5bSkpO1xuICAgICAgaWYgKGNoaWxkID0gbm9kZVsyXSkgcXVhZHMucHVzaChuZXcgUXVhZChjaGlsZCwgeDAsIHltLCB4bSwgeTEpKTtcbiAgICAgIGlmIChjaGlsZCA9IG5vZGVbM10pIHF1YWRzLnB1c2gobmV3IFF1YWQoY2hpbGQsIHhtLCB5bSwgeDEsIHkxKSk7XG4gICAgfVxuICAgIG5leHQucHVzaChxKTtcbiAgfVxuICB3aGlsZSAocSA9IG5leHQucG9wKCkpIHtcbiAgICBjYWxsYmFjayhxLm5vZGUsIHEueDAsIHEueTAsIHEueDEsIHEueTEpO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRYKGQpIHtcbiAgcmV0dXJuIGRbMF07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKF8pIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5feCA9IF8sIHRoaXMpIDogdGhpcy5feDtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0WShkKSB7XG4gIHJldHVybiBkWzFdO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihfKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX3kgPSBfLCB0aGlzKSA6IHRoaXMuX3k7XG59XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlLmpzXCI7XG5pbXBvcnQgaXJ3aW5IYWxsIGZyb20gXCIuL2lyd2luSGFsbC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tQmF0ZXMoc291cmNlKSB7XG4gIHZhciBJID0gaXJ3aW5IYWxsLnNvdXJjZShzb3VyY2UpO1xuXG4gIGZ1bmN0aW9uIHJhbmRvbUJhdGVzKG4pIHtcbiAgICAvLyB1c2UgbGltaXRpbmcgZGlzdHJpYnV0aW9uIGF0IG4gPT09IDBcbiAgICBpZiAoKG4gPSArbikgPT09IDApIHJldHVybiBzb3VyY2U7XG4gICAgdmFyIHJhbmRvbUlyd2luSGFsbCA9IEkobik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHJhbmRvbUlyd2luSGFsbCgpIC8gbjtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tQmF0ZXMuc291cmNlID0gc291cmNlUmFuZG9tQmF0ZXM7XG5cbiAgcmV0dXJuIHJhbmRvbUJhdGVzO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21CZXJub3VsbGkoc291cmNlKSB7XG4gIGZ1bmN0aW9uIHJhbmRvbUJlcm5vdWxsaShwKSB7XG4gICAgaWYgKChwID0gK3ApIDwgMCB8fCBwID4gMSkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJpbnZhbGlkIHBcIik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3Ioc291cmNlKCkgKyBwKTtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tQmVybm91bGxpLnNvdXJjZSA9IHNvdXJjZVJhbmRvbUJlcm5vdWxsaTtcblxuICByZXR1cm4gcmFuZG9tQmVybm91bGxpO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlLmpzXCI7XG5pbXBvcnQgZ2FtbWEgZnJvbSBcIi4vZ2FtbWEuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbUJldGEoc291cmNlKSB7XG4gIHZhciBHID0gZ2FtbWEuc291cmNlKHNvdXJjZSk7XG5cbiAgZnVuY3Rpb24gcmFuZG9tQmV0YShhbHBoYSwgYmV0YSkge1xuICAgIHZhciBYID0gRyhhbHBoYSksXG4gICAgICAgIFkgPSBHKGJldGEpO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB4ID0gWCgpO1xuICAgICAgcmV0dXJuIHggPT09IDAgPyAwIDogeCAvICh4ICsgWSgpKTtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tQmV0YS5zb3VyY2UgPSBzb3VyY2VSYW5kb21CZXRhO1xuXG4gIHJldHVybiByYW5kb21CZXRhO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlLmpzXCI7XG5pbXBvcnQgYmV0YSBmcm9tIFwiLi9iZXRhLmpzXCI7XG5pbXBvcnQgZ2VvbWV0cmljIGZyb20gXCIuL2dlb21ldHJpYy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tQmlub21pYWwoc291cmNlKSB7XG4gIHZhciBHID0gZ2VvbWV0cmljLnNvdXJjZShzb3VyY2UpLFxuICAgICAgQiA9IGJldGEuc291cmNlKHNvdXJjZSk7XG5cbiAgZnVuY3Rpb24gcmFuZG9tQmlub21pYWwobiwgcCkge1xuICAgIG4gPSArbjtcbiAgICBpZiAoKHAgPSArcCkgPj0gMSkgcmV0dXJuICgpID0+IG47XG4gICAgaWYgKHAgPD0gMCkgcmV0dXJuICgpID0+IDA7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGFjYyA9IDAsIG5uID0gbiwgcHAgPSBwO1xuICAgICAgd2hpbGUgKG5uICogcHAgPiAxNiAmJiBubiAqICgxIC0gcHApID4gMTYpIHtcbiAgICAgICAgdmFyIGkgPSBNYXRoLmZsb29yKChubiArIDEpICogcHApLFxuICAgICAgICAgICAgeSA9IEIoaSwgbm4gLSBpICsgMSkoKTtcbiAgICAgICAgaWYgKHkgPD0gcHApIHtcbiAgICAgICAgICBhY2MgKz0gaTtcbiAgICAgICAgICBubiAtPSBpO1xuICAgICAgICAgIHBwID0gKHBwIC0geSkgLyAoMSAtIHkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5uID0gaSAtIDE7XG4gICAgICAgICAgcHAgLz0geTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdmFyIHNpZ24gPSBwcCA8IDAuNSxcbiAgICAgICAgICBwRmluYWwgPSBzaWduID8gcHAgOiAxIC0gcHAsXG4gICAgICAgICAgZyA9IEcocEZpbmFsKTtcbiAgICAgIGZvciAodmFyIHMgPSBnKCksIGsgPSAwOyBzIDw9IG5uOyArK2spIHMgKz0gZygpO1xuICAgICAgcmV0dXJuIGFjYyArIChzaWduID8gayA6IG5uIC0gayk7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUJpbm9taWFsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbUJpbm9taWFsO1xuXG4gIHJldHVybiByYW5kb21CaW5vbWlhbDtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tQ2F1Y2h5KHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21DYXVjaHkoYSwgYikge1xuICAgIGEgPSBhID09IG51bGwgPyAwIDogK2E7XG4gICAgYiA9IGIgPT0gbnVsbCA/IDEgOiArYjtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gYSArIGIgKiBNYXRoLnRhbihNYXRoLlBJICogc291cmNlKCkpO1xuICAgIH07XG4gIH1cblxuICByYW5kb21DYXVjaHkuc291cmNlID0gc291cmNlUmFuZG9tQ2F1Y2h5O1xuXG4gIHJldHVybiByYW5kb21DYXVjaHk7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImV4cG9ydCBkZWZhdWx0IE1hdGgucmFuZG9tO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tRXhwb25lbnRpYWwoc291cmNlKSB7XG4gIGZ1bmN0aW9uIHJhbmRvbUV4cG9uZW50aWFsKGxhbWJkYSkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAtTWF0aC5sb2cxcCgtc291cmNlKCkpIC8gbGFtYmRhO1xuICAgIH07XG4gIH1cblxuICByYW5kb21FeHBvbmVudGlhbC5zb3VyY2UgPSBzb3VyY2VSYW5kb21FeHBvbmVudGlhbDtcblxuICByZXR1cm4gcmFuZG9tRXhwb25lbnRpYWw7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2UuanNcIjtcbmltcG9ydCBub3JtYWwgZnJvbSBcIi4vbm9ybWFsLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21HYW1tYShzb3VyY2UpIHtcbiAgdmFyIHJhbmRvbU5vcm1hbCA9IG5vcm1hbC5zb3VyY2Uoc291cmNlKSgpO1xuXG4gIGZ1bmN0aW9uIHJhbmRvbUdhbW1hKGssIHRoZXRhKSB7XG4gICAgaWYgKChrID0gK2spIDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJpbnZhbGlkIGtcIik7XG4gICAgLy8gZGVnZW5lcmF0ZSBkaXN0cmlidXRpb24gaWYgayA9PT0gMFxuICAgIGlmIChrID09PSAwKSByZXR1cm4gKCkgPT4gMDtcbiAgICB0aGV0YSA9IHRoZXRhID09IG51bGwgPyAxIDogK3RoZXRhO1xuICAgIC8vIGV4cG9uZW50aWFsIGRpc3RyaWJ1dGlvbiBpZiBrID09PSAxXG4gICAgaWYgKGsgPT09IDEpIHJldHVybiAoKSA9PiAtTWF0aC5sb2cxcCgtc291cmNlKCkpICogdGhldGE7XG5cbiAgICB2YXIgZCA9IChrIDwgMSA/IGsgKyAxIDogaykgLSAxIC8gMyxcbiAgICAgICAgYyA9IDEgLyAoMyAqIE1hdGguc3FydChkKSksXG4gICAgICAgIG11bHRpcGxpZXIgPSBrIDwgMSA/ICgpID0+IE1hdGgucG93KHNvdXJjZSgpLCAxIC8gaykgOiAoKSA9PiAxO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIGRvIHtcbiAgICAgICAgZG8ge1xuICAgICAgICAgIHZhciB4ID0gcmFuZG9tTm9ybWFsKCksXG4gICAgICAgICAgICAgIHYgPSAxICsgYyAqIHg7XG4gICAgICAgIH0gd2hpbGUgKHYgPD0gMCk7XG4gICAgICAgIHYgKj0gdiAqIHY7XG4gICAgICAgIHZhciB1ID0gMSAtIHNvdXJjZSgpO1xuICAgICAgfSB3aGlsZSAodSA+PSAxIC0gMC4wMzMxICogeCAqIHggKiB4ICogeCAmJiBNYXRoLmxvZyh1KSA+PSAwLjUgKiB4ICogeCArIGQgKiAoMSAtIHYgKyBNYXRoLmxvZyh2KSkpO1xuICAgICAgcmV0dXJuIGQgKiB2ICogbXVsdGlwbGllcigpICogdGhldGE7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUdhbW1hLnNvdXJjZSA9IHNvdXJjZVJhbmRvbUdhbW1hO1xuXG4gIHJldHVybiByYW5kb21HYW1tYTtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tR2VvbWV0cmljKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21HZW9tZXRyaWMocCkge1xuICAgIGlmICgocCA9ICtwKSA8IDAgfHwgcCA+IDEpIHRocm93IG5ldyBSYW5nZUVycm9yKFwiaW52YWxpZCBwXCIpO1xuICAgIGlmIChwID09PSAwKSByZXR1cm4gKCkgPT4gSW5maW5pdHk7XG4gICAgaWYgKHAgPT09IDEpIHJldHVybiAoKSA9PiAxO1xuICAgIHAgPSBNYXRoLmxvZzFwKC1wKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gMSArIE1hdGguZmxvb3IoTWF0aC5sb2cxcCgtc291cmNlKCkpIC8gcCk7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUdlb21ldHJpYy5zb3VyY2UgPSBzb3VyY2VSYW5kb21HZW9tZXRyaWM7XG5cbiAgcmV0dXJuIHJhbmRvbUdlb21ldHJpYztcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbVVuaWZvcm19IGZyb20gXCIuL3VuaWZvcm0uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21JbnR9IGZyb20gXCIuL2ludC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbU5vcm1hbH0gZnJvbSBcIi4vbm9ybWFsLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tTG9nTm9ybWFsfSBmcm9tIFwiLi9sb2dOb3JtYWwuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21CYXRlc30gZnJvbSBcIi4vYmF0ZXMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21JcndpbkhhbGx9IGZyb20gXCIuL2lyd2luSGFsbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbUV4cG9uZW50aWFsfSBmcm9tIFwiLi9leHBvbmVudGlhbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbVBhcmV0b30gZnJvbSBcIi4vcGFyZXRvLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tQmVybm91bGxpfSBmcm9tIFwiLi9iZXJub3VsbGkuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21HZW9tZXRyaWN9IGZyb20gXCIuL2dlb21ldHJpYy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbUJpbm9taWFsfSBmcm9tIFwiLi9iaW5vbWlhbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbUdhbW1hfSBmcm9tIFwiLi9nYW1tYS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHJhbmRvbUJldGF9IGZyb20gXCIuL2JldGEuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21XZWlidWxsfSBmcm9tIFwiLi93ZWlidWxsLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tQ2F1Y2h5fSBmcm9tIFwiLi9jYXVjaHkuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21Mb2dpc3RpY30gZnJvbSBcIi4vbG9naXN0aWMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyByYW5kb21Qb2lzc29ufSBmcm9tIFwiLi9wb2lzc29uLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcmFuZG9tTGNnfSBmcm9tIFwiLi9sY2cuanNcIjtcbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2UuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbUludChzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tSW50KG1pbiwgbWF4KSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSBtYXggPSBtaW4sIG1pbiA9IDA7XG4gICAgbWluID0gTWF0aC5mbG9vcihtaW4pO1xuICAgIG1heCA9IE1hdGguZmxvb3IobWF4KSAtIG1pbjtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gTWF0aC5mbG9vcihzb3VyY2UoKSAqIG1heCArIG1pbik7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUludC5zb3VyY2UgPSBzb3VyY2VSYW5kb21JbnQ7XG5cbiAgcmV0dXJuIHJhbmRvbUludDtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tSXJ3aW5IYWxsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21JcndpbkhhbGwobikge1xuICAgIGlmICgobiA9ICtuKSA8PSAwKSByZXR1cm4gKCkgPT4gMDtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICBmb3IgKHZhciBzdW0gPSAwLCBpID0gbjsgaSA+IDE7IC0taSkgc3VtICs9IHNvdXJjZSgpO1xuICAgICAgcmV0dXJuIHN1bSArIGkgKiBzb3VyY2UoKTtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tSXJ3aW5IYWxsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbUlyd2luSGFsbDtcblxuICByZXR1cm4gcmFuZG9tSXJ3aW5IYWxsO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCIvLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9MaW5lYXJfY29uZ3J1ZW50aWFsX2dlbmVyYXRvciNQYXJhbWV0ZXJzX2luX2NvbW1vbl91c2VcbmNvbnN0IG11bCA9IDB4MTk2NjBEO1xuY29uc3QgaW5jID0gMHgzQzZFRjM1RjtcbmNvbnN0IGVwcyA9IDEgLyAweDEwMDAwMDAwMDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbGNnKHNlZWQgPSBNYXRoLnJhbmRvbSgpKSB7XG4gIGxldCBzdGF0ZSA9ICgwIDw9IHNlZWQgJiYgc2VlZCA8IDEgPyBzZWVkIC8gZXBzIDogTWF0aC5hYnMoc2VlZCkpIHwgMDtcbiAgcmV0dXJuICgpID0+IChzdGF0ZSA9IG11bCAqIHN0YXRlICsgaW5jIHwgMCwgZXBzICogKHN0YXRlID4+PiAwKSk7XG59XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlLmpzXCI7XG5pbXBvcnQgbm9ybWFsIGZyb20gXCIuL25vcm1hbC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tTG9nTm9ybWFsKHNvdXJjZSkge1xuICB2YXIgTiA9IG5vcm1hbC5zb3VyY2Uoc291cmNlKTtcblxuICBmdW5jdGlvbiByYW5kb21Mb2dOb3JtYWwoKSB7XG4gICAgdmFyIHJhbmRvbU5vcm1hbCA9IE4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gTWF0aC5leHAocmFuZG9tTm9ybWFsKCkpO1xuICAgIH07XG4gIH1cblxuICByYW5kb21Mb2dOb3JtYWwuc291cmNlID0gc291cmNlUmFuZG9tTG9nTm9ybWFsO1xuXG4gIHJldHVybiByYW5kb21Mb2dOb3JtYWw7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImltcG9ydCBkZWZhdWx0U291cmNlIGZyb20gXCIuL2RlZmF1bHRTb3VyY2UuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbUxvZ2lzdGljKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21Mb2dpc3RpYyhhLCBiKSB7XG4gICAgYSA9IGEgPT0gbnVsbCA/IDAgOiArYTtcbiAgICBiID0gYiA9PSBudWxsID8gMSA6ICtiO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB1ID0gc291cmNlKCk7XG4gICAgICByZXR1cm4gYSArIGIgKiBNYXRoLmxvZyh1IC8gKDEgLSB1KSk7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbUxvZ2lzdGljLnNvdXJjZSA9IHNvdXJjZVJhbmRvbUxvZ2lzdGljO1xuXG4gIHJldHVybiByYW5kb21Mb2dpc3RpYztcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tTm9ybWFsKHNvdXJjZSkge1xuICBmdW5jdGlvbiByYW5kb21Ob3JtYWwobXUsIHNpZ21hKSB7XG4gICAgdmFyIHgsIHI7XG4gICAgbXUgPSBtdSA9PSBudWxsID8gMCA6ICttdTtcbiAgICBzaWdtYSA9IHNpZ21hID09IG51bGwgPyAxIDogK3NpZ21hO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB5O1xuXG4gICAgICAvLyBJZiBhdmFpbGFibGUsIHVzZSB0aGUgc2Vjb25kIHByZXZpb3VzbHktZ2VuZXJhdGVkIHVuaWZvcm0gcmFuZG9tLlxuICAgICAgaWYgKHggIT0gbnVsbCkgeSA9IHgsIHggPSBudWxsO1xuXG4gICAgICAvLyBPdGhlcndpc2UsIGdlbmVyYXRlIGEgbmV3IHggYW5kIHkuXG4gICAgICBlbHNlIGRvIHtcbiAgICAgICAgeCA9IHNvdXJjZSgpICogMiAtIDE7XG4gICAgICAgIHkgPSBzb3VyY2UoKSAqIDIgLSAxO1xuICAgICAgICByID0geCAqIHggKyB5ICogeTtcbiAgICAgIH0gd2hpbGUgKCFyIHx8IHIgPiAxKTtcblxuICAgICAgcmV0dXJuIG11ICsgc2lnbWEgKiB5ICogTWF0aC5zcXJ0KC0yICogTWF0aC5sb2cocikgLyByKTtcbiAgICB9O1xuICB9XG5cbiAgcmFuZG9tTm9ybWFsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbU5vcm1hbDtcblxuICByZXR1cm4gcmFuZG9tTm9ybWFsO1xufSkoZGVmYXVsdFNvdXJjZSk7XG4iLCJpbXBvcnQgZGVmYXVsdFNvdXJjZSBmcm9tIFwiLi9kZWZhdWx0U291cmNlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBzb3VyY2VSYW5kb21QYXJldG8oc291cmNlKSB7XG4gIGZ1bmN0aW9uIHJhbmRvbVBhcmV0byhhbHBoYSkge1xuICAgIGlmICgoYWxwaGEgPSArYWxwaGEpIDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJpbnZhbGlkIGFscGhhXCIpO1xuICAgIGFscGhhID0gMSAvIC1hbHBoYTtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gTWF0aC5wb3coMSAtIHNvdXJjZSgpLCBhbHBoYSk7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbVBhcmV0by5zb3VyY2UgPSBzb3VyY2VSYW5kb21QYXJldG87XG5cbiAgcmV0dXJuIHJhbmRvbVBhcmV0bztcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuaW1wb3J0IGJpbm9taWFsIGZyb20gXCIuL2Jpbm9taWFsLmpzXCI7XG5pbXBvcnQgZ2FtbWEgZnJvbSBcIi4vZ2FtbWEuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIHNvdXJjZVJhbmRvbVBvaXNzb24oc291cmNlKSB7XG4gIHZhciBHID0gZ2FtbWEuc291cmNlKHNvdXJjZSksXG4gICAgICBCID0gYmlub21pYWwuc291cmNlKHNvdXJjZSk7XG5cbiAgZnVuY3Rpb24gcmFuZG9tUG9pc3NvbihsYW1iZGEpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgYWNjID0gMCwgbCA9IGxhbWJkYTtcbiAgICAgIHdoaWxlIChsID4gMTYpIHtcbiAgICAgICAgdmFyIG4gPSBNYXRoLmZsb29yKDAuODc1ICogbCksXG4gICAgICAgICAgICB0ID0gRyhuKSgpO1xuICAgICAgICBpZiAodCA+IGwpIHJldHVybiBhY2MgKyBCKG4gLSAxLCBsIC8gdCkoKTtcbiAgICAgICAgYWNjICs9IG47XG4gICAgICAgIGwgLT0gdDtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIHMgPSAtTWF0aC5sb2cxcCgtc291cmNlKCkpLCBrID0gMDsgcyA8PSBsOyArK2spIHMgLT0gTWF0aC5sb2cxcCgtc291cmNlKCkpO1xuICAgICAgcmV0dXJuIGFjYyArIGs7XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbVBvaXNzb24uc291cmNlID0gc291cmNlUmFuZG9tUG9pc3NvbjtcblxuICByZXR1cm4gcmFuZG9tUG9pc3Nvbjtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tVW5pZm9ybShzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tVW5pZm9ybShtaW4sIG1heCkge1xuICAgIG1pbiA9IG1pbiA9PSBudWxsID8gMCA6ICttaW47XG4gICAgbWF4ID0gbWF4ID09IG51bGwgPyAxIDogK21heDtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkgbWF4ID0gbWluLCBtaW4gPSAwO1xuICAgIGVsc2UgbWF4IC09IG1pbjtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gc291cmNlKCkgKiBtYXggKyBtaW47XG4gICAgfTtcbiAgfVxuXG4gIHJhbmRvbVVuaWZvcm0uc291cmNlID0gc291cmNlUmFuZG9tVW5pZm9ybTtcblxuICByZXR1cm4gcmFuZG9tVW5pZm9ybTtcbn0pKGRlZmF1bHRTb3VyY2UpO1xuIiwiaW1wb3J0IGRlZmF1bHRTb3VyY2UgZnJvbSBcIi4vZGVmYXVsdFNvdXJjZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gc291cmNlUmFuZG9tV2VpYnVsbChzb3VyY2UpIHtcbiAgZnVuY3Rpb24gcmFuZG9tV2VpYnVsbChrLCBhLCBiKSB7XG4gICAgdmFyIG91dGVyRnVuYztcbiAgICBpZiAoKGsgPSAraykgPT09IDApIHtcbiAgICAgIG91dGVyRnVuYyA9IHggPT4gLU1hdGgubG9nKHgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBrID0gMSAvIGs7XG4gICAgICBvdXRlckZ1bmMgPSB4ID0+IE1hdGgucG93KHgsIGspO1xuICAgIH1cbiAgICBhID0gYSA9PSBudWxsID8gMCA6ICthO1xuICAgIGIgPSBiID09IG51bGwgPyAxIDogK2I7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGEgKyBiICogb3V0ZXJGdW5jKC1NYXRoLmxvZzFwKC1zb3VyY2UoKSkpO1xuICAgIH07XG4gIH1cblxuICByYW5kb21XZWlidWxsLnNvdXJjZSA9IHNvdXJjZVJhbmRvbVdlaWJ1bGw7XG5cbiAgcmV0dXJuIHJhbmRvbVdlaWJ1bGw7XG59KShkZWZhdWx0U291cmNlKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCI3ZmM5N2ZiZWFlZDRmZGMwODZmZmZmOTkzODZjYjBmMDAyN2ZiZjViMTc2NjY2NjZcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiMWI5ZTc3ZDk1ZjAyNzU3MGIzZTcyOThhNjZhNjFlZTZhYjAyYTY3NjFkNjY2NjY2XCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcImE2Y2VlMzFmNzhiNGIyZGY4YTMzYTAyY2ZiOWE5OWUzMWExY2ZkYmY2ZmZmN2YwMGNhYjJkNjZhM2Q5YWZmZmY5OWIxNTkyOFwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCJmYmI0YWViM2NkZTNjY2ViYzVkZWNiZTRmZWQ5YTZmZmZmY2NlNWQ4YmRmZGRhZWNmMmYyZjJcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiYjNlMmNkZmRjZGFjY2JkNWU4ZjRjYWU0ZTZmNWM5ZmZmMmFlZjFlMmNjY2NjY2NjXCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcImU0MWExYzM3N2ViODRkYWY0YTk4NGVhM2ZmN2YwMGZmZmYzM2E2NTYyOGY3ODFiZjk5OTk5OVwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCI2NmMyYTVmYzhkNjI4ZGEwY2JlNzhhYzNhNmQ4NTRmZmQ5MmZlNWM0OTRiM2IzYjNcIik7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY29sb3JzKFwiOGRkM2M3ZmZmZmIzYmViYWRhZmI4MDcyODBiMWQzZmRiNDYyYjNkZTY5ZmNjZGU1ZDlkOWQ5YmM4MGJkY2NlYmM1ZmZlZDZmXCIpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNvbG9ycyhcIjRlNzlhN2YyOGUyY2UxNTc1OTc2YjdiMjU5YTE0ZmVkYzk0OWFmN2FhMWZmOWRhNzljNzU1ZmJhYjBhYlwiKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjb2xvcnMoXCIxZjc3YjRmZjdmMGUyY2EwMmNkNjI3Mjg5NDY3YmQ4YzU2NGJlMzc3YzI3ZjdmN2ZiY2JkMjIxN2JlY2ZcIik7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgdmFyIG4gPSBzcGVjaWZpZXIubGVuZ3RoIC8gNiB8IDAsIGNvbG9ycyA9IG5ldyBBcnJheShuKSwgaSA9IDA7XG4gIHdoaWxlIChpIDwgbikgY29sb3JzW2ldID0gXCIjXCIgKyBzcGVjaWZpZXIuc2xpY2UoaSAqIDYsICsraSAqIDYpO1xuICByZXR1cm4gY29sb3JzO1xufVxuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZDhiMzY1ZjVmNWY1NWFiNGFjXCIsXG4gIFwiYTY2MTFhZGZjMjdkODBjZGMxMDE4NTcxXCIsXG4gIFwiYTY2MTFhZGZjMjdkZjVmNWY1ODBjZGMxMDE4NTcxXCIsXG4gIFwiOGM1MTBhZDhiMzY1ZjZlOGMzYzdlYWU1NWFiNGFjMDE2NjVlXCIsXG4gIFwiOGM1MTBhZDhiMzY1ZjZlOGMzZjVmNWY1YzdlYWU1NWFiNGFjMDE2NjVlXCIsXG4gIFwiOGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzYzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlXCIsXG4gIFwiOGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzZjVmNWY1YzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlXCIsXG4gIFwiNTQzMDA1OGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzYzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlMDAzYzMwXCIsXG4gIFwiNTQzMDA1OGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzZjVmNWY1YzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlMDAzYzMwXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImFmOGRjM2Y3ZjdmNzdmYmY3YlwiLFxuICBcIjdiMzI5NGMyYTVjZmE2ZGJhMDAwODgzN1wiLFxuICBcIjdiMzI5NGMyYTVjZmY3ZjdmN2E2ZGJhMDAwODgzN1wiLFxuICBcIjc2MmE4M2FmOGRjM2U3ZDRlOGQ5ZjBkMzdmYmY3YjFiNzgzN1wiLFxuICBcIjc2MmE4M2FmOGRjM2U3ZDRlOGY3ZjdmN2Q5ZjBkMzdmYmY3YjFiNzgzN1wiLFxuICBcIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzN1wiLFxuICBcIjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzN1wiLFxuICBcIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYlwiLFxuICBcIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGY3ZjdmN2Q5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlOWEzYzlmN2Y3ZjdhMWQ3NmFcIixcbiAgXCJkMDFjOGJmMWI2ZGFiOGUxODY0ZGFjMjZcIixcbiAgXCJkMDFjOGJmMWI2ZGFmN2Y3ZjdiOGUxODY0ZGFjMjZcIixcbiAgXCJjNTFiN2RlOWEzYzlmZGUwZWZlNmY1ZDBhMWQ3NmE0ZDkyMjFcIixcbiAgXCJjNTFiN2RlOWEzYzlmZGUwZWZmN2Y3ZjdlNmY1ZDBhMWQ3NmE0ZDkyMjFcIixcbiAgXCJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjFcIixcbiAgXCJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjFcIixcbiAgXCI4ZTAxNTJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEyNzY0MTlcIixcbiAgXCI4ZTAxNTJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEyNzY0MTlcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiOTk4ZWMzZjdmN2Y3ZjFhMzQwXCIsXG4gIFwiNWUzYzk5YjJhYmQyZmRiODYzZTY2MTAxXCIsXG4gIFwiNWUzYzk5YjJhYmQyZjdmN2Y3ZmRiODYzZTY2MTAxXCIsXG4gIFwiNTQyNzg4OTk4ZWMzZDhkYWViZmVlMGI2ZjFhMzQwYjM1ODA2XCIsXG4gIFwiNTQyNzg4OTk4ZWMzZDhkYWViZjdmN2Y3ZmVlMGI2ZjFhMzQwYjM1ODA2XCIsXG4gIFwiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2XCIsXG4gIFwiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2XCIsXG4gIFwiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4XCIsXG4gIFwiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVmOGE2MmY3ZjdmNzY3YTljZlwiLFxuICBcImNhMDAyMGY0YTU4MjkyYzVkZTA1NzFiMFwiLFxuICBcImNhMDAyMGY0YTU4MmY3ZjdmNzkyYzVkZTA1NzFiMFwiLFxuICBcImIyMTgyYmVmOGE2MmZkZGJjN2QxZTVmMDY3YTljZjIxNjZhY1wiLFxuICBcImIyMTgyYmVmOGE2MmZkZGJjN2Y3ZjdmN2QxZTVmMDY3YTljZjIxNjZhY1wiLFxuICBcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhY1wiLFxuICBcImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhY1wiLFxuICBcIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MVwiLFxuICBcIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2Y3ZjdmN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZjhhNjJmZmZmZmY5OTk5OTlcIixcbiAgXCJjYTAwMjBmNGE1ODJiYWJhYmE0MDQwNDBcIixcbiAgXCJjYTAwMjBmNGE1ODJmZmZmZmZiYWJhYmE0MDQwNDBcIixcbiAgXCJiMjE4MmJlZjhhNjJmZGRiYzdlMGUwZTA5OTk5OTk0ZDRkNGRcIixcbiAgXCJiMjE4MmJlZjhhNjJmZGRiYzdmZmZmZmZlMGUwZTA5OTk5OTk0ZDRkNGRcIixcbiAgXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGRcIixcbiAgXCJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGRcIixcbiAgXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQxYTFhMWFcIixcbiAgXCI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQxYTFhMWFcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmM4ZDU5ZmZmZmJmOTFiZmRiXCIsXG4gIFwiZDcxOTFjZmRhZTYxYWJkOWU5MmM3YmI2XCIsXG4gIFwiZDcxOTFjZmRhZTYxZmZmZmJmYWJkOWU5MmM3YmI2XCIsXG4gIFwiZDczMDI3ZmM4ZDU5ZmVlMDkwZTBmM2Y4OTFiZmRiNDU3NWI0XCIsXG4gIFwiZDczMDI3ZmM4ZDU5ZmVlMDkwZmZmZmJmZTBmM2Y4OTFiZmRiNDU3NWI0XCIsXG4gIFwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0XCIsXG4gIFwiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0XCIsXG4gIFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1XCIsXG4gIFwiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZjOGQ1OWZmZmZiZjkxY2Y2MFwiLFxuICBcImQ3MTkxY2ZkYWU2MWE2ZDk2YTFhOTY0MVwiLFxuICBcImQ3MTkxY2ZkYWU2MWZmZmZiZmE2ZDk2YTFhOTY0MVwiLFxuICBcImQ3MzAyN2ZjOGQ1OWZlZTA4YmQ5ZWY4YjkxY2Y2MDFhOTg1MFwiLFxuICBcImQ3MzAyN2ZjOGQ1OWZlZTA4YmZmZmZiZmQ5ZWY4YjkxY2Y2MDFhOTg1MFwiLFxuICBcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MFwiLFxuICBcImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MFwiLFxuICBcImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzN1wiLFxuICBcImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzN1wiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmYzhkNTlmZmZmYmY5OWQ1OTRcIixcbiAgXCJkNzE5MWNmZGFlNjFhYmRkYTQyYjgzYmFcIixcbiAgXCJkNzE5MWNmZGFlNjFmZmZmYmZhYmRkYTQyYjgzYmFcIixcbiAgXCJkNTNlNGZmYzhkNTlmZWUwOGJlNmY1OTg5OWQ1OTQzMjg4YmRcIixcbiAgXCJkNTNlNGZmYzhkNTlmZWUwOGJmZmZmYmZlNmY1OTg5OWQ1OTQzMjg4YmRcIixcbiAgXCJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmRcIixcbiAgXCJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmRcIixcbiAgXCI5ZTAxNDJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmQ1ZTRmYTJcIixcbiAgXCI5ZTAxNDJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmQ1ZTRmYTJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZUNhdGVnb3J5MTB9IGZyb20gXCIuL2NhdGVnb3JpY2FsL2NhdGVnb3J5MTAuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVBY2NlbnR9IGZyb20gXCIuL2NhdGVnb3JpY2FsL0FjY2VudC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZURhcmsyfSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9EYXJrMi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVBhaXJlZH0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvUGFpcmVkLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2NoZW1lUGFzdGVsMX0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvUGFzdGVsMS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVBhc3RlbDJ9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1Bhc3RlbDIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVTZXQxfSBmcm9tIFwiLi9jYXRlZ29yaWNhbC9TZXQxLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2NoZW1lU2V0Mn0gZnJvbSBcIi4vY2F0ZWdvcmljYWwvU2V0Mi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNjaGVtZVNldDN9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1NldDMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzY2hlbWVUYWJsZWF1MTB9IGZyb20gXCIuL2NhdGVnb3JpY2FsL1RhYmxlYXUxMC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQnJCRywgc2NoZW1lIGFzIHNjaGVtZUJyQkd9IGZyb20gXCIuL2RpdmVyZ2luZy9CckJHLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVQUkduLCBzY2hlbWUgYXMgc2NoZW1lUFJHbn0gZnJvbSBcIi4vZGl2ZXJnaW5nL1BSR24uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVBpWUcsIHNjaGVtZSBhcyBzY2hlbWVQaVlHfSBmcm9tIFwiLi9kaXZlcmdpbmcvUGlZRy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUHVPciwgc2NoZW1lIGFzIHNjaGVtZVB1T3J9IGZyb20gXCIuL2RpdmVyZ2luZy9QdU9yLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZEJ1LCBzY2hlbWUgYXMgc2NoZW1lUmRCdX0gZnJvbSBcIi4vZGl2ZXJnaW5nL1JkQnUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVJkR3ksIHNjaGVtZSBhcyBzY2hlbWVSZEd5fSBmcm9tIFwiLi9kaXZlcmdpbmcvUmRHeS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmRZbEJ1LCBzY2hlbWUgYXMgc2NoZW1lUmRZbEJ1fSBmcm9tIFwiLi9kaXZlcmdpbmcvUmRZbEJ1LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVSZFlsR24sIHNjaGVtZSBhcyBzY2hlbWVSZFlsR259IGZyb20gXCIuL2RpdmVyZ2luZy9SZFlsR24uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVNwZWN0cmFsLCBzY2hlbWUgYXMgc2NoZW1lU3BlY3RyYWx9IGZyb20gXCIuL2RpdmVyZ2luZy9TcGVjdHJhbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQnVHbiwgc2NoZW1lIGFzIHNjaGVtZUJ1R259IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvQnVHbi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQnVQdSwgc2NoZW1lIGFzIHNjaGVtZUJ1UHV9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvQnVQdS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlR25CdSwgc2NoZW1lIGFzIHNjaGVtZUduQnV9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvR25CdS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlT3JSZCwgc2NoZW1lIGFzIHNjaGVtZU9yUmR9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvT3JSZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUHVCdUduLCBzY2hlbWUgYXMgc2NoZW1lUHVCdUdufSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1B1QnVHbi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUHVCdSwgc2NoZW1lIGFzIHNjaGVtZVB1QnV9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvUHVCdS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUHVSZCwgc2NoZW1lIGFzIHNjaGVtZVB1UmR9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvUHVSZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmRQdSwgc2NoZW1lIGFzIHNjaGVtZVJkUHV9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvUmRQdS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlWWxHbkJ1LCBzY2hlbWUgYXMgc2NoZW1lWWxHbkJ1fSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1lsR25CdS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlWWxHbiwgc2NoZW1lIGFzIHNjaGVtZVlsR259IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvWWxHbi5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlWWxPckJyLCBzY2hlbWUgYXMgc2NoZW1lWWxPckJyfSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1lsT3JCci5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlWWxPclJkLCBzY2hlbWUgYXMgc2NoZW1lWWxPclJkfSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL1lsT3JSZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQmx1ZXMsIHNjaGVtZSBhcyBzY2hlbWVCbHVlc30gZnJvbSBcIi4vc2VxdWVudGlhbC1zaW5nbGUvQmx1ZXMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZUdyZWVucywgc2NoZW1lIGFzIHNjaGVtZUdyZWVuc30gZnJvbSBcIi4vc2VxdWVudGlhbC1zaW5nbGUvR3JlZW5zLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVHcmV5cywgc2NoZW1lIGFzIHNjaGVtZUdyZXlzfSBmcm9tIFwiLi9zZXF1ZW50aWFsLXNpbmdsZS9HcmV5cy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUHVycGxlcywgc2NoZW1lIGFzIHNjaGVtZVB1cnBsZXN9IGZyb20gXCIuL3NlcXVlbnRpYWwtc2luZ2xlL1B1cnBsZXMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVJlZHMsIHNjaGVtZSBhcyBzY2hlbWVSZWRzfSBmcm9tIFwiLi9zZXF1ZW50aWFsLXNpbmdsZS9SZWRzLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVPcmFuZ2VzLCBzY2hlbWUgYXMgc2NoZW1lT3Jhbmdlc30gZnJvbSBcIi4vc2VxdWVudGlhbC1zaW5nbGUvT3Jhbmdlcy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlQ2l2aWRpc30gZnJvbSBcIi4vc2VxdWVudGlhbC1tdWx0aS9jaXZpZGlzLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgaW50ZXJwb2xhdGVDdWJlaGVsaXhEZWZhdWx0fSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL2N1YmVoZWxpeC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlUmFpbmJvdywgd2FybSBhcyBpbnRlcnBvbGF0ZVdhcm0sIGNvb2wgYXMgaW50ZXJwb2xhdGVDb29sfSBmcm9tIFwiLi9zZXF1ZW50aWFsLW11bHRpL3JhaW5ib3cuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVNpbmVib3d9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvc2luZWJvdy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycG9sYXRlVHVyYm99IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvdHVyYm8uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpbnRlcnBvbGF0ZVZpcmlkaXMsIG1hZ21hIGFzIGludGVycG9sYXRlTWFnbWEsIGluZmVybm8gYXMgaW50ZXJwb2xhdGVJbmZlcm5vLCBwbGFzbWEgYXMgaW50ZXJwb2xhdGVQbGFzbWF9IGZyb20gXCIuL3NlcXVlbnRpYWwtbXVsdGkvdmlyaWRpcy5qc1wiO1xuIiwiaW1wb3J0IHtpbnRlcnBvbGF0ZVJnYkJhc2lzfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgc2NoZW1lID0+IGludGVycG9sYXRlUmdiQmFzaXMoc2NoZW1lW3NjaGVtZS5sZW5ndGggLSAxXSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlNWY1Zjk5OWQ4YzkyY2EyNWZcIixcbiAgXCJlZGY4ZmJiMmUyZTI2NmMyYTQyMzhiNDVcIixcbiAgXCJlZGY4ZmJiMmUyZTI2NmMyYTQyY2EyNWYwMDZkMmNcIixcbiAgXCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQyY2EyNWYwMDZkMmNcIixcbiAgXCJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjRcIixcbiAgXCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjRcIixcbiAgXCJmN2ZjZmRlNWY1ZjljY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDZkMmMwMDQ0MWJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZTBlY2Y0OWViY2RhODg1NmE3XCIsXG4gIFwiZWRmOGZiYjNjZGUzOGM5NmM2ODg0MTlkXCIsXG4gIFwiZWRmOGZiYjNjZGUzOGM5NmM2ODg1NmE3ODEwZjdjXCIsXG4gIFwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2ODg1NmE3ODEwZjdjXCIsXG4gIFwiZWRmOGZiYmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiXCIsXG4gIFwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiXCIsXG4gIFwiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkODEwZjdjNGQwMDRiXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImUwZjNkYmE4ZGRiNTQzYTJjYVwiLFxuICBcImYwZjllOGJhZTRiYzdiY2NjNDJiOGNiZVwiLFxuICBcImYwZjllOGJhZTRiYzdiY2NjNDQzYTJjYTA4NjhhY1wiLFxuICBcImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDQzYTJjYTA4NjhhY1wiLFxuICBcImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZVwiLFxuICBcImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NTg5ZVwiLFxuICBcImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NjhhYzA4NDA4MVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJmZWU4YzhmZGJiODRlMzRhMzNcIixcbiAgXCJmZWYwZDlmZGNjOGFmYzhkNTlkNzMwMWZcIixcbiAgXCJmZWYwZDlmZGNjOGFmYzhkNTllMzRhMzNiMzAwMDBcIixcbiAgXCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllMzRhMzNiMzAwMDBcIixcbiAgXCJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDBcIixcbiAgXCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDBcIixcbiAgXCJmZmY3ZWNmZWU4YzhmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWZiMzAwMDA3ZjAwMDBcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZWNlN2YyYTZiZGRiMmI4Y2JlXCIsXG4gIFwiZjFlZWY2YmRjOWUxNzRhOWNmMDU3MGIwXCIsXG4gIFwiZjFlZWY2YmRjOWUxNzRhOWNmMmI4Y2JlMDQ1YThkXCIsXG4gIFwiZjFlZWY2ZDBkMWU2YTZiZGRiNzRhOWNmMmI4Y2JlMDQ1YThkXCIsXG4gIFwiZjFlZWY2ZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiXCIsXG4gIFwiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiXCIsXG4gIFwiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDQ1YThkMDIzODU4XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImVjZTJmMGE2YmRkYjFjOTA5OVwiLFxuICBcImY2ZWZmN2JkYzllMTY3YTljZjAyODE4YVwiLFxuICBcImY2ZWZmN2JkYzllMTY3YTljZjFjOTA5OTAxNmM1OVwiLFxuICBcImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjFjOTA5OTAxNmM1OVwiLFxuICBcImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNjQ1MFwiLFxuICBcImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNjQ1MFwiLFxuICBcImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNmM1OTAxNDYzNlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlN2UxZWZjOTk0YzdkZDFjNzdcIixcbiAgXCJmMWVlZjZkN2I1ZDhkZjY1YjBjZTEyNTZcIixcbiAgXCJmMWVlZjZkN2I1ZDhkZjY1YjBkZDFjNzc5ODAwNDNcIixcbiAgXCJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBkZDFjNzc5ODAwNDNcIixcbiAgXCJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2ZcIixcbiAgXCJmN2Y0ZjllN2UxZWZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2ZcIixcbiAgXCJmN2Y0ZjllN2UxZWZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5ODAwNDM2NzAwMWZcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmRlMGRkZmE5ZmI1YzUxYjhhXCIsXG4gIFwiZmVlYmUyZmJiNGI5Zjc2OGExYWUwMTdlXCIsXG4gIFwiZmVlYmUyZmJiNGI5Zjc2OGExYzUxYjhhN2EwMTc3XCIsXG4gIFwiZmVlYmUyZmNjNWMwZmE5ZmI1Zjc2OGExYzUxYjhhN2EwMTc3XCIsXG4gIFwiZmVlYmUyZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3XCIsXG4gIFwiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3XCIsXG4gIFwiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3NDkwMDZhXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImY3ZmNiOWFkZGQ4ZTMxYTM1NFwiLFxuICBcImZmZmZjY2MyZTY5OTc4YzY3OTIzODQ0M1wiLFxuICBcImZmZmZjY2MyZTY5OTc4YzY3OTMxYTM1NDAwNjgzN1wiLFxuICBcImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTMxYTM1NDAwNjgzN1wiLFxuICBcImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNWEzMlwiLFxuICBcImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNWEzMlwiLFxuICBcImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNjgzNzAwNDUyOVwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZGY4YjE3ZmNkYmIyYzdmYjhcIixcbiAgXCJmZmZmY2NhMWRhYjQ0MWI2YzQyMjVlYThcIixcbiAgXCJmZmZmY2NhMWRhYjQ0MWI2YzQyYzdmYjgyNTM0OTRcIixcbiAgXCJmZmZmY2NjN2U5YjQ3ZmNkYmI0MWI2YzQyYzdmYjgyNTM0OTRcIixcbiAgXCJmZmZmY2NjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgwYzJjODRcIixcbiAgXCJmZmZmZDllZGY4YjFjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgwYzJjODRcIixcbiAgXCJmZmZmZDllZGY4YjFjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgyNTM0OTQwODFkNThcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmZmN2JjZmVjNDRmZDk1ZjBlXCIsXG4gIFwiZmZmZmQ0ZmVkOThlZmU5OTI5Y2M0YzAyXCIsXG4gIFwiZmZmZmQ0ZmVkOThlZmU5OTI5ZDk1ZjBlOTkzNDA0XCIsXG4gIFwiZmZmZmQ0ZmVlMzkxZmVjNDRmZmU5OTI5ZDk1ZjBlOTkzNDA0XCIsXG4gIFwiZmZmZmQ0ZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0XCIsXG4gIFwiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0XCIsXG4gIFwiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOTkzNDA0NjYyNTA2XCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZmZWRhMGZlYjI0Y2YwM2IyMFwiLFxuICBcImZmZmZiMmZlY2M1Y2ZkOGQzY2UzMWExY1wiLFxuICBcImZmZmZiMmZlY2M1Y2ZkOGQzY2YwM2IyMGJkMDAyNlwiLFxuICBcImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2YwM2IyMGJkMDAyNlwiLFxuICBcImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNlwiLFxuICBcImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2IxMDAyNlwiLFxuICBcImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2JkMDAyNjgwMDAyNlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0KSB7XG4gIHQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSk7XG4gIHJldHVybiBcInJnYihcIlxuICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoLTQuNTQgLSB0ICogKDM1LjM0IC0gdCAqICgyMzgxLjczIC0gdCAqICg2NDAyLjcgLSB0ICogKDcwMjQuNzIgLSB0ICogMjcxMC41NykpKSkpKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDMyLjQ5ICsgdCAqICgxNzAuNzMgKyB0ICogKDUyLjgyIC0gdCAqICgxMzEuNDYgLSB0ICogKDE3Ni41OCAtIHQgKiA2Ny4zNykpKSkpKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDgxLjI0ICsgdCAqICg0NDIuMzYgLSB0ICogKDI0ODIuNDMgLSB0ICogKDYxNjcuMjQgLSB0ICogKDY2MTQuOTQgLSB0ICogMjQ3NS42NykpKSkpKSlcbiAgICAgICsgXCIpXCI7XG59XG4iLCJpbXBvcnQge2N1YmVoZWxpeH0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQge2ludGVycG9sYXRlQ3ViZWhlbGl4TG9uZ30gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGludGVycG9sYXRlQ3ViZWhlbGl4TG9uZyhjdWJlaGVsaXgoMzAwLCAwLjUsIDAuMCksIGN1YmVoZWxpeCgtMjQwLCAwLjUsIDEuMCkpO1xuIiwiaW1wb3J0IHtjdWJlaGVsaXh9IGZyb20gXCJkMy1jb2xvclwiO1xuaW1wb3J0IHtpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmd9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuXG5leHBvcnQgdmFyIHdhcm0gPSBpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmcoY3ViZWhlbGl4KC0xMDAsIDAuNzUsIDAuMzUpLCBjdWJlaGVsaXgoODAsIDEuNTAsIDAuOCkpO1xuXG5leHBvcnQgdmFyIGNvb2wgPSBpbnRlcnBvbGF0ZUN1YmVoZWxpeExvbmcoY3ViZWhlbGl4KDI2MCwgMC43NSwgMC4zNSksIGN1YmVoZWxpeCg4MCwgMS41MCwgMC44KSk7XG5cbnZhciBjID0gY3ViZWhlbGl4KCk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHQpIHtcbiAgaWYgKHQgPCAwIHx8IHQgPiAxKSB0IC09IE1hdGguZmxvb3IodCk7XG4gIHZhciB0cyA9IE1hdGguYWJzKHQgLSAwLjUpO1xuICBjLmggPSAzNjAgKiB0IC0gMTAwO1xuICBjLnMgPSAxLjUgLSAxLjUgKiB0cztcbiAgYy5sID0gMC44IC0gMC45ICogdHM7XG4gIHJldHVybiBjICsgXCJcIjtcbn1cbiIsImltcG9ydCB7cmdifSBmcm9tIFwiZDMtY29sb3JcIjtcblxudmFyIGMgPSByZ2IoKSxcbiAgICBwaV8xXzMgPSBNYXRoLlBJIC8gMyxcbiAgICBwaV8yXzMgPSBNYXRoLlBJICogMiAvIDM7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHQpIHtcbiAgdmFyIHg7XG4gIHQgPSAoMC41IC0gdCkgKiBNYXRoLlBJO1xuICBjLnIgPSAyNTUgKiAoeCA9IE1hdGguc2luKHQpKSAqIHg7XG4gIGMuZyA9IDI1NSAqICh4ID0gTWF0aC5zaW4odCArIHBpXzFfMykpICogeDtcbiAgYy5iID0gMjU1ICogKHggPSBNYXRoLnNpbih0ICsgcGlfMl8zKSkgKiB4O1xuICByZXR1cm4gYyArIFwiXCI7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih0KSB7XG4gIHQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSk7XG4gIHJldHVybiBcInJnYihcIlxuICAgICAgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoMzQuNjEgKyB0ICogKDExNzIuMzMgLSB0ICogKDEwNzkzLjU2IC0gdCAqICgzMzMwMC4xMiAtIHQgKiAoMzgzOTQuNDkgLSB0ICogMTQ4MjUuMDUpKSkpKSkpICsgXCIsIFwiXG4gICAgICArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCgyMy4zMSArIHQgKiAoNTU3LjMzICsgdCAqICgxMjI1LjMzIC0gdCAqICgzNTc0Ljk2IC0gdCAqICgxMDczLjc3ICsgdCAqIDcwNy41NikpKSkpKSkgKyBcIiwgXCJcbiAgICAgICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDI3LjIgKyB0ICogKDMyMTEuMSAtIHQgKiAoMTUzMjcuOTcgLSB0ICogKDI3ODE0IC0gdCAqICgyMjU2OS4xOCAtIHQgKiA2ODM4LjY2KSkpKSkpKVxuICAgICAgKyBcIilcIjtcbn1cbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuXG5mdW5jdGlvbiByYW1wKHJhbmdlKSB7XG4gIHZhciBuID0gcmFuZ2UubGVuZ3RoO1xuICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgIHJldHVybiByYW5nZVtNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcih0ICogbikpKV07XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoY29sb3JzKFwiNDQwMTU0NDQwMjU2NDUwNDU3NDUwNTU5NDYwNzVhNDYwODVjNDYwYTVkNDYwYjVlNDcwZDYwNDcwZTYxNDcxMDYzNDcxMTY0NDcxMzY1NDgxNDY3NDgxNjY4NDgxNzY5NDgxODZhNDgxYTZjNDgxYjZkNDgxYzZlNDgxZDZmNDgxZjcwNDgyMDcxNDgyMTczNDgyMzc0NDgyNDc1NDgyNTc2NDgyNjc3NDgyODc4NDgyOTc5NDcyYTdhNDcyYzdhNDcyZDdiNDcyZTdjNDcyZjdkNDYzMDdlNDYzMjdlNDYzMzdmNDYzNDgwNDUzNTgxNDUzNzgxNDUzODgyNDQzOTgzNDQzYTgzNDQzYjg0NDMzZDg0NDMzZTg1NDIzZjg1NDI0MDg2NDI0MTg2NDE0Mjg3NDE0NDg3NDA0NTg4NDA0Njg4M2Y0Nzg4M2Y0ODg5M2U0OTg5M2U0YTg5M2U0YzhhM2Q0ZDhhM2Q0ZThhM2M0ZjhhM2M1MDhiM2I1MThiM2I1MjhiM2E1MzhiM2E1NDhjMzk1NThjMzk1NjhjMzg1ODhjMzg1OThjMzc1YThjMzc1YjhkMzY1YzhkMzY1ZDhkMzU1ZThkMzU1ZjhkMzQ2MDhkMzQ2MThkMzM2MjhkMzM2MzhkMzI2NDhlMzI2NThlMzE2NjhlMzE2NzhlMzE2ODhlMzA2OThlMzA2YThlMmY2YjhlMmY2YzhlMmU2ZDhlMmU2ZThlMmU2ZjhlMmQ3MDhlMmQ3MThlMmM3MThlMmM3MjhlMmM3MzhlMmI3NDhlMmI3NThlMmE3NjhlMmE3NzhlMmE3ODhlMjk3OThlMjk3YThlMjk3YjhlMjg3YzhlMjg3ZDhlMjc3ZThlMjc3ZjhlMjc4MDhlMjY4MThlMjY4MjhlMjY4MjhlMjU4MzhlMjU4NDhlMjU4NThlMjQ4NjhlMjQ4NzhlMjM4ODhlMjM4OThlMjM4YThkMjI4YjhkMjI4YzhkMjI4ZDhkMjE4ZThkMjE4ZjhkMjE5MDhkMjE5MThjMjA5MjhjMjA5MjhjMjA5MzhjMWY5NDhjMWY5NThiMWY5NjhiMWY5NzhiMWY5ODhiMWY5OThhMWY5YThhMWU5YjhhMWU5Yzg5MWU5ZDg5MWY5ZTg5MWY5Zjg4MWZhMDg4MWZhMTg4MWZhMTg3MWZhMjg3MjBhMzg2MjBhNDg2MjFhNTg1MjFhNjg1MjJhNzg1MjJhODg0MjNhOTgzMjRhYTgzMjVhYjgyMjVhYzgyMjZhZDgxMjdhZDgxMjhhZTgwMjlhZjdmMmFiMDdmMmNiMTdlMmRiMjdkMmViMzdjMmZiNDdjMzFiNTdiMzJiNjdhMzRiNjc5MzViNzc5MzdiODc4MzhiOTc3M2FiYTc2M2JiYjc1M2RiYzc0M2ZiYzczNDBiZDcyNDJiZTcxNDRiZjcwNDZjMDZmNDhjMTZlNGFjMTZkNGNjMjZjNGVjMzZiNTBjNDZhNTJjNTY5NTRjNTY4NTZjNjY3NThjNzY1NWFjODY0NWNjODYzNWVjOTYyNjBjYTYwNjNjYjVmNjVjYjVlNjdjYzVjNjljZDViNmNjZDVhNmVjZTU4NzBjZjU3NzNkMDU2NzVkMDU0NzdkMTUzN2FkMTUxN2NkMjUwN2ZkMzRlODFkMzRkODRkNDRiODZkNTQ5ODlkNTQ4OGJkNjQ2OGVkNjQ1OTBkNzQzOTNkNzQxOTVkODQwOThkODNlOWJkOTNjOWRkOTNiYTBkYTM5YTJkYTM3YTVkYjM2YThkYjM0YWFkYzMyYWRkYzMwYjBkZDJmYjJkZDJkYjVkZTJiYjhkZTI5YmFkZTI4YmRkZjI2YzBkZjI1YzJkZjIzYzVlMDIxYzhlMDIwY2FlMTFmY2RlMTFkZDBlMTFjZDJlMjFiZDVlMjFhZDhlMjE5ZGFlMzE5ZGRlMzE4ZGZlMzE4ZTJlNDE4ZTVlNDE5ZTdlNDE5ZWFlNTFhZWNlNTFiZWZlNTFjZjFlNTFkZjRlNjFlZjZlNjIwZjhlNjIxZmJlNzIzZmRlNzI1XCIpKTtcblxuZXhwb3J0IHZhciBtYWdtYSA9IHJhbXAoY29sb3JzKFwiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTA5MDIwMjBiMDIwMjBkMDMwMzBmMDMwMzEyMDQwNDE0MDUwNDE2MDYwNTE4MDYwNTFhMDcwNjFjMDgwNzFlMDkwNzIwMGEwODIyMGIwOTI0MGMwOTI2MGQwYTI5MGUwYjJiMTAwYjJkMTEwYzJmMTIwZDMxMTMwZDM0MTQwZTM2MTUwZTM4MTYwZjNiMTgwZjNkMTkxMDNmMWExMDQyMWMxMDQ0MWQxMTQ3MWUxMTQ5MjAxMTRiMjExMTRlMjIxMTUwMjQxMjUzMjUxMjU1MjcxMjU4MjkxMTVhMmExMTVjMmMxMTVmMmQxMTYxMmYxMTYzMzExMTY1MzMxMDY3MzQxMDY5MzYxMDZiMzgxMDZjMzkwZjZlM2IwZjcwM2QwZjcxM2YwZjcyNDAwZjc0NDIwZjc1NDQwZjc2NDUxMDc3NDcxMDc4NDkxMDc4NGExMDc5NGMxMTdhNGUxMTdiNGYxMjdiNTExMjdjNTIxMzdjNTQxMzdkNTYxNDdkNTcxNTdlNTkxNTdlNWExNjdlNWMxNjdmNWQxNzdmNWYxODdmNjAxODgwNjIxOTgwNjQxYTgwNjUxYTgwNjcxYjgwNjgxYzgxNmExYzgxNmIxZDgxNmQxZDgxNmUxZTgxNzAxZjgxNzIxZjgxNzMyMDgxNzUyMTgxNzYyMTgxNzgyMjgxNzkyMjgyN2IyMzgyN2MyMzgyN2UyNDgyODAyNTgyODEyNTgxODMyNjgxODQyNjgxODYyNzgxODgyNzgxODkyODgxOGIyOTgxOGMyOTgxOGUyYTgxOTAyYTgxOTEyYjgxOTMyYjgwOTQyYzgwOTYyYzgwOTgyZDgwOTkyZDgwOWIyZTdmOWMyZTdmOWUyZjdmYTAyZjdmYTEzMDdlYTMzMDdlYTUzMTdlYTYzMTdkYTgzMjdkYWEzMzdkYWIzMzdjYWQzNDdjYWUzNDdiYjAzNTdiYjIzNTdiYjMzNjdhYjUzNjdhYjczNzc5YjgzNzc5YmEzODc4YmMzOTc4YmQzOTc3YmYzYTc3YzAzYTc2YzIzYjc1YzQzYzc1YzUzYzc0YzczZDczYzgzZTczY2EzZTcyY2MzZjcxY2Q0MDcxY2Y0MDcwZDA0MTZmZDI0MjZmZDM0MzZlZDU0NDZkZDY0NTZjZDg0NTZjZDk0NjZiZGI0NzZhZGM0ODY5ZGU0OTY4ZGY0YTY4ZTA0YzY3ZTI0ZDY2ZTM0ZTY1ZTQ0ZjY0ZTU1MDY0ZTc1MjYzZTg1MzYyZTk1NDYyZWE1NjYxZWI1NzYwZWM1ODYwZWQ1YTVmZWU1YjVlZWY1ZDVlZjA1ZjVlZjE2MDVkZjI2MjVkZjI2NDVjZjM2NTVjZjQ2NzVjZjQ2OTVjZjU2YjVjZjY2YzVjZjY2ZTVjZjc3MDVjZjc3MjVjZjg3NDVjZjg3NjVjZjk3ODVkZjk3OTVkZjk3YjVkZmE3ZDVlZmE3ZjVlZmE4MTVmZmI4MzVmZmI4NTYwZmI4NzYxZmM4OTYxZmM4YTYyZmM4YzYzZmM4ZTY0ZmM5MDY1ZmQ5MjY2ZmQ5NDY3ZmQ5NjY4ZmQ5ODY5ZmQ5YTZhZmQ5YjZiZmU5ZDZjZmU5ZjZkZmVhMTZlZmVhMzZmZmVhNTcxZmVhNzcyZmVhOTczZmVhYTc0ZmVhYzc2ZmVhZTc3ZmViMDc4ZmViMjdhZmViNDdiZmViNjdjZmViNzdlZmViOTdmZmViYjgxZmViZDgyZmViZjg0ZmVjMTg1ZmVjMjg3ZmVjNDg4ZmVjNjhhZmVjODhjZmVjYThkZmVjYzhmZmVjZDkwZmVjZjkyZmVkMTk0ZmVkMzk1ZmVkNTk3ZmVkNzk5ZmVkODlhZmRkYTljZmRkYzllZmRkZWEwZmRlMGExZmRlMmEzZmRlM2E1ZmRlNWE3ZmRlN2E5ZmRlOWFhZmRlYmFjZmNlY2FlZmNlZWIwZmNmMGIyZmNmMmI0ZmNmNGI2ZmNmNmI4ZmNmN2I5ZmNmOWJiZmNmYmJkZmNmZGJmXCIpKTtcblxuZXhwb3J0IHZhciBpbmZlcm5vID0gcmFtcChjb2xvcnMoXCIwMDAwMDQwMTAwMDUwMTAxMDYwMTAxMDgwMjAxMGEwMjAyMGMwMjAyMGUwMzAyMTAwNDAzMTIwNDAzMTQwNTA0MTcwNjA0MTkwNzA1MWIwODA1MWQwOTA2MWYwYTA3MjIwYjA3MjQwYzA4MjYwZDA4MjkwZTA5MmIxMDA5MmQxMTBhMzAxMjBhMzIxNDBiMzQxNTBiMzcxNjBiMzkxODBjM2MxOTBjM2UxYjBjNDExYzBjNDMxZTBjNDUxZjBjNDgyMTBjNGEyMzBjNGMyNDBjNGYyNjBjNTEyODBiNTMyOTBiNTUyYjBiNTcyZDBiNTkyZjBhNWIzMTBhNWMzMjBhNWUzNDBhNWYzNjA5NjEzODA5NjIzOTA5NjMzYjA5NjQzZDA5NjUzZTA5NjY0MDBhNjc0MjBhNjg0NDBhNjg0NTBhNjk0NzBiNmE0OTBiNmE0YTBjNmI0YzBjNmI0ZDBkNmM0ZjBkNmM1MTBlNmM1MjBlNmQ1NDBmNmQ1NTBmNmQ1NzEwNmU1OTEwNmU1YTExNmU1YzEyNmU1ZDEyNmU1ZjEzNmU2MTEzNmU2MjE0NmU2NDE1NmU2NTE1NmU2NzE2NmU2OTE2NmU2YTE3NmU2YzE4NmU2ZDE4NmU2ZjE5NmU3MTE5NmU3MjFhNmU3NDFhNmU3NTFiNmU3NzFjNmQ3ODFjNmQ3YTFkNmQ3YzFkNmQ3ZDFlNmQ3ZjFlNmM4MDFmNmM4MjIwNmM4NDIwNmI4NTIxNmI4NzIxNmI4ODIyNmE4YTIyNmE4YzIzNjk4ZDIzNjk4ZjI0Njk5MDI1Njg5MjI1Njg5MzI2Njc5NTI2Njc5NzI3NjY5ODI3NjY5YTI4NjU5YjI5NjQ5ZDI5NjQ5ZjJhNjNhMDJhNjNhMjJiNjJhMzJjNjFhNTJjNjBhNjJkNjBhODJlNWZhOTJlNWVhYjJmNWVhZDMwNWRhZTMwNWNiMDMxNWJiMTMyNWFiMzMyNWFiNDMzNTliNjM0NThiNzM1NTdiOTM1NTZiYTM2NTViYzM3NTRiZDM4NTNiZjM5NTJjMDNhNTFjMTNhNTBjMzNiNGZjNDNjNGVjNjNkNGRjNzNlNGNjODNmNGJjYTQwNGFjYjQxNDljYzQyNDhjZTQzNDdjZjQ0NDZkMDQ1NDVkMjQ2NDRkMzQ3NDNkNDQ4NDJkNTRhNDFkNzRiM2ZkODRjM2VkOTRkM2RkYTRlM2NkYjUwM2JkZDUxM2FkZTUyMzhkZjUzMzdlMDU1MzZlMTU2MzVlMjU3MzRlMzU5MzNlNDVhMzFlNTVjMzBlNjVkMmZlNzVlMmVlODYwMmRlOTYxMmJlYTYzMmFlYjY0MjllYjY2MjhlYzY3MjZlZDY5MjVlZTZhMjRlZjZjMjNlZjZlMjFmMDZmMjBmMTcxMWZmMTczMWRmMjc0MWNmMzc2MWJmMzc4MTlmNDc5MThmNTdiMTdmNTdkMTVmNjdlMTRmNjgwMTNmNzgyMTJmNzg0MTBmODg1MGZmODg3MGVmODg5MGNmOThiMGJmOThjMGFmOThlMDlmYTkwMDhmYTkyMDdmYTk0MDdmYjk2MDZmYjk3MDZmYjk5MDZmYjliMDZmYjlkMDdmYzlmMDdmY2ExMDhmY2EzMDlmY2E1MGFmY2E2MGNmY2E4MGRmY2FhMGZmY2FjMTFmY2FlMTJmY2IwMTRmY2IyMTZmY2I0MThmYmI2MWFmYmI4MWRmYmJhMWZmYmJjMjFmYmJlMjNmYWMwMjZmYWMyMjhmYWM0MmFmYWM2MmRmOWM3MmZmOWM5MzJmOWNiMzVmOGNkMzdmOGNmM2FmN2QxM2RmN2QzNDBmNmQ1NDNmNmQ3NDZmNWQ5NDlmNWRiNGNmNGRkNGZmNGRmNTNmNGUxNTZmM2UzNWFmM2U1NWRmMmU2NjFmMmU4NjVmMmVhNjlmMWVjNmRmMWVkNzFmMWVmNzVmMWYxNzlmMmYyN2RmMmY0ODJmM2Y1ODZmM2Y2OGFmNGY4OGVmNWY5OTJmNmZhOTZmOGZiOWFmOWZjOWRmYWZkYTFmY2ZmYTRcIikpO1xuXG5leHBvcnQgdmFyIHBsYXNtYSA9IHJhbXAoY29sb3JzKFwiMGQwODg3MTAwNzg4MTMwNzg5MTYwNzhhMTkwNjhjMWIwNjhkMWQwNjhlMjAwNjhmMjIwNjkwMjQwNjkxMjYwNTkxMjgwNTkyMmEwNTkzMmMwNTk0MmUwNTk1MmYwNTk2MzEwNTk3MzMwNTk3MzUwNDk4MzcwNDk5MzgwNDlhM2EwNDlhM2MwNDliM2UwNDljM2YwNDljNDEwNDlkNDMwMzllNDQwMzllNDYwMzlmNDgwMzlmNDkwM2EwNGIwM2ExNGMwMmExNGUwMmEyNTAwMmEyNTEwMmEzNTMwMmEzNTUwMmE0NTYwMWE0NTgwMWE0NTkwMWE1NWIwMWE1NWMwMWE2NWUwMWE2NjAwMWE2NjEwMGE3NjMwMGE3NjQwMGE3NjYwMGE3NjcwMGE4NjkwMGE4NmEwMGE4NmMwMGE4NmUwMGE4NmYwMGE4NzEwMGE4NzIwMWE4NzQwMWE4NzUwMWE4NzcwMWE4NzgwMWE4N2EwMmE4N2IwMmE4N2QwM2E4N2UwM2E4ODAwNGE4ODEwNGE3ODMwNWE3ODQwNWE3ODYwNmE2ODcwN2E2ODgwOGE2OGEwOWE1OGIwYWE1OGQwYmE1OGUwY2E0OGYwZGE0OTEwZWEzOTIwZmEzOTQxMGEyOTUxMWExOTYxM2ExOTgxNGEwOTkxNTlmOWExNjlmOWMxNzllOWQxODlkOWUxOTlkYTAxYTljYTExYjliYTIxZDlhYTMxZTlhYTUxZjk5YTYyMDk4YTcyMTk3YTgyMjk2YWEyMzk1YWIyNDk0YWMyNjk0YWQyNzkzYWUyODkyYjAyOTkxYjEyYTkwYjIyYjhmYjMyYzhlYjQyZThkYjUyZjhjYjYzMDhiYjczMThhYjgzMjg5YmEzMzg4YmIzNDg4YmMzNTg3YmQzNzg2YmUzODg1YmYzOTg0YzAzYTgzYzEzYjgyYzIzYzgxYzMzZDgwYzQzZTdmYzU0MDdlYzY0MTdkYzc0MjdjYzg0MzdiYzk0NDdhY2E0NTdhY2I0Njc5Y2M0Nzc4Y2M0OTc3Y2Q0YTc2Y2U0Yjc1Y2Y0Yzc0ZDA0ZDczZDE0ZTcyZDI0ZjcxZDM1MTcxZDQ1MjcwZDU1MzZmZDU1NDZlZDY1NTZkZDc1NjZjZDg1NzZiZDk1ODZhZGE1YTZhZGE1YjY5ZGI1YzY4ZGM1ZDY3ZGQ1ZTY2ZGU1ZjY1ZGU2MTY0ZGY2MjYzZTA2MzYzZTE2NDYyZTI2NTYxZTI2NjYwZTM2ODVmZTQ2OTVlZTU2YTVkZTU2YjVkZTY2YzVjZTc2ZTViZTc2ZjVhZTg3MDU5ZTk3MTU4ZTk3MjU3ZWE3NDU3ZWI3NTU2ZWI3NjU1ZWM3NzU0ZWQ3OTUzZWQ3YTUyZWU3YjUxZWY3YzUxZWY3ZTUwZjA3ZjRmZjA4MDRlZjE4MTRkZjE4MzRjZjI4NDRiZjM4NTRiZjM4NzRhZjQ4ODQ5ZjQ4OTQ4ZjU4YjQ3ZjU4YzQ2ZjY4ZDQ1ZjY4ZjQ0Zjc5MDQ0Zjc5MTQzZjc5MzQyZjg5NDQxZjg5NTQwZjk5NzNmZjk5ODNlZjk5YTNlZmE5YjNkZmE5YzNjZmE5ZTNiZmI5ZjNhZmJhMTM5ZmJhMjM4ZmNhMzM4ZmNhNTM3ZmNhNjM2ZmNhODM1ZmNhOTM0ZmRhYjMzZmRhYzMzZmRhZTMyZmRhZjMxZmRiMTMwZmRiMjJmZmRiNDJmZmRiNTJlZmViNzJkZmViODJjZmViYTJjZmViYjJiZmViZDJhZmViZTJhZmVjMDI5ZmRjMjI5ZmRjMzI4ZmRjNTI3ZmRjNjI3ZmRjODI3ZmRjYTI2ZmRjYjI2ZmNjZDI1ZmNjZTI1ZmNkMDI1ZmNkMjI1ZmJkMzI0ZmJkNTI0ZmJkNzI0ZmFkODI0ZmFkYTI0ZjlkYzI0ZjlkZDI1ZjhkZjI1ZjhlMTI1ZjdlMjI1ZjdlNDI1ZjZlNjI2ZjZlODI2ZjVlOTI2ZjVlYjI3ZjRlZDI3ZjNlZTI3ZjNmMDI3ZjJmMjI3ZjFmNDI2ZjFmNTI1ZjBmNzI0ZjBmOTIxXCIpKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImRlZWJmNzllY2FlMTMxODJiZFwiLFxuICBcImVmZjNmZmJkZDdlNzZiYWVkNjIxNzFiNVwiLFxuICBcImVmZjNmZmJkZDdlNzZiYWVkNjMxODJiZDA4NTE5Y1wiLFxuICBcImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjMxODJiZDA4NTE5Y1wiLFxuICBcImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NFwiLFxuICBcImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NDU5NFwiLFxuICBcImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NTE5YzA4MzA2YlwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlNWY1ZTBhMWQ5OWIzMWEzNTRcIixcbiAgXCJlZGY4ZTliYWU0YjM3NGM0NzYyMzhiNDVcIixcbiAgXCJlZGY4ZTliYWU0YjM3NGM0NzYzMWEzNTQwMDZkMmNcIixcbiAgXCJlZGY4ZTljN2U5YzBhMWQ5OWI3NGM0NzYzMWEzNTQwMDZkMmNcIixcbiAgXCJlZGY4ZTljN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDVhMzJcIixcbiAgXCJmN2ZjZjVlNWY1ZTBjN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDVhMzJcIixcbiAgXCJmN2ZjZjVlNWY1ZTBjN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDZkMmMwMDQ0MWJcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZjBmMGYwYmRiZGJkNjM2MzYzXCIsXG4gIFwiZjdmN2Y3Y2NjY2NjOTY5Njk2NTI1MjUyXCIsXG4gIFwiZjdmN2Y3Y2NjY2NjOTY5Njk2NjM2MzYzMjUyNTI1XCIsXG4gIFwiZjdmN2Y3ZDlkOWQ5YmRiZGJkOTY5Njk2NjM2MzYzMjUyNTI1XCIsXG4gIFwiZjdmN2Y3ZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1XCIsXG4gIFwiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1XCIsXG4gIFwiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1MDAwMDAwXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCBjb2xvcnMgZnJvbSBcIi4uL2NvbG9ycy5qc1wiO1xuaW1wb3J0IHJhbXAgZnJvbSBcIi4uL3JhbXAuanNcIjtcblxuZXhwb3J0IHZhciBzY2hlbWUgPSBuZXcgQXJyYXkoMykuY29uY2F0KFxuICBcImZlZTZjZWZkYWU2YmU2NTUwZFwiLFxuICBcImZlZWRkZWZkYmU4NWZkOGQzY2Q5NDcwMVwiLFxuICBcImZlZWRkZWZkYmU4NWZkOGQzY2U2NTUwZGE2MzYwM1wiLFxuICBcImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2U2NTUwZGE2MzYwM1wiLFxuICBcImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNFwiLFxuICBcImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMThjMmQwNFwiLFxuICBcImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMWE2MzYwMzdmMjcwNFwiXG4pLm1hcChjb2xvcnMpO1xuXG5leHBvcnQgZGVmYXVsdCByYW1wKHNjaGVtZSk7XG4iLCJpbXBvcnQgY29sb3JzIGZyb20gXCIuLi9jb2xvcnMuanNcIjtcbmltcG9ydCByYW1wIGZyb20gXCIuLi9yYW1wLmpzXCI7XG5cbmV4cG9ydCB2YXIgc2NoZW1lID0gbmV3IEFycmF5KDMpLmNvbmNhdChcbiAgXCJlZmVkZjViY2JkZGM3NTZiYjFcIixcbiAgXCJmMmYwZjdjYmM5ZTI5ZTlhYzg2YTUxYTNcIixcbiAgXCJmMmYwZjdjYmM5ZTI5ZTlhYzg3NTZiYjE1NDI3OGZcIixcbiAgXCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg3NTZiYjE1NDI3OGZcIixcbiAgXCJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODZcIixcbiAgXCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODZcIixcbiAgXCJmY2ZiZmRlZmVkZjVkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM1NDI3OGYzZjAwN2RcIlxuKS5tYXAoY29sb3JzKTtcblxuZXhwb3J0IGRlZmF1bHQgcmFtcChzY2hlbWUpO1xuIiwiaW1wb3J0IGNvbG9ycyBmcm9tIFwiLi4vY29sb3JzLmpzXCI7XG5pbXBvcnQgcmFtcCBmcm9tIFwiLi4vcmFtcC5qc1wiO1xuXG5leHBvcnQgdmFyIHNjaGVtZSA9IG5ldyBBcnJheSgzKS5jb25jYXQoXG4gIFwiZmVlMGQyZmM5MjcyZGUyZDI2XCIsXG4gIFwiZmVlNWQ5ZmNhZTkxZmI2YTRhY2IxODFkXCIsXG4gIFwiZmVlNWQ5ZmNhZTkxZmI2YTRhZGUyZDI2YTUwZjE1XCIsXG4gIFwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZGUyZDI2YTUwZjE1XCIsXG4gIFwiZmVlNWQ5ZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkXCIsXG4gIFwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkXCIsXG4gIFwiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkYTUwZjE1NjcwMDBkXCJcbikubWFwKGNvbG9ycyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJhbXAoc2NoZW1lKTtcbiIsImltcG9ydCB7cmFuZ2UgYXMgc2VxdWVuY2V9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXQuanNcIjtcbmltcG9ydCBvcmRpbmFsIGZyb20gXCIuL29yZGluYWwuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmFuZCgpIHtcbiAgdmFyIHNjYWxlID0gb3JkaW5hbCgpLnVua25vd24odW5kZWZpbmVkKSxcbiAgICAgIGRvbWFpbiA9IHNjYWxlLmRvbWFpbixcbiAgICAgIG9yZGluYWxSYW5nZSA9IHNjYWxlLnJhbmdlLFxuICAgICAgcjAgPSAwLFxuICAgICAgcjEgPSAxLFxuICAgICAgc3RlcCxcbiAgICAgIGJhbmR3aWR0aCxcbiAgICAgIHJvdW5kID0gZmFsc2UsXG4gICAgICBwYWRkaW5nSW5uZXIgPSAwLFxuICAgICAgcGFkZGluZ091dGVyID0gMCxcbiAgICAgIGFsaWduID0gMC41O1xuXG4gIGRlbGV0ZSBzY2FsZS51bmtub3duO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgdmFyIG4gPSBkb21haW4oKS5sZW5ndGgsXG4gICAgICAgIHJldmVyc2UgPSByMSA8IHIwLFxuICAgICAgICBzdGFydCA9IHJldmVyc2UgPyByMSA6IHIwLFxuICAgICAgICBzdG9wID0gcmV2ZXJzZSA/IHIwIDogcjE7XG4gICAgc3RlcCA9IChzdG9wIC0gc3RhcnQpIC8gTWF0aC5tYXgoMSwgbiAtIHBhZGRpbmdJbm5lciArIHBhZGRpbmdPdXRlciAqIDIpO1xuICAgIGlmIChyb3VuZCkgc3RlcCA9IE1hdGguZmxvb3Ioc3RlcCk7XG4gICAgc3RhcnQgKz0gKHN0b3AgLSBzdGFydCAtIHN0ZXAgKiAobiAtIHBhZGRpbmdJbm5lcikpICogYWxpZ247XG4gICAgYmFuZHdpZHRoID0gc3RlcCAqICgxIC0gcGFkZGluZ0lubmVyKTtcbiAgICBpZiAocm91bmQpIHN0YXJ0ID0gTWF0aC5yb3VuZChzdGFydCksIGJhbmR3aWR0aCA9IE1hdGgucm91bmQoYmFuZHdpZHRoKTtcbiAgICB2YXIgdmFsdWVzID0gc2VxdWVuY2UobikubWFwKGZ1bmN0aW9uKGkpIHsgcmV0dXJuIHN0YXJ0ICsgc3RlcCAqIGk7IH0pO1xuICAgIHJldHVybiBvcmRpbmFsUmFuZ2UocmV2ZXJzZSA/IHZhbHVlcy5yZXZlcnNlKCkgOiB2YWx1ZXMpO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGRvbWFpbihfKSwgcmVzY2FsZSgpKSA6IGRvbWFpbigpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFtyMCwgcjFdID0gXywgcjAgPSArcjAsIHIxID0gK3IxLCByZXNjYWxlKCkpIDogW3IwLCByMV07XG4gIH07XG5cbiAgc2NhbGUucmFuZ2VSb3VuZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gW3IwLCByMV0gPSBfLCByMCA9ICtyMCwgcjEgPSArcjEsIHJvdW5kID0gdHJ1ZSwgcmVzY2FsZSgpO1xuICB9O1xuXG4gIHNjYWxlLmJhbmR3aWR0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBiYW5kd2lkdGg7XG4gIH07XG5cbiAgc2NhbGUuc3RlcCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBzdGVwO1xuICB9O1xuXG4gIHNjYWxlLnJvdW5kID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJvdW5kID0gISFfLCByZXNjYWxlKCkpIDogcm91bmQ7XG4gIH07XG5cbiAgc2NhbGUucGFkZGluZyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nSW5uZXIgPSBNYXRoLm1pbigxLCBwYWRkaW5nT3V0ZXIgPSArXyksIHJlc2NhbGUoKSkgOiBwYWRkaW5nSW5uZXI7XG4gIH07XG5cbiAgc2NhbGUucGFkZGluZ0lubmVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHBhZGRpbmdJbm5lciA9IE1hdGgubWluKDEsIF8pLCByZXNjYWxlKCkpIDogcGFkZGluZ0lubmVyO1xuICB9O1xuXG4gIHNjYWxlLnBhZGRpbmdPdXRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwYWRkaW5nT3V0ZXIgPSArXywgcmVzY2FsZSgpKSA6IHBhZGRpbmdPdXRlcjtcbiAgfTtcblxuICBzY2FsZS5hbGlnbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhbGlnbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIF8pKSwgcmVzY2FsZSgpKSA6IGFsaWduO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYmFuZChkb21haW4oKSwgW3IwLCByMV0pXG4gICAgICAgIC5yb3VuZChyb3VuZClcbiAgICAgICAgLnBhZGRpbmdJbm5lcihwYWRkaW5nSW5uZXIpXG4gICAgICAgIC5wYWRkaW5nT3V0ZXIocGFkZGluZ091dGVyKVxuICAgICAgICAuYWxpZ24oYWxpZ24pO1xuICB9O1xuXG4gIHJldHVybiBpbml0UmFuZ2UuYXBwbHkocmVzY2FsZSgpLCBhcmd1bWVudHMpO1xufVxuXG5mdW5jdGlvbiBwb2ludGlzaChzY2FsZSkge1xuICB2YXIgY29weSA9IHNjYWxlLmNvcHk7XG5cbiAgc2NhbGUucGFkZGluZyA9IHNjYWxlLnBhZGRpbmdPdXRlcjtcbiAgZGVsZXRlIHNjYWxlLnBhZGRpbmdJbm5lcjtcbiAgZGVsZXRlIHNjYWxlLnBhZGRpbmdPdXRlcjtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHBvaW50aXNoKGNvcHkoKSk7XG4gIH07XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9pbnQoKSB7XG4gIHJldHVybiBwb2ludGlzaChiYW5kLmFwcGx5KG51bGwsIGFyZ3VtZW50cykucGFkZGluZ0lubmVyKDEpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnN0YW50cyh4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCB7YmlzZWN0fSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7aW50ZXJwb2xhdGUgYXMgaW50ZXJwb2xhdGVWYWx1ZSwgaW50ZXJwb2xhdGVOdW1iZXIsIGludGVycG9sYXRlUm91bmR9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgbnVtYmVyIGZyb20gXCIuL251bWJlci5qc1wiO1xuXG52YXIgdW5pdCA9IFswLCAxXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGlkZW50aXR5KHgpIHtcbiAgcmV0dXJuIHg7XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZShhLCBiKSB7XG4gIHJldHVybiAoYiAtPSAoYSA9ICthKSlcbiAgICAgID8gZnVuY3Rpb24oeCkgeyByZXR1cm4gKHggLSBhKSAvIGI7IH1cbiAgICAgIDogY29uc3RhbnQoaXNOYU4oYikgPyBOYU4gOiAwLjUpO1xufVxuXG5mdW5jdGlvbiBjbGFtcGVyKGEsIGIpIHtcbiAgdmFyIHQ7XG4gIGlmIChhID4gYikgdCA9IGEsIGEgPSBiLCBiID0gdDtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgubWF4KGEsIE1hdGgubWluKGIsIHgpKTsgfTtcbn1cblxuLy8gbm9ybWFsaXplKGEsIGIpKHgpIHRha2VzIGEgZG9tYWluIHZhbHVlIHggaW4gW2EsYl0gYW5kIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcGFyYW1ldGVyIHQgaW4gWzAsMV0uXG4vLyBpbnRlcnBvbGF0ZShhLCBiKSh0KSB0YWtlcyBhIHBhcmFtZXRlciB0IGluIFswLDFdIGFuZCByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHJhbmdlIHZhbHVlIHggaW4gW2EsYl0uXG5mdW5jdGlvbiBiaW1hcChkb21haW4sIHJhbmdlLCBpbnRlcnBvbGF0ZSkge1xuICB2YXIgZDAgPSBkb21haW5bMF0sIGQxID0gZG9tYWluWzFdLCByMCA9IHJhbmdlWzBdLCByMSA9IHJhbmdlWzFdO1xuICBpZiAoZDEgPCBkMCkgZDAgPSBub3JtYWxpemUoZDEsIGQwKSwgcjAgPSBpbnRlcnBvbGF0ZShyMSwgcjApO1xuICBlbHNlIGQwID0gbm9ybWFsaXplKGQwLCBkMSksIHIwID0gaW50ZXJwb2xhdGUocjAsIHIxKTtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHsgcmV0dXJuIHIwKGQwKHgpKTsgfTtcbn1cblxuZnVuY3Rpb24gcG9seW1hcChkb21haW4sIHJhbmdlLCBpbnRlcnBvbGF0ZSkge1xuICB2YXIgaiA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCkgLSAxLFxuICAgICAgZCA9IG5ldyBBcnJheShqKSxcbiAgICAgIHIgPSBuZXcgQXJyYXkoaiksXG4gICAgICBpID0gLTE7XG5cbiAgLy8gUmV2ZXJzZSBkZXNjZW5kaW5nIGRvbWFpbnMuXG4gIGlmIChkb21haW5bal0gPCBkb21haW5bMF0pIHtcbiAgICBkb21haW4gPSBkb21haW4uc2xpY2UoKS5yZXZlcnNlKCk7XG4gICAgcmFuZ2UgPSByYW5nZS5zbGljZSgpLnJldmVyc2UoKTtcbiAgfVxuXG4gIHdoaWxlICgrK2kgPCBqKSB7XG4gICAgZFtpXSA9IG5vcm1hbGl6ZShkb21haW5baV0sIGRvbWFpbltpICsgMV0pO1xuICAgIHJbaV0gPSBpbnRlcnBvbGF0ZShyYW5nZVtpXSwgcmFuZ2VbaSArIDFdKTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgdmFyIGkgPSBiaXNlY3QoZG9tYWluLCB4LCAxLCBqKSAtIDE7XG4gICAgcmV0dXJuIHJbaV0oZFtpXSh4KSk7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb3B5KHNvdXJjZSwgdGFyZ2V0KSB7XG4gIHJldHVybiB0YXJnZXRcbiAgICAgIC5kb21haW4oc291cmNlLmRvbWFpbigpKVxuICAgICAgLnJhbmdlKHNvdXJjZS5yYW5nZSgpKVxuICAgICAgLmludGVycG9sYXRlKHNvdXJjZS5pbnRlcnBvbGF0ZSgpKVxuICAgICAgLmNsYW1wKHNvdXJjZS5jbGFtcCgpKVxuICAgICAgLnVua25vd24oc291cmNlLnVua25vd24oKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1lcigpIHtcbiAgdmFyIGRvbWFpbiA9IHVuaXQsXG4gICAgICByYW5nZSA9IHVuaXQsXG4gICAgICBpbnRlcnBvbGF0ZSA9IGludGVycG9sYXRlVmFsdWUsXG4gICAgICB0cmFuc2Zvcm0sXG4gICAgICB1bnRyYW5zZm9ybSxcbiAgICAgIHVua25vd24sXG4gICAgICBjbGFtcCA9IGlkZW50aXR5LFxuICAgICAgcGllY2V3aXNlLFxuICAgICAgb3V0cHV0LFxuICAgICAgaW5wdXQ7XG5cbiAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICB2YXIgbiA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCk7XG4gICAgaWYgKGNsYW1wICE9PSBpZGVudGl0eSkgY2xhbXAgPSBjbGFtcGVyKGRvbWFpblswXSwgZG9tYWluW24gLSAxXSk7XG4gICAgcGllY2V3aXNlID0gbiA+IDIgPyBwb2x5bWFwIDogYmltYXA7XG4gICAgb3V0cHV0ID0gaW5wdXQgPSBudWxsO1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiAob3V0cHV0IHx8IChvdXRwdXQgPSBwaWVjZXdpc2UoZG9tYWluLm1hcCh0cmFuc2Zvcm0pLCByYW5nZSwgaW50ZXJwb2xhdGUpKSkodHJhbnNmb3JtKGNsYW1wKHgpKSk7XG4gIH1cblxuICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIGNsYW1wKHVudHJhbnNmb3JtKChpbnB1dCB8fCAoaW5wdXQgPSBwaWVjZXdpc2UocmFuZ2UsIGRvbWFpbi5tYXAodHJhbnNmb3JtKSwgaW50ZXJwb2xhdGVOdW1iZXIpKSkoeSkpKTtcbiAgfTtcblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gQXJyYXkuZnJvbShfLCBudW1iZXIpLCByZXNjYWxlKCkpIDogZG9tYWluLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocmFuZ2UgPSBBcnJheS5mcm9tKF8pLCByZXNjYWxlKCkpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZVJvdW5kID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiByYW5nZSA9IEFycmF5LmZyb20oXyksIGludGVycG9sYXRlID0gaW50ZXJwb2xhdGVSb3VuZCwgcmVzY2FsZSgpO1xuICB9O1xuXG4gIHNjYWxlLmNsYW1wID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsYW1wID0gXyA/IHRydWUgOiBpZGVudGl0eSwgcmVzY2FsZSgpKSA6IGNsYW1wICE9PSBpZGVudGl0eTtcbiAgfTtcblxuICBzY2FsZS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0ZSA9IF8sIHJlc2NhbGUoKSkgOiBpbnRlcnBvbGF0ZTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHJldHVybiBmdW5jdGlvbih0LCB1KSB7XG4gICAgdHJhbnNmb3JtID0gdCwgdW50cmFuc2Zvcm0gPSB1O1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbnRpbnVvdXMoKSB7XG4gIHJldHVybiB0cmFuc2Zvcm1lcigpKGlkZW50aXR5LCBpZGVudGl0eSk7XG59XG4iLCJpbXBvcnQge2ludGVycG9sYXRlLCBpbnRlcnBvbGF0ZVJvdW5kLCBwaWVjZXdpc2V9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91cy5qc1wiO1xuaW1wb3J0IHtpbml0SW50ZXJwb2xhdG9yfSBmcm9tIFwiLi9pbml0LmpzXCI7XG5pbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyLmpzXCI7XG5pbXBvcnQge2xvZ2dpc2h9IGZyb20gXCIuL2xvZy5qc1wiO1xuaW1wb3J0IHtjb3B5fSBmcm9tIFwiLi9zZXF1ZW50aWFsLmpzXCI7XG5pbXBvcnQge3N5bWxvZ2lzaH0gZnJvbSBcIi4vc3ltbG9nLmpzXCI7XG5pbXBvcnQge3Bvd2lzaH0gZnJvbSBcIi4vcG93LmpzXCI7XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybWVyKCkge1xuICB2YXIgeDAgPSAwLFxuICAgICAgeDEgPSAwLjUsXG4gICAgICB4MiA9IDEsXG4gICAgICBzID0gMSxcbiAgICAgIHQwLFxuICAgICAgdDEsXG4gICAgICB0MixcbiAgICAgIGsxMCxcbiAgICAgIGsyMSxcbiAgICAgIGludGVycG9sYXRvciA9IGlkZW50aXR5LFxuICAgICAgdHJhbnNmb3JtLFxuICAgICAgY2xhbXAgPSBmYWxzZSxcbiAgICAgIHVua25vd247XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHJldHVybiBpc05hTih4ID0gK3gpID8gdW5rbm93biA6ICh4ID0gMC41ICsgKCh4ID0gK3RyYW5zZm9ybSh4KSkgLSB0MSkgKiAocyAqIHggPCBzICogdDEgPyBrMTAgOiBrMjEpLCBpbnRlcnBvbGF0b3IoY2xhbXAgPyBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB4KSkgOiB4KSk7XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoW3gwLCB4MSwgeDJdID0gXywgdDAgPSB0cmFuc2Zvcm0oeDAgPSAreDApLCB0MSA9IHRyYW5zZm9ybSh4MSA9ICt4MSksIHQyID0gdHJhbnNmb3JtKHgyID0gK3gyKSwgazEwID0gdDAgPT09IHQxID8gMCA6IDAuNSAvICh0MSAtIHQwKSwgazIxID0gdDEgPT09IHQyID8gMCA6IDAuNSAvICh0MiAtIHQxKSwgcyA9IHQxIDwgdDAgPyAtMSA6IDEsIHNjYWxlKSA6IFt4MCwgeDEsIHgyXTtcbiAgfTtcblxuICBzY2FsZS5jbGFtcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjbGFtcCA9ICEhXywgc2NhbGUpIDogY2xhbXA7XG4gIH07XG5cbiAgc2NhbGUuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGludGVycG9sYXRvciA9IF8sIHNjYWxlKSA6IGludGVycG9sYXRvcjtcbiAgfTtcblxuICBmdW5jdGlvbiByYW5nZShpbnRlcnBvbGF0ZSkge1xuICAgIHJldHVybiBmdW5jdGlvbihfKSB7XG4gICAgICB2YXIgcjAsIHIxLCByMjtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFtyMCwgcjEsIHIyXSA9IF8sIGludGVycG9sYXRvciA9IHBpZWNld2lzZShpbnRlcnBvbGF0ZSwgW3IwLCByMSwgcjJdKSwgc2NhbGUpIDogW2ludGVycG9sYXRvcigwKSwgaW50ZXJwb2xhdG9yKDAuNSksIGludGVycG9sYXRvcigxKV07XG4gICAgfTtcbiAgfVxuXG4gIHNjYWxlLnJhbmdlID0gcmFuZ2UoaW50ZXJwb2xhdGUpO1xuXG4gIHNjYWxlLnJhbmdlUm91bmQgPSByYW5nZShpbnRlcnBvbGF0ZVJvdW5kKTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdHJhbnNmb3JtID0gdCwgdDAgPSB0KHgwKSwgdDEgPSB0KHgxKSwgdDIgPSB0KHgyKSwgazEwID0gdDAgPT09IHQxID8gMCA6IDAuNSAvICh0MSAtIHQwKSwgazIxID0gdDEgPT09IHQyID8gMCA6IDAuNSAvICh0MiAtIHQxKSwgcyA9IHQxIDwgdDAgPyAtMSA6IDE7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkaXZlcmdpbmcoKSB7XG4gIHZhciBzY2FsZSA9IGxpbmVhcmlzaCh0cmFuc2Zvcm1lcigpKGlkZW50aXR5KSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBkaXZlcmdpbmcoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZlcmdpbmdMb2coKSB7XG4gIHZhciBzY2FsZSA9IGxvZ2dpc2godHJhbnNmb3JtZXIoKSkuZG9tYWluKFswLjEsIDEsIDEwXSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBkaXZlcmdpbmdMb2coKSkuYmFzZShzY2FsZS5iYXNlKCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGl2ZXJnaW5nU3ltbG9nKCkge1xuICB2YXIgc2NhbGUgPSBzeW1sb2dpc2godHJhbnNmb3JtZXIoKSk7XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBkaXZlcmdpbmdTeW1sb2coKSkuY29uc3RhbnQoc2NhbGUuY29uc3RhbnQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXZlcmdpbmdQb3coKSB7XG4gIHZhciBzY2FsZSA9IHBvd2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGRpdmVyZ2luZ1BvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpdmVyZ2luZ1NxcnQoKSB7XG4gIHJldHVybiBkaXZlcmdpbmdQb3cuYXBwbHkobnVsbCwgYXJndW1lbnRzKS5leHBvbmVudCgwLjUpO1xufVxuIiwiaW1wb3J0IHtsaW5lYXJpc2h9IGZyb20gXCIuL2xpbmVhci5qc1wiO1xuaW1wb3J0IG51bWJlciBmcm9tIFwiLi9udW1iZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaWRlbnRpdHkoZG9tYWluKSB7XG4gIHZhciB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiB4O1xuICB9XG5cbiAgc2NhbGUuaW52ZXJ0ID0gc2NhbGU7XG5cbiAgc2NhbGUuZG9tYWluID0gc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gQXJyYXkuZnJvbShfLCBudW1iZXIpLCBzY2FsZSkgOiBkb21haW4uc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gaWRlbnRpdHkoZG9tYWluKS51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIGRvbWFpbiA9IGFyZ3VtZW50cy5sZW5ndGggPyBBcnJheS5mcm9tKGRvbWFpbiwgbnVtYmVyKSA6IFswLCAxXTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cbiIsImV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVCYW5kLFxuICBwb2ludCBhcyBzY2FsZVBvaW50XG59IGZyb20gXCIuL2JhbmQuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZUlkZW50aXR5XG59IGZyb20gXCIuL2lkZW50aXR5LmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVMaW5lYXJcbn0gZnJvbSBcIi4vbGluZWFyLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVMb2dcbn0gZnJvbSBcIi4vbG9nLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVTeW1sb2dcbn0gZnJvbSBcIi4vc3ltbG9nLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVPcmRpbmFsLFxuICBpbXBsaWNpdCBhcyBzY2FsZUltcGxpY2l0XG59IGZyb20gXCIuL29yZGluYWwuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVBvdyxcbiAgc3FydCBhcyBzY2FsZVNxcnRcbn0gZnJvbSBcIi4vcG93LmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVSYWRpYWxcbn0gZnJvbSBcIi4vcmFkaWFsLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgc2NhbGVRdWFudGlsZVxufSBmcm9tIFwiLi9xdWFudGlsZS5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlUXVhbnRpemVcbn0gZnJvbSBcIi4vcXVhbnRpemUuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVRocmVzaG9sZFxufSBmcm9tIFwiLi90aHJlc2hvbGQuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVRpbWVcbn0gZnJvbSBcIi4vdGltZS5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlVXRjXG59IGZyb20gXCIuL3V0Y1RpbWUuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBzY2FsZVNlcXVlbnRpYWwsXG4gIHNlcXVlbnRpYWxMb2cgYXMgc2NhbGVTZXF1ZW50aWFsTG9nLFxuICBzZXF1ZW50aWFsUG93IGFzIHNjYWxlU2VxdWVudGlhbFBvdyxcbiAgc2VxdWVudGlhbFNxcnQgYXMgc2NhbGVTZXF1ZW50aWFsU3FydCxcbiAgc2VxdWVudGlhbFN5bWxvZyBhcyBzY2FsZVNlcXVlbnRpYWxTeW1sb2dcbn0gZnJvbSBcIi4vc2VxdWVudGlhbC5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlU2VxdWVudGlhbFF1YW50aWxlXG59IGZyb20gXCIuL3NlcXVlbnRpYWxRdWFudGlsZS5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHNjYWxlRGl2ZXJnaW5nLFxuICBkaXZlcmdpbmdMb2cgYXMgc2NhbGVEaXZlcmdpbmdMb2csXG4gIGRpdmVyZ2luZ1BvdyBhcyBzY2FsZURpdmVyZ2luZ1BvdyxcbiAgZGl2ZXJnaW5nU3FydCBhcyBzY2FsZURpdmVyZ2luZ1NxcnQsXG4gIGRpdmVyZ2luZ1N5bWxvZyBhcyBzY2FsZURpdmVyZ2luZ1N5bWxvZ1xufSBmcm9tIFwiLi9kaXZlcmdpbmcuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aWNrRm9ybWF0XG59IGZyb20gXCIuL3RpY2tGb3JtYXQuanNcIjtcbiIsImV4cG9ydCBmdW5jdGlvbiBpbml0UmFuZ2UoZG9tYWluLCByYW5nZSkge1xuICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICBjYXNlIDA6IGJyZWFrO1xuICAgIGNhc2UgMTogdGhpcy5yYW5nZShkb21haW4pOyBicmVhaztcbiAgICBkZWZhdWx0OiB0aGlzLnJhbmdlKHJhbmdlKS5kb21haW4oZG9tYWluKTsgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0SW50ZXJwb2xhdG9yKGRvbWFpbiwgaW50ZXJwb2xhdG9yKSB7XG4gIHN3aXRjaCAoYXJndW1lbnRzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogYnJlYWs7XG4gICAgY2FzZSAxOiB7XG4gICAgICBpZiAodHlwZW9mIGRvbWFpbiA9PT0gXCJmdW5jdGlvblwiKSB0aGlzLmludGVycG9sYXRvcihkb21haW4pO1xuICAgICAgZWxzZSB0aGlzLnJhbmdlKGRvbWFpbik7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgdGhpcy5kb21haW4oZG9tYWluKTtcbiAgICAgIGlmICh0eXBlb2YgaW50ZXJwb2xhdG9yID09PSBcImZ1bmN0aW9uXCIpIHRoaXMuaW50ZXJwb2xhdG9yKGludGVycG9sYXRvcik7XG4gICAgICBlbHNlIHRoaXMucmFuZ2UoaW50ZXJwb2xhdG9yKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGhpcztcbn1cbiIsImltcG9ydCB7dGlja3MsIHRpY2tJbmNyZW1lbnR9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IGNvbnRpbnVvdXMsIHtjb3B5fSBmcm9tIFwiLi9jb250aW51b3VzLmpzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdC5qc1wiO1xuaW1wb3J0IHRpY2tGb3JtYXQgZnJvbSBcIi4vdGlja0Zvcm1hdC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gbGluZWFyaXNoKHNjYWxlKSB7XG4gIHZhciBkb21haW4gPSBzY2FsZS5kb21haW47XG5cbiAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihjb3VudCkge1xuICAgIHZhciBkID0gZG9tYWluKCk7XG4gICAgcmV0dXJuIHRpY2tzKGRbMF0sIGRbZC5sZW5ndGggLSAxXSwgY291bnQgPT0gbnVsbCA/IDEwIDogY291bnQpO1xuICB9O1xuXG4gIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihjb3VudCwgc3BlY2lmaWVyKSB7XG4gICAgdmFyIGQgPSBkb21haW4oKTtcbiAgICByZXR1cm4gdGlja0Zvcm1hdChkWzBdLCBkW2QubGVuZ3RoIC0gMV0sIGNvdW50ID09IG51bGwgPyAxMCA6IGNvdW50LCBzcGVjaWZpZXIpO1xuICB9O1xuXG4gIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihjb3VudCkge1xuICAgIGlmIChjb3VudCA9PSBudWxsKSBjb3VudCA9IDEwO1xuXG4gICAgdmFyIGQgPSBkb21haW4oKTtcbiAgICB2YXIgaTAgPSAwO1xuICAgIHZhciBpMSA9IGQubGVuZ3RoIC0gMTtcbiAgICB2YXIgc3RhcnQgPSBkW2kwXTtcbiAgICB2YXIgc3RvcCA9IGRbaTFdO1xuICAgIHZhciBwcmVzdGVwO1xuICAgIHZhciBzdGVwO1xuICAgIHZhciBtYXhJdGVyID0gMTA7XG5cbiAgICBpZiAoc3RvcCA8IHN0YXJ0KSB7XG4gICAgICBzdGVwID0gc3RhcnQsIHN0YXJ0ID0gc3RvcCwgc3RvcCA9IHN0ZXA7XG4gICAgICBzdGVwID0gaTAsIGkwID0gaTEsIGkxID0gc3RlcDtcbiAgICB9XG4gICAgXG4gICAgd2hpbGUgKG1heEl0ZXItLSA+IDApIHtcbiAgICAgIHN0ZXAgPSB0aWNrSW5jcmVtZW50KHN0YXJ0LCBzdG9wLCBjb3VudCk7XG4gICAgICBpZiAoc3RlcCA9PT0gcHJlc3RlcCkge1xuICAgICAgICBkW2kwXSA9IHN0YXJ0XG4gICAgICAgIGRbaTFdID0gc3RvcFxuICAgICAgICByZXR1cm4gZG9tYWluKGQpO1xuICAgICAgfSBlbHNlIGlmIChzdGVwID4gMCkge1xuICAgICAgICBzdGFydCA9IE1hdGguZmxvb3Ioc3RhcnQgLyBzdGVwKSAqIHN0ZXA7XG4gICAgICAgIHN0b3AgPSBNYXRoLmNlaWwoc3RvcCAvIHN0ZXApICogc3RlcDtcbiAgICAgIH0gZWxzZSBpZiAoc3RlcCA8IDApIHtcbiAgICAgICAgc3RhcnQgPSBNYXRoLmNlaWwoc3RhcnQgKiBzdGVwKSAvIHN0ZXA7XG4gICAgICAgIHN0b3AgPSBNYXRoLmZsb29yKHN0b3AgKiBzdGVwKSAvIHN0ZXA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHByZXN0ZXAgPSBzdGVwO1xuICAgIH1cblxuICAgIHJldHVybiBzY2FsZTtcbiAgfTtcblxuICByZXR1cm4gc2NhbGU7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxpbmVhcigpIHtcbiAgdmFyIHNjYWxlID0gY29udGludW91cygpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgbGluZWFyKCkpO1xuICB9O1xuXG4gIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cbiIsImltcG9ydCB7dGlja3N9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtmb3JtYXR9IGZyb20gXCJkMy1mb3JtYXRcIjtcbmltcG9ydCBuaWNlIGZyb20gXCIuL25pY2UuanNcIjtcbmltcG9ydCB7Y29weSwgdHJhbnNmb3JtZXJ9IGZyb20gXCIuL2NvbnRpbnVvdXMuanNcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0LmpzXCI7XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUxvZyh4KSB7XG4gIHJldHVybiBNYXRoLmxvZyh4KTtcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtRXhwKHgpIHtcbiAgcmV0dXJuIE1hdGguZXhwKHgpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1Mb2duKHgpIHtcbiAgcmV0dXJuIC1NYXRoLmxvZygteCk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUV4cG4oeCkge1xuICByZXR1cm4gLU1hdGguZXhwKC14KTtcbn1cblxuZnVuY3Rpb24gcG93MTAoeCkge1xuICByZXR1cm4gaXNGaW5pdGUoeCkgPyArKFwiMWVcIiArIHgpIDogeCA8IDAgPyAwIDogeDtcbn1cblxuZnVuY3Rpb24gcG93cChiYXNlKSB7XG4gIHJldHVybiBiYXNlID09PSAxMCA/IHBvdzEwXG4gICAgICA6IGJhc2UgPT09IE1hdGguRSA/IE1hdGguZXhwXG4gICAgICA6IGZ1bmN0aW9uKHgpIHsgcmV0dXJuIE1hdGgucG93KGJhc2UsIHgpOyB9O1xufVxuXG5mdW5jdGlvbiBsb2dwKGJhc2UpIHtcbiAgcmV0dXJuIGJhc2UgPT09IE1hdGguRSA/IE1hdGgubG9nXG4gICAgICA6IGJhc2UgPT09IDEwICYmIE1hdGgubG9nMTBcbiAgICAgIHx8IGJhc2UgPT09IDIgJiYgTWF0aC5sb2cyXG4gICAgICB8fCAoYmFzZSA9IE1hdGgubG9nKGJhc2UpLCBmdW5jdGlvbih4KSB7IHJldHVybiBNYXRoLmxvZyh4KSAvIGJhc2U7IH0pO1xufVxuXG5mdW5jdGlvbiByZWZsZWN0KGYpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gLWYoLXgpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbG9nZ2lzaCh0cmFuc2Zvcm0pIHtcbiAgdmFyIHNjYWxlID0gdHJhbnNmb3JtKHRyYW5zZm9ybUxvZywgdHJhbnNmb3JtRXhwKSxcbiAgICAgIGRvbWFpbiA9IHNjYWxlLmRvbWFpbixcbiAgICAgIGJhc2UgPSAxMCxcbiAgICAgIGxvZ3MsXG4gICAgICBwb3dzO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgbG9ncyA9IGxvZ3AoYmFzZSksIHBvd3MgPSBwb3dwKGJhc2UpO1xuICAgIGlmIChkb21haW4oKVswXSA8IDApIHtcbiAgICAgIGxvZ3MgPSByZWZsZWN0KGxvZ3MpLCBwb3dzID0gcmVmbGVjdChwb3dzKTtcbiAgICAgIHRyYW5zZm9ybSh0cmFuc2Zvcm1Mb2duLCB0cmFuc2Zvcm1FeHBuKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJhbnNmb3JtKHRyYW5zZm9ybUxvZywgdHJhbnNmb3JtRXhwKTtcbiAgICB9XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9XG5cbiAgc2NhbGUuYmFzZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChiYXNlID0gK18sIHJlc2NhbGUoKSkgOiBiYXNlO1xuICB9O1xuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkb21haW4oXyksIHJlc2NhbGUoKSkgOiBkb21haW4oKTtcbiAgfTtcblxuICBzY2FsZS50aWNrcyA9IGZ1bmN0aW9uKGNvdW50KSB7XG4gICAgdmFyIGQgPSBkb21haW4oKSxcbiAgICAgICAgdSA9IGRbMF0sXG4gICAgICAgIHYgPSBkW2QubGVuZ3RoIC0gMV0sXG4gICAgICAgIHI7XG5cbiAgICBpZiAociA9IHYgPCB1KSBpID0gdSwgdSA9IHYsIHYgPSBpO1xuXG4gICAgdmFyIGkgPSBsb2dzKHUpLFxuICAgICAgICBqID0gbG9ncyh2KSxcbiAgICAgICAgcCxcbiAgICAgICAgayxcbiAgICAgICAgdCxcbiAgICAgICAgbiA9IGNvdW50ID09IG51bGwgPyAxMCA6ICtjb3VudCxcbiAgICAgICAgeiA9IFtdO1xuXG4gICAgaWYgKCEoYmFzZSAlIDEpICYmIGogLSBpIDwgbikge1xuICAgICAgaSA9IE1hdGguZmxvb3IoaSksIGogPSBNYXRoLmNlaWwoaik7XG4gICAgICBpZiAodSA+IDApIGZvciAoOyBpIDw9IGo7ICsraSkge1xuICAgICAgICBmb3IgKGsgPSAxLCBwID0gcG93cyhpKTsgayA8IGJhc2U7ICsraykge1xuICAgICAgICAgIHQgPSBwICogaztcbiAgICAgICAgICBpZiAodCA8IHUpIGNvbnRpbnVlO1xuICAgICAgICAgIGlmICh0ID4gdikgYnJlYWs7XG4gICAgICAgICAgei5wdXNoKHQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgZm9yICg7IGkgPD0gajsgKytpKSB7XG4gICAgICAgIGZvciAoayA9IGJhc2UgLSAxLCBwID0gcG93cyhpKTsgayA+PSAxOyAtLWspIHtcbiAgICAgICAgICB0ID0gcCAqIGs7XG4gICAgICAgICAgaWYgKHQgPCB1KSBjb250aW51ZTtcbiAgICAgICAgICBpZiAodCA+IHYpIGJyZWFrO1xuICAgICAgICAgIHoucHVzaCh0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHoubGVuZ3RoICogMiA8IG4pIHogPSB0aWNrcyh1LCB2LCBuKTtcbiAgICB9IGVsc2Uge1xuICAgICAgeiA9IHRpY2tzKGksIGosIE1hdGgubWluKGogLSBpLCBuKSkubWFwKHBvd3MpO1xuICAgIH1cblxuICAgIHJldHVybiByID8gei5yZXZlcnNlKCkgOiB6O1xuICB9O1xuXG4gIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihjb3VudCwgc3BlY2lmaWVyKSB7XG4gICAgaWYgKHNwZWNpZmllciA9PSBudWxsKSBzcGVjaWZpZXIgPSBiYXNlID09PSAxMCA/IFwiLjBlXCIgOiBcIixcIjtcbiAgICBpZiAodHlwZW9mIHNwZWNpZmllciAhPT0gXCJmdW5jdGlvblwiKSBzcGVjaWZpZXIgPSBmb3JtYXQoc3BlY2lmaWVyKTtcbiAgICBpZiAoY291bnQgPT09IEluZmluaXR5KSByZXR1cm4gc3BlY2lmaWVyO1xuICAgIGlmIChjb3VudCA9PSBudWxsKSBjb3VudCA9IDEwO1xuICAgIHZhciBrID0gTWF0aC5tYXgoMSwgYmFzZSAqIGNvdW50IC8gc2NhbGUudGlja3MoKS5sZW5ndGgpOyAvLyBUT0RPIGZhc3QgZXN0aW1hdGU/XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciBpID0gZCAvIHBvd3MoTWF0aC5yb3VuZChsb2dzKGQpKSk7XG4gICAgICBpZiAoaSAqIGJhc2UgPCBiYXNlIC0gMC41KSBpICo9IGJhc2U7XG4gICAgICByZXR1cm4gaSA8PSBrID8gc3BlY2lmaWVyKGQpIDogXCJcIjtcbiAgICB9O1xuICB9O1xuXG4gIHNjYWxlLm5pY2UgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZG9tYWluKG5pY2UoZG9tYWluKCksIHtcbiAgICAgIGZsb29yOiBmdW5jdGlvbih4KSB7IHJldHVybiBwb3dzKE1hdGguZmxvb3IobG9ncyh4KSkpOyB9LFxuICAgICAgY2VpbDogZnVuY3Rpb24oeCkgeyByZXR1cm4gcG93cyhNYXRoLmNlaWwobG9ncyh4KSkpOyB9XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBzY2FsZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9nKCkge1xuICB2YXIgc2NhbGUgPSBsb2dnaXNoKHRyYW5zZm9ybWVyKCkpLmRvbWFpbihbMSwgMTBdKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIGxvZygpKS5iYXNlKHNjYWxlLmJhc2UoKSk7XG4gIH07XG5cbiAgaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xuXG4gIHJldHVybiBzY2FsZTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5pY2UoZG9tYWluLCBpbnRlcnZhbCkge1xuICBkb21haW4gPSBkb21haW4uc2xpY2UoKTtcblxuICB2YXIgaTAgPSAwLFxuICAgICAgaTEgPSBkb21haW4ubGVuZ3RoIC0gMSxcbiAgICAgIHgwID0gZG9tYWluW2kwXSxcbiAgICAgIHgxID0gZG9tYWluW2kxXSxcbiAgICAgIHQ7XG5cbiAgaWYgKHgxIDwgeDApIHtcbiAgICB0ID0gaTAsIGkwID0gaTEsIGkxID0gdDtcbiAgICB0ID0geDAsIHgwID0geDEsIHgxID0gdDtcbiAgfVxuXG4gIGRvbWFpbltpMF0gPSBpbnRlcnZhbC5mbG9vcih4MCk7XG4gIGRvbWFpbltpMV0gPSBpbnRlcnZhbC5jZWlsKHgxKTtcbiAgcmV0dXJuIGRvbWFpbjtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG51bWJlcih4KSB7XG4gIHJldHVybiAreDtcbn1cbiIsImltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0LmpzXCI7XG5cbmV4cG9ydCBjb25zdCBpbXBsaWNpdCA9IFN5bWJvbChcImltcGxpY2l0XCIpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvcmRpbmFsKCkge1xuICB2YXIgaW5kZXggPSBuZXcgTWFwKCksXG4gICAgICBkb21haW4gPSBbXSxcbiAgICAgIHJhbmdlID0gW10sXG4gICAgICB1bmtub3duID0gaW1wbGljaXQ7XG5cbiAgZnVuY3Rpb24gc2NhbGUoZCkge1xuICAgIHZhciBrZXkgPSBkICsgXCJcIiwgaSA9IGluZGV4LmdldChrZXkpO1xuICAgIGlmICghaSkge1xuICAgICAgaWYgKHVua25vd24gIT09IGltcGxpY2l0KSByZXR1cm4gdW5rbm93bjtcbiAgICAgIGluZGV4LnNldChrZXksIGkgPSBkb21haW4ucHVzaChkKSk7XG4gICAgfVxuICAgIHJldHVybiByYW5nZVsoaSAtIDEpICUgcmFuZ2UubGVuZ3RoXTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW4uc2xpY2UoKTtcbiAgICBkb21haW4gPSBbXSwgaW5kZXggPSBuZXcgTWFwKCk7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiBfKSB7XG4gICAgICBjb25zdCBrZXkgPSB2YWx1ZSArIFwiXCI7XG4gICAgICBpZiAoaW5kZXguaGFzKGtleSkpIGNvbnRpbnVlO1xuICAgICAgaW5kZXguc2V0KGtleSwgZG9tYWluLnB1c2godmFsdWUpKTtcbiAgICB9XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHJhbmdlID0gQXJyYXkuZnJvbShfKSwgc2NhbGUpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gb3JkaW5hbChkb21haW4sIHJhbmdlKS51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcblxuICByZXR1cm4gc2NhbGU7XG59XG4iLCJpbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyLmpzXCI7XG5pbXBvcnQge2NvcHksIGlkZW50aXR5LCB0cmFuc2Zvcm1lcn0gZnJvbSBcIi4vY29udGludW91cy5qc1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXQuanNcIjtcblxuZnVuY3Rpb24gdHJhbnNmb3JtUG93KGV4cG9uZW50KSB7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHggPCAwID8gLU1hdGgucG93KC14LCBleHBvbmVudCkgOiBNYXRoLnBvdyh4LCBleHBvbmVudCk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVNxcnQoeCkge1xuICByZXR1cm4geCA8IDAgPyAtTWF0aC5zcXJ0KC14KSA6IE1hdGguc3FydCh4KTtcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtU3F1YXJlKHgpIHtcbiAgcmV0dXJuIHggPCAwID8gLXggKiB4IDogeCAqIHg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3dpc2godHJhbnNmb3JtKSB7XG4gIHZhciBzY2FsZSA9IHRyYW5zZm9ybShpZGVudGl0eSwgaWRlbnRpdHkpLFxuICAgICAgZXhwb25lbnQgPSAxO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgcmV0dXJuIGV4cG9uZW50ID09PSAxID8gdHJhbnNmb3JtKGlkZW50aXR5LCBpZGVudGl0eSlcbiAgICAgICAgOiBleHBvbmVudCA9PT0gMC41ID8gdHJhbnNmb3JtKHRyYW5zZm9ybVNxcnQsIHRyYW5zZm9ybVNxdWFyZSlcbiAgICAgICAgOiB0cmFuc2Zvcm0odHJhbnNmb3JtUG93KGV4cG9uZW50KSwgdHJhbnNmb3JtUG93KDEgLyBleHBvbmVudCkpO1xuICB9XG5cbiAgc2NhbGUuZXhwb25lbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZXhwb25lbnQgPSArXywgcmVzY2FsZSgpKSA6IGV4cG9uZW50O1xuICB9O1xuXG4gIHJldHVybiBsaW5lYXJpc2goc2NhbGUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwb3coKSB7XG4gIHZhciBzY2FsZSA9IHBvd2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHBvdygpKS5leHBvbmVudChzY2FsZS5leHBvbmVudCgpKTtcbiAgfTtcblxuICBpbml0UmFuZ2UuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG5cbiAgcmV0dXJuIHNjYWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3FydCgpIHtcbiAgcmV0dXJuIHBvdy5hcHBseShudWxsLCBhcmd1bWVudHMpLmV4cG9uZW50KDAuNSk7XG59XG4iLCJpbXBvcnQge2FzY2VuZGluZywgYmlzZWN0LCBxdWFudGlsZVNvcnRlZCBhcyB0aHJlc2hvbGR9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcXVhbnRpbGUoKSB7XG4gIHZhciBkb21haW4gPSBbXSxcbiAgICAgIHJhbmdlID0gW10sXG4gICAgICB0aHJlc2hvbGRzID0gW10sXG4gICAgICB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgdmFyIGkgPSAwLCBuID0gTWF0aC5tYXgoMSwgcmFuZ2UubGVuZ3RoKTtcbiAgICB0aHJlc2hvbGRzID0gbmV3IEFycmF5KG4gLSAxKTtcbiAgICB3aGlsZSAoKytpIDwgbikgdGhyZXNob2xkc1tpIC0gMV0gPSB0aHJlc2hvbGQoZG9tYWluLCBpIC8gbik7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHJldHVybiBpc05hTih4ID0gK3gpID8gdW5rbm93biA6IHJhbmdlW2Jpc2VjdCh0aHJlc2hvbGRzLCB4KV07XG4gIH1cblxuICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgdmFyIGkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgIHJldHVybiBpIDwgMCA/IFtOYU4sIE5hTl0gOiBbXG4gICAgICBpID4gMCA/IHRocmVzaG9sZHNbaSAtIDFdIDogZG9tYWluWzBdLFxuICAgICAgaSA8IHRocmVzaG9sZHMubGVuZ3RoID8gdGhyZXNob2xkc1tpXSA6IGRvbWFpbltkb21haW4ubGVuZ3RoIC0gMV1cbiAgICBdO1xuICB9O1xuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW4uc2xpY2UoKTtcbiAgICBkb21haW4gPSBbXTtcbiAgICBmb3IgKGxldCBkIG9mIF8pIGlmIChkICE9IG51bGwgJiYgIWlzTmFOKGQgPSArZCkpIGRvbWFpbi5wdXNoKGQpO1xuICAgIGRvbWFpbi5zb3J0KGFzY2VuZGluZyk7XG4gICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IEFycmF5LmZyb20oXyksIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHVua25vd247XG4gIH07XG5cbiAgc2NhbGUucXVhbnRpbGVzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRocmVzaG9sZHMuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHF1YW50aWxlKClcbiAgICAgICAgLmRvbWFpbihkb21haW4pXG4gICAgICAgIC5yYW5nZShyYW5nZSlcbiAgICAgICAgLnVua25vd24odW5rbm93bik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7YmlzZWN0fSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7bGluZWFyaXNofSBmcm9tIFwiLi9saW5lYXIuanNcIjtcbmltcG9ydCB7aW5pdFJhbmdlfSBmcm9tIFwiLi9pbml0LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHF1YW50aXplKCkge1xuICB2YXIgeDAgPSAwLFxuICAgICAgeDEgPSAxLFxuICAgICAgbiA9IDEsXG4gICAgICBkb21haW4gPSBbMC41XSxcbiAgICAgIHJhbmdlID0gWzAsIDFdLFxuICAgICAgdW5rbm93bjtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIHggPD0geCA/IHJhbmdlW2Jpc2VjdChkb21haW4sIHgsIDAsIG4pXSA6IHVua25vd247XG4gIH1cblxuICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgIHZhciBpID0gLTE7XG4gICAgZG9tYWluID0gbmV3IEFycmF5KG4pO1xuICAgIHdoaWxlICgrK2kgPCBuKSBkb21haW5baV0gPSAoKGkgKyAxKSAqIHgxIC0gKGkgLSBuKSAqIHgwKSAvIChuICsgMSk7XG4gICAgcmV0dXJuIHNjYWxlO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFt4MCwgeDFdID0gXywgeDAgPSAreDAsIHgxID0gK3gxLCByZXNjYWxlKCkpIDogW3gwLCB4MV07XG4gIH07XG5cbiAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IChyYW5nZSA9IEFycmF5LmZyb20oXykpLmxlbmd0aCAtIDEsIHJlc2NhbGUoKSkgOiByYW5nZS5zbGljZSgpO1xuICB9O1xuXG4gIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICB2YXIgaSA9IHJhbmdlLmluZGV4T2YoeSk7XG4gICAgcmV0dXJuIGkgPCAwID8gW05hTiwgTmFOXVxuICAgICAgICA6IGkgPCAxID8gW3gwLCBkb21haW5bMF1dXG4gICAgICAgIDogaSA+PSBuID8gW2RvbWFpbltuIC0gMV0sIHgxXVxuICAgICAgICA6IFtkb21haW5baSAtIDFdLCBkb21haW5baV1dO1xuICB9O1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHNjYWxlO1xuICB9O1xuXG4gIHNjYWxlLnRocmVzaG9sZHMgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZG9tYWluLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBxdWFudGl6ZSgpXG4gICAgICAgIC5kb21haW4oW3gwLCB4MV0pXG4gICAgICAgIC5yYW5nZShyYW5nZSlcbiAgICAgICAgLnVua25vd24odW5rbm93bik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShsaW5lYXJpc2goc2NhbGUpLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IGNvbnRpbnVvdXMgZnJvbSBcIi4vY29udGludW91cy5qc1wiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXQuanNcIjtcbmltcG9ydCB7bGluZWFyaXNofSBmcm9tIFwiLi9saW5lYXIuanNcIjtcbmltcG9ydCBudW1iZXIgZnJvbSBcIi4vbnVtYmVyLmpzXCI7XG5cbmZ1bmN0aW9uIHNxdWFyZSh4KSB7XG4gIHJldHVybiBNYXRoLnNpZ24oeCkgKiB4ICogeDtcbn1cblxuZnVuY3Rpb24gdW5zcXVhcmUoeCkge1xuICByZXR1cm4gTWF0aC5zaWduKHgpICogTWF0aC5zcXJ0KE1hdGguYWJzKHgpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmFkaWFsKCkge1xuICB2YXIgc3F1YXJlZCA9IGNvbnRpbnVvdXMoKSxcbiAgICAgIHJhbmdlID0gWzAsIDFdLFxuICAgICAgcm91bmQgPSBmYWxzZSxcbiAgICAgIHVua25vd247XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIHZhciB5ID0gdW5zcXVhcmUoc3F1YXJlZCh4KSk7XG4gICAgcmV0dXJuIGlzTmFOKHkpID8gdW5rbm93biA6IHJvdW5kID8gTWF0aC5yb3VuZCh5KSA6IHk7XG4gIH1cblxuICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHNxdWFyZWQuaW52ZXJ0KHNxdWFyZSh5KSk7XG4gIH07XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNxdWFyZWQuZG9tYWluKF8pLCBzY2FsZSkgOiBzcXVhcmVkLmRvbWFpbigpO1xuICB9O1xuXG4gIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNxdWFyZWQucmFuZ2UoKHJhbmdlID0gQXJyYXkuZnJvbShfLCBudW1iZXIpKS5tYXAoc3F1YXJlKSksIHNjYWxlKSA6IHJhbmdlLnNsaWNlKCk7XG4gIH07XG5cbiAgc2NhbGUucmFuZ2VSb3VuZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gc2NhbGUucmFuZ2UoXykucm91bmQodHJ1ZSk7XG4gIH07XG5cbiAgc2NhbGUucm91bmQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocm91bmQgPSAhIV8sIHNjYWxlKSA6IHJvdW5kO1xuICB9O1xuXG4gIHNjYWxlLmNsYW1wID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNxdWFyZWQuY2xhbXAoXyksIHNjYWxlKSA6IHNxdWFyZWQuY2xhbXAoKTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gcmFkaWFsKHNxdWFyZWQuZG9tYWluKCksIHJhbmdlKVxuICAgICAgICAucm91bmQocm91bmQpXG4gICAgICAgIC5jbGFtcChzcXVhcmVkLmNsYW1wKCkpXG4gICAgICAgIC51bmtub3duKHVua25vd24pO1xuICB9O1xuXG4gIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcblxuICByZXR1cm4gbGluZWFyaXNoKHNjYWxlKTtcbn1cbiIsImltcG9ydCB7aW50ZXJwb2xhdGUsIGludGVycG9sYXRlUm91bmR9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuaW1wb3J0IHtpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91cy5qc1wiO1xuaW1wb3J0IHtpbml0SW50ZXJwb2xhdG9yfSBmcm9tIFwiLi9pbml0LmpzXCI7XG5pbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyLmpzXCI7XG5pbXBvcnQge2xvZ2dpc2h9IGZyb20gXCIuL2xvZy5qc1wiO1xuaW1wb3J0IHtzeW1sb2dpc2h9IGZyb20gXCIuL3N5bWxvZy5qc1wiO1xuaW1wb3J0IHtwb3dpc2h9IGZyb20gXCIuL3Bvdy5qc1wiO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1lcigpIHtcbiAgdmFyIHgwID0gMCxcbiAgICAgIHgxID0gMSxcbiAgICAgIHQwLFxuICAgICAgdDEsXG4gICAgICBrMTAsXG4gICAgICB0cmFuc2Zvcm0sXG4gICAgICBpbnRlcnBvbGF0b3IgPSBpZGVudGl0eSxcbiAgICAgIGNsYW1wID0gZmFsc2UsXG4gICAgICB1bmtub3duO1xuXG4gIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICByZXR1cm4gaXNOYU4oeCA9ICt4KSA/IHVua25vd24gOiBpbnRlcnBvbGF0b3IoazEwID09PSAwID8gMC41IDogKHggPSAodHJhbnNmb3JtKHgpIC0gdDApICogazEwLCBjbGFtcCA/IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHgpKSA6IHgpKTtcbiAgfVxuXG4gIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChbeDAsIHgxXSA9IF8sIHQwID0gdHJhbnNmb3JtKHgwID0gK3gwKSwgdDEgPSB0cmFuc2Zvcm0oeDEgPSAreDEpLCBrMTAgPSB0MCA9PT0gdDEgPyAwIDogMSAvICh0MSAtIHQwKSwgc2NhbGUpIDogW3gwLCB4MV07XG4gIH07XG5cbiAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY2xhbXAgPSAhIV8sIHNjYWxlKSA6IGNsYW1wO1xuICB9O1xuXG4gIHNjYWxlLmludGVycG9sYXRvciA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0b3IgPSBfLCBzY2FsZSkgOiBpbnRlcnBvbGF0b3I7XG4gIH07XG5cbiAgZnVuY3Rpb24gcmFuZ2UoaW50ZXJwb2xhdGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oXykge1xuICAgICAgdmFyIHIwLCByMTtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFtyMCwgcjFdID0gXywgaW50ZXJwb2xhdG9yID0gaW50ZXJwb2xhdGUocjAsIHIxKSwgc2NhbGUpIDogW2ludGVycG9sYXRvcigwKSwgaW50ZXJwb2xhdG9yKDEpXTtcbiAgICB9O1xuICB9XG5cbiAgc2NhbGUucmFuZ2UgPSByYW5nZShpbnRlcnBvbGF0ZSk7XG5cbiAgc2NhbGUucmFuZ2VSb3VuZCA9IHJhbmdlKGludGVycG9sYXRlUm91bmQpO1xuXG4gIHNjYWxlLnVua25vd24gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodW5rbm93biA9IF8sIHNjYWxlKSA6IHVua25vd247XG4gIH07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0cmFuc2Zvcm0gPSB0LCB0MCA9IHQoeDApLCB0MSA9IHQoeDEpLCBrMTAgPSB0MCA9PT0gdDEgPyAwIDogMSAvICh0MSAtIHQwKTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb3B5KHNvdXJjZSwgdGFyZ2V0KSB7XG4gIHJldHVybiB0YXJnZXRcbiAgICAgIC5kb21haW4oc291cmNlLmRvbWFpbigpKVxuICAgICAgLmludGVycG9sYXRvcihzb3VyY2UuaW50ZXJwb2xhdG9yKCkpXG4gICAgICAuY2xhbXAoc291cmNlLmNsYW1wKCkpXG4gICAgICAudW5rbm93bihzb3VyY2UudW5rbm93bigpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2VxdWVudGlhbCgpIHtcbiAgdmFyIHNjYWxlID0gbGluZWFyaXNoKHRyYW5zZm9ybWVyKCkoaWRlbnRpdHkpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHNlcXVlbnRpYWwoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXF1ZW50aWFsTG9nKCkge1xuICB2YXIgc2NhbGUgPSBsb2dnaXNoKHRyYW5zZm9ybWVyKCkpLmRvbWFpbihbMSwgMTBdKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHNlcXVlbnRpYWxMb2coKSkuYmFzZShzY2FsZS5iYXNlKCkpO1xuICB9O1xuXG4gIHJldHVybiBpbml0SW50ZXJwb2xhdG9yLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VxdWVudGlhbFN5bWxvZygpIHtcbiAgdmFyIHNjYWxlID0gc3ltbG9naXNoKHRyYW5zZm9ybWVyKCkpO1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gY29weShzY2FsZSwgc2VxdWVudGlhbFN5bWxvZygpKS5jb25zdGFudChzY2FsZS5jb25zdGFudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdEludGVycG9sYXRvci5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcXVlbnRpYWxQb3coKSB7XG4gIHZhciBzY2FsZSA9IHBvd2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHNlcXVlbnRpYWxQb3coKSkuZXhwb25lbnQoc2NhbGUuZXhwb25lbnQoKSk7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXF1ZW50aWFsU3FydCgpIHtcbiAgcmV0dXJuIHNlcXVlbnRpYWxQb3cuYXBwbHkobnVsbCwgYXJndW1lbnRzKS5leHBvbmVudCgwLjUpO1xufVxuIiwiaW1wb3J0IHthc2NlbmRpbmcsIGJpc2VjdCwgcXVhbnRpbGV9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtpZGVudGl0eX0gZnJvbSBcIi4vY29udGludW91cy5qc1wiO1xuaW1wb3J0IHtpbml0SW50ZXJwb2xhdG9yfSBmcm9tIFwiLi9pbml0LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNlcXVlbnRpYWxRdWFudGlsZSgpIHtcbiAgdmFyIGRvbWFpbiA9IFtdLFxuICAgICAgaW50ZXJwb2xhdG9yID0gaWRlbnRpdHk7XG5cbiAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgIGlmICghaXNOYU4oeCA9ICt4KSkgcmV0dXJuIGludGVycG9sYXRvcigoYmlzZWN0KGRvbWFpbiwgeCwgMSkgLSAxKSAvIChkb21haW4ubGVuZ3RoIC0gMSkpO1xuICB9XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbi5zbGljZSgpO1xuICAgIGRvbWFpbiA9IFtdO1xuICAgIGZvciAobGV0IGQgb2YgXykgaWYgKGQgIT0gbnVsbCAmJiAhaXNOYU4oZCA9ICtkKSkgZG9tYWluLnB1c2goZCk7XG4gICAgZG9tYWluLnNvcnQoYXNjZW5kaW5nKTtcbiAgICByZXR1cm4gc2NhbGU7XG4gIH07XG5cbiAgc2NhbGUuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGludGVycG9sYXRvciA9IF8sIHNjYWxlKSA6IGludGVycG9sYXRvcjtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkb21haW4ubWFwKChkLCBpKSA9PiBpbnRlcnBvbGF0b3IoaSAvIChkb21haW4ubGVuZ3RoIC0gMSkpKTtcbiAgfTtcblxuICBzY2FsZS5xdWFudGlsZXMgPSBmdW5jdGlvbihuKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oe2xlbmd0aDogbiArIDF9LCAoXywgaSkgPT4gcXVhbnRpbGUoZG9tYWluLCBpIC8gbikpO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gc2VxdWVudGlhbFF1YW50aWxlKGludGVycG9sYXRvcikuZG9tYWluKGRvbWFpbik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRJbnRlcnBvbGF0b3IuYXBwbHkoc2NhbGUsIGFyZ3VtZW50cyk7XG59XG4iLCJpbXBvcnQge2xpbmVhcmlzaH0gZnJvbSBcIi4vbGluZWFyLmpzXCI7XG5pbXBvcnQge2NvcHksIHRyYW5zZm9ybWVyfSBmcm9tIFwiLi9jb250aW51b3VzLmpzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdC5qc1wiO1xuXG5mdW5jdGlvbiB0cmFuc2Zvcm1TeW1sb2coYykge1xuICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgIHJldHVybiBNYXRoLnNpZ24oeCkgKiBNYXRoLmxvZzFwKE1hdGguYWJzKHggLyBjKSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVN5bWV4cChjKSB7XG4gIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIE1hdGguc2lnbih4KSAqIE1hdGguZXhwbTEoTWF0aC5hYnMoeCkpICogYztcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN5bWxvZ2lzaCh0cmFuc2Zvcm0pIHtcbiAgdmFyIGMgPSAxLCBzY2FsZSA9IHRyYW5zZm9ybSh0cmFuc2Zvcm1TeW1sb2coYyksIHRyYW5zZm9ybVN5bWV4cChjKSk7XG5cbiAgc2NhbGUuY29uc3RhbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0cmFuc2Zvcm0odHJhbnNmb3JtU3ltbG9nKGMgPSArXyksIHRyYW5zZm9ybVN5bWV4cChjKSkgOiBjO1xuICB9O1xuXG4gIHJldHVybiBsaW5lYXJpc2goc2NhbGUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzeW1sb2coKSB7XG4gIHZhciBzY2FsZSA9IHN5bWxvZ2lzaCh0cmFuc2Zvcm1lcigpKTtcblxuICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGNvcHkoc2NhbGUsIHN5bWxvZygpKS5jb25zdGFudChzY2FsZS5jb25zdGFudCgpKTtcbiAgfTtcblxuICByZXR1cm4gaW5pdFJhbmdlLmFwcGx5KHNjYWxlLCBhcmd1bWVudHMpO1xufVxuIiwiaW1wb3J0IHtiaXNlY3R9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdGhyZXNob2xkKCkge1xuICB2YXIgZG9tYWluID0gWzAuNV0sXG4gICAgICByYW5nZSA9IFswLCAxXSxcbiAgICAgIHVua25vd24sXG4gICAgICBuID0gMTtcblxuICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgcmV0dXJuIHggPD0geCA/IHJhbmdlW2Jpc2VjdChkb21haW4sIHgsIDAsIG4pXSA6IHVua25vd247XG4gIH1cblxuICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZG9tYWluID0gQXJyYXkuZnJvbShfKSwgbiA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCAtIDEpLCBzY2FsZSkgOiBkb21haW4uc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyYW5nZSA9IEFycmF5LmZyb20oXyksIG4gPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGggLSAxKSwgc2NhbGUpIDogcmFuZ2Uuc2xpY2UoKTtcbiAgfTtcblxuICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgdmFyIGkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgIHJldHVybiBbZG9tYWluW2kgLSAxXSwgZG9tYWluW2ldXTtcbiAgfTtcblxuICBzY2FsZS51bmtub3duID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHVua25vd24gPSBfLCBzY2FsZSkgOiB1bmtub3duO1xuICB9O1xuXG4gIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhyZXNob2xkKClcbiAgICAgICAgLmRvbWFpbihkb21haW4pXG4gICAgICAgIC5yYW5nZShyYW5nZSlcbiAgICAgICAgLnVua25vd24odW5rbm93bik7XG4gIH07XG5cbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShzY2FsZSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7dGlja1N0ZXB9IGZyb20gXCJkMy1hcnJheVwiO1xuaW1wb3J0IHtmb3JtYXQsIGZvcm1hdFByZWZpeCwgZm9ybWF0U3BlY2lmaWVyLCBwcmVjaXNpb25GaXhlZCwgcHJlY2lzaW9uUHJlZml4LCBwcmVjaXNpb25Sb3VuZH0gZnJvbSBcImQzLWZvcm1hdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0aWNrRm9ybWF0KHN0YXJ0LCBzdG9wLCBjb3VudCwgc3BlY2lmaWVyKSB7XG4gIHZhciBzdGVwID0gdGlja1N0ZXAoc3RhcnQsIHN0b3AsIGNvdW50KSxcbiAgICAgIHByZWNpc2lvbjtcbiAgc3BlY2lmaWVyID0gZm9ybWF0U3BlY2lmaWVyKHNwZWNpZmllciA9PSBudWxsID8gXCIsZlwiIDogc3BlY2lmaWVyKTtcbiAgc3dpdGNoIChzcGVjaWZpZXIudHlwZSkge1xuICAgIGNhc2UgXCJzXCI6IHtcbiAgICAgIHZhciB2YWx1ZSA9IE1hdGgubWF4KE1hdGguYWJzKHN0YXJ0KSwgTWF0aC5hYnMoc3RvcCkpO1xuICAgICAgaWYgKHNwZWNpZmllci5wcmVjaXNpb24gPT0gbnVsbCAmJiAhaXNOYU4ocHJlY2lzaW9uID0gcHJlY2lzaW9uUHJlZml4KHN0ZXAsIHZhbHVlKSkpIHNwZWNpZmllci5wcmVjaXNpb24gPSBwcmVjaXNpb247XG4gICAgICByZXR1cm4gZm9ybWF0UHJlZml4KHNwZWNpZmllciwgdmFsdWUpO1xuICAgIH1cbiAgICBjYXNlIFwiXCI6XG4gICAgY2FzZSBcImVcIjpcbiAgICBjYXNlIFwiZ1wiOlxuICAgIGNhc2UgXCJwXCI6XG4gICAgY2FzZSBcInJcIjoge1xuICAgICAgaWYgKHNwZWNpZmllci5wcmVjaXNpb24gPT0gbnVsbCAmJiAhaXNOYU4ocHJlY2lzaW9uID0gcHJlY2lzaW9uUm91bmQoc3RlcCwgTWF0aC5tYXgoTWF0aC5hYnMoc3RhcnQpLCBNYXRoLmFicyhzdG9wKSkpKSkgc3BlY2lmaWVyLnByZWNpc2lvbiA9IHByZWNpc2lvbiAtIChzcGVjaWZpZXIudHlwZSA9PT0gXCJlXCIpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGNhc2UgXCJmXCI6XG4gICAgY2FzZSBcIiVcIjoge1xuICAgICAgaWYgKHNwZWNpZmllci5wcmVjaXNpb24gPT0gbnVsbCAmJiAhaXNOYU4ocHJlY2lzaW9uID0gcHJlY2lzaW9uRml4ZWQoc3RlcCkpKSBzcGVjaWZpZXIucHJlY2lzaW9uID0gcHJlY2lzaW9uIC0gKHNwZWNpZmllci50eXBlID09PSBcIiVcIikgKiAyO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBmb3JtYXQoc3BlY2lmaWVyKTtcbn1cbiIsImltcG9ydCB7YmlzZWN0b3IsIHRpY2tTdGVwfSBmcm9tIFwiZDMtYXJyYXlcIjtcbmltcG9ydCB7dGltZVllYXIsIHRpbWVNb250aCwgdGltZVdlZWssIHRpbWVEYXksIHRpbWVIb3VyLCB0aW1lTWludXRlLCB0aW1lU2Vjb25kLCB0aW1lTWlsbGlzZWNvbmR9IGZyb20gXCJkMy10aW1lXCI7XG5pbXBvcnQge3RpbWVGb3JtYXR9IGZyb20gXCJkMy10aW1lLWZvcm1hdFwiO1xuaW1wb3J0IGNvbnRpbnVvdXMsIHtjb3B5fSBmcm9tIFwiLi9jb250aW51b3VzLmpzXCI7XG5pbXBvcnQge2luaXRSYW5nZX0gZnJvbSBcIi4vaW5pdC5qc1wiO1xuaW1wb3J0IG5pY2UgZnJvbSBcIi4vbmljZS5qc1wiO1xuXG52YXIgZHVyYXRpb25TZWNvbmQgPSAxMDAwLFxuICAgIGR1cmF0aW9uTWludXRlID0gZHVyYXRpb25TZWNvbmQgKiA2MCxcbiAgICBkdXJhdGlvbkhvdXIgPSBkdXJhdGlvbk1pbnV0ZSAqIDYwLFxuICAgIGR1cmF0aW9uRGF5ID0gZHVyYXRpb25Ib3VyICogMjQsXG4gICAgZHVyYXRpb25XZWVrID0gZHVyYXRpb25EYXkgKiA3LFxuICAgIGR1cmF0aW9uTW9udGggPSBkdXJhdGlvbkRheSAqIDMwLFxuICAgIGR1cmF0aW9uWWVhciA9IGR1cmF0aW9uRGF5ICogMzY1O1xuXG5mdW5jdGlvbiBkYXRlKHQpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKHQpO1xufVxuXG5mdW5jdGlvbiBudW1iZXIodCkge1xuICByZXR1cm4gdCBpbnN0YW5jZW9mIERhdGUgPyArdCA6ICtuZXcgRGF0ZSgrdCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxlbmRhcih5ZWFyLCBtb250aCwgd2VlaywgZGF5LCBob3VyLCBtaW51dGUsIHNlY29uZCwgbWlsbGlzZWNvbmQsIGZvcm1hdCkge1xuICB2YXIgc2NhbGUgPSBjb250aW51b3VzKCksXG4gICAgICBpbnZlcnQgPSBzY2FsZS5pbnZlcnQsXG4gICAgICBkb21haW4gPSBzY2FsZS5kb21haW47XG5cbiAgdmFyIGZvcm1hdE1pbGxpc2Vjb25kID0gZm9ybWF0KFwiLiVMXCIpLFxuICAgICAgZm9ybWF0U2Vjb25kID0gZm9ybWF0KFwiOiVTXCIpLFxuICAgICAgZm9ybWF0TWludXRlID0gZm9ybWF0KFwiJUk6JU1cIiksXG4gICAgICBmb3JtYXRIb3VyID0gZm9ybWF0KFwiJUkgJXBcIiksXG4gICAgICBmb3JtYXREYXkgPSBmb3JtYXQoXCIlYSAlZFwiKSxcbiAgICAgIGZvcm1hdFdlZWsgPSBmb3JtYXQoXCIlYiAlZFwiKSxcbiAgICAgIGZvcm1hdE1vbnRoID0gZm9ybWF0KFwiJUJcIiksXG4gICAgICBmb3JtYXRZZWFyID0gZm9ybWF0KFwiJVlcIik7XG5cbiAgdmFyIHRpY2tJbnRlcnZhbHMgPSBbXG4gICAgW3NlY29uZCwgIDEsICAgICAgZHVyYXRpb25TZWNvbmRdLFxuICAgIFtzZWNvbmQsICA1LCAgNSAqIGR1cmF0aW9uU2Vjb25kXSxcbiAgICBbc2Vjb25kLCAxNSwgMTUgKiBkdXJhdGlvblNlY29uZF0sXG4gICAgW3NlY29uZCwgMzAsIDMwICogZHVyYXRpb25TZWNvbmRdLFxuICAgIFttaW51dGUsICAxLCAgICAgIGR1cmF0aW9uTWludXRlXSxcbiAgICBbbWludXRlLCAgNSwgIDUgKiBkdXJhdGlvbk1pbnV0ZV0sXG4gICAgW21pbnV0ZSwgMTUsIDE1ICogZHVyYXRpb25NaW51dGVdLFxuICAgIFttaW51dGUsIDMwLCAzMCAqIGR1cmF0aW9uTWludXRlXSxcbiAgICBbICBob3VyLCAgMSwgICAgICBkdXJhdGlvbkhvdXIgIF0sXG4gICAgWyAgaG91ciwgIDMsICAzICogZHVyYXRpb25Ib3VyICBdLFxuICAgIFsgIGhvdXIsICA2LCAgNiAqIGR1cmF0aW9uSG91ciAgXSxcbiAgICBbICBob3VyLCAxMiwgMTIgKiBkdXJhdGlvbkhvdXIgIF0sXG4gICAgWyAgIGRheSwgIDEsICAgICAgZHVyYXRpb25EYXkgICBdLFxuICAgIFsgICBkYXksICAyLCAgMiAqIGR1cmF0aW9uRGF5ICAgXSxcbiAgICBbICB3ZWVrLCAgMSwgICAgICBkdXJhdGlvbldlZWsgIF0sXG4gICAgWyBtb250aCwgIDEsICAgICAgZHVyYXRpb25Nb250aCBdLFxuICAgIFsgbW9udGgsICAzLCAgMyAqIGR1cmF0aW9uTW9udGggXSxcbiAgICBbICB5ZWFyLCAgMSwgICAgICBkdXJhdGlvblllYXIgIF1cbiAgXTtcblxuICBmdW5jdGlvbiB0aWNrRm9ybWF0KGRhdGUpIHtcbiAgICByZXR1cm4gKHNlY29uZChkYXRlKSA8IGRhdGUgPyBmb3JtYXRNaWxsaXNlY29uZFxuICAgICAgICA6IG1pbnV0ZShkYXRlKSA8IGRhdGUgPyBmb3JtYXRTZWNvbmRcbiAgICAgICAgOiBob3VyKGRhdGUpIDwgZGF0ZSA/IGZvcm1hdE1pbnV0ZVxuICAgICAgICA6IGRheShkYXRlKSA8IGRhdGUgPyBmb3JtYXRIb3VyXG4gICAgICAgIDogbW9udGgoZGF0ZSkgPCBkYXRlID8gKHdlZWsoZGF0ZSkgPCBkYXRlID8gZm9ybWF0RGF5IDogZm9ybWF0V2VlaylcbiAgICAgICAgOiB5ZWFyKGRhdGUpIDwgZGF0ZSA/IGZvcm1hdE1vbnRoXG4gICAgICAgIDogZm9ybWF0WWVhcikoZGF0ZSk7XG4gIH1cblxuICBmdW5jdGlvbiB0aWNrSW50ZXJ2YWwoaW50ZXJ2YWwsIHN0YXJ0LCBzdG9wKSB7XG4gICAgaWYgKGludGVydmFsID09IG51bGwpIGludGVydmFsID0gMTA7XG5cbiAgICAvLyBJZiBhIGRlc2lyZWQgdGljayBjb3VudCBpcyBzcGVjaWZpZWQsIHBpY2sgYSByZWFzb25hYmxlIHRpY2sgaW50ZXJ2YWxcbiAgICAvLyBiYXNlZCBvbiB0aGUgZXh0ZW50IG9mIHRoZSBkb21haW4gYW5kIGEgcm91Z2ggZXN0aW1hdGUgb2YgdGljayBzaXplLlxuICAgIC8vIE90aGVyd2lzZSwgYXNzdW1lIGludGVydmFsIGlzIGFscmVhZHkgYSB0aW1lIGludGVydmFsIGFuZCB1c2UgaXQuXG4gICAgaWYgKHR5cGVvZiBpbnRlcnZhbCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgdmFyIHRhcmdldCA9IE1hdGguYWJzKHN0b3AgLSBzdGFydCkgLyBpbnRlcnZhbCxcbiAgICAgICAgICBpID0gYmlzZWN0b3IoZnVuY3Rpb24oaSkgeyByZXR1cm4gaVsyXTsgfSkucmlnaHQodGlja0ludGVydmFscywgdGFyZ2V0KSxcbiAgICAgICAgICBzdGVwO1xuICAgICAgaWYgKGkgPT09IHRpY2tJbnRlcnZhbHMubGVuZ3RoKSB7XG4gICAgICAgIHN0ZXAgPSB0aWNrU3RlcChzdGFydCAvIGR1cmF0aW9uWWVhciwgc3RvcCAvIGR1cmF0aW9uWWVhciwgaW50ZXJ2YWwpO1xuICAgICAgICBpbnRlcnZhbCA9IHllYXI7XG4gICAgICB9IGVsc2UgaWYgKGkpIHtcbiAgICAgICAgaSA9IHRpY2tJbnRlcnZhbHNbdGFyZ2V0IC8gdGlja0ludGVydmFsc1tpIC0gMV1bMl0gPCB0aWNrSW50ZXJ2YWxzW2ldWzJdIC8gdGFyZ2V0ID8gaSAtIDEgOiBpXTtcbiAgICAgICAgc3RlcCA9IGlbMV07XG4gICAgICAgIGludGVydmFsID0gaVswXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0ZXAgPSBNYXRoLm1heCh0aWNrU3RlcChzdGFydCwgc3RvcCwgaW50ZXJ2YWwpLCAxKTtcbiAgICAgICAgaW50ZXJ2YWwgPSBtaWxsaXNlY29uZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBpbnRlcnZhbC5ldmVyeShzdGVwKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW50ZXJ2YWw7XG4gIH1cblxuICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKGludmVydCh5KSk7XG4gIH07XG5cbiAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gZG9tYWluKEFycmF5LmZyb20oXywgbnVtYmVyKSkgOiBkb21haW4oKS5tYXAoZGF0ZSk7XG4gIH07XG5cbiAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihpbnRlcnZhbCkge1xuICAgIHZhciBkID0gZG9tYWluKCksXG4gICAgICAgIHQwID0gZFswXSxcbiAgICAgICAgdDEgPSBkW2QubGVuZ3RoIC0gMV0sXG4gICAgICAgIHIgPSB0MSA8IHQwLFxuICAgICAgICB0O1xuICAgIGlmIChyKSB0ID0gdDAsIHQwID0gdDEsIHQxID0gdDtcbiAgICB0ID0gdGlja0ludGVydmFsKGludGVydmFsLCB0MCwgdDEpO1xuICAgIHQgPSB0ID8gdC5yYW5nZSh0MCwgdDEgKyAxKSA6IFtdOyAvLyBpbmNsdXNpdmUgc3RvcFxuICAgIHJldHVybiByID8gdC5yZXZlcnNlKCkgOiB0O1xuICB9O1xuXG4gIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbihjb3VudCwgc3BlY2lmaWVyKSB7XG4gICAgcmV0dXJuIHNwZWNpZmllciA9PSBudWxsID8gdGlja0Zvcm1hdCA6IGZvcm1hdChzcGVjaWZpZXIpO1xuICB9O1xuXG4gIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihpbnRlcnZhbCkge1xuICAgIHZhciBkID0gZG9tYWluKCk7XG4gICAgcmV0dXJuIChpbnRlcnZhbCA9IHRpY2tJbnRlcnZhbChpbnRlcnZhbCwgZFswXSwgZFtkLmxlbmd0aCAtIDFdKSlcbiAgICAgICAgPyBkb21haW4obmljZShkLCBpbnRlcnZhbCkpXG4gICAgICAgIDogc2NhbGU7XG4gIH07XG5cbiAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBjb3B5KHNjYWxlLCBjYWxlbmRhcih5ZWFyLCBtb250aCwgd2VlaywgZGF5LCBob3VyLCBtaW51dGUsIHNlY29uZCwgbWlsbGlzZWNvbmQsIGZvcm1hdCkpO1xuICB9O1xuXG4gIHJldHVybiBzY2FsZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdGltZSgpIHtcbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShjYWxlbmRhcih0aW1lWWVhciwgdGltZU1vbnRoLCB0aW1lV2VlaywgdGltZURheSwgdGltZUhvdXIsIHRpbWVNaW51dGUsIHRpbWVTZWNvbmQsIHRpbWVNaWxsaXNlY29uZCwgdGltZUZvcm1hdCkuZG9tYWluKFtuZXcgRGF0ZSgyMDAwLCAwLCAxKSwgbmV3IERhdGUoMjAwMCwgMCwgMildKSwgYXJndW1lbnRzKTtcbn1cbiIsImltcG9ydCB7Y2FsZW5kYXJ9IGZyb20gXCIuL3RpbWUuanNcIjtcbmltcG9ydCB7dXRjRm9ybWF0fSBmcm9tIFwiZDMtdGltZS1mb3JtYXRcIjtcbmltcG9ydCB7dXRjWWVhciwgdXRjTW9udGgsIHV0Y1dlZWssIHV0Y0RheSwgdXRjSG91ciwgdXRjTWludXRlLCB1dGNTZWNvbmQsIHV0Y01pbGxpc2Vjb25kfSBmcm9tIFwiZDMtdGltZVwiO1xuaW1wb3J0IHtpbml0UmFuZ2V9IGZyb20gXCIuL2luaXQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXRjVGltZSgpIHtcbiAgcmV0dXJuIGluaXRSYW5nZS5hcHBseShjYWxlbmRhcih1dGNZZWFyLCB1dGNNb250aCwgdXRjV2VlaywgdXRjRGF5LCB1dGNIb3VyLCB1dGNNaW51dGUsIHV0Y1NlY29uZCwgdXRjTWlsbGlzZWNvbmQsIHV0Y0Zvcm1hdCkuZG9tYWluKFtEYXRlLlVUQygyMDAwLCAwLCAxKSwgRGF0ZS5VVEMoMjAwMCwgMCwgMildKSwgYXJndW1lbnRzKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgcmV0dXJuIHR5cGVvZiB4ID09PSBcIm9iamVjdFwiICYmIFwibGVuZ3RoXCIgaW4geFxuICAgID8geCAvLyBBcnJheSwgVHlwZWRBcnJheSwgTm9kZUxpc3QsIGFycmF5LWxpa2VcbiAgICA6IEFycmF5LmZyb20oeCk7IC8vIE1hcCwgU2V0LCBpdGVyYWJsZSwgc3RyaW5nLCBvciBhbnl0aGluZyBlbHNlXG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4geDtcbiAgfTtcbn1cbiIsImltcG9ydCBjcmVhdG9yIGZyb20gXCIuL2NyZWF0b3IuanNcIjtcbmltcG9ydCBzZWxlY3QgZnJvbSBcIi4vc2VsZWN0LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgcmV0dXJuIHNlbGVjdChjcmVhdG9yKG5hbWUpLmNhbGwoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSk7XG59XG4iLCJpbXBvcnQgbmFtZXNwYWNlIGZyb20gXCIuL25hbWVzcGFjZS5qc1wiO1xuaW1wb3J0IHt4aHRtbH0gZnJvbSBcIi4vbmFtZXNwYWNlcy5qc1wiO1xuXG5mdW5jdGlvbiBjcmVhdG9ySW5oZXJpdChuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgZG9jdW1lbnQgPSB0aGlzLm93bmVyRG9jdW1lbnQsXG4gICAgICAgIHVyaSA9IHRoaXMubmFtZXNwYWNlVVJJO1xuICAgIHJldHVybiB1cmkgPT09IHhodG1sICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5uYW1lc3BhY2VVUkkgPT09IHhodG1sXG4gICAgICAgID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKVxuICAgICAgICA6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh1cmksIG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdG9yRml4ZWQoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUpIHtcbiAgdmFyIGZ1bGxuYW1lID0gbmFtZXNwYWNlKG5hbWUpO1xuICByZXR1cm4gKGZ1bGxuYW1lLmxvY2FsXG4gICAgICA/IGNyZWF0b3JGaXhlZFxuICAgICAgOiBjcmVhdG9ySW5oZXJpdCkoZnVsbG5hbWUpO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIGNyZWF0ZX0gZnJvbSBcIi4vY3JlYXRlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3JlYXRvcn0gZnJvbSBcIi4vY3JlYXRvci5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGxvY2FsfSBmcm9tIFwiLi9sb2NhbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG1hdGNoZXJ9IGZyb20gXCIuL21hdGNoZXIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBuYW1lc3BhY2V9IGZyb20gXCIuL25hbWVzcGFjZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIG5hbWVzcGFjZXN9IGZyb20gXCIuL25hbWVzcGFjZXMuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBwb2ludGVyfSBmcm9tIFwiLi9wb2ludGVyLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcG9pbnRlcnN9IGZyb20gXCIuL3BvaW50ZXJzLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0fSBmcm9tIFwiLi9zZWxlY3QuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzZWxlY3RBbGx9IGZyb20gXCIuL3NlbGVjdEFsbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHNlbGVjdGlvbn0gZnJvbSBcIi4vc2VsZWN0aW9uL2luZGV4LmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0b3J9IGZyb20gXCIuL3NlbGVjdG9yLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc2VsZWN0b3JBbGx9IGZyb20gXCIuL3NlbGVjdG9yQWxsLmpzXCI7XG5leHBvcnQge3N0eWxlVmFsdWUgYXMgc3R5bGV9IGZyb20gXCIuL3NlbGVjdGlvbi9zdHlsZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHdpbmRvd30gZnJvbSBcIi4vd2luZG93LmpzXCI7XG4iLCJ2YXIgbmV4dElkID0gMDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9jYWwoKSB7XG4gIHJldHVybiBuZXcgTG9jYWw7XG59XG5cbmZ1bmN0aW9uIExvY2FsKCkge1xuICB0aGlzLl8gPSBcIkBcIiArICgrK25leHRJZCkudG9TdHJpbmcoMzYpO1xufVxuXG5Mb2NhbC5wcm90b3R5cGUgPSBsb2NhbC5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBMb2NhbCxcbiAgZ2V0OiBmdW5jdGlvbihub2RlKSB7XG4gICAgdmFyIGlkID0gdGhpcy5fO1xuICAgIHdoaWxlICghKGlkIGluIG5vZGUpKSBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkgcmV0dXJuO1xuICAgIHJldHVybiBub2RlW2lkXTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbihub2RlLCB2YWx1ZSkge1xuICAgIHJldHVybiBub2RlW3RoaXMuX10gPSB2YWx1ZTtcbiAgfSxcbiAgcmVtb3ZlOiBmdW5jdGlvbihub2RlKSB7XG4gICAgcmV0dXJuIHRoaXMuXyBpbiBub2RlICYmIGRlbGV0ZSBub2RlW3RoaXMuX107XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fO1xuICB9XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm1hdGNoZXMoc2VsZWN0b3IpO1xuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hpbGRNYXRjaGVyKHNlbGVjdG9yKSB7XG4gIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUubWF0Y2hlcyhzZWxlY3Rvcik7XG4gIH07XG59XG5cbiIsImltcG9ydCBuYW1lc3BhY2VzIGZyb20gXCIuL25hbWVzcGFjZXMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgcHJlZml4ID0gbmFtZSArPSBcIlwiLCBpID0gcHJlZml4LmluZGV4T2YoXCI6XCIpO1xuICBpZiAoaSA+PSAwICYmIChwcmVmaXggPSBuYW1lLnNsaWNlKDAsIGkpKSAhPT0gXCJ4bWxuc1wiKSBuYW1lID0gbmFtZS5zbGljZShpICsgMSk7XG4gIHJldHVybiBuYW1lc3BhY2VzLmhhc093blByb3BlcnR5KHByZWZpeCkgPyB7c3BhY2U6IG5hbWVzcGFjZXNbcHJlZml4XSwgbG9jYWw6IG5hbWV9IDogbmFtZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbn1cbiIsImV4cG9ydCB2YXIgeGh0bWwgPSBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzdmc6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgeGh0bWw6IHhodG1sLFxuICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gIHhtbDogXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIixcbiAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy9cIlxufTtcbiIsImltcG9ydCBzb3VyY2VFdmVudCBmcm9tIFwiLi9zb3VyY2VFdmVudC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihldmVudCwgbm9kZSkge1xuICBldmVudCA9IHNvdXJjZUV2ZW50KGV2ZW50KTtcbiAgaWYgKG5vZGUgPT09IHVuZGVmaW5lZCkgbm9kZSA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gIGlmIChub2RlKSB7XG4gICAgdmFyIHN2ZyA9IG5vZGUub3duZXJTVkdFbGVtZW50IHx8IG5vZGU7XG4gICAgaWYgKHN2Zy5jcmVhdGVTVkdQb2ludCkge1xuICAgICAgdmFyIHBvaW50ID0gc3ZnLmNyZWF0ZVNWR1BvaW50KCk7XG4gICAgICBwb2ludC54ID0gZXZlbnQuY2xpZW50WCwgcG9pbnQueSA9IGV2ZW50LmNsaWVudFk7XG4gICAgICBwb2ludCA9IHBvaW50Lm1hdHJpeFRyYW5zZm9ybShub2RlLmdldFNjcmVlbkNUTSgpLmludmVyc2UoKSk7XG4gICAgICByZXR1cm4gW3BvaW50LngsIHBvaW50LnldO1xuICAgIH1cbiAgICBpZiAobm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QpIHtcbiAgICAgIHZhciByZWN0ID0gbm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHJldHVybiBbZXZlbnQuY2xpZW50WCAtIHJlY3QubGVmdCAtIG5vZGUuY2xpZW50TGVmdCwgZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wIC0gbm9kZS5jbGllbnRUb3BdO1xuICAgIH1cbiAgfVxuICByZXR1cm4gW2V2ZW50LnBhZ2VYLCBldmVudC5wYWdlWV07XG59XG4iLCJpbXBvcnQgcG9pbnRlciBmcm9tIFwiLi9wb2ludGVyLmpzXCI7XG5pbXBvcnQgc291cmNlRXZlbnQgZnJvbSBcIi4vc291cmNlRXZlbnQuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZXZlbnRzLCBub2RlKSB7XG4gIGlmIChldmVudHMudGFyZ2V0KSB7IC8vIGkuZS4sIGluc3RhbmNlb2YgRXZlbnQsIG5vdCBUb3VjaExpc3Qgb3IgaXRlcmFibGVcbiAgICBldmVudHMgPSBzb3VyY2VFdmVudChldmVudHMpO1xuICAgIGlmIChub2RlID09PSB1bmRlZmluZWQpIG5vZGUgPSBldmVudHMuY3VycmVudFRhcmdldDtcbiAgICBldmVudHMgPSBldmVudHMudG91Y2hlcyB8fCBbZXZlbnRzXTtcbiAgfVxuICByZXR1cm4gQXJyYXkuZnJvbShldmVudHMsIGV2ZW50ID0+IHBvaW50ZXIoZXZlbnQsIG5vZGUpKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9uLCByb290fSBmcm9tIFwiLi9zZWxlY3Rpb24vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIlxuICAgICAgPyBuZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcildXSwgW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pXG4gICAgICA6IG5ldyBTZWxlY3Rpb24oW1tzZWxlY3Rvcl1dLCByb290KTtcbn1cbiIsImltcG9ydCBhcnJheSBmcm9tIFwiLi9hcnJheS5qc1wiO1xuaW1wb3J0IHtTZWxlY3Rpb24sIHJvb3R9IGZyb20gXCIuL3NlbGVjdGlvbi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiXG4gICAgICA/IG5ldyBTZWxlY3Rpb24oW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpXSwgW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pXG4gICAgICA6IG5ldyBTZWxlY3Rpb24oW3NlbGVjdG9yID09IG51bGwgPyBbXSA6IGFycmF5KHNlbGVjdG9yKV0sIHJvb3QpO1xufVxuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4uL2NyZWF0b3IuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSkge1xuICB2YXIgY3JlYXRlID0gdHlwZW9mIG5hbWUgPT09IFwiZnVuY3Rpb25cIiA/IG5hbWUgOiBjcmVhdG9yKG5hbWUpO1xuICByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuYXBwZW5kQ2hpbGQoY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9KTtcbn1cbiIsImltcG9ydCBuYW1lc3BhY2UgZnJvbSBcIi4uL25hbWVzcGFjZS5qc1wiO1xuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlKG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyUmVtb3ZlTlMoZnVsbG5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMoZnVsbG5hbWUuc3BhY2UsIGZ1bGxuYW1lLmxvY2FsKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckNvbnN0YW50KG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHZhbHVlKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgZWxzZSB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckZ1bmN0aW9uTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwsIHYpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSk7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKTtcbiAgICByZXR1cm4gZnVsbG5hbWUubG9jYWxcbiAgICAgICAgPyBub2RlLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbClcbiAgICAgICAgOiBub2RlLmdldEF0dHJpYnV0ZShmdWxsbmFtZSk7XG4gIH1cblxuICByZXR1cm4gdGhpcy5lYWNoKCh2YWx1ZSA9PSBudWxsXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJSZW1vdmVOUyA6IGF0dHJSZW1vdmUpIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJGdW5jdGlvbk5TIDogYXR0ckZ1bmN0aW9uKVxuICAgICAgOiAoZnVsbG5hbWUubG9jYWwgPyBhdHRyQ29uc3RhbnROUyA6IGF0dHJDb25zdGFudCkpKShmdWxsbmFtZSwgdmFsdWUpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHNbMF07XG4gIGFyZ3VtZW50c1swXSA9IHRoaXM7XG4gIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gIHJldHVybiB0aGlzO1xufVxuIiwiZnVuY3Rpb24gY2xhc3NBcnJheShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy50cmltKCkuc3BsaXQoL158XFxzKy8pO1xufVxuXG5mdW5jdGlvbiBjbGFzc0xpc3Qobm9kZSkge1xuICByZXR1cm4gbm9kZS5jbGFzc0xpc3QgfHwgbmV3IENsYXNzTGlzdChub2RlKTtcbn1cblxuZnVuY3Rpb24gQ2xhc3NMaXN0KG5vZGUpIHtcbiAgdGhpcy5fbm9kZSA9IG5vZGU7XG4gIHRoaXMuX25hbWVzID0gY2xhc3NBcnJheShub2RlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIpO1xufVxuXG5DbGFzc0xpc3QucHJvdG90eXBlID0ge1xuICBhZGQ6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgaSA9IHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSk7XG4gICAgaWYgKGkgPCAwKSB7XG4gICAgICB0aGlzLl9uYW1lcy5wdXNoKG5hbWUpO1xuICAgICAgdGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB0aGlzLl9uYW1lcy5qb2luKFwiIFwiKSk7XG4gICAgfVxuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICB2YXIgaSA9IHRoaXMuX25hbWVzLmluZGV4T2YobmFtZSk7XG4gICAgaWYgKGkgPj0gMCkge1xuICAgICAgdGhpcy5fbmFtZXMuc3BsaWNlKGksIDEpO1xuICAgICAgdGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCB0aGlzLl9uYW1lcy5qb2luKFwiIFwiKSk7XG4gICAgfVxuICB9LFxuICBjb250YWluczogZnVuY3Rpb24obmFtZSkge1xuICAgIHJldHVybiB0aGlzLl9uYW1lcy5pbmRleE9mKG5hbWUpID49IDA7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGNsYXNzZWRBZGQobm9kZSwgbmFtZXMpIHtcbiAgdmFyIGxpc3QgPSBjbGFzc0xpc3Qobm9kZSksIGkgPSAtMSwgbiA9IG5hbWVzLmxlbmd0aDtcbiAgd2hpbGUgKCsraSA8IG4pIGxpc3QuYWRkKG5hbWVzW2ldKTtcbn1cblxuZnVuY3Rpb24gY2xhc3NlZFJlbW92ZShub2RlLCBuYW1lcykge1xuICB2YXIgbGlzdCA9IGNsYXNzTGlzdChub2RlKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICB3aGlsZSAoKytpIDwgbikgbGlzdC5yZW1vdmUobmFtZXNbaV0pO1xufVxuXG5mdW5jdGlvbiBjbGFzc2VkVHJ1ZShuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgY2xhc3NlZEFkZCh0aGlzLCBuYW1lcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRGYWxzZShuYW1lcykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgY2xhc3NlZFJlbW92ZSh0aGlzLCBuYW1lcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGNsYXNzZWRGdW5jdGlvbihuYW1lcywgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICh2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpID8gY2xhc3NlZEFkZCA6IGNsYXNzZWRSZW1vdmUpKHRoaXMsIG5hbWVzKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgdmFyIG5hbWVzID0gY2xhc3NBcnJheShuYW1lICsgXCJcIik7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIGxpc3QgPSBjbGFzc0xpc3QodGhpcy5ub2RlKCkpLCBpID0gLTEsIG4gPSBuYW1lcy5sZW5ndGg7XG4gICAgd2hpbGUgKCsraSA8IG4pIGlmICghbGlzdC5jb250YWlucyhuYW1lc1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiB0aGlzLmVhY2goKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICA/IGNsYXNzZWRGdW5jdGlvbiA6IHZhbHVlXG4gICAgICA/IGNsYXNzZWRUcnVlXG4gICAgICA6IGNsYXNzZWRGYWxzZSkobmFtZXMsIHZhbHVlKSk7XG59XG4iLCJmdW5jdGlvbiBzZWxlY3Rpb25fY2xvbmVTaGFsbG93KCkge1xuICB2YXIgY2xvbmUgPSB0aGlzLmNsb25lTm9kZShmYWxzZSksIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgcmV0dXJuIHBhcmVudCA/IHBhcmVudC5pbnNlcnRCZWZvcmUoY2xvbmUsIHRoaXMubmV4dFNpYmxpbmcpIDogY2xvbmU7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdGlvbl9jbG9uZURlZXAoKSB7XG4gIHZhciBjbG9uZSA9IHRoaXMuY2xvbmVOb2RlKHRydWUpLCBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gIHJldHVybiBwYXJlbnQgPyBwYXJlbnQuaW5zZXJ0QmVmb3JlKGNsb25lLCB0aGlzLm5leHRTaWJsaW5nKSA6IGNsb25lO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihkZWVwKSB7XG4gIHJldHVybiB0aGlzLnNlbGVjdChkZWVwID8gc2VsZWN0aW9uX2Nsb25lRGVlcCA6IHNlbGVjdGlvbl9jbG9uZVNoYWxsb3cpO1xufVxuIiwiaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQge0VudGVyTm9kZX0gZnJvbSBcIi4vZW50ZXIuanNcIjtcbmltcG9ydCBhcnJheSBmcm9tIFwiLi4vYXJyYXkuanNcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi4vY29uc3RhbnQuanNcIjtcblxuZnVuY3Rpb24gYmluZEluZGV4KHBhcmVudCwgZ3JvdXAsIGVudGVyLCB1cGRhdGUsIGV4aXQsIGRhdGEpIHtcbiAgdmFyIGkgPSAwLFxuICAgICAgbm9kZSxcbiAgICAgIGdyb3VwTGVuZ3RoID0gZ3JvdXAubGVuZ3RoLFxuICAgICAgZGF0YUxlbmd0aCA9IGRhdGEubGVuZ3RoO1xuXG4gIC8vIFB1dCBhbnkgbm9uLW51bGwgbm9kZXMgdGhhdCBmaXQgaW50byB1cGRhdGUuXG4gIC8vIFB1dCBhbnkgbnVsbCBub2RlcyBpbnRvIGVudGVyLlxuICAvLyBQdXQgYW55IHJlbWFpbmluZyBkYXRhIGludG8gZW50ZXIuXG4gIGZvciAoOyBpIDwgZGF0YUxlbmd0aDsgKytpKSB7XG4gICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgbm9kZS5fX2RhdGFfXyA9IGRhdGFbaV07XG4gICAgICB1cGRhdGVbaV0gPSBub2RlO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbnRlcltpXSA9IG5ldyBFbnRlck5vZGUocGFyZW50LCBkYXRhW2ldKTtcbiAgICB9XG4gIH1cblxuICAvLyBQdXQgYW55IG5vbi1udWxsIG5vZGVzIHRoYXQgZG9u4oCZdCBmaXQgaW50byBleGl0LlxuICBmb3IgKDsgaSA8IGdyb3VwTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICBleGl0W2ldID0gbm9kZTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gYmluZEtleShwYXJlbnQsIGdyb3VwLCBlbnRlciwgdXBkYXRlLCBleGl0LCBkYXRhLCBrZXkpIHtcbiAgdmFyIGksXG4gICAgICBub2RlLFxuICAgICAgbm9kZUJ5S2V5VmFsdWUgPSBuZXcgTWFwLFxuICAgICAgZ3JvdXBMZW5ndGggPSBncm91cC5sZW5ndGgsXG4gICAgICBkYXRhTGVuZ3RoID0gZGF0YS5sZW5ndGgsXG4gICAgICBrZXlWYWx1ZXMgPSBuZXcgQXJyYXkoZ3JvdXBMZW5ndGgpLFxuICAgICAga2V5VmFsdWU7XG5cbiAgLy8gQ29tcHV0ZSB0aGUga2V5IGZvciBlYWNoIG5vZGUuXG4gIC8vIElmIG11bHRpcGxlIG5vZGVzIGhhdmUgdGhlIHNhbWUga2V5LCB0aGUgZHVwbGljYXRlcyBhcmUgYWRkZWQgdG8gZXhpdC5cbiAgZm9yIChpID0gMDsgaSA8IGdyb3VwTGVuZ3RoOyArK2kpIHtcbiAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICBrZXlWYWx1ZXNbaV0gPSBrZXlWYWx1ZSA9IGtleS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSArIFwiXCI7XG4gICAgICBpZiAobm9kZUJ5S2V5VmFsdWUuaGFzKGtleVZhbHVlKSkge1xuICAgICAgICBleGl0W2ldID0gbm9kZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGVCeUtleVZhbHVlLnNldChrZXlWYWx1ZSwgbm9kZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gQ29tcHV0ZSB0aGUga2V5IGZvciBlYWNoIGRhdHVtLlxuICAvLyBJZiB0aGVyZSBhIG5vZGUgYXNzb2NpYXRlZCB3aXRoIHRoaXMga2V5LCBqb2luIGFuZCBhZGQgaXQgdG8gdXBkYXRlLlxuICAvLyBJZiB0aGVyZSBpcyBub3QgKG9yIHRoZSBrZXkgaXMgYSBkdXBsaWNhdGUpLCBhZGQgaXQgdG8gZW50ZXIuXG4gIGZvciAoaSA9IDA7IGkgPCBkYXRhTGVuZ3RoOyArK2kpIHtcbiAgICBrZXlWYWx1ZSA9IGtleS5jYWxsKHBhcmVudCwgZGF0YVtpXSwgaSwgZGF0YSkgKyBcIlwiO1xuICAgIGlmIChub2RlID0gbm9kZUJ5S2V5VmFsdWUuZ2V0KGtleVZhbHVlKSkge1xuICAgICAgdXBkYXRlW2ldID0gbm9kZTtcbiAgICAgIG5vZGUuX19kYXRhX18gPSBkYXRhW2ldO1xuICAgICAgbm9kZUJ5S2V5VmFsdWUuZGVsZXRlKGtleVZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW50ZXJbaV0gPSBuZXcgRW50ZXJOb2RlKHBhcmVudCwgZGF0YVtpXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gQWRkIGFueSByZW1haW5pbmcgbm9kZXMgdGhhdCB3ZXJlIG5vdCBib3VuZCB0byBkYXRhIHRvIGV4aXQuXG4gIGZvciAoaSA9IDA7IGkgPCBncm91cExlbmd0aDsgKytpKSB7XG4gICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChub2RlQnlLZXlWYWx1ZS5nZXQoa2V5VmFsdWVzW2ldKSA9PT0gbm9kZSkpIHtcbiAgICAgIGV4aXRbaV0gPSBub2RlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkYXR1bShub2RlKSB7XG4gIHJldHVybiBub2RlLl9fZGF0YV9fO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIEFycmF5LmZyb20odGhpcywgZGF0dW0pO1xuXG4gIHZhciBiaW5kID0ga2V5ID8gYmluZEtleSA6IGJpbmRJbmRleCxcbiAgICAgIHBhcmVudHMgPSB0aGlzLl9wYXJlbnRzLFxuICAgICAgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzO1xuXG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdmFsdWUgPSBjb25zdGFudCh2YWx1ZSk7XG5cbiAgZm9yICh2YXIgbSA9IGdyb3Vwcy5sZW5ndGgsIHVwZGF0ZSA9IG5ldyBBcnJheShtKSwgZW50ZXIgPSBuZXcgQXJyYXkobSksIGV4aXQgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgdmFyIHBhcmVudCA9IHBhcmVudHNbal0sXG4gICAgICAgIGdyb3VwID0gZ3JvdXBzW2pdLFxuICAgICAgICBncm91cExlbmd0aCA9IGdyb3VwLmxlbmd0aCxcbiAgICAgICAgZGF0YSA9IGFycmF5KHZhbHVlLmNhbGwocGFyZW50LCBwYXJlbnQgJiYgcGFyZW50Ll9fZGF0YV9fLCBqLCBwYXJlbnRzKSksXG4gICAgICAgIGRhdGFMZW5ndGggPSBkYXRhLmxlbmd0aCxcbiAgICAgICAgZW50ZXJHcm91cCA9IGVudGVyW2pdID0gbmV3IEFycmF5KGRhdGFMZW5ndGgpLFxuICAgICAgICB1cGRhdGVHcm91cCA9IHVwZGF0ZVtqXSA9IG5ldyBBcnJheShkYXRhTGVuZ3RoKSxcbiAgICAgICAgZXhpdEdyb3VwID0gZXhpdFtqXSA9IG5ldyBBcnJheShncm91cExlbmd0aCk7XG5cbiAgICBiaW5kKHBhcmVudCwgZ3JvdXAsIGVudGVyR3JvdXAsIHVwZGF0ZUdyb3VwLCBleGl0R3JvdXAsIGRhdGEsIGtleSk7XG5cbiAgICAvLyBOb3cgY29ubmVjdCB0aGUgZW50ZXIgbm9kZXMgdG8gdGhlaXIgZm9sbG93aW5nIHVwZGF0ZSBub2RlLCBzdWNoIHRoYXRcbiAgICAvLyBhcHBlbmRDaGlsZCBjYW4gaW5zZXJ0IHRoZSBtYXRlcmlhbGl6ZWQgZW50ZXIgbm9kZSBiZWZvcmUgdGhpcyBub2RlLFxuICAgIC8vIHJhdGhlciB0aGFuIGF0IHRoZSBlbmQgb2YgdGhlIHBhcmVudCBub2RlLlxuICAgIGZvciAodmFyIGkwID0gMCwgaTEgPSAwLCBwcmV2aW91cywgbmV4dDsgaTAgPCBkYXRhTGVuZ3RoOyArK2kwKSB7XG4gICAgICBpZiAocHJldmlvdXMgPSBlbnRlckdyb3VwW2kwXSkge1xuICAgICAgICBpZiAoaTAgPj0gaTEpIGkxID0gaTAgKyAxO1xuICAgICAgICB3aGlsZSAoIShuZXh0ID0gdXBkYXRlR3JvdXBbaTFdKSAmJiArK2kxIDwgZGF0YUxlbmd0aCk7XG4gICAgICAgIHByZXZpb3VzLl9uZXh0ID0gbmV4dCB8fCBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZSA9IG5ldyBTZWxlY3Rpb24odXBkYXRlLCBwYXJlbnRzKTtcbiAgdXBkYXRlLl9lbnRlciA9IGVudGVyO1xuICB1cGRhdGUuX2V4aXQgPSBleGl0O1xuICByZXR1cm4gdXBkYXRlO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5wcm9wZXJ0eShcIl9fZGF0YV9fXCIsIHZhbHVlKVxuICAgICAgOiB0aGlzLm5vZGUoKS5fX2RhdGFfXztcbn1cbiIsImltcG9ydCBkZWZhdWx0VmlldyBmcm9tIFwiLi4vd2luZG93LmpzXCI7XG5cbmZ1bmN0aW9uIGRpc3BhdGNoRXZlbnQobm9kZSwgdHlwZSwgcGFyYW1zKSB7XG4gIHZhciB3aW5kb3cgPSBkZWZhdWx0Vmlldyhub2RlKSxcbiAgICAgIGV2ZW50ID0gd2luZG93LkN1c3RvbUV2ZW50O1xuXG4gIGlmICh0eXBlb2YgZXZlbnQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGV2ZW50ID0gbmV3IGV2ZW50KHR5cGUsIHBhcmFtcyk7XG4gIH0gZWxzZSB7XG4gICAgZXZlbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJFdmVudFwiKTtcbiAgICBpZiAocGFyYW1zKSBldmVudC5pbml0RXZlbnQodHlwZSwgcGFyYW1zLmJ1YmJsZXMsIHBhcmFtcy5jYW5jZWxhYmxlKSwgZXZlbnQuZGV0YWlsID0gcGFyYW1zLmRldGFpbDtcbiAgICBlbHNlIGV2ZW50LmluaXRFdmVudCh0eXBlLCBmYWxzZSwgZmFsc2UpO1xuICB9XG5cbiAgbm9kZS5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbn1cblxuZnVuY3Rpb24gZGlzcGF0Y2hDb25zdGFudCh0eXBlLCBwYXJhbXMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkaXNwYXRjaEV2ZW50KHRoaXMsIHR5cGUsIHBhcmFtcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRpc3BhdGNoRnVuY3Rpb24odHlwZSwgcGFyYW1zKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZGlzcGF0Y2hFdmVudCh0aGlzLCB0eXBlLCBwYXJhbXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHR5cGUsIHBhcmFtcykge1xuICByZXR1cm4gdGhpcy5lYWNoKCh0eXBlb2YgcGFyYW1zID09PSBcImZ1bmN0aW9uXCJcbiAgICAgID8gZGlzcGF0Y2hGdW5jdGlvblxuICAgICAgOiBkaXNwYXRjaENvbnN0YW50KSh0eXBlLCBwYXJhbXMpKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIGNhbGxiYWNrLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiAhdGhpcy5ub2RlKCk7XG59XG4iLCJpbXBvcnQgc3BhcnNlIGZyb20gXCIuL3NwYXJzZS5qc1wiO1xuaW1wb3J0IHtTZWxlY3Rpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFNlbGVjdGlvbih0aGlzLl9lbnRlciB8fCB0aGlzLl9ncm91cHMubWFwKHNwYXJzZSksIHRoaXMuX3BhcmVudHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRW50ZXJOb2RlKHBhcmVudCwgZGF0dW0pIHtcbiAgdGhpcy5vd25lckRvY3VtZW50ID0gcGFyZW50Lm93bmVyRG9jdW1lbnQ7XG4gIHRoaXMubmFtZXNwYWNlVVJJID0gcGFyZW50Lm5hbWVzcGFjZVVSSTtcbiAgdGhpcy5fbmV4dCA9IG51bGw7XG4gIHRoaXMuX3BhcmVudCA9IHBhcmVudDtcbiAgdGhpcy5fX2RhdGFfXyA9IGRhdHVtO1xufVxuXG5FbnRlck5vZGUucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogRW50ZXJOb2RlLFxuICBhcHBlbmRDaGlsZDogZnVuY3Rpb24oY2hpbGQpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5pbnNlcnRCZWZvcmUoY2hpbGQsIHRoaXMuX25leHQpOyB9LFxuICBpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uKGNoaWxkLCBuZXh0KSB7IHJldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKGNoaWxkLCBuZXh0KTsgfSxcbiAgcXVlcnlTZWxlY3RvcjogZnVuY3Rpb24oc2VsZWN0b3IpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsgfSxcbiAgcXVlcnlTZWxlY3RvckFsbDogZnVuY3Rpb24oc2VsZWN0b3IpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsgfVxufTtcbiIsImltcG9ydCBzcGFyc2UgZnJvbSBcIi4vc3BhcnNlLmpzXCI7XG5pbXBvcnQge1NlbGVjdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHRoaXMuX2V4aXQgfHwgdGhpcy5fZ3JvdXBzLm1hcChzcGFyc2UpLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IG1hdGNoZXIgZnJvbSBcIi4uL21hdGNoZXIuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gXCJmdW5jdGlvblwiKSBtYXRjaCA9IG1hdGNoZXIobWF0Y2gpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBbXSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBtYXRjaC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkge1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJmdW5jdGlvbiBodG1sUmVtb3ZlKCkge1xuICB0aGlzLmlubmVySFRNTCA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGh0bWxDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gaHRtbEZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgdGhpcy5pbm5lckhUTUwgPSB2ID09IG51bGwgPyBcIlwiIDogdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKHZhbHVlID09IG51bGxcbiAgICAgICAgICA/IGh0bWxSZW1vdmUgOiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgICA/IGh0bWxGdW5jdGlvblxuICAgICAgICAgIDogaHRtbENvbnN0YW50KSh2YWx1ZSkpXG4gICAgICA6IHRoaXMubm9kZSgpLmlubmVySFRNTDtcbn1cbiIsImltcG9ydCBzZWxlY3Rpb25fc2VsZWN0IGZyb20gXCIuL3NlbGVjdC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9zZWxlY3RBbGwgZnJvbSBcIi4vc2VsZWN0QWxsLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NlbGVjdENoaWxkIGZyb20gXCIuL3NlbGVjdENoaWxkLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3NlbGVjdENoaWxkcmVuIGZyb20gXCIuL3NlbGVjdENoaWxkcmVuLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2ZpbHRlciBmcm9tIFwiLi9maWx0ZXIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGF0YSBmcm9tIFwiLi9kYXRhLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VudGVyIGZyb20gXCIuL2VudGVyLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2V4aXQgZnJvbSBcIi4vZXhpdC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9qb2luIGZyb20gXCIuL2pvaW4uanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fbWVyZ2UgZnJvbSBcIi4vbWVyZ2UuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fb3JkZXIgZnJvbSBcIi4vb3JkZXIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fc29ydCBmcm9tIFwiLi9zb3J0LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2NhbGwgZnJvbSBcIi4vY2FsbC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9ub2RlcyBmcm9tIFwiLi9ub2Rlcy5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9ub2RlIGZyb20gXCIuL25vZGUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fc2l6ZSBmcm9tIFwiLi9zaXplLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VtcHR5IGZyb20gXCIuL2VtcHR5LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX2VhY2ggZnJvbSBcIi4vZWFjaC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9hdHRyIGZyb20gXCIuL2F0dHIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fc3R5bGUgZnJvbSBcIi4vc3R5bGUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fcHJvcGVydHkgZnJvbSBcIi4vcHJvcGVydHkuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2xhc3NlZCBmcm9tIFwiLi9jbGFzc2VkLmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3RleHQgZnJvbSBcIi4vdGV4dC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9odG1sIGZyb20gXCIuL2h0bWwuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fcmFpc2UgZnJvbSBcIi4vcmFpc2UuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fbG93ZXIgZnJvbSBcIi4vbG93ZXIuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fYXBwZW5kIGZyb20gXCIuL2FwcGVuZC5qc1wiO1xuaW1wb3J0IHNlbGVjdGlvbl9pbnNlcnQgZnJvbSBcIi4vaW5zZXJ0LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3JlbW92ZSBmcm9tIFwiLi9yZW1vdmUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fY2xvbmUgZnJvbSBcIi4vY2xvbmUuanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGF0dW0gZnJvbSBcIi4vZGF0dW0uanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fb24gZnJvbSBcIi4vb24uanNcIjtcbmltcG9ydCBzZWxlY3Rpb25fZGlzcGF0Y2ggZnJvbSBcIi4vZGlzcGF0Y2guanNcIjtcbmltcG9ydCBzZWxlY3Rpb25faXRlcmF0b3IgZnJvbSBcIi4vaXRlcmF0b3IuanNcIjtcblxuZXhwb3J0IHZhciByb290ID0gW251bGxdO1xuXG5leHBvcnQgZnVuY3Rpb24gU2VsZWN0aW9uKGdyb3VwcywgcGFyZW50cykge1xuICB0aGlzLl9ncm91cHMgPSBncm91cHM7XG4gIHRoaXMuX3BhcmVudHMgPSBwYXJlbnRzO1xufVxuXG5mdW5jdGlvbiBzZWxlY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKFtbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XV0sIHJvb3QpO1xufVxuXG5mdW5jdGlvbiBzZWxlY3Rpb25fc2VsZWN0aW9uKCkge1xuICByZXR1cm4gdGhpcztcbn1cblxuU2VsZWN0aW9uLnByb3RvdHlwZSA9IHNlbGVjdGlvbi5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBTZWxlY3Rpb24sXG4gIHNlbGVjdDogc2VsZWN0aW9uX3NlbGVjdCxcbiAgc2VsZWN0QWxsOiBzZWxlY3Rpb25fc2VsZWN0QWxsLFxuICBzZWxlY3RDaGlsZDogc2VsZWN0aW9uX3NlbGVjdENoaWxkLFxuICBzZWxlY3RDaGlsZHJlbjogc2VsZWN0aW9uX3NlbGVjdENoaWxkcmVuLFxuICBmaWx0ZXI6IHNlbGVjdGlvbl9maWx0ZXIsXG4gIGRhdGE6IHNlbGVjdGlvbl9kYXRhLFxuICBlbnRlcjogc2VsZWN0aW9uX2VudGVyLFxuICBleGl0OiBzZWxlY3Rpb25fZXhpdCxcbiAgam9pbjogc2VsZWN0aW9uX2pvaW4sXG4gIG1lcmdlOiBzZWxlY3Rpb25fbWVyZ2UsXG4gIHNlbGVjdGlvbjogc2VsZWN0aW9uX3NlbGVjdGlvbixcbiAgb3JkZXI6IHNlbGVjdGlvbl9vcmRlcixcbiAgc29ydDogc2VsZWN0aW9uX3NvcnQsXG4gIGNhbGw6IHNlbGVjdGlvbl9jYWxsLFxuICBub2Rlczogc2VsZWN0aW9uX25vZGVzLFxuICBub2RlOiBzZWxlY3Rpb25fbm9kZSxcbiAgc2l6ZTogc2VsZWN0aW9uX3NpemUsXG4gIGVtcHR5OiBzZWxlY3Rpb25fZW1wdHksXG4gIGVhY2g6IHNlbGVjdGlvbl9lYWNoLFxuICBhdHRyOiBzZWxlY3Rpb25fYXR0cixcbiAgc3R5bGU6IHNlbGVjdGlvbl9zdHlsZSxcbiAgcHJvcGVydHk6IHNlbGVjdGlvbl9wcm9wZXJ0eSxcbiAgY2xhc3NlZDogc2VsZWN0aW9uX2NsYXNzZWQsXG4gIHRleHQ6IHNlbGVjdGlvbl90ZXh0LFxuICBodG1sOiBzZWxlY3Rpb25faHRtbCxcbiAgcmFpc2U6IHNlbGVjdGlvbl9yYWlzZSxcbiAgbG93ZXI6IHNlbGVjdGlvbl9sb3dlcixcbiAgYXBwZW5kOiBzZWxlY3Rpb25fYXBwZW5kLFxuICBpbnNlcnQ6IHNlbGVjdGlvbl9pbnNlcnQsXG4gIHJlbW92ZTogc2VsZWN0aW9uX3JlbW92ZSxcbiAgY2xvbmU6IHNlbGVjdGlvbl9jbG9uZSxcbiAgZGF0dW06IHNlbGVjdGlvbl9kYXR1bSxcbiAgb246IHNlbGVjdGlvbl9vbixcbiAgZGlzcGF0Y2g6IHNlbGVjdGlvbl9kaXNwYXRjaCxcbiAgW1N5bWJvbC5pdGVyYXRvcl06IHNlbGVjdGlvbl9pdGVyYXRvclxufTtcblxuZXhwb3J0IGRlZmF1bHQgc2VsZWN0aW9uO1xuIiwiaW1wb3J0IGNyZWF0b3IgZnJvbSBcIi4uL2NyZWF0b3IuanNcIjtcbmltcG9ydCBzZWxlY3RvciBmcm9tIFwiLi4vc2VsZWN0b3IuanNcIjtcblxuZnVuY3Rpb24gY29uc3RhbnROdWxsKCkge1xuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgYmVmb3JlKSB7XG4gIHZhciBjcmVhdGUgPSB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZSA6IGNyZWF0b3IobmFtZSksXG4gICAgICBzZWxlY3QgPSBiZWZvcmUgPT0gbnVsbCA/IGNvbnN0YW50TnVsbCA6IHR5cGVvZiBiZWZvcmUgPT09IFwiZnVuY3Rpb25cIiA/IGJlZm9yZSA6IHNlbGVjdG9yKGJlZm9yZSk7XG4gIHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUoY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHNlbGVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IG51bGwpO1xuICB9KTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKigpIHtcbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBqID0gMCwgbSA9IGdyb3Vwcy5sZW5ndGg7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGgsIG5vZGU7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHlpZWxkIG5vZGU7XG4gICAgfVxuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvbmVudGVyLCBvbnVwZGF0ZSwgb25leGl0KSB7XG4gIHZhciBlbnRlciA9IHRoaXMuZW50ZXIoKSwgdXBkYXRlID0gdGhpcywgZXhpdCA9IHRoaXMuZXhpdCgpO1xuICBlbnRlciA9IHR5cGVvZiBvbmVudGVyID09PSBcImZ1bmN0aW9uXCIgPyBvbmVudGVyKGVudGVyKSA6IGVudGVyLmFwcGVuZChvbmVudGVyICsgXCJcIik7XG4gIGlmIChvbnVwZGF0ZSAhPSBudWxsKSB1cGRhdGUgPSBvbnVwZGF0ZSh1cGRhdGUpO1xuICBpZiAob25leGl0ID09IG51bGwpIGV4aXQucmVtb3ZlKCk7IGVsc2Ugb25leGl0KGV4aXQpO1xuICByZXR1cm4gZW50ZXIgJiYgdXBkYXRlID8gZW50ZXIubWVyZ2UodXBkYXRlKS5vcmRlcigpIDogdXBkYXRlO1xufVxuIiwiZnVuY3Rpb24gbG93ZXIoKSB7XG4gIGlmICh0aGlzLnByZXZpb3VzU2libGluZykgdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLCB0aGlzLnBhcmVudE5vZGUuZmlyc3RDaGlsZCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5lYWNoKGxvd2VyKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rpb24pIHtcbiAgaWYgKCEoc2VsZWN0aW9uIGluc3RhbmNlb2YgU2VsZWN0aW9uKSkgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBtZXJnZVwiKTtcblxuICBmb3IgKHZhciBncm91cHMwID0gdGhpcy5fZ3JvdXBzLCBncm91cHMxID0gc2VsZWN0aW9uLl9ncm91cHMsIG0wID0gZ3JvdXBzMC5sZW5ndGgsIG0xID0gZ3JvdXBzMS5sZW5ndGgsIG0gPSBNYXRoLm1pbihtMCwgbTEpLCBtZXJnZXMgPSBuZXcgQXJyYXkobTApLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwMCA9IGdyb3VwczBbal0sIGdyb3VwMSA9IGdyb3VwczFbal0sIG4gPSBncm91cDAubGVuZ3RoLCBtZXJnZSA9IG1lcmdlc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXAwW2ldIHx8IGdyb3VwMVtpXSkge1xuICAgICAgICBtZXJnZVtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm9yICg7IGogPCBtMDsgKytqKSB7XG4gICAgbWVyZ2VzW2pdID0gZ3JvdXBzMFtqXTtcbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKG1lcmdlcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBpID0gMCwgbiA9IGdyb3VwLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIG5vZGUgPSBncm91cFtpXTtcbiAgICAgIGlmIChub2RlKSByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzKTtcbn1cbiIsImZ1bmN0aW9uIGNvbnRleHRMaXN0ZW5lcihsaXN0ZW5lcikge1xuICByZXR1cm4gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBsaXN0ZW5lci5jYWxsKHRoaXMsIGV2ZW50LCB0aGlzLl9fZGF0YV9fKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VUeXBlbmFtZXModHlwZW5hbWVzKSB7XG4gIHJldHVybiB0eXBlbmFtZXMudHJpbSgpLnNwbGl0KC9efFxccysvKS5tYXAoZnVuY3Rpb24odCkge1xuICAgIHZhciBuYW1lID0gXCJcIiwgaSA9IHQuaW5kZXhPZihcIi5cIik7XG4gICAgaWYgKGkgPj0gMCkgbmFtZSA9IHQuc2xpY2UoaSArIDEpLCB0ID0gdC5zbGljZSgwLCBpKTtcbiAgICByZXR1cm4ge3R5cGU6IHQsIG5hbWU6IG5hbWV9O1xuICB9KTtcbn1cblxuZnVuY3Rpb24gb25SZW1vdmUodHlwZW5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBvbiA9IHRoaXMuX19vbjtcbiAgICBpZiAoIW9uKSByZXR1cm47XG4gICAgZm9yICh2YXIgaiA9IDAsIGkgPSAtMSwgbSA9IG9uLmxlbmd0aCwgbzsgaiA8IG07ICsraikge1xuICAgICAgaWYgKG8gPSBvbltqXSwgKCF0eXBlbmFtZS50eXBlIHx8IG8udHlwZSA9PT0gdHlwZW5hbWUudHlwZSkgJiYgby5uYW1lID09PSB0eXBlbmFtZS5uYW1lKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihvLnR5cGUsIG8ubGlzdGVuZXIsIG8ub3B0aW9ucyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvblsrK2ldID0gbztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKCsraSkgb24ubGVuZ3RoID0gaTtcbiAgICBlbHNlIGRlbGV0ZSB0aGlzLl9fb247XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9uQWRkKHR5cGVuYW1lLCB2YWx1ZSwgb3B0aW9ucykge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG9uID0gdGhpcy5fX29uLCBvLCBsaXN0ZW5lciA9IGNvbnRleHRMaXN0ZW5lcih2YWx1ZSk7XG4gICAgaWYgKG9uKSBmb3IgKHZhciBqID0gMCwgbSA9IG9uLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgICAgaWYgKChvID0gb25bal0pLnR5cGUgPT09IHR5cGVuYW1lLnR5cGUgJiYgby5uYW1lID09PSB0eXBlbmFtZS5uYW1lKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihvLnR5cGUsIG8ubGlzdGVuZXIsIG8ub3B0aW9ucyk7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihvLnR5cGUsIG8ubGlzdGVuZXIgPSBsaXN0ZW5lciwgby5vcHRpb25zID0gb3B0aW9ucyk7XG4gICAgICAgIG8udmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodHlwZW5hbWUudHlwZSwgbGlzdGVuZXIsIG9wdGlvbnMpO1xuICAgIG8gPSB7dHlwZTogdHlwZW5hbWUudHlwZSwgbmFtZTogdHlwZW5hbWUubmFtZSwgdmFsdWU6IHZhbHVlLCBsaXN0ZW5lcjogbGlzdGVuZXIsIG9wdGlvbnM6IG9wdGlvbnN9O1xuICAgIGlmICghb24pIHRoaXMuX19vbiA9IFtvXTtcbiAgICBlbHNlIG9uLnB1c2gobyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHR5cGVuYW1lLCB2YWx1ZSwgb3B0aW9ucykge1xuICB2YXIgdHlwZW5hbWVzID0gcGFyc2VUeXBlbmFtZXModHlwZW5hbWUgKyBcIlwiKSwgaSwgbiA9IHR5cGVuYW1lcy5sZW5ndGgsIHQ7XG5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgdmFyIG9uID0gdGhpcy5ub2RlKCkuX19vbjtcbiAgICBpZiAob24pIGZvciAodmFyIGogPSAwLCBtID0gb24ubGVuZ3RoLCBvOyBqIDwgbTsgKytqKSB7XG4gICAgICBmb3IgKGkgPSAwLCBvID0gb25bal07IGkgPCBuOyArK2kpIHtcbiAgICAgICAgaWYgKCh0ID0gdHlwZW5hbWVzW2ldKS50eXBlID09PSBvLnR5cGUgJiYgdC5uYW1lID09PSBvLm5hbWUpIHtcbiAgICAgICAgICByZXR1cm4gby52YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICBvbiA9IHZhbHVlID8gb25BZGQgOiBvblJlbW92ZTtcbiAgZm9yIChpID0gMDsgaSA8IG47ICsraSkgdGhpcy5lYWNoKG9uKHR5cGVuYW1lc1tpXSwgdmFsdWUsIG9wdGlvbnMpKTtcbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIGogPSAtMSwgbSA9IGdyb3Vwcy5sZW5ndGg7ICsraiA8IG07KSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSBncm91cC5sZW5ndGggLSAxLCBuZXh0ID0gZ3JvdXBbaV0sIG5vZGU7IC0taSA+PSAwOykge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBpZiAobmV4dCAmJiBub2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKG5leHQpIF4gNCkgbmV4dC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShub2RlLCBuZXh0KTtcbiAgICAgICAgbmV4dCA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59XG4iLCJmdW5jdGlvbiBwcm9wZXJ0eVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICBkZWxldGUgdGhpc1tuYW1lXTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gcHJvcGVydHlDb25zdGFudChuYW1lLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpc1tuYW1lXSA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBwcm9wZXJ0eUZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgaWYgKHYgPT0gbnVsbCkgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgZWxzZSB0aGlzW25hbWVdID0gdjtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxXG4gICAgICA/IHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbFxuICAgICAgICAgID8gcHJvcGVydHlSZW1vdmUgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gcHJvcGVydHlGdW5jdGlvblxuICAgICAgICAgIDogcHJvcGVydHlDb25zdGFudCkobmFtZSwgdmFsdWUpKVxuICAgICAgOiB0aGlzLm5vZGUoKVtuYW1lXTtcbn1cbiIsImZ1bmN0aW9uIHJhaXNlKCkge1xuICBpZiAodGhpcy5uZXh0U2libGluZykgdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHRoaXMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHRoaXMuZWFjaChyYWlzZSk7XG59XG4iLCJmdW5jdGlvbiByZW1vdmUoKSB7XG4gIHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG4gIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLmVhY2gocmVtb3ZlKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHNlbGVjdG9yIGZyb20gXCIuLi9zZWxlY3Rvci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3QpIHtcbiAgaWYgKHR5cGVvZiBzZWxlY3QgIT09IFwiZnVuY3Rpb25cIikgc2VsZWN0ID0gc2VsZWN0b3Ioc2VsZWN0KTtcblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBzdWJncm91cHMgPSBuZXcgQXJyYXkobSksIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIHN1Ymdyb3VwID0gc3ViZ3JvdXBzW2pdID0gbmV3IEFycmF5KG4pLCBub2RlLCBzdWJub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIChzdWJub2RlID0gc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKSkge1xuICAgICAgICBpZiAoXCJfX2RhdGFfX1wiIGluIG5vZGUpIHN1Ym5vZGUuX19kYXRhX18gPSBub2RlLl9fZGF0YV9fO1xuICAgICAgICBzdWJncm91cFtpXSA9IHN1Ym5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc3ViZ3JvdXBzLCB0aGlzLl9wYXJlbnRzKTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IGFycmF5IGZyb20gXCIuLi9hcnJheS5qc1wiO1xuaW1wb3J0IHNlbGVjdG9yQWxsIGZyb20gXCIuLi9zZWxlY3RvckFsbC5qc1wiO1xuXG5mdW5jdGlvbiBhcnJheUFsbChzZWxlY3QpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBncm91cCA9IHNlbGVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiBncm91cCA9PSBudWxsID8gW10gOiBhcnJheShncm91cCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdCkge1xuICBpZiAodHlwZW9mIHNlbGVjdCA9PT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBhcnJheUFsbChzZWxlY3QpO1xuICBlbHNlIHNlbGVjdCA9IHNlbGVjdG9yQWxsKHNlbGVjdCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc3ViZ3JvdXBzID0gW10sIHBhcmVudHMgPSBbXSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc3ViZ3JvdXBzLnB1c2goc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApKTtcbiAgICAgICAgcGFyZW50cy5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHN1Ymdyb3VwcywgcGFyZW50cyk7XG59XG4iLCJpbXBvcnQge2NoaWxkTWF0Y2hlcn0gZnJvbSBcIi4uL21hdGNoZXIuanNcIjtcblxudmFyIGZpbmQgPSBBcnJheS5wcm90b3R5cGUuZmluZDtcblxuZnVuY3Rpb24gY2hpbGRGaW5kKG1hdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmluZC5jYWxsKHRoaXMuY2hpbGRyZW4sIG1hdGNoKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gY2hpbGRGaXJzdCgpIHtcbiAgcmV0dXJuIHRoaXMuZmlyc3RFbGVtZW50Q2hpbGQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1hdGNoKSB7XG4gIHJldHVybiB0aGlzLnNlbGVjdChtYXRjaCA9PSBudWxsID8gY2hpbGRGaXJzdFxuICAgICAgOiBjaGlsZEZpbmQodHlwZW9mIG1hdGNoID09PSBcImZ1bmN0aW9uXCIgPyBtYXRjaCA6IGNoaWxkTWF0Y2hlcihtYXRjaCkpKTtcbn1cbiIsImltcG9ydCB7Y2hpbGRNYXRjaGVyfSBmcm9tIFwiLi4vbWF0Y2hlci5qc1wiO1xuXG52YXIgZmlsdGVyID0gQXJyYXkucHJvdG90eXBlLmZpbHRlcjtcblxuZnVuY3Rpb24gY2hpbGRyZW4oKSB7XG4gIHJldHVybiB0aGlzLmNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjaGlsZHJlbkZpbHRlcihtYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZpbHRlci5jYWxsKHRoaXMuY2hpbGRyZW4sIG1hdGNoKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgcmV0dXJuIHRoaXMuc2VsZWN0QWxsKG1hdGNoID09IG51bGwgPyBjaGlsZHJlblxuICAgICAgOiBjaGlsZHJlbkZpbHRlcih0eXBlb2YgbWF0Y2ggPT09IFwiZnVuY3Rpb25cIiA/IG1hdGNoIDogY2hpbGRNYXRjaGVyKG1hdGNoKSkpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIGxldCBzaXplID0gMDtcbiAgZm9yIChjb25zdCBub2RlIG9mIHRoaXMpICsrc2l6ZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICByZXR1cm4gc2l6ZTtcbn1cbiIsImltcG9ydCB7U2VsZWN0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb21wYXJlKSB7XG4gIGlmICghY29tcGFyZSkgY29tcGFyZSA9IGFzY2VuZGluZztcblxuICBmdW5jdGlvbiBjb21wYXJlTm9kZShhLCBiKSB7XG4gICAgcmV0dXJuIGEgJiYgYiA/IGNvbXBhcmUoYS5fX2RhdGFfXywgYi5fX2RhdGFfXykgOiAhYSAtICFiO1xuICB9XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgc29ydGdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc29ydGdyb3VwID0gc29ydGdyb3Vwc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgc29ydGdyb3VwW2ldID0gbm9kZTtcbiAgICAgIH1cbiAgICB9XG4gICAgc29ydGdyb3VwLnNvcnQoY29tcGFyZU5vZGUpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTZWxlY3Rpb24oc29ydGdyb3VwcywgdGhpcy5fcGFyZW50cykub3JkZXIoKTtcbn1cblxuZnVuY3Rpb24gYXNjZW5kaW5nKGEsIGIpIHtcbiAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiBhID49IGIgPyAwIDogTmFOO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odXBkYXRlKSB7XG4gIHJldHVybiBuZXcgQXJyYXkodXBkYXRlLmxlbmd0aCk7XG59XG4iLCJpbXBvcnQgZGVmYXVsdFZpZXcgZnJvbSBcIi4uL3dpbmRvdy5qc1wiO1xuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmICh2ID09IG51bGwpIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgZWxzZSB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIHYsIHByaW9yaXR5KTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMVxuICAgICAgPyB0aGlzLmVhY2goKHZhbHVlID09IG51bGxcbiAgICAgICAgICAgID8gc3R5bGVSZW1vdmUgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgICAgPyBzdHlsZUZ1bmN0aW9uXG4gICAgICAgICAgICA6IHN0eWxlQ29uc3RhbnQpKG5hbWUsIHZhbHVlLCBwcmlvcml0eSA9PSBudWxsID8gXCJcIiA6IHByaW9yaXR5KSlcbiAgICAgIDogc3R5bGVWYWx1ZSh0aGlzLm5vZGUoKSwgbmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdHlsZVZhbHVlKG5vZGUsIG5hbWUpIHtcbiAgcmV0dXJuIG5vZGUuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuYW1lKVxuICAgICAgfHwgZGVmYXVsdFZpZXcobm9kZSkuZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpO1xufVxuIiwiZnVuY3Rpb24gdGV4dFJlbW92ZSgpIHtcbiAgdGhpcy50ZXh0Q29udGVudCA9IFwiXCI7XG59XG5cbmZ1bmN0aW9uIHRleHRDb25zdGFudCh2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuICB9O1xufVxuXG5mdW5jdGlvbiB0ZXh0RnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdiA9PSBudWxsID8gXCJcIiA6IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaCh2YWx1ZSA9PSBudWxsXG4gICAgICAgICAgPyB0ZXh0UmVtb3ZlIDogKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgPyB0ZXh0RnVuY3Rpb25cbiAgICAgICAgICA6IHRleHRDb25zdGFudCkodmFsdWUpKVxuICAgICAgOiB0aGlzLm5vZGUoKS50ZXh0Q29udGVudDtcbn1cbiIsImZ1bmN0aW9uIG5vbmUoKSB7fVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3Rvcikge1xuICByZXR1cm4gc2VsZWN0b3IgPT0gbnVsbCA/IG5vbmUgOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgfTtcbn1cbiIsImZ1bmN0aW9uIGVtcHR5KCkge1xuICByZXR1cm4gW107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlbGVjdG9yKSB7XG4gIHJldHVybiBzZWxlY3RvciA9PSBudWxsID8gZW1wdHkgOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGV2ZW50KSB7XG4gIGxldCBzb3VyY2VFdmVudDtcbiAgd2hpbGUgKHNvdXJjZUV2ZW50ID0gZXZlbnQuc291cmNlRXZlbnQpIGV2ZW50ID0gc291cmNlRXZlbnQ7XG4gIHJldHVybiBldmVudDtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUpIHtcbiAgcmV0dXJuIChub2RlLm93bmVyRG9jdW1lbnQgJiYgbm9kZS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSAvLyBub2RlIGlzIGEgTm9kZVxuICAgICAgfHwgKG5vZGUuZG9jdW1lbnQgJiYgbm9kZSkgLy8gbm9kZSBpcyBhIFdpbmRvd1xuICAgICAgfHwgbm9kZS5kZWZhdWx0VmlldzsgLy8gbm9kZSBpcyBhIERvY3VtZW50XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCB7YWJzLCBhY29zLCBhc2luLCBhdGFuMiwgY29zLCBlcHNpbG9uLCBoYWxmUGksIG1heCwgbWluLCBwaSwgc2luLCBzcXJ0LCB0YXV9IGZyb20gXCIuL21hdGguanNcIjtcblxuZnVuY3Rpb24gYXJjSW5uZXJSYWRpdXMoZCkge1xuICByZXR1cm4gZC5pbm5lclJhZGl1cztcbn1cblxuZnVuY3Rpb24gYXJjT3V0ZXJSYWRpdXMoZCkge1xuICByZXR1cm4gZC5vdXRlclJhZGl1cztcbn1cblxuZnVuY3Rpb24gYXJjU3RhcnRBbmdsZShkKSB7XG4gIHJldHVybiBkLnN0YXJ0QW5nbGU7XG59XG5cbmZ1bmN0aW9uIGFyY0VuZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQuZW5kQW5nbGU7XG59XG5cbmZ1bmN0aW9uIGFyY1BhZEFuZ2xlKGQpIHtcbiAgcmV0dXJuIGQgJiYgZC5wYWRBbmdsZTsgLy8gTm90ZTogb3B0aW9uYWwhXG59XG5cbmZ1bmN0aW9uIGludGVyc2VjdCh4MCwgeTAsIHgxLCB5MSwgeDIsIHkyLCB4MywgeTMpIHtcbiAgdmFyIHgxMCA9IHgxIC0geDAsIHkxMCA9IHkxIC0geTAsXG4gICAgICB4MzIgPSB4MyAtIHgyLCB5MzIgPSB5MyAtIHkyLFxuICAgICAgdCA9IHkzMiAqIHgxMCAtIHgzMiAqIHkxMDtcbiAgaWYgKHQgKiB0IDwgZXBzaWxvbikgcmV0dXJuO1xuICB0ID0gKHgzMiAqICh5MCAtIHkyKSAtIHkzMiAqICh4MCAtIHgyKSkgLyB0O1xuICByZXR1cm4gW3gwICsgdCAqIHgxMCwgeTAgKyB0ICogeTEwXTtcbn1cblxuLy8gQ29tcHV0ZSBwZXJwZW5kaWN1bGFyIG9mZnNldCBsaW5lIG9mIGxlbmd0aCByYy5cbi8vIGh0dHA6Ly9tYXRod29ybGQud29sZnJhbS5jb20vQ2lyY2xlLUxpbmVJbnRlcnNlY3Rpb24uaHRtbFxuZnVuY3Rpb24gY29ybmVyVGFuZ2VudHMoeDAsIHkwLCB4MSwgeTEsIHIxLCByYywgY3cpIHtcbiAgdmFyIHgwMSA9IHgwIC0geDEsXG4gICAgICB5MDEgPSB5MCAtIHkxLFxuICAgICAgbG8gPSAoY3cgPyByYyA6IC1yYykgLyBzcXJ0KHgwMSAqIHgwMSArIHkwMSAqIHkwMSksXG4gICAgICBveCA9IGxvICogeTAxLFxuICAgICAgb3kgPSAtbG8gKiB4MDEsXG4gICAgICB4MTEgPSB4MCArIG94LFxuICAgICAgeTExID0geTAgKyBveSxcbiAgICAgIHgxMCA9IHgxICsgb3gsXG4gICAgICB5MTAgPSB5MSArIG95LFxuICAgICAgeDAwID0gKHgxMSArIHgxMCkgLyAyLFxuICAgICAgeTAwID0gKHkxMSArIHkxMCkgLyAyLFxuICAgICAgZHggPSB4MTAgLSB4MTEsXG4gICAgICBkeSA9IHkxMCAtIHkxMSxcbiAgICAgIGQyID0gZHggKiBkeCArIGR5ICogZHksXG4gICAgICByID0gcjEgLSByYyxcbiAgICAgIEQgPSB4MTEgKiB5MTAgLSB4MTAgKiB5MTEsXG4gICAgICBkID0gKGR5IDwgMCA/IC0xIDogMSkgKiBzcXJ0KG1heCgwLCByICogciAqIGQyIC0gRCAqIEQpKSxcbiAgICAgIGN4MCA9IChEICogZHkgLSBkeCAqIGQpIC8gZDIsXG4gICAgICBjeTAgPSAoLUQgKiBkeCAtIGR5ICogZCkgLyBkMixcbiAgICAgIGN4MSA9IChEICogZHkgKyBkeCAqIGQpIC8gZDIsXG4gICAgICBjeTEgPSAoLUQgKiBkeCArIGR5ICogZCkgLyBkMixcbiAgICAgIGR4MCA9IGN4MCAtIHgwMCxcbiAgICAgIGR5MCA9IGN5MCAtIHkwMCxcbiAgICAgIGR4MSA9IGN4MSAtIHgwMCxcbiAgICAgIGR5MSA9IGN5MSAtIHkwMDtcblxuICAvLyBQaWNrIHRoZSBjbG9zZXIgb2YgdGhlIHR3byBpbnRlcnNlY3Rpb24gcG9pbnRzLlxuICAvLyBUT0RPIElzIHRoZXJlIGEgZmFzdGVyIHdheSB0byBkZXRlcm1pbmUgd2hpY2ggaW50ZXJzZWN0aW9uIHRvIHVzZT9cbiAgaWYgKGR4MCAqIGR4MCArIGR5MCAqIGR5MCA+IGR4MSAqIGR4MSArIGR5MSAqIGR5MSkgY3gwID0gY3gxLCBjeTAgPSBjeTE7XG5cbiAgcmV0dXJuIHtcbiAgICBjeDogY3gwLFxuICAgIGN5OiBjeTAsXG4gICAgeDAxOiAtb3gsXG4gICAgeTAxOiAtb3ksXG4gICAgeDExOiBjeDAgKiAocjEgLyByIC0gMSksXG4gICAgeTExOiBjeTAgKiAocjEgLyByIC0gMSlcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBpbm5lclJhZGl1cyA9IGFyY0lubmVyUmFkaXVzLFxuICAgICAgb3V0ZXJSYWRpdXMgPSBhcmNPdXRlclJhZGl1cyxcbiAgICAgIGNvcm5lclJhZGl1cyA9IGNvbnN0YW50KDApLFxuICAgICAgcGFkUmFkaXVzID0gbnVsbCxcbiAgICAgIHN0YXJ0QW5nbGUgPSBhcmNTdGFydEFuZ2xlLFxuICAgICAgZW5kQW5nbGUgPSBhcmNFbmRBbmdsZSxcbiAgICAgIHBhZEFuZ2xlID0gYXJjUGFkQW5nbGUsXG4gICAgICBjb250ZXh0ID0gbnVsbDtcblxuICBmdW5jdGlvbiBhcmMoKSB7XG4gICAgdmFyIGJ1ZmZlcixcbiAgICAgICAgcixcbiAgICAgICAgcjAgPSAraW5uZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgcjEgPSArb3V0ZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBoYWxmUGksXG4gICAgICAgIGExID0gZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGhhbGZQaSxcbiAgICAgICAgZGEgPSBhYnMoYTEgLSBhMCksXG4gICAgICAgIGN3ID0gYTEgPiBhMDtcblxuICAgIGlmICghY29udGV4dCkgY29udGV4dCA9IGJ1ZmZlciA9IHBhdGgoKTtcblxuICAgIC8vIEVuc3VyZSB0aGF0IHRoZSBvdXRlciByYWRpdXMgaXMgYWx3YXlzIGxhcmdlciB0aGFuIHRoZSBpbm5lciByYWRpdXMuXG4gICAgaWYgKHIxIDwgcjApIHIgPSByMSwgcjEgPSByMCwgcjAgPSByO1xuXG4gICAgLy8gSXMgaXQgYSBwb2ludD9cbiAgICBpZiAoIShyMSA+IGVwc2lsb24pKSBjb250ZXh0Lm1vdmVUbygwLCAwKTtcblxuICAgIC8vIE9yIGlzIGl0IGEgY2lyY2xlIG9yIGFubnVsdXM/XG4gICAgZWxzZSBpZiAoZGEgPiB0YXUgLSBlcHNpbG9uKSB7XG4gICAgICBjb250ZXh0Lm1vdmVUbyhyMSAqIGNvcyhhMCksIHIxICogc2luKGEwKSk7XG4gICAgICBjb250ZXh0LmFyYygwLCAwLCByMSwgYTAsIGExLCAhY3cpO1xuICAgICAgaWYgKHIwID4gZXBzaWxvbikge1xuICAgICAgICBjb250ZXh0Lm1vdmVUbyhyMCAqIGNvcyhhMSksIHIwICogc2luKGExKSk7XG4gICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhMSwgYTAsIGN3KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBPciBpcyBpdCBhIGNpcmN1bGFyIG9yIGFubnVsYXIgc2VjdG9yP1xuICAgIGVsc2Uge1xuICAgICAgdmFyIGEwMSA9IGEwLFxuICAgICAgICAgIGExMSA9IGExLFxuICAgICAgICAgIGEwMCA9IGEwLFxuICAgICAgICAgIGExMCA9IGExLFxuICAgICAgICAgIGRhMCA9IGRhLFxuICAgICAgICAgIGRhMSA9IGRhLFxuICAgICAgICAgIGFwID0gcGFkQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAvIDIsXG4gICAgICAgICAgcnAgPSAoYXAgPiBlcHNpbG9uKSAmJiAocGFkUmFkaXVzID8gK3BhZFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogc3FydChyMCAqIHIwICsgcjEgKiByMSkpLFxuICAgICAgICAgIHJjID0gbWluKGFicyhyMSAtIHIwKSAvIDIsICtjb3JuZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSksXG4gICAgICAgICAgcmMwID0gcmMsXG4gICAgICAgICAgcmMxID0gcmMsXG4gICAgICAgICAgdDAsXG4gICAgICAgICAgdDE7XG5cbiAgICAgIC8vIEFwcGx5IHBhZGRpbmc/IE5vdGUgdGhhdCBzaW5jZSByMSDiiaUgcjAsIGRhMSDiiaUgZGEwLlxuICAgICAgaWYgKHJwID4gZXBzaWxvbikge1xuICAgICAgICB2YXIgcDAgPSBhc2luKHJwIC8gcjAgKiBzaW4oYXApKSxcbiAgICAgICAgICAgIHAxID0gYXNpbihycCAvIHIxICogc2luKGFwKSk7XG4gICAgICAgIGlmICgoZGEwIC09IHAwICogMikgPiBlcHNpbG9uKSBwMCAqPSAoY3cgPyAxIDogLTEpLCBhMDAgKz0gcDAsIGExMCAtPSBwMDtcbiAgICAgICAgZWxzZSBkYTAgPSAwLCBhMDAgPSBhMTAgPSAoYTAgKyBhMSkgLyAyO1xuICAgICAgICBpZiAoKGRhMSAtPSBwMSAqIDIpID4gZXBzaWxvbikgcDEgKj0gKGN3ID8gMSA6IC0xKSwgYTAxICs9IHAxLCBhMTEgLT0gcDE7XG4gICAgICAgIGVsc2UgZGExID0gMCwgYTAxID0gYTExID0gKGEwICsgYTEpIC8gMjtcbiAgICAgIH1cblxuICAgICAgdmFyIHgwMSA9IHIxICogY29zKGEwMSksXG4gICAgICAgICAgeTAxID0gcjEgKiBzaW4oYTAxKSxcbiAgICAgICAgICB4MTAgPSByMCAqIGNvcyhhMTApLFxuICAgICAgICAgIHkxMCA9IHIwICogc2luKGExMCk7XG5cbiAgICAgIC8vIEFwcGx5IHJvdW5kZWQgY29ybmVycz9cbiAgICAgIGlmIChyYyA+IGVwc2lsb24pIHtcbiAgICAgICAgdmFyIHgxMSA9IHIxICogY29zKGExMSksXG4gICAgICAgICAgICB5MTEgPSByMSAqIHNpbihhMTEpLFxuICAgICAgICAgICAgeDAwID0gcjAgKiBjb3MoYTAwKSxcbiAgICAgICAgICAgIHkwMCA9IHIwICogc2luKGEwMCksXG4gICAgICAgICAgICBvYztcblxuICAgICAgICAvLyBSZXN0cmljdCB0aGUgY29ybmVyIHJhZGl1cyBhY2NvcmRpbmcgdG8gdGhlIHNlY3RvciBhbmdsZS5cbiAgICAgICAgaWYgKGRhIDwgcGkgJiYgKG9jID0gaW50ZXJzZWN0KHgwMSwgeTAxLCB4MDAsIHkwMCwgeDExLCB5MTEsIHgxMCwgeTEwKSkpIHtcbiAgICAgICAgICB2YXIgYXggPSB4MDEgLSBvY1swXSxcbiAgICAgICAgICAgICAgYXkgPSB5MDEgLSBvY1sxXSxcbiAgICAgICAgICAgICAgYnggPSB4MTEgLSBvY1swXSxcbiAgICAgICAgICAgICAgYnkgPSB5MTEgLSBvY1sxXSxcbiAgICAgICAgICAgICAga2MgPSAxIC8gc2luKGFjb3MoKGF4ICogYnggKyBheSAqIGJ5KSAvIChzcXJ0KGF4ICogYXggKyBheSAqIGF5KSAqIHNxcnQoYnggKiBieCArIGJ5ICogYnkpKSkgLyAyKSxcbiAgICAgICAgICAgICAgbGMgPSBzcXJ0KG9jWzBdICogb2NbMF0gKyBvY1sxXSAqIG9jWzFdKTtcbiAgICAgICAgICByYzAgPSBtaW4ocmMsIChyMCAtIGxjKSAvIChrYyAtIDEpKTtcbiAgICAgICAgICByYzEgPSBtaW4ocmMsIChyMSAtIGxjKSAvIChrYyArIDEpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBJcyB0aGUgc2VjdG9yIGNvbGxhcHNlZCB0byBhIGxpbmU/XG4gICAgICBpZiAoIShkYTEgPiBlcHNpbG9uKSkgY29udGV4dC5tb3ZlVG8oeDAxLCB5MDEpO1xuXG4gICAgICAvLyBEb2VzIHRoZSBzZWN0b3LigJlzIG91dGVyIHJpbmcgaGF2ZSByb3VuZGVkIGNvcm5lcnM/XG4gICAgICBlbHNlIGlmIChyYzEgPiBlcHNpbG9uKSB7XG4gICAgICAgIHQwID0gY29ybmVyVGFuZ2VudHMoeDAwLCB5MDAsIHgwMSwgeTAxLCByMSwgcmMxLCBjdyk7XG4gICAgICAgIHQxID0gY29ybmVyVGFuZ2VudHMoeDExLCB5MTEsIHgxMCwgeTEwLCByMSwgcmMxLCBjdyk7XG5cbiAgICAgICAgY29udGV4dC5tb3ZlVG8odDAuY3ggKyB0MC54MDEsIHQwLmN5ICsgdDAueTAxKTtcblxuICAgICAgICAvLyBIYXZlIHRoZSBjb3JuZXJzIG1lcmdlZD9cbiAgICAgICAgaWYgKHJjMSA8IHJjKSBjb250ZXh0LmFyYyh0MC5jeCwgdDAuY3ksIHJjMSwgYXRhbjIodDAueTAxLCB0MC54MDEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG5cbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBkcmF3IHRoZSB0d28gY29ybmVycyBhbmQgdGhlIHJpbmcuXG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMxLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQwLnkxMSwgdDAueDExKSwgIWN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYygwLCAwLCByMSwgYXRhbjIodDAuY3kgKyB0MC55MTEsIHQwLmN4ICsgdDAueDExKSwgYXRhbjIodDEuY3kgKyB0MS55MTEsIHQxLmN4ICsgdDEueDExKSwgIWN3KTtcbiAgICAgICAgICBjb250ZXh0LmFyYyh0MS5jeCwgdDEuY3ksIHJjMSwgYXRhbjIodDEueTExLCB0MS54MTEpLCBhdGFuMih0MS55MDEsIHQxLngwMSksICFjdyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gT3IgaXMgdGhlIG91dGVyIHJpbmcganVzdCBhIGNpcmN1bGFyIGFyYz9cbiAgICAgIGVsc2UgY29udGV4dC5tb3ZlVG8oeDAxLCB5MDEpLCBjb250ZXh0LmFyYygwLCAwLCByMSwgYTAxLCBhMTEsICFjdyk7XG5cbiAgICAgIC8vIElzIHRoZXJlIG5vIGlubmVyIHJpbmcsIGFuZCBpdOKAmXMgYSBjaXJjdWxhciBzZWN0b3I/XG4gICAgICAvLyBPciBwZXJoYXBzIGl04oCZcyBhbiBhbm51bGFyIHNlY3RvciBjb2xsYXBzZWQgZHVlIHRvIHBhZGRpbmc/XG4gICAgICBpZiAoIShyMCA+IGVwc2lsb24pIHx8ICEoZGEwID4gZXBzaWxvbikpIGNvbnRleHQubGluZVRvKHgxMCwgeTEwKTtcblxuICAgICAgLy8gRG9lcyB0aGUgc2VjdG9y4oCZcyBpbm5lciByaW5nIChvciBwb2ludCkgaGF2ZSByb3VuZGVkIGNvcm5lcnM/XG4gICAgICBlbHNlIGlmIChyYzAgPiBlcHNpbG9uKSB7XG4gICAgICAgIHQwID0gY29ybmVyVGFuZ2VudHMoeDEwLCB5MTAsIHgxMSwgeTExLCByMCwgLXJjMCwgY3cpO1xuICAgICAgICB0MSA9IGNvcm5lclRhbmdlbnRzKHgwMSwgeTAxLCB4MDAsIHkwMCwgcjAsIC1yYzAsIGN3KTtcblxuICAgICAgICBjb250ZXh0LmxpbmVUbyh0MC5jeCArIHQwLngwMSwgdDAuY3kgKyB0MC55MDEpO1xuXG4gICAgICAgIC8vIEhhdmUgdGhlIGNvcm5lcnMgbWVyZ2VkP1xuICAgICAgICBpZiAocmMwIDwgcmMpIGNvbnRleHQuYXJjKHQwLmN4LCB0MC5jeSwgcmMwLCBhdGFuMih0MC55MDEsIHQwLngwMSksIGF0YW4yKHQxLnkwMSwgdDEueDAxKSwgIWN3KTtcblxuICAgICAgICAvLyBPdGhlcndpc2UsIGRyYXcgdGhlIHR3byBjb3JuZXJzIGFuZCB0aGUgcmluZy5cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgY29udGV4dC5hcmModDAuY3gsIHQwLmN5LCByYzAsIGF0YW4yKHQwLnkwMSwgdDAueDAxKSwgYXRhbjIodDAueTExLCB0MC54MTEpLCAhY3cpO1xuICAgICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhdGFuMih0MC5jeSArIHQwLnkxMSwgdDAuY3ggKyB0MC54MTEpLCBhdGFuMih0MS5jeSArIHQxLnkxMSwgdDEuY3ggKyB0MS54MTEpLCBjdyk7XG4gICAgICAgICAgY29udGV4dC5hcmModDEuY3gsIHQxLmN5LCByYzAsIGF0YW4yKHQxLnkxMSwgdDEueDExKSwgYXRhbjIodDEueTAxLCB0MS54MDEpLCAhY3cpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIE9yIGlzIHRoZSBpbm5lciByaW5nIGp1c3QgYSBjaXJjdWxhciBhcmM/XG4gICAgICBlbHNlIGNvbnRleHQuYXJjKDAsIDAsIHIwLCBhMTAsIGEwMCwgY3cpO1xuICAgIH1cblxuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG5cbiAgICBpZiAoYnVmZmVyKSByZXR1cm4gY29udGV4dCA9IG51bGwsIGJ1ZmZlciArIFwiXCIgfHwgbnVsbDtcbiAgfVxuXG4gIGFyYy5jZW50cm9pZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciByID0gKCtpbm5lclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK291dGVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMixcbiAgICAgICAgYSA9ICgrc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK2VuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMiAtIHBpIC8gMjtcbiAgICByZXR1cm4gW2NvcyhhKSAqIHIsIHNpbihhKSAqIHJdO1xuICB9O1xuXG4gIGFyYy5pbm5lclJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbm5lclJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogaW5uZXJSYWRpdXM7XG4gIH07XG5cbiAgYXJjLm91dGVyUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG91dGVyUmFkaXVzID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBvdXRlclJhZGl1cztcbiAgfTtcblxuICBhcmMuY29ybmVyUmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNvcm5lclJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogY29ybmVyUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5wYWRSYWRpdXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkUmFkaXVzID0gXyA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmMpIDogcGFkUmFkaXVzO1xuICB9O1xuXG4gIGFyYy5zdGFydEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0YXJ0QW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IHN0YXJ0QW5nbGU7XG4gIH07XG5cbiAgYXJjLmVuZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGVuZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyYykgOiBlbmRBbmdsZTtcbiAgfTtcblxuICBhcmMucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJjKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIGFyYy5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKChjb250ZXh0ID0gXyA9PSBudWxsID8gbnVsbCA6IF8pLCBhcmMpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gYXJjO1xufVxuIiwiaW1wb3J0IHtwYXRofSBmcm9tIFwiZDMtcGF0aFwiO1xuaW1wb3J0IGFycmF5IGZyb20gXCIuL2FycmF5LmpzXCI7XG5pbXBvcnQgY29uc3RhbnQgZnJvbSBcIi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCBjdXJ2ZUxpbmVhciBmcm9tIFwiLi9jdXJ2ZS9saW5lYXIuanNcIjtcbmltcG9ydCBsaW5lIGZyb20gXCIuL2xpbmUuanNcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi9wb2ludC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4MCwgeTAsIHkxKSB7XG4gIHZhciB4MSA9IG51bGwsXG4gICAgICBkZWZpbmVkID0gY29uc3RhbnQodHJ1ZSksXG4gICAgICBjb250ZXh0ID0gbnVsbCxcbiAgICAgIGN1cnZlID0gY3VydmVMaW5lYXIsXG4gICAgICBvdXRwdXQgPSBudWxsO1xuXG4gIHgwID0gdHlwZW9mIHgwID09PSBcImZ1bmN0aW9uXCIgPyB4MCA6ICh4MCA9PT0gdW5kZWZpbmVkKSA/IHBvaW50WCA6IGNvbnN0YW50KCt4MCk7XG4gIHkwID0gdHlwZW9mIHkwID09PSBcImZ1bmN0aW9uXCIgPyB5MCA6ICh5MCA9PT0gdW5kZWZpbmVkKSA/IGNvbnN0YW50KDApIDogY29uc3RhbnQoK3kwKTtcbiAgeTEgPSB0eXBlb2YgeTEgPT09IFwiZnVuY3Rpb25cIiA/IHkxIDogKHkxID09PSB1bmRlZmluZWQpID8gcG9pbnRZIDogY29uc3RhbnQoK3kxKTtcblxuICBmdW5jdGlvbiBhcmVhKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgaixcbiAgICAgICAgayxcbiAgICAgICAgbiA9IChkYXRhID0gYXJyYXkoZGF0YSkpLmxlbmd0aCxcbiAgICAgICAgZCxcbiAgICAgICAgZGVmaW5lZDAgPSBmYWxzZSxcbiAgICAgICAgYnVmZmVyLFxuICAgICAgICB4MHogPSBuZXcgQXJyYXkobiksXG4gICAgICAgIHkweiA9IG5ldyBBcnJheShuKTtcblxuICAgIGlmIChjb250ZXh0ID09IG51bGwpIG91dHB1dCA9IGN1cnZlKGJ1ZmZlciA9IHBhdGgoKSk7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDw9IG47ICsraSkge1xuICAgICAgaWYgKCEoaSA8IG4gJiYgZGVmaW5lZChkID0gZGF0YVtpXSwgaSwgZGF0YSkpID09PSBkZWZpbmVkMCkge1xuICAgICAgICBpZiAoZGVmaW5lZDAgPSAhZGVmaW5lZDApIHtcbiAgICAgICAgICBqID0gaTtcbiAgICAgICAgICBvdXRwdXQuYXJlYVN0YXJ0KCk7XG4gICAgICAgICAgb3V0cHV0LmxpbmVTdGFydCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dHB1dC5saW5lRW5kKCk7XG4gICAgICAgICAgb3V0cHV0LmxpbmVTdGFydCgpO1xuICAgICAgICAgIGZvciAoayA9IGkgLSAxOyBrID49IGo7IC0taykge1xuICAgICAgICAgICAgb3V0cHV0LnBvaW50KHgweltrXSwgeTB6W2tdKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgb3V0cHV0LmxpbmVFbmQoKTtcbiAgICAgICAgICBvdXRwdXQuYXJlYUVuZCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZGVmaW5lZDApIHtcbiAgICAgICAgeDB6W2ldID0gK3gwKGQsIGksIGRhdGEpLCB5MHpbaV0gPSAreTAoZCwgaSwgZGF0YSk7XG4gICAgICAgIG91dHB1dC5wb2ludCh4MSA/ICt4MShkLCBpLCBkYXRhKSA6IHgweltpXSwgeTEgPyAreTEoZCwgaSwgZGF0YSkgOiB5MHpbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChidWZmZXIpIHJldHVybiBvdXRwdXQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiBhcmVhbGluZSgpIHtcbiAgICByZXR1cm4gbGluZSgpLmRlZmluZWQoZGVmaW5lZCkuY3VydmUoY3VydmUpLmNvbnRleHQoY29udGV4dCk7XG4gIH1cblxuICBhcmVhLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDAgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgeDEgPSBudWxsLCBhcmVhKSA6IHgwO1xuICB9O1xuXG4gIGFyZWEueDAgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeDAgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgYXJlYSkgOiB4MDtcbiAgfTtcblxuICBhcmVhLngxID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHgxID0gXyA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmVhKSA6IHgxO1xuICB9O1xuXG4gIGFyZWEueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCB5MSA9IG51bGwsIGFyZWEpIDogeTA7XG4gIH07XG5cbiAgYXJlYS55MCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5MCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBhcmVhKSA6IHkwO1xuICB9O1xuXG4gIGFyZWEueTEgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeTEgPSBfID09IG51bGwgPyBudWxsIDogdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGFyZWEpIDogeTE7XG4gIH07XG5cbiAgYXJlYS5saW5lWDAgPVxuICBhcmVhLmxpbmVZMCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBhcmVhbGluZSgpLngoeDApLnkoeTApO1xuICB9O1xuXG4gIGFyZWEubGluZVkxID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGFyZWFsaW5lKCkueCh4MCkueSh5MSk7XG4gIH07XG5cbiAgYXJlYS5saW5lWDEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gYXJlYWxpbmUoKS54KHgxKS55KHkwKTtcbiAgfTtcblxuICBhcmVhLmRlZmluZWQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZGVmaW5lZCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgYXJlYSkgOiBkZWZpbmVkO1xuICB9O1xuXG4gIGFyZWEuY3VydmUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY3VydmUgPSBfLCBjb250ZXh0ICE9IG51bGwgJiYgKG91dHB1dCA9IGN1cnZlKGNvbnRleHQpKSwgYXJlYSkgOiBjdXJ2ZTtcbiAgfTtcblxuICBhcmVhLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoXyA9PSBudWxsID8gY29udGV4dCA9IG91dHB1dCA9IG51bGwgOiBvdXRwdXQgPSBjdXJ2ZShjb250ZXh0ID0gXyksIGFyZWEpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gYXJlYTtcbn1cbiIsImltcG9ydCBjdXJ2ZVJhZGlhbCwge2N1cnZlUmFkaWFsTGluZWFyfSBmcm9tIFwiLi9jdXJ2ZS9yYWRpYWwuanNcIjtcbmltcG9ydCBhcmVhIGZyb20gXCIuL2FyZWEuanNcIjtcbmltcG9ydCB7bGluZVJhZGlhbH0gZnJvbSBcIi4vbGluZVJhZGlhbC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgdmFyIGEgPSBhcmVhKCkuY3VydmUoY3VydmVSYWRpYWxMaW5lYXIpLFxuICAgICAgYyA9IGEuY3VydmUsXG4gICAgICB4MCA9IGEubGluZVgwLFxuICAgICAgeDEgPSBhLmxpbmVYMSxcbiAgICAgIHkwID0gYS5saW5lWTAsXG4gICAgICB5MSA9IGEubGluZVkxO1xuXG4gIGEuYW5nbGUgPSBhLngsIGRlbGV0ZSBhLng7XG4gIGEuc3RhcnRBbmdsZSA9IGEueDAsIGRlbGV0ZSBhLngwO1xuICBhLmVuZEFuZ2xlID0gYS54MSwgZGVsZXRlIGEueDE7XG4gIGEucmFkaXVzID0gYS55LCBkZWxldGUgYS55O1xuICBhLmlubmVyUmFkaXVzID0gYS55MCwgZGVsZXRlIGEueTA7XG4gIGEub3V0ZXJSYWRpdXMgPSBhLnkxLCBkZWxldGUgYS55MTtcbiAgYS5saW5lU3RhcnRBbmdsZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh4MCgpKTsgfSwgZGVsZXRlIGEubGluZVgwO1xuICBhLmxpbmVFbmRBbmdsZSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh4MSgpKTsgfSwgZGVsZXRlIGEubGluZVgxO1xuICBhLmxpbmVJbm5lclJhZGl1cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh5MCgpKTsgfSwgZGVsZXRlIGEubGluZVkwO1xuICBhLmxpbmVPdXRlclJhZGl1cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gbGluZVJhZGlhbCh5MSgpKTsgfSwgZGVsZXRlIGEubGluZVkxO1xuXG4gIGEuY3VydmUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBjKGN1cnZlUmFkaWFsKF8pKSA6IGMoKS5fY3VydmU7XG4gIH07XG5cbiAgcmV0dXJuIGE7XG59XG4iLCJleHBvcnQgdmFyIHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB0eXBlb2YgeCA9PT0gXCJvYmplY3RcIiAmJiBcImxlbmd0aFwiIGluIHhcbiAgICA/IHggLy8gQXJyYXksIFR5cGVkQXJyYXksIE5vZGVMaXN0LCBhcnJheS1saWtlXG4gICAgOiBBcnJheS5mcm9tKHgpOyAvLyBNYXAsIFNldCwgaXRlcmFibGUsIHN0cmluZywgb3IgYW55dGhpbmcgZWxzZVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gZnVuY3Rpb24gY29uc3RhbnQoKSB7XG4gICAgcmV0dXJuIHg7XG4gIH07XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gcG9pbnQodGhhdCwgeCwgeSkge1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oXG4gICAgKDIgKiB0aGF0Ll94MCArIHRoYXQuX3gxKSAvIDMsXG4gICAgKDIgKiB0aGF0Ll95MCArIHRoYXQuX3kxKSAvIDMsXG4gICAgKHRoYXQuX3gwICsgMiAqIHRoYXQuX3gxKSAvIDMsXG4gICAgKHRoYXQuX3kwICsgMiAqIHRoYXQuX3kxKSAvIDMsXG4gICAgKHRoYXQuX3gwICsgNCAqIHRoYXQuX3gxICsgeCkgLyA2LFxuICAgICh0aGF0Ll95MCArIDQgKiB0aGF0Ll95MSArIHkpIC8gNlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQmFzaXMoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuQmFzaXMucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDM6IHBvaW50KHRoaXMsIHRoaXMuX3gxLCB0aGlzLl95MSk7IC8vIHByb2NlZWRcbiAgICAgIGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsIHRoaXMuX3kxKTsgYnJlYWs7XG4gICAgfVxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9jb250ZXh0LmxpbmVUbygoNSAqIHRoaXMuX3gwICsgdGhpcy5feDEpIC8gNiwgKDUgKiB0aGlzLl95MCArIHRoaXMuX3kxKSAvIDYpOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBCYXNpcyhjb250ZXh0KTtcbn1cbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9iYXNpcy5qc1wiO1xuXG5mdW5jdGlvbiBCYXNpc0Nsb3NlZChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5CYXNpc0Nsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKCh0aGlzLl94MiArIDIgKiB0aGlzLl94MykgLyAzLCAodGhpcy5feTIgKyAyICogdGhpcy5feTMpIC8gMyk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKCh0aGlzLl94MyArIDIgKiB0aGlzLl94MikgLyAzLCAodGhpcy5feTMgKyAyICogdGhpcy5feTIpIC8gMyk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAzOiB7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDIsIHRoaXMuX3kyKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g0LCB0aGlzLl95NCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5feDIgPSB4LCB0aGlzLl95MiA9IHk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geTsgdGhpcy5fY29udGV4dC5tb3ZlVG8oKHRoaXMuX3gwICsgNCAqIHRoaXMuX3gxICsgeCkgLyA2LCAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyB5KSAvIDYpOyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IEJhc2lzQ2xvc2VkKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vYmFzaXMuanNcIjtcblxuZnVuY3Rpb24gQmFzaXNPcGVuKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkJhc2lzT3Blbi5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAzKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHZhciB4MCA9ICh0aGlzLl94MCArIDQgKiB0aGlzLl94MSArIHgpIC8gNiwgeTAgPSAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyB5KSAvIDY7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4MCwgeTApIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeDAsIHkwKTsgYnJlYWs7XG4gICAgICBjYXNlIDM6IHRoaXMuX3BvaW50ID0gNDsgLy8gcHJvY2VlZFxuICAgICAgZGVmYXVsdDogcG9pbnQodGhpcywgeCwgeSk7IGJyZWFrO1xuICAgIH1cbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHg7XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgQmFzaXNPcGVuKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IHtCYXNpc30gZnJvbSBcIi4vYmFzaXMuanNcIjtcblxuZnVuY3Rpb24gQnVuZGxlKGNvbnRleHQsIGJldGEpIHtcbiAgdGhpcy5fYmFzaXMgPSBuZXcgQmFzaXMoY29udGV4dCk7XG4gIHRoaXMuX2JldGEgPSBiZXRhO1xufVxuXG5CdW5kbGUucHJvdG90eXBlID0ge1xuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3ggPSBbXTtcbiAgICB0aGlzLl95ID0gW107XG4gICAgdGhpcy5fYmFzaXMubGluZVN0YXJ0KCk7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB4ID0gdGhpcy5feCxcbiAgICAgICAgeSA9IHRoaXMuX3ksXG4gICAgICAgIGogPSB4Lmxlbmd0aCAtIDE7XG5cbiAgICBpZiAoaiA+IDApIHtcbiAgICAgIHZhciB4MCA9IHhbMF0sXG4gICAgICAgICAgeTAgPSB5WzBdLFxuICAgICAgICAgIGR4ID0geFtqXSAtIHgwLFxuICAgICAgICAgIGR5ID0geVtqXSAtIHkwLFxuICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICB0O1xuXG4gICAgICB3aGlsZSAoKytpIDw9IGopIHtcbiAgICAgICAgdCA9IGkgLyBqO1xuICAgICAgICB0aGlzLl9iYXNpcy5wb2ludChcbiAgICAgICAgICB0aGlzLl9iZXRhICogeFtpXSArICgxIC0gdGhpcy5fYmV0YSkgKiAoeDAgKyB0ICogZHgpLFxuICAgICAgICAgIHRoaXMuX2JldGEgKiB5W2ldICsgKDEgLSB0aGlzLl9iZXRhKSAqICh5MCArIHQgKiBkeSlcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLl94ID0gdGhpcy5feSA9IG51bGw7XG4gICAgdGhpcy5fYmFzaXMubGluZUVuZCgpO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHRoaXMuX3gucHVzaCgreCk7XG4gICAgdGhpcy5feS5wdXNoKCt5KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbShiZXRhKSB7XG5cbiAgZnVuY3Rpb24gYnVuZGxlKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYmV0YSA9PT0gMSA/IG5ldyBCYXNpcyhjb250ZXh0KSA6IG5ldyBCdW5kbGUoY29udGV4dCwgYmV0YSk7XG4gIH1cblxuICBidW5kbGUuYmV0YSA9IGZ1bmN0aW9uKGJldGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCtiZXRhKTtcbiAgfTtcblxuICByZXR1cm4gYnVuZGxlO1xufSkoMC44NSk7XG4iLCJleHBvcnQgZnVuY3Rpb24gcG9pbnQodGhhdCwgeCwgeSkge1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oXG4gICAgdGhhdC5feDEgKyB0aGF0Ll9rICogKHRoYXQuX3gyIC0gdGhhdC5feDApLFxuICAgIHRoYXQuX3kxICsgdGhhdC5fayAqICh0aGF0Ll95MiAtIHRoYXQuX3kwKSxcbiAgICB0aGF0Ll94MiArIHRoYXQuX2sgKiAodGhhdC5feDEgLSB4KSxcbiAgICB0aGF0Ll95MiArIHRoYXQuX2sgKiAodGhhdC5feTEgLSB5KSxcbiAgICB0aGF0Ll94MixcbiAgICB0aGF0Ll95MlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZGluYWwoY29udGV4dCwgdGVuc2lvbikge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fayA9ICgxIC0gdGVuc2lvbikgLyA2O1xufVxuXG5DYXJkaW5hbC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiBwb2ludCh0aGlzLCB0aGlzLl94MSwgdGhpcy5feTEpOyBicmVhaztcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IHRoaXMuX3gxID0geCwgdGhpcy5feTEgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiBwb2ludCh0aGlzLCB4LCB5KTsgYnJlYWs7XG4gICAgfVxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20odGVuc2lvbikge1xuXG4gIGZ1bmN0aW9uIGNhcmRpbmFsKGNvbnRleHQpIHtcbiAgICByZXR1cm4gbmV3IENhcmRpbmFsKGNvbnRleHQsIHRlbnNpb24pO1xuICB9XG5cbiAgY2FyZGluYWwudGVuc2lvbiA9IGZ1bmN0aW9uKHRlbnNpb24pIHtcbiAgICByZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKTtcbiAgfTtcblxuICByZXR1cm4gY2FyZGluYWw7XG59KSgwKTtcbiIsImltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXJkaW5hbC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgdGVuc2lvbikge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fayA9ICgxIC0gdGVuc2lvbikgLyA2O1xufVxuXG5DYXJkaW5hbENsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID0gdGhpcy5feDUgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSB0aGlzLl95NSA9IE5hTjtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMToge1xuICAgICAgICB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMjoge1xuICAgICAgICB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MywgdGhpcy5feTMpO1xuICAgICAgICB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgMzoge1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDQsIHRoaXMuX3k0KTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NSwgdGhpcy5feTUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geSk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX3g1ID0geCwgdGhpcy5feTUgPSB5OyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKSB7XG5cbiAgZnVuY3Rpb24gY2FyZGluYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgdGVuc2lvbik7XG4gIH1cblxuICBjYXJkaW5hbC50ZW5zaW9uID0gZnVuY3Rpb24odGVuc2lvbikge1xuICAgIHJldHVybiBjdXN0b20oK3RlbnNpb24pO1xuICB9O1xuXG4gIHJldHVybiBjYXJkaW5hbDtcbn0pKDApO1xuIiwiaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2FyZGluYWwuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIENhcmRpbmFsT3Blbihjb250ZXh0LCB0ZW5zaW9uKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9rID0gKDEgLSB0ZW5zaW9uKSAvIDY7XG59XG5cbkNhcmRpbmFsT3Blbi5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMykpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB4O1xuICAgIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0geTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIGN1c3RvbSh0ZW5zaW9uKSB7XG5cbiAgZnVuY3Rpb24gY2FyZGluYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgQ2FyZGluYWxPcGVuKGNvbnRleHQsIHRlbnNpb24pO1xuICB9XG5cbiAgY2FyZGluYWwudGVuc2lvbiA9IGZ1bmN0aW9uKHRlbnNpb24pIHtcbiAgICByZXR1cm4gY3VzdG9tKCt0ZW5zaW9uKTtcbiAgfTtcblxuICByZXR1cm4gY2FyZGluYWw7XG59KSgwKTtcbiIsImltcG9ydCB7ZXBzaWxvbn0gZnJvbSBcIi4uL21hdGguanNcIjtcbmltcG9ydCB7Q2FyZGluYWx9IGZyb20gXCIuL2NhcmRpbmFsLmpzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwb2ludCh0aGF0LCB4LCB5KSB7XG4gIHZhciB4MSA9IHRoYXQuX3gxLFxuICAgICAgeTEgPSB0aGF0Ll95MSxcbiAgICAgIHgyID0gdGhhdC5feDIsXG4gICAgICB5MiA9IHRoYXQuX3kyO1xuXG4gIGlmICh0aGF0Ll9sMDFfYSA+IGVwc2lsb24pIHtcbiAgICB2YXIgYSA9IDIgKiB0aGF0Ll9sMDFfMmEgKyAzICogdGhhdC5fbDAxX2EgKiB0aGF0Ll9sMTJfYSArIHRoYXQuX2wxMl8yYSxcbiAgICAgICAgbiA9IDMgKiB0aGF0Ll9sMDFfYSAqICh0aGF0Ll9sMDFfYSArIHRoYXQuX2wxMl9hKTtcbiAgICB4MSA9ICh4MSAqIGEgLSB0aGF0Ll94MCAqIHRoYXQuX2wxMl8yYSArIHRoYXQuX3gyICogdGhhdC5fbDAxXzJhKSAvIG47XG4gICAgeTEgPSAoeTEgKiBhIC0gdGhhdC5feTAgKiB0aGF0Ll9sMTJfMmEgKyB0aGF0Ll95MiAqIHRoYXQuX2wwMV8yYSkgLyBuO1xuICB9XG5cbiAgaWYgKHRoYXQuX2wyM19hID4gZXBzaWxvbikge1xuICAgIHZhciBiID0gMiAqIHRoYXQuX2wyM18yYSArIDMgKiB0aGF0Ll9sMjNfYSAqIHRoYXQuX2wxMl9hICsgdGhhdC5fbDEyXzJhLFxuICAgICAgICBtID0gMyAqIHRoYXQuX2wyM19hICogKHRoYXQuX2wyM19hICsgdGhhdC5fbDEyX2EpO1xuICAgIHgyID0gKHgyICogYiArIHRoYXQuX3gxICogdGhhdC5fbDIzXzJhIC0geCAqIHRoYXQuX2wxMl8yYSkgLyBtO1xuICAgIHkyID0gKHkyICogYiArIHRoYXQuX3kxICogdGhhdC5fbDIzXzJhIC0geSAqIHRoYXQuX2wxMl8yYSkgLyBtO1xuICB9XG5cbiAgdGhhdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgxLCB5MSwgeDIsIHkyLCB0aGF0Ll94MiwgdGhhdC5feTIpO1xufVxuXG5mdW5jdGlvbiBDYXRtdWxsUm9tKGNvbnRleHQsIGFscGhhKSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl9hbHBoYSA9IGFscGhhO1xufVxuXG5DYXRtdWxsUm9tLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTjtcbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EgPVxuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSA9XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLnBvaW50KHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgIH1cbiAgICBpZiAodGhpcy5fbGluZSB8fCAodGhpcy5fbGluZSAhPT0gMCAmJiB0aGlzLl9wb2ludCA9PT0gMSkpIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lO1xuICB9LFxuICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgIHggPSAreCwgeSA9ICt5O1xuXG4gICAgaWYgKHRoaXMuX3BvaW50KSB7XG4gICAgICB2YXIgeDIzID0gdGhpcy5feDIgLSB4LFxuICAgICAgICAgIHkyMyA9IHRoaXMuX3kyIC0geTtcbiAgICAgIHRoaXMuX2wyM19hID0gTWF0aC5zcXJ0KHRoaXMuX2wyM18yYSA9IE1hdGgucG93KHgyMyAqIHgyMyArIHkyMyAqIHkyMywgdGhpcy5fYWxwaGEpKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbShjb250ZXh0LCBhbHBoYSkgOiBuZXcgQ2FyZGluYWwoY29udGV4dCwgMCk7XG4gIH1cblxuICBjYXRtdWxsUm9tLmFscGhhID0gZnVuY3Rpb24oYWxwaGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCthbHBoYSk7XG4gIH07XG5cbiAgcmV0dXJuIGNhdG11bGxSb207XG59KSgwLjUpO1xuIiwiaW1wb3J0IHtDYXJkaW5hbENsb3NlZH0gZnJvbSBcIi4vY2FyZGluYWxDbG9zZWQuanNcIjtcbmltcG9ydCBub29wIGZyb20gXCIuLi9ub29wLmpzXCI7XG5pbXBvcnQge3BvaW50fSBmcm9tIFwiLi9jYXRtdWxsUm9tLmpzXCI7XG5cbmZ1bmN0aW9uIENhdG11bGxSb21DbG9zZWQoY29udGV4dCwgYWxwaGEpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG4gIHRoaXMuX2FscGhhID0gYWxwaGE7XG59XG5cbkNhdG11bGxSb21DbG9zZWQucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IG5vb3AsXG4gIGFyZWFFbmQ6IG5vb3AsXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feDMgPSB0aGlzLl94NCA9IHRoaXMuX3g1ID1cbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gdGhpcy5feTUgPSBOYU47XG4gICAgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hID1cbiAgICB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEgPVxuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAxOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAyOiB7XG4gICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLCB0aGlzLl95Myk7XG4gICAgICAgIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAzOiB7XG4gICAgICAgIHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKTtcbiAgICAgICAgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpO1xuICAgICAgICB0aGlzLnBvaW50KHRoaXMuX3g1LCB0aGlzLl95NSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcblxuICAgIGlmICh0aGlzLl9wb2ludCkge1xuICAgICAgdmFyIHgyMyA9IHRoaXMuX3gyIC0geCxcbiAgICAgICAgICB5MjMgPSB0aGlzLl95MiAtIHk7XG4gICAgICB0aGlzLl9sMjNfYSA9IE1hdGguc3FydCh0aGlzLl9sMjNfMmEgPSBNYXRoLnBvdyh4MjMgKiB4MjMgKyB5MjMgKiB5MjMsIHRoaXMuX2FscGhhKSk7XG4gICAgfVxuXG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX3gzID0geCwgdGhpcy5feTMgPSB5OyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94NCA9IHgsIHRoaXMuX3k0ID0geSk7IGJyZWFrO1xuICAgICAgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHRoaXMuX3g1ID0geCwgdGhpcy5feTUgPSB5OyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbUNsb3NlZChjb250ZXh0LCBhbHBoYSkgOiBuZXcgQ2FyZGluYWxDbG9zZWQoY29udGV4dCwgMCk7XG4gIH1cblxuICBjYXRtdWxsUm9tLmFscGhhID0gZnVuY3Rpb24oYWxwaGEpIHtcbiAgICByZXR1cm4gY3VzdG9tKCthbHBoYSk7XG4gIH07XG5cbiAgcmV0dXJuIGNhdG11bGxSb207XG59KSgwLjUpO1xuIiwiaW1wb3J0IHtDYXJkaW5hbE9wZW59IGZyb20gXCIuL2NhcmRpbmFsT3Blbi5qc1wiO1xuaW1wb3J0IHtwb2ludH0gZnJvbSBcIi4vY2F0bXVsbFJvbS5qc1wiO1xuXG5mdW5jdGlvbiBDYXRtdWxsUm9tT3Blbihjb250ZXh0LCBhbHBoYSkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgdGhpcy5fYWxwaGEgPSBhbHBoYTtcbn1cblxuQ2F0bXVsbFJvbU9wZW4ucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9XG4gICAgdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOO1xuICAgIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSA9XG4gICAgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhID1cbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAzKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG5cbiAgICBpZiAodGhpcy5fcG9pbnQpIHtcbiAgICAgIHZhciB4MjMgPSB0aGlzLl94MiAtIHgsXG4gICAgICAgICAgeTIzID0gdGhpcy5feTIgLSB5O1xuICAgICAgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coeDIzICogeDIzICsgeTIzICogeTIzLCB0aGlzLl9hbHBoYSkpO1xuICAgIH1cblxuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhaztcbiAgICAgIGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrO1xuICAgICAgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHgsIHkpOyBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hO1xuICAgIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhO1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IHk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiBjdXN0b20oYWxwaGEpIHtcblxuICBmdW5jdGlvbiBjYXRtdWxsUm9tKGNvbnRleHQpIHtcbiAgICByZXR1cm4gYWxwaGEgPyBuZXcgQ2F0bXVsbFJvbU9wZW4oY29udGV4dCwgYWxwaGEpIDogbmV3IENhcmRpbmFsT3Blbihjb250ZXh0LCAwKTtcbiAgfVxuXG4gIGNhdG11bGxSb20uYWxwaGEgPSBmdW5jdGlvbihhbHBoYSkge1xuICAgIHJldHVybiBjdXN0b20oK2FscGhhKTtcbiAgfTtcblxuICByZXR1cm4gY2F0bXVsbFJvbTtcbn0pKDAuNSk7XG4iLCJmdW5jdGlvbiBMaW5lYXIoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuTGluZWFyLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gMDtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IE5hTjtcbiAgfSxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmU7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgeCA9ICt4LCB5ID0gK3k7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHgsIHkpOyBicmVhaztcbiAgICAgIGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyAvLyBwcm9jZWVkXG4gICAgICBkZWZhdWx0OiB0aGlzLl9jb250ZXh0LmxpbmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgTGluZWFyKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IG5vb3AgZnJvbSBcIi4uL25vb3AuanNcIjtcblxuZnVuY3Rpb24gTGluZWFyQ2xvc2VkKGNvbnRleHQpIHtcbiAgdGhpcy5fY29udGV4dCA9IGNvbnRleHQ7XG59XG5cbkxpbmVhckNsb3NlZC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogbm9vcCxcbiAgYXJlYUVuZDogbm9vcCxcbiAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wb2ludCA9IDA7XG4gIH0sXG4gIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9wb2ludCkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBpZiAodGhpcy5fcG9pbnQpIHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpO1xuICAgIGVsc2UgdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oY29udGV4dCkge1xuICByZXR1cm4gbmV3IExpbmVhckNsb3NlZChjb250ZXh0KTtcbn1cbiIsImZ1bmN0aW9uIHNpZ24oeCkge1xuICByZXR1cm4geCA8IDAgPyAtMSA6IDE7XG59XG5cbi8vIENhbGN1bGF0ZSB0aGUgc2xvcGVzIG9mIHRoZSB0YW5nZW50cyAoSGVybWl0ZS10eXBlIGludGVycG9sYXRpb24pIGJhc2VkIG9uXG4vLyB0aGUgZm9sbG93aW5nIHBhcGVyOiBTdGVmZmVuLCBNLiAxOTkwLiBBIFNpbXBsZSBNZXRob2QgZm9yIE1vbm90b25pY1xuLy8gSW50ZXJwb2xhdGlvbiBpbiBPbmUgRGltZW5zaW9uLiBBc3Ryb25vbXkgYW5kIEFzdHJvcGh5c2ljcywgVm9sLiAyMzksIE5PLlxuLy8gTk9WKElJKSwgUC4gNDQzLCAxOTkwLlxuZnVuY3Rpb24gc2xvcGUzKHRoYXQsIHgyLCB5Mikge1xuICB2YXIgaDAgPSB0aGF0Ll94MSAtIHRoYXQuX3gwLFxuICAgICAgaDEgPSB4MiAtIHRoYXQuX3gxLFxuICAgICAgczAgPSAodGhhdC5feTEgLSB0aGF0Ll95MCkgLyAoaDAgfHwgaDEgPCAwICYmIC0wKSxcbiAgICAgIHMxID0gKHkyIC0gdGhhdC5feTEpIC8gKGgxIHx8IGgwIDwgMCAmJiAtMCksXG4gICAgICBwID0gKHMwICogaDEgKyBzMSAqIGgwKSAvIChoMCArIGgxKTtcbiAgcmV0dXJuIChzaWduKHMwKSArIHNpZ24oczEpKSAqIE1hdGgubWluKE1hdGguYWJzKHMwKSwgTWF0aC5hYnMoczEpLCAwLjUgKiBNYXRoLmFicyhwKSkgfHwgMDtcbn1cblxuLy8gQ2FsY3VsYXRlIGEgb25lLXNpZGVkIHNsb3BlLlxuZnVuY3Rpb24gc2xvcGUyKHRoYXQsIHQpIHtcbiAgdmFyIGggPSB0aGF0Ll94MSAtIHRoYXQuX3gwO1xuICByZXR1cm4gaCA/ICgzICogKHRoYXQuX3kxIC0gdGhhdC5feTApIC8gaCAtIHQpIC8gMiA6IHQ7XG59XG5cbi8vIEFjY29yZGluZyB0byBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DdWJpY19IZXJtaXRlX3NwbGluZSNSZXByZXNlbnRhdGlvbnNcbi8vIFwieW91IGNhbiBleHByZXNzIGN1YmljIEhlcm1pdGUgaW50ZXJwb2xhdGlvbiBpbiB0ZXJtcyBvZiBjdWJpYyBCw6l6aWVyIGN1cnZlc1xuLy8gd2l0aCByZXNwZWN0IHRvIHRoZSBmb3VyIHZhbHVlcyBwMCwgcDAgKyBtMCAvIDMsIHAxIC0gbTEgLyAzLCBwMVwiLlxuZnVuY3Rpb24gcG9pbnQodGhhdCwgdDAsIHQxKSB7XG4gIHZhciB4MCA9IHRoYXQuX3gwLFxuICAgICAgeTAgPSB0aGF0Ll95MCxcbiAgICAgIHgxID0gdGhhdC5feDEsXG4gICAgICB5MSA9IHRoYXQuX3kxLFxuICAgICAgZHggPSAoeDEgLSB4MCkgLyAzO1xuICB0aGF0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oeDAgKyBkeCwgeTAgKyBkeCAqIHQwLCB4MSAtIGR4LCB5MSAtIGR4ICogdDEsIHgxLCB5MSk7XG59XG5cbmZ1bmN0aW9uIE1vbm90b25lWChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5Nb25vdG9uZVgucHJvdG90eXBlID0ge1xuICBhcmVhU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSAwO1xuICB9LFxuICBhcmVhRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9saW5lID0gTmFOO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3gwID0gdGhpcy5feDEgPVxuICAgIHRoaXMuX3kwID0gdGhpcy5feTEgPVxuICAgIHRoaXMuX3QwID0gTmFOO1xuICAgIHRoaXMuX3BvaW50ID0gMDtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgc3dpdGNoICh0aGlzLl9wb2ludCkge1xuICAgICAgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSwgdGhpcy5feTEpOyBicmVhaztcbiAgICAgIGNhc2UgMzogcG9pbnQodGhpcywgdGhpcy5fdDAsIHNsb3BlMih0aGlzLCB0aGlzLl90MCkpOyBicmVhaztcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xpbmUgfHwgKHRoaXMuX2xpbmUgIT09IDAgJiYgdGhpcy5fcG9pbnQgPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB2YXIgdDEgPSBOYU47XG5cbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBpZiAoeCA9PT0gdGhpcy5feDEgJiYgeSA9PT0gdGhpcy5feTEpIHJldHVybjsgLy8gSWdub3JlIGNvaW5jaWRlbnQgcG9pbnRzLlxuICAgIHN3aXRjaCAodGhpcy5fcG9pbnQpIHtcbiAgICAgIGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oeCwgeSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh4LCB5KTsgYnJlYWs7XG4gICAgICBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgcG9pbnQodGhpcywgc2xvcGUyKHRoaXMsIHQxID0gc2xvcGUzKHRoaXMsIHgsIHkpKSwgdDEpOyBicmVhaztcbiAgICAgIGRlZmF1bHQ6IHBvaW50KHRoaXMsIHRoaXMuX3QwLCB0MSA9IHNsb3BlMyh0aGlzLCB4LCB5KSk7IGJyZWFrO1xuICAgIH1cblxuICAgIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0geDtcbiAgICB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHk7XG4gICAgdGhpcy5fdDAgPSB0MTtcbiAgfVxufVxuXG5mdW5jdGlvbiBNb25vdG9uZVkoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gbmV3IFJlZmxlY3RDb250ZXh0KGNvbnRleHQpO1xufVxuXG4oTW9ub3RvbmVZLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoTW9ub3RvbmVYLnByb3RvdHlwZSkpLnBvaW50ID0gZnVuY3Rpb24oeCwgeSkge1xuICBNb25vdG9uZVgucHJvdG90eXBlLnBvaW50LmNhbGwodGhpcywgeSwgeCk7XG59O1xuXG5mdW5jdGlvbiBSZWZsZWN0Q29udGV4dChjb250ZXh0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xufVxuXG5SZWZsZWN0Q29udGV4dC5wcm90b3R5cGUgPSB7XG4gIG1vdmVUbzogZnVuY3Rpb24oeCwgeSkgeyB0aGlzLl9jb250ZXh0Lm1vdmVUbyh5LCB4KTsgfSxcbiAgY2xvc2VQYXRoOiBmdW5jdGlvbigpIHsgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTsgfSxcbiAgbGluZVRvOiBmdW5jdGlvbih4LCB5KSB7IHRoaXMuX2NvbnRleHQubGluZVRvKHksIHgpOyB9LFxuICBiZXppZXJDdXJ2ZVRvOiBmdW5jdGlvbih4MSwgeTEsIHgyLCB5MiwgeCwgeSkgeyB0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8oeTEsIHgxLCB5MiwgeDIsIHksIHgpOyB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gbW9ub3RvbmVYKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBNb25vdG9uZVgoY29udGV4dCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb25vdG9uZVkoY29udGV4dCkge1xuICByZXR1cm4gbmV3IE1vbm90b25lWShjb250ZXh0KTtcbn1cbiIsImZ1bmN0aW9uIE5hdHVyYWwoY29udGV4dCkge1xuICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbn1cblxuTmF0dXJhbC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feCA9IFtdO1xuICAgIHRoaXMuX3kgPSBbXTtcbiAgfSxcbiAgbGluZUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdmFyIHggPSB0aGlzLl94LFxuICAgICAgICB5ID0gdGhpcy5feSxcbiAgICAgICAgbiA9IHgubGVuZ3RoO1xuXG4gICAgaWYgKG4pIHtcbiAgICAgIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh4WzBdLCB5WzBdKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHhbMF0sIHlbMF0pO1xuICAgICAgaWYgKG4gPT09IDIpIHtcbiAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeFsxXSwgeVsxXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcHggPSBjb250cm9sUG9pbnRzKHgpLFxuICAgICAgICAgICAgcHkgPSBjb250cm9sUG9pbnRzKHkpO1xuICAgICAgICBmb3IgKHZhciBpMCA9IDAsIGkxID0gMTsgaTEgPCBuOyArK2kwLCArK2kxKSB7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHB4WzBdW2kwXSwgcHlbMF1baTBdLCBweFsxXVtpMF0sIHB5WzFdW2kwXSwgeFtpMV0sIHlbaTFdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIG4gPT09IDEpKSB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgICB0aGlzLl94ID0gdGhpcy5feSA9IG51bGw7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgdGhpcy5feC5wdXNoKCt4KTtcbiAgICB0aGlzLl95LnB1c2goK3kpO1xuICB9XG59O1xuXG4vLyBTZWUgaHR0cHM6Ly93d3cucGFydGljbGVpbmNlbGwuY29tLzIwMTIvYmV6aWVyLXNwbGluZXMvIGZvciBkZXJpdmF0aW9uLlxuZnVuY3Rpb24gY29udHJvbFBvaW50cyh4KSB7XG4gIHZhciBpLFxuICAgICAgbiA9IHgubGVuZ3RoIC0gMSxcbiAgICAgIG0sXG4gICAgICBhID0gbmV3IEFycmF5KG4pLFxuICAgICAgYiA9IG5ldyBBcnJheShuKSxcbiAgICAgIHIgPSBuZXcgQXJyYXkobik7XG4gIGFbMF0gPSAwLCBiWzBdID0gMiwgclswXSA9IHhbMF0gKyAyICogeFsxXTtcbiAgZm9yIChpID0gMTsgaSA8IG4gLSAxOyArK2kpIGFbaV0gPSAxLCBiW2ldID0gNCwgcltpXSA9IDQgKiB4W2ldICsgMiAqIHhbaSArIDFdO1xuICBhW24gLSAxXSA9IDIsIGJbbiAtIDFdID0gNywgcltuIC0gMV0gPSA4ICogeFtuIC0gMV0gKyB4W25dO1xuICBmb3IgKGkgPSAxOyBpIDwgbjsgKytpKSBtID0gYVtpXSAvIGJbaSAtIDFdLCBiW2ldIC09IG0sIHJbaV0gLT0gbSAqIHJbaSAtIDFdO1xuICBhW24gLSAxXSA9IHJbbiAtIDFdIC8gYltuIC0gMV07XG4gIGZvciAoaSA9IG4gLSAyOyBpID49IDA7IC0taSkgYVtpXSA9IChyW2ldIC0gYVtpICsgMV0pIC8gYltpXTtcbiAgYltuIC0gMV0gPSAoeFtuXSArIGFbbiAtIDFdKSAvIDI7XG4gIGZvciAoaSA9IDA7IGkgPCBuIC0gMTsgKytpKSBiW2ldID0gMiAqIHhbaSArIDFdIC0gYVtpICsgMV07XG4gIHJldHVybiBbYSwgYl07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNvbnRleHQpIHtcbiAgcmV0dXJuIG5ldyBOYXR1cmFsKGNvbnRleHQpO1xufVxuIiwiaW1wb3J0IGN1cnZlTGluZWFyIGZyb20gXCIuL2xpbmVhci5qc1wiO1xuXG5leHBvcnQgdmFyIGN1cnZlUmFkaWFsTGluZWFyID0gY3VydmVSYWRpYWwoY3VydmVMaW5lYXIpO1xuXG5mdW5jdGlvbiBSYWRpYWwoY3VydmUpIHtcbiAgdGhpcy5fY3VydmUgPSBjdXJ2ZTtcbn1cblxuUmFkaWFsLnByb3RvdHlwZSA9IHtcbiAgYXJlYVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jdXJ2ZS5hcmVhU3RhcnQoKTtcbiAgfSxcbiAgYXJlYUVuZDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fY3VydmUuYXJlYUVuZCgpO1xuICB9LFxuICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2N1cnZlLmxpbmVTdGFydCgpO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9jdXJ2ZS5saW5lRW5kKCk7XG4gIH0sXG4gIHBvaW50OiBmdW5jdGlvbihhLCByKSB7XG4gICAgdGhpcy5fY3VydmUucG9pbnQociAqIE1hdGguc2luKGEpLCByICogLU1hdGguY29zKGEpKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3VydmVSYWRpYWwoY3VydmUpIHtcblxuICBmdW5jdGlvbiByYWRpYWwoY29udGV4dCkge1xuICAgIHJldHVybiBuZXcgUmFkaWFsKGN1cnZlKGNvbnRleHQpKTtcbiAgfVxuXG4gIHJhZGlhbC5fY3VydmUgPSBjdXJ2ZTtcblxuICByZXR1cm4gcmFkaWFsO1xufVxuIiwiZnVuY3Rpb24gU3RlcChjb250ZXh0LCB0KSB7XG4gIHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLl90ID0gdDtcbn1cblxuU3RlcC5wcm90b3R5cGUgPSB7XG4gIGFyZWFTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fbGluZSA9IDA7XG4gIH0sXG4gIGFyZWFFbmQ6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX2xpbmUgPSBOYU47XG4gIH0sXG4gIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5feCA9IHRoaXMuX3kgPSBOYU47XG4gICAgdGhpcy5fcG9pbnQgPSAwO1xuICB9LFxuICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICBpZiAoMCA8IHRoaXMuX3QgJiYgdGhpcy5fdCA8IDEgJiYgdGhpcy5fcG9pbnQgPT09IDIpIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsIHRoaXMuX3kpO1xuICAgIGlmICh0aGlzLl9saW5lIHx8ICh0aGlzLl9saW5lICE9PSAwICYmIHRoaXMuX3BvaW50ID09PSAxKSkgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICBpZiAodGhpcy5fbGluZSA+PSAwKSB0aGlzLl90ID0gMSAtIHRoaXMuX3QsIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZTtcbiAgfSxcbiAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICB4ID0gK3gsIHkgPSAreTtcbiAgICBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7XG4gICAgICBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8oeCwgeSk7IGJyZWFrO1xuICAgICAgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IC8vIHByb2NlZWRcbiAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgaWYgKHRoaXMuX3QgPD0gMCkge1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsIHkpO1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHgsIHkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciB4MSA9IHRoaXMuX3ggKiAoMSAtIHRoaXMuX3QpICsgeCAqIHRoaXMuX3Q7XG4gICAgICAgICAgdGhpcy5fY29udGV4dC5saW5lVG8oeDEsIHRoaXMuX3kpO1xuICAgICAgICAgIHRoaXMuX2NvbnRleHQubGluZVRvKHgxLCB5KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5feCA9IHgsIHRoaXMuX3kgPSB5O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgU3RlcChjb250ZXh0LCAwLjUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RlcEJlZm9yZShjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgU3RlcChjb250ZXh0LCAwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0ZXBBZnRlcihjb250ZXh0KSB7XG4gIHJldHVybiBuZXcgU3RlcChjb250ZXh0LCAxKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGIgPCBhID8gLTEgOiBiID4gYSA/IDEgOiBiID49IGEgPyAwIDogTmFOO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZCkge1xuICByZXR1cm4gZDtcbn1cbiIsImV4cG9ydCB7ZGVmYXVsdCBhcyBhcmN9IGZyb20gXCIuL2FyYy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGFyZWF9IGZyb20gXCIuL2FyZWEuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBsaW5lfSBmcm9tIFwiLi9saW5lLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgcGllfSBmcm9tIFwiLi9waWUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBhcmVhUmFkaWFsLCBkZWZhdWx0IGFzIHJhZGlhbEFyZWF9IGZyb20gXCIuL2FyZWFSYWRpYWwuanNcIjsgLy8gTm90ZTogcmFkaWFsQXJlYSBpcyBkZXByZWNhdGVkIVxuZXhwb3J0IHtkZWZhdWx0IGFzIGxpbmVSYWRpYWwsIGRlZmF1bHQgYXMgcmFkaWFsTGluZX0gZnJvbSBcIi4vbGluZVJhZGlhbC5qc1wiOyAvLyBOb3RlOiByYWRpYWxMaW5lIGlzIGRlcHJlY2F0ZWQhXG5leHBvcnQge2RlZmF1bHQgYXMgcG9pbnRSYWRpYWx9IGZyb20gXCIuL3BvaW50UmFkaWFsLmpzXCI7XG5leHBvcnQge2xpbmtIb3Jpem9udGFsLCBsaW5rVmVydGljYWwsIGxpbmtSYWRpYWx9IGZyb20gXCIuL2xpbmsvaW5kZXguanNcIjtcblxuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbCwgc3ltYm9sc30gZnJvbSBcIi4vc3ltYm9sLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sQ2lyY2xlfSBmcm9tIFwiLi9zeW1ib2wvY2lyY2xlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sQ3Jvc3N9IGZyb20gXCIuL3N5bWJvbC9jcm9zcy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN5bWJvbERpYW1vbmR9IGZyb20gXCIuL3N5bWJvbC9kaWFtb25kLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sU3F1YXJlfSBmcm9tIFwiLi9zeW1ib2wvc3F1YXJlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sU3Rhcn0gZnJvbSBcIi4vc3ltYm9sL3N0YXIuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzeW1ib2xUcmlhbmdsZX0gZnJvbSBcIi4vc3ltYm9sL3RyaWFuZ2xlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3ltYm9sV3llfSBmcm9tIFwiLi9zeW1ib2wvd3llLmpzXCI7XG5cbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUJhc2lzQ2xvc2VkfSBmcm9tIFwiLi9jdXJ2ZS9iYXNpc0Nsb3NlZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQmFzaXNPcGVufSBmcm9tIFwiLi9jdXJ2ZS9iYXNpc09wZW4uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUJhc2lzfSBmcm9tIFwiLi9jdXJ2ZS9iYXNpcy5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQnVuZGxlfSBmcm9tIFwiLi9jdXJ2ZS9idW5kbGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhcmRpbmFsQ2xvc2VkfSBmcm9tIFwiLi9jdXJ2ZS9jYXJkaW5hbENsb3NlZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2FyZGluYWxPcGVufSBmcm9tIFwiLi9jdXJ2ZS9jYXJkaW5hbE9wZW4uanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBjdXJ2ZUNhcmRpbmFsfSBmcm9tIFwiLi9jdXJ2ZS9jYXJkaW5hbC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2F0bXVsbFJvbUNsb3NlZH0gZnJvbSBcIi4vY3VydmUvY2F0bXVsbFJvbUNsb3NlZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlQ2F0bXVsbFJvbU9wZW59IGZyb20gXCIuL2N1cnZlL2NhdG11bGxSb21PcGVuLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVDYXRtdWxsUm9tfSBmcm9tIFwiLi9jdXJ2ZS9jYXRtdWxsUm9tLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVMaW5lYXJDbG9zZWR9IGZyb20gXCIuL2N1cnZlL2xpbmVhckNsb3NlZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGN1cnZlTGluZWFyfSBmcm9tIFwiLi9jdXJ2ZS9saW5lYXIuanNcIjtcbmV4cG9ydCB7bW9ub3RvbmVYIGFzIGN1cnZlTW9ub3RvbmVYLCBtb25vdG9uZVkgYXMgY3VydmVNb25vdG9uZVl9IGZyb20gXCIuL2N1cnZlL21vbm90b25lLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVOYXR1cmFsfSBmcm9tIFwiLi9jdXJ2ZS9uYXR1cmFsLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgY3VydmVTdGVwLCBzdGVwQWZ0ZXIgYXMgY3VydmVTdGVwQWZ0ZXIsIHN0ZXBCZWZvcmUgYXMgY3VydmVTdGVwQmVmb3JlfSBmcm9tIFwiLi9jdXJ2ZS9zdGVwLmpzXCI7XG5cbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja30gZnJvbSBcIi4vc3RhY2suanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09mZnNldEV4cGFuZH0gZnJvbSBcIi4vb2Zmc2V0L2V4cGFuZC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT2Zmc2V0RGl2ZXJnaW5nfSBmcm9tIFwiLi9vZmZzZXQvZGl2ZXJnaW5nLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPZmZzZXROb25lfSBmcm9tIFwiLi9vZmZzZXQvbm9uZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT2Zmc2V0U2lsaG91ZXR0ZX0gZnJvbSBcIi4vb2Zmc2V0L3NpbGhvdWV0dGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09mZnNldFdpZ2dsZX0gZnJvbSBcIi4vb2Zmc2V0L3dpZ2dsZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJBcHBlYXJhbmNlfSBmcm9tIFwiLi9vcmRlci9hcHBlYXJhbmNlLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlckFzY2VuZGluZ30gZnJvbSBcIi4vb3JkZXIvYXNjZW5kaW5nLmpzXCI7XG5leHBvcnQge2RlZmF1bHQgYXMgc3RhY2tPcmRlckRlc2NlbmRpbmd9IGZyb20gXCIuL29yZGVyL2Rlc2NlbmRpbmcuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVySW5zaWRlT3V0fSBmcm9tIFwiLi9vcmRlci9pbnNpZGVPdXQuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBzdGFja09yZGVyTm9uZX0gZnJvbSBcIi4vb3JkZXIvbm9uZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHN0YWNrT3JkZXJSZXZlcnNlfSBmcm9tIFwiLi9vcmRlci9yZXZlcnNlLmpzXCI7XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgYXJyYXkgZnJvbSBcIi4vYXJyYXkuanNcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IGN1cnZlTGluZWFyIGZyb20gXCIuL2N1cnZlL2xpbmVhci5qc1wiO1xuaW1wb3J0IHt4IGFzIHBvaW50WCwgeSBhcyBwb2ludFl9IGZyb20gXCIuL3BvaW50LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgsIHkpIHtcbiAgdmFyIGRlZmluZWQgPSBjb25zdGFudCh0cnVlKSxcbiAgICAgIGNvbnRleHQgPSBudWxsLFxuICAgICAgY3VydmUgPSBjdXJ2ZUxpbmVhcixcbiAgICAgIG91dHB1dCA9IG51bGw7XG5cbiAgeCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogKHggPT09IHVuZGVmaW5lZCkgPyBwb2ludFggOiBjb25zdGFudCh4KTtcbiAgeSA9IHR5cGVvZiB5ID09PSBcImZ1bmN0aW9uXCIgPyB5IDogKHkgPT09IHVuZGVmaW5lZCkgPyBwb2ludFkgOiBjb25zdGFudCh5KTtcblxuICBmdW5jdGlvbiBsaW5lKGRhdGEpIHtcbiAgICB2YXIgaSxcbiAgICAgICAgbiA9IChkYXRhID0gYXJyYXkoZGF0YSkpLmxlbmd0aCxcbiAgICAgICAgZCxcbiAgICAgICAgZGVmaW5lZDAgPSBmYWxzZSxcbiAgICAgICAgYnVmZmVyO1xuXG4gICAgaWYgKGNvbnRleHQgPT0gbnVsbCkgb3V0cHV0ID0gY3VydmUoYnVmZmVyID0gcGF0aCgpKTtcblxuICAgIGZvciAoaSA9IDA7IGkgPD0gbjsgKytpKSB7XG4gICAgICBpZiAoIShpIDwgbiAmJiBkZWZpbmVkKGQgPSBkYXRhW2ldLCBpLCBkYXRhKSkgPT09IGRlZmluZWQwKSB7XG4gICAgICAgIGlmIChkZWZpbmVkMCA9ICFkZWZpbmVkMCkgb3V0cHV0LmxpbmVTdGFydCgpO1xuICAgICAgICBlbHNlIG91dHB1dC5saW5lRW5kKCk7XG4gICAgICB9XG4gICAgICBpZiAoZGVmaW5lZDApIG91dHB1dC5wb2ludCgreChkLCBpLCBkYXRhKSwgK3koZCwgaSwgZGF0YSkpO1xuICAgIH1cblxuICAgIGlmIChidWZmZXIpIHJldHVybiBvdXRwdXQgPSBudWxsLCBidWZmZXIgKyBcIlwiIHx8IG51bGw7XG4gIH1cblxuICBsaW5lLnggPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBsaW5lKSA6IHg7XG4gIH07XG5cbiAgbGluZS55ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgbGluZSkgOiB5O1xuICB9O1xuXG4gIGxpbmUuZGVmaW5lZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChkZWZpbmVkID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCBsaW5lKSA6IGRlZmluZWQ7XG4gIH07XG5cbiAgbGluZS5jdXJ2ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjdXJ2ZSA9IF8sIGNvbnRleHQgIT0gbnVsbCAmJiAob3V0cHV0ID0gY3VydmUoY29udGV4dCkpLCBsaW5lKSA6IGN1cnZlO1xuICB9O1xuXG4gIGxpbmUuY29udGV4dCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChfID09IG51bGwgPyBjb250ZXh0ID0gb3V0cHV0ID0gbnVsbCA6IG91dHB1dCA9IGN1cnZlKGNvbnRleHQgPSBfKSwgbGluZSkgOiBjb250ZXh0O1xuICB9O1xuXG4gIHJldHVybiBsaW5lO1xufVxuIiwiaW1wb3J0IGN1cnZlUmFkaWFsLCB7Y3VydmVSYWRpYWxMaW5lYXJ9IGZyb20gXCIuL2N1cnZlL3JhZGlhbC5qc1wiO1xuaW1wb3J0IGxpbmUgZnJvbSBcIi4vbGluZS5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gbGluZVJhZGlhbChsKSB7XG4gIHZhciBjID0gbC5jdXJ2ZTtcblxuICBsLmFuZ2xlID0gbC54LCBkZWxldGUgbC54O1xuICBsLnJhZGl1cyA9IGwueSwgZGVsZXRlIGwueTtcblxuICBsLmN1cnZlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gYyhjdXJ2ZVJhZGlhbChfKSkgOiBjKCkuX2N1cnZlO1xuICB9O1xuXG4gIHJldHVybiBsO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGxpbmVSYWRpYWwobGluZSgpLmN1cnZlKGN1cnZlUmFkaWFsTGluZWFyKSk7XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQge3NsaWNlfSBmcm9tIFwiLi4vYXJyYXkuanNcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi4vY29uc3RhbnQuanNcIjtcbmltcG9ydCB7eCBhcyBwb2ludFgsIHkgYXMgcG9pbnRZfSBmcm9tIFwiLi4vcG9pbnQuanNcIjtcbmltcG9ydCBwb2ludFJhZGlhbCBmcm9tIFwiLi4vcG9pbnRSYWRpYWwuanNcIjtcblxuZnVuY3Rpb24gbGlua1NvdXJjZShkKSB7XG4gIHJldHVybiBkLnNvdXJjZTtcbn1cblxuZnVuY3Rpb24gbGlua1RhcmdldChkKSB7XG4gIHJldHVybiBkLnRhcmdldDtcbn1cblxuZnVuY3Rpb24gbGluayhjdXJ2ZSkge1xuICB2YXIgc291cmNlID0gbGlua1NvdXJjZSxcbiAgICAgIHRhcmdldCA9IGxpbmtUYXJnZXQsXG4gICAgICB4ID0gcG9pbnRYLFxuICAgICAgeSA9IHBvaW50WSxcbiAgICAgIGNvbnRleHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIGxpbmsoKSB7XG4gICAgdmFyIGJ1ZmZlciwgYXJndiA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKSwgcyA9IHNvdXJjZS5hcHBseSh0aGlzLCBhcmd2KSwgdCA9IHRhcmdldC5hcHBseSh0aGlzLCBhcmd2KTtcbiAgICBpZiAoIWNvbnRleHQpIGNvbnRleHQgPSBidWZmZXIgPSBwYXRoKCk7XG4gICAgY3VydmUoY29udGV4dCwgK3guYXBwbHkodGhpcywgKGFyZ3ZbMF0gPSBzLCBhcmd2KSksICt5LmFwcGx5KHRoaXMsIGFyZ3YpLCAreC5hcHBseSh0aGlzLCAoYXJndlswXSA9IHQsIGFyZ3YpKSwgK3kuYXBwbHkodGhpcywgYXJndikpO1xuICAgIGlmIChidWZmZXIpIHJldHVybiBjb250ZXh0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgbGluay5zb3VyY2UgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc291cmNlID0gXywgbGluaykgOiBzb3VyY2U7XG4gIH07XG5cbiAgbGluay50YXJnZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGFyZ2V0ID0gXywgbGluaykgOiB0YXJnZXQ7XG4gIH07XG5cbiAgbGluay54ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgbGluaykgOiB4O1xuICB9O1xuXG4gIGxpbmsueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIGxpbmspIDogeTtcbiAgfTtcblxuICBsaW5rLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoKGNvbnRleHQgPSBfID09IG51bGwgPyBudWxsIDogXyksIGxpbmspIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gY3VydmVIb3Jpem9udGFsKGNvbnRleHQsIHgwLCB5MCwgeDEsIHkxKSB7XG4gIGNvbnRleHQubW92ZVRvKHgwLCB5MCk7XG4gIGNvbnRleHQuYmV6aWVyQ3VydmVUbyh4MCA9ICh4MCArIHgxKSAvIDIsIHkwLCB4MCwgeTEsIHgxLCB5MSk7XG59XG5cbmZ1bmN0aW9uIGN1cnZlVmVydGljYWwoY29udGV4dCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgY29udGV4dC5tb3ZlVG8oeDAsIHkwKTtcbiAgY29udGV4dC5iZXppZXJDdXJ2ZVRvKHgwLCB5MCA9ICh5MCArIHkxKSAvIDIsIHgxLCB5MCwgeDEsIHkxKTtcbn1cblxuZnVuY3Rpb24gY3VydmVSYWRpYWwoY29udGV4dCwgeDAsIHkwLCB4MSwgeTEpIHtcbiAgdmFyIHAwID0gcG9pbnRSYWRpYWwoeDAsIHkwKSxcbiAgICAgIHAxID0gcG9pbnRSYWRpYWwoeDAsIHkwID0gKHkwICsgeTEpIC8gMiksXG4gICAgICBwMiA9IHBvaW50UmFkaWFsKHgxLCB5MCksXG4gICAgICBwMyA9IHBvaW50UmFkaWFsKHgxLCB5MSk7XG4gIGNvbnRleHQubW92ZVRvKHAwWzBdLCBwMFsxXSk7XG4gIGNvbnRleHQuYmV6aWVyQ3VydmVUbyhwMVswXSwgcDFbMV0sIHAyWzBdLCBwMlsxXSwgcDNbMF0sIHAzWzFdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmtIb3Jpem9udGFsKCkge1xuICByZXR1cm4gbGluayhjdXJ2ZUhvcml6b250YWwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbGlua1ZlcnRpY2FsKCkge1xuICByZXR1cm4gbGluayhjdXJ2ZVZlcnRpY2FsKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpbmtSYWRpYWwoKSB7XG4gIHZhciBsID0gbGluayhjdXJ2ZVJhZGlhbCk7XG4gIGwuYW5nbGUgPSBsLngsIGRlbGV0ZSBsLng7XG4gIGwucmFkaXVzID0gbC55LCBkZWxldGUgbC55O1xuICByZXR1cm4gbDtcbn1cbiIsImV4cG9ydCB2YXIgYWJzID0gTWF0aC5hYnM7XG5leHBvcnQgdmFyIGF0YW4yID0gTWF0aC5hdGFuMjtcbmV4cG9ydCB2YXIgY29zID0gTWF0aC5jb3M7XG5leHBvcnQgdmFyIG1heCA9IE1hdGgubWF4O1xuZXhwb3J0IHZhciBtaW4gPSBNYXRoLm1pbjtcbmV4cG9ydCB2YXIgc2luID0gTWF0aC5zaW47XG5leHBvcnQgdmFyIHNxcnQgPSBNYXRoLnNxcnQ7XG5cbmV4cG9ydCB2YXIgZXBzaWxvbiA9IDFlLTEyO1xuZXhwb3J0IHZhciBwaSA9IE1hdGguUEk7XG5leHBvcnQgdmFyIGhhbGZQaSA9IHBpIC8gMjtcbmV4cG9ydCB2YXIgdGF1ID0gMiAqIHBpO1xuXG5leHBvcnQgZnVuY3Rpb24gYWNvcyh4KSB7XG4gIHJldHVybiB4ID4gMSA/IDAgOiB4IDwgLTEgPyBwaSA6IE1hdGguYWNvcyh4KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzaW4oeCkge1xuICByZXR1cm4geCA+PSAxID8gaGFsZlBpIDogeCA8PSAtMSA/IC1oYWxmUGkgOiBNYXRoLmFzaW4oeCk7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHt9XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAwKSkgcmV0dXJuO1xuICBmb3IgKHZhciBpLCBqID0gMCwgZCwgZHksIHlwLCB5biwgbiwgbSA9IHNlcmllc1tvcmRlclswXV0ubGVuZ3RoOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh5cCA9IHluID0gMCwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgoZHkgPSAoZCA9IHNlcmllc1tvcmRlcltpXV1bal0pWzFdIC0gZFswXSkgPiAwKSB7XG4gICAgICAgIGRbMF0gPSB5cCwgZFsxXSA9IHlwICs9IGR5O1xuICAgICAgfSBlbHNlIGlmIChkeSA8IDApIHtcbiAgICAgICAgZFsxXSA9IHluLCBkWzBdID0geW4gKz0gZHk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkWzBdID0gMCwgZFsxXSA9IGR5O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAwKSkgcmV0dXJuO1xuICBmb3IgKHZhciBpLCBuLCBqID0gMCwgbSA9IHNlcmllc1swXS5sZW5ndGgsIHk7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHkgPSBpID0gMDsgaSA8IG47ICsraSkgeSArPSBzZXJpZXNbaV1bal1bMV0gfHwgMDtcbiAgICBpZiAoeSkgZm9yIChpID0gMDsgaSA8IG47ICsraSkgc2VyaWVzW2ldW2pdWzFdIC89IHk7XG4gIH1cbiAgbm9uZShzZXJpZXMsIG9yZGVyKTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcywgb3JkZXIpIHtcbiAgaWYgKCEoKG4gPSBzZXJpZXMubGVuZ3RoKSA+IDEpKSByZXR1cm47XG4gIGZvciAodmFyIGkgPSAxLCBqLCBzMCwgczEgPSBzZXJpZXNbb3JkZXJbMF1dLCBuLCBtID0gczEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgczAgPSBzMSwgczEgPSBzZXJpZXNbb3JkZXJbaV1dO1xuICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgIHMxW2pdWzFdICs9IHMxW2pdWzBdID0gaXNOYU4oczBbal1bMV0pID8gczBbal1bMF0gOiBzMFtqXVsxXTtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzLCBvcmRlcikge1xuICBpZiAoISgobiA9IHNlcmllcy5sZW5ndGgpID4gMCkpIHJldHVybjtcbiAgZm9yICh2YXIgaiA9IDAsIHMwID0gc2VyaWVzW29yZGVyWzBdXSwgbiwgbSA9IHMwLmxlbmd0aDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGkgPSAwLCB5ID0gMDsgaSA8IG47ICsraSkgeSArPSBzZXJpZXNbaV1bal1bMV0gfHwgMDtcbiAgICBzMFtqXVsxXSArPSBzMFtqXVswXSA9IC15IC8gMjtcbiAgfVxuICBub25lKHNlcmllcywgb3JkZXIpO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMsIG9yZGVyKSB7XG4gIGlmICghKChuID0gc2VyaWVzLmxlbmd0aCkgPiAwKSB8fCAhKChtID0gKHMwID0gc2VyaWVzW29yZGVyWzBdXSkubGVuZ3RoKSA+IDApKSByZXR1cm47XG4gIGZvciAodmFyIHkgPSAwLCBqID0gMSwgczAsIG0sIG47IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBpID0gMCwgczEgPSAwLCBzMiA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHZhciBzaSA9IHNlcmllc1tvcmRlcltpXV0sXG4gICAgICAgICAgc2lqMCA9IHNpW2pdWzFdIHx8IDAsXG4gICAgICAgICAgc2lqMSA9IHNpW2ogLSAxXVsxXSB8fCAwLFxuICAgICAgICAgIHMzID0gKHNpajAgLSBzaWoxKSAvIDI7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IGk7ICsraykge1xuICAgICAgICB2YXIgc2sgPSBzZXJpZXNbb3JkZXJba11dLFxuICAgICAgICAgICAgc2tqMCA9IHNrW2pdWzFdIHx8IDAsXG4gICAgICAgICAgICBza2oxID0gc2tbaiAtIDFdWzFdIHx8IDA7XG4gICAgICAgIHMzICs9IHNrajAgLSBza2oxO1xuICAgICAgfVxuICAgICAgczEgKz0gc2lqMCwgczIgKz0gczMgKiBzaWowO1xuICAgIH1cbiAgICBzMFtqIC0gMV1bMV0gKz0gczBbaiAtIDFdWzBdID0geTtcbiAgICBpZiAoczEpIHkgLT0gczIgLyBzMTtcbiAgfVxuICBzMFtqIC0gMV1bMV0gKz0gczBbaiAtIDFdWzBdID0geTtcbiAgbm9uZShzZXJpZXMsIG9yZGVyKTtcbn1cbiIsImltcG9ydCBub25lIGZyb20gXCIuL25vbmUuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBwZWFrcyA9IHNlcmllcy5tYXAocGVhayk7XG4gIHJldHVybiBub25lKHNlcmllcykuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBwZWFrc1thXSAtIHBlYWtzW2JdOyB9KTtcbn1cblxuZnVuY3Rpb24gcGVhayhzZXJpZXMpIHtcbiAgdmFyIGkgPSAtMSwgaiA9IDAsIG4gPSBzZXJpZXMubGVuZ3RoLCB2aSwgdmogPSAtSW5maW5pdHk7XG4gIHdoaWxlICgrK2kgPCBuKSBpZiAoKHZpID0gK3Nlcmllc1tpXVsxXSkgPiB2aikgdmogPSB2aSwgaiA9IGk7XG4gIHJldHVybiBqO1xufVxuIiwiaW1wb3J0IG5vbmUgZnJvbSBcIi4vbm9uZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIHN1bXMgPSBzZXJpZXMubWFwKHN1bSk7XG4gIHJldHVybiBub25lKHNlcmllcykuc29ydChmdW5jdGlvbihhLCBiKSB7IHJldHVybiBzdW1zW2FdIC0gc3Vtc1tiXTsgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdW0oc2VyaWVzKSB7XG4gIHZhciBzID0gMCwgaSA9IC0xLCBuID0gc2VyaWVzLmxlbmd0aCwgdjtcbiAgd2hpbGUgKCsraSA8IG4pIGlmICh2ID0gK3Nlcmllc1tpXVsxXSkgcyArPSB2O1xuICByZXR1cm4gcztcbn1cbiIsImltcG9ydCBhc2NlbmRpbmcgZnJvbSBcIi4vYXNjZW5kaW5nLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICByZXR1cm4gYXNjZW5kaW5nKHNlcmllcykucmV2ZXJzZSgpO1xufVxuIiwiaW1wb3J0IGFwcGVhcmFuY2UgZnJvbSBcIi4vYXBwZWFyYW5jZS5qc1wiO1xuaW1wb3J0IHtzdW19IGZyb20gXCIuL2FzY2VuZGluZy5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZXJpZXMpIHtcbiAgdmFyIG4gPSBzZXJpZXMubGVuZ3RoLFxuICAgICAgaSxcbiAgICAgIGosXG4gICAgICBzdW1zID0gc2VyaWVzLm1hcChzdW0pLFxuICAgICAgb3JkZXIgPSBhcHBlYXJhbmNlKHNlcmllcyksXG4gICAgICB0b3AgPSAwLFxuICAgICAgYm90dG9tID0gMCxcbiAgICAgIHRvcHMgPSBbXSxcbiAgICAgIGJvdHRvbXMgPSBbXTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgaiA9IG9yZGVyW2ldO1xuICAgIGlmICh0b3AgPCBib3R0b20pIHtcbiAgICAgIHRvcCArPSBzdW1zW2pdO1xuICAgICAgdG9wcy5wdXNoKGopO1xuICAgIH0gZWxzZSB7XG4gICAgICBib3R0b20gKz0gc3Vtc1tqXTtcbiAgICAgIGJvdHRvbXMucHVzaChqKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm90dG9tcy5yZXZlcnNlKCkuY29uY2F0KHRvcHMpO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oc2VyaWVzKSB7XG4gIHZhciBuID0gc2VyaWVzLmxlbmd0aCwgbyA9IG5ldyBBcnJheShuKTtcbiAgd2hpbGUgKC0tbiA+PSAwKSBvW25dID0gbjtcbiAgcmV0dXJuIG87XG59XG4iLCJpbXBvcnQgbm9uZSBmcm9tIFwiLi9ub25lLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHNlcmllcykge1xuICByZXR1cm4gbm9uZShzZXJpZXMpLnJldmVyc2UoKTtcbn1cbiIsImltcG9ydCBhcnJheSBmcm9tIFwiLi9hcnJheS5qc1wiO1xuaW1wb3J0IGNvbnN0YW50IGZyb20gXCIuL2NvbnN0YW50LmpzXCI7XG5pbXBvcnQgZGVzY2VuZGluZyBmcm9tIFwiLi9kZXNjZW5kaW5nLmpzXCI7XG5pbXBvcnQgaWRlbnRpdHkgZnJvbSBcIi4vaWRlbnRpdHkuanNcIjtcbmltcG9ydCB7dGF1fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgdmFsdWUgPSBpZGVudGl0eSxcbiAgICAgIHNvcnRWYWx1ZXMgPSBkZXNjZW5kaW5nLFxuICAgICAgc29ydCA9IG51bGwsXG4gICAgICBzdGFydEFuZ2xlID0gY29uc3RhbnQoMCksXG4gICAgICBlbmRBbmdsZSA9IGNvbnN0YW50KHRhdSksXG4gICAgICBwYWRBbmdsZSA9IGNvbnN0YW50KDApO1xuXG4gIGZ1bmN0aW9uIHBpZShkYXRhKSB7XG4gICAgdmFyIGksXG4gICAgICAgIG4gPSAoZGF0YSA9IGFycmF5KGRhdGEpKS5sZW5ndGgsXG4gICAgICAgIGosXG4gICAgICAgIGssXG4gICAgICAgIHN1bSA9IDAsXG4gICAgICAgIGluZGV4ID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBhcmNzID0gbmV3IEFycmF5KG4pLFxuICAgICAgICBhMCA9ICtzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgIGRhID0gTWF0aC5taW4odGF1LCBNYXRoLm1heCgtdGF1LCBlbmRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gYTApKSxcbiAgICAgICAgYTEsXG4gICAgICAgIHAgPSBNYXRoLm1pbihNYXRoLmFicyhkYSkgLyBuLCBwYWRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSxcbiAgICAgICAgcGEgPSBwICogKGRhIDwgMCA/IC0xIDogMSksXG4gICAgICAgIHY7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKHYgPSBhcmNzW2luZGV4W2ldID0gaV0gPSArdmFsdWUoZGF0YVtpXSwgaSwgZGF0YSkpID4gMCkge1xuICAgICAgICBzdW0gKz0gdjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBPcHRpb25hbGx5IHNvcnQgdGhlIGFyY3MgYnkgcHJldmlvdXNseS1jb21wdXRlZCB2YWx1ZXMgb3IgYnkgZGF0YS5cbiAgICBpZiAoc29ydFZhbHVlcyAhPSBudWxsKSBpbmRleC5zb3J0KGZ1bmN0aW9uKGksIGopIHsgcmV0dXJuIHNvcnRWYWx1ZXMoYXJjc1tpXSwgYXJjc1tqXSk7IH0pO1xuICAgIGVsc2UgaWYgKHNvcnQgIT0gbnVsbCkgaW5kZXguc29ydChmdW5jdGlvbihpLCBqKSB7IHJldHVybiBzb3J0KGRhdGFbaV0sIGRhdGFbal0pOyB9KTtcblxuICAgIC8vIENvbXB1dGUgdGhlIGFyY3MhIFRoZXkgYXJlIHN0b3JlZCBpbiB0aGUgb3JpZ2luYWwgZGF0YSdzIG9yZGVyLlxuICAgIGZvciAoaSA9IDAsIGsgPSBzdW0gPyAoZGEgLSBuICogcGEpIC8gc3VtIDogMDsgaSA8IG47ICsraSwgYTAgPSBhMSkge1xuICAgICAgaiA9IGluZGV4W2ldLCB2ID0gYXJjc1tqXSwgYTEgPSBhMCArICh2ID4gMCA/IHYgKiBrIDogMCkgKyBwYSwgYXJjc1tqXSA9IHtcbiAgICAgICAgZGF0YTogZGF0YVtqXSxcbiAgICAgICAgaW5kZXg6IGksXG4gICAgICAgIHZhbHVlOiB2LFxuICAgICAgICBzdGFydEFuZ2xlOiBhMCxcbiAgICAgICAgZW5kQW5nbGU6IGExLFxuICAgICAgICBwYWRBbmdsZTogcFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJjcztcbiAgfVxuXG4gIHBpZS52YWx1ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh2YWx1ZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoK18pLCBwaWUpIDogdmFsdWU7XG4gIH07XG5cbiAgcGllLnNvcnRWYWx1ZXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoc29ydFZhbHVlcyA9IF8sIHNvcnQgPSBudWxsLCBwaWUpIDogc29ydFZhbHVlcztcbiAgfTtcblxuICBwaWUuc29ydCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzb3J0ID0gXywgc29ydFZhbHVlcyA9IG51bGwsIHBpZSkgOiBzb3J0O1xuICB9O1xuXG4gIHBpZS5zdGFydEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHN0YXJ0QW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcGllKSA6IHN0YXJ0QW5nbGU7XG4gIH07XG5cbiAgcGllLmVuZEFuZ2xlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGVuZEFuZ2xlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCgrXyksIHBpZSkgOiBlbmRBbmdsZTtcbiAgfTtcblxuICBwaWUucGFkQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocGFkQW5nbGUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgcGllKSA6IHBhZEFuZ2xlO1xuICB9O1xuXG4gIHJldHVybiBwaWU7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24geChwKSB7XG4gIHJldHVybiBwWzBdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24geShwKSB7XG4gIHJldHVybiBwWzFdO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgeSkge1xuICByZXR1cm4gWyh5ID0gK3kpICogTWF0aC5jb3MoeCAtPSBNYXRoLlBJIC8gMiksIHkgKiBNYXRoLnNpbih4KV07XG59XG4iLCJpbXBvcnQgYXJyYXkgZnJvbSBcIi4vYXJyYXkuanNcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IG9mZnNldE5vbmUgZnJvbSBcIi4vb2Zmc2V0L25vbmUuanNcIjtcbmltcG9ydCBvcmRlck5vbmUgZnJvbSBcIi4vb3JkZXIvbm9uZS5qc1wiO1xuXG5mdW5jdGlvbiBzdGFja1ZhbHVlKGQsIGtleSkge1xuICByZXR1cm4gZFtrZXldO1xufVxuXG5mdW5jdGlvbiBzdGFja1NlcmllcyhrZXkpIHtcbiAgY29uc3Qgc2VyaWVzID0gW107XG4gIHNlcmllcy5rZXkgPSBrZXk7XG4gIHJldHVybiBzZXJpZXM7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIga2V5cyA9IGNvbnN0YW50KFtdKSxcbiAgICAgIG9yZGVyID0gb3JkZXJOb25lLFxuICAgICAgb2Zmc2V0ID0gb2Zmc2V0Tm9uZSxcbiAgICAgIHZhbHVlID0gc3RhY2tWYWx1ZTtcblxuICBmdW5jdGlvbiBzdGFjayhkYXRhKSB7XG4gICAgdmFyIHN6ID0gQXJyYXkuZnJvbShrZXlzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHN0YWNrU2VyaWVzKSxcbiAgICAgICAgaSwgbiA9IHN6Lmxlbmd0aCwgaiA9IC0xLFxuICAgICAgICBvejtcblxuICAgIGZvciAoY29uc3QgZCBvZiBkYXRhKSB7XG4gICAgICBmb3IgKGkgPSAwLCArK2o7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgKHN6W2ldW2pdID0gWzAsICt2YWx1ZShkLCBzeltpXS5rZXksIGosIGRhdGEpXSkuZGF0YSA9IGQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMCwgb3ogPSBhcnJheShvcmRlcihzeikpOyBpIDwgbjsgKytpKSB7XG4gICAgICBzeltveltpXV0uaW5kZXggPSBpO1xuICAgIH1cblxuICAgIG9mZnNldChzeiwgb3opO1xuICAgIHJldHVybiBzejtcbiAgfVxuXG4gIHN0YWNrLmtleXMgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoa2V5cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoQXJyYXkuZnJvbShfKSksIHN0YWNrKSA6IGtleXM7XG4gIH07XG5cbiAgc3RhY2sudmFsdWUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodmFsdWUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgc3RhY2spIDogdmFsdWU7XG4gIH07XG5cbiAgc3RhY2sub3JkZXIgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob3JkZXIgPSBfID09IG51bGwgPyBvcmRlck5vbmUgOiB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KEFycmF5LmZyb20oXykpLCBzdGFjaykgOiBvcmRlcjtcbiAgfTtcblxuICBzdGFjay5vZmZzZXQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAob2Zmc2V0ID0gXyA9PSBudWxsID8gb2Zmc2V0Tm9uZSA6IF8sIHN0YWNrKSA6IG9mZnNldDtcbiAgfTtcblxuICByZXR1cm4gc3RhY2s7XG59XG4iLCJpbXBvcnQge3BhdGh9IGZyb20gXCJkMy1wYXRoXCI7XG5pbXBvcnQgY2lyY2xlIGZyb20gXCIuL3N5bWJvbC9jaXJjbGUuanNcIjtcbmltcG9ydCBjcm9zcyBmcm9tIFwiLi9zeW1ib2wvY3Jvc3MuanNcIjtcbmltcG9ydCBkaWFtb25kIGZyb20gXCIuL3N5bWJvbC9kaWFtb25kLmpzXCI7XG5pbXBvcnQgc3RhciBmcm9tIFwiLi9zeW1ib2wvc3Rhci5qc1wiO1xuaW1wb3J0IHNxdWFyZSBmcm9tIFwiLi9zeW1ib2wvc3F1YXJlLmpzXCI7XG5pbXBvcnQgdHJpYW5nbGUgZnJvbSBcIi4vc3ltYm9sL3RyaWFuZ2xlLmpzXCI7XG5pbXBvcnQgd3llIGZyb20gXCIuL3N5bWJvbC93eWUuanNcIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuXG5leHBvcnQgdmFyIHN5bWJvbHMgPSBbXG4gIGNpcmNsZSxcbiAgY3Jvc3MsXG4gIGRpYW1vbmQsXG4gIHNxdWFyZSxcbiAgc3RhcixcbiAgdHJpYW5nbGUsXG4gIHd5ZVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odHlwZSwgc2l6ZSkge1xuICB2YXIgY29udGV4dCA9IG51bGw7XG4gIHR5cGUgPSB0eXBlb2YgdHlwZSA9PT0gXCJmdW5jdGlvblwiID8gdHlwZSA6IGNvbnN0YW50KHR5cGUgfHwgY2lyY2xlKTtcbiAgc2l6ZSA9IHR5cGVvZiBzaXplID09PSBcImZ1bmN0aW9uXCIgPyBzaXplIDogY29uc3RhbnQoc2l6ZSA9PT0gdW5kZWZpbmVkID8gNjQgOiArc2l6ZSk7XG5cbiAgZnVuY3Rpb24gc3ltYm9sKCkge1xuICAgIHZhciBidWZmZXI7XG4gICAgaWYgKCFjb250ZXh0KSBjb250ZXh0ID0gYnVmZmVyID0gcGF0aCgpO1xuICAgIHR5cGUuYXBwbHkodGhpcywgYXJndW1lbnRzKS5kcmF3KGNvbnRleHQsICtzaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIGlmIChidWZmZXIpIHJldHVybiBjb250ZXh0ID0gbnVsbCwgYnVmZmVyICsgXCJcIiB8fCBudWxsO1xuICB9XG5cbiAgc3ltYm9sLnR5cGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodHlwZSA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoXyksIHN5bWJvbCkgOiB0eXBlO1xuICB9O1xuXG4gIHN5bWJvbC5zaXplID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHNpemUgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgc3ltYm9sKSA6IHNpemU7XG4gIH07XG5cbiAgc3ltYm9sLmNvbnRleHQgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY29udGV4dCA9IF8gPT0gbnVsbCA/IG51bGwgOiBfLCBzeW1ib2wpIDogY29udGV4dDtcbiAgfTtcblxuICByZXR1cm4gc3ltYm9sO1xufVxuIiwiaW1wb3J0IHtwaSwgdGF1fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gcGkpO1xuICAgIGNvbnRleHQubW92ZVRvKHIsIDApO1xuICAgIGNvbnRleHQuYXJjKDAsIDAsIHIsIDAsIHRhdSk7XG4gIH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gNSkgLyAyO1xuICAgIGNvbnRleHQubW92ZVRvKC0zICogciwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIC0zICogcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgLTMgKiByKTtcbiAgICBjb250ZXh0LmxpbmVUbyhyLCAtcik7XG4gICAgY29udGV4dC5saW5lVG8oMyAqIHIsIC1yKTtcbiAgICBjb250ZXh0LmxpbmVUbygzICogciwgcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgcik7XG4gICAgY29udGV4dC5saW5lVG8ociwgMyAqIHIpO1xuICAgIGNvbnRleHQubGluZVRvKC1yLCAzICogcik7XG4gICAgY29udGV4dC5saW5lVG8oLXIsIHIpO1xuICAgIGNvbnRleHQubGluZVRvKC0zICogciwgcik7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsInZhciB0YW4zMCA9IE1hdGguc3FydCgxIC8gMyksXG4gICAgdGFuMzBfMiA9IHRhbjMwICogMjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkcmF3OiBmdW5jdGlvbihjb250ZXh0LCBzaXplKSB7XG4gICAgdmFyIHkgPSBNYXRoLnNxcnQoc2l6ZSAvIHRhbjMwXzIpLFxuICAgICAgICB4ID0geSAqIHRhbjMwO1xuICAgIGNvbnRleHQubW92ZVRvKDAsIC15KTtcbiAgICBjb250ZXh0LmxpbmVUbyh4LCAwKTtcbiAgICBjb250ZXh0LmxpbmVUbygwLCB5KTtcbiAgICBjb250ZXh0LmxpbmVUbygteCwgMCk7XG4gICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgfVxufTtcbiIsImV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciB3ID0gTWF0aC5zcXJ0KHNpemUpLFxuICAgICAgICB4ID0gLXcgLyAyO1xuICAgIGNvbnRleHQucmVjdCh4LCB4LCB3LCB3KTtcbiAgfVxufTtcbiIsImltcG9ydCB7cGksIHRhdX0gZnJvbSBcIi4uL21hdGguanNcIjtcblxudmFyIGthID0gMC44OTA4MTMwOTE1MjkyODUyMjgxMCxcbiAgICBrciA9IE1hdGguc2luKHBpIC8gMTApIC8gTWF0aC5zaW4oNyAqIHBpIC8gMTApLFxuICAgIGt4ID0gTWF0aC5zaW4odGF1IC8gMTApICoga3IsXG4gICAga3kgPSAtTWF0aC5jb3ModGF1IC8gMTApICoga3I7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgKiBrYSksXG4gICAgICAgIHggPSBreCAqIHIsXG4gICAgICAgIHkgPSBreSAqIHI7XG4gICAgY29udGV4dC5tb3ZlVG8oMCwgLXIpO1xuICAgIGNvbnRleHQubGluZVRvKHgsIHkpO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgNTsgKytpKSB7XG4gICAgICB2YXIgYSA9IHRhdSAqIGkgLyA1LFxuICAgICAgICAgIGMgPSBNYXRoLmNvcyhhKSxcbiAgICAgICAgICBzID0gTWF0aC5zaW4oYSk7XG4gICAgICBjb250ZXh0LmxpbmVUbyhzICogciwgLWMgKiByKTtcbiAgICAgIGNvbnRleHQubGluZVRvKGMgKiB4IC0gcyAqIHksIHMgKiB4ICsgYyAqIHkpO1xuICAgIH1cbiAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICB9XG59O1xuIiwidmFyIHNxcnQzID0gTWF0aC5zcXJ0KDMpO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGRyYXc6IGZ1bmN0aW9uKGNvbnRleHQsIHNpemUpIHtcbiAgICB2YXIgeSA9IC1NYXRoLnNxcnQoc2l6ZSAvIChzcXJ0MyAqIDMpKTtcbiAgICBjb250ZXh0Lm1vdmVUbygwLCB5ICogMik7XG4gICAgY29udGV4dC5saW5lVG8oLXNxcnQzICogeSwgLXkpO1xuICAgIGNvbnRleHQubGluZVRvKHNxcnQzICogeSwgLXkpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJ2YXIgYyA9IC0wLjUsXG4gICAgcyA9IE1hdGguc3FydCgzKSAvIDIsXG4gICAgayA9IDEgLyBNYXRoLnNxcnQoMTIpLFxuICAgIGEgPSAoayAvIDIgKyAxKSAqIDM7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgZHJhdzogZnVuY3Rpb24oY29udGV4dCwgc2l6ZSkge1xuICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyBhKSxcbiAgICAgICAgeDAgPSByIC8gMixcbiAgICAgICAgeTAgPSByICogayxcbiAgICAgICAgeDEgPSB4MCxcbiAgICAgICAgeTEgPSByICogayArIHIsXG4gICAgICAgIHgyID0gLXgxLFxuICAgICAgICB5MiA9IHkxO1xuICAgIGNvbnRleHQubW92ZVRvKHgwLCB5MCk7XG4gICAgY29udGV4dC5saW5lVG8oeDEsIHkxKTtcbiAgICBjb250ZXh0LmxpbmVUbyh4MiwgeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCAtIHMgKiB5MCwgcyAqIHgwICsgYyAqIHkwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgLSBzICogeTEsIHMgKiB4MSArIGMgKiB5MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyIC0gcyAqIHkyLCBzICogeDIgKyBjICogeTIpO1xuICAgIGNvbnRleHQubGluZVRvKGMgKiB4MCArIHMgKiB5MCwgYyAqIHkwIC0gcyAqIHgwKTtcbiAgICBjb250ZXh0LmxpbmVUbyhjICogeDEgKyBzICogeTEsIGMgKiB5MSAtIHMgKiB4MSk7XG4gICAgY29udGV4dC5saW5lVG8oYyAqIHgyICsgcyAqIHkyLCBjICogeTIgLSBzICogeDIpO1xuICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIH1cbn07XG4iLCJpbXBvcnQgZm9ybWF0TG9jYWxlIGZyb20gXCIuL2xvY2FsZS5qc1wiO1xuXG52YXIgbG9jYWxlO1xuZXhwb3J0IHZhciB0aW1lRm9ybWF0O1xuZXhwb3J0IHZhciB0aW1lUGFyc2U7XG5leHBvcnQgdmFyIHV0Y0Zvcm1hdDtcbmV4cG9ydCB2YXIgdXRjUGFyc2U7XG5cbmRlZmF1bHRMb2NhbGUoe1xuICBkYXRlVGltZTogXCIleCwgJVhcIixcbiAgZGF0ZTogXCIlLW0vJS1kLyVZXCIsXG4gIHRpbWU6IFwiJS1JOiVNOiVTICVwXCIsXG4gIHBlcmlvZHM6IFtcIkFNXCIsIFwiUE1cIl0sXG4gIGRheXM6IFtcIlN1bmRheVwiLCBcIk1vbmRheVwiLCBcIlR1ZXNkYXlcIiwgXCJXZWRuZXNkYXlcIiwgXCJUaHVyc2RheVwiLCBcIkZyaWRheVwiLCBcIlNhdHVyZGF5XCJdLFxuICBzaG9ydERheXM6IFtcIlN1blwiLCBcIk1vblwiLCBcIlR1ZVwiLCBcIldlZFwiLCBcIlRodVwiLCBcIkZyaVwiLCBcIlNhdFwiXSxcbiAgbW9udGhzOiBbXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLCBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXSxcbiAgc2hvcnRNb250aHM6IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiXVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlZmF1bHRMb2NhbGUoZGVmaW5pdGlvbikge1xuICBsb2NhbGUgPSBmb3JtYXRMb2NhbGUoZGVmaW5pdGlvbik7XG4gIHRpbWVGb3JtYXQgPSBsb2NhbGUuZm9ybWF0O1xuICB0aW1lUGFyc2UgPSBsb2NhbGUucGFyc2U7XG4gIHV0Y0Zvcm1hdCA9IGxvY2FsZS51dGNGb3JtYXQ7XG4gIHV0Y1BhcnNlID0gbG9jYWxlLnV0Y1BhcnNlO1xuICByZXR1cm4gbG9jYWxlO1xufVxuIiwiZXhwb3J0IHtkZWZhdWx0IGFzIHRpbWVGb3JtYXREZWZhdWx0TG9jYWxlLCB0aW1lRm9ybWF0LCB0aW1lUGFyc2UsIHV0Y0Zvcm1hdCwgdXRjUGFyc2V9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyB0aW1lRm9ybWF0TG9jYWxlfSBmcm9tIFwiLi9sb2NhbGUuanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBpc29Gb3JtYXR9IGZyb20gXCIuL2lzb0Zvcm1hdC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGlzb1BhcnNlfSBmcm9tIFwiLi9pc29QYXJzZS5qc1wiO1xuIiwiaW1wb3J0IHt1dGNGb3JtYXR9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGUuanNcIjtcblxuZXhwb3J0IHZhciBpc29TcGVjaWZpZXIgPSBcIiVZLSVtLSVkVCVIOiVNOiVTLiVMWlwiO1xuXG5mdW5jdGlvbiBmb3JtYXRJc29OYXRpdmUoZGF0ZSkge1xuICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpO1xufVxuXG52YXIgZm9ybWF0SXNvID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmdcbiAgICA/IGZvcm1hdElzb05hdGl2ZVxuICAgIDogdXRjRm9ybWF0KGlzb1NwZWNpZmllcik7XG5cbmV4cG9ydCBkZWZhdWx0IGZvcm1hdElzbztcbiIsImltcG9ydCB7aXNvU3BlY2lmaWVyfSBmcm9tIFwiLi9pc29Gb3JtYXQuanNcIjtcbmltcG9ydCB7dXRjUGFyc2V9IGZyb20gXCIuL2RlZmF1bHRMb2NhbGUuanNcIjtcblxuZnVuY3Rpb24gcGFyc2VJc29OYXRpdmUoc3RyaW5nKSB7XG4gIHZhciBkYXRlID0gbmV3IERhdGUoc3RyaW5nKTtcbiAgcmV0dXJuIGlzTmFOKGRhdGUpID8gbnVsbCA6IGRhdGU7XG59XG5cbnZhciBwYXJzZUlzbyA9ICtuZXcgRGF0ZShcIjIwMDAtMDEtMDFUMDA6MDA6MDAuMDAwWlwiKVxuICAgID8gcGFyc2VJc29OYXRpdmVcbiAgICA6IHV0Y1BhcnNlKGlzb1NwZWNpZmllcik7XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlSXNvO1xuIiwiaW1wb3J0IHtcbiAgdGltZURheSxcbiAgdGltZVN1bmRheSxcbiAgdGltZU1vbmRheSxcbiAgdGltZVRodXJzZGF5LFxuICB0aW1lWWVhcixcbiAgdXRjRGF5LFxuICB1dGNTdW5kYXksXG4gIHV0Y01vbmRheSxcbiAgdXRjVGh1cnNkYXksXG4gIHV0Y1llYXJcbn0gZnJvbSBcImQzLXRpbWVcIjtcblxuZnVuY3Rpb24gbG9jYWxEYXRlKGQpIHtcbiAgaWYgKDAgPD0gZC55ICYmIGQueSA8IDEwMCkge1xuICAgIHZhciBkYXRlID0gbmV3IERhdGUoLTEsIGQubSwgZC5kLCBkLkgsIGQuTSwgZC5TLCBkLkwpO1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZC55KTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfVxuICByZXR1cm4gbmV3IERhdGUoZC55LCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKTtcbn1cblxuZnVuY3Rpb24gdXRjRGF0ZShkKSB7XG4gIGlmICgwIDw9IGQueSAmJiBkLnkgPCAxMDApIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKERhdGUuVVRDKC0xLCBkLm0sIGQuZCwgZC5ILCBkLk0sIGQuUywgZC5MKSk7XG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcihkLnkpO1xuICAgIHJldHVybiBkYXRlO1xuICB9XG4gIHJldHVybiBuZXcgRGF0ZShEYXRlLlVUQyhkLnksIGQubSwgZC5kLCBkLkgsIGQuTSwgZC5TLCBkLkwpKTtcbn1cblxuZnVuY3Rpb24gbmV3RGF0ZSh5LCBtLCBkKSB7XG4gIHJldHVybiB7eTogeSwgbTogbSwgZDogZCwgSDogMCwgTTogMCwgUzogMCwgTDogMH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvcm1hdExvY2FsZShsb2NhbGUpIHtcbiAgdmFyIGxvY2FsZV9kYXRlVGltZSA9IGxvY2FsZS5kYXRlVGltZSxcbiAgICAgIGxvY2FsZV9kYXRlID0gbG9jYWxlLmRhdGUsXG4gICAgICBsb2NhbGVfdGltZSA9IGxvY2FsZS50aW1lLFxuICAgICAgbG9jYWxlX3BlcmlvZHMgPSBsb2NhbGUucGVyaW9kcyxcbiAgICAgIGxvY2FsZV93ZWVrZGF5cyA9IGxvY2FsZS5kYXlzLFxuICAgICAgbG9jYWxlX3Nob3J0V2Vla2RheXMgPSBsb2NhbGUuc2hvcnREYXlzLFxuICAgICAgbG9jYWxlX21vbnRocyA9IGxvY2FsZS5tb250aHMsXG4gICAgICBsb2NhbGVfc2hvcnRNb250aHMgPSBsb2NhbGUuc2hvcnRNb250aHM7XG5cbiAgdmFyIHBlcmlvZFJlID0gZm9ybWF0UmUobG9jYWxlX3BlcmlvZHMpLFxuICAgICAgcGVyaW9kTG9va3VwID0gZm9ybWF0TG9va3VwKGxvY2FsZV9wZXJpb2RzKSxcbiAgICAgIHdlZWtkYXlSZSA9IGZvcm1hdFJlKGxvY2FsZV93ZWVrZGF5cyksXG4gICAgICB3ZWVrZGF5TG9va3VwID0gZm9ybWF0TG9va3VwKGxvY2FsZV93ZWVrZGF5cyksXG4gICAgICBzaG9ydFdlZWtkYXlSZSA9IGZvcm1hdFJlKGxvY2FsZV9zaG9ydFdlZWtkYXlzKSxcbiAgICAgIHNob3J0V2Vla2RheUxvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfc2hvcnRXZWVrZGF5cyksXG4gICAgICBtb250aFJlID0gZm9ybWF0UmUobG9jYWxlX21vbnRocyksXG4gICAgICBtb250aExvb2t1cCA9IGZvcm1hdExvb2t1cChsb2NhbGVfbW9udGhzKSxcbiAgICAgIHNob3J0TW9udGhSZSA9IGZvcm1hdFJlKGxvY2FsZV9zaG9ydE1vbnRocyksXG4gICAgICBzaG9ydE1vbnRoTG9va3VwID0gZm9ybWF0TG9va3VwKGxvY2FsZV9zaG9ydE1vbnRocyk7XG5cbiAgdmFyIGZvcm1hdHMgPSB7XG4gICAgXCJhXCI6IGZvcm1hdFNob3J0V2Vla2RheSxcbiAgICBcIkFcIjogZm9ybWF0V2Vla2RheSxcbiAgICBcImJcIjogZm9ybWF0U2hvcnRNb250aCxcbiAgICBcIkJcIjogZm9ybWF0TW9udGgsXG4gICAgXCJjXCI6IG51bGwsXG4gICAgXCJkXCI6IGZvcm1hdERheU9mTW9udGgsXG4gICAgXCJlXCI6IGZvcm1hdERheU9mTW9udGgsXG4gICAgXCJmXCI6IGZvcm1hdE1pY3Jvc2Vjb25kcyxcbiAgICBcImdcIjogZm9ybWF0WWVhcklTTyxcbiAgICBcIkdcIjogZm9ybWF0RnVsbFllYXJJU08sXG4gICAgXCJIXCI6IGZvcm1hdEhvdXIyNCxcbiAgICBcIklcIjogZm9ybWF0SG91cjEyLFxuICAgIFwialwiOiBmb3JtYXREYXlPZlllYXIsXG4gICAgXCJMXCI6IGZvcm1hdE1pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogZm9ybWF0TW9udGhOdW1iZXIsXG4gICAgXCJNXCI6IGZvcm1hdE1pbnV0ZXMsXG4gICAgXCJwXCI6IGZvcm1hdFBlcmlvZCxcbiAgICBcInFcIjogZm9ybWF0UXVhcnRlcixcbiAgICBcIlFcIjogZm9ybWF0VW5peFRpbWVzdGFtcCxcbiAgICBcInNcIjogZm9ybWF0VW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IGZvcm1hdFNlY29uZHMsXG4gICAgXCJ1XCI6IGZvcm1hdFdlZWtkYXlOdW1iZXJNb25kYXksXG4gICAgXCJVXCI6IGZvcm1hdFdlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IGZvcm1hdFdlZWtOdW1iZXJJU08sXG4gICAgXCJ3XCI6IGZvcm1hdFdlZWtkYXlOdW1iZXJTdW5kYXksXG4gICAgXCJXXCI6IGZvcm1hdFdlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IG51bGwsXG4gICAgXCJYXCI6IG51bGwsXG4gICAgXCJ5XCI6IGZvcm1hdFllYXIsXG4gICAgXCJZXCI6IGZvcm1hdEZ1bGxZZWFyLFxuICAgIFwiWlwiOiBmb3JtYXRab25lLFxuICAgIFwiJVwiOiBmb3JtYXRMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIHZhciB1dGNGb3JtYXRzID0ge1xuICAgIFwiYVwiOiBmb3JtYXRVVENTaG9ydFdlZWtkYXksXG4gICAgXCJBXCI6IGZvcm1hdFVUQ1dlZWtkYXksXG4gICAgXCJiXCI6IGZvcm1hdFVUQ1Nob3J0TW9udGgsXG4gICAgXCJCXCI6IGZvcm1hdFVUQ01vbnRoLFxuICAgIFwiY1wiOiBudWxsLFxuICAgIFwiZFwiOiBmb3JtYXRVVENEYXlPZk1vbnRoLFxuICAgIFwiZVwiOiBmb3JtYXRVVENEYXlPZk1vbnRoLFxuICAgIFwiZlwiOiBmb3JtYXRVVENNaWNyb3NlY29uZHMsXG4gICAgXCJnXCI6IGZvcm1hdFVUQ1llYXJJU08sXG4gICAgXCJHXCI6IGZvcm1hdFVUQ0Z1bGxZZWFySVNPLFxuICAgIFwiSFwiOiBmb3JtYXRVVENIb3VyMjQsXG4gICAgXCJJXCI6IGZvcm1hdFVUQ0hvdXIxMixcbiAgICBcImpcIjogZm9ybWF0VVRDRGF5T2ZZZWFyLFxuICAgIFwiTFwiOiBmb3JtYXRVVENNaWxsaXNlY29uZHMsXG4gICAgXCJtXCI6IGZvcm1hdFVUQ01vbnRoTnVtYmVyLFxuICAgIFwiTVwiOiBmb3JtYXRVVENNaW51dGVzLFxuICAgIFwicFwiOiBmb3JtYXRVVENQZXJpb2QsXG4gICAgXCJxXCI6IGZvcm1hdFVUQ1F1YXJ0ZXIsXG4gICAgXCJRXCI6IGZvcm1hdFVuaXhUaW1lc3RhbXAsXG4gICAgXCJzXCI6IGZvcm1hdFVuaXhUaW1lc3RhbXBTZWNvbmRzLFxuICAgIFwiU1wiOiBmb3JtYXRVVENTZWNvbmRzLFxuICAgIFwidVwiOiBmb3JtYXRVVENXZWVrZGF5TnVtYmVyTW9uZGF5LFxuICAgIFwiVVwiOiBmb3JtYXRVVENXZWVrTnVtYmVyU3VuZGF5LFxuICAgIFwiVlwiOiBmb3JtYXRVVENXZWVrTnVtYmVySVNPLFxuICAgIFwid1wiOiBmb3JtYXRVVENXZWVrZGF5TnVtYmVyU3VuZGF5LFxuICAgIFwiV1wiOiBmb3JtYXRVVENXZWVrTnVtYmVyTW9uZGF5LFxuICAgIFwieFwiOiBudWxsLFxuICAgIFwiWFwiOiBudWxsLFxuICAgIFwieVwiOiBmb3JtYXRVVENZZWFyLFxuICAgIFwiWVwiOiBmb3JtYXRVVENGdWxsWWVhcixcbiAgICBcIlpcIjogZm9ybWF0VVRDWm9uZSxcbiAgICBcIiVcIjogZm9ybWF0TGl0ZXJhbFBlcmNlbnRcbiAgfTtcblxuICB2YXIgcGFyc2VzID0ge1xuICAgIFwiYVwiOiBwYXJzZVNob3J0V2Vla2RheSxcbiAgICBcIkFcIjogcGFyc2VXZWVrZGF5LFxuICAgIFwiYlwiOiBwYXJzZVNob3J0TW9udGgsXG4gICAgXCJCXCI6IHBhcnNlTW9udGgsXG4gICAgXCJjXCI6IHBhcnNlTG9jYWxlRGF0ZVRpbWUsXG4gICAgXCJkXCI6IHBhcnNlRGF5T2ZNb250aCxcbiAgICBcImVcIjogcGFyc2VEYXlPZk1vbnRoLFxuICAgIFwiZlwiOiBwYXJzZU1pY3Jvc2Vjb25kcyxcbiAgICBcImdcIjogcGFyc2VZZWFyLFxuICAgIFwiR1wiOiBwYXJzZUZ1bGxZZWFyLFxuICAgIFwiSFwiOiBwYXJzZUhvdXIyNCxcbiAgICBcIklcIjogcGFyc2VIb3VyMjQsXG4gICAgXCJqXCI6IHBhcnNlRGF5T2ZZZWFyLFxuICAgIFwiTFwiOiBwYXJzZU1pbGxpc2Vjb25kcyxcbiAgICBcIm1cIjogcGFyc2VNb250aE51bWJlcixcbiAgICBcIk1cIjogcGFyc2VNaW51dGVzLFxuICAgIFwicFwiOiBwYXJzZVBlcmlvZCxcbiAgICBcInFcIjogcGFyc2VRdWFydGVyLFxuICAgIFwiUVwiOiBwYXJzZVVuaXhUaW1lc3RhbXAsXG4gICAgXCJzXCI6IHBhcnNlVW5peFRpbWVzdGFtcFNlY29uZHMsXG4gICAgXCJTXCI6IHBhcnNlU2Vjb25kcyxcbiAgICBcInVcIjogcGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5LFxuICAgIFwiVVwiOiBwYXJzZVdlZWtOdW1iZXJTdW5kYXksXG4gICAgXCJWXCI6IHBhcnNlV2Vla051bWJlcklTTyxcbiAgICBcIndcIjogcGFyc2VXZWVrZGF5TnVtYmVyU3VuZGF5LFxuICAgIFwiV1wiOiBwYXJzZVdlZWtOdW1iZXJNb25kYXksXG4gICAgXCJ4XCI6IHBhcnNlTG9jYWxlRGF0ZSxcbiAgICBcIlhcIjogcGFyc2VMb2NhbGVUaW1lLFxuICAgIFwieVwiOiBwYXJzZVllYXIsXG4gICAgXCJZXCI6IHBhcnNlRnVsbFllYXIsXG4gICAgXCJaXCI6IHBhcnNlWm9uZSxcbiAgICBcIiVcIjogcGFyc2VMaXRlcmFsUGVyY2VudFxuICB9O1xuXG4gIC8vIFRoZXNlIHJlY3Vyc2l2ZSBkaXJlY3RpdmUgZGVmaW5pdGlvbnMgbXVzdCBiZSBkZWZlcnJlZC5cbiAgZm9ybWF0cy54ID0gbmV3Rm9ybWF0KGxvY2FsZV9kYXRlLCBmb3JtYXRzKTtcbiAgZm9ybWF0cy5YID0gbmV3Rm9ybWF0KGxvY2FsZV90aW1lLCBmb3JtYXRzKTtcbiAgZm9ybWF0cy5jID0gbmV3Rm9ybWF0KGxvY2FsZV9kYXRlVGltZSwgZm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMueCA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZSwgdXRjRm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMuWCA9IG5ld0Zvcm1hdChsb2NhbGVfdGltZSwgdXRjRm9ybWF0cyk7XG4gIHV0Y0Zvcm1hdHMuYyA9IG5ld0Zvcm1hdChsb2NhbGVfZGF0ZVRpbWUsIHV0Y0Zvcm1hdHMpO1xuXG4gIGZ1bmN0aW9uIG5ld0Zvcm1hdChzcGVjaWZpZXIsIGZvcm1hdHMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIHN0cmluZyA9IFtdLFxuICAgICAgICAgIGkgPSAtMSxcbiAgICAgICAgICBqID0gMCxcbiAgICAgICAgICBuID0gc3BlY2lmaWVyLmxlbmd0aCxcbiAgICAgICAgICBjLFxuICAgICAgICAgIHBhZCxcbiAgICAgICAgICBmb3JtYXQ7XG5cbiAgICAgIGlmICghKGRhdGUgaW5zdGFuY2VvZiBEYXRlKSkgZGF0ZSA9IG5ldyBEYXRlKCtkYXRlKTtcblxuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKHNwZWNpZmllci5jaGFyQ29kZUF0KGkpID09PSAzNykge1xuICAgICAgICAgIHN0cmluZy5wdXNoKHNwZWNpZmllci5zbGljZShqLCBpKSk7XG4gICAgICAgICAgaWYgKChwYWQgPSBwYWRzW2MgPSBzcGVjaWZpZXIuY2hhckF0KCsraSldKSAhPSBudWxsKSBjID0gc3BlY2lmaWVyLmNoYXJBdCgrK2kpO1xuICAgICAgICAgIGVsc2UgcGFkID0gYyA9PT0gXCJlXCIgPyBcIiBcIiA6IFwiMFwiO1xuICAgICAgICAgIGlmIChmb3JtYXQgPSBmb3JtYXRzW2NdKSBjID0gZm9ybWF0KGRhdGUsIHBhZCk7XG4gICAgICAgICAgc3RyaW5nLnB1c2goYyk7XG4gICAgICAgICAgaiA9IGkgKyAxO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN0cmluZy5wdXNoKHNwZWNpZmllci5zbGljZShqLCBpKSk7XG4gICAgICByZXR1cm4gc3RyaW5nLmpvaW4oXCJcIik7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG5ld1BhcnNlKHNwZWNpZmllciwgWikge1xuICAgIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICAgIHZhciBkID0gbmV3RGF0ZSgxOTAwLCB1bmRlZmluZWQsIDEpLFxuICAgICAgICAgIGkgPSBwYXJzZVNwZWNpZmllcihkLCBzcGVjaWZpZXIsIHN0cmluZyArPSBcIlwiLCAwKSxcbiAgICAgICAgICB3ZWVrLCBkYXk7XG4gICAgICBpZiAoaSAhPSBzdHJpbmcubGVuZ3RoKSByZXR1cm4gbnVsbDtcblxuICAgICAgLy8gSWYgYSBVTklYIHRpbWVzdGFtcCBpcyBzcGVjaWZpZWQsIHJldHVybiBpdC5cbiAgICAgIGlmIChcIlFcIiBpbiBkKSByZXR1cm4gbmV3IERhdGUoZC5RKTtcbiAgICAgIGlmIChcInNcIiBpbiBkKSByZXR1cm4gbmV3IERhdGUoZC5zICogMTAwMCArIChcIkxcIiBpbiBkID8gZC5MIDogMCkpO1xuXG4gICAgICAvLyBJZiB0aGlzIGlzIHV0Y1BhcnNlLCBuZXZlciB1c2UgdGhlIGxvY2FsIHRpbWV6b25lLlxuICAgICAgaWYgKFogJiYgIShcIlpcIiBpbiBkKSkgZC5aID0gMDtcblxuICAgICAgLy8gVGhlIGFtLXBtIGZsYWcgaXMgMCBmb3IgQU0sIGFuZCAxIGZvciBQTS5cbiAgICAgIGlmIChcInBcIiBpbiBkKSBkLkggPSBkLkggJSAxMiArIGQucCAqIDEyO1xuXG4gICAgICAvLyBJZiB0aGUgbW9udGggd2FzIG5vdCBzcGVjaWZpZWQsIGluaGVyaXQgZnJvbSB0aGUgcXVhcnRlci5cbiAgICAgIGlmIChkLm0gPT09IHVuZGVmaW5lZCkgZC5tID0gXCJxXCIgaW4gZCA/IGQucSA6IDA7XG5cbiAgICAgIC8vIENvbnZlcnQgZGF5LW9mLXdlZWsgYW5kIHdlZWstb2YteWVhciB0byBkYXktb2YteWVhci5cbiAgICAgIGlmIChcIlZcIiBpbiBkKSB7XG4gICAgICAgIGlmIChkLlYgPCAxIHx8IGQuViA+IDUzKSByZXR1cm4gbnVsbDtcbiAgICAgICAgaWYgKCEoXCJ3XCIgaW4gZCkpIGQudyA9IDE7XG4gICAgICAgIGlmIChcIlpcIiBpbiBkKSB7XG4gICAgICAgICAgd2VlayA9IHV0Y0RhdGUobmV3RGF0ZShkLnksIDAsIDEpKSwgZGF5ID0gd2Vlay5nZXRVVENEYXkoKTtcbiAgICAgICAgICB3ZWVrID0gZGF5ID4gNCB8fCBkYXkgPT09IDAgPyB1dGNNb25kYXkuY2VpbCh3ZWVrKSA6IHV0Y01vbmRheSh3ZWVrKTtcbiAgICAgICAgICB3ZWVrID0gdXRjRGF5Lm9mZnNldCh3ZWVrLCAoZC5WIC0gMSkgKiA3KTtcbiAgICAgICAgICBkLnkgPSB3ZWVrLmdldFVUQ0Z1bGxZZWFyKCk7XG4gICAgICAgICAgZC5tID0gd2Vlay5nZXRVVENNb250aCgpO1xuICAgICAgICAgIGQuZCA9IHdlZWsuZ2V0VVRDRGF0ZSgpICsgKGQudyArIDYpICUgNztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3ZWVrID0gbG9jYWxEYXRlKG5ld0RhdGUoZC55LCAwLCAxKSksIGRheSA9IHdlZWsuZ2V0RGF5KCk7XG4gICAgICAgICAgd2VlayA9IGRheSA+IDQgfHwgZGF5ID09PSAwID8gdGltZU1vbmRheS5jZWlsKHdlZWspIDogdGltZU1vbmRheSh3ZWVrKTtcbiAgICAgICAgICB3ZWVrID0gdGltZURheS5vZmZzZXQod2VlaywgKGQuViAtIDEpICogNyk7XG4gICAgICAgICAgZC55ID0gd2Vlay5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgIGQubSA9IHdlZWsuZ2V0TW9udGgoKTtcbiAgICAgICAgICBkLmQgPSB3ZWVrLmdldERhdGUoKSArIChkLncgKyA2KSAlIDc7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoXCJXXCIgaW4gZCB8fCBcIlVcIiBpbiBkKSB7XG4gICAgICAgIGlmICghKFwid1wiIGluIGQpKSBkLncgPSBcInVcIiBpbiBkID8gZC51ICUgNyA6IFwiV1wiIGluIGQgPyAxIDogMDtcbiAgICAgICAgZGF5ID0gXCJaXCIgaW4gZCA/IHV0Y0RhdGUobmV3RGF0ZShkLnksIDAsIDEpKS5nZXRVVENEYXkoKSA6IGxvY2FsRGF0ZShuZXdEYXRlKGQueSwgMCwgMSkpLmdldERheSgpO1xuICAgICAgICBkLm0gPSAwO1xuICAgICAgICBkLmQgPSBcIldcIiBpbiBkID8gKGQudyArIDYpICUgNyArIGQuVyAqIDcgLSAoZGF5ICsgNSkgJSA3IDogZC53ICsgZC5VICogNyAtIChkYXkgKyA2KSAlIDc7XG4gICAgICB9XG5cbiAgICAgIC8vIElmIGEgdGltZSB6b25lIGlzIHNwZWNpZmllZCwgYWxsIGZpZWxkcyBhcmUgaW50ZXJwcmV0ZWQgYXMgVVRDIGFuZCB0aGVuXG4gICAgICAvLyBvZmZzZXQgYWNjb3JkaW5nIHRvIHRoZSBzcGVjaWZpZWQgdGltZSB6b25lLlxuICAgICAgaWYgKFwiWlwiIGluIGQpIHtcbiAgICAgICAgZC5IICs9IGQuWiAvIDEwMCB8IDA7XG4gICAgICAgIGQuTSArPSBkLlogJSAxMDA7XG4gICAgICAgIHJldHVybiB1dGNEYXRlKGQpO1xuICAgICAgfVxuXG4gICAgICAvLyBPdGhlcndpc2UsIGFsbCBmaWVsZHMgYXJlIGluIGxvY2FsIHRpbWUuXG4gICAgICByZXR1cm4gbG9jYWxEYXRlKGQpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVNwZWNpZmllcihkLCBzcGVjaWZpZXIsIHN0cmluZywgaikge1xuICAgIHZhciBpID0gMCxcbiAgICAgICAgbiA9IHNwZWNpZmllci5sZW5ndGgsXG4gICAgICAgIG0gPSBzdHJpbmcubGVuZ3RoLFxuICAgICAgICBjLFxuICAgICAgICBwYXJzZTtcblxuICAgIHdoaWxlIChpIDwgbikge1xuICAgICAgaWYgKGogPj0gbSkgcmV0dXJuIC0xO1xuICAgICAgYyA9IHNwZWNpZmllci5jaGFyQ29kZUF0KGkrKyk7XG4gICAgICBpZiAoYyA9PT0gMzcpIHtcbiAgICAgICAgYyA9IHNwZWNpZmllci5jaGFyQXQoaSsrKTtcbiAgICAgICAgcGFyc2UgPSBwYXJzZXNbYyBpbiBwYWRzID8gc3BlY2lmaWVyLmNoYXJBdChpKyspIDogY107XG4gICAgICAgIGlmICghcGFyc2UgfHwgKChqID0gcGFyc2UoZCwgc3RyaW5nLCBqKSkgPCAwKSkgcmV0dXJuIC0xO1xuICAgICAgfSBlbHNlIGlmIChjICE9IHN0cmluZy5jaGFyQ29kZUF0KGorKykpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBqO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VQZXJpb2QoZCwgc3RyaW5nLCBpKSB7XG4gICAgdmFyIG4gPSBwZXJpb2RSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZC5wID0gcGVyaW9kTG9va3VwLmdldChuWzBdLnRvTG93ZXJDYXNlKCkpLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZVNob3J0V2Vla2RheShkLCBzdHJpbmcsIGkpIHtcbiAgICB2YXIgbiA9IHNob3J0V2Vla2RheVJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkLncgPSBzaG9ydFdlZWtkYXlMb29rdXAuZ2V0KG5bMF0udG9Mb3dlckNhc2UoKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlV2Vla2RheShkLCBzdHJpbmcsIGkpIHtcbiAgICB2YXIgbiA9IHdlZWtkYXlSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZC53ID0gd2Vla2RheUxvb2t1cC5nZXQoblswXS50b0xvd2VyQ2FzZSgpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG5cbiAgZnVuY3Rpb24gcGFyc2VTaG9ydE1vbnRoKGQsIHN0cmluZywgaSkge1xuICAgIHZhciBuID0gc2hvcnRNb250aFJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgICByZXR1cm4gbiA/IChkLm0gPSBzaG9ydE1vbnRoTG9va3VwLmdldChuWzBdLnRvTG93ZXJDYXNlKCkpLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZU1vbnRoKGQsIHN0cmluZywgaSkge1xuICAgIHZhciBuID0gbW9udGhSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gICAgcmV0dXJuIG4gPyAoZC5tID0gbW9udGhMb29rdXAuZ2V0KG5bMF0udG9Mb3dlckNhc2UoKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlTG9jYWxlRGF0ZVRpbWUoZCwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsIGxvY2FsZV9kYXRlVGltZSwgc3RyaW5nLCBpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhcnNlTG9jYWxlRGF0ZShkLCBzdHJpbmcsIGkpIHtcbiAgICByZXR1cm4gcGFyc2VTcGVjaWZpZXIoZCwgbG9jYWxlX2RhdGUsIHN0cmluZywgaSk7XG4gIH1cblxuICBmdW5jdGlvbiBwYXJzZUxvY2FsZVRpbWUoZCwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIHBhcnNlU3BlY2lmaWVyKGQsIGxvY2FsZV90aW1lLCBzdHJpbmcsIGkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0U2hvcnRXZWVrZGF5KGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3Nob3J0V2Vla2RheXNbZC5nZXREYXkoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRXZWVrZGF5KGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3dlZWtkYXlzW2QuZ2V0RGF5KCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0U2hvcnRNb250aChkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9zaG9ydE1vbnRoc1tkLmdldE1vbnRoKCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0TW9udGgoZCkge1xuICAgIHJldHVybiBsb2NhbGVfbW9udGhzW2QuZ2V0TW9udGgoKV07XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXRQZXJpb2QoZCkge1xuICAgIHJldHVybiBsb2NhbGVfcGVyaW9kc1srKGQuZ2V0SG91cnMoKSA+PSAxMildO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0UXVhcnRlcihkKSB7XG4gICAgcmV0dXJuIDEgKyB+fihkLmdldE1vbnRoKCkgLyAzKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ1Nob3J0V2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV9zaG9ydFdlZWtkYXlzW2QuZ2V0VVRDRGF5KCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VVRDV2Vla2RheShkKSB7XG4gICAgcmV0dXJuIGxvY2FsZV93ZWVrZGF5c1tkLmdldFVUQ0RheSgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ1Nob3J0TW9udGgoZCkge1xuICAgIHJldHVybiBsb2NhbGVfc2hvcnRNb250aHNbZC5nZXRVVENNb250aCgpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ01vbnRoKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX21vbnRoc1tkLmdldFVUQ01vbnRoKCldO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9ybWF0VVRDUGVyaW9kKGQpIHtcbiAgICByZXR1cm4gbG9jYWxlX3BlcmlvZHNbKyhkLmdldFVUQ0hvdXJzKCkgPj0gMTIpXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZvcm1hdFVUQ1F1YXJ0ZXIoZCkge1xuICAgIHJldHVybiAxICsgfn4oZC5nZXRVVENNb250aCgpIC8gMyk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZvcm1hdDogZnVuY3Rpb24oc3BlY2lmaWVyKSB7XG4gICAgICB2YXIgZiA9IG5ld0Zvcm1hdChzcGVjaWZpZXIgKz0gXCJcIiwgZm9ybWF0cyk7XG4gICAgICBmLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBzcGVjaWZpZXI7IH07XG4gICAgICByZXR1cm4gZjtcbiAgICB9LFxuICAgIHBhcnNlOiBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgICAgIHZhciBwID0gbmV3UGFyc2Uoc3BlY2lmaWVyICs9IFwiXCIsIGZhbHNlKTtcbiAgICAgIHAudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHNwZWNpZmllcjsgfTtcbiAgICAgIHJldHVybiBwO1xuICAgIH0sXG4gICAgdXRjRm9ybWF0OiBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgICAgIHZhciBmID0gbmV3Rm9ybWF0KHNwZWNpZmllciArPSBcIlwiLCB1dGNGb3JtYXRzKTtcbiAgICAgIGYudG9TdHJpbmcgPSBmdW5jdGlvbigpIHsgcmV0dXJuIHNwZWNpZmllcjsgfTtcbiAgICAgIHJldHVybiBmO1xuICAgIH0sXG4gICAgdXRjUGFyc2U6IGZ1bmN0aW9uKHNwZWNpZmllcikge1xuICAgICAgdmFyIHAgPSBuZXdQYXJzZShzcGVjaWZpZXIgKz0gXCJcIiwgdHJ1ZSk7XG4gICAgICBwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7IHJldHVybiBzcGVjaWZpZXI7IH07XG4gICAgICByZXR1cm4gcDtcbiAgICB9XG4gIH07XG59XG5cbnZhciBwYWRzID0ge1wiLVwiOiBcIlwiLCBcIl9cIjogXCIgXCIsIFwiMFwiOiBcIjBcIn0sXG4gICAgbnVtYmVyUmUgPSAvXlxccypcXGQrLywgLy8gbm90ZTogaWdub3JlcyBuZXh0IGRpcmVjdGl2ZVxuICAgIHBlcmNlbnRSZSA9IC9eJS8sXG4gICAgcmVxdW90ZVJlID0gL1tcXFxcXiQqKz98W1xcXSgpLnt9XS9nO1xuXG5mdW5jdGlvbiBwYWQodmFsdWUsIGZpbGwsIHdpZHRoKSB7XG4gIHZhciBzaWduID0gdmFsdWUgPCAwID8gXCItXCIgOiBcIlwiLFxuICAgICAgc3RyaW5nID0gKHNpZ24gPyAtdmFsdWUgOiB2YWx1ZSkgKyBcIlwiLFxuICAgICAgbGVuZ3RoID0gc3RyaW5nLmxlbmd0aDtcbiAgcmV0dXJuIHNpZ24gKyAobGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKGZpbGwpICsgc3RyaW5nIDogc3RyaW5nKTtcbn1cblxuZnVuY3Rpb24gcmVxdW90ZShzKSB7XG4gIHJldHVybiBzLnJlcGxhY2UocmVxdW90ZVJlLCBcIlxcXFwkJlwiKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0UmUobmFtZXMpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeKD86XCIgKyBuYW1lcy5tYXAocmVxdW90ZSkuam9pbihcInxcIikgKyBcIilcIiwgXCJpXCIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRMb29rdXAobmFtZXMpIHtcbiAgcmV0dXJuIG5ldyBNYXAobmFtZXMubWFwKChuYW1lLCBpKSA9PiBbbmFtZS50b0xvd2VyQ2FzZSgpLCBpXSkpO1xufVxuXG5mdW5jdGlvbiBwYXJzZVdlZWtkYXlOdW1iZXJTdW5kYXkoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDEpKTtcbiAgcmV0dXJuIG4gPyAoZC53ID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrZGF5TnVtYmVyTW9uZGF5KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAxKSk7XG4gIHJldHVybiBuID8gKGQudSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlV2Vla051bWJlclN1bmRheShkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLlUgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVdlZWtOdW1iZXJJU08oZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5WID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VXZWVrTnVtYmVyTW9uZGF5KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuVyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlRnVsbFllYXIoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDQpKTtcbiAgcmV0dXJuIG4gPyAoZC55ID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VZZWFyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQueSA9ICtuWzBdICsgKCtuWzBdID4gNjggPyAxOTAwIDogMjAwMCksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2Vab25lKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IC9eKFopfChbKy1dXFxkXFxkKSg/Ojo/KFxcZFxcZCkpPy8uZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDYpKTtcbiAgcmV0dXJuIG4gPyAoZC5aID0gblsxXSA/IDAgOiAtKG5bMl0gKyAoblszXSB8fCBcIjAwXCIpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVF1YXJ0ZXIoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDEpKTtcbiAgcmV0dXJuIG4gPyAoZC5xID0gblswXSAqIDMgLSAzLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTW9udGhOdW1iZXIoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5tID0gblswXSAtIDEsIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VEYXlPZk1vbnRoKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuZCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlRGF5T2ZZZWFyKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAzKSk7XG4gIHJldHVybiBuID8gKGQubSA9IDAsIGQuZCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlSG91cjI0KGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGksIGkgKyAyKSk7XG4gIHJldHVybiBuID8gKGQuSCA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlTWludXRlcyhkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpLCBpICsgMikpO1xuICByZXR1cm4gbiA/IChkLk0gPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xufVxuXG5mdW5jdGlvbiBwYXJzZVNlY29uZHMoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDIpKTtcbiAgcmV0dXJuIG4gPyAoZC5TID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VNaWxsaXNlY29uZHMoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDMpKTtcbiAgcmV0dXJuIG4gPyAoZC5MID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VNaWNyb3NlY29uZHMoZCwgc3RyaW5nLCBpKSB7XG4gIHZhciBuID0gbnVtYmVyUmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDYpKTtcbiAgcmV0dXJuIG4gPyAoZC5MID0gTWF0aC5mbG9vcihuWzBdIC8gMTAwMCksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VMaXRlcmFsUGVyY2VudChkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBwZXJjZW50UmUuZXhlYyhzdHJpbmcuc2xpY2UoaSwgaSArIDEpKTtcbiAgcmV0dXJuIG4gPyBpICsgblswXS5sZW5ndGggOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VVbml4VGltZXN0YW1wKGQsIHN0cmluZywgaSkge1xuICB2YXIgbiA9IG51bWJlclJlLmV4ZWMoc3RyaW5nLnNsaWNlKGkpKTtcbiAgcmV0dXJuIG4gPyAoZC5RID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbn1cblxuZnVuY3Rpb24gcGFyc2VVbml4VGltZXN0YW1wU2Vjb25kcyhkLCBzdHJpbmcsIGkpIHtcbiAgdmFyIG4gPSBudW1iZXJSZS5leGVjKHN0cmluZy5zbGljZShpKSk7XG4gIHJldHVybiBuID8gKGQucyA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdERheU9mTW9udGgoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0RGF0ZSgpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0SG91cjI0KGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldEhvdXJzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRIb3VyMTIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0SG91cnMoKSAlIDEyIHx8IDEyLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RGF5T2ZZZWFyKGQsIHApIHtcbiAgcmV0dXJuIHBhZCgxICsgdGltZURheS5jb3VudCh0aW1lWWVhcihkKSwgZCksIHAsIDMpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRNaWxsaXNlY29uZHMoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0TWlsbGlzZWNvbmRzKCksIHAsIDMpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRNaWNyb3NlY29uZHMoZCwgcCkge1xuICByZXR1cm4gZm9ybWF0TWlsbGlzZWNvbmRzKGQsIHApICsgXCIwMDBcIjtcbn1cblxuZnVuY3Rpb24gZm9ybWF0TW9udGhOdW1iZXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0TW9udGgoKSArIDEsIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRNaW51dGVzKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldE1pbnV0ZXMoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFNlY29uZHMoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0U2Vjb25kcygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0V2Vla2RheU51bWJlck1vbmRheShkKSB7XG4gIHZhciBkYXkgPSBkLmdldERheSgpO1xuICByZXR1cm4gZGF5ID09PSAwID8gNyA6IGRheTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0V2Vla051bWJlclN1bmRheShkLCBwKSB7XG4gIHJldHVybiBwYWQodGltZVN1bmRheS5jb3VudCh0aW1lWWVhcihkKSAtIDEsIGQpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZElTTyhkKSB7XG4gIHZhciBkYXkgPSBkLmdldERheSgpO1xuICByZXR1cm4gKGRheSA+PSA0IHx8IGRheSA9PT0gMCkgPyB0aW1lVGh1cnNkYXkoZCkgOiB0aW1lVGh1cnNkYXkuY2VpbChkKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0V2Vla051bWJlcklTTyhkLCBwKSB7XG4gIGQgPSBkSVNPKGQpO1xuICByZXR1cm4gcGFkKHRpbWVUaHVyc2RheS5jb3VudCh0aW1lWWVhcihkKSwgZCkgKyAodGltZVllYXIoZCkuZ2V0RGF5KCkgPT09IDQpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0V2Vla2RheU51bWJlclN1bmRheShkKSB7XG4gIHJldHVybiBkLmdldERheSgpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRXZWVrTnVtYmVyTW9uZGF5KGQsIHApIHtcbiAgcmV0dXJuIHBhZCh0aW1lTW9uZGF5LmNvdW50KHRpbWVZZWFyKGQpIC0gMSwgZCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRZZWFyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldEZ1bGxZZWFyKCkgJSAxMDAsIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRZZWFySVNPKGQsIHApIHtcbiAgZCA9IGRJU08oZCk7XG4gIHJldHVybiBwYWQoZC5nZXRGdWxsWWVhcigpICUgMTAwLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RnVsbFllYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0RnVsbFllYXIoKSAlIDEwMDAwLCBwLCA0KTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0RnVsbFllYXJJU08oZCwgcCkge1xuICB2YXIgZGF5ID0gZC5nZXREYXkoKTtcbiAgZCA9IChkYXkgPj0gNCB8fCBkYXkgPT09IDApID8gdGltZVRodXJzZGF5KGQpIDogdGltZVRodXJzZGF5LmNlaWwoZCk7XG4gIHJldHVybiBwYWQoZC5nZXRGdWxsWWVhcigpICUgMTAwMDAsIHAsIDQpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRab25lKGQpIHtcbiAgdmFyIHogPSBkLmdldFRpbWV6b25lT2Zmc2V0KCk7XG4gIHJldHVybiAoeiA+IDAgPyBcIi1cIiA6ICh6ICo9IC0xLCBcIitcIikpXG4gICAgICArIHBhZCh6IC8gNjAgfCAwLCBcIjBcIiwgMilcbiAgICAgICsgcGFkKHogJSA2MCwgXCIwXCIsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENEYXlPZk1vbnRoKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0RhdGUoKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0hvdXIyNChkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENIb3VycygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDSG91cjEyKGQsIHApIHtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0hvdXJzKCkgJSAxMiB8fCAxMiwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ0RheU9mWWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoMSArIHV0Y0RheS5jb3VudCh1dGNZZWFyKGQpLCBkKSwgcCwgMyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ01pbGxpc2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENNaWxsaXNlY29uZHMoKSwgcCwgMyk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ01pY3Jvc2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBmb3JtYXRVVENNaWxsaXNlY29uZHMoZCwgcCkgKyBcIjAwMFwiO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENNb250aE51bWJlcihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENNb250aCgpICsgMSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ01pbnV0ZXMoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDTWludXRlcygpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDU2Vjb25kcyhkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENTZWNvbmRzKCksIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENXZWVrZGF5TnVtYmVyTW9uZGF5KGQpIHtcbiAgdmFyIGRvdyA9IGQuZ2V0VVRDRGF5KCk7XG4gIHJldHVybiBkb3cgPT09IDAgPyA3IDogZG93O1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENXZWVrTnVtYmVyU3VuZGF5KGQsIHApIHtcbiAgcmV0dXJuIHBhZCh1dGNTdW5kYXkuY291bnQodXRjWWVhcihkKSAtIDEsIGQpLCBwLCAyKTtcbn1cblxuZnVuY3Rpb24gVVRDZElTTyhkKSB7XG4gIHZhciBkYXkgPSBkLmdldFVUQ0RheSgpO1xuICByZXR1cm4gKGRheSA+PSA0IHx8IGRheSA9PT0gMCkgPyB1dGNUaHVyc2RheShkKSA6IHV0Y1RodXJzZGF5LmNlaWwoZCk7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtOdW1iZXJJU08oZCwgcCkge1xuICBkID0gVVRDZElTTyhkKTtcbiAgcmV0dXJuIHBhZCh1dGNUaHVyc2RheS5jb3VudCh1dGNZZWFyKGQpLCBkKSArICh1dGNZZWFyKGQpLmdldFVUQ0RheSgpID09PSA0KSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1dlZWtkYXlOdW1iZXJTdW5kYXkoZCkge1xuICByZXR1cm4gZC5nZXRVVENEYXkoKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0VVRDV2Vla051bWJlck1vbmRheShkLCBwKSB7XG4gIHJldHVybiBwYWQodXRjTW9uZGF5LmNvdW50KHV0Y1llYXIoZCkgLSAxLCBkKSwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1llYXIoZCwgcCkge1xuICByZXR1cm4gcGFkKGQuZ2V0VVRDRnVsbFllYXIoKSAlIDEwMCwgcCwgMik7XG59XG5cbmZ1bmN0aW9uIGZvcm1hdFVUQ1llYXJJU08oZCwgcCkge1xuICBkID0gVVRDZElTTyhkKTtcbiAgcmV0dXJuIHBhZChkLmdldFVUQ0Z1bGxZZWFyKCkgJSAxMDAsIHAsIDIpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENGdWxsWWVhcihkLCBwKSB7XG4gIHJldHVybiBwYWQoZC5nZXRVVENGdWxsWWVhcigpICUgMTAwMDAsIHAsIDQpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENGdWxsWWVhcklTTyhkLCBwKSB7XG4gIHZhciBkYXkgPSBkLmdldFVUQ0RheSgpO1xuICBkID0gKGRheSA+PSA0IHx8IGRheSA9PT0gMCkgPyB1dGNUaHVyc2RheShkKSA6IHV0Y1RodXJzZGF5LmNlaWwoZCk7XG4gIHJldHVybiBwYWQoZC5nZXRVVENGdWxsWWVhcigpICUgMTAwMDAsIHAsIDQpO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVVENab25lKCkge1xuICByZXR1cm4gXCIrMDAwMFwiO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRMaXRlcmFsUGVyY2VudCgpIHtcbiAgcmV0dXJuIFwiJVwiO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVbml4VGltZXN0YW1wKGQpIHtcbiAgcmV0dXJuICtkO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRVbml4VGltZXN0YW1wU2Vjb25kcyhkKSB7XG4gIHJldHVybiBNYXRoLmZsb29yKCtkIC8gMTAwMCk7XG59XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcbmltcG9ydCB7ZHVyYXRpb25EYXksIGR1cmF0aW9uTWludXRlfSBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuXG52YXIgZGF5ID0gaW50ZXJ2YWwoXG4gIGRhdGUgPT4gZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKSxcbiAgKGRhdGUsIHN0ZXApID0+IGRhdGUuc2V0RGF0ZShkYXRlLmdldERhdGUoKSArIHN0ZXApLFxuICAoc3RhcnQsIGVuZCkgPT4gKGVuZCAtIHN0YXJ0IC0gKGVuZC5nZXRUaW1lem9uZU9mZnNldCgpIC0gc3RhcnQuZ2V0VGltZXpvbmVPZmZzZXQoKSkgKiBkdXJhdGlvbk1pbnV0ZSkgLyBkdXJhdGlvbkRheSxcbiAgZGF0ZSA9PiBkYXRlLmdldERhdGUoKSAtIDFcbik7XG5cbmV4cG9ydCBkZWZhdWx0IGRheTtcbmV4cG9ydCB2YXIgZGF5cyA9IGRheS5yYW5nZTtcbiIsImV4cG9ydCB2YXIgZHVyYXRpb25TZWNvbmQgPSAxZTM7XG5leHBvcnQgdmFyIGR1cmF0aW9uTWludXRlID0gNmU0O1xuZXhwb3J0IHZhciBkdXJhdGlvbkhvdXIgPSAzNmU1O1xuZXhwb3J0IHZhciBkdXJhdGlvbkRheSA9IDg2NGU1O1xuZXhwb3J0IHZhciBkdXJhdGlvbldlZWsgPSA2MDQ4ZTU7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcbmltcG9ydCB7ZHVyYXRpb25Ib3VyLCBkdXJhdGlvbk1pbnV0ZSwgZHVyYXRpb25TZWNvbmR9IGZyb20gXCIuL2R1cmF0aW9uLmpzXCI7XG5cbnZhciBob3VyID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldFRpbWUoZGF0ZSAtIGRhdGUuZ2V0TWlsbGlzZWNvbmRzKCkgLSBkYXRlLmdldFNlY29uZHMoKSAqIGR1cmF0aW9uU2Vjb25kIC0gZGF0ZS5nZXRNaW51dGVzKCkgKiBkdXJhdGlvbk1pbnV0ZSk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvbkhvdXIpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uSG91cjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0SG91cnMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBob3VyO1xuZXhwb3J0IHZhciBob3VycyA9IGhvdXIucmFuZ2U7XG4iLCJleHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVJbnRlcnZhbFxufSBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVNaWxsaXNlY29uZCxcbiAgbWlsbGlzZWNvbmRzIGFzIHRpbWVNaWxsaXNlY29uZHMsXG4gIGRlZmF1bHQgYXMgdXRjTWlsbGlzZWNvbmQsXG4gIG1pbGxpc2Vjb25kcyBhcyB1dGNNaWxsaXNlY29uZHNcbn0gZnJvbSBcIi4vbWlsbGlzZWNvbmQuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lU2Vjb25kLFxuICBzZWNvbmRzIGFzIHRpbWVTZWNvbmRzLFxuICBkZWZhdWx0IGFzIHV0Y1NlY29uZCxcbiAgc2Vjb25kcyBhcyB1dGNTZWNvbmRzXG59IGZyb20gXCIuL3NlY29uZC5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVNaW51dGUsXG4gIG1pbnV0ZXMgYXMgdGltZU1pbnV0ZXNcbn0gZnJvbSBcIi4vbWludXRlLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZUhvdXIsXG4gIGhvdXJzIGFzIHRpbWVIb3Vyc1xufSBmcm9tIFwiLi9ob3VyLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZURheSxcbiAgZGF5cyBhcyB0aW1lRGF5c1xufSBmcm9tIFwiLi9kYXkuanNcIjtcblxuZXhwb3J0IHtcbiAgc3VuZGF5IGFzIHRpbWVXZWVrLFxuICBzdW5kYXlzIGFzIHRpbWVXZWVrcyxcbiAgc3VuZGF5IGFzIHRpbWVTdW5kYXksXG4gIHN1bmRheXMgYXMgdGltZVN1bmRheXMsXG4gIG1vbmRheSBhcyB0aW1lTW9uZGF5LFxuICBtb25kYXlzIGFzIHRpbWVNb25kYXlzLFxuICB0dWVzZGF5IGFzIHRpbWVUdWVzZGF5LFxuICB0dWVzZGF5cyBhcyB0aW1lVHVlc2RheXMsXG4gIHdlZG5lc2RheSBhcyB0aW1lV2VkbmVzZGF5LFxuICB3ZWRuZXNkYXlzIGFzIHRpbWVXZWRuZXNkYXlzLFxuICB0aHVyc2RheSBhcyB0aW1lVGh1cnNkYXksXG4gIHRodXJzZGF5cyBhcyB0aW1lVGh1cnNkYXlzLFxuICBmcmlkYXkgYXMgdGltZUZyaWRheSxcbiAgZnJpZGF5cyBhcyB0aW1lRnJpZGF5cyxcbiAgc2F0dXJkYXkgYXMgdGltZVNhdHVyZGF5LFxuICBzYXR1cmRheXMgYXMgdGltZVNhdHVyZGF5c1xufSBmcm9tIFwiLi93ZWVrLmpzXCI7XG5cbmV4cG9ydCB7XG4gIGRlZmF1bHQgYXMgdGltZU1vbnRoLFxuICBtb250aHMgYXMgdGltZU1vbnRoc1xufSBmcm9tIFwiLi9tb250aC5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHRpbWVZZWFyLFxuICB5ZWFycyBhcyB0aW1lWWVhcnNcbn0gZnJvbSBcIi4veWVhci5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y01pbnV0ZSxcbiAgdXRjTWludXRlcyBhcyB1dGNNaW51dGVzXG59IGZyb20gXCIuL3V0Y01pbnV0ZS5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y0hvdXIsXG4gIHV0Y0hvdXJzIGFzIHV0Y0hvdXJzXG59IGZyb20gXCIuL3V0Y0hvdXIuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNEYXksXG4gIHV0Y0RheXMgYXMgdXRjRGF5c1xufSBmcm9tIFwiLi91dGNEYXkuanNcIjtcblxuZXhwb3J0IHtcbiAgdXRjU3VuZGF5IGFzIHV0Y1dlZWssXG4gIHV0Y1N1bmRheXMgYXMgdXRjV2Vla3MsXG4gIHV0Y1N1bmRheSBhcyB1dGNTdW5kYXksXG4gIHV0Y1N1bmRheXMgYXMgdXRjU3VuZGF5cyxcbiAgdXRjTW9uZGF5IGFzIHV0Y01vbmRheSxcbiAgdXRjTW9uZGF5cyBhcyB1dGNNb25kYXlzLFxuICB1dGNUdWVzZGF5IGFzIHV0Y1R1ZXNkYXksXG4gIHV0Y1R1ZXNkYXlzIGFzIHV0Y1R1ZXNkYXlzLFxuICB1dGNXZWRuZXNkYXkgYXMgdXRjV2VkbmVzZGF5LFxuICB1dGNXZWRuZXNkYXlzIGFzIHV0Y1dlZG5lc2RheXMsXG4gIHV0Y1RodXJzZGF5IGFzIHV0Y1RodXJzZGF5LFxuICB1dGNUaHVyc2RheXMgYXMgdXRjVGh1cnNkYXlzLFxuICB1dGNGcmlkYXkgYXMgdXRjRnJpZGF5LFxuICB1dGNGcmlkYXlzIGFzIHV0Y0ZyaWRheXMsXG4gIHV0Y1NhdHVyZGF5IGFzIHV0Y1NhdHVyZGF5LFxuICB1dGNTYXR1cmRheXMgYXMgdXRjU2F0dXJkYXlzXG59IGZyb20gXCIuL3V0Y1dlZWsuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB1dGNNb250aCxcbiAgdXRjTW9udGhzIGFzIHV0Y01vbnRoc1xufSBmcm9tIFwiLi91dGNNb250aC5qc1wiO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIHV0Y1llYXIsXG4gIHV0Y1llYXJzIGFzIHV0Y1llYXJzXG59IGZyb20gXCIuL3V0Y1llYXIuanNcIjtcbiIsInZhciB0MCA9IG5ldyBEYXRlLFxuICAgIHQxID0gbmV3IERhdGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5ld0ludGVydmFsKGZsb29yaSwgb2Zmc2V0aSwgY291bnQsIGZpZWxkKSB7XG5cbiAgZnVuY3Rpb24gaW50ZXJ2YWwoZGF0ZSkge1xuICAgIHJldHVybiBmbG9vcmkoZGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPT09IDAgPyBuZXcgRGF0ZSA6IG5ldyBEYXRlKCtkYXRlKSksIGRhdGU7XG4gIH1cblxuICBpbnRlcnZhbC5mbG9vciA9IGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZmxvb3JpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSkpLCBkYXRlO1xuICB9O1xuXG4gIGludGVydmFsLmNlaWwgPSBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGZsb29yaShkYXRlID0gbmV3IERhdGUoZGF0ZSAtIDEpKSwgb2Zmc2V0aShkYXRlLCAxKSwgZmxvb3JpKGRhdGUpLCBkYXRlO1xuICB9O1xuXG4gIGludGVydmFsLnJvdW5kID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgIHZhciBkMCA9IGludGVydmFsKGRhdGUpLFxuICAgICAgICBkMSA9IGludGVydmFsLmNlaWwoZGF0ZSk7XG4gICAgcmV0dXJuIGRhdGUgLSBkMCA8IGQxIC0gZGF0ZSA/IGQwIDogZDE7XG4gIH07XG5cbiAgaW50ZXJ2YWwub2Zmc2V0ID0gZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIHJldHVybiBvZmZzZXRpKGRhdGUgPSBuZXcgRGF0ZSgrZGF0ZSksIHN0ZXAgPT0gbnVsbCA/IDEgOiBNYXRoLmZsb29yKHN0ZXApKSwgZGF0ZTtcbiAgfTtcblxuICBpbnRlcnZhbC5yYW5nZSA9IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gICAgdmFyIHJhbmdlID0gW10sIHByZXZpb3VzO1xuICAgIHN0YXJ0ID0gaW50ZXJ2YWwuY2VpbChzdGFydCk7XG4gICAgc3RlcCA9IHN0ZXAgPT0gbnVsbCA/IDEgOiBNYXRoLmZsb29yKHN0ZXApO1xuICAgIGlmICghKHN0YXJ0IDwgc3RvcCkgfHwgIShzdGVwID4gMCkpIHJldHVybiByYW5nZTsgLy8gYWxzbyBoYW5kbGVzIEludmFsaWQgRGF0ZVxuICAgIGRvIHJhbmdlLnB1c2gocHJldmlvdXMgPSBuZXcgRGF0ZSgrc3RhcnQpKSwgb2Zmc2V0aShzdGFydCwgc3RlcCksIGZsb29yaShzdGFydCk7XG4gICAgd2hpbGUgKHByZXZpb3VzIDwgc3RhcnQgJiYgc3RhcnQgPCBzdG9wKTtcbiAgICByZXR1cm4gcmFuZ2U7XG4gIH07XG5cbiAgaW50ZXJ2YWwuZmlsdGVyID0gZnVuY3Rpb24odGVzdCkge1xuICAgIHJldHVybiBuZXdJbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgICBpZiAoZGF0ZSA+PSBkYXRlKSB3aGlsZSAoZmxvb3JpKGRhdGUpLCAhdGVzdChkYXRlKSkgZGF0ZS5zZXRUaW1lKGRhdGUgLSAxKTtcbiAgICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgICBpZiAoZGF0ZSA+PSBkYXRlKSB7XG4gICAgICAgIGlmIChzdGVwIDwgMCkgd2hpbGUgKCsrc3RlcCA8PSAwKSB7XG4gICAgICAgICAgd2hpbGUgKG9mZnNldGkoZGF0ZSwgLTEpLCAhdGVzdChkYXRlKSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuICAgICAgICB9IGVsc2Ugd2hpbGUgKC0tc3RlcCA+PSAwKSB7XG4gICAgICAgICAgd2hpbGUgKG9mZnNldGkoZGF0ZSwgKzEpLCAhdGVzdChkYXRlKSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgaWYgKGNvdW50KSB7XG4gICAgaW50ZXJ2YWwuY291bnQgPSBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgICB0MC5zZXRUaW1lKCtzdGFydCksIHQxLnNldFRpbWUoK2VuZCk7XG4gICAgICBmbG9vcmkodDApLCBmbG9vcmkodDEpO1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoY291bnQodDAsIHQxKSk7XG4gICAgfTtcblxuICAgIGludGVydmFsLmV2ZXJ5ID0gZnVuY3Rpb24oc3RlcCkge1xuICAgICAgc3RlcCA9IE1hdGguZmxvb3Ioc3RlcCk7XG4gICAgICByZXR1cm4gIWlzRmluaXRlKHN0ZXApIHx8ICEoc3RlcCA+IDApID8gbnVsbFxuICAgICAgICAgIDogIShzdGVwID4gMSkgPyBpbnRlcnZhbFxuICAgICAgICAgIDogaW50ZXJ2YWwuZmlsdGVyKGZpZWxkXG4gICAgICAgICAgICAgID8gZnVuY3Rpb24oZCkgeyByZXR1cm4gZmllbGQoZCkgJSBzdGVwID09PSAwOyB9XG4gICAgICAgICAgICAgIDogZnVuY3Rpb24oZCkgeyByZXR1cm4gaW50ZXJ2YWwuY291bnQoMCwgZCkgJSBzdGVwID09PSAwOyB9KTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGludGVydmFsO1xufVxuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5cbnZhciBtaWxsaXNlY29uZCA9IGludGVydmFsKGZ1bmN0aW9uKCkge1xuICAvLyBub29wXG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kIC0gc3RhcnQ7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxubWlsbGlzZWNvbmQuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIGsgPSBNYXRoLmZsb29yKGspO1xuICBpZiAoIWlzRmluaXRlKGspIHx8ICEoayA+IDApKSByZXR1cm4gbnVsbDtcbiAgaWYgKCEoayA+IDEpKSByZXR1cm4gbWlsbGlzZWNvbmQ7XG4gIHJldHVybiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXRUaW1lKE1hdGguZmxvb3IoZGF0ZSAvIGspICogayk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogayk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGs7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWlsbGlzZWNvbmQ7XG5leHBvcnQgdmFyIG1pbGxpc2Vjb25kcyA9IG1pbGxpc2Vjb25kLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5pbXBvcnQge2R1cmF0aW9uTWludXRlLCBkdXJhdGlvblNlY29uZH0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIG1pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKGRhdGUgLSBkYXRlLmdldE1pbGxpc2Vjb25kcygpIC0gZGF0ZS5nZXRTZWNvbmRzKCkgKiBkdXJhdGlvblNlY29uZCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0VGltZSgrZGF0ZSArIHN0ZXAgKiBkdXJhdGlvbk1pbnV0ZSk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25NaW51dGU7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldE1pbnV0ZXMoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBtaW51dGU7XG5leHBvcnQgdmFyIG1pbnV0ZXMgPSBtaW51dGUucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcblxudmFyIG1vbnRoID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldERhdGUoMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0TW9udGgoZGF0ZS5nZXRNb250aCgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0TW9udGgoKSAtIHN0YXJ0LmdldE1vbnRoKCkgKyAoZW5kLmdldEZ1bGxZZWFyKCkgLSBzdGFydC5nZXRGdWxsWWVhcigpKSAqIDEyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRNb250aCgpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vbnRoO1xuZXhwb3J0IHZhciBtb250aHMgPSBtb250aC5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuaW1wb3J0IHtkdXJhdGlvblNlY29uZH0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIHNlY29uZCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRUaW1lKGRhdGUgLSBkYXRlLmdldE1pbGxpc2Vjb25kcygpKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uU2Vjb25kKTtcbn0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgcmV0dXJuIChlbmQgLSBzdGFydCkgLyBkdXJhdGlvblNlY29uZDtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDU2Vjb25kcygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHNlY29uZDtcbmV4cG9ydCB2YXIgc2Vjb25kcyA9IHNlY29uZC5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuaW1wb3J0IHtkdXJhdGlvbkRheX0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIHV0Y0RheSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENIb3VycygwLCAwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRVVENEYXRlKGRhdGUuZ2V0VVRDRGF0ZSgpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25EYXk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldFVUQ0RhdGUoKSAtIDE7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjRGF5O1xuZXhwb3J0IHZhciB1dGNEYXlzID0gdXRjRGF5LnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5pbXBvcnQge2R1cmF0aW9uSG91cn0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIHV0Y0hvdXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0VVRDTWludXRlcygwLCAwLCAwKTtcbn0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgZGF0ZS5zZXRUaW1lKCtkYXRlICsgc3RlcCAqIGR1cmF0aW9uSG91cik7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiAoZW5kIC0gc3RhcnQpIC8gZHVyYXRpb25Ib3VyO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENIb3VycygpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHV0Y0hvdXI7XG5leHBvcnQgdmFyIHV0Y0hvdXJzID0gdXRjSG91ci5yYW5nZTtcbiIsImltcG9ydCBpbnRlcnZhbCBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuaW1wb3J0IHtkdXJhdGlvbk1pbnV0ZX0gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxudmFyIHV0Y01pbnV0ZSA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENTZWNvbmRzKDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFRpbWUoK2RhdGUgKyBzdGVwICogZHVyYXRpb25NaW51dGUpO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uTWludXRlO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENNaW51dGVzKCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgdXRjTWludXRlO1xuZXhwb3J0IHZhciB1dGNNaW51dGVzID0gdXRjTWludXRlLnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5cbnZhciB1dGNNb250aCA9IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgZGF0ZS5zZXRVVENEYXRlKDEpO1xuICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFVUQ01vbnRoKGRhdGUuZ2V0VVRDTW9udGgoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldFVUQ01vbnRoKCkgLSBzdGFydC5nZXRVVENNb250aCgpICsgKGVuZC5nZXRVVENGdWxsWWVhcigpIC0gc3RhcnQuZ2V0VVRDRnVsbFllYXIoKSkgKiAxMjtcbn0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgcmV0dXJuIGRhdGUuZ2V0VVRDTW9udGgoKTtcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB1dGNNb250aDtcbmV4cG9ydCB2YXIgdXRjTW9udGhzID0gdXRjTW9udGgucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcbmltcG9ydCB7ZHVyYXRpb25XZWVrfSBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuXG5mdW5jdGlvbiB1dGNXZWVrZGF5KGkpIHtcbiAgcmV0dXJuIGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgLSAoZGF0ZS5nZXRVVENEYXkoKSArIDcgLSBpKSAlIDcpO1xuICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBzdGVwICogNyk7XG4gIH0sIGZ1bmN0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gKGVuZCAtIHN0YXJ0KSAvIGR1cmF0aW9uV2VlaztcbiAgfSk7XG59XG5cbmV4cG9ydCB2YXIgdXRjU3VuZGF5ID0gdXRjV2Vla2RheSgwKTtcbmV4cG9ydCB2YXIgdXRjTW9uZGF5ID0gdXRjV2Vla2RheSgxKTtcbmV4cG9ydCB2YXIgdXRjVHVlc2RheSA9IHV0Y1dlZWtkYXkoMik7XG5leHBvcnQgdmFyIHV0Y1dlZG5lc2RheSA9IHV0Y1dlZWtkYXkoMyk7XG5leHBvcnQgdmFyIHV0Y1RodXJzZGF5ID0gdXRjV2Vla2RheSg0KTtcbmV4cG9ydCB2YXIgdXRjRnJpZGF5ID0gdXRjV2Vla2RheSg1KTtcbmV4cG9ydCB2YXIgdXRjU2F0dXJkYXkgPSB1dGNXZWVrZGF5KDYpO1xuXG5leHBvcnQgdmFyIHV0Y1N1bmRheXMgPSB1dGNTdW5kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y01vbmRheXMgPSB1dGNNb25kYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1R1ZXNkYXlzID0gdXRjVHVlc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjV2VkbmVzZGF5cyA9IHV0Y1dlZG5lc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgdXRjVGh1cnNkYXlzID0gdXRjVGh1cnNkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y0ZyaWRheXMgPSB1dGNGcmlkYXkucmFuZ2U7XG5leHBvcnQgdmFyIHV0Y1NhdHVyZGF5cyA9IHV0Y1NhdHVyZGF5LnJhbmdlO1xuIiwiaW1wb3J0IGludGVydmFsIGZyb20gXCIuL2ludGVydmFsLmpzXCI7XG5cbnZhciB1dGNZZWFyID0gaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICBkYXRlLnNldFVUQ01vbnRoKDAsIDEpO1xuICBkYXRlLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApO1xufSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICBkYXRlLnNldFVUQ0Z1bGxZZWFyKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSArIHN0ZXApO1xufSwgZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICByZXR1cm4gZW5kLmdldFVUQ0Z1bGxZZWFyKCkgLSBzdGFydC5nZXRVVENGdWxsWWVhcigpO1xufSwgZnVuY3Rpb24oZGF0ZSkge1xuICByZXR1cm4gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xufSk7XG5cbi8vIEFuIG9wdGltaXplZCBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBzaW1wbGUgY2FzZS5cbnV0Y1llYXIuZXZlcnkgPSBmdW5jdGlvbihrKSB7XG4gIHJldHVybiAhaXNGaW5pdGUoayA9IE1hdGguZmxvb3IoaykpIHx8ICEoayA+IDApID8gbnVsbCA6IGludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKE1hdGguZmxvb3IoZGF0ZS5nZXRVVENGdWxsWWVhcigpIC8gaykgKiBrKTtcbiAgICBkYXRlLnNldFVUQ01vbnRoKDAsIDEpO1xuICAgIGRhdGUuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIHN0ZXApIHtcbiAgICBkYXRlLnNldFVUQ0Z1bGxZZWFyKGRhdGUuZ2V0VVRDRnVsbFllYXIoKSArIHN0ZXAgKiBrKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1dGNZZWFyO1xuZXhwb3J0IHZhciB1dGNZZWFycyA9IHV0Y1llYXIucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcbmltcG9ydCB7ZHVyYXRpb25NaW51dGUsIGR1cmF0aW9uV2Vla30gZnJvbSBcIi4vZHVyYXRpb24uanNcIjtcblxuZnVuY3Rpb24gd2Vla2RheShpKSB7XG4gIHJldHVybiBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpIC0gKGRhdGUuZ2V0RGF5KCkgKyA3IC0gaSkgJSA3KTtcbiAgICBkYXRlLnNldEhvdXJzKDAsIDAsIDAsIDApO1xuICB9LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgc3RlcCAqIDcpO1xuICB9LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gICAgcmV0dXJuIChlbmQgLSBzdGFydCAtIChlbmQuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHN0YXJ0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogZHVyYXRpb25NaW51dGUpIC8gZHVyYXRpb25XZWVrO1xuICB9KTtcbn1cblxuZXhwb3J0IHZhciBzdW5kYXkgPSB3ZWVrZGF5KDApO1xuZXhwb3J0IHZhciBtb25kYXkgPSB3ZWVrZGF5KDEpO1xuZXhwb3J0IHZhciB0dWVzZGF5ID0gd2Vla2RheSgyKTtcbmV4cG9ydCB2YXIgd2VkbmVzZGF5ID0gd2Vla2RheSgzKTtcbmV4cG9ydCB2YXIgdGh1cnNkYXkgPSB3ZWVrZGF5KDQpO1xuZXhwb3J0IHZhciBmcmlkYXkgPSB3ZWVrZGF5KDUpO1xuZXhwb3J0IHZhciBzYXR1cmRheSA9IHdlZWtkYXkoNik7XG5cbmV4cG9ydCB2YXIgc3VuZGF5cyA9IHN1bmRheS5yYW5nZTtcbmV4cG9ydCB2YXIgbW9uZGF5cyA9IG1vbmRheS5yYW5nZTtcbmV4cG9ydCB2YXIgdHVlc2RheXMgPSB0dWVzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB3ZWRuZXNkYXlzID0gd2VkbmVzZGF5LnJhbmdlO1xuZXhwb3J0IHZhciB0aHVyc2RheXMgPSB0aHVyc2RheS5yYW5nZTtcbmV4cG9ydCB2YXIgZnJpZGF5cyA9IGZyaWRheS5yYW5nZTtcbmV4cG9ydCB2YXIgc2F0dXJkYXlzID0gc2F0dXJkYXkucmFuZ2U7XG4iLCJpbXBvcnQgaW50ZXJ2YWwgZnJvbSBcIi4vaW50ZXJ2YWwuanNcIjtcblxudmFyIHllYXIgPSBpbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gIGRhdGUuc2V0SG91cnMoMCwgMCwgMCwgMCk7XG59LCBmdW5jdGlvbihkYXRlLCBzdGVwKSB7XG4gIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCk7XG59LCBmdW5jdGlvbihzdGFydCwgZW5kKSB7XG4gIHJldHVybiBlbmQuZ2V0RnVsbFllYXIoKSAtIHN0YXJ0LmdldEZ1bGxZZWFyKCk7XG59LCBmdW5jdGlvbihkYXRlKSB7XG4gIHJldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk7XG59KTtcblxuLy8gQW4gb3B0aW1pemVkIGltcGxlbWVudGF0aW9uIGZvciB0aGlzIHNpbXBsZSBjYXNlLlxueWVhci5ldmVyeSA9IGZ1bmN0aW9uKGspIHtcbiAgcmV0dXJuICFpc0Zpbml0ZShrID0gTWF0aC5mbG9vcihrKSkgfHwgIShrID4gMCkgPyBudWxsIDogaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoTWF0aC5mbG9vcihkYXRlLmdldEZ1bGxZZWFyKCkgLyBrKSAqIGspO1xuICAgIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwLCAwKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgc3RlcCkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgc3RlcCAqIGspO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHllYXI7XG5leHBvcnQgdmFyIHllYXJzID0geWVhci5yYW5nZTtcbiIsImV4cG9ydCB7XG4gIG5vdyxcbiAgdGltZXIsXG4gIHRpbWVyRmx1c2hcbn0gZnJvbSBcIi4vdGltZXIuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyB0aW1lb3V0XG59IGZyb20gXCIuL3RpbWVvdXQuanNcIjtcblxuZXhwb3J0IHtcbiAgZGVmYXVsdCBhcyBpbnRlcnZhbFxufSBmcm9tIFwiLi9pbnRlcnZhbC5qc1wiO1xuIiwiaW1wb3J0IHtUaW1lciwgbm93fSBmcm9tIFwiLi90aW1lci5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgdmFyIHQgPSBuZXcgVGltZXIsIHRvdGFsID0gZGVsYXk7XG4gIGlmIChkZWxheSA9PSBudWxsKSByZXR1cm4gdC5yZXN0YXJ0KGNhbGxiYWNrLCBkZWxheSwgdGltZSksIHQ7XG4gIHQuX3Jlc3RhcnQgPSB0LnJlc3RhcnQ7XG4gIHQucmVzdGFydCA9IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICAgIGRlbGF5ID0gK2RlbGF5LCB0aW1lID0gdGltZSA9PSBudWxsID8gbm93KCkgOiArdGltZTtcbiAgICB0Ll9yZXN0YXJ0KGZ1bmN0aW9uIHRpY2soZWxhcHNlZCkge1xuICAgICAgZWxhcHNlZCArPSB0b3RhbDtcbiAgICAgIHQuX3Jlc3RhcnQodGljaywgdG90YWwgKz0gZGVsYXksIHRpbWUpO1xuICAgICAgY2FsbGJhY2soZWxhcHNlZCk7XG4gICAgfSwgZGVsYXksIHRpbWUpO1xuICB9XG4gIHQucmVzdGFydChjYWxsYmFjaywgZGVsYXksIHRpbWUpO1xuICByZXR1cm4gdDtcbn1cbiIsImltcG9ydCB7VGltZXJ9IGZyb20gXCIuL3RpbWVyLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lcjtcbiAgZGVsYXkgPSBkZWxheSA9PSBudWxsID8gMCA6ICtkZWxheTtcbiAgdC5yZXN0YXJ0KGVsYXBzZWQgPT4ge1xuICAgIHQuc3RvcCgpO1xuICAgIGNhbGxiYWNrKGVsYXBzZWQgKyBkZWxheSk7XG4gIH0sIGRlbGF5LCB0aW1lKTtcbiAgcmV0dXJuIHQ7XG59XG4iLCJ2YXIgZnJhbWUgPSAwLCAvLyBpcyBhbiBhbmltYXRpb24gZnJhbWUgcGVuZGluZz9cbiAgICB0aW1lb3V0ID0gMCwgLy8gaXMgYSB0aW1lb3V0IHBlbmRpbmc/XG4gICAgaW50ZXJ2YWwgPSAwLCAvLyBhcmUgYW55IHRpbWVycyBhY3RpdmU/XG4gICAgcG9rZURlbGF5ID0gMTAwMCwgLy8gaG93IGZyZXF1ZW50bHkgd2UgY2hlY2sgZm9yIGNsb2NrIHNrZXdcbiAgICB0YXNrSGVhZCxcbiAgICB0YXNrVGFpbCxcbiAgICBjbG9ja0xhc3QgPSAwLFxuICAgIGNsb2NrTm93ID0gMCxcbiAgICBjbG9ja1NrZXcgPSAwLFxuICAgIGNsb2NrID0gdHlwZW9mIHBlcmZvcm1hbmNlID09PSBcIm9iamVjdFwiICYmIHBlcmZvcm1hbmNlLm5vdyA/IHBlcmZvcm1hbmNlIDogRGF0ZSxcbiAgICBzZXRGcmFtZSA9IHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIgJiYgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSA/IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuYmluZCh3aW5kb3cpIDogZnVuY3Rpb24oZikgeyBzZXRUaW1lb3V0KGYsIDE3KTsgfTtcblxuZXhwb3J0IGZ1bmN0aW9uIG5vdygpIHtcbiAgcmV0dXJuIGNsb2NrTm93IHx8IChzZXRGcmFtZShjbGVhck5vdyksIGNsb2NrTm93ID0gY2xvY2subm93KCkgKyBjbG9ja1NrZXcpO1xufVxuXG5mdW5jdGlvbiBjbGVhck5vdygpIHtcbiAgY2xvY2tOb3cgPSAwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVGltZXIoKSB7XG4gIHRoaXMuX2NhbGwgPVxuICB0aGlzLl90aW1lID1cbiAgdGhpcy5fbmV4dCA9IG51bGw7XG59XG5cblRpbWVyLnByb3RvdHlwZSA9IHRpbWVyLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRpbWVyLFxuICByZXN0YXJ0OiBmdW5jdGlvbihjYWxsYmFjaywgZGVsYXksIHRpbWUpIHtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJjYWxsYmFjayBpcyBub3QgYSBmdW5jdGlvblwiKTtcbiAgICB0aW1lID0gKHRpbWUgPT0gbnVsbCA/IG5vdygpIDogK3RpbWUpICsgKGRlbGF5ID09IG51bGwgPyAwIDogK2RlbGF5KTtcbiAgICBpZiAoIXRoaXMuX25leHQgJiYgdGFza1RhaWwgIT09IHRoaXMpIHtcbiAgICAgIGlmICh0YXNrVGFpbCkgdGFza1RhaWwuX25leHQgPSB0aGlzO1xuICAgICAgZWxzZSB0YXNrSGVhZCA9IHRoaXM7XG4gICAgICB0YXNrVGFpbCA9IHRoaXM7XG4gICAgfVxuICAgIHRoaXMuX2NhbGwgPSBjYWxsYmFjaztcbiAgICB0aGlzLl90aW1lID0gdGltZTtcbiAgICBzbGVlcCgpO1xuICB9LFxuICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fY2FsbCkge1xuICAgICAgdGhpcy5fY2FsbCA9IG51bGw7XG4gICAgICB0aGlzLl90aW1lID0gSW5maW5pdHk7XG4gICAgICBzbGVlcCgpO1xuICAgIH1cbiAgfVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHRpbWVyKGNhbGxiYWNrLCBkZWxheSwgdGltZSkge1xuICB2YXIgdCA9IG5ldyBUaW1lcjtcbiAgdC5yZXN0YXJ0KGNhbGxiYWNrLCBkZWxheSwgdGltZSk7XG4gIHJldHVybiB0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGltZXJGbHVzaCgpIHtcbiAgbm93KCk7IC8vIEdldCB0aGUgY3VycmVudCB0aW1lLCBpZiBub3QgYWxyZWFkeSBzZXQuXG4gICsrZnJhbWU7IC8vIFByZXRlbmQgd2XigJl2ZSBzZXQgYW4gYWxhcm0sIGlmIHdlIGhhdmVu4oCZdCBhbHJlYWR5LlxuICB2YXIgdCA9IHRhc2tIZWFkLCBlO1xuICB3aGlsZSAodCkge1xuICAgIGlmICgoZSA9IGNsb2NrTm93IC0gdC5fdGltZSkgPj0gMCkgdC5fY2FsbC5jYWxsKG51bGwsIGUpO1xuICAgIHQgPSB0Ll9uZXh0O1xuICB9XG4gIC0tZnJhbWU7XG59XG5cbmZ1bmN0aW9uIHdha2UoKSB7XG4gIGNsb2NrTm93ID0gKGNsb2NrTGFzdCA9IGNsb2NrLm5vdygpKSArIGNsb2NrU2tldztcbiAgZnJhbWUgPSB0aW1lb3V0ID0gMDtcbiAgdHJ5IHtcbiAgICB0aW1lckZsdXNoKCk7XG4gIH0gZmluYWxseSB7XG4gICAgZnJhbWUgPSAwO1xuICAgIG5hcCgpO1xuICAgIGNsb2NrTm93ID0gMDtcbiAgfVxufVxuXG5mdW5jdGlvbiBwb2tlKCkge1xuICB2YXIgbm93ID0gY2xvY2subm93KCksIGRlbGF5ID0gbm93IC0gY2xvY2tMYXN0O1xuICBpZiAoZGVsYXkgPiBwb2tlRGVsYXkpIGNsb2NrU2tldyAtPSBkZWxheSwgY2xvY2tMYXN0ID0gbm93O1xufVxuXG5mdW5jdGlvbiBuYXAoKSB7XG4gIHZhciB0MCwgdDEgPSB0YXNrSGVhZCwgdDIsIHRpbWUgPSBJbmZpbml0eTtcbiAgd2hpbGUgKHQxKSB7XG4gICAgaWYgKHQxLl9jYWxsKSB7XG4gICAgICBpZiAodGltZSA+IHQxLl90aW1lKSB0aW1lID0gdDEuX3RpbWU7XG4gICAgICB0MCA9IHQxLCB0MSA9IHQxLl9uZXh0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0MiA9IHQxLl9uZXh0LCB0MS5fbmV4dCA9IG51bGw7XG4gICAgICB0MSA9IHQwID8gdDAuX25leHQgPSB0MiA6IHRhc2tIZWFkID0gdDI7XG4gICAgfVxuICB9XG4gIHRhc2tUYWlsID0gdDA7XG4gIHNsZWVwKHRpbWUpO1xufVxuXG5mdW5jdGlvbiBzbGVlcCh0aW1lKSB7XG4gIGlmIChmcmFtZSkgcmV0dXJuOyAvLyBTb29uZXN0IGFsYXJtIGFscmVhZHkgc2V0LCBvciB3aWxsIGJlLlxuICBpZiAodGltZW91dCkgdGltZW91dCA9IGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgdmFyIGRlbGF5ID0gdGltZSAtIGNsb2NrTm93OyAvLyBTdHJpY3RseSBsZXNzIHRoYW4gaWYgd2UgcmVjb21wdXRlZCBjbG9ja05vdy5cbiAgaWYgKGRlbGF5ID4gMjQpIHtcbiAgICBpZiAodGltZSA8IEluZmluaXR5KSB0aW1lb3V0ID0gc2V0VGltZW91dCh3YWtlLCB0aW1lIC0gY2xvY2subm93KCkgLSBjbG9ja1NrZXcpO1xuICAgIGlmIChpbnRlcnZhbCkgaW50ZXJ2YWwgPSBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIWludGVydmFsKSBjbG9ja0xhc3QgPSBjbG9jay5ub3coKSwgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChwb2tlLCBwb2tlRGVsYXkpO1xuICAgIGZyYW1lID0gMSwgc2V0RnJhbWUod2FrZSk7XG4gIH1cbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vdHJhbnNpdGlvbi9pbmRleC5qc1wiO1xuaW1wb3J0IHtTQ0hFRFVMRUR9IGZyb20gXCIuL3RyYW5zaXRpb24vc2NoZWR1bGUuanNcIjtcblxudmFyIHJvb3QgPSBbbnVsbF07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIG5hbWUpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgc2NoZWR1bGUsXG4gICAgICBpO1xuXG4gIGlmIChzY2hlZHVsZXMpIHtcbiAgICBuYW1lID0gbmFtZSA9PSBudWxsID8gbnVsbCA6IG5hbWUgKyBcIlwiO1xuICAgIGZvciAoaSBpbiBzY2hlZHVsZXMpIHtcbiAgICAgIGlmICgoc2NoZWR1bGUgPSBzY2hlZHVsZXNbaV0pLnN0YXRlID4gU0NIRURVTEVEICYmIHNjaGVkdWxlLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKFtbbm9kZV1dLCByb290LCBuYW1lLCAraSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG4iLCJpbXBvcnQgXCIuL3NlbGVjdGlvbi9pbmRleC5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHRyYW5zaXRpb259IGZyb20gXCIuL3RyYW5zaXRpb24vaW5kZXguanNcIjtcbmV4cG9ydCB7ZGVmYXVsdCBhcyBhY3RpdmV9IGZyb20gXCIuL2FjdGl2ZS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIGludGVycnVwdH0gZnJvbSBcIi4vaW50ZXJydXB0LmpzXCI7XG4iLCJpbXBvcnQge1NUQVJUSU5HLCBFTkRJTkcsIEVOREVEfSBmcm9tIFwiLi90cmFuc2l0aW9uL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIG5hbWUpIHtcbiAgdmFyIHNjaGVkdWxlcyA9IG5vZGUuX190cmFuc2l0aW9uLFxuICAgICAgc2NoZWR1bGUsXG4gICAgICBhY3RpdmUsXG4gICAgICBlbXB0eSA9IHRydWUsXG4gICAgICBpO1xuXG4gIGlmICghc2NoZWR1bGVzKSByZXR1cm47XG5cbiAgbmFtZSA9IG5hbWUgPT0gbnVsbCA/IG51bGwgOiBuYW1lICsgXCJcIjtcblxuICBmb3IgKGkgaW4gc2NoZWR1bGVzKSB7XG4gICAgaWYgKChzY2hlZHVsZSA9IHNjaGVkdWxlc1tpXSkubmFtZSAhPT0gbmFtZSkgeyBlbXB0eSA9IGZhbHNlOyBjb250aW51ZTsgfVxuICAgIGFjdGl2ZSA9IHNjaGVkdWxlLnN0YXRlID4gU1RBUlRJTkcgJiYgc2NoZWR1bGUuc3RhdGUgPCBFTkRJTkc7XG4gICAgc2NoZWR1bGUuc3RhdGUgPSBFTkRFRDtcbiAgICBzY2hlZHVsZS50aW1lci5zdG9wKCk7XG4gICAgc2NoZWR1bGUub24uY2FsbChhY3RpdmUgPyBcImludGVycnVwdFwiIDogXCJjYW5jZWxcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2NoZWR1bGUuaW5kZXgsIHNjaGVkdWxlLmdyb3VwKTtcbiAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICB9XG5cbiAgaWYgKGVtcHR5KSBkZWxldGUgbm9kZS5fX3RyYW5zaXRpb247XG59XG4iLCJpbXBvcnQge3NlbGVjdGlvbn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHNlbGVjdGlvbl9pbnRlcnJ1cHQgZnJvbSBcIi4vaW50ZXJydXB0LmpzXCI7XG5pbXBvcnQgc2VsZWN0aW9uX3RyYW5zaXRpb24gZnJvbSBcIi4vdHJhbnNpdGlvbi5qc1wiO1xuXG5zZWxlY3Rpb24ucHJvdG90eXBlLmludGVycnVwdCA9IHNlbGVjdGlvbl9pbnRlcnJ1cHQ7XG5zZWxlY3Rpb24ucHJvdG90eXBlLnRyYW5zaXRpb24gPSBzZWxlY3Rpb25fdHJhbnNpdGlvbjtcbiIsImltcG9ydCBpbnRlcnJ1cHQgZnJvbSBcIi4uL2ludGVycnVwdC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgaW50ZXJydXB0KHRoaXMsIG5hbWUpO1xuICB9KTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbiwgbmV3SWR9IGZyb20gXCIuLi90cmFuc2l0aW9uL2luZGV4LmpzXCI7XG5pbXBvcnQgc2NoZWR1bGUgZnJvbSBcIi4uL3RyYW5zaXRpb24vc2NoZWR1bGUuanNcIjtcbmltcG9ydCB7ZWFzZUN1YmljSW5PdXR9IGZyb20gXCJkMy1lYXNlXCI7XG5pbXBvcnQge25vd30gZnJvbSBcImQzLXRpbWVyXCI7XG5cbnZhciBkZWZhdWx0VGltaW5nID0ge1xuICB0aW1lOiBudWxsLCAvLyBTZXQgb24gdXNlLlxuICBkZWxheTogMCxcbiAgZHVyYXRpb246IDI1MCxcbiAgZWFzZTogZWFzZUN1YmljSW5PdXRcbn07XG5cbmZ1bmN0aW9uIGluaGVyaXQobm9kZSwgaWQpIHtcbiAgdmFyIHRpbWluZztcbiAgd2hpbGUgKCEodGltaW5nID0gbm9kZS5fX3RyYW5zaXRpb24pIHx8ICEodGltaW5nID0gdGltaW5nW2lkXSkpIHtcbiAgICBpZiAoIShub2RlID0gbm9kZS5wYXJlbnROb2RlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGB0cmFuc2l0aW9uICR7aWR9IG5vdCBmb3VuZGApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdGltaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lKSB7XG4gIHZhciBpZCxcbiAgICAgIHRpbWluZztcblxuICBpZiAobmFtZSBpbnN0YW5jZW9mIFRyYW5zaXRpb24pIHtcbiAgICBpZCA9IG5hbWUuX2lkLCBuYW1lID0gbmFtZS5fbmFtZTtcbiAgfSBlbHNlIHtcbiAgICBpZCA9IG5ld0lkKCksICh0aW1pbmcgPSBkZWZhdWx0VGltaW5nKS50aW1lID0gbm93KCksIG5hbWUgPSBuYW1lID09IG51bGwgPyBudWxsIDogbmFtZSArIFwiXCI7XG4gIH1cblxuICBmb3IgKHZhciBncm91cHMgPSB0aGlzLl9ncm91cHMsIG0gPSBncm91cHMubGVuZ3RoLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwID0gZ3JvdXBzW2pdLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlLCBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICBzY2hlZHVsZShub2RlLCBuYW1lLCBpZCwgaSwgZ3JvdXAsIHRpbWluZyB8fCBpbmhlcml0KG5vZGUsIGlkKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKGdyb3VwcywgdGhpcy5fcGFyZW50cywgbmFtZSwgaWQpO1xufVxuIiwiaW1wb3J0IHtpbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyBhcyBpbnRlcnBvbGF0ZVRyYW5zZm9ybX0gZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5pbXBvcnQge25hbWVzcGFjZX0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2Vlbi5qc1wiO1xuaW1wb3J0IGludGVycG9sYXRlIGZyb20gXCIuL2ludGVycG9sYXRlLmpzXCI7XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmUobmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJSZW1vdmVOUyhmdWxsbmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyQ29uc3RhbnQobmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlMSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIixcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKGZ1bGxuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUxKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEgPSB2YWx1ZTEgKyBcIlwiLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGF0dHJGdW5jdGlvbihuYW1lLCBpbnRlcnBvbGF0ZSwgdmFsdWUpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMTAsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCwgdmFsdWUxID0gdmFsdWUodGhpcyksIHN0cmluZzE7XG4gICAgaWYgKHZhbHVlMSA9PSBudWxsKSByZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICBzdHJpbmcwID0gdGhpcy5nZXRBdHRyaWJ1dGUobmFtZSk7XG4gICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhdHRyRnVuY3Rpb25OUyhmdWxsbmFtZSwgaW50ZXJwb2xhdGUsIHZhbHVlKSB7XG4gIHZhciBzdHJpbmcwMCxcbiAgICAgIHN0cmluZzEwLFxuICAgICAgaW50ZXJwb2xhdGUwO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHN0cmluZzAsIHZhbHVlMSA9IHZhbHVlKHRoaXMpLCBzdHJpbmcxO1xuICAgIGlmICh2YWx1ZTEgPT0gbnVsbCkgcmV0dXJuIHZvaWQgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyhmdWxsbmFtZS5zcGFjZSwgZnVsbG5hbWUubG9jYWwpO1xuICAgIHN0cmluZzAgPSB0aGlzLmdldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCk7XG4gICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCI7XG4gICAgcmV0dXJuIHN0cmluZzAgPT09IHN0cmluZzEgPyBudWxsXG4gICAgICAgIDogc3RyaW5nMCA9PT0gc3RyaW5nMDAgJiYgc3RyaW5nMSA9PT0gc3RyaW5nMTAgPyBpbnRlcnBvbGF0ZTBcbiAgICAgICAgOiAoc3RyaW5nMTAgPSBzdHJpbmcxLCBpbnRlcnBvbGF0ZTAgPSBpbnRlcnBvbGF0ZShzdHJpbmcwMCA9IHN0cmluZzAsIHZhbHVlMSkpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICB2YXIgZnVsbG5hbWUgPSBuYW1lc3BhY2UobmFtZSksIGkgPSBmdWxsbmFtZSA9PT0gXCJ0cmFuc2Zvcm1cIiA/IGludGVycG9sYXRlVHJhbnNmb3JtIDogaW50ZXJwb2xhdGU7XG4gIHJldHVybiB0aGlzLmF0dHJUd2VlbihuYW1lLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyAoZnVsbG5hbWUubG9jYWwgPyBhdHRyRnVuY3Rpb25OUyA6IGF0dHJGdW5jdGlvbikoZnVsbG5hbWUsIGksIHR3ZWVuVmFsdWUodGhpcywgXCJhdHRyLlwiICsgbmFtZSwgdmFsdWUpKVxuICAgICAgOiB2YWx1ZSA9PSBudWxsID8gKGZ1bGxuYW1lLmxvY2FsID8gYXR0clJlbW92ZU5TIDogYXR0clJlbW92ZSkoZnVsbG5hbWUpXG4gICAgICA6IChmdWxsbmFtZS5sb2NhbCA/IGF0dHJDb25zdGFudE5TIDogYXR0ckNvbnN0YW50KShmdWxsbmFtZSwgaSwgdmFsdWUpKTtcbn1cbiIsImltcG9ydCB7bmFtZXNwYWNlfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5cbmZ1bmN0aW9uIGF0dHJJbnRlcnBvbGF0ZShuYW1lLCBpKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgaS5jYWxsKHRoaXMsIHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKGZ1bGxuYW1lLnNwYWNlLCBmdWxsbmFtZS5sb2NhbCwgaS5jYWxsKHRoaXMsIHQpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gYXR0clR3ZWVuTlMoZnVsbG5hbWUsIHZhbHVlKSB7XG4gIHZhciB0MCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQwID0gKGkwID0gaSkgJiYgYXR0ckludGVycG9sYXRlTlMoZnVsbG5hbWUsIGkpO1xuICAgIHJldHVybiB0MDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5mdW5jdGlvbiBhdHRyVHdlZW4obmFtZSwgdmFsdWUpIHtcbiAgdmFyIHQwLCBpMDtcbiAgZnVuY3Rpb24gdHdlZW4oKSB7XG4gICAgdmFyIGkgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIGlmIChpICE9PSBpMCkgdDAgPSAoaTAgPSBpKSAmJiBhdHRySW50ZXJwb2xhdGUobmFtZSwgaSk7XG4gICAgcmV0dXJuIHQwO1xuICB9XG4gIHR3ZWVuLl92YWx1ZSA9IHZhbHVlO1xuICByZXR1cm4gdHdlZW47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBrZXkgPSBcImF0dHIuXCIgKyBuYW1lO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoa2V5ID0gdGhpcy50d2VlbihrZXkpKSAmJiBrZXkuX3ZhbHVlO1xuICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCBudWxsKTtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJmdW5jdGlvblwiKSB0aHJvdyBuZXcgRXJyb3I7XG4gIHZhciBmdWxsbmFtZSA9IG5hbWVzcGFjZShuYW1lKTtcbiAgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCAoZnVsbG5hbWUubG9jYWwgPyBhdHRyVHdlZW5OUyA6IGF0dHJUd2VlbikoZnVsbG5hbWUsIHZhbHVlKSk7XG59XG4iLCJpbXBvcnQge2dldCwgaW5pdH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZnVuY3Rpb24gZGVsYXlGdW5jdGlvbihpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGluaXQodGhpcywgaWQpLmRlbGF5ID0gK3ZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGRlbGF5Q29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9ICt2YWx1ZSwgZnVuY3Rpb24oKSB7XG4gICAgaW5pdCh0aGlzLCBpZCkuZGVsYXkgPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZGVsYXlGdW5jdGlvblxuICAgICAgICAgIDogZGVsYXlDb25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZGVsYXk7XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBkdXJhdGlvbkZ1bmN0aW9uKGlkLCB2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5kdXJhdGlvbiA9ICt2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBkdXJhdGlvbkNvbnN0YW50KGlkLCB2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKCkge1xuICAgIHNldCh0aGlzLCBpZCkuZHVyYXRpb24gPSB2YWx1ZTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24odmFsdWUpIHtcbiAgdmFyIGlkID0gdGhpcy5faWQ7XG5cbiAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGhcbiAgICAgID8gdGhpcy5lYWNoKCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICAgID8gZHVyYXRpb25GdW5jdGlvblxuICAgICAgICAgIDogZHVyYXRpb25Db25zdGFudCkoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZHVyYXRpb247XG59XG4iLCJpbXBvcnQge2dldCwgc2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgc2V0KHRoaXMsIGlkKS5lYXNlID0gdmFsdWU7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoXG4gICAgICA/IHRoaXMuZWFjaChlYXNlQ29uc3RhbnQoaWQsIHZhbHVlKSlcbiAgICAgIDogZ2V0KHRoaXMubm9kZSgpLCBpZCkuZWFzZTtcbn1cbiIsImltcG9ydCB7c2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5mdW5jdGlvbiBlYXNlVmFyeWluZyhpZCwgdmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciB2ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAodHlwZW9mIHYgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICAgIHNldCh0aGlzLCBpZCkuZWFzZSA9IHY7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gdGhpcy5lYWNoKGVhc2VWYXJ5aW5nKHRoaXMuX2lkLCB2YWx1ZSkpO1xufVxuIiwiaW1wb3J0IHtzZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgb24wLCBvbjEsIHRoYXQgPSB0aGlzLCBpZCA9IHRoYXQuX2lkLCBzaXplID0gdGhhdC5zaXplKCk7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICB2YXIgY2FuY2VsID0ge3ZhbHVlOiByZWplY3R9LFxuICAgICAgICBlbmQgPSB7dmFsdWU6IGZ1bmN0aW9uKCkgeyBpZiAoLS1zaXplID09PSAwKSByZXNvbHZlKCk7IH19O1xuXG4gICAgdGhhdC5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgICBvbiA9IHNjaGVkdWxlLm9uO1xuXG4gICAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAgIC8vIGp1c3QgYXNzaWduIHRoZSB1cGRhdGVkIHNoYXJlZCBkaXNwYXRjaCBhbmQgd2XigJlyZSBkb25lIVxuICAgICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgICAgaWYgKG9uICE9PSBvbjApIHtcbiAgICAgICAgb24xID0gKG9uMCA9IG9uKS5jb3B5KCk7XG4gICAgICAgIG9uMS5fLmNhbmNlbC5wdXNoKGNhbmNlbCk7XG4gICAgICAgIG9uMS5fLmludGVycnVwdC5wdXNoKGNhbmNlbCk7XG4gICAgICAgIG9uMS5fLmVuZC5wdXNoKGVuZCk7XG4gICAgICB9XG5cbiAgICAgIHNjaGVkdWxlLm9uID0gb24xO1xuICAgIH0pO1xuXG4gICAgLy8gVGhlIHNlbGVjdGlvbiB3YXMgZW1wdHksIHJlc29sdmUgZW5kIGltbWVkaWF0ZWx5XG4gICAgaWYgKHNpemUgPT09IDApIHJlc29sdmUoKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQge21hdGNoZXJ9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7VHJhbnNpdGlvbn0gZnJvbSBcIi4vaW5kZXguanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24obWF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBtYXRjaCAhPT0gXCJmdW5jdGlvblwiKSBtYXRjaCA9IG1hdGNoZXIobWF0Y2gpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBbXSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBtYXRjaC5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGdyb3VwKSkge1xuICAgICAgICBzdWJncm91cC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihzdWJncm91cHMsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKTtcbn1cbiIsImltcG9ydCB7c2VsZWN0aW9ufSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9hdHRyIGZyb20gXCIuL2F0dHIuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2F0dHJUd2VlbiBmcm9tIFwiLi9hdHRyVHdlZW4uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2RlbGF5IGZyb20gXCIuL2RlbGF5LmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9kdXJhdGlvbiBmcm9tIFwiLi9kdXJhdGlvbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fZWFzZSBmcm9tIFwiLi9lYXNlLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9lYXNlVmFyeWluZyBmcm9tIFwiLi9lYXNlVmFyeWluZy5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fZmlsdGVyIGZyb20gXCIuL2ZpbHRlci5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fbWVyZ2UgZnJvbSBcIi4vbWVyZ2UuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX29uIGZyb20gXCIuL29uLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9yZW1vdmUgZnJvbSBcIi4vcmVtb3ZlLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zZWxlY3QgZnJvbSBcIi4vc2VsZWN0LmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zZWxlY3RBbGwgZnJvbSBcIi4vc2VsZWN0QWxsLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zZWxlY3Rpb24gZnJvbSBcIi4vc2VsZWN0aW9uLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl9zdHlsZSBmcm9tIFwiLi9zdHlsZS5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fc3R5bGVUd2VlbiBmcm9tIFwiLi9zdHlsZVR3ZWVuLmpzXCI7XG5pbXBvcnQgdHJhbnNpdGlvbl90ZXh0IGZyb20gXCIuL3RleHQuanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3RleHRUd2VlbiBmcm9tIFwiLi90ZXh0VHdlZW4uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX3RyYW5zaXRpb24gZnJvbSBcIi4vdHJhbnNpdGlvbi5qc1wiO1xuaW1wb3J0IHRyYW5zaXRpb25fdHdlZW4gZnJvbSBcIi4vdHdlZW4uanNcIjtcbmltcG9ydCB0cmFuc2l0aW9uX2VuZCBmcm9tIFwiLi9lbmQuanNcIjtcblxudmFyIGlkID0gMDtcblxuZXhwb3J0IGZ1bmN0aW9uIFRyYW5zaXRpb24oZ3JvdXBzLCBwYXJlbnRzLCBuYW1lLCBpZCkge1xuICB0aGlzLl9ncm91cHMgPSBncm91cHM7XG4gIHRoaXMuX3BhcmVudHMgPSBwYXJlbnRzO1xuICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgdGhpcy5faWQgPSBpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHJhbnNpdGlvbihuYW1lKSB7XG4gIHJldHVybiBzZWxlY3Rpb24oKS50cmFuc2l0aW9uKG5hbWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmV3SWQoKSB7XG4gIHJldHVybiArK2lkO1xufVxuXG52YXIgc2VsZWN0aW9uX3Byb3RvdHlwZSA9IHNlbGVjdGlvbi5wcm90b3R5cGU7XG5cblRyYW5zaXRpb24ucHJvdG90eXBlID0gdHJhbnNpdGlvbi5wcm90b3R5cGUgPSB7XG4gIGNvbnN0cnVjdG9yOiBUcmFuc2l0aW9uLFxuICBzZWxlY3Q6IHRyYW5zaXRpb25fc2VsZWN0LFxuICBzZWxlY3RBbGw6IHRyYW5zaXRpb25fc2VsZWN0QWxsLFxuICBmaWx0ZXI6IHRyYW5zaXRpb25fZmlsdGVyLFxuICBtZXJnZTogdHJhbnNpdGlvbl9tZXJnZSxcbiAgc2VsZWN0aW9uOiB0cmFuc2l0aW9uX3NlbGVjdGlvbixcbiAgdHJhbnNpdGlvbjogdHJhbnNpdGlvbl90cmFuc2l0aW9uLFxuICBjYWxsOiBzZWxlY3Rpb25fcHJvdG90eXBlLmNhbGwsXG4gIG5vZGVzOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGVzLFxuICBub2RlOiBzZWxlY3Rpb25fcHJvdG90eXBlLm5vZGUsXG4gIHNpemU6IHNlbGVjdGlvbl9wcm90b3R5cGUuc2l6ZSxcbiAgZW1wdHk6IHNlbGVjdGlvbl9wcm90b3R5cGUuZW1wdHksXG4gIGVhY2g6IHNlbGVjdGlvbl9wcm90b3R5cGUuZWFjaCxcbiAgb246IHRyYW5zaXRpb25fb24sXG4gIGF0dHI6IHRyYW5zaXRpb25fYXR0cixcbiAgYXR0clR3ZWVuOiB0cmFuc2l0aW9uX2F0dHJUd2VlbixcbiAgc3R5bGU6IHRyYW5zaXRpb25fc3R5bGUsXG4gIHN0eWxlVHdlZW46IHRyYW5zaXRpb25fc3R5bGVUd2VlbixcbiAgdGV4dDogdHJhbnNpdGlvbl90ZXh0LFxuICB0ZXh0VHdlZW46IHRyYW5zaXRpb25fdGV4dFR3ZWVuLFxuICByZW1vdmU6IHRyYW5zaXRpb25fcmVtb3ZlLFxuICB0d2VlbjogdHJhbnNpdGlvbl90d2VlbixcbiAgZGVsYXk6IHRyYW5zaXRpb25fZGVsYXksXG4gIGR1cmF0aW9uOiB0cmFuc2l0aW9uX2R1cmF0aW9uLFxuICBlYXNlOiB0cmFuc2l0aW9uX2Vhc2UsXG4gIGVhc2VWYXJ5aW5nOiB0cmFuc2l0aW9uX2Vhc2VWYXJ5aW5nLFxuICBlbmQ6IHRyYW5zaXRpb25fZW5kLFxuICBbU3ltYm9sLml0ZXJhdG9yXTogc2VsZWN0aW9uX3Byb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdXG59O1xuIiwiaW1wb3J0IHtjb2xvcn0gZnJvbSBcImQzLWNvbG9yXCI7XG5pbXBvcnQge2ludGVycG9sYXRlTnVtYmVyLCBpbnRlcnBvbGF0ZVJnYiwgaW50ZXJwb2xhdGVTdHJpbmd9IGZyb20gXCJkMy1pbnRlcnBvbGF0ZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihhLCBiKSB7XG4gIHZhciBjO1xuICByZXR1cm4gKHR5cGVvZiBiID09PSBcIm51bWJlclwiID8gaW50ZXJwb2xhdGVOdW1iZXJcbiAgICAgIDogYiBpbnN0YW5jZW9mIGNvbG9yID8gaW50ZXJwb2xhdGVSZ2JcbiAgICAgIDogKGMgPSBjb2xvcihiKSkgPyAoYiA9IGMsIGludGVycG9sYXRlUmdiKVxuICAgICAgOiBpbnRlcnBvbGF0ZVN0cmluZykoYSwgYik7XG59XG4iLCJpbXBvcnQge1RyYW5zaXRpb259IGZyb20gXCIuL2luZGV4LmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHRyYW5zaXRpb24pIHtcbiAgaWYgKHRyYW5zaXRpb24uX2lkICE9PSB0aGlzLl9pZCkgdGhyb3cgbmV3IEVycm9yO1xuXG4gIGZvciAodmFyIGdyb3VwczAgPSB0aGlzLl9ncm91cHMsIGdyb3VwczEgPSB0cmFuc2l0aW9uLl9ncm91cHMsIG0wID0gZ3JvdXBzMC5sZW5ndGgsIG0xID0gZ3JvdXBzMS5sZW5ndGgsIG0gPSBNYXRoLm1pbihtMCwgbTEpLCBtZXJnZXMgPSBuZXcgQXJyYXkobTApLCBqID0gMDsgaiA8IG07ICsraikge1xuICAgIGZvciAodmFyIGdyb3VwMCA9IGdyb3VwczBbal0sIGdyb3VwMSA9IGdyb3VwczFbal0sIG4gPSBncm91cDAubGVuZ3RoLCBtZXJnZSA9IG1lcmdlc1tqXSA9IG5ldyBBcnJheShuKSwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXAwW2ldIHx8IGdyb3VwMVtpXSkge1xuICAgICAgICBtZXJnZVtpXSA9IG5vZGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm9yICg7IGogPCBtMDsgKytqKSB7XG4gICAgbWVyZ2VzW2pdID0gZ3JvdXBzMFtqXTtcbiAgfVxuXG4gIHJldHVybiBuZXcgVHJhbnNpdGlvbihtZXJnZXMsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKTtcbn1cbiIsImltcG9ydCB7Z2V0LCBzZXQsIGluaXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmZ1bmN0aW9uIHN0YXJ0KG5hbWUpIHtcbiAgcmV0dXJuIChuYW1lICsgXCJcIikudHJpbSgpLnNwbGl0KC9efFxccysvKS5ldmVyeShmdW5jdGlvbih0KSB7XG4gICAgdmFyIGkgPSB0LmluZGV4T2YoXCIuXCIpO1xuICAgIGlmIChpID49IDApIHQgPSB0LnNsaWNlKDAsIGkpO1xuICAgIHJldHVybiAhdCB8fCB0ID09PSBcInN0YXJ0XCI7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBvbkZ1bmN0aW9uKGlkLCBuYW1lLCBsaXN0ZW5lcikge1xuICB2YXIgb24wLCBvbjEsIHNpdCA9IHN0YXJ0KG5hbWUpID8gaW5pdCA6IHNldDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNpdCh0aGlzLCBpZCksXG4gICAgICAgIG9uID0gc2NoZWR1bGUub247XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKG9uICE9PSBvbjApIChvbjEgPSAob24wID0gb24pLmNvcHkoKSkub24obmFtZSwgbGlzdGVuZXIpO1xuXG4gICAgc2NoZWR1bGUub24gPSBvbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIGxpc3RlbmVyKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMlxuICAgICAgPyBnZXQodGhpcy5ub2RlKCksIGlkKS5vbi5vbihuYW1lKVxuICAgICAgOiB0aGlzLmVhY2gob25GdW5jdGlvbihpZCwgbmFtZSwgbGlzdGVuZXIpKTtcbn1cbiIsImZ1bmN0aW9uIHJlbW92ZUZ1bmN0aW9uKGlkKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuICAgIGZvciAodmFyIGkgaW4gdGhpcy5fX3RyYW5zaXRpb24pIGlmICgraSAhPT0gaWQpIHJldHVybjtcbiAgICBpZiAocGFyZW50KSBwYXJlbnQucmVtb3ZlQ2hpbGQodGhpcyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcy5vbihcImVuZC5yZW1vdmVcIiwgcmVtb3ZlRnVuY3Rpb24odGhpcy5faWQpKTtcbn1cbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHt0aW1lciwgdGltZW91dH0gZnJvbSBcImQzLXRpbWVyXCI7XG5cbnZhciBlbXB0eU9uID0gZGlzcGF0Y2goXCJzdGFydFwiLCBcImVuZFwiLCBcImNhbmNlbFwiLCBcImludGVycnVwdFwiKTtcbnZhciBlbXB0eVR3ZWVuID0gW107XG5cbmV4cG9ydCB2YXIgQ1JFQVRFRCA9IDA7XG5leHBvcnQgdmFyIFNDSEVEVUxFRCA9IDE7XG5leHBvcnQgdmFyIFNUQVJUSU5HID0gMjtcbmV4cG9ydCB2YXIgU1RBUlRFRCA9IDM7XG5leHBvcnQgdmFyIFJVTk5JTkcgPSA0O1xuZXhwb3J0IHZhciBFTkRJTkcgPSA1O1xuZXhwb3J0IHZhciBFTkRFRCA9IDY7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5vZGUsIG5hbWUsIGlkLCBpbmRleCwgZ3JvdXAsIHRpbWluZykge1xuICB2YXIgc2NoZWR1bGVzID0gbm9kZS5fX3RyYW5zaXRpb247XG4gIGlmICghc2NoZWR1bGVzKSBub2RlLl9fdHJhbnNpdGlvbiA9IHt9O1xuICBlbHNlIGlmIChpZCBpbiBzY2hlZHVsZXMpIHJldHVybjtcbiAgY3JlYXRlKG5vZGUsIGlkLCB7XG4gICAgbmFtZTogbmFtZSxcbiAgICBpbmRleDogaW5kZXgsIC8vIEZvciBjb250ZXh0IGR1cmluZyBjYWxsYmFjay5cbiAgICBncm91cDogZ3JvdXAsIC8vIEZvciBjb250ZXh0IGR1cmluZyBjYWxsYmFjay5cbiAgICBvbjogZW1wdHlPbixcbiAgICB0d2VlbjogZW1wdHlUd2VlbixcbiAgICB0aW1lOiB0aW1pbmcudGltZSxcbiAgICBkZWxheTogdGltaW5nLmRlbGF5LFxuICAgIGR1cmF0aW9uOiB0aW1pbmcuZHVyYXRpb24sXG4gICAgZWFzZTogdGltaW5nLmVhc2UsXG4gICAgdGltZXI6IG51bGwsXG4gICAgc3RhdGU6IENSRUFURURcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IGdldChub2RlLCBpZCk7XG4gIGlmIChzY2hlZHVsZS5zdGF0ZSA+IENSRUFURUQpIHRocm93IG5ldyBFcnJvcihcInRvbyBsYXRlOyBhbHJlYWR5IHNjaGVkdWxlZFwiKTtcbiAgcmV0dXJuIHNjaGVkdWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0KG5vZGUsIGlkKSB7XG4gIHZhciBzY2hlZHVsZSA9IGdldChub2RlLCBpZCk7XG4gIGlmIChzY2hlZHVsZS5zdGF0ZSA+IFNUQVJURUQpIHRocm93IG5ldyBFcnJvcihcInRvbyBsYXRlOyBhbHJlYWR5IHJ1bm5pbmdcIik7XG4gIHJldHVybiBzY2hlZHVsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldChub2RlLCBpZCkge1xuICB2YXIgc2NoZWR1bGUgPSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgaWYgKCFzY2hlZHVsZSB8fCAhKHNjaGVkdWxlID0gc2NoZWR1bGVbaWRdKSkgdGhyb3cgbmV3IEVycm9yKFwidHJhbnNpdGlvbiBub3QgZm91bmRcIik7XG4gIHJldHVybiBzY2hlZHVsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlKG5vZGUsIGlkLCBzZWxmKSB7XG4gIHZhciBzY2hlZHVsZXMgPSBub2RlLl9fdHJhbnNpdGlvbixcbiAgICAgIHR3ZWVuO1xuXG4gIC8vIEluaXRpYWxpemUgdGhlIHNlbGYgdGltZXIgd2hlbiB0aGUgdHJhbnNpdGlvbiBpcyBjcmVhdGVkLlxuICAvLyBOb3RlIHRoZSBhY3R1YWwgZGVsYXkgaXMgbm90IGtub3duIHVudGlsIHRoZSBmaXJzdCBjYWxsYmFjayFcbiAgc2NoZWR1bGVzW2lkXSA9IHNlbGY7XG4gIHNlbGYudGltZXIgPSB0aW1lcihzY2hlZHVsZSwgMCwgc2VsZi50aW1lKTtcblxuICBmdW5jdGlvbiBzY2hlZHVsZShlbGFwc2VkKSB7XG4gICAgc2VsZi5zdGF0ZSA9IFNDSEVEVUxFRDtcbiAgICBzZWxmLnRpbWVyLnJlc3RhcnQoc3RhcnQsIHNlbGYuZGVsYXksIHNlbGYudGltZSk7XG5cbiAgICAvLyBJZiB0aGUgZWxhcHNlZCBkZWxheSBpcyBsZXNzIHRoYW4gb3VyIGZpcnN0IHNsZWVwLCBzdGFydCBpbW1lZGlhdGVseS5cbiAgICBpZiAoc2VsZi5kZWxheSA8PSBlbGFwc2VkKSBzdGFydChlbGFwc2VkIC0gc2VsZi5kZWxheSk7XG4gIH1cblxuICBmdW5jdGlvbiBzdGFydChlbGFwc2VkKSB7XG4gICAgdmFyIGksIGosIG4sIG87XG5cbiAgICAvLyBJZiB0aGUgc3RhdGUgaXMgbm90IFNDSEVEVUxFRCwgdGhlbiB3ZSBwcmV2aW91c2x5IGVycm9yZWQgb24gc3RhcnQuXG4gICAgaWYgKHNlbGYuc3RhdGUgIT09IFNDSEVEVUxFRCkgcmV0dXJuIHN0b3AoKTtcblxuICAgIGZvciAoaSBpbiBzY2hlZHVsZXMpIHtcbiAgICAgIG8gPSBzY2hlZHVsZXNbaV07XG4gICAgICBpZiAoby5uYW1lICE9PSBzZWxmLm5hbWUpIGNvbnRpbnVlO1xuXG4gICAgICAvLyBXaGlsZSB0aGlzIGVsZW1lbnQgYWxyZWFkeSBoYXMgYSBzdGFydGluZyB0cmFuc2l0aW9uIGR1cmluZyB0aGlzIGZyYW1lLFxuICAgICAgLy8gZGVmZXIgc3RhcnRpbmcgYW4gaW50ZXJydXB0aW5nIHRyYW5zaXRpb24gdW50aWwgdGhhdCB0cmFuc2l0aW9uIGhhcyBhXG4gICAgICAvLyBjaGFuY2UgdG8gdGljayAoYW5kIHBvc3NpYmx5IGVuZCk7IHNlZSBkMy9kMy10cmFuc2l0aW9uIzU0IVxuICAgICAgaWYgKG8uc3RhdGUgPT09IFNUQVJURUQpIHJldHVybiB0aW1lb3V0KHN0YXJ0KTtcblxuICAgICAgLy8gSW50ZXJydXB0IHRoZSBhY3RpdmUgdHJhbnNpdGlvbiwgaWYgYW55LlxuICAgICAgaWYgKG8uc3RhdGUgPT09IFJVTk5JTkcpIHtcbiAgICAgICAgby5zdGF0ZSA9IEVOREVEO1xuICAgICAgICBvLnRpbWVyLnN0b3AoKTtcbiAgICAgICAgby5vbi5jYWxsKFwiaW50ZXJydXB0XCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIG8uaW5kZXgsIG8uZ3JvdXApO1xuICAgICAgICBkZWxldGUgc2NoZWR1bGVzW2ldO1xuICAgICAgfVxuXG4gICAgICAvLyBDYW5jZWwgYW55IHByZS1lbXB0ZWQgdHJhbnNpdGlvbnMuXG4gICAgICBlbHNlIGlmICgraSA8IGlkKSB7XG4gICAgICAgIG8uc3RhdGUgPSBFTkRFRDtcbiAgICAgICAgby50aW1lci5zdG9wKCk7XG4gICAgICAgIG8ub24uY2FsbChcImNhbmNlbFwiLCBub2RlLCBub2RlLl9fZGF0YV9fLCBvLmluZGV4LCBvLmdyb3VwKTtcbiAgICAgICAgZGVsZXRlIHNjaGVkdWxlc1tpXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBEZWZlciB0aGUgZmlyc3QgdGljayB0byBlbmQgb2YgdGhlIGN1cnJlbnQgZnJhbWU7IHNlZSBkMy9kMyMxNTc2LlxuICAgIC8vIE5vdGUgdGhlIHRyYW5zaXRpb24gbWF5IGJlIGNhbmNlbGVkIGFmdGVyIHN0YXJ0IGFuZCBiZWZvcmUgdGhlIGZpcnN0IHRpY2shXG4gICAgLy8gTm90ZSB0aGlzIG11c3QgYmUgc2NoZWR1bGVkIGJlZm9yZSB0aGUgc3RhcnQgZXZlbnQ7IHNlZSBkMy9kMy10cmFuc2l0aW9uIzE2IVxuICAgIC8vIEFzc3VtaW5nIHRoaXMgaXMgc3VjY2Vzc2Z1bCwgc3Vic2VxdWVudCBjYWxsYmFja3MgZ28gc3RyYWlnaHQgdG8gdGljay5cbiAgICB0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHNlbGYuc3RhdGUgPT09IFNUQVJURUQpIHtcbiAgICAgICAgc2VsZi5zdGF0ZSA9IFJVTk5JTkc7XG4gICAgICAgIHNlbGYudGltZXIucmVzdGFydCh0aWNrLCBzZWxmLmRlbGF5LCBzZWxmLnRpbWUpO1xuICAgICAgICB0aWNrKGVsYXBzZWQpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gRGlzcGF0Y2ggdGhlIHN0YXJ0IGV2ZW50LlxuICAgIC8vIE5vdGUgdGhpcyBtdXN0IGJlIGRvbmUgYmVmb3JlIHRoZSB0d2VlbiBhcmUgaW5pdGlhbGl6ZWQuXG4gICAgc2VsZi5zdGF0ZSA9IFNUQVJUSU5HO1xuICAgIHNlbGYub24uY2FsbChcInN0YXJ0XCIsIG5vZGUsIG5vZGUuX19kYXRhX18sIHNlbGYuaW5kZXgsIHNlbGYuZ3JvdXApO1xuICAgIGlmIChzZWxmLnN0YXRlICE9PSBTVEFSVElORykgcmV0dXJuOyAvLyBpbnRlcnJ1cHRlZFxuICAgIHNlbGYuc3RhdGUgPSBTVEFSVEVEO1xuXG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgdHdlZW4sIGRlbGV0aW5nIG51bGwgdHdlZW4uXG4gICAgdHdlZW4gPSBuZXcgQXJyYXkobiA9IHNlbGYudHdlZW4ubGVuZ3RoKTtcbiAgICBmb3IgKGkgPSAwLCBqID0gLTE7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChvID0gc2VsZi50d2VlbltpXS52YWx1ZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIHNlbGYuaW5kZXgsIHNlbGYuZ3JvdXApKSB7XG4gICAgICAgIHR3ZWVuWysral0gPSBvO1xuICAgICAgfVxuICAgIH1cbiAgICB0d2Vlbi5sZW5ndGggPSBqICsgMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpY2soZWxhcHNlZCkge1xuICAgIHZhciB0ID0gZWxhcHNlZCA8IHNlbGYuZHVyYXRpb24gPyBzZWxmLmVhc2UuY2FsbChudWxsLCBlbGFwc2VkIC8gc2VsZi5kdXJhdGlvbikgOiAoc2VsZi50aW1lci5yZXN0YXJ0KHN0b3ApLCBzZWxmLnN0YXRlID0gRU5ESU5HLCAxKSxcbiAgICAgICAgaSA9IC0xLFxuICAgICAgICBuID0gdHdlZW4ubGVuZ3RoO1xuXG4gICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgIHR3ZWVuW2ldLmNhbGwobm9kZSwgdCk7XG4gICAgfVxuXG4gICAgLy8gRGlzcGF0Y2ggdGhlIGVuZCBldmVudC5cbiAgICBpZiAoc2VsZi5zdGF0ZSA9PT0gRU5ESU5HKSB7XG4gICAgICBzZWxmLm9uLmNhbGwoXCJlbmRcIiwgbm9kZSwgbm9kZS5fX2RhdGFfXywgc2VsZi5pbmRleCwgc2VsZi5ncm91cCk7XG4gICAgICBzdG9wKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBzZWxmLnN0YXRlID0gRU5ERUQ7XG4gICAgc2VsZi50aW1lci5zdG9wKCk7XG4gICAgZGVsZXRlIHNjaGVkdWxlc1tpZF07XG4gICAgZm9yICh2YXIgaSBpbiBzY2hlZHVsZXMpIHJldHVybjsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIGRlbGV0ZSBub2RlLl9fdHJhbnNpdGlvbjtcbiAgfVxufVxuIiwiaW1wb3J0IHtzZWxlY3Rvcn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlLCB7Z2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3QpIHtcbiAgdmFyIG5hbWUgPSB0aGlzLl9uYW1lLFxuICAgICAgaWQgPSB0aGlzLl9pZDtcblxuICBpZiAodHlwZW9mIHNlbGVjdCAhPT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBzZWxlY3RvcihzZWxlY3QpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IG5ldyBBcnJheShtKSwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgc3ViZ3JvdXAgPSBzdWJncm91cHNbal0gPSBuZXcgQXJyYXkobiksIG5vZGUsIHN1Ym5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKHN1Ym5vZGUgPSBzZWxlY3QuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBncm91cCkpKSB7XG4gICAgICAgIGlmIChcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIHN1Ymdyb3VwW2ldID0gc3Vibm9kZTtcbiAgICAgICAgc2NoZWR1bGUoc3ViZ3JvdXBbaV0sIG5hbWUsIGlkLCBpLCBzdWJncm91cCwgZ2V0KG5vZGUsIGlkKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ldyBUcmFuc2l0aW9uKHN1Ymdyb3VwcywgdGhpcy5fcGFyZW50cywgbmFtZSwgaWQpO1xufVxuIiwiaW1wb3J0IHtzZWxlY3RvckFsbH0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuaW1wb3J0IHtUcmFuc2l0aW9ufSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHNjaGVkdWxlLCB7Z2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihzZWxlY3QpIHtcbiAgdmFyIG5hbWUgPSB0aGlzLl9uYW1lLFxuICAgICAgaWQgPSB0aGlzLl9pZDtcblxuICBpZiAodHlwZW9mIHNlbGVjdCAhPT0gXCJmdW5jdGlvblwiKSBzZWxlY3QgPSBzZWxlY3RvckFsbChzZWxlY3QpO1xuXG4gIGZvciAodmFyIGdyb3VwcyA9IHRoaXMuX2dyb3VwcywgbSA9IGdyb3Vwcy5sZW5ndGgsIHN1Ymdyb3VwcyA9IFtdLCBwYXJlbnRzID0gW10sIGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIG4gPSBncm91cC5sZW5ndGgsIG5vZGUsIGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSB7XG4gICAgICAgIGZvciAodmFyIGNoaWxkcmVuID0gc2VsZWN0LmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgZ3JvdXApLCBjaGlsZCwgaW5oZXJpdCA9IGdldChub2RlLCBpZCksIGsgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBrIDwgbDsgKytrKSB7XG4gICAgICAgICAgaWYgKGNoaWxkID0gY2hpbGRyZW5ba10pIHtcbiAgICAgICAgICAgIHNjaGVkdWxlKGNoaWxkLCBuYW1lLCBpZCwgaywgY2hpbGRyZW4sIGluaGVyaXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdWJncm91cHMucHVzaChjaGlsZHJlbik7XG4gICAgICAgIHBhcmVudHMucHVzaChub2RlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oc3ViZ3JvdXBzLCBwYXJlbnRzLCBuYW1lLCBpZCk7XG59XG4iLCJpbXBvcnQge3NlbGVjdGlvbn0gZnJvbSBcImQzLXNlbGVjdGlvblwiO1xuXG52YXIgU2VsZWN0aW9uID0gc2VsZWN0aW9uLnByb3RvdHlwZS5jb25zdHJ1Y3RvcjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgU2VsZWN0aW9uKHRoaXMuX2dyb3VwcywgdGhpcy5fcGFyZW50cyk7XG59XG4iLCJpbXBvcnQge2ludGVycG9sYXRlVHJhbnNmb3JtQ3NzIGFzIGludGVycG9sYXRlVHJhbnNmb3JtfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7c3R5bGV9IGZyb20gXCJkMy1zZWxlY3Rpb25cIjtcbmltcG9ydCB7c2V0fSBmcm9tIFwiLi9zY2hlZHVsZS5qc1wiO1xuaW1wb3J0IHt0d2VlblZhbHVlfSBmcm9tIFwiLi90d2Vlbi5qc1wiO1xuaW1wb3J0IGludGVycG9sYXRlIGZyb20gXCIuL2ludGVycG9sYXRlLmpzXCI7XG5cbmZ1bmN0aW9uIHN0eWxlTnVsbChuYW1lLCBpbnRlcnBvbGF0ZSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gc3R5bGUodGhpcywgbmFtZSksXG4gICAgICAgIHN0cmluZzEgPSAodGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKSwgc3R5bGUodGhpcywgbmFtZSkpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwICYmIHN0cmluZzEgPT09IHN0cmluZzEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCBzdHJpbmcxMCA9IHN0cmluZzEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZVJlbW92ZShuYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KG5hbWUpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUNvbnN0YW50KG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZTEpIHtcbiAgdmFyIHN0cmluZzAwLFxuICAgICAgc3RyaW5nMSA9IHZhbHVlMSArIFwiXCIsXG4gICAgICBpbnRlcnBvbGF0ZTA7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RyaW5nMCA9IHN0eWxlKHRoaXMsIG5hbWUpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZUZ1bmN0aW9uKG5hbWUsIGludGVycG9sYXRlLCB2YWx1ZSkge1xuICB2YXIgc3RyaW5nMDAsXG4gICAgICBzdHJpbmcxMCxcbiAgICAgIGludGVycG9sYXRlMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzdHJpbmcwID0gc3R5bGUodGhpcywgbmFtZSksXG4gICAgICAgIHZhbHVlMSA9IHZhbHVlKHRoaXMpLFxuICAgICAgICBzdHJpbmcxID0gdmFsdWUxICsgXCJcIjtcbiAgICBpZiAodmFsdWUxID09IG51bGwpIHN0cmluZzEgPSB2YWx1ZTEgPSAodGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKSwgc3R5bGUodGhpcywgbmFtZSkpO1xuICAgIHJldHVybiBzdHJpbmcwID09PSBzdHJpbmcxID8gbnVsbFxuICAgICAgICA6IHN0cmluZzAgPT09IHN0cmluZzAwICYmIHN0cmluZzEgPT09IHN0cmluZzEwID8gaW50ZXJwb2xhdGUwXG4gICAgICAgIDogKHN0cmluZzEwID0gc3RyaW5nMSwgaW50ZXJwb2xhdGUwID0gaW50ZXJwb2xhdGUoc3RyaW5nMDAgPSBzdHJpbmcwLCB2YWx1ZTEpKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3R5bGVNYXliZVJlbW92ZShpZCwgbmFtZSkge1xuICB2YXIgb24wLCBvbjEsIGxpc3RlbmVyMCwga2V5ID0gXCJzdHlsZS5cIiArIG5hbWUsIGV2ZW50ID0gXCJlbmQuXCIgKyBrZXksIHJlbW92ZTtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIG9uID0gc2NoZWR1bGUub24sXG4gICAgICAgIGxpc3RlbmVyID0gc2NoZWR1bGUudmFsdWVba2V5XSA9PSBudWxsID8gcmVtb3ZlIHx8IChyZW1vdmUgPSBzdHlsZVJlbW92ZShuYW1lKSkgOiB1bmRlZmluZWQ7XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIGEgZGlzcGF0Y2ggd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgZGlzcGF0Y2ggYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKG9uICE9PSBvbjAgfHwgbGlzdGVuZXIwICE9PSBsaXN0ZW5lcikgKG9uMSA9IChvbjAgPSBvbikuY29weSgpKS5vbihldmVudCwgbGlzdGVuZXIwID0gbGlzdGVuZXIpO1xuXG4gICAgc2NoZWR1bGUub24gPSBvbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIgaSA9IChuYW1lICs9IFwiXCIpID09PSBcInRyYW5zZm9ybVwiID8gaW50ZXJwb2xhdGVUcmFuc2Zvcm0gOiBpbnRlcnBvbGF0ZTtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyB0aGlzXG4gICAgICAuc3R5bGVUd2VlbihuYW1lLCBzdHlsZU51bGwobmFtZSwgaSkpXG4gICAgICAub24oXCJlbmQuc3R5bGUuXCIgKyBuYW1lLCBzdHlsZVJlbW92ZShuYW1lKSlcbiAgICA6IHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gdGhpc1xuICAgICAgLnN0eWxlVHdlZW4obmFtZSwgc3R5bGVGdW5jdGlvbihuYW1lLCBpLCB0d2VlblZhbHVlKHRoaXMsIFwic3R5bGUuXCIgKyBuYW1lLCB2YWx1ZSkpKVxuICAgICAgLmVhY2goc3R5bGVNYXliZVJlbW92ZSh0aGlzLl9pZCwgbmFtZSkpXG4gICAgOiB0aGlzXG4gICAgICAuc3R5bGVUd2VlbihuYW1lLCBzdHlsZUNvbnN0YW50KG5hbWUsIGksIHZhbHVlKSwgcHJpb3JpdHkpXG4gICAgICAub24oXCJlbmQuc3R5bGUuXCIgKyBuYW1lLCBudWxsKTtcbn1cbiIsImZ1bmN0aW9uIHN0eWxlSW50ZXJwb2xhdGUobmFtZSwgaSwgcHJpb3JpdHkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KG5hbWUsIGkuY2FsbCh0aGlzLCB0KSwgcHJpb3JpdHkpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBzdHlsZVR3ZWVuKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkge1xuICB2YXIgdCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQgPSAoaTAgPSBpKSAmJiBzdHlsZUludGVycG9sYXRlKG5hbWUsIGksIHByaW9yaXR5KTtcbiAgICByZXR1cm4gdDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgdmFyIGtleSA9IFwic3R5bGUuXCIgKyAobmFtZSArPSBcIlwiKTtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gKGtleSA9IHRoaXMudHdlZW4oa2V5KSkgJiYga2V5Ll92YWx1ZTtcbiAgaWYgKHZhbHVlID09IG51bGwpIHJldHVybiB0aGlzLnR3ZWVuKGtleSwgbnVsbCk7XG4gIGlmICh0eXBlb2YgdmFsdWUgIT09IFwiZnVuY3Rpb25cIikgdGhyb3cgbmV3IEVycm9yO1xuICByZXR1cm4gdGhpcy50d2VlbihrZXksIHN0eWxlVHdlZW4obmFtZSwgdmFsdWUsIHByaW9yaXR5ID09IG51bGwgPyBcIlwiIDogcHJpb3JpdHkpKTtcbn1cbiIsImltcG9ydCB7dHdlZW5WYWx1ZX0gZnJvbSBcIi4vdHdlZW4uanNcIjtcblxuZnVuY3Rpb24gdGV4dENvbnN0YW50KHZhbHVlKSB7XG4gIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHRleHRGdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlMSA9IHZhbHVlKHRoaXMpO1xuICAgIHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTEgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZTE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLnR3ZWVuKFwidGV4dFwiLCB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgPyB0ZXh0RnVuY3Rpb24odHdlZW5WYWx1ZSh0aGlzLCBcInRleHRcIiwgdmFsdWUpKVxuICAgICAgOiB0ZXh0Q29uc3RhbnQodmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCIpKTtcbn1cbiIsImZ1bmN0aW9uIHRleHRJbnRlcnBvbGF0ZShpKSB7XG4gIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgdGhpcy50ZXh0Q29udGVudCA9IGkuY2FsbCh0aGlzLCB0KTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdGV4dFR3ZWVuKHZhbHVlKSB7XG4gIHZhciB0MCwgaTA7XG4gIGZ1bmN0aW9uIHR3ZWVuKCkge1xuICAgIHZhciBpID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBpZiAoaSAhPT0gaTApIHQwID0gKGkwID0gaSkgJiYgdGV4dEludGVycG9sYXRlKGkpO1xuICAgIHJldHVybiB0MDtcbiAgfVxuICB0d2Vlbi5fdmFsdWUgPSB2YWx1ZTtcbiAgcmV0dXJuIHR3ZWVuO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih2YWx1ZSkge1xuICB2YXIga2V5ID0gXCJ0ZXh0XCI7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIChrZXkgPSB0aGlzLnR3ZWVuKGtleSkpICYmIGtleS5fdmFsdWU7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSByZXR1cm4gdGhpcy50d2VlbihrZXksIG51bGwpO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIHRoaXMudHdlZW4oa2V5LCB0ZXh0VHdlZW4odmFsdWUpKTtcbn1cbiIsImltcG9ydCB7VHJhbnNpdGlvbiwgbmV3SWR9IGZyb20gXCIuL2luZGV4LmpzXCI7XG5pbXBvcnQgc2NoZWR1bGUsIHtnZXR9IGZyb20gXCIuL3NjaGVkdWxlLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xuICB2YXIgbmFtZSA9IHRoaXMuX25hbWUsXG4gICAgICBpZDAgPSB0aGlzLl9pZCxcbiAgICAgIGlkMSA9IG5ld0lkKCk7XG5cbiAgZm9yICh2YXIgZ3JvdXBzID0gdGhpcy5fZ3JvdXBzLCBtID0gZ3JvdXBzLmxlbmd0aCwgaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICBmb3IgKHZhciBncm91cCA9IGdyb3Vwc1tqXSwgbiA9IGdyb3VwLmxlbmd0aCwgbm9kZSwgaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgdmFyIGluaGVyaXQgPSBnZXQobm9kZSwgaWQwKTtcbiAgICAgICAgc2NoZWR1bGUobm9kZSwgbmFtZSwgaWQxLCBpLCBncm91cCwge1xuICAgICAgICAgIHRpbWU6IGluaGVyaXQudGltZSArIGluaGVyaXQuZGVsYXkgKyBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGRlbGF5OiAwLFxuICAgICAgICAgIGR1cmF0aW9uOiBpbmhlcml0LmR1cmF0aW9uLFxuICAgICAgICAgIGVhc2U6IGluaGVyaXQuZWFzZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFRyYW5zaXRpb24oZ3JvdXBzLCB0aGlzLl9wYXJlbnRzLCBuYW1lLCBpZDEpO1xufVxuIiwiaW1wb3J0IHtnZXQsIHNldH0gZnJvbSBcIi4vc2NoZWR1bGUuanNcIjtcblxuZnVuY3Rpb24gdHdlZW5SZW1vdmUoaWQsIG5hbWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjaGVkdWxlID0gc2V0KHRoaXMsIGlkKSxcbiAgICAgICAgdHdlZW4gPSBzY2hlZHVsZS50d2VlbjtcblxuICAgIC8vIElmIHRoaXMgbm9kZSBzaGFyZWQgdHdlZW4gd2l0aCB0aGUgcHJldmlvdXMgbm9kZSxcbiAgICAvLyBqdXN0IGFzc2lnbiB0aGUgdXBkYXRlZCBzaGFyZWQgdHdlZW4gYW5kIHdl4oCZcmUgZG9uZSFcbiAgICAvLyBPdGhlcndpc2UsIGNvcHktb24td3JpdGUuXG4gICAgaWYgKHR3ZWVuICE9PSB0d2VlbjApIHtcbiAgICAgIHR3ZWVuMSA9IHR3ZWVuMCA9IHR3ZWVuO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSB0d2VlbjEubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGlmICh0d2VlbjFbaV0ubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgIHR3ZWVuMSA9IHR3ZWVuMS5zbGljZSgpO1xuICAgICAgICAgIHR3ZWVuMS5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBzY2hlZHVsZS50d2VlbiA9IHR3ZWVuMTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gdHdlZW5GdW5jdGlvbihpZCwgbmFtZSwgdmFsdWUpIHtcbiAgdmFyIHR3ZWVuMCwgdHdlZW4xO1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHRocm93IG5ldyBFcnJvcjtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHZhciBzY2hlZHVsZSA9IHNldCh0aGlzLCBpZCksXG4gICAgICAgIHR3ZWVuID0gc2NoZWR1bGUudHdlZW47XG5cbiAgICAvLyBJZiB0aGlzIG5vZGUgc2hhcmVkIHR3ZWVuIHdpdGggdGhlIHByZXZpb3VzIG5vZGUsXG4gICAgLy8ganVzdCBhc3NpZ24gdGhlIHVwZGF0ZWQgc2hhcmVkIHR3ZWVuIGFuZCB3ZeKAmXJlIGRvbmUhXG4gICAgLy8gT3RoZXJ3aXNlLCBjb3B5LW9uLXdyaXRlLlxuICAgIGlmICh0d2VlbiAhPT0gdHdlZW4wKSB7XG4gICAgICB0d2VlbjEgPSAodHdlZW4wID0gdHdlZW4pLnNsaWNlKCk7XG4gICAgICBmb3IgKHZhciB0ID0ge25hbWU6IG5hbWUsIHZhbHVlOiB2YWx1ZX0sIGkgPSAwLCBuID0gdHdlZW4xLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgICBpZiAodHdlZW4xW2ldLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICB0d2VlbjFbaV0gPSB0O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaSA9PT0gbikgdHdlZW4xLnB1c2godCk7XG4gICAgfVxuXG4gICAgc2NoZWR1bGUudHdlZW4gPSB0d2VlbjE7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRoaXMuX2lkO1xuXG4gIG5hbWUgKz0gXCJcIjtcblxuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICB2YXIgdHdlZW4gPSBnZXQodGhpcy5ub2RlKCksIGlkKS50d2VlbjtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHR3ZWVuLmxlbmd0aCwgdDsgaSA8IG47ICsraSkge1xuICAgICAgaWYgKCh0ID0gdHdlZW5baV0pLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHRoaXMuZWFjaCgodmFsdWUgPT0gbnVsbCA/IHR3ZWVuUmVtb3ZlIDogdHdlZW5GdW5jdGlvbikoaWQsIG5hbWUsIHZhbHVlKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0d2VlblZhbHVlKHRyYW5zaXRpb24sIG5hbWUsIHZhbHVlKSB7XG4gIHZhciBpZCA9IHRyYW5zaXRpb24uX2lkO1xuXG4gIHRyYW5zaXRpb24uZWFjaChmdW5jdGlvbigpIHtcbiAgICB2YXIgc2NoZWR1bGUgPSBzZXQodGhpcywgaWQpO1xuICAgIChzY2hlZHVsZS52YWx1ZSB8fCAoc2NoZWR1bGUudmFsdWUgPSB7fSkpW25hbWVdID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICByZXR1cm4gZ2V0KG5vZGUsIGlkKS52YWx1ZVtuYW1lXTtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IHggPT4gKCkgPT4geDtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFpvb21FdmVudCh0eXBlLCB7XG4gIHNvdXJjZUV2ZW50LFxuICB0YXJnZXQsXG4gIHRyYW5zZm9ybSxcbiAgZGlzcGF0Y2hcbn0pIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywge1xuICAgIHR5cGU6IHt2YWx1ZTogdHlwZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICBzb3VyY2VFdmVudDoge3ZhbHVlOiBzb3VyY2VFdmVudCwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlfSxcbiAgICB0YXJnZXQ6IHt2YWx1ZTogdGFyZ2V0LCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWV9LFxuICAgIHRyYW5zZm9ybToge3ZhbHVlOiB0cmFuc2Zvcm0sIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZX0sXG4gICAgXzoge3ZhbHVlOiBkaXNwYXRjaH1cbiAgfSk7XG59XG4iLCJleHBvcnQge2RlZmF1bHQgYXMgem9vbX0gZnJvbSBcIi4vem9vbS5qc1wiO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHpvb21UcmFuc2Zvcm0sIGlkZW50aXR5IGFzIHpvb21JZGVudGl0eX0gZnJvbSBcIi4vdHJhbnNmb3JtLmpzXCI7XG4iLCJleHBvcnQgZnVuY3Rpb24gbm9wcm9wYWdhdGlvbihldmVudCkge1xuICBldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZXZlbnQpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gVHJhbnNmb3JtKGssIHgsIHkpIHtcbiAgdGhpcy5rID0gaztcbiAgdGhpcy54ID0geDtcbiAgdGhpcy55ID0geTtcbn1cblxuVHJhbnNmb3JtLnByb3RvdHlwZSA9IHtcbiAgY29uc3RydWN0b3I6IFRyYW5zZm9ybSxcbiAgc2NhbGU6IGZ1bmN0aW9uKGspIHtcbiAgICByZXR1cm4gayA9PT0gMSA/IHRoaXMgOiBuZXcgVHJhbnNmb3JtKHRoaXMuayAqIGssIHRoaXMueCwgdGhpcy55KTtcbiAgfSxcbiAgdHJhbnNsYXRlOiBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIHggPT09IDAgJiB5ID09PSAwID8gdGhpcyA6IG5ldyBUcmFuc2Zvcm0odGhpcy5rLCB0aGlzLnggKyB0aGlzLmsgKiB4LCB0aGlzLnkgKyB0aGlzLmsgKiB5KTtcbiAgfSxcbiAgYXBwbHk6IGZ1bmN0aW9uKHBvaW50KSB7XG4gICAgcmV0dXJuIFtwb2ludFswXSAqIHRoaXMuayArIHRoaXMueCwgcG9pbnRbMV0gKiB0aGlzLmsgKyB0aGlzLnldO1xuICB9LFxuICBhcHBseVg6IGZ1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4geCAqIHRoaXMuayArIHRoaXMueDtcbiAgfSxcbiAgYXBwbHlZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkgKiB0aGlzLmsgKyB0aGlzLnk7XG4gIH0sXG4gIGludmVydDogZnVuY3Rpb24obG9jYXRpb24pIHtcbiAgICByZXR1cm4gWyhsb2NhdGlvblswXSAtIHRoaXMueCkgLyB0aGlzLmssIChsb2NhdGlvblsxXSAtIHRoaXMueSkgLyB0aGlzLmtdO1xuICB9LFxuICBpbnZlcnRYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuICh4IC0gdGhpcy54KSAvIHRoaXMuaztcbiAgfSxcbiAgaW52ZXJ0WTogZnVuY3Rpb24oeSkge1xuICAgIHJldHVybiAoeSAtIHRoaXMueSkgLyB0aGlzLms7XG4gIH0sXG4gIHJlc2NhbGVYOiBmdW5jdGlvbih4KSB7XG4gICAgcmV0dXJuIHguY29weSgpLmRvbWFpbih4LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCwgdGhpcykubWFwKHguaW52ZXJ0LCB4KSk7XG4gIH0sXG4gIHJlc2NhbGVZOiBmdW5jdGlvbih5KSB7XG4gICAgcmV0dXJuIHkuY29weSgpLmRvbWFpbih5LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WSwgdGhpcykubWFwKHkuaW52ZXJ0LCB5KSk7XG4gIH0sXG4gIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLnggKyBcIixcIiArIHRoaXMueSArIFwiKSBzY2FsZShcIiArIHRoaXMuayArIFwiKVwiO1xuICB9XG59O1xuXG5leHBvcnQgdmFyIGlkZW50aXR5ID0gbmV3IFRyYW5zZm9ybSgxLCAwLCAwKTtcblxudHJhbnNmb3JtLnByb3RvdHlwZSA9IFRyYW5zZm9ybS5wcm90b3R5cGU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybShub2RlKSB7XG4gIHdoaWxlICghbm9kZS5fX3pvb20pIGlmICghKG5vZGUgPSBub2RlLnBhcmVudE5vZGUpKSByZXR1cm4gaWRlbnRpdHk7XG4gIHJldHVybiBub2RlLl9fem9vbTtcbn1cbiIsImltcG9ydCB7ZGlzcGF0Y2h9IGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuaW1wb3J0IHtkcmFnRGlzYWJsZSwgZHJhZ0VuYWJsZX0gZnJvbSBcImQzLWRyYWdcIjtcbmltcG9ydCB7aW50ZXJwb2xhdGVab29tfSBmcm9tIFwiZDMtaW50ZXJwb2xhdGVcIjtcbmltcG9ydCB7c2VsZWN0LCBwb2ludGVyfSBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5pbXBvcnQge2ludGVycnVwdH0gZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmltcG9ydCBjb25zdGFudCBmcm9tIFwiLi9jb25zdGFudC5qc1wiO1xuaW1wb3J0IFpvb21FdmVudCBmcm9tIFwiLi9ldmVudC5qc1wiO1xuaW1wb3J0IHtUcmFuc2Zvcm0sIGlkZW50aXR5fSBmcm9tIFwiLi90cmFuc2Zvcm0uanNcIjtcbmltcG9ydCBub2V2ZW50LCB7bm9wcm9wYWdhdGlvbn0gZnJvbSBcIi4vbm9ldmVudC5qc1wiO1xuXG4vLyBJZ25vcmUgcmlnaHQtY2xpY2ssIHNpbmNlIHRoYXQgc2hvdWxkIG9wZW4gdGhlIGNvbnRleHQgbWVudS5cbi8vIGV4Y2VwdCBmb3IgcGluY2gtdG8tem9vbSwgd2hpY2ggaXMgc2VudCBhcyBhIHdoZWVsK2N0cmxLZXkgZXZlbnRcbmZ1bmN0aW9uIGRlZmF1bHRGaWx0ZXIoZXZlbnQpIHtcbiAgcmV0dXJuICghZXZlbnQuY3RybEtleSB8fCBldmVudC50eXBlID09PSAnd2hlZWwnKSAmJiAhZXZlbnQuYnV0dG9uO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0RXh0ZW50KCkge1xuICB2YXIgZSA9IHRoaXM7XG4gIGlmIChlIGluc3RhbmNlb2YgU1ZHRWxlbWVudCkge1xuICAgIGUgPSBlLm93bmVyU1ZHRWxlbWVudCB8fCBlO1xuICAgIGlmIChlLmhhc0F0dHJpYnV0ZShcInZpZXdCb3hcIikpIHtcbiAgICAgIGUgPSBlLnZpZXdCb3guYmFzZVZhbDtcbiAgICAgIHJldHVybiBbW2UueCwgZS55XSwgW2UueCArIGUud2lkdGgsIGUueSArIGUuaGVpZ2h0XV07XG4gICAgfVxuICAgIHJldHVybiBbWzAsIDBdLCBbZS53aWR0aC5iYXNlVmFsLnZhbHVlLCBlLmhlaWdodC5iYXNlVmFsLnZhbHVlXV07XG4gIH1cbiAgcmV0dXJuIFtbMCwgMF0sIFtlLmNsaWVudFdpZHRoLCBlLmNsaWVudEhlaWdodF1dO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0VHJhbnNmb3JtKCkge1xuICByZXR1cm4gdGhpcy5fX3pvb20gfHwgaWRlbnRpdHk7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRXaGVlbERlbHRhKGV2ZW50KSB7XG4gIHJldHVybiAtZXZlbnQuZGVsdGFZICogKGV2ZW50LmRlbHRhTW9kZSA9PT0gMSA/IDAuMDUgOiBldmVudC5kZWx0YU1vZGUgPyAxIDogMC4wMDIpICogKGV2ZW50LmN0cmxLZXkgPyAxMCA6IDEpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0VG91Y2hhYmxlKCkge1xuICByZXR1cm4gbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzIHx8IChcIm9udG91Y2hzdGFydFwiIGluIHRoaXMpO1xufVxuXG5mdW5jdGlvbiBkZWZhdWx0Q29uc3RyYWluKHRyYW5zZm9ybSwgZXh0ZW50LCB0cmFuc2xhdGVFeHRlbnQpIHtcbiAgdmFyIGR4MCA9IHRyYW5zZm9ybS5pbnZlcnRYKGV4dGVudFswXVswXSkgLSB0cmFuc2xhdGVFeHRlbnRbMF1bMF0sXG4gICAgICBkeDEgPSB0cmFuc2Zvcm0uaW52ZXJ0WChleHRlbnRbMV1bMF0pIC0gdHJhbnNsYXRlRXh0ZW50WzFdWzBdLFxuICAgICAgZHkwID0gdHJhbnNmb3JtLmludmVydFkoZXh0ZW50WzBdWzFdKSAtIHRyYW5zbGF0ZUV4dGVudFswXVsxXSxcbiAgICAgIGR5MSA9IHRyYW5zZm9ybS5pbnZlcnRZKGV4dGVudFsxXVsxXSkgLSB0cmFuc2xhdGVFeHRlbnRbMV1bMV07XG4gIHJldHVybiB0cmFuc2Zvcm0udHJhbnNsYXRlKFxuICAgIGR4MSA+IGR4MCA/IChkeDAgKyBkeDEpIC8gMiA6IE1hdGgubWluKDAsIGR4MCkgfHwgTWF0aC5tYXgoMCwgZHgxKSxcbiAgICBkeTEgPiBkeTAgPyAoZHkwICsgZHkxKSAvIDIgOiBNYXRoLm1pbigwLCBkeTApIHx8IE1hdGgubWF4KDAsIGR5MSlcbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gIHZhciBmaWx0ZXIgPSBkZWZhdWx0RmlsdGVyLFxuICAgICAgZXh0ZW50ID0gZGVmYXVsdEV4dGVudCxcbiAgICAgIGNvbnN0cmFpbiA9IGRlZmF1bHRDb25zdHJhaW4sXG4gICAgICB3aGVlbERlbHRhID0gZGVmYXVsdFdoZWVsRGVsdGEsXG4gICAgICB0b3VjaGFibGUgPSBkZWZhdWx0VG91Y2hhYmxlLFxuICAgICAgc2NhbGVFeHRlbnQgPSBbMCwgSW5maW5pdHldLFxuICAgICAgdHJhbnNsYXRlRXh0ZW50ID0gW1stSW5maW5pdHksIC1JbmZpbml0eV0sIFtJbmZpbml0eSwgSW5maW5pdHldXSxcbiAgICAgIGR1cmF0aW9uID0gMjUwLFxuICAgICAgaW50ZXJwb2xhdGUgPSBpbnRlcnBvbGF0ZVpvb20sXG4gICAgICBsaXN0ZW5lcnMgPSBkaXNwYXRjaChcInN0YXJ0XCIsIFwiem9vbVwiLCBcImVuZFwiKSxcbiAgICAgIHRvdWNoc3RhcnRpbmcsXG4gICAgICB0b3VjaGZpcnN0LFxuICAgICAgdG91Y2hlbmRpbmcsXG4gICAgICB0b3VjaERlbGF5ID0gNTAwLFxuICAgICAgd2hlZWxEZWxheSA9IDE1MCxcbiAgICAgIGNsaWNrRGlzdGFuY2UyID0gMCxcbiAgICAgIHRhcERpc3RhbmNlID0gMTA7XG5cbiAgZnVuY3Rpb24gem9vbShzZWxlY3Rpb24pIHtcbiAgICBzZWxlY3Rpb25cbiAgICAgICAgLnByb3BlcnR5KFwiX196b29tXCIsIGRlZmF1bHRUcmFuc2Zvcm0pXG4gICAgICAgIC5vbihcIndoZWVsLnpvb21cIiwgd2hlZWxlZClcbiAgICAgICAgLm9uKFwibW91c2Vkb3duLnpvb21cIiwgbW91c2Vkb3duZWQpXG4gICAgICAgIC5vbihcImRibGNsaWNrLnpvb21cIiwgZGJsY2xpY2tlZClcbiAgICAgIC5maWx0ZXIodG91Y2hhYmxlKVxuICAgICAgICAub24oXCJ0b3VjaHN0YXJ0Lnpvb21cIiwgdG91Y2hzdGFydGVkKVxuICAgICAgICAub24oXCJ0b3VjaG1vdmUuem9vbVwiLCB0b3VjaG1vdmVkKVxuICAgICAgICAub24oXCJ0b3VjaGVuZC56b29tIHRvdWNoY2FuY2VsLnpvb21cIiwgdG91Y2hlbmRlZClcbiAgICAgICAgLnN0eWxlKFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsIFwicmdiYSgwLDAsMCwwKVwiKTtcbiAgfVxuXG4gIHpvb20udHJhbnNmb3JtID0gZnVuY3Rpb24oY29sbGVjdGlvbiwgdHJhbnNmb3JtLCBwb2ludCwgZXZlbnQpIHtcbiAgICB2YXIgc2VsZWN0aW9uID0gY29sbGVjdGlvbi5zZWxlY3Rpb24gPyBjb2xsZWN0aW9uLnNlbGVjdGlvbigpIDogY29sbGVjdGlvbjtcbiAgICBzZWxlY3Rpb24ucHJvcGVydHkoXCJfX3pvb21cIiwgZGVmYXVsdFRyYW5zZm9ybSk7XG4gICAgaWYgKGNvbGxlY3Rpb24gIT09IHNlbGVjdGlvbikge1xuICAgICAgc2NoZWR1bGUoY29sbGVjdGlvbiwgdHJhbnNmb3JtLCBwb2ludCwgZXZlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZWxlY3Rpb24uaW50ZXJydXB0KCkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgZ2VzdHVyZSh0aGlzLCBhcmd1bWVudHMpXG4gICAgICAgICAgLmV2ZW50KGV2ZW50KVxuICAgICAgICAgIC5zdGFydCgpXG4gICAgICAgICAgLnpvb20obnVsbCwgdHlwZW9mIHRyYW5zZm9ybSA9PT0gXCJmdW5jdGlvblwiID8gdHJhbnNmb3JtLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiB0cmFuc2Zvcm0pXG4gICAgICAgICAgLmVuZCgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHpvb20uc2NhbGVCeSA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgaywgcCwgZXZlbnQpIHtcbiAgICB6b29tLnNjYWxlVG8oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBrMCA9IHRoaXMuX196b29tLmssXG4gICAgICAgICAgazEgPSB0eXBlb2YgayA9PT0gXCJmdW5jdGlvblwiID8gay5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogaztcbiAgICAgIHJldHVybiBrMCAqIGsxO1xuICAgIH0sIHAsIGV2ZW50KTtcbiAgfTtcblxuICB6b29tLnNjYWxlVG8gPSBmdW5jdGlvbihzZWxlY3Rpb24sIGssIHAsIGV2ZW50KSB7XG4gICAgem9vbS50cmFuc2Zvcm0oc2VsZWN0aW9uLCBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBlID0gZXh0ZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksXG4gICAgICAgICAgdDAgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgICBwMCA9IHAgPT0gbnVsbCA/IGNlbnRyb2lkKGUpIDogdHlwZW9mIHAgPT09IFwiZnVuY3Rpb25cIiA/IHAuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHAsXG4gICAgICAgICAgcDEgPSB0MC5pbnZlcnQocDApLFxuICAgICAgICAgIGsxID0gdHlwZW9mIGsgPT09IFwiZnVuY3Rpb25cIiA/IGsuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IGs7XG4gICAgICByZXR1cm4gY29uc3RyYWluKHRyYW5zbGF0ZShzY2FsZSh0MCwgazEpLCBwMCwgcDEpLCBlLCB0cmFuc2xhdGVFeHRlbnQpO1xuICAgIH0sIHAsIGV2ZW50KTtcbiAgfTtcblxuICB6b29tLnRyYW5zbGF0ZUJ5ID0gZnVuY3Rpb24oc2VsZWN0aW9uLCB4LCB5LCBldmVudCkge1xuICAgIHpvb20udHJhbnNmb3JtKHNlbGVjdGlvbiwgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gY29uc3RyYWluKHRoaXMuX196b29tLnRyYW5zbGF0ZShcbiAgICAgICAgdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHguYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHgsXG4gICAgICAgIHR5cGVvZiB5ID09PSBcImZ1bmN0aW9uXCIgPyB5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiB5XG4gICAgICApLCBleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgdHJhbnNsYXRlRXh0ZW50KTtcbiAgICB9LCBudWxsLCBldmVudCk7XG4gIH07XG5cbiAgem9vbS50cmFuc2xhdGVUbyA9IGZ1bmN0aW9uKHNlbGVjdGlvbiwgeCwgeSwgcCwgZXZlbnQpIHtcbiAgICB6b29tLnRyYW5zZm9ybShzZWxlY3Rpb24sIGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGUgPSBleHRlbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSxcbiAgICAgICAgICB0ID0gdGhpcy5fX3pvb20sXG4gICAgICAgICAgcDAgPSBwID09IG51bGwgPyBjZW50cm9pZChlKSA6IHR5cGVvZiBwID09PSBcImZ1bmN0aW9uXCIgPyBwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBwO1xuICAgICAgcmV0dXJuIGNvbnN0cmFpbihpZGVudGl0eS50cmFuc2xhdGUocDBbMF0sIHAwWzFdKS5zY2FsZSh0LmspLnRyYW5zbGF0ZShcbiAgICAgICAgdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IC14LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiAteCxcbiAgICAgICAgdHlwZW9mIHkgPT09IFwiZnVuY3Rpb25cIiA/IC15LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiAteVxuICAgICAgKSwgZSwgdHJhbnNsYXRlRXh0ZW50KTtcbiAgICB9LCBwLCBldmVudCk7XG4gIH07XG5cbiAgZnVuY3Rpb24gc2NhbGUodHJhbnNmb3JtLCBrKSB7XG4gICAgayA9IE1hdGgubWF4KHNjYWxlRXh0ZW50WzBdLCBNYXRoLm1pbihzY2FsZUV4dGVudFsxXSwgaykpO1xuICAgIHJldHVybiBrID09PSB0cmFuc2Zvcm0uayA/IHRyYW5zZm9ybSA6IG5ldyBUcmFuc2Zvcm0oaywgdHJhbnNmb3JtLngsIHRyYW5zZm9ybS55KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRyYW5zbGF0ZSh0cmFuc2Zvcm0sIHAwLCBwMSkge1xuICAgIHZhciB4ID0gcDBbMF0gLSBwMVswXSAqIHRyYW5zZm9ybS5rLCB5ID0gcDBbMV0gLSBwMVsxXSAqIHRyYW5zZm9ybS5rO1xuICAgIHJldHVybiB4ID09PSB0cmFuc2Zvcm0ueCAmJiB5ID09PSB0cmFuc2Zvcm0ueSA/IHRyYW5zZm9ybSA6IG5ldyBUcmFuc2Zvcm0odHJhbnNmb3JtLmssIHgsIHkpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2VudHJvaWQoZXh0ZW50KSB7XG4gICAgcmV0dXJuIFsoK2V4dGVudFswXVswXSArICtleHRlbnRbMV1bMF0pIC8gMiwgKCtleHRlbnRbMF1bMV0gKyArZXh0ZW50WzFdWzFdKSAvIDJdO1xuICB9XG5cbiAgZnVuY3Rpb24gc2NoZWR1bGUodHJhbnNpdGlvbiwgdHJhbnNmb3JtLCBwb2ludCwgZXZlbnQpIHtcbiAgICB0cmFuc2l0aW9uXG4gICAgICAgIC5vbihcInN0YXJ0Lnpvb21cIiwgZnVuY3Rpb24oKSB7IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKS5ldmVudChldmVudCkuc3RhcnQoKTsgfSlcbiAgICAgICAgLm9uKFwiaW50ZXJydXB0Lnpvb20gZW5kLnpvb21cIiwgZnVuY3Rpb24oKSB7IGdlc3R1cmUodGhpcywgYXJndW1lbnRzKS5ldmVudChldmVudCkuZW5kKCk7IH0pXG4gICAgICAgIC50d2VlbihcInpvb21cIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIHRoYXQgPSB0aGlzLFxuICAgICAgICAgICAgICBhcmdzID0gYXJndW1lbnRzLFxuICAgICAgICAgICAgICBnID0gZ2VzdHVyZSh0aGF0LCBhcmdzKS5ldmVudChldmVudCksXG4gICAgICAgICAgICAgIGUgPSBleHRlbnQuYXBwbHkodGhhdCwgYXJncyksXG4gICAgICAgICAgICAgIHAgPSBwb2ludCA9PSBudWxsID8gY2VudHJvaWQoZSkgOiB0eXBlb2YgcG9pbnQgPT09IFwiZnVuY3Rpb25cIiA/IHBvaW50LmFwcGx5KHRoYXQsIGFyZ3MpIDogcG9pbnQsXG4gICAgICAgICAgICAgIHcgPSBNYXRoLm1heChlWzFdWzBdIC0gZVswXVswXSwgZVsxXVsxXSAtIGVbMF1bMV0pLFxuICAgICAgICAgICAgICBhID0gdGhhdC5fX3pvb20sXG4gICAgICAgICAgICAgIGIgPSB0eXBlb2YgdHJhbnNmb3JtID09PSBcImZ1bmN0aW9uXCIgPyB0cmFuc2Zvcm0uYXBwbHkodGhhdCwgYXJncykgOiB0cmFuc2Zvcm0sXG4gICAgICAgICAgICAgIGkgPSBpbnRlcnBvbGF0ZShhLmludmVydChwKS5jb25jYXQodyAvIGEuayksIGIuaW52ZXJ0KHApLmNvbmNhdCh3IC8gYi5rKSk7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgIGlmICh0ID09PSAxKSB0ID0gYjsgLy8gQXZvaWQgcm91bmRpbmcgZXJyb3Igb24gZW5kLlxuICAgICAgICAgICAgZWxzZSB7IHZhciBsID0gaSh0KSwgayA9IHcgLyBsWzJdOyB0ID0gbmV3IFRyYW5zZm9ybShrLCBwWzBdIC0gbFswXSAqIGssIHBbMV0gLSBsWzFdICogayk7IH1cbiAgICAgICAgICAgIGcuem9vbShudWxsLCB0KTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdlc3R1cmUodGhhdCwgYXJncywgY2xlYW4pIHtcbiAgICByZXR1cm4gKCFjbGVhbiAmJiB0aGF0Ll9fem9vbWluZykgfHwgbmV3IEdlc3R1cmUodGhhdCwgYXJncyk7XG4gIH1cblxuICBmdW5jdGlvbiBHZXN0dXJlKHRoYXQsIGFyZ3MpIHtcbiAgICB0aGlzLnRoYXQgPSB0aGF0O1xuICAgIHRoaXMuYXJncyA9IGFyZ3M7XG4gICAgdGhpcy5hY3RpdmUgPSAwO1xuICAgIHRoaXMuc291cmNlRXZlbnQgPSBudWxsO1xuICAgIHRoaXMuZXh0ZW50ID0gZXh0ZW50LmFwcGx5KHRoYXQsIGFyZ3MpO1xuICAgIHRoaXMudGFwcyA9IDA7XG4gIH1cblxuICBHZXN0dXJlLnByb3RvdHlwZSA9IHtcbiAgICBldmVudDogZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgIGlmIChldmVudCkgdGhpcy5zb3VyY2VFdmVudCA9IGV2ZW50O1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoKyt0aGlzLmFjdGl2ZSA9PT0gMSkge1xuICAgICAgICB0aGlzLnRoYXQuX196b29taW5nID0gdGhpcztcbiAgICAgICAgdGhpcy5lbWl0KFwic3RhcnRcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIHpvb206IGZ1bmN0aW9uKGtleSwgdHJhbnNmb3JtKSB7XG4gICAgICBpZiAodGhpcy5tb3VzZSAmJiBrZXkgIT09IFwibW91c2VcIikgdGhpcy5tb3VzZVsxXSA9IHRyYW5zZm9ybS5pbnZlcnQodGhpcy5tb3VzZVswXSk7XG4gICAgICBpZiAodGhpcy50b3VjaDAgJiYga2V5ICE9PSBcInRvdWNoXCIpIHRoaXMudG91Y2gwWzFdID0gdHJhbnNmb3JtLmludmVydCh0aGlzLnRvdWNoMFswXSk7XG4gICAgICBpZiAodGhpcy50b3VjaDEgJiYga2V5ICE9PSBcInRvdWNoXCIpIHRoaXMudG91Y2gxWzFdID0gdHJhbnNmb3JtLmludmVydCh0aGlzLnRvdWNoMVswXSk7XG4gICAgICB0aGlzLnRoYXQuX196b29tID0gdHJhbnNmb3JtO1xuICAgICAgdGhpcy5lbWl0KFwiem9vbVwiKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgZW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmICgtLXRoaXMuYWN0aXZlID09PSAwKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnRoYXQuX196b29taW5nO1xuICAgICAgICB0aGlzLmVtaXQoXCJlbmRcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIGVtaXQ6IGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgIHZhciBkID0gc2VsZWN0KHRoaXMudGhhdCkuZGF0dW0oKTtcbiAgICAgIGxpc3RlbmVycy5jYWxsKFxuICAgICAgICB0eXBlLFxuICAgICAgICB0aGlzLnRoYXQsXG4gICAgICAgIG5ldyBab29tRXZlbnQodHlwZSwge1xuICAgICAgICAgIHNvdXJjZUV2ZW50OiB0aGlzLnNvdXJjZUV2ZW50LFxuICAgICAgICAgIHRhcmdldDogem9vbSxcbiAgICAgICAgICB0eXBlLFxuICAgICAgICAgIHRyYW5zZm9ybTogdGhpcy50aGF0Ll9fem9vbSxcbiAgICAgICAgICBkaXNwYXRjaDogbGlzdGVuZXJzXG4gICAgICAgIH0pLFxuICAgICAgICBkXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiB3aGVlbGVkKGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmdzKS5ldmVudChldmVudCksXG4gICAgICAgIHQgPSB0aGlzLl9fem9vbSxcbiAgICAgICAgayA9IE1hdGgubWF4KHNjYWxlRXh0ZW50WzBdLCBNYXRoLm1pbihzY2FsZUV4dGVudFsxXSwgdC5rICogTWF0aC5wb3coMiwgd2hlZWxEZWx0YS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSkpLFxuICAgICAgICBwID0gcG9pbnRlcihldmVudCk7XG5cbiAgICAvLyBJZiB0aGUgbW91c2UgaXMgaW4gdGhlIHNhbWUgbG9jYXRpb24gYXMgYmVmb3JlLCByZXVzZSBpdC5cbiAgICAvLyBJZiB0aGVyZSB3ZXJlIHJlY2VudCB3aGVlbCBldmVudHMsIHJlc2V0IHRoZSB3aGVlbCBpZGxlIHRpbWVvdXQuXG4gICAgaWYgKGcud2hlZWwpIHtcbiAgICAgIGlmIChnLm1vdXNlWzBdWzBdICE9PSBwWzBdIHx8IGcubW91c2VbMF1bMV0gIT09IHBbMV0pIHtcbiAgICAgICAgZy5tb3VzZVsxXSA9IHQuaW52ZXJ0KGcubW91c2VbMF0gPSBwKTtcbiAgICAgIH1cbiAgICAgIGNsZWFyVGltZW91dChnLndoZWVsKTtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGlzIHdoZWVsIGV2ZW50IHdvbuKAmXQgdHJpZ2dlciBhIHRyYW5zZm9ybSBjaGFuZ2UsIGlnbm9yZSBpdC5cbiAgICBlbHNlIGlmICh0LmsgPT09IGspIHJldHVybjtcblxuICAgIC8vIE90aGVyd2lzZSwgY2FwdHVyZSB0aGUgbW91c2UgcG9pbnQgYW5kIGxvY2F0aW9uIGF0IHRoZSBzdGFydC5cbiAgICBlbHNlIHtcbiAgICAgIGcubW91c2UgPSBbcCwgdC5pbnZlcnQocCldO1xuICAgICAgaW50ZXJydXB0KHRoaXMpO1xuICAgICAgZy5zdGFydCgpO1xuICAgIH1cblxuICAgIG5vZXZlbnQoZXZlbnQpO1xuICAgIGcud2hlZWwgPSBzZXRUaW1lb3V0KHdoZWVsaWRsZWQsIHdoZWVsRGVsYXkpO1xuICAgIGcuem9vbShcIm1vdXNlXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUoc2NhbGUodCwgayksIGcubW91c2VbMF0sIGcubW91c2VbMV0pLCBnLmV4dGVudCwgdHJhbnNsYXRlRXh0ZW50KSk7XG5cbiAgICBmdW5jdGlvbiB3aGVlbGlkbGVkKCkge1xuICAgICAgZy53aGVlbCA9IG51bGw7XG4gICAgICBnLmVuZCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIG1vdXNlZG93bmVkKGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgaWYgKHRvdWNoZW5kaW5nIHx8ICFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmdzLCB0cnVlKS5ldmVudChldmVudCksXG4gICAgICAgIHYgPSBzZWxlY3QoZXZlbnQudmlldykub24oXCJtb3VzZW1vdmUuem9vbVwiLCBtb3VzZW1vdmVkLCB0cnVlKS5vbihcIm1vdXNldXAuem9vbVwiLCBtb3VzZXVwcGVkLCB0cnVlKSxcbiAgICAgICAgcCA9IHBvaW50ZXIoZXZlbnQsIGN1cnJlbnRUYXJnZXQpLFxuICAgICAgICBjdXJyZW50VGFyZ2V0ID0gZXZlbnQuY3VycmVudFRhcmdldCxcbiAgICAgICAgeDAgPSBldmVudC5jbGllbnRYLFxuICAgICAgICB5MCA9IGV2ZW50LmNsaWVudFk7XG5cbiAgICBkcmFnRGlzYWJsZShldmVudC52aWV3KTtcbiAgICBub3Byb3BhZ2F0aW9uKGV2ZW50KTtcbiAgICBnLm1vdXNlID0gW3AsIHRoaXMuX196b29tLmludmVydChwKV07XG4gICAgaW50ZXJydXB0KHRoaXMpO1xuICAgIGcuc3RhcnQoKTtcblxuICAgIGZ1bmN0aW9uIG1vdXNlbW92ZWQoZXZlbnQpIHtcbiAgICAgIG5vZXZlbnQoZXZlbnQpO1xuICAgICAgaWYgKCFnLm1vdmVkKSB7XG4gICAgICAgIHZhciBkeCA9IGV2ZW50LmNsaWVudFggLSB4MCwgZHkgPSBldmVudC5jbGllbnRZIC0geTA7XG4gICAgICAgIGcubW92ZWQgPSBkeCAqIGR4ICsgZHkgKiBkeSA+IGNsaWNrRGlzdGFuY2UyO1xuICAgICAgfVxuICAgICAgZy5ldmVudChldmVudClcbiAgICAgICAuem9vbShcIm1vdXNlXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUoZy50aGF0Ll9fem9vbSwgZy5tb3VzZVswXSA9IHBvaW50ZXIoZXZlbnQsIGN1cnJlbnRUYXJnZXQpLCBnLm1vdXNlWzFdKSwgZy5leHRlbnQsIHRyYW5zbGF0ZUV4dGVudCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIG1vdXNldXBwZWQoZXZlbnQpIHtcbiAgICAgIHYub24oXCJtb3VzZW1vdmUuem9vbSBtb3VzZXVwLnpvb21cIiwgbnVsbCk7XG4gICAgICBkcmFnRW5hYmxlKGV2ZW50LnZpZXcsIGcubW92ZWQpO1xuICAgICAgbm9ldmVudChldmVudCk7XG4gICAgICBnLmV2ZW50KGV2ZW50KS5lbmQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBkYmxjbGlja2VkKGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciB0MCA9IHRoaXMuX196b29tLFxuICAgICAgICBwMCA9IHBvaW50ZXIoZXZlbnQuY2hhbmdlZFRvdWNoZXMgPyBldmVudC5jaGFuZ2VkVG91Y2hlc1swXSA6IGV2ZW50LCB0aGlzKSxcbiAgICAgICAgcDEgPSB0MC5pbnZlcnQocDApLFxuICAgICAgICBrMSA9IHQwLmsgKiAoZXZlbnQuc2hpZnRLZXkgPyAwLjUgOiAyKSxcbiAgICAgICAgdDEgPSBjb25zdHJhaW4odHJhbnNsYXRlKHNjYWxlKHQwLCBrMSksIHAwLCBwMSksIGV4dGVudC5hcHBseSh0aGlzLCBhcmdzKSwgdHJhbnNsYXRlRXh0ZW50KTtcblxuICAgIG5vZXZlbnQoZXZlbnQpO1xuICAgIGlmIChkdXJhdGlvbiA+IDApIHNlbGVjdCh0aGlzKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oZHVyYXRpb24pLmNhbGwoc2NoZWR1bGUsIHQxLCBwMCwgZXZlbnQpO1xuICAgIGVsc2Ugc2VsZWN0KHRoaXMpLmNhbGwoem9vbS50cmFuc2Zvcm0sIHQxLCBwMCwgZXZlbnQpO1xuICB9XG5cbiAgZnVuY3Rpb24gdG91Y2hzdGFydGVkKGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgaWYgKCFmaWx0ZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgcmV0dXJuO1xuICAgIHZhciB0b3VjaGVzID0gZXZlbnQudG91Y2hlcyxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLFxuICAgICAgICBnID0gZ2VzdHVyZSh0aGlzLCBhcmdzLCBldmVudC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGggPT09IG4pLmV2ZW50KGV2ZW50KSxcbiAgICAgICAgc3RhcnRlZCwgaSwgdCwgcDtcblxuICAgIG5vcHJvcGFnYXRpb24oZXZlbnQpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHQgPSB0b3VjaGVzW2ldLCBwID0gcG9pbnRlcih0LCB0aGlzKTtcbiAgICAgIHAgPSBbcCwgdGhpcy5fX3pvb20uaW52ZXJ0KHApLCB0LmlkZW50aWZpZXJdO1xuICAgICAgaWYgKCFnLnRvdWNoMCkgZy50b3VjaDAgPSBwLCBzdGFydGVkID0gdHJ1ZSwgZy50YXBzID0gMSArICEhdG91Y2hzdGFydGluZztcbiAgICAgIGVsc2UgaWYgKCFnLnRvdWNoMSAmJiBnLnRvdWNoMFsyXSAhPT0gcFsyXSkgZy50b3VjaDEgPSBwLCBnLnRhcHMgPSAwO1xuICAgIH1cblxuICAgIGlmICh0b3VjaHN0YXJ0aW5nKSB0b3VjaHN0YXJ0aW5nID0gY2xlYXJUaW1lb3V0KHRvdWNoc3RhcnRpbmcpO1xuXG4gICAgaWYgKHN0YXJ0ZWQpIHtcbiAgICAgIGlmIChnLnRhcHMgPCAyKSB0b3VjaGZpcnN0ID0gcFswXSwgdG91Y2hzdGFydGluZyA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRvdWNoc3RhcnRpbmcgPSBudWxsOyB9LCB0b3VjaERlbGF5KTtcbiAgICAgIGludGVycnVwdCh0aGlzKTtcbiAgICAgIGcuc3RhcnQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB0b3VjaG1vdmVkKGV2ZW50LCAuLi5hcmdzKSB7XG4gICAgaWYgKCF0aGlzLl9fem9vbWluZykgcmV0dXJuO1xuICAgIHZhciBnID0gZ2VzdHVyZSh0aGlzLCBhcmdzKS5ldmVudChldmVudCksXG4gICAgICAgIHRvdWNoZXMgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyxcbiAgICAgICAgbiA9IHRvdWNoZXMubGVuZ3RoLCBpLCB0LCBwLCBsO1xuXG4gICAgbm9ldmVudChldmVudCk7XG4gICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgdCA9IHRvdWNoZXNbaV0sIHAgPSBwb2ludGVyKHQsIHRoaXMpO1xuICAgICAgaWYgKGcudG91Y2gwICYmIGcudG91Y2gwWzJdID09PSB0LmlkZW50aWZpZXIpIGcudG91Y2gwWzBdID0gcDtcbiAgICAgIGVsc2UgaWYgKGcudG91Y2gxICYmIGcudG91Y2gxWzJdID09PSB0LmlkZW50aWZpZXIpIGcudG91Y2gxWzBdID0gcDtcbiAgICB9XG4gICAgdCA9IGcudGhhdC5fX3pvb207XG4gICAgaWYgKGcudG91Y2gxKSB7XG4gICAgICB2YXIgcDAgPSBnLnRvdWNoMFswXSwgbDAgPSBnLnRvdWNoMFsxXSxcbiAgICAgICAgICBwMSA9IGcudG91Y2gxWzBdLCBsMSA9IGcudG91Y2gxWzFdLFxuICAgICAgICAgIGRwID0gKGRwID0gcDFbMF0gLSBwMFswXSkgKiBkcCArIChkcCA9IHAxWzFdIC0gcDBbMV0pICogZHAsXG4gICAgICAgICAgZGwgPSAoZGwgPSBsMVswXSAtIGwwWzBdKSAqIGRsICsgKGRsID0gbDFbMV0gLSBsMFsxXSkgKiBkbDtcbiAgICAgIHQgPSBzY2FsZSh0LCBNYXRoLnNxcnQoZHAgLyBkbCkpO1xuICAgICAgcCA9IFsocDBbMF0gKyBwMVswXSkgLyAyLCAocDBbMV0gKyBwMVsxXSkgLyAyXTtcbiAgICAgIGwgPSBbKGwwWzBdICsgbDFbMF0pIC8gMiwgKGwwWzFdICsgbDFbMV0pIC8gMl07XG4gICAgfVxuICAgIGVsc2UgaWYgKGcudG91Y2gwKSBwID0gZy50b3VjaDBbMF0sIGwgPSBnLnRvdWNoMFsxXTtcbiAgICBlbHNlIHJldHVybjtcblxuICAgIGcuem9vbShcInRvdWNoXCIsIGNvbnN0cmFpbih0cmFuc2xhdGUodCwgcCwgbCksIGcuZXh0ZW50LCB0cmFuc2xhdGVFeHRlbnQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRvdWNoZW5kZWQoZXZlbnQsIC4uLmFyZ3MpIHtcbiAgICBpZiAoIXRoaXMuX196b29taW5nKSByZXR1cm47XG4gICAgdmFyIGcgPSBnZXN0dXJlKHRoaXMsIGFyZ3MpLmV2ZW50KGV2ZW50KSxcbiAgICAgICAgdG91Y2hlcyA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzLFxuICAgICAgICBuID0gdG91Y2hlcy5sZW5ndGgsIGksIHQ7XG5cbiAgICBub3Byb3BhZ2F0aW9uKGV2ZW50KTtcbiAgICBpZiAodG91Y2hlbmRpbmcpIGNsZWFyVGltZW91dCh0b3VjaGVuZGluZyk7XG4gICAgdG91Y2hlbmRpbmcgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0b3VjaGVuZGluZyA9IG51bGw7IH0sIHRvdWNoRGVsYXkpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgIHQgPSB0b3VjaGVzW2ldO1xuICAgICAgaWYgKGcudG91Y2gwICYmIGcudG91Y2gwWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMDtcbiAgICAgIGVsc2UgaWYgKGcudG91Y2gxICYmIGcudG91Y2gxWzJdID09PSB0LmlkZW50aWZpZXIpIGRlbGV0ZSBnLnRvdWNoMTtcbiAgICB9XG4gICAgaWYgKGcudG91Y2gxICYmICFnLnRvdWNoMCkgZy50b3VjaDAgPSBnLnRvdWNoMSwgZGVsZXRlIGcudG91Y2gxO1xuICAgIGlmIChnLnRvdWNoMCkgZy50b3VjaDBbMV0gPSB0aGlzLl9fem9vbS5pbnZlcnQoZy50b3VjaDBbMF0pO1xuICAgIGVsc2Uge1xuICAgICAgZy5lbmQoKTtcbiAgICAgIC8vIElmIHRoaXMgd2FzIGEgZGJsdGFwLCByZXJvdXRlIHRvIHRoZSAob3B0aW9uYWwpIGRibGNsaWNrLnpvb20gaGFuZGxlci5cbiAgICAgIGlmIChnLnRhcHMgPT09IDIpIHtcbiAgICAgICAgdCA9IHBvaW50ZXIodCwgdGhpcyk7XG4gICAgICAgIGlmIChNYXRoLmh5cG90KHRvdWNoZmlyc3RbMF0gLSB0WzBdLCB0b3VjaGZpcnN0WzFdIC0gdFsxXSkgPCB0YXBEaXN0YW5jZSkge1xuICAgICAgICAgIHZhciBwID0gc2VsZWN0KHRoaXMpLm9uKFwiZGJsY2xpY2suem9vbVwiKTtcbiAgICAgICAgICBpZiAocCkgcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgem9vbS53aGVlbERlbHRhID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHdoZWVsRGVsdGEgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KCtfKSwgem9vbSkgOiB3aGVlbERlbHRhO1xuICB9O1xuXG4gIHpvb20uZmlsdGVyID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZpbHRlciA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogY29uc3RhbnQoISFfKSwgem9vbSkgOiBmaWx0ZXI7XG4gIH07XG5cbiAgem9vbS50b3VjaGFibGUgPSBmdW5jdGlvbihfKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodG91Y2hhYmxlID0gdHlwZW9mIF8gPT09IFwiZnVuY3Rpb25cIiA/IF8gOiBjb25zdGFudCghIV8pLCB6b29tKSA6IHRvdWNoYWJsZTtcbiAgfTtcblxuICB6b29tLmV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChleHRlbnQgPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6IGNvbnN0YW50KFtbK19bMF1bMF0sICtfWzBdWzFdXSwgWytfWzFdWzBdLCArX1sxXVsxXV1dKSwgem9vbSkgOiBleHRlbnQ7XG4gIH07XG5cbiAgem9vbS5zY2FsZUV4dGVudCA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzY2FsZUV4dGVudFswXSA9ICtfWzBdLCBzY2FsZUV4dGVudFsxXSA9ICtfWzFdLCB6b29tKSA6IFtzY2FsZUV4dGVudFswXSwgc2NhbGVFeHRlbnRbMV1dO1xuICB9O1xuXG4gIHpvb20udHJhbnNsYXRlRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRyYW5zbGF0ZUV4dGVudFswXVswXSA9ICtfWzBdWzBdLCB0cmFuc2xhdGVFeHRlbnRbMV1bMF0gPSArX1sxXVswXSwgdHJhbnNsYXRlRXh0ZW50WzBdWzFdID0gK19bMF1bMV0sIHRyYW5zbGF0ZUV4dGVudFsxXVsxXSA9ICtfWzFdWzFdLCB6b29tKSA6IFtbdHJhbnNsYXRlRXh0ZW50WzBdWzBdLCB0cmFuc2xhdGVFeHRlbnRbMF1bMV1dLCBbdHJhbnNsYXRlRXh0ZW50WzFdWzBdLCB0cmFuc2xhdGVFeHRlbnRbMV1bMV1dXTtcbiAgfTtcblxuICB6b29tLmNvbnN0cmFpbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjb25zdHJhaW4gPSBfLCB6b29tKSA6IGNvbnN0cmFpbjtcbiAgfTtcblxuICB6b29tLmR1cmF0aW9uID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGR1cmF0aW9uID0gK18sIHpvb20pIDogZHVyYXRpb247XG4gIH07XG5cbiAgem9vbS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpbnRlcnBvbGF0ZSA9IF8sIHpvb20pIDogaW50ZXJwb2xhdGU7XG4gIH07XG5cbiAgem9vbS5vbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB2YWx1ZSA9IGxpc3RlbmVycy5vbi5hcHBseShsaXN0ZW5lcnMsIGFyZ3VtZW50cyk7XG4gICAgcmV0dXJuIHZhbHVlID09PSBsaXN0ZW5lcnMgPyB6b29tIDogdmFsdWU7XG4gIH07XG5cbiAgem9vbS5jbGlja0Rpc3RhbmNlID0gZnVuY3Rpb24oXykge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNsaWNrRGlzdGFuY2UyID0gKF8gPSArXykgKiBfLCB6b29tKSA6IE1hdGguc3FydChjbGlja0Rpc3RhbmNlMik7XG4gIH07XG5cbiAgem9vbS50YXBEaXN0YW5jZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0YXBEaXN0YW5jZSA9ICtfLCB6b29tKSA6IHRhcERpc3RhbmNlO1xuICB9O1xuXG4gIHJldHVybiB6b29tO1xufVxuIiwiZXhwb3J0IHZhciBuYW1lID0gXCJkM1wiO1xuZXhwb3J0IHZhciB2ZXJzaW9uID0gXCI2LjMuMVwiO1xuZXhwb3J0IHZhciBkZXNjcmlwdGlvbiA9IFwiRGF0YS1Ecml2ZW4gRG9jdW1lbnRzXCI7XG5leHBvcnQgdmFyIGtleXdvcmRzID0gW1wiZG9tXCIsXCJ2aXN1YWxpemF0aW9uXCIsXCJzdmdcIixcImFuaW1hdGlvblwiLFwiY2FudmFzXCJdO1xuZXhwb3J0IHZhciBob21lcGFnZSA9IFwiaHR0cHM6Ly9kM2pzLm9yZ1wiO1xuZXhwb3J0IHZhciBsaWNlbnNlID0gXCJCU0QtMy1DbGF1c2VcIjtcbmV4cG9ydCB2YXIgYXV0aG9yID0ge1wibmFtZVwiOlwiTWlrZSBCb3N0b2NrXCIsXCJ1cmxcIjpcImh0dHBzOi8vYm9zdC5vY2tzLm9yZy9taWtlXCJ9O1xuZXhwb3J0IHZhciBtYWluID0gXCJkaXN0L2QzLm5vZGUuanNcIjtcbmV4cG9ydCB2YXIgdW5wa2cgPSBcImRpc3QvZDMubWluLmpzXCI7XG5leHBvcnQgdmFyIGpzZGVsaXZyID0gXCJkaXN0L2QzLm1pbi5qc1wiO1xuZXhwb3J0IHZhciBtb2R1bGUgPSBcImluZGV4LmpzXCI7XG5leHBvcnQgdmFyIHJlcG9zaXRvcnkgPSB7XCJ0eXBlXCI6XCJnaXRcIixcInVybFwiOlwiaHR0cHM6Ly9naXRodWIuY29tL2QzL2QzLmdpdFwifTtcbmV4cG9ydCB2YXIgZmlsZXMgPSBbXCJkaXN0LyoqLyouanNcIixcImluZGV4LmpzXCJdO1xuZXhwb3J0IHZhciBzY3JpcHRzID0ge1wicHJldGVzdFwiOlwicmltcmFmIGRpc3QgJiYgbWtkaXIgZGlzdCAmJiBqc29uMm1vZHVsZSBwYWNrYWdlLmpzb24gPiBkaXN0L3BhY2thZ2UuanMgJiYgcm9sbHVwIC1jXCIsXCJ0ZXN0XCI6XCJ0YXBlICd0ZXN0LyoqLyotdGVzdC5qcydcIixcInByZXB1Ymxpc2hPbmx5XCI6XCJ5YXJuIHRlc3RcIixcInBvc3RwdWJsaXNoXCI6XCJnaXQgcHVzaCAmJiBnaXQgcHVzaCAtLXRhZ3MgJiYgY2QgLi4vZDMuZ2l0aHViLmNvbSAmJiBnaXQgcHVsbCAmJiBjcCAuLi9kMy9kaXN0L2QzLmpzIGQzLnYke25wbV9wYWNrYWdlX3ZlcnNpb24lJS4qfS5qcyAmJiBjcCAuLi9kMy9kaXN0L2QzLm1pbi5qcyBkMy52JHtucG1fcGFja2FnZV92ZXJzaW9uJSUuKn0ubWluLmpzICYmIGdpdCBhZGQgZDMudiR7bnBtX3BhY2thZ2VfdmVyc2lvbiUlLip9LmpzIGQzLnYke25wbV9wYWNrYWdlX3ZlcnNpb24lJS4qfS5taW4uanMgJiYgZ2l0IGNvbW1pdCAtbSBcXFwiZDMgJHtucG1fcGFja2FnZV92ZXJzaW9ufVxcXCIgJiYgZ2l0IHB1c2ggJiYgY2QgLSAmJiB6aXAgLWogZGlzdC9kMy56aXAgLS0gTElDRU5TRSBSRUFETUUubWQgQVBJLm1kIENIQU5HRVMubWQgZGlzdC9kMy5qcyBkaXN0L2QzLm1pbi5qc1wifTtcbmV4cG9ydCB2YXIgZGV2RGVwZW5kZW5jaWVzID0ge1wianNvbjJtb2R1bGVcIjpcIjAuMFwiLFwicmltcmFmXCI6XCIzXCIsXCJyb2xsdXBcIjpcIjJcIixcInJvbGx1cC1wbHVnaW4tYXNjaWlcIjpcIjAuMFwiLFwicm9sbHVwLXBsdWdpbi1ub2RlLXJlc29sdmVcIjpcIjVcIixcInJvbGx1cC1wbHVnaW4tdGVyc2VyXCI6XCI3XCIsXCJ0YXBlXCI6XCI0XCIsXCJ0YXBlLWF3YWl0XCI6XCIwLjFcIn07XG5leHBvcnQgdmFyIGRlcGVuZGVuY2llcyA9IHtcImQzLWFycmF5XCI6XCIyXCIsXCJkMy1heGlzXCI6XCIyXCIsXCJkMy1icnVzaFwiOlwiMlwiLFwiZDMtY2hvcmRcIjpcIjJcIixcImQzLWNvbG9yXCI6XCIyXCIsXCJkMy1jb250b3VyXCI6XCIyXCIsXCJkMy1kZWxhdW5heVwiOlwiNVwiLFwiZDMtZGlzcGF0Y2hcIjpcIjJcIixcImQzLWRyYWdcIjpcIjJcIixcImQzLWRzdlwiOlwiMlwiLFwiZDMtZWFzZVwiOlwiMlwiLFwiZDMtZmV0Y2hcIjpcIjJcIixcImQzLWZvcmNlXCI6XCIyXCIsXCJkMy1mb3JtYXRcIjpcIjJcIixcImQzLWdlb1wiOlwiMlwiLFwiZDMtaGllcmFyY2h5XCI6XCIyXCIsXCJkMy1pbnRlcnBvbGF0ZVwiOlwiMlwiLFwiZDMtcGF0aFwiOlwiMlwiLFwiZDMtcG9seWdvblwiOlwiMlwiLFwiZDMtcXVhZHRyZWVcIjpcIjJcIixcImQzLXJhbmRvbVwiOlwiMlwiLFwiZDMtc2NhbGVcIjpcIjNcIixcImQzLXNjYWxlLWNocm9tYXRpY1wiOlwiMlwiLFwiZDMtc2VsZWN0aW9uXCI6XCIyXCIsXCJkMy1zaGFwZVwiOlwiMlwiLFwiZDMtdGltZVwiOlwiMlwiLFwiZDMtdGltZS1mb3JtYXRcIjpcIjNcIixcImQzLXRpbWVyXCI6XCIyXCIsXCJkMy10cmFuc2l0aW9uXCI6XCIyXCIsXCJkMy16b29tXCI6XCIyXCJ9O1xuIiwiZXhwb3J0IHt2ZXJzaW9ufSBmcm9tIFwiLi9kaXN0L3BhY2thZ2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1hcnJheVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWF4aXNcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1icnVzaFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWNob3JkXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtY29sb3JcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1jb250b3VyXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZGVsYXVuYXlcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1kaXNwYXRjaFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWRyYWdcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1kc3ZcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1lYXNlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtZmV0Y2hcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1mb3JjZVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWZvcm1hdFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWdlb1wiO1xuZXhwb3J0ICogZnJvbSBcImQzLWhpZXJhcmNoeVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLWludGVycG9sYXRlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtcGF0aFwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXBvbHlnb25cIjtcbmV4cG9ydCAqIGZyb20gXCJkMy1xdWFkdHJlZVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXJhbmRvbVwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXNjYWxlXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2NhbGUtY2hyb21hdGljXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2VsZWN0aW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtc2hhcGVcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy10aW1lXCI7XG5leHBvcnQgKiBmcm9tIFwiZDMtdGltZS1mb3JtYXRcIjtcbmV4cG9ydCAqIGZyb20gXCJkMy10aW1lclwiO1xuZXhwb3J0ICogZnJvbSBcImQzLXRyYW5zaXRpb25cIjtcbmV4cG9ydCAqIGZyb20gXCJkMy16b29tXCI7XG4iLCJcbmNvbnN0IEVQU0lMT04gPSBNYXRoLnBvdygyLCAtNTIpO1xuY29uc3QgRURHRV9TVEFDSyA9IG5ldyBVaW50MzJBcnJheSg1MTIpO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZWxhdW5hdG9yIHtcblxuICAgIHN0YXRpYyBmcm9tKHBvaW50cywgZ2V0WCA9IGRlZmF1bHRHZXRYLCBnZXRZID0gZGVmYXVsdEdldFkpIHtcbiAgICAgICAgY29uc3QgbiA9IHBvaW50cy5sZW5ndGg7XG4gICAgICAgIGNvbnN0IGNvb3JkcyA9IG5ldyBGbG9hdDY0QXJyYXkobiAqIDIpO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBwID0gcG9pbnRzW2ldO1xuICAgICAgICAgICAgY29vcmRzWzIgKiBpXSA9IGdldFgocCk7XG4gICAgICAgICAgICBjb29yZHNbMiAqIGkgKyAxXSA9IGdldFkocCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV3IERlbGF1bmF0b3IoY29vcmRzKTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcihjb29yZHMpIHtcbiAgICAgICAgY29uc3QgbiA9IGNvb3Jkcy5sZW5ndGggPj4gMTtcbiAgICAgICAgaWYgKG4gPiAwICYmIHR5cGVvZiBjb29yZHNbMF0gIT09ICdudW1iZXInKSB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGNvb3JkcyB0byBjb250YWluIG51bWJlcnMuJyk7XG5cbiAgICAgICAgdGhpcy5jb29yZHMgPSBjb29yZHM7XG5cbiAgICAgICAgLy8gYXJyYXlzIHRoYXQgd2lsbCBzdG9yZSB0aGUgdHJpYW5ndWxhdGlvbiBncmFwaFxuICAgICAgICBjb25zdCBtYXhUcmlhbmdsZXMgPSBNYXRoLm1heCgyICogbiAtIDUsIDApO1xuICAgICAgICB0aGlzLl90cmlhbmdsZXMgPSBuZXcgVWludDMyQXJyYXkobWF4VHJpYW5nbGVzICogMyk7XG4gICAgICAgIHRoaXMuX2hhbGZlZGdlcyA9IG5ldyBJbnQzMkFycmF5KG1heFRyaWFuZ2xlcyAqIDMpO1xuXG4gICAgICAgIC8vIHRlbXBvcmFyeSBhcnJheXMgZm9yIHRyYWNraW5nIHRoZSBlZGdlcyBvZiB0aGUgYWR2YW5jaW5nIGNvbnZleCBodWxsXG4gICAgICAgIHRoaXMuX2hhc2hTaXplID0gTWF0aC5jZWlsKE1hdGguc3FydChuKSk7XG4gICAgICAgIHRoaXMuX2h1bGxQcmV2ID0gbmV3IFVpbnQzMkFycmF5KG4pOyAvLyBlZGdlIHRvIHByZXYgZWRnZVxuICAgICAgICB0aGlzLl9odWxsTmV4dCA9IG5ldyBVaW50MzJBcnJheShuKTsgLy8gZWRnZSB0byBuZXh0IGVkZ2VcbiAgICAgICAgdGhpcy5faHVsbFRyaSA9IG5ldyBVaW50MzJBcnJheShuKTsgLy8gZWRnZSB0byBhZGphY2VudCB0cmlhbmdsZVxuICAgICAgICB0aGlzLl9odWxsSGFzaCA9IG5ldyBJbnQzMkFycmF5KHRoaXMuX2hhc2hTaXplKS5maWxsKC0xKTsgLy8gYW5ndWxhciBlZGdlIGhhc2hcblxuICAgICAgICAvLyB0ZW1wb3JhcnkgYXJyYXlzIGZvciBzb3J0aW5nIHBvaW50c1xuICAgICAgICB0aGlzLl9pZHMgPSBuZXcgVWludDMyQXJyYXkobik7XG4gICAgICAgIHRoaXMuX2Rpc3RzID0gbmV3IEZsb2F0NjRBcnJheShuKTtcblxuICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cblxuICAgIHVwZGF0ZSgpIHtcbiAgICAgICAgY29uc3Qge2Nvb3JkcywgX2h1bGxQcmV2OiBodWxsUHJldiwgX2h1bGxOZXh0OiBodWxsTmV4dCwgX2h1bGxUcmk6IGh1bGxUcmksIF9odWxsSGFzaDogaHVsbEhhc2h9ID0gIHRoaXM7XG4gICAgICAgIGNvbnN0IG4gPSBjb29yZHMubGVuZ3RoID4+IDE7XG5cbiAgICAgICAgLy8gcG9wdWxhdGUgYW4gYXJyYXkgb2YgcG9pbnQgaW5kaWNlczsgY2FsY3VsYXRlIGlucHV0IGRhdGEgYmJveFxuICAgICAgICBsZXQgbWluWCA9IEluZmluaXR5O1xuICAgICAgICBsZXQgbWluWSA9IEluZmluaXR5O1xuICAgICAgICBsZXQgbWF4WCA9IC1JbmZpbml0eTtcbiAgICAgICAgbGV0IG1heFkgPSAtSW5maW5pdHk7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHggPSBjb29yZHNbMiAqIGldO1xuICAgICAgICAgICAgY29uc3QgeSA9IGNvb3Jkc1syICogaSArIDFdO1xuICAgICAgICAgICAgaWYgKHggPCBtaW5YKSBtaW5YID0geDtcbiAgICAgICAgICAgIGlmICh5IDwgbWluWSkgbWluWSA9IHk7XG4gICAgICAgICAgICBpZiAoeCA+IG1heFgpIG1heFggPSB4O1xuICAgICAgICAgICAgaWYgKHkgPiBtYXhZKSBtYXhZID0geTtcbiAgICAgICAgICAgIHRoaXMuX2lkc1tpXSA9IGk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3ggPSAobWluWCArIG1heFgpIC8gMjtcbiAgICAgICAgY29uc3QgY3kgPSAobWluWSArIG1heFkpIC8gMjtcblxuICAgICAgICBsZXQgbWluRGlzdCA9IEluZmluaXR5O1xuICAgICAgICBsZXQgaTAsIGkxLCBpMjtcblxuICAgICAgICAvLyBwaWNrIGEgc2VlZCBwb2ludCBjbG9zZSB0byB0aGUgY2VudGVyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBkID0gZGlzdChjeCwgY3ksIGNvb3Jkc1syICogaV0sIGNvb3Jkc1syICogaSArIDFdKTtcbiAgICAgICAgICAgIGlmIChkIDwgbWluRGlzdCkge1xuICAgICAgICAgICAgICAgIGkwID0gaTtcbiAgICAgICAgICAgICAgICBtaW5EaXN0ID0gZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpMHggPSBjb29yZHNbMiAqIGkwXTtcbiAgICAgICAgY29uc3QgaTB5ID0gY29vcmRzWzIgKiBpMCArIDFdO1xuXG4gICAgICAgIG1pbkRpc3QgPSBJbmZpbml0eTtcblxuICAgICAgICAvLyBmaW5kIHRoZSBwb2ludCBjbG9zZXN0IHRvIHRoZSBzZWVkXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaSA9PT0gaTApIGNvbnRpbnVlO1xuICAgICAgICAgICAgY29uc3QgZCA9IGRpc3QoaTB4LCBpMHksIGNvb3Jkc1syICogaV0sIGNvb3Jkc1syICogaSArIDFdKTtcbiAgICAgICAgICAgIGlmIChkIDwgbWluRGlzdCAmJiBkID4gMCkge1xuICAgICAgICAgICAgICAgIGkxID0gaTtcbiAgICAgICAgICAgICAgICBtaW5EaXN0ID0gZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsZXQgaTF4ID0gY29vcmRzWzIgKiBpMV07XG4gICAgICAgIGxldCBpMXkgPSBjb29yZHNbMiAqIGkxICsgMV07XG5cbiAgICAgICAgbGV0IG1pblJhZGl1cyA9IEluZmluaXR5O1xuXG4gICAgICAgIC8vIGZpbmQgdGhlIHRoaXJkIHBvaW50IHdoaWNoIGZvcm1zIHRoZSBzbWFsbGVzdCBjaXJjdW1jaXJjbGUgd2l0aCB0aGUgZmlyc3QgdHdvXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaSA9PT0gaTAgfHwgaSA9PT0gaTEpIGNvbnRpbnVlO1xuICAgICAgICAgICAgY29uc3QgciA9IGNpcmN1bXJhZGl1cyhpMHgsIGkweSwgaTF4LCBpMXksIGNvb3Jkc1syICogaV0sIGNvb3Jkc1syICogaSArIDFdKTtcbiAgICAgICAgICAgIGlmIChyIDwgbWluUmFkaXVzKSB7XG4gICAgICAgICAgICAgICAgaTIgPSBpO1xuICAgICAgICAgICAgICAgIG1pblJhZGl1cyA9IHI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGkyeCA9IGNvb3Jkc1syICogaTJdO1xuICAgICAgICBsZXQgaTJ5ID0gY29vcmRzWzIgKiBpMiArIDFdO1xuXG4gICAgICAgIGlmIChtaW5SYWRpdXMgPT09IEluZmluaXR5KSB7XG4gICAgICAgICAgICAvLyBvcmRlciBjb2xsaW5lYXIgcG9pbnRzIGJ5IGR4IChvciBkeSBpZiBhbGwgeCBhcmUgaWRlbnRpY2FsKVxuICAgICAgICAgICAgLy8gYW5kIHJldHVybiB0aGUgbGlzdCBhcyBhIGh1bGxcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzdHNbaV0gPSAoY29vcmRzWzIgKiBpXSAtIGNvb3Jkc1swXSkgfHwgKGNvb3Jkc1syICogaSArIDFdIC0gY29vcmRzWzFdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHF1aWNrc29ydCh0aGlzLl9pZHMsIHRoaXMuX2Rpc3RzLCAwLCBuIC0gMSk7XG4gICAgICAgICAgICBjb25zdCBodWxsID0gbmV3IFVpbnQzMkFycmF5KG4pO1xuICAgICAgICAgICAgbGV0IGogPSAwO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGQwID0gLUluZmluaXR5OyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSB0aGlzLl9pZHNbaV07XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2Rpc3RzW2lkXSA+IGQwKSB7XG4gICAgICAgICAgICAgICAgICAgIGh1bGxbaisrXSA9IGlkO1xuICAgICAgICAgICAgICAgICAgICBkMCA9IHRoaXMuX2Rpc3RzW2lkXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmh1bGwgPSBodWxsLnN1YmFycmF5KDAsIGopO1xuICAgICAgICAgICAgdGhpcy50cmlhbmdsZXMgPSBuZXcgVWludDMyQXJyYXkoMCk7XG4gICAgICAgICAgICB0aGlzLmhhbGZlZGdlcyA9IG5ldyBVaW50MzJBcnJheSgwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHN3YXAgdGhlIG9yZGVyIG9mIHRoZSBzZWVkIHBvaW50cyBmb3IgY291bnRlci1jbG9ja3dpc2Ugb3JpZW50YXRpb25cbiAgICAgICAgaWYgKG9yaWVudChpMHgsIGkweSwgaTF4LCBpMXksIGkyeCwgaTJ5KSkge1xuICAgICAgICAgICAgY29uc3QgaSA9IGkxO1xuICAgICAgICAgICAgY29uc3QgeCA9IGkxeDtcbiAgICAgICAgICAgIGNvbnN0IHkgPSBpMXk7XG4gICAgICAgICAgICBpMSA9IGkyO1xuICAgICAgICAgICAgaTF4ID0gaTJ4O1xuICAgICAgICAgICAgaTF5ID0gaTJ5O1xuICAgICAgICAgICAgaTIgPSBpO1xuICAgICAgICAgICAgaTJ4ID0geDtcbiAgICAgICAgICAgIGkyeSA9IHk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjZW50ZXIgPSBjaXJjdW1jZW50ZXIoaTB4LCBpMHksIGkxeCwgaTF5LCBpMngsIGkyeSk7XG4gICAgICAgIHRoaXMuX2N4ID0gY2VudGVyLng7XG4gICAgICAgIHRoaXMuX2N5ID0gY2VudGVyLnk7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX2Rpc3RzW2ldID0gZGlzdChjb29yZHNbMiAqIGldLCBjb29yZHNbMiAqIGkgKyAxXSwgY2VudGVyLngsIGNlbnRlci55KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHNvcnQgdGhlIHBvaW50cyBieSBkaXN0YW5jZSBmcm9tIHRoZSBzZWVkIHRyaWFuZ2xlIGNpcmN1bWNlbnRlclxuICAgICAgICBxdWlja3NvcnQodGhpcy5faWRzLCB0aGlzLl9kaXN0cywgMCwgbiAtIDEpO1xuXG4gICAgICAgIC8vIHNldCB1cCB0aGUgc2VlZCB0cmlhbmdsZSBhcyB0aGUgc3RhcnRpbmcgaHVsbFxuICAgICAgICB0aGlzLl9odWxsU3RhcnQgPSBpMDtcbiAgICAgICAgbGV0IGh1bGxTaXplID0gMztcblxuICAgICAgICBodWxsTmV4dFtpMF0gPSBodWxsUHJldltpMl0gPSBpMTtcbiAgICAgICAgaHVsbE5leHRbaTFdID0gaHVsbFByZXZbaTBdID0gaTI7XG4gICAgICAgIGh1bGxOZXh0W2kyXSA9IGh1bGxQcmV2W2kxXSA9IGkwO1xuXG4gICAgICAgIGh1bGxUcmlbaTBdID0gMDtcbiAgICAgICAgaHVsbFRyaVtpMV0gPSAxO1xuICAgICAgICBodWxsVHJpW2kyXSA9IDI7XG5cbiAgICAgICAgaHVsbEhhc2guZmlsbCgtMSk7XG4gICAgICAgIGh1bGxIYXNoW3RoaXMuX2hhc2hLZXkoaTB4LCBpMHkpXSA9IGkwO1xuICAgICAgICBodWxsSGFzaFt0aGlzLl9oYXNoS2V5KGkxeCwgaTF5KV0gPSBpMTtcbiAgICAgICAgaHVsbEhhc2hbdGhpcy5faGFzaEtleShpMngsIGkyeSldID0gaTI7XG5cbiAgICAgICAgdGhpcy50cmlhbmdsZXNMZW4gPSAwO1xuICAgICAgICB0aGlzLl9hZGRUcmlhbmdsZShpMCwgaTEsIGkyLCAtMSwgLTEsIC0xKTtcblxuICAgICAgICBmb3IgKGxldCBrID0gMCwgeHAsIHlwOyBrIDwgdGhpcy5faWRzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICBjb25zdCBpID0gdGhpcy5faWRzW2tdO1xuICAgICAgICAgICAgY29uc3QgeCA9IGNvb3Jkc1syICogaV07XG4gICAgICAgICAgICBjb25zdCB5ID0gY29vcmRzWzIgKiBpICsgMV07XG5cbiAgICAgICAgICAgIC8vIHNraXAgbmVhci1kdXBsaWNhdGUgcG9pbnRzXG4gICAgICAgICAgICBpZiAoayA+IDAgJiYgTWF0aC5hYnMoeCAtIHhwKSA8PSBFUFNJTE9OICYmIE1hdGguYWJzKHkgLSB5cCkgPD0gRVBTSUxPTikgY29udGludWU7XG4gICAgICAgICAgICB4cCA9IHg7XG4gICAgICAgICAgICB5cCA9IHk7XG5cbiAgICAgICAgICAgIC8vIHNraXAgc2VlZCB0cmlhbmdsZSBwb2ludHNcbiAgICAgICAgICAgIGlmIChpID09PSBpMCB8fCBpID09PSBpMSB8fCBpID09PSBpMikgY29udGludWU7XG5cbiAgICAgICAgICAgIC8vIGZpbmQgYSB2aXNpYmxlIGVkZ2Ugb24gdGhlIGNvbnZleCBodWxsIHVzaW5nIGVkZ2UgaGFzaFxuICAgICAgICAgICAgbGV0IHN0YXJ0ID0gMDtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwLCBrZXkgPSB0aGlzLl9oYXNoS2V5KHgsIHkpOyBqIDwgdGhpcy5faGFzaFNpemU7IGorKykge1xuICAgICAgICAgICAgICAgIHN0YXJ0ID0gaHVsbEhhc2hbKGtleSArIGopICUgdGhpcy5faGFzaFNpemVdO1xuICAgICAgICAgICAgICAgIGlmIChzdGFydCAhPT0gLTEgJiYgc3RhcnQgIT09IGh1bGxOZXh0W3N0YXJ0XSkgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN0YXJ0ID0gaHVsbFByZXZbc3RhcnRdO1xuICAgICAgICAgICAgbGV0IGUgPSBzdGFydCwgcTtcbiAgICAgICAgICAgIHdoaWxlIChxID0gaHVsbE5leHRbZV0sICFvcmllbnQoeCwgeSwgY29vcmRzWzIgKiBlXSwgY29vcmRzWzIgKiBlICsgMV0sIGNvb3Jkc1syICogcV0sIGNvb3Jkc1syICogcSArIDFdKSkge1xuICAgICAgICAgICAgICAgIGUgPSBxO1xuICAgICAgICAgICAgICAgIGlmIChlID09PSBzdGFydCkge1xuICAgICAgICAgICAgICAgICAgICBlID0gLTE7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlID09PSAtMSkgY29udGludWU7IC8vIGxpa2VseSBhIG5lYXItZHVwbGljYXRlIHBvaW50OyBza2lwIGl0XG5cbiAgICAgICAgICAgIC8vIGFkZCB0aGUgZmlyc3QgdHJpYW5nbGUgZnJvbSB0aGUgcG9pbnRcbiAgICAgICAgICAgIGxldCB0ID0gdGhpcy5fYWRkVHJpYW5nbGUoZSwgaSwgaHVsbE5leHRbZV0sIC0xLCAtMSwgaHVsbFRyaVtlXSk7XG5cbiAgICAgICAgICAgIC8vIHJlY3Vyc2l2ZWx5IGZsaXAgdHJpYW5nbGVzIGZyb20gdGhlIHBvaW50IHVudGlsIHRoZXkgc2F0aXNmeSB0aGUgRGVsYXVuYXkgY29uZGl0aW9uXG4gICAgICAgICAgICBodWxsVHJpW2ldID0gdGhpcy5fbGVnYWxpemUodCArIDIpO1xuICAgICAgICAgICAgaHVsbFRyaVtlXSA9IHQ7IC8vIGtlZXAgdHJhY2sgb2YgYm91bmRhcnkgdHJpYW5nbGVzIG9uIHRoZSBodWxsXG4gICAgICAgICAgICBodWxsU2l6ZSsrO1xuXG4gICAgICAgICAgICAvLyB3YWxrIGZvcndhcmQgdGhyb3VnaCB0aGUgaHVsbCwgYWRkaW5nIG1vcmUgdHJpYW5nbGVzIGFuZCBmbGlwcGluZyByZWN1cnNpdmVseVxuICAgICAgICAgICAgbGV0IG4gPSBodWxsTmV4dFtlXTtcbiAgICAgICAgICAgIHdoaWxlIChxID0gaHVsbE5leHRbbl0sIG9yaWVudCh4LCB5LCBjb29yZHNbMiAqIG5dLCBjb29yZHNbMiAqIG4gKyAxXSwgY29vcmRzWzIgKiBxXSwgY29vcmRzWzIgKiBxICsgMV0pKSB7XG4gICAgICAgICAgICAgICAgdCA9IHRoaXMuX2FkZFRyaWFuZ2xlKG4sIGksIHEsIGh1bGxUcmlbaV0sIC0xLCBodWxsVHJpW25dKTtcbiAgICAgICAgICAgICAgICBodWxsVHJpW2ldID0gdGhpcy5fbGVnYWxpemUodCArIDIpO1xuICAgICAgICAgICAgICAgIGh1bGxOZXh0W25dID0gbjsgLy8gbWFyayBhcyByZW1vdmVkXG4gICAgICAgICAgICAgICAgaHVsbFNpemUtLTtcbiAgICAgICAgICAgICAgICBuID0gcTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gd2FsayBiYWNrd2FyZCBmcm9tIHRoZSBvdGhlciBzaWRlLCBhZGRpbmcgbW9yZSB0cmlhbmdsZXMgYW5kIGZsaXBwaW5nXG4gICAgICAgICAgICBpZiAoZSA9PT0gc3RhcnQpIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAocSA9IGh1bGxQcmV2W2VdLCBvcmllbnQoeCwgeSwgY29vcmRzWzIgKiBxXSwgY29vcmRzWzIgKiBxICsgMV0sIGNvb3Jkc1syICogZV0sIGNvb3Jkc1syICogZSArIDFdKSkge1xuICAgICAgICAgICAgICAgICAgICB0ID0gdGhpcy5fYWRkVHJpYW5nbGUocSwgaSwgZSwgLTEsIGh1bGxUcmlbZV0sIGh1bGxUcmlbcV0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9sZWdhbGl6ZSh0ICsgMik7XG4gICAgICAgICAgICAgICAgICAgIGh1bGxUcmlbcV0gPSB0O1xuICAgICAgICAgICAgICAgICAgICBodWxsTmV4dFtlXSA9IGU7IC8vIG1hcmsgYXMgcmVtb3ZlZFxuICAgICAgICAgICAgICAgICAgICBodWxsU2l6ZS0tO1xuICAgICAgICAgICAgICAgICAgICBlID0gcTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIHVwZGF0ZSB0aGUgaHVsbCBpbmRpY2VzXG4gICAgICAgICAgICB0aGlzLl9odWxsU3RhcnQgPSBodWxsUHJldltpXSA9IGU7XG4gICAgICAgICAgICBodWxsTmV4dFtlXSA9IGh1bGxQcmV2W25dID0gaTtcbiAgICAgICAgICAgIGh1bGxOZXh0W2ldID0gbjtcblxuICAgICAgICAgICAgLy8gc2F2ZSB0aGUgdHdvIG5ldyBlZGdlcyBpbiB0aGUgaGFzaCB0YWJsZVxuICAgICAgICAgICAgaHVsbEhhc2hbdGhpcy5faGFzaEtleSh4LCB5KV0gPSBpO1xuICAgICAgICAgICAgaHVsbEhhc2hbdGhpcy5faGFzaEtleShjb29yZHNbMiAqIGVdLCBjb29yZHNbMiAqIGUgKyAxXSldID0gZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaHVsbCA9IG5ldyBVaW50MzJBcnJheShodWxsU2l6ZSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBlID0gdGhpcy5faHVsbFN0YXJ0OyBpIDwgaHVsbFNpemU7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5odWxsW2ldID0gZTtcbiAgICAgICAgICAgIGUgPSBodWxsTmV4dFtlXTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHRyaW0gdHlwZWQgdHJpYW5nbGUgbWVzaCBhcnJheXNcbiAgICAgICAgdGhpcy50cmlhbmdsZXMgPSB0aGlzLl90cmlhbmdsZXMuc3ViYXJyYXkoMCwgdGhpcy50cmlhbmdsZXNMZW4pO1xuICAgICAgICB0aGlzLmhhbGZlZGdlcyA9IHRoaXMuX2hhbGZlZGdlcy5zdWJhcnJheSgwLCB0aGlzLnRyaWFuZ2xlc0xlbik7XG4gICAgfVxuXG4gICAgX2hhc2hLZXkoeCwgeSkge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihwc2V1ZG9BbmdsZSh4IC0gdGhpcy5fY3gsIHkgLSB0aGlzLl9jeSkgKiB0aGlzLl9oYXNoU2l6ZSkgJSB0aGlzLl9oYXNoU2l6ZTtcbiAgICB9XG5cbiAgICBfbGVnYWxpemUoYSkge1xuICAgICAgICBjb25zdCB7X3RyaWFuZ2xlczogdHJpYW5nbGVzLCBfaGFsZmVkZ2VzOiBoYWxmZWRnZXMsIGNvb3Jkc30gPSB0aGlzO1xuXG4gICAgICAgIGxldCBpID0gMDtcbiAgICAgICAgbGV0IGFyID0gMDtcblxuICAgICAgICAvLyByZWN1cnNpb24gZWxpbWluYXRlZCB3aXRoIGEgZml4ZWQtc2l6ZSBzdGFja1xuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgY29uc3QgYiA9IGhhbGZlZGdlc1thXTtcblxuICAgICAgICAgICAgLyogaWYgdGhlIHBhaXIgb2YgdHJpYW5nbGVzIGRvZXNuJ3Qgc2F0aXNmeSB0aGUgRGVsYXVuYXkgY29uZGl0aW9uXG4gICAgICAgICAgICAgKiAocDEgaXMgaW5zaWRlIHRoZSBjaXJjdW1jaXJjbGUgb2YgW3AwLCBwbCwgcHJdKSwgZmxpcCB0aGVtLFxuICAgICAgICAgICAgICogdGhlbiBkbyB0aGUgc2FtZSBjaGVjay9mbGlwIHJlY3Vyc2l2ZWx5IGZvciB0aGUgbmV3IHBhaXIgb2YgdHJpYW5nbGVzXG4gICAgICAgICAgICAgKlxuICAgICAgICAgICAgICogICAgICAgICAgIHBsICAgICAgICAgICAgICAgICAgICBwbFxuICAgICAgICAgICAgICogICAgICAgICAgL3x8XFwgICAgICAgICAgICAgICAgICAvICBcXFxuICAgICAgICAgICAgICogICAgICAgYWwvIHx8IFxcYmwgICAgICAgICAgICBhbC8gICAgXFxhXG4gICAgICAgICAgICAgKiAgICAgICAgLyAgfHwgIFxcICAgICAgICAgICAgICAvICAgICAgXFxcbiAgICAgICAgICAgICAqICAgICAgIC8gIGF8fGIgIFxcICAgIGZsaXAgICAgL19fX2FyX19fXFxcbiAgICAgICAgICAgICAqICAgICBwMFxcICAgfHwgICAvcDEgICA9PiAgIHAwXFwtLS1ibC0tLS9wMVxuICAgICAgICAgICAgICogICAgICAgIFxcICB8fCAgLyAgICAgICAgICAgICAgXFwgICAgICAvXG4gICAgICAgICAgICAgKiAgICAgICBhclxcIHx8IC9iciAgICAgICAgICAgICBiXFwgICAgL2JyXG4gICAgICAgICAgICAgKiAgICAgICAgICBcXHx8LyAgICAgICAgICAgICAgICAgIFxcICAvXG4gICAgICAgICAgICAgKiAgICAgICAgICAgcHIgICAgICAgICAgICAgICAgICAgIHByXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGNvbnN0IGEwID0gYSAtIGEgJSAzO1xuICAgICAgICAgICAgYXIgPSBhMCArIChhICsgMikgJSAzO1xuXG4gICAgICAgICAgICBpZiAoYiA9PT0gLTEpIHsgLy8gY29udmV4IGh1bGwgZWRnZVxuICAgICAgICAgICAgICAgIGlmIChpID09PSAwKSBicmVhaztcbiAgICAgICAgICAgICAgICBhID0gRURHRV9TVEFDS1stLWldO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBiMCA9IGIgLSBiICUgMztcbiAgICAgICAgICAgIGNvbnN0IGFsID0gYTAgKyAoYSArIDEpICUgMztcbiAgICAgICAgICAgIGNvbnN0IGJsID0gYjAgKyAoYiArIDIpICUgMztcblxuICAgICAgICAgICAgY29uc3QgcDAgPSB0cmlhbmdsZXNbYXJdO1xuICAgICAgICAgICAgY29uc3QgcHIgPSB0cmlhbmdsZXNbYV07XG4gICAgICAgICAgICBjb25zdCBwbCA9IHRyaWFuZ2xlc1thbF07XG4gICAgICAgICAgICBjb25zdCBwMSA9IHRyaWFuZ2xlc1tibF07XG5cbiAgICAgICAgICAgIGNvbnN0IGlsbGVnYWwgPSBpbkNpcmNsZShcbiAgICAgICAgICAgICAgICBjb29yZHNbMiAqIHAwXSwgY29vcmRzWzIgKiBwMCArIDFdLFxuICAgICAgICAgICAgICAgIGNvb3Jkc1syICogcHJdLCBjb29yZHNbMiAqIHByICsgMV0sXG4gICAgICAgICAgICAgICAgY29vcmRzWzIgKiBwbF0sIGNvb3Jkc1syICogcGwgKyAxXSxcbiAgICAgICAgICAgICAgICBjb29yZHNbMiAqIHAxXSwgY29vcmRzWzIgKiBwMSArIDFdKTtcblxuICAgICAgICAgICAgaWYgKGlsbGVnYWwpIHtcbiAgICAgICAgICAgICAgICB0cmlhbmdsZXNbYV0gPSBwMTtcbiAgICAgICAgICAgICAgICB0cmlhbmdsZXNbYl0gPSBwMDtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGhibCA9IGhhbGZlZGdlc1tibF07XG5cbiAgICAgICAgICAgICAgICAvLyBlZGdlIHN3YXBwZWQgb24gdGhlIG90aGVyIHNpZGUgb2YgdGhlIGh1bGwgKHJhcmUpOyBmaXggdGhlIGhhbGZlZGdlIHJlZmVyZW5jZVxuICAgICAgICAgICAgICAgIGlmIChoYmwgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBlID0gdGhpcy5faHVsbFN0YXJ0O1xuICAgICAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5faHVsbFRyaVtlXSA9PT0gYmwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9odWxsVHJpW2VdID0gYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGUgPSB0aGlzLl9odWxsUHJldltlXTtcbiAgICAgICAgICAgICAgICAgICAgfSB3aGlsZSAoZSAhPT0gdGhpcy5faHVsbFN0YXJ0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5fbGluayhhLCBoYmwpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2xpbmsoYiwgaGFsZmVkZ2VzW2FyXSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbGluayhhciwgYmwpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgYnIgPSBiMCArIChiICsgMSkgJSAzO1xuXG4gICAgICAgICAgICAgICAgLy8gZG9uJ3Qgd29ycnkgYWJvdXQgaGl0dGluZyB0aGUgY2FwOiBpdCBjYW4gb25seSBoYXBwZW4gb24gZXh0cmVtZWx5IGRlZ2VuZXJhdGUgaW5wdXRcbiAgICAgICAgICAgICAgICBpZiAoaSA8IEVER0VfU1RBQ0subGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIEVER0VfU1RBQ0tbaSsrXSA9IGJyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKGkgPT09IDApIGJyZWFrO1xuICAgICAgICAgICAgICAgIGEgPSBFREdFX1NUQUNLWy0taV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYXI7XG4gICAgfVxuXG4gICAgX2xpbmsoYSwgYikge1xuICAgICAgICB0aGlzLl9oYWxmZWRnZXNbYV0gPSBiO1xuICAgICAgICBpZiAoYiAhPT0gLTEpIHRoaXMuX2hhbGZlZGdlc1tiXSA9IGE7XG4gICAgfVxuXG4gICAgLy8gYWRkIGEgbmV3IHRyaWFuZ2xlIGdpdmVuIHZlcnRleCBpbmRpY2VzIGFuZCBhZGphY2VudCBoYWxmLWVkZ2UgaWRzXG4gICAgX2FkZFRyaWFuZ2xlKGkwLCBpMSwgaTIsIGEsIGIsIGMpIHtcbiAgICAgICAgY29uc3QgdCA9IHRoaXMudHJpYW5nbGVzTGVuO1xuXG4gICAgICAgIHRoaXMuX3RyaWFuZ2xlc1t0XSA9IGkwO1xuICAgICAgICB0aGlzLl90cmlhbmdsZXNbdCArIDFdID0gaTE7XG4gICAgICAgIHRoaXMuX3RyaWFuZ2xlc1t0ICsgMl0gPSBpMjtcblxuICAgICAgICB0aGlzLl9saW5rKHQsIGEpO1xuICAgICAgICB0aGlzLl9saW5rKHQgKyAxLCBiKTtcbiAgICAgICAgdGhpcy5fbGluayh0ICsgMiwgYyk7XG5cbiAgICAgICAgdGhpcy50cmlhbmdsZXNMZW4gKz0gMztcblxuICAgICAgICByZXR1cm4gdDtcbiAgICB9XG59XG5cbi8vIG1vbm90b25pY2FsbHkgaW5jcmVhc2VzIHdpdGggcmVhbCBhbmdsZSwgYnV0IGRvZXNuJ3QgbmVlZCBleHBlbnNpdmUgdHJpZ29ub21ldHJ5XG5mdW5jdGlvbiBwc2V1ZG9BbmdsZShkeCwgZHkpIHtcbiAgICBjb25zdCBwID0gZHggLyAoTWF0aC5hYnMoZHgpICsgTWF0aC5hYnMoZHkpKTtcbiAgICByZXR1cm4gKGR5ID4gMCA/IDMgLSBwIDogMSArIHApIC8gNDsgLy8gWzAuLjFdXG59XG5cbmZ1bmN0aW9uIGRpc3QoYXgsIGF5LCBieCwgYnkpIHtcbiAgICBjb25zdCBkeCA9IGF4IC0gYng7XG4gICAgY29uc3QgZHkgPSBheSAtIGJ5O1xuICAgIHJldHVybiBkeCAqIGR4ICsgZHkgKiBkeTtcbn1cblxuLy8gcmV0dXJuIDJkIG9yaWVudGF0aW9uIHNpZ24gaWYgd2UncmUgY29uZmlkZW50IGluIGl0IHRocm91Z2ggSi4gU2hld2NodWsncyBlcnJvciBib3VuZCBjaGVja1xuZnVuY3Rpb24gb3JpZW50SWZTdXJlKHB4LCBweSwgcngsIHJ5LCBxeCwgcXkpIHtcbiAgICBjb25zdCBsID0gKHJ5IC0gcHkpICogKHF4IC0gcHgpO1xuICAgIGNvbnN0IHIgPSAocnggLSBweCkgKiAocXkgLSBweSk7XG4gICAgcmV0dXJuIE1hdGguYWJzKGwgLSByKSA+PSAzLjMzMDY2OTA3Mzg3NTQ3MTZlLTE2ICogTWF0aC5hYnMobCArIHIpID8gbCAtIHIgOiAwO1xufVxuXG4vLyBhIG1vcmUgcm9idXN0IG9yaWVudGF0aW9uIHRlc3QgdGhhdCdzIHN0YWJsZSBpbiBhIGdpdmVuIHRyaWFuZ2xlICh0byBmaXggcm9idXN0bmVzcyBpc3N1ZXMpXG5mdW5jdGlvbiBvcmllbnQocngsIHJ5LCBxeCwgcXksIHB4LCBweSkge1xuICAgIGNvbnN0IHNpZ24gPSBvcmllbnRJZlN1cmUocHgsIHB5LCByeCwgcnksIHF4LCBxeSkgfHxcbiAgICBvcmllbnRJZlN1cmUocngsIHJ5LCBxeCwgcXksIHB4LCBweSkgfHxcbiAgICBvcmllbnRJZlN1cmUocXgsIHF5LCBweCwgcHksIHJ4LCByeSk7XG4gICAgcmV0dXJuIHNpZ24gPCAwO1xufVxuXG5mdW5jdGlvbiBpbkNpcmNsZShheCwgYXksIGJ4LCBieSwgY3gsIGN5LCBweCwgcHkpIHtcbiAgICBjb25zdCBkeCA9IGF4IC0gcHg7XG4gICAgY29uc3QgZHkgPSBheSAtIHB5O1xuICAgIGNvbnN0IGV4ID0gYnggLSBweDtcbiAgICBjb25zdCBleSA9IGJ5IC0gcHk7XG4gICAgY29uc3QgZnggPSBjeCAtIHB4O1xuICAgIGNvbnN0IGZ5ID0gY3kgLSBweTtcblxuICAgIGNvbnN0IGFwID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgY29uc3QgYnAgPSBleCAqIGV4ICsgZXkgKiBleTtcbiAgICBjb25zdCBjcCA9IGZ4ICogZnggKyBmeSAqIGZ5O1xuXG4gICAgcmV0dXJuIGR4ICogKGV5ICogY3AgLSBicCAqIGZ5KSAtXG4gICAgICAgICAgIGR5ICogKGV4ICogY3AgLSBicCAqIGZ4KSArXG4gICAgICAgICAgIGFwICogKGV4ICogZnkgLSBleSAqIGZ4KSA8IDA7XG59XG5cbmZ1bmN0aW9uIGNpcmN1bXJhZGl1cyhheCwgYXksIGJ4LCBieSwgY3gsIGN5KSB7XG4gICAgY29uc3QgZHggPSBieCAtIGF4O1xuICAgIGNvbnN0IGR5ID0gYnkgLSBheTtcbiAgICBjb25zdCBleCA9IGN4IC0gYXg7XG4gICAgY29uc3QgZXkgPSBjeSAtIGF5O1xuXG4gICAgY29uc3QgYmwgPSBkeCAqIGR4ICsgZHkgKiBkeTtcbiAgICBjb25zdCBjbCA9IGV4ICogZXggKyBleSAqIGV5O1xuICAgIGNvbnN0IGQgPSAwLjUgLyAoZHggKiBleSAtIGR5ICogZXgpO1xuXG4gICAgY29uc3QgeCA9IChleSAqIGJsIC0gZHkgKiBjbCkgKiBkO1xuICAgIGNvbnN0IHkgPSAoZHggKiBjbCAtIGV4ICogYmwpICogZDtcblxuICAgIHJldHVybiB4ICogeCArIHkgKiB5O1xufVxuXG5mdW5jdGlvbiBjaXJjdW1jZW50ZXIoYXgsIGF5LCBieCwgYnksIGN4LCBjeSkge1xuICAgIGNvbnN0IGR4ID0gYnggLSBheDtcbiAgICBjb25zdCBkeSA9IGJ5IC0gYXk7XG4gICAgY29uc3QgZXggPSBjeCAtIGF4O1xuICAgIGNvbnN0IGV5ID0gY3kgLSBheTtcblxuICAgIGNvbnN0IGJsID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgY29uc3QgY2wgPSBleCAqIGV4ICsgZXkgKiBleTtcbiAgICBjb25zdCBkID0gMC41IC8gKGR4ICogZXkgLSBkeSAqIGV4KTtcblxuICAgIGNvbnN0IHggPSBheCArIChleSAqIGJsIC0gZHkgKiBjbCkgKiBkO1xuICAgIGNvbnN0IHkgPSBheSArIChkeCAqIGNsIC0gZXggKiBibCkgKiBkO1xuXG4gICAgcmV0dXJuIHt4LCB5fTtcbn1cblxuZnVuY3Rpb24gcXVpY2tzb3J0KGlkcywgZGlzdHMsIGxlZnQsIHJpZ2h0KSB7XG4gICAgaWYgKHJpZ2h0IC0gbGVmdCA8PSAyMCkge1xuICAgICAgICBmb3IgKGxldCBpID0gbGVmdCArIDE7IGkgPD0gcmlnaHQ7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgdGVtcCA9IGlkc1tpXTtcbiAgICAgICAgICAgIGNvbnN0IHRlbXBEaXN0ID0gZGlzdHNbdGVtcF07XG4gICAgICAgICAgICBsZXQgaiA9IGkgLSAxO1xuICAgICAgICAgICAgd2hpbGUgKGogPj0gbGVmdCAmJiBkaXN0c1tpZHNbal1dID4gdGVtcERpc3QpIGlkc1tqICsgMV0gPSBpZHNbai0tXTtcbiAgICAgICAgICAgIGlkc1tqICsgMV0gPSB0ZW1wO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbWVkaWFuID0gKGxlZnQgKyByaWdodCkgPj4gMTtcbiAgICAgICAgbGV0IGkgPSBsZWZ0ICsgMTtcbiAgICAgICAgbGV0IGogPSByaWdodDtcbiAgICAgICAgc3dhcChpZHMsIG1lZGlhbiwgaSk7XG4gICAgICAgIGlmIChkaXN0c1tpZHNbbGVmdF1dID4gZGlzdHNbaWRzW3JpZ2h0XV0pIHN3YXAoaWRzLCBsZWZ0LCByaWdodCk7XG4gICAgICAgIGlmIChkaXN0c1tpZHNbaV1dID4gZGlzdHNbaWRzW3JpZ2h0XV0pIHN3YXAoaWRzLCBpLCByaWdodCk7XG4gICAgICAgIGlmIChkaXN0c1tpZHNbbGVmdF1dID4gZGlzdHNbaWRzW2ldXSkgc3dhcChpZHMsIGxlZnQsIGkpO1xuXG4gICAgICAgIGNvbnN0IHRlbXAgPSBpZHNbaV07XG4gICAgICAgIGNvbnN0IHRlbXBEaXN0ID0gZGlzdHNbdGVtcF07XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBkbyBpKys7IHdoaWxlIChkaXN0c1tpZHNbaV1dIDwgdGVtcERpc3QpO1xuICAgICAgICAgICAgZG8gai0tOyB3aGlsZSAoZGlzdHNbaWRzW2pdXSA+IHRlbXBEaXN0KTtcbiAgICAgICAgICAgIGlmIChqIDwgaSkgYnJlYWs7XG4gICAgICAgICAgICBzd2FwKGlkcywgaSwgaik7XG4gICAgICAgIH1cbiAgICAgICAgaWRzW2xlZnQgKyAxXSA9IGlkc1tqXTtcbiAgICAgICAgaWRzW2pdID0gdGVtcDtcblxuICAgICAgICBpZiAocmlnaHQgLSBpICsgMSA+PSBqIC0gbGVmdCkge1xuICAgICAgICAgICAgcXVpY2tzb3J0KGlkcywgZGlzdHMsIGksIHJpZ2h0KTtcbiAgICAgICAgICAgIHF1aWNrc29ydChpZHMsIGRpc3RzLCBsZWZ0LCBqIC0gMSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBxdWlja3NvcnQoaWRzLCBkaXN0cywgbGVmdCwgaiAtIDEpO1xuICAgICAgICAgICAgcXVpY2tzb3J0KGlkcywgZGlzdHMsIGksIHJpZ2h0KTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc3dhcChhcnIsIGksIGopIHtcbiAgICBjb25zdCB0bXAgPSBhcnJbaV07XG4gICAgYXJyW2ldID0gYXJyW2pdO1xuICAgIGFycltqXSA9IHRtcDtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdEdldFgocCkge1xuICAgIHJldHVybiBwWzBdO1xufVxuZnVuY3Rpb24gZGVmYXVsdEdldFkocCkge1xuICAgIHJldHVybiBwWzFdO1xufVxuIiwiLyoqXHJcbiAqIGxpbmVhciBpbnRlcnBvbGF0aW9uIGZyb20gc291cmNlIHBvc2l0aW9ucyB0byB0YXJnZXQgcG9zaXRpb25zXHJcbiAqIEBwYXJhbSBzb3VyY2Ugc291cmNlIHBvc2l0aW9uc1xyXG4gKiBAcGFyYW0gdGFyZ2V0IHRhcmdldCBwb3NpdGlvbnNcclxuICogQHBhcmFtIHJhdGlvIGxlcnAgcmF0aW8sICgwLCAxKVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGxlcnBQb3NpdGlvbihzb3VyY2UsIHRhcmdldCwgcmF0aW8pIHtcclxuICAgIHJldHVybiBBcnJheShzb3VyY2UubGVuZ3RoKVxyXG4gICAgICAgIC5maWxsKHVuZGVmaW5lZClcclxuICAgICAgICAubWFwKChfLCBpKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHggPSBzb3VyY2VbaV0ueCArICh0YXJnZXRbaV0ueCAtIHNvdXJjZVtpXS54KSAqIHJhdGlvXHJcbiAgICAgICAgICAgIGNvbnN0IHkgPSBzb3VyY2VbaV0ueSArICh0YXJnZXRbaV0ueSAtIHNvdXJjZVtpXS55KSAqIHJhdGlvXHJcbiAgICAgICAgICAgIHJldHVybiB7IHgsIHkgfVxyXG4gICAgICAgIH0pXHJcbn0iLCJcclxuLy8gV2UgYXJlIG1vZHVsYXJpemluZyB0aGlzIG1hbnVhbGx5IGJlY2F1c2UgdGhlIGN1cnJlbnQgbW9kdWxhcml6ZSBzZXR0aW5nIGluIEVtc2NyaXB0ZW4gaGFzIHNvbWUgaXNzdWVzOlxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20va3JpcGtlbi9lbXNjcmlwdGVuL2lzc3Vlcy81ODIwXHJcbi8vIEluIGFkZGl0aW9uLCBXaGVuIHlvdSB1c2UgZW1jYydzIG1vZHVsYXJpemF0aW9uLCBpdCBzdGlsbCBleHBlY3RzIHRvIGV4cG9ydCBhIGdsb2JhbCBvYmplY3QgY2FsbGVkIGBNb2R1bGVgLFxyXG4vLyB3aGljaCBpcyBhYmxlIHRvIGJlIHVzZWQvY2FsbGVkIGJlZm9yZSB0aGUgV0FTTSBpcyBsb2FkZWQuXHJcbi8vIFRoZSBtb2R1bGFyaXphdGlvbiBiZWxvdyBleHBvcnRzIGEgcHJvbWlzZSB0aGF0IGxvYWRzIGFuZCByZXNvbHZlcyB0byB0aGUgYWN0dWFsIHNxbC5qcyBtb2R1bGUuXHJcbi8vIFRoYXQgd2F5LCB0aGlzIG1vZHVsZSBjYW4ndCBiZSB1c2VkIGJlZm9yZSB0aGUgV0FTTSBpcyBmaW5pc2hlZCBsb2FkaW5nLlxyXG5cclxuLy8gV2UgYXJlIGdvaW5nIHRvIGRlZmluZSBhIGZ1bmN0aW9uIHRoYXQgYSB1c2VyIHdpbGwgY2FsbCB0byBzdGFydCBsb2FkaW5nIGluaXRpYWxpemluZyBvdXIgU3FsLmpzIGxpYnJhcnlcclxuLy8gSG93ZXZlciwgdGhhdCBmdW5jdGlvbiBtaWdodCBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXMsIGFuZCBvbiBzdWJzZXF1ZW50IGNhbGxzLCB3ZSBkb24ndCBhY3R1YWxseSB3YW50IGl0IHRvIGluc3RhbnRpYXRlIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBNb2R1bGVcclxuLy8gSW5zdGVhZCwgd2Ugd2FudCB0byByZXR1cm4gdGhlIHByZXZpb3VzbHkgbG9hZGVkIG1vZHVsZVxyXG5cclxuLy8gVE9ETzogTWFrZSB0aGlzIG5vdCBkZWNsYXJlIGEgZ2xvYmFsIGlmIHVzZWQgaW4gdGhlIGJyb3dzZXJcclxudmFyIGluaXRPR0RGUHJvbWlzZSA9IHVuZGVmaW5lZDtcclxuXHJcbnZhciBpbml0T0dERiA9IGZ1bmN0aW9uIChtb2R1bGVDb25maWcpIHtcclxuXHJcbiAgICBpZiAoaW5pdE9HREZQcm9taXNlKXtcclxuICAgICAgcmV0dXJuIGluaXRPR0RGUHJvbWlzZTtcclxuICAgIH1cclxuICAgIC8vIElmIHdlJ3JlIGhlcmUsIHdlJ3ZlIG5ldmVyIGNhbGxlZCB0aGlzIGZ1bmN0aW9uIGJlZm9yZVxyXG4gICAgaW5pdE9HREZQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmVNb2R1bGUsIHJlamVjdCkgPT4ge1xyXG5cclxuICAgICAgICAvLyBXZSBhcmUgbW9kdWxhcml6aW5nIHRoaXMgbWFudWFsbHkgYmVjYXVzZSB0aGUgY3VycmVudCBtb2R1bGFyaXplIHNldHRpbmcgaW4gRW1zY3JpcHRlbiBoYXMgc29tZSBpc3N1ZXM6XHJcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2tyaXBrZW4vZW1zY3JpcHRlbi9pc3N1ZXMvNTgyMFxyXG5cclxuICAgICAgICAvLyBUaGUgd2F5IHRvIGFmZmVjdCB0aGUgbG9hZGluZyBvZiBlbWNjIGNvbXBpbGVkIG1vZHVsZXMgaXMgdG8gY3JlYXRlIGEgdmFyaWFibGUgY2FsbGVkIGBNb2R1bGVgIGFuZCBhZGRcclxuICAgICAgICAvLyBwcm9wZXJ0aWVzIHRvIGl0LCBsaWtlIGBwcmVSdW5gLCBgcG9zdFJ1bmAsIGV0Y1xyXG4gICAgICAgIC8vIFdlIGFyZSB1c2luZyB0aGF0IHRvIGdldCBub3RpZmllZCB3aGVuIHRoZSBXQVNNIGhhcyBmaW5pc2hlZCBsb2FkaW5nLlxyXG4gICAgICAgIC8vIE9ubHkgdGhlbiB3aWxsIHdlIHJldHVybiBvdXIgcHJvbWlzZVxyXG5cclxuICAgICAgICAvLyBJZiB0aGV5IHBhc3NlZCBpbiBhIG1vZHVsZUNvbmZpZyBvYmplY3QsIHVzZSB0aGF0XHJcbiAgICAgICAgLy8gT3RoZXJ3aXNlLCBpbml0aWFsaXplIE1vZHVsZSB0byB0aGUgZW1wdHkgb2JqZWN0XHJcbiAgICAgICAgdmFyIE1vZHVsZSA9IHR5cGVvZiBtb2R1bGVDb25maWcgIT09ICd1bmRlZmluZWQnID8gbW9kdWxlQ29uZmlnIDoge307XHJcblxyXG4gICAgICAgIC8vIEVNQ0Mgb25seSBhbGxvd3MgZm9yIGEgc2luZ2xlIG9uQWJvcnQgZnVuY3Rpb24gKG5vdCBhbiBhcnJheSBvZiBmdW5jdGlvbnMpXHJcbiAgICAgICAgLy8gU28gaWYgdGhlIHVzZXIgZGVmaW5lZCB0aGVpciBvd24gb25BYm9ydCBmdW5jdGlvbiwgd2UgcmVtZW1iZXIgaXQgYW5kIGNhbGwgaXRcclxuICAgICAgICB2YXIgb3JpZ2luYWxPbkFib3J0RnVuY3Rpb24gPSBNb2R1bGVbJ29uQWJvcnQnXTtcclxuICAgICAgICBNb2R1bGVbJ29uQWJvcnQnXSA9IGZ1bmN0aW9uIChlcnJvclRoYXRDYXVzZWRBYm9ydCkge1xyXG4gICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVycm9yVGhhdENhdXNlZEFib3J0KSk7XHJcbiAgICAgICAgICAgIGlmIChvcmlnaW5hbE9uQWJvcnRGdW5jdGlvbil7XHJcbiAgICAgICAgICAgICAgb3JpZ2luYWxPbkFib3J0RnVuY3Rpb24oZXJyb3JUaGF0Q2F1c2VkQWJvcnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgTW9kdWxlWydwb3N0UnVuJ10gPSBNb2R1bGVbJ3Bvc3RSdW4nXSB8fCBbXTtcclxuICAgICAgICBNb2R1bGVbJ3Bvc3RSdW4nXS5wdXNoKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gV2hlbiBFbXNjcmlwdGVkIGNhbGxzIHBvc3RSdW4sIHRoaXMgcHJvbWlzZSByZXNvbHZlcyB3aXRoIHRoZSBidWlsdCBNb2R1bGVcclxuICAgICAgICAgICAgcmVzb2x2ZU1vZHVsZShNb2R1bGUpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBUaGVyZSBpcyBhIHNlY3Rpb24gb2YgY29kZSBpbiB0aGUgZW1jYy1nZW5lcmF0ZWQgY29kZSBiZWxvdyB0aGF0IGxvb2tzIGxpa2UgdGhpczpcclxuICAgICAgICAvLyAoTm90ZSB0aGF0IHRoaXMgaXMgbG93ZXJjYXNlIGBtb2R1bGVgKVxyXG4gICAgICAgIC8vIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgIC8vICAgICBtb2R1bGVbJ2V4cG9ydHMnXSA9IE1vZHVsZTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gV2hlbiB0aGF0IHJ1bnMsIGl0J3MgZ29pbmcgdG8gb3ZlcndyaXRlIG91ciBvd24gbW9kdWxhcml6YXRpb24gZXhwb3J0IGVmZm9ydHMgaW4gc2hlbGwtcG9zdC5qcyFcclxuICAgICAgICAvLyBUaGUgb25seSB3YXkgdG8gdGVsbCBlbWNjIG5vdCB0byBlbWl0IGl0IGlzIHRvIHBhc3MgdGhlIE1PRFVMQVJJWkU9MSBvciBNT0RVTEFSSVpFX0lOU1RBTkNFPTEgZmxhZ3MsXHJcbiAgICAgICAgLy8gYnV0IHRoYXQgY2FycmllcyB3aXRoIGl0IGFkZGl0aW9uYWwgdW5uZWNlc3NhcnkgYmFnZ2FnZS9idWdzIHdlIGRvbid0IHdhbnQgZWl0aGVyLlxyXG4gICAgICAgIC8vIFNvLCB3ZSBoYXZlIHRocmVlIG9wdGlvbnM6XHJcbiAgICAgICAgLy8gMSkgV2UgdW5kZWZpbmUgYG1vZHVsZWBcclxuICAgICAgICAvLyAyKSBXZSByZW1lbWJlciB3aGF0IGBtb2R1bGVbJ2V4cG9ydHMnXWAgd2FzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhpcyBmdW5jdGlvbiBhbmQgd2UgcmVzdG9yZSBpdCBsYXRlclxyXG4gICAgICAgIC8vIDMpIFdlIHdyaXRlIGEgc2NyaXB0IHRvIHJlbW92ZSB0aG9zZSBsaW5lcyBvZiBjb2RlIGFzIHBhcnQgb2YgdGhlIE1ha2UgcHJvY2Vzcy5cclxuICAgICAgICAvL1xyXG4gICAgICAgIC8vIFNpbmNlIHRob3NlIGFyZSB0aGUgb25seSBsaW5lcyBvZiBjb2RlIHRoYXQgY2FyZSBhYm91dCBtb2R1bGUsIHdlIHdpbGwgdW5kZWZpbmUgaXQuIEl0J3MgdGhlIG1vc3Qgc3RyYWlnaHRmb3J3YXJkXHJcbiAgICAgICAgLy8gb2YgdGhlIG9wdGlvbnMsIGFuZCBoYXMgdGhlIHNpZGUgZWZmZWN0IG9mIHJlZHVjaW5nIGVtY2MncyBlZmZvcnRzIHRvIG1vZGlmeSB0aGUgbW9kdWxlIGlmIGl0cyBvdXRwdXQgd2VyZSB0byBjaGFuZ2UgaW4gdGhlIGZ1dHVyZS5cclxuICAgICAgICAvLyBUaGF0J3MgYSBuaWNlIHNpZGUgZWZmZWN0IHNpbmNlIHdlJ3JlIGhhbmRsaW5nIHRoZSBtb2R1bGFyaXphdGlvbiBlZmZvcnRzIG91cnNlbHZlc1xyXG4gICAgICAgIG1vZHVsZSA9IHVuZGVmaW5lZDtcclxuICAgICAgICBcclxuICAgICAgICAvLyBUaGUgZW1jYy1nZW5lcmF0ZWQgY29kZSBhbmQgc2hlbGwtcG9zdC5qcyBjb2RlIGdvZXMgYmVsb3csXHJcbiAgICAgICAgLy8gbWVhbmluZyB0aGF0IGFsbCBvZiBpdCBydW5zIGluc2lkZSBvZiB0aGlzIHByb21pc2UuIElmIGFueXRoaW5nIHRocm93cyBhbiBleGNlcHRpb24sIG91ciBwcm9taXNlIHdpbGwgYWJvcnRcclxudmFyIE1vZHVsZT10eXBlb2YgTW9kdWxlIT09XCJ1bmRlZmluZWRcIj9Nb2R1bGU6e307dmFyIG1vZHVsZU92ZXJyaWRlcz17fTt2YXIga2V5O2ZvcihrZXkgaW4gTW9kdWxlKXtpZihNb2R1bGUuaGFzT3duUHJvcGVydHkoa2V5KSl7bW9kdWxlT3ZlcnJpZGVzW2tleV09TW9kdWxlW2tleV19fXZhciBhcmd1bWVudHNfPVtdO3ZhciB0aGlzUHJvZ3JhbT1cIi4vdGhpcy5wcm9ncmFtXCI7dmFyIHF1aXRfPWZ1bmN0aW9uKHN0YXR1cyx0b1Rocm93KXt0aHJvdyB0b1Rocm93fTt2YXIgRU5WSVJPTk1FTlRfSVNfV0VCPWZhbHNlO3ZhciBFTlZJUk9OTUVOVF9JU19XT1JLRVI9ZmFsc2U7dmFyIEVOVklST05NRU5UX0lTX05PREU9ZmFsc2U7dmFyIEVOVklST05NRU5UX0hBU19OT0RFPWZhbHNlO3ZhciBFTlZJUk9OTUVOVF9JU19TSEVMTD1mYWxzZTtFTlZJUk9OTUVOVF9JU19XRUI9dHlwZW9mIHdpbmRvdz09PVwib2JqZWN0XCI7RU5WSVJPTk1FTlRfSVNfV09SS0VSPXR5cGVvZiBpbXBvcnRTY3JpcHRzPT09XCJmdW5jdGlvblwiO0VOVklST05NRU5UX0hBU19OT0RFPXR5cGVvZiBwcm9jZXNzPT09XCJvYmplY3RcIiYmdHlwZW9mIHByb2Nlc3MudmVyc2lvbnM9PT1cIm9iamVjdFwiJiZ0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlPT09XCJzdHJpbmdcIjtFTlZJUk9OTUVOVF9JU19OT0RFPUVOVklST05NRU5UX0hBU19OT0RFJiYhRU5WSVJPTk1FTlRfSVNfV0VCJiYhRU5WSVJPTk1FTlRfSVNfV09SS0VSO0VOVklST05NRU5UX0lTX1NIRUxMPSFFTlZJUk9OTUVOVF9JU19XRUImJiFFTlZJUk9OTUVOVF9JU19OT0RFJiYhRU5WSVJPTk1FTlRfSVNfV09SS0VSO2lmKE1vZHVsZVtcIkVOVklST05NRU5UXCJdKXt0aHJvdyBuZXcgRXJyb3IoXCJNb2R1bGUuRU5WSVJPTk1FTlQgaGFzIGJlZW4gZGVwcmVjYXRlZC4gVG8gZm9yY2UgdGhlIGVudmlyb25tZW50LCB1c2UgdGhlIEVOVklST05NRU5UIGNvbXBpbGUtdGltZSBvcHRpb24gKGZvciBleGFtcGxlLCAtcyBFTlZJUk9OTUVOVD13ZWIgb3IgLXMgRU5WSVJPTk1FTlQ9bm9kZSlcIil9dmFyIHNjcmlwdERpcmVjdG9yeT1cIlwiO2Z1bmN0aW9uIGxvY2F0ZUZpbGUocGF0aCl7aWYoTW9kdWxlW1wibG9jYXRlRmlsZVwiXSl7cmV0dXJuIE1vZHVsZVtcImxvY2F0ZUZpbGVcIl0ocGF0aCxzY3JpcHREaXJlY3RvcnkpfXJldHVybiBzY3JpcHREaXJlY3RvcnkrcGF0aH12YXIgcmVhZF8scmVhZEFzeW5jLHJlYWRCaW5hcnksc2V0V2luZG93VGl0bGU7aWYoRU5WSVJPTk1FTlRfSVNfTk9ERSl7c2NyaXB0RGlyZWN0b3J5PV9fZGlybmFtZStcIi9cIjt2YXIgbm9kZUZTO3ZhciBub2RlUGF0aDtyZWFkXz1mdW5jdGlvbiBzaGVsbF9yZWFkKGZpbGVuYW1lLGJpbmFyeSl7dmFyIHJldDtyZXQ9dHJ5UGFyc2VBc0RhdGFVUkkoZmlsZW5hbWUpO2lmKCFyZXQpe2lmKCFub2RlRlMpbm9kZUZTPXJlcXVpcmUoXCJmc1wiKTtpZighbm9kZVBhdGgpbm9kZVBhdGg9cmVxdWlyZShcInBhdGhcIik7ZmlsZW5hbWU9bm9kZVBhdGhbXCJub3JtYWxpemVcIl0oZmlsZW5hbWUpO3JldD1ub2RlRlNbXCJyZWFkRmlsZVN5bmNcIl0oZmlsZW5hbWUpfXJldHVybiBiaW5hcnk/cmV0OnJldC50b1N0cmluZygpfTtyZWFkQmluYXJ5PWZ1bmN0aW9uIHJlYWRCaW5hcnkoZmlsZW5hbWUpe3ZhciByZXQ9cmVhZF8oZmlsZW5hbWUsdHJ1ZSk7aWYoIXJldC5idWZmZXIpe3JldD1uZXcgVWludDhBcnJheShyZXQpfWFzc2VydChyZXQuYnVmZmVyKTtyZXR1cm4gcmV0fTtpZihwcm9jZXNzW1wiYXJndlwiXS5sZW5ndGg+MSl7dGhpc1Byb2dyYW09cHJvY2Vzc1tcImFyZ3ZcIl1bMV0ucmVwbGFjZSgvXFxcXC9nLFwiL1wiKX1hcmd1bWVudHNfPXByb2Nlc3NbXCJhcmd2XCJdLnNsaWNlKDIpO2lmKHR5cGVvZiBtb2R1bGUhPT1cInVuZGVmaW5lZFwiKXttb2R1bGVbXCJleHBvcnRzXCJdPU1vZHVsZX1wcm9jZXNzW1wib25cIl0oXCJ1bmNhdWdodEV4Y2VwdGlvblwiLGZ1bmN0aW9uKGV4KXtpZighKGV4IGluc3RhbmNlb2YgRXhpdFN0YXR1cykpe3Rocm93IGV4fX0pO3Byb2Nlc3NbXCJvblwiXShcInVuaGFuZGxlZFJlamVjdGlvblwiLGFib3J0KTtxdWl0Xz1mdW5jdGlvbihzdGF0dXMpe3Byb2Nlc3NbXCJleGl0XCJdKHN0YXR1cyl9O01vZHVsZVtcImluc3BlY3RcIl09ZnVuY3Rpb24oKXtyZXR1cm5cIltFbXNjcmlwdGVuIE1vZHVsZSBvYmplY3RdXCJ9fWVsc2UgaWYoRU5WSVJPTk1FTlRfSVNfU0hFTEwpe2lmKHR5cGVvZiByZWFkIT1cInVuZGVmaW5lZFwiKXtyZWFkXz1mdW5jdGlvbiBzaGVsbF9yZWFkKGYpe3ZhciBkYXRhPXRyeVBhcnNlQXNEYXRhVVJJKGYpO2lmKGRhdGEpe3JldHVybiBpbnRBcnJheVRvU3RyaW5nKGRhdGEpfXJldHVybiByZWFkKGYpfX1yZWFkQmluYXJ5PWZ1bmN0aW9uIHJlYWRCaW5hcnkoZil7dmFyIGRhdGE7ZGF0YT10cnlQYXJzZUFzRGF0YVVSSShmKTtpZihkYXRhKXtyZXR1cm4gZGF0YX1pZih0eXBlb2YgcmVhZGJ1ZmZlcj09PVwiZnVuY3Rpb25cIil7cmV0dXJuIG5ldyBVaW50OEFycmF5KHJlYWRidWZmZXIoZikpfWRhdGE9cmVhZChmLFwiYmluYXJ5XCIpO2Fzc2VydCh0eXBlb2YgZGF0YT09PVwib2JqZWN0XCIpO3JldHVybiBkYXRhfTtpZih0eXBlb2Ygc2NyaXB0QXJncyE9XCJ1bmRlZmluZWRcIil7YXJndW1lbnRzXz1zY3JpcHRBcmdzfWVsc2UgaWYodHlwZW9mIGFyZ3VtZW50cyE9XCJ1bmRlZmluZWRcIil7YXJndW1lbnRzXz1hcmd1bWVudHN9aWYodHlwZW9mIHF1aXQ9PT1cImZ1bmN0aW9uXCIpe3F1aXRfPWZ1bmN0aW9uKHN0YXR1cyl7cXVpdChzdGF0dXMpfX1pZih0eXBlb2YgcHJpbnQhPT1cInVuZGVmaW5lZFwiKXtpZih0eXBlb2YgY29uc29sZT09PVwidW5kZWZpbmVkXCIpY29uc29sZT17fTtjb25zb2xlLmxvZz1wcmludDtjb25zb2xlLndhcm49Y29uc29sZS5lcnJvcj10eXBlb2YgcHJpbnRFcnIhPT1cInVuZGVmaW5lZFwiP3ByaW50RXJyOnByaW50fX1lbHNlIGlmKEVOVklST05NRU5UX0lTX1dFQnx8RU5WSVJPTk1FTlRfSVNfV09SS0VSKXtpZihFTlZJUk9OTUVOVF9JU19XT1JLRVIpe3NjcmlwdERpcmVjdG9yeT1zZWxmLmxvY2F0aW9uLmhyZWZ9ZWxzZSBpZihkb2N1bWVudC5jdXJyZW50U2NyaXB0KXtzY3JpcHREaXJlY3Rvcnk9ZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmN9aWYoc2NyaXB0RGlyZWN0b3J5LmluZGV4T2YoXCJibG9iOlwiKSE9PTApe3NjcmlwdERpcmVjdG9yeT1zY3JpcHREaXJlY3Rvcnkuc3Vic3RyKDAsc2NyaXB0RGlyZWN0b3J5Lmxhc3RJbmRleE9mKFwiL1wiKSsxKX1lbHNle3NjcmlwdERpcmVjdG9yeT1cIlwifXJlYWRfPWZ1bmN0aW9uIHNoZWxsX3JlYWQodXJsKXt0cnl7dmFyIHhocj1uZXcgWE1MSHR0cFJlcXVlc3Q7eGhyLm9wZW4oXCJHRVRcIix1cmwsZmFsc2UpO3hoci5zZW5kKG51bGwpO3JldHVybiB4aHIucmVzcG9uc2VUZXh0fWNhdGNoKGVycil7dmFyIGRhdGE9dHJ5UGFyc2VBc0RhdGFVUkkodXJsKTtpZihkYXRhKXtyZXR1cm4gaW50QXJyYXlUb1N0cmluZyhkYXRhKX10aHJvdyBlcnJ9fTtpZihFTlZJUk9OTUVOVF9JU19XT1JLRVIpe3JlYWRCaW5hcnk9ZnVuY3Rpb24gcmVhZEJpbmFyeSh1cmwpe3RyeXt2YXIgeGhyPW5ldyBYTUxIdHRwUmVxdWVzdDt4aHIub3BlbihcIkdFVFwiLHVybCxmYWxzZSk7eGhyLnJlc3BvbnNlVHlwZT1cImFycmF5YnVmZmVyXCI7eGhyLnNlbmQobnVsbCk7cmV0dXJuIG5ldyBVaW50OEFycmF5KHhoci5yZXNwb25zZSl9Y2F0Y2goZXJyKXt2YXIgZGF0YT10cnlQYXJzZUFzRGF0YVVSSSh1cmwpO2lmKGRhdGEpe3JldHVybiBkYXRhfXRocm93IGVycn19fXJlYWRBc3luYz1mdW5jdGlvbiByZWFkQXN5bmModXJsLG9ubG9hZCxvbmVycm9yKXt2YXIgeGhyPW5ldyBYTUxIdHRwUmVxdWVzdDt4aHIub3BlbihcIkdFVFwiLHVybCx0cnVlKTt4aHIucmVzcG9uc2VUeXBlPVwiYXJyYXlidWZmZXJcIjt4aHIub25sb2FkPWZ1bmN0aW9uIHhocl9vbmxvYWQoKXtpZih4aHIuc3RhdHVzPT0yMDB8fHhoci5zdGF0dXM9PTAmJnhoci5yZXNwb25zZSl7b25sb2FkKHhoci5yZXNwb25zZSk7cmV0dXJufXZhciBkYXRhPXRyeVBhcnNlQXNEYXRhVVJJKHVybCk7aWYoZGF0YSl7b25sb2FkKGRhdGEuYnVmZmVyKTtyZXR1cm59b25lcnJvcigpfTt4aHIub25lcnJvcj1vbmVycm9yO3hoci5zZW5kKG51bGwpfTtzZXRXaW5kb3dUaXRsZT1mdW5jdGlvbih0aXRsZSl7ZG9jdW1lbnQudGl0bGU9dGl0bGV9fWVsc2V7dGhyb3cgbmV3IEVycm9yKFwiZW52aXJvbm1lbnQgZGV0ZWN0aW9uIGVycm9yXCIpfXZhciBvdXQ9TW9kdWxlW1wicHJpbnRcIl18fGNvbnNvbGUubG9nLmJpbmQoY29uc29sZSk7dmFyIGVycj1Nb2R1bGVbXCJwcmludEVyclwiXXx8Y29uc29sZS53YXJuLmJpbmQoY29uc29sZSk7Zm9yKGtleSBpbiBtb2R1bGVPdmVycmlkZXMpe2lmKG1vZHVsZU92ZXJyaWRlcy5oYXNPd25Qcm9wZXJ0eShrZXkpKXtNb2R1bGVba2V5XT1tb2R1bGVPdmVycmlkZXNba2V5XX19bW9kdWxlT3ZlcnJpZGVzPW51bGw7aWYoTW9kdWxlW1wiYXJndW1lbnRzXCJdKWFyZ3VtZW50c189TW9kdWxlW1wiYXJndW1lbnRzXCJdO2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImFyZ3VtZW50c1wiKSlPYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kdWxlLFwiYXJndW1lbnRzXCIse2dldDpmdW5jdGlvbigpe2Fib3J0KFwiTW9kdWxlLmFyZ3VtZW50cyBoYXMgYmVlbiByZXBsYWNlZCB3aXRoIHBsYWluIGFyZ3VtZW50c19cIil9fSk7aWYoTW9kdWxlW1widGhpc1Byb2dyYW1cIl0pdGhpc1Byb2dyYW09TW9kdWxlW1widGhpc1Byb2dyYW1cIl07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwidGhpc1Byb2dyYW1cIikpT2JqZWN0LmRlZmluZVByb3BlcnR5KE1vZHVsZSxcInRoaXNQcm9ncmFtXCIse2dldDpmdW5jdGlvbigpe2Fib3J0KFwiTW9kdWxlLnRoaXNQcm9ncmFtIGhhcyBiZWVuIHJlcGxhY2VkIHdpdGggcGxhaW4gdGhpc1Byb2dyYW1cIil9fSk7aWYoTW9kdWxlW1wicXVpdFwiXSlxdWl0Xz1Nb2R1bGVbXCJxdWl0XCJdO2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcInF1aXRcIikpT2JqZWN0LmRlZmluZVByb3BlcnR5KE1vZHVsZSxcInF1aXRcIix7Z2V0OmZ1bmN0aW9uKCl7YWJvcnQoXCJNb2R1bGUucXVpdCBoYXMgYmVlbiByZXBsYWNlZCB3aXRoIHBsYWluIHF1aXRfXCIpfX0pO2Fzc2VydCh0eXBlb2YgTW9kdWxlW1wibWVtb3J5SW5pdGlhbGl6ZXJQcmVmaXhVUkxcIl09PT1cInVuZGVmaW5lZFwiLFwiTW9kdWxlLm1lbW9yeUluaXRpYWxpemVyUHJlZml4VVJMIG9wdGlvbiB3YXMgcmVtb3ZlZCwgdXNlIE1vZHVsZS5sb2NhdGVGaWxlIGluc3RlYWRcIik7YXNzZXJ0KHR5cGVvZiBNb2R1bGVbXCJwdGhyZWFkTWFpblByZWZpeFVSTFwiXT09PVwidW5kZWZpbmVkXCIsXCJNb2R1bGUucHRocmVhZE1haW5QcmVmaXhVUkwgb3B0aW9uIHdhcyByZW1vdmVkLCB1c2UgTW9kdWxlLmxvY2F0ZUZpbGUgaW5zdGVhZFwiKTthc3NlcnQodHlwZW9mIE1vZHVsZVtcImNkSW5pdGlhbGl6ZXJQcmVmaXhVUkxcIl09PT1cInVuZGVmaW5lZFwiLFwiTW9kdWxlLmNkSW5pdGlhbGl6ZXJQcmVmaXhVUkwgb3B0aW9uIHdhcyByZW1vdmVkLCB1c2UgTW9kdWxlLmxvY2F0ZUZpbGUgaW5zdGVhZFwiKTthc3NlcnQodHlwZW9mIE1vZHVsZVtcImZpbGVQYWNrYWdlUHJlZml4VVJMXCJdPT09XCJ1bmRlZmluZWRcIixcIk1vZHVsZS5maWxlUGFja2FnZVByZWZpeFVSTCBvcHRpb24gd2FzIHJlbW92ZWQsIHVzZSBNb2R1bGUubG9jYXRlRmlsZSBpbnN0ZWFkXCIpO2Fzc2VydCh0eXBlb2YgTW9kdWxlW1wicmVhZFwiXT09PVwidW5kZWZpbmVkXCIsXCJNb2R1bGUucmVhZCBvcHRpb24gd2FzIHJlbW92ZWQgKG1vZGlmeSByZWFkXyBpbiBKUylcIik7YXNzZXJ0KHR5cGVvZiBNb2R1bGVbXCJyZWFkQXN5bmNcIl09PT1cInVuZGVmaW5lZFwiLFwiTW9kdWxlLnJlYWRBc3luYyBvcHRpb24gd2FzIHJlbW92ZWQgKG1vZGlmeSByZWFkQXN5bmMgaW4gSlMpXCIpO2Fzc2VydCh0eXBlb2YgTW9kdWxlW1wicmVhZEJpbmFyeVwiXT09PVwidW5kZWZpbmVkXCIsXCJNb2R1bGUucmVhZEJpbmFyeSBvcHRpb24gd2FzIHJlbW92ZWQgKG1vZGlmeSByZWFkQmluYXJ5IGluIEpTKVwiKTthc3NlcnQodHlwZW9mIE1vZHVsZVtcInNldFdpbmRvd1RpdGxlXCJdPT09XCJ1bmRlZmluZWRcIixcIk1vZHVsZS5zZXRXaW5kb3dUaXRsZSBvcHRpb24gd2FzIHJlbW92ZWQgKG1vZGlmeSBzZXRXaW5kb3dUaXRsZSBpbiBKUylcIik7aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwicmVhZFwiKSlPYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kdWxlLFwicmVhZFwiLHtnZXQ6ZnVuY3Rpb24oKXthYm9ydChcIk1vZHVsZS5yZWFkIGhhcyBiZWVuIHJlcGxhY2VkIHdpdGggcGxhaW4gcmVhZF9cIil9fSk7aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwicmVhZEFzeW5jXCIpKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShNb2R1bGUsXCJyZWFkQXN5bmNcIix7Z2V0OmZ1bmN0aW9uKCl7YWJvcnQoXCJNb2R1bGUucmVhZEFzeW5jIGhhcyBiZWVuIHJlcGxhY2VkIHdpdGggcGxhaW4gcmVhZEFzeW5jXCIpfX0pO2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcInJlYWRCaW5hcnlcIikpT2JqZWN0LmRlZmluZVByb3BlcnR5KE1vZHVsZSxcInJlYWRCaW5hcnlcIix7Z2V0OmZ1bmN0aW9uKCl7YWJvcnQoXCJNb2R1bGUucmVhZEJpbmFyeSBoYXMgYmVlbiByZXBsYWNlZCB3aXRoIHBsYWluIHJlYWRCaW5hcnlcIil9fSk7c3RhY2tTYXZlPXN0YWNrUmVzdG9yZT1zdGFja0FsbG9jPWZ1bmN0aW9uKCl7YWJvcnQoXCJjYW5ub3QgdXNlIHRoZSBzdGFjayBiZWZvcmUgY29tcGlsZWQgY29kZSBpcyByZWFkeSB0byBydW4sIGFuZCBoYXMgcHJvdmlkZWQgc3RhY2sgYWNjZXNzXCIpfTtmdW5jdGlvbiBkeW5hbWljQWxsb2Moc2l6ZSl7YXNzZXJ0KERZTkFNSUNUT1BfUFRSKTt2YXIgcmV0PUhFQVAzMltEWU5BTUlDVE9QX1BUUj4+Ml07dmFyIGVuZD1yZXQrc2l6ZSsxNSYtMTY7aWYoZW5kPl9lbXNjcmlwdGVuX2dldF9oZWFwX3NpemUoKSl7YWJvcnQoXCJmYWlsdXJlIHRvIGR5bmFtaWNBbGxvYyAtIG1lbW9yeSBncm93dGggZXRjLiBpcyBub3Qgc3VwcG9ydGVkIHRoZXJlLCBjYWxsIG1hbGxvYy9zYnJrIGRpcmVjdGx5XCIpfUhFQVAzMltEWU5BTUlDVE9QX1BUUj4+Ml09ZW5kO3JldHVybiByZXR9ZnVuY3Rpb24gZ2V0TmF0aXZlVHlwZVNpemUodHlwZSl7c3dpdGNoKHR5cGUpe2Nhc2VcImkxXCI6Y2FzZVwiaThcIjpyZXR1cm4gMTtjYXNlXCJpMTZcIjpyZXR1cm4gMjtjYXNlXCJpMzJcIjpyZXR1cm4gNDtjYXNlXCJpNjRcIjpyZXR1cm4gODtjYXNlXCJmbG9hdFwiOnJldHVybiA0O2Nhc2VcImRvdWJsZVwiOnJldHVybiA4O2RlZmF1bHQ6e2lmKHR5cGVbdHlwZS5sZW5ndGgtMV09PT1cIipcIil7cmV0dXJuIDR9ZWxzZSBpZih0eXBlWzBdPT09XCJpXCIpe3ZhciBiaXRzPXBhcnNlSW50KHR5cGUuc3Vic3RyKDEpKTthc3NlcnQoYml0cyU4PT09MCxcImdldE5hdGl2ZVR5cGVTaXplIGludmFsaWQgYml0cyBcIitiaXRzK1wiLCB0eXBlIFwiK3R5cGUpO3JldHVybiBiaXRzLzh9ZWxzZXtyZXR1cm4gMH19fX1mdW5jdGlvbiB3YXJuT25jZSh0ZXh0KXtpZighd2Fybk9uY2Uuc2hvd24pd2Fybk9uY2Uuc2hvd249e307aWYoIXdhcm5PbmNlLnNob3duW3RleHRdKXt3YXJuT25jZS5zaG93blt0ZXh0XT0xO2Vycih0ZXh0KX19dmFyIGFzbTJ3YXNtSW1wb3J0cz17XCJmNjQtcmVtXCI6ZnVuY3Rpb24oeCx5KXtyZXR1cm4geCV5fSxcImRlYnVnZ2VyXCI6ZnVuY3Rpb24oKXtkZWJ1Z2dlcn19O3ZhciBmdW5jdGlvblBvaW50ZXJzPW5ldyBBcnJheSgwKTt2YXIgd2FzbUJpbmFyeTtpZihNb2R1bGVbXCJ3YXNtQmluYXJ5XCJdKXdhc21CaW5hcnk9TW9kdWxlW1wid2FzbUJpbmFyeVwiXTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJ3YXNtQmluYXJ5XCIpKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShNb2R1bGUsXCJ3YXNtQmluYXJ5XCIse2dldDpmdW5jdGlvbigpe2Fib3J0KFwiTW9kdWxlLndhc21CaW5hcnkgaGFzIGJlZW4gcmVwbGFjZWQgd2l0aCBwbGFpbiB3YXNtQmluYXJ5XCIpfX0pO2lmKHR5cGVvZiBXZWJBc3NlbWJseSE9PVwib2JqZWN0XCIpe2Fib3J0KFwiTm8gV2ViQXNzZW1ibHkgc3VwcG9ydCBmb3VuZC4gQnVpbGQgd2l0aCAtcyBXQVNNPTAgdG8gdGFyZ2V0IEphdmFTY3JpcHQgaW5zdGVhZC5cIil9ZnVuY3Rpb24gc2V0VmFsdWUocHRyLHZhbHVlLHR5cGUsbm9TYWZlKXt0eXBlPXR5cGV8fFwiaThcIjtpZih0eXBlLmNoYXJBdCh0eXBlLmxlbmd0aC0xKT09PVwiKlwiKXR5cGU9XCJpMzJcIjtzd2l0Y2godHlwZSl7Y2FzZVwiaTFcIjpIRUFQOFtwdHI+PjBdPXZhbHVlO2JyZWFrO2Nhc2VcImk4XCI6SEVBUDhbcHRyPj4wXT12YWx1ZTticmVhaztjYXNlXCJpMTZcIjpIRUFQMTZbcHRyPj4xXT12YWx1ZTticmVhaztjYXNlXCJpMzJcIjpIRUFQMzJbcHRyPj4yXT12YWx1ZTticmVhaztjYXNlXCJpNjRcIjp0ZW1wSTY0PVt2YWx1ZT4+PjAsKHRlbXBEb3VibGU9dmFsdWUsK01hdGhfYWJzKHRlbXBEb3VibGUpPj0xP3RlbXBEb3VibGU+MD8oTWF0aF9taW4oK01hdGhfZmxvb3IodGVtcERvdWJsZS80Mjk0OTY3Mjk2KSw0Mjk0OTY3Mjk1KXwwKT4+PjA6fn4rTWF0aF9jZWlsKCh0ZW1wRG91YmxlLSsofn50ZW1wRG91YmxlPj4+MCkpLzQyOTQ5NjcyOTYpPj4+MDowKV0sSEVBUDMyW3B0cj4+Ml09dGVtcEk2NFswXSxIRUFQMzJbcHRyKzQ+PjJdPXRlbXBJNjRbMV07YnJlYWs7Y2FzZVwiZmxvYXRcIjpIRUFQRjMyW3B0cj4+Ml09dmFsdWU7YnJlYWs7Y2FzZVwiZG91YmxlXCI6SEVBUEY2NFtwdHI+PjNdPXZhbHVlO2JyZWFrO2RlZmF1bHQ6YWJvcnQoXCJpbnZhbGlkIHR5cGUgZm9yIHNldFZhbHVlOiBcIit0eXBlKX19dmFyIHdhc21NZW1vcnk7dmFyIHdhc21UYWJsZTt2YXIgQUJPUlQ9ZmFsc2U7dmFyIEVYSVRTVEFUVVM9MDtmdW5jdGlvbiBhc3NlcnQoY29uZGl0aW9uLHRleHQpe2lmKCFjb25kaXRpb24pe2Fib3J0KFwiQXNzZXJ0aW9uIGZhaWxlZDogXCIrdGV4dCl9fXZhciBBTExPQ19OT05FPTM7ZnVuY3Rpb24gYWxsb2NhdGUoc2xhYix0eXBlcyxhbGxvY2F0b3IscHRyKXt2YXIgemVyb2luaXQsc2l6ZTtpZih0eXBlb2Ygc2xhYj09PVwibnVtYmVyXCIpe3plcm9pbml0PXRydWU7c2l6ZT1zbGFifWVsc2V7emVyb2luaXQ9ZmFsc2U7c2l6ZT1zbGFiLmxlbmd0aH12YXIgc2luZ2xlVHlwZT10eXBlb2YgdHlwZXM9PT1cInN0cmluZ1wiP3R5cGVzOm51bGw7dmFyIHJldDtpZihhbGxvY2F0b3I9PUFMTE9DX05PTkUpe3JldD1wdHJ9ZWxzZXtyZXQ9W19tYWxsb2Msc3RhY2tBbGxvYyxkeW5hbWljQWxsb2NdW2FsbG9jYXRvcl0oTWF0aC5tYXgoc2l6ZSxzaW5nbGVUeXBlPzE6dHlwZXMubGVuZ3RoKSl9aWYoemVyb2luaXQpe3ZhciBzdG9wO3B0cj1yZXQ7YXNzZXJ0KChyZXQmMyk9PTApO3N0b3A9cmV0KyhzaXplJn4zKTtmb3IoO3B0cjxzdG9wO3B0cis9NCl7SEVBUDMyW3B0cj4+Ml09MH1zdG9wPXJldCtzaXplO3doaWxlKHB0cjxzdG9wKXtIRUFQOFtwdHIrKz4+MF09MH1yZXR1cm4gcmV0fWlmKHNpbmdsZVR5cGU9PT1cImk4XCIpe2lmKHNsYWIuc3ViYXJyYXl8fHNsYWIuc2xpY2Upe0hFQVBVOC5zZXQoc2xhYixyZXQpfWVsc2V7SEVBUFU4LnNldChuZXcgVWludDhBcnJheShzbGFiKSxyZXQpfXJldHVybiByZXR9dmFyIGk9MCx0eXBlLHR5cGVTaXplLHByZXZpb3VzVHlwZTt3aGlsZShpPHNpemUpe3ZhciBjdXJyPXNsYWJbaV07dHlwZT1zaW5nbGVUeXBlfHx0eXBlc1tpXTtpZih0eXBlPT09MCl7aSsrO2NvbnRpbnVlfWFzc2VydCh0eXBlLFwiTXVzdCBrbm93IHdoYXQgdHlwZSB0byBzdG9yZSBpbiBhbGxvY2F0ZSFcIik7aWYodHlwZT09XCJpNjRcIil0eXBlPVwiaTMyXCI7c2V0VmFsdWUocmV0K2ksY3Vycix0eXBlKTtpZihwcmV2aW91c1R5cGUhPT10eXBlKXt0eXBlU2l6ZT1nZXROYXRpdmVUeXBlU2l6ZSh0eXBlKTtwcmV2aW91c1R5cGU9dHlwZX1pKz10eXBlU2l6ZX1yZXR1cm4gcmV0fWZ1bmN0aW9uIGdldE1lbW9yeShzaXplKXtpZighcnVudGltZUluaXRpYWxpemVkKXJldHVybiBkeW5hbWljQWxsb2Moc2l6ZSk7cmV0dXJuIF9tYWxsb2Moc2l6ZSl9dmFyIFVURjhEZWNvZGVyPXR5cGVvZiBUZXh0RGVjb2RlciE9PVwidW5kZWZpbmVkXCI/bmV3IFRleHREZWNvZGVyKFwidXRmOFwiKTp1bmRlZmluZWQ7ZnVuY3Rpb24gVVRGOEFycmF5VG9TdHJpbmcodThBcnJheSxpZHgsbWF4Qnl0ZXNUb1JlYWQpe3ZhciBlbmRJZHg9aWR4K21heEJ5dGVzVG9SZWFkO3ZhciBlbmRQdHI9aWR4O3doaWxlKHU4QXJyYXlbZW5kUHRyXSYmIShlbmRQdHI+PWVuZElkeCkpKytlbmRQdHI7aWYoZW5kUHRyLWlkeD4xNiYmdThBcnJheS5zdWJhcnJheSYmVVRGOERlY29kZXIpe3JldHVybiBVVEY4RGVjb2Rlci5kZWNvZGUodThBcnJheS5zdWJhcnJheShpZHgsZW5kUHRyKSl9ZWxzZXt2YXIgc3RyPVwiXCI7d2hpbGUoaWR4PGVuZFB0cil7dmFyIHUwPXU4QXJyYXlbaWR4KytdO2lmKCEodTAmMTI4KSl7c3RyKz1TdHJpbmcuZnJvbUNoYXJDb2RlKHUwKTtjb250aW51ZX12YXIgdTE9dThBcnJheVtpZHgrK10mNjM7aWYoKHUwJjIyNCk9PTE5Mil7c3RyKz1TdHJpbmcuZnJvbUNoYXJDb2RlKCh1MCYzMSk8PDZ8dTEpO2NvbnRpbnVlfXZhciB1Mj11OEFycmF5W2lkeCsrXSY2MztpZigodTAmMjQwKT09MjI0KXt1MD0odTAmMTUpPDwxMnx1MTw8Nnx1Mn1lbHNle2lmKCh1MCYyNDgpIT0yNDApd2Fybk9uY2UoXCJJbnZhbGlkIFVURi04IGxlYWRpbmcgYnl0ZSAweFwiK3UwLnRvU3RyaW5nKDE2KStcIiBlbmNvdW50ZXJlZCB3aGVuIGRlc2VyaWFsaXppbmcgYSBVVEYtOCBzdHJpbmcgb24gdGhlIGFzbS5qcy93YXNtIGhlYXAgdG8gYSBKUyBzdHJpbmchXCIpO3UwPSh1MCY3KTw8MTh8dTE8PDEyfHUyPDw2fHU4QXJyYXlbaWR4KytdJjYzfWlmKHUwPDY1NTM2KXtzdHIrPVN0cmluZy5mcm9tQ2hhckNvZGUodTApfWVsc2V7dmFyIGNoPXUwLTY1NTM2O3N0cis9U3RyaW5nLmZyb21DaGFyQ29kZSg1NTI5NnxjaD4+MTAsNTYzMjB8Y2gmMTAyMyl9fX1yZXR1cm4gc3RyfWZ1bmN0aW9uIFVURjhUb1N0cmluZyhwdHIsbWF4Qnl0ZXNUb1JlYWQpe3JldHVybiBwdHI/VVRGOEFycmF5VG9TdHJpbmcoSEVBUFU4LHB0cixtYXhCeXRlc1RvUmVhZCk6XCJcIn1mdW5jdGlvbiBzdHJpbmdUb1VURjhBcnJheShzdHIsb3V0VThBcnJheSxvdXRJZHgsbWF4Qnl0ZXNUb1dyaXRlKXtpZighKG1heEJ5dGVzVG9Xcml0ZT4wKSlyZXR1cm4gMDt2YXIgc3RhcnRJZHg9b3V0SWR4O3ZhciBlbmRJZHg9b3V0SWR4K21heEJ5dGVzVG9Xcml0ZS0xO2Zvcih2YXIgaT0wO2k8c3RyLmxlbmd0aDsrK2kpe3ZhciB1PXN0ci5jaGFyQ29kZUF0KGkpO2lmKHU+PTU1Mjk2JiZ1PD01NzM0Myl7dmFyIHUxPXN0ci5jaGFyQ29kZUF0KCsraSk7dT02NTUzNisoKHUmMTAyMyk8PDEwKXx1MSYxMDIzfWlmKHU8PTEyNyl7aWYob3V0SWR4Pj1lbmRJZHgpYnJlYWs7b3V0VThBcnJheVtvdXRJZHgrK109dX1lbHNlIGlmKHU8PTIwNDcpe2lmKG91dElkeCsxPj1lbmRJZHgpYnJlYWs7b3V0VThBcnJheVtvdXRJZHgrK109MTkyfHU+PjY7b3V0VThBcnJheVtvdXRJZHgrK109MTI4fHUmNjN9ZWxzZSBpZih1PD02NTUzNSl7aWYob3V0SWR4KzI+PWVuZElkeClicmVhaztvdXRVOEFycmF5W291dElkeCsrXT0yMjR8dT4+MTI7b3V0VThBcnJheVtvdXRJZHgrK109MTI4fHU+PjYmNjM7b3V0VThBcnJheVtvdXRJZHgrK109MTI4fHUmNjN9ZWxzZXtpZihvdXRJZHgrMz49ZW5kSWR4KWJyZWFrO2lmKHU+PTIwOTcxNTIpd2Fybk9uY2UoXCJJbnZhbGlkIFVuaWNvZGUgY29kZSBwb2ludCAweFwiK3UudG9TdHJpbmcoMTYpK1wiIGVuY291bnRlcmVkIHdoZW4gc2VyaWFsaXppbmcgYSBKUyBzdHJpbmcgdG8gYW4gVVRGLTggc3RyaW5nIG9uIHRoZSBhc20uanMvd2FzbSBoZWFwISAoVmFsaWQgdW5pY29kZSBjb2RlIHBvaW50cyBzaG91bGQgYmUgaW4gcmFuZ2UgMC0weDFGRkZGRikuXCIpO291dFU4QXJyYXlbb3V0SWR4KytdPTI0MHx1Pj4xODtvdXRVOEFycmF5W291dElkeCsrXT0xMjh8dT4+MTImNjM7b3V0VThBcnJheVtvdXRJZHgrK109MTI4fHU+PjYmNjM7b3V0VThBcnJheVtvdXRJZHgrK109MTI4fHUmNjN9fW91dFU4QXJyYXlbb3V0SWR4XT0wO3JldHVybiBvdXRJZHgtc3RhcnRJZHh9ZnVuY3Rpb24gc3RyaW5nVG9VVEY4KHN0cixvdXRQdHIsbWF4Qnl0ZXNUb1dyaXRlKXthc3NlcnQodHlwZW9mIG1heEJ5dGVzVG9Xcml0ZT09XCJudW1iZXJcIixcInN0cmluZ1RvVVRGOChzdHIsIG91dFB0ciwgbWF4Qnl0ZXNUb1dyaXRlKSBpcyBtaXNzaW5nIHRoZSB0aGlyZCBwYXJhbWV0ZXIgdGhhdCBzcGVjaWZpZXMgdGhlIGxlbmd0aCBvZiB0aGUgb3V0cHV0IGJ1ZmZlciFcIik7cmV0dXJuIHN0cmluZ1RvVVRGOEFycmF5KHN0cixIRUFQVTgsb3V0UHRyLG1heEJ5dGVzVG9Xcml0ZSl9ZnVuY3Rpb24gbGVuZ3RoQnl0ZXNVVEY4KHN0cil7dmFyIGxlbj0wO2Zvcih2YXIgaT0wO2k8c3RyLmxlbmd0aDsrK2kpe3ZhciB1PXN0ci5jaGFyQ29kZUF0KGkpO2lmKHU+PTU1Mjk2JiZ1PD01NzM0Myl1PTY1NTM2KygodSYxMDIzKTw8MTApfHN0ci5jaGFyQ29kZUF0KCsraSkmMTAyMztpZih1PD0xMjcpKytsZW47ZWxzZSBpZih1PD0yMDQ3KWxlbis9MjtlbHNlIGlmKHU8PTY1NTM1KWxlbis9MztlbHNlIGxlbis9NH1yZXR1cm4gbGVufXZhciBVVEYxNkRlY29kZXI9dHlwZW9mIFRleHREZWNvZGVyIT09XCJ1bmRlZmluZWRcIj9uZXcgVGV4dERlY29kZXIoXCJ1dGYtMTZsZVwiKTp1bmRlZmluZWQ7ZnVuY3Rpb24gYWxsb2NhdGVVVEY4KHN0cil7dmFyIHNpemU9bGVuZ3RoQnl0ZXNVVEY4KHN0cikrMTt2YXIgcmV0PV9tYWxsb2Moc2l6ZSk7aWYocmV0KXN0cmluZ1RvVVRGOEFycmF5KHN0cixIRUFQOCxyZXQsc2l6ZSk7cmV0dXJuIHJldH1mdW5jdGlvbiB3cml0ZUFycmF5VG9NZW1vcnkoYXJyYXksYnVmZmVyKXthc3NlcnQoYXJyYXkubGVuZ3RoPj0wLFwid3JpdGVBcnJheVRvTWVtb3J5IGFycmF5IG11c3QgaGF2ZSBhIGxlbmd0aCAoc2hvdWxkIGJlIGFuIGFycmF5IG9yIHR5cGVkIGFycmF5KVwiKTtIRUFQOC5zZXQoYXJyYXksYnVmZmVyKX1mdW5jdGlvbiB3cml0ZUFzY2lpVG9NZW1vcnkoc3RyLGJ1ZmZlcixkb250QWRkTnVsbCl7Zm9yKHZhciBpPTA7aTxzdHIubGVuZ3RoOysraSl7YXNzZXJ0KHN0ci5jaGFyQ29kZUF0KGkpPT09c3RyLmNoYXJDb2RlQXQoaSkmMjU1KTtIRUFQOFtidWZmZXIrKz4+MF09c3RyLmNoYXJDb2RlQXQoaSl9aWYoIWRvbnRBZGROdWxsKUhFQVA4W2J1ZmZlcj4+MF09MH12YXIgUEFHRV9TSVpFPTE2Mzg0O3ZhciBXQVNNX1BBR0VfU0laRT02NTUzNjtmdW5jdGlvbiBhbGlnblVwKHgsbXVsdGlwbGUpe2lmKHglbXVsdGlwbGU+MCl7eCs9bXVsdGlwbGUteCVtdWx0aXBsZX1yZXR1cm4geH12YXIgYnVmZmVyLEhFQVA4LEhFQVBVOCxIRUFQMTYsSEVBUFUxNixIRUFQMzIsSEVBUFUzMixIRUFQRjMyLEhFQVBGNjQ7ZnVuY3Rpb24gdXBkYXRlR2xvYmFsQnVmZmVyVmlld3MoKXtNb2R1bGVbXCJIRUFQOFwiXT1IRUFQOD1uZXcgSW50OEFycmF5KGJ1ZmZlcik7TW9kdWxlW1wiSEVBUDE2XCJdPUhFQVAxNj1uZXcgSW50MTZBcnJheShidWZmZXIpO01vZHVsZVtcIkhFQVAzMlwiXT1IRUFQMzI9bmV3IEludDMyQXJyYXkoYnVmZmVyKTtNb2R1bGVbXCJIRUFQVThcIl09SEVBUFU4PW5ldyBVaW50OEFycmF5KGJ1ZmZlcik7TW9kdWxlW1wiSEVBUFUxNlwiXT1IRUFQVTE2PW5ldyBVaW50MTZBcnJheShidWZmZXIpO01vZHVsZVtcIkhFQVBVMzJcIl09SEVBUFUzMj1uZXcgVWludDMyQXJyYXkoYnVmZmVyKTtNb2R1bGVbXCJIRUFQRjMyXCJdPUhFQVBGMzI9bmV3IEZsb2F0MzJBcnJheShidWZmZXIpO01vZHVsZVtcIkhFQVBGNjRcIl09SEVBUEY2ND1uZXcgRmxvYXQ2NEFycmF5KGJ1ZmZlcil9dmFyIFNUQUNLX0JBU0U9NTAyNzIsU1RBQ0tfTUFYPTUyOTMxNTIsRFlOQU1JQ19CQVNFPTUyOTMxNTIsRFlOQU1JQ1RPUF9QVFI9NTAyNDA7YXNzZXJ0KFNUQUNLX0JBU0UlMTY9PT0wLFwic3RhY2sgbXVzdCBzdGFydCBhbGlnbmVkXCIpO2Fzc2VydChEWU5BTUlDX0JBU0UlMTY9PT0wLFwiaGVhcCBtdXN0IHN0YXJ0IGFsaWduZWRcIik7dmFyIFRPVEFMX1NUQUNLPTUyNDI4ODA7aWYoTW9kdWxlW1wiVE9UQUxfU1RBQ0tcIl0pYXNzZXJ0KFRPVEFMX1NUQUNLPT09TW9kdWxlW1wiVE9UQUxfU1RBQ0tcIl0sXCJ0aGUgc3RhY2sgc2l6ZSBjYW4gbm8gbG9uZ2VyIGJlIGRldGVybWluZWQgYXQgcnVudGltZVwiKTt2YXIgSU5JVElBTF9UT1RBTF9NRU1PUlk9TW9kdWxlW1wiVE9UQUxfTUVNT1JZXCJdfHwzMzU1NDQzMjA7aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiVE9UQUxfTUVNT1JZXCIpKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShNb2R1bGUsXCJUT1RBTF9NRU1PUllcIix7Z2V0OmZ1bmN0aW9uKCl7YWJvcnQoXCJNb2R1bGUuVE9UQUxfTUVNT1JZIGhhcyBiZWVuIHJlcGxhY2VkIHdpdGggcGxhaW4gSU5JVElBTF9UT1RBTF9NRU1PUllcIil9fSk7YXNzZXJ0KElOSVRJQUxfVE9UQUxfTUVNT1JZPj1UT1RBTF9TVEFDSyxcIlRPVEFMX01FTU9SWSBzaG91bGQgYmUgbGFyZ2VyIHRoYW4gVE9UQUxfU1RBQ0ssIHdhcyBcIitJTklUSUFMX1RPVEFMX01FTU9SWStcIiEgKFRPVEFMX1NUQUNLPVwiK1RPVEFMX1NUQUNLK1wiKVwiKTthc3NlcnQodHlwZW9mIEludDMyQXJyYXkhPT1cInVuZGVmaW5lZFwiJiZ0eXBlb2YgRmxvYXQ2NEFycmF5IT09XCJ1bmRlZmluZWRcIiYmSW50MzJBcnJheS5wcm90b3R5cGUuc3ViYXJyYXkhPT11bmRlZmluZWQmJkludDMyQXJyYXkucHJvdG90eXBlLnNldCE9PXVuZGVmaW5lZCxcIkpTIGVuZ2luZSBkb2VzIG5vdCBwcm92aWRlIGZ1bGwgdHlwZWQgYXJyYXkgc3VwcG9ydFwiKTtpZihNb2R1bGVbXCJ3YXNtTWVtb3J5XCJdKXt3YXNtTWVtb3J5PU1vZHVsZVtcIndhc21NZW1vcnlcIl19ZWxzZXt3YXNtTWVtb3J5PW5ldyBXZWJBc3NlbWJseS5NZW1vcnkoe1wiaW5pdGlhbFwiOklOSVRJQUxfVE9UQUxfTUVNT1JZL1dBU01fUEFHRV9TSVpFfSl9aWYod2FzbU1lbW9yeSl7YnVmZmVyPXdhc21NZW1vcnkuYnVmZmVyfUlOSVRJQUxfVE9UQUxfTUVNT1JZPWJ1ZmZlci5ieXRlTGVuZ3RoO2Fzc2VydChJTklUSUFMX1RPVEFMX01FTU9SWSVXQVNNX1BBR0VfU0laRT09PTApO3VwZGF0ZUdsb2JhbEJ1ZmZlclZpZXdzKCk7SEVBUDMyW0RZTkFNSUNUT1BfUFRSPj4yXT1EWU5BTUlDX0JBU0U7ZnVuY3Rpb24gd3JpdGVTdGFja0Nvb2tpZSgpe2Fzc2VydCgoU1RBQ0tfTUFYJjMpPT0wKTtIRUFQVTMyWyhTVEFDS19NQVg+PjIpLTFdPTM0ODIxMjIzO0hFQVBVMzJbKFNUQUNLX01BWD4+MiktMl09MjMxMDcyMTAyMn1mdW5jdGlvbiBjaGVja1N0YWNrQ29va2llKCl7dmFyIGNvb2tpZTE9SEVBUFUzMlsoU1RBQ0tfTUFYPj4yKS0xXTt2YXIgY29va2llMj1IRUFQVTMyWyhTVEFDS19NQVg+PjIpLTJdO2lmKGNvb2tpZTEhPTM0ODIxMjIzfHxjb29raWUyIT0yMzEwNzIxMDIyKXthYm9ydChcIlN0YWNrIG92ZXJmbG93ISBTdGFjayBjb29raWUgaGFzIGJlZW4gb3ZlcndyaXR0ZW4sIGV4cGVjdGVkIGhleCBkd29yZHMgMHg4OUJBQ0RGRSBhbmQgMHgwMjEzNTQ2NywgYnV0IHJlY2VpdmVkIDB4XCIrY29va2llMi50b1N0cmluZygxNikrXCIgXCIrY29va2llMS50b1N0cmluZygxNikpfWlmKEhFQVAzMlswXSE9PTE2Njg1MDkwMjkpYWJvcnQoXCJSdW50aW1lIGVycm9yOiBUaGUgYXBwbGljYXRpb24gaGFzIGNvcnJ1cHRlZCBpdHMgaGVhcCBtZW1vcnkgYXJlYSAoYWRkcmVzcyB6ZXJvKSFcIil9ZnVuY3Rpb24gYWJvcnRTdGFja092ZXJmbG93KGFsbG9jU2l6ZSl7YWJvcnQoXCJTdGFjayBvdmVyZmxvdyEgQXR0ZW1wdGVkIHRvIGFsbG9jYXRlIFwiK2FsbG9jU2l6ZStcIiBieXRlcyBvbiB0aGUgc3RhY2ssIGJ1dCBzdGFjayBoYXMgb25seSBcIisoU1RBQ0tfTUFYLXN0YWNrU2F2ZSgpK2FsbG9jU2l6ZSkrXCIgYnl0ZXMgYXZhaWxhYmxlIVwiKX1IRUFQMzJbMF09MTY2ODUwOTAyOTtIRUFQMTZbMV09MjU0NTk7aWYoSEVBUFU4WzJdIT09MTE1fHxIRUFQVThbM10hPT05OSl0aHJvd1wiUnVudGltZSBlcnJvcjogZXhwZWN0ZWQgdGhlIHN5c3RlbSB0byBiZSBsaXR0bGUtZW5kaWFuIVwiO2Z1bmN0aW9uIGFib3J0Rm5QdHJFcnJvcihwdHIsc2lnKXthYm9ydChcIkludmFsaWQgZnVuY3Rpb24gcG9pbnRlciBcIitwdHIrXCIgY2FsbGVkIHdpdGggc2lnbmF0dXJlICdcIitzaWcrXCInLiBQZXJoYXBzIHRoaXMgaXMgYW4gaW52YWxpZCB2YWx1ZSAoZS5nLiBjYXVzZWQgYnkgY2FsbGluZyBhIHZpcnR1YWwgbWV0aG9kIG9uIGEgTlVMTCBwb2ludGVyKT8gT3IgY2FsbGluZyBhIGZ1bmN0aW9uIHdpdGggYW4gaW5jb3JyZWN0IHR5cGUsIHdoaWNoIHdpbGwgZmFpbD8gKGl0IGlzIHdvcnRoIGJ1aWxkaW5nIHlvdXIgc291cmNlIGZpbGVzIHdpdGggLVdlcnJvciAod2FybmluZ3MgYXJlIGVycm9ycyksIGFzIHdhcm5pbmdzIGNhbiBpbmRpY2F0ZSB1bmRlZmluZWQgYmVoYXZpb3Igd2hpY2ggY2FuIGNhdXNlIHRoaXMpLiBCdWlsZCB3aXRoIEFTU0VSVElPTlM9MiBmb3IgbW9yZSBpbmZvLlwiKX1mdW5jdGlvbiBjYWxsUnVudGltZUNhbGxiYWNrcyhjYWxsYmFja3Mpe3doaWxlKGNhbGxiYWNrcy5sZW5ndGg+MCl7dmFyIGNhbGxiYWNrPWNhbGxiYWNrcy5zaGlmdCgpO2lmKHR5cGVvZiBjYWxsYmFjaz09XCJmdW5jdGlvblwiKXtjYWxsYmFjaygpO2NvbnRpbnVlfXZhciBmdW5jPWNhbGxiYWNrLmZ1bmM7aWYodHlwZW9mIGZ1bmM9PT1cIm51bWJlclwiKXtpZihjYWxsYmFjay5hcmc9PT11bmRlZmluZWQpe01vZHVsZVtcImR5bkNhbGxfdlwiXShmdW5jKX1lbHNle01vZHVsZVtcImR5bkNhbGxfdmlcIl0oZnVuYyxjYWxsYmFjay5hcmcpfX1lbHNle2Z1bmMoY2FsbGJhY2suYXJnPT09dW5kZWZpbmVkP251bGw6Y2FsbGJhY2suYXJnKX19fXZhciBfX0FUUFJFUlVOX189W107dmFyIF9fQVRJTklUX189W107dmFyIF9fQVRNQUlOX189W107dmFyIF9fQVRQT1NUUlVOX189W107dmFyIHJ1bnRpbWVJbml0aWFsaXplZD1mYWxzZTt2YXIgcnVudGltZUV4aXRlZD1mYWxzZTtmdW5jdGlvbiBwcmVSdW4oKXtpZihNb2R1bGVbXCJwcmVSdW5cIl0pe2lmKHR5cGVvZiBNb2R1bGVbXCJwcmVSdW5cIl09PVwiZnVuY3Rpb25cIilNb2R1bGVbXCJwcmVSdW5cIl09W01vZHVsZVtcInByZVJ1blwiXV07d2hpbGUoTW9kdWxlW1wicHJlUnVuXCJdLmxlbmd0aCl7YWRkT25QcmVSdW4oTW9kdWxlW1wicHJlUnVuXCJdLnNoaWZ0KCkpfX1jYWxsUnVudGltZUNhbGxiYWNrcyhfX0FUUFJFUlVOX18pfWZ1bmN0aW9uIGluaXRSdW50aW1lKCl7Y2hlY2tTdGFja0Nvb2tpZSgpO2Fzc2VydCghcnVudGltZUluaXRpYWxpemVkKTtydW50aW1lSW5pdGlhbGl6ZWQ9dHJ1ZTtpZighTW9kdWxlW1wibm9GU0luaXRcIl0mJiFGUy5pbml0LmluaXRpYWxpemVkKUZTLmluaXQoKTtUVFkuaW5pdCgpO2NhbGxSdW50aW1lQ2FsbGJhY2tzKF9fQVRJTklUX18pfWZ1bmN0aW9uIHByZU1haW4oKXtjaGVja1N0YWNrQ29va2llKCk7RlMuaWdub3JlUGVybWlzc2lvbnM9ZmFsc2U7Y2FsbFJ1bnRpbWVDYWxsYmFja3MoX19BVE1BSU5fXyl9ZnVuY3Rpb24gcG9zdFJ1bigpe2NoZWNrU3RhY2tDb29raWUoKTtpZihNb2R1bGVbXCJwb3N0UnVuXCJdKXtpZih0eXBlb2YgTW9kdWxlW1wicG9zdFJ1blwiXT09XCJmdW5jdGlvblwiKU1vZHVsZVtcInBvc3RSdW5cIl09W01vZHVsZVtcInBvc3RSdW5cIl1dO3doaWxlKE1vZHVsZVtcInBvc3RSdW5cIl0ubGVuZ3RoKXthZGRPblBvc3RSdW4oTW9kdWxlW1wicG9zdFJ1blwiXS5zaGlmdCgpKX19Y2FsbFJ1bnRpbWVDYWxsYmFja3MoX19BVFBPU1RSVU5fXyl9ZnVuY3Rpb24gYWRkT25QcmVSdW4oY2Ipe19fQVRQUkVSVU5fXy51bnNoaWZ0KGNiKX1mdW5jdGlvbiBhZGRPblBvc3RSdW4oY2Ipe19fQVRQT1NUUlVOX18udW5zaGlmdChjYil9YXNzZXJ0KE1hdGguaW11bCxcIlRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IE1hdGguaW11bCgpLCBidWlsZCB3aXRoIExFR0FDWV9WTV9TVVBQT1JUIG9yIFBPTFlGSUxMX09MRF9NQVRIX0ZVTkNUSU9OUyB0byBhZGQgaW4gYSBwb2x5ZmlsbFwiKTthc3NlcnQoTWF0aC5mcm91bmQsXCJUaGlzIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBNYXRoLmZyb3VuZCgpLCBidWlsZCB3aXRoIExFR0FDWV9WTV9TVVBQT1JUIG9yIFBPTFlGSUxMX09MRF9NQVRIX0ZVTkNUSU9OUyB0byBhZGQgaW4gYSBwb2x5ZmlsbFwiKTthc3NlcnQoTWF0aC5jbHozMixcIlRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IE1hdGguY2x6MzIoKSwgYnVpbGQgd2l0aCBMRUdBQ1lfVk1fU1VQUE9SVCBvciBQT0xZRklMTF9PTERfTUFUSF9GVU5DVElPTlMgdG8gYWRkIGluIGEgcG9seWZpbGxcIik7YXNzZXJ0KE1hdGgudHJ1bmMsXCJUaGlzIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBNYXRoLnRydW5jKCksIGJ1aWxkIHdpdGggTEVHQUNZX1ZNX1NVUFBPUlQgb3IgUE9MWUZJTExfT0xEX01BVEhfRlVOQ1RJT05TIHRvIGFkZCBpbiBhIHBvbHlmaWxsXCIpO3ZhciBNYXRoX2Ficz1NYXRoLmFiczt2YXIgTWF0aF9jZWlsPU1hdGguY2VpbDt2YXIgTWF0aF9mbG9vcj1NYXRoLmZsb29yO3ZhciBNYXRoX21pbj1NYXRoLm1pbjt2YXIgcnVuRGVwZW5kZW5jaWVzPTA7dmFyIHJ1bkRlcGVuZGVuY3lXYXRjaGVyPW51bGw7dmFyIGRlcGVuZGVuY2llc0Z1bGZpbGxlZD1udWxsO3ZhciBydW5EZXBlbmRlbmN5VHJhY2tpbmc9e307ZnVuY3Rpb24gZ2V0VW5pcXVlUnVuRGVwZW5kZW5jeShpZCl7dmFyIG9yaWc9aWQ7d2hpbGUoMSl7aWYoIXJ1bkRlcGVuZGVuY3lUcmFja2luZ1tpZF0pcmV0dXJuIGlkO2lkPW9yaWcrTWF0aC5yYW5kb20oKX1yZXR1cm4gaWR9ZnVuY3Rpb24gYWRkUnVuRGVwZW5kZW5jeShpZCl7cnVuRGVwZW5kZW5jaWVzKys7aWYoTW9kdWxlW1wibW9uaXRvclJ1bkRlcGVuZGVuY2llc1wiXSl7TW9kdWxlW1wibW9uaXRvclJ1bkRlcGVuZGVuY2llc1wiXShydW5EZXBlbmRlbmNpZXMpfWlmKGlkKXthc3NlcnQoIXJ1bkRlcGVuZGVuY3lUcmFja2luZ1tpZF0pO3J1bkRlcGVuZGVuY3lUcmFja2luZ1tpZF09MTtpZihydW5EZXBlbmRlbmN5V2F0Y2hlcj09PW51bGwmJnR5cGVvZiBzZXRJbnRlcnZhbCE9PVwidW5kZWZpbmVkXCIpe3J1bkRlcGVuZGVuY3lXYXRjaGVyPXNldEludGVydmFsKGZ1bmN0aW9uKCl7aWYoQUJPUlQpe2NsZWFySW50ZXJ2YWwocnVuRGVwZW5kZW5jeVdhdGNoZXIpO3J1bkRlcGVuZGVuY3lXYXRjaGVyPW51bGw7cmV0dXJufXZhciBzaG93bj1mYWxzZTtmb3IodmFyIGRlcCBpbiBydW5EZXBlbmRlbmN5VHJhY2tpbmcpe2lmKCFzaG93bil7c2hvd249dHJ1ZTtlcnIoXCJzdGlsbCB3YWl0aW5nIG9uIHJ1biBkZXBlbmRlbmNpZXM6XCIpfWVycihcImRlcGVuZGVuY3k6IFwiK2RlcCl9aWYoc2hvd24pe2VycihcIihlbmQgb2YgbGlzdClcIil9fSwxZTQpfX1lbHNle2VycihcIndhcm5pbmc6IHJ1biBkZXBlbmRlbmN5IGFkZGVkIHdpdGhvdXQgSURcIil9fWZ1bmN0aW9uIHJlbW92ZVJ1bkRlcGVuZGVuY3koaWQpe3J1bkRlcGVuZGVuY2llcy0tO2lmKE1vZHVsZVtcIm1vbml0b3JSdW5EZXBlbmRlbmNpZXNcIl0pe01vZHVsZVtcIm1vbml0b3JSdW5EZXBlbmRlbmNpZXNcIl0ocnVuRGVwZW5kZW5jaWVzKX1pZihpZCl7YXNzZXJ0KHJ1bkRlcGVuZGVuY3lUcmFja2luZ1tpZF0pO2RlbGV0ZSBydW5EZXBlbmRlbmN5VHJhY2tpbmdbaWRdfWVsc2V7ZXJyKFwid2FybmluZzogcnVuIGRlcGVuZGVuY3kgcmVtb3ZlZCB3aXRob3V0IElEXCIpfWlmKHJ1bkRlcGVuZGVuY2llcz09MCl7aWYocnVuRGVwZW5kZW5jeVdhdGNoZXIhPT1udWxsKXtjbGVhckludGVydmFsKHJ1bkRlcGVuZGVuY3lXYXRjaGVyKTtydW5EZXBlbmRlbmN5V2F0Y2hlcj1udWxsfWlmKGRlcGVuZGVuY2llc0Z1bGZpbGxlZCl7dmFyIGNhbGxiYWNrPWRlcGVuZGVuY2llc0Z1bGZpbGxlZDtkZXBlbmRlbmNpZXNGdWxmaWxsZWQ9bnVsbDtjYWxsYmFjaygpfX19TW9kdWxlW1wicHJlbG9hZGVkSW1hZ2VzXCJdPXt9O01vZHVsZVtcInByZWxvYWRlZEF1ZGlvc1wiXT17fTt2YXIgZGF0YVVSSVByZWZpeD1cImRhdGE6YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtO2Jhc2U2NCxcIjtmdW5jdGlvbiBpc0RhdGFVUkkoZmlsZW5hbWUpe3JldHVybiBTdHJpbmcucHJvdG90eXBlLnN0YXJ0c1dpdGg/ZmlsZW5hbWUuc3RhcnRzV2l0aChkYXRhVVJJUHJlZml4KTpmaWxlbmFtZS5pbmRleE9mKGRhdGFVUklQcmVmaXgpPT09MH12YXIgd2FzbUJpbmFyeUZpbGU9XCJkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsQUdGemJRRUFBQUFCbFFSQllBSi9md0JnQVg4QVlBTi9mMzhBWUFKL2Z3Ri9ZQU4vZjM4QmYyQUVmM3g4ZndCZ0EzOThmQUJnQm45OGZIeDhmd0JnQVg4QmYyQUNmMzhCZkdBR2YzeC9mMzkvQVg5Z0EzOStmd0YrWUFWL2YzOS9md0YvWUFoL2YzOS9mMzkvZndGL1lBWi9mMzkvZjM4QmYyQUVmMzkvZndGL1lBQUFZQVIvZjM5L0FHQUdmMzkvZjM5L0FHQUZmMzkvZjM4QVlBTi9mSDhCZjJBRmYzOS9mM3dCZjJBR2YzOS9mMzk4QVg5Z0IzOS9mMzkvZjM4QmYyQUZmMzkvZjM0QmYyQUZmM3g4Zkg4QVlBTi9mSDhBWUFWL2YzNS9md0JnQUFGL1lBRjhBWHhnQVg4QmZHQUlmMzkvZjM5L2YzOEFZQXAvZjM5L2YzOS9mMzkvQUdBSGYzOS9mMzkvZndCZ0EzOThmQUY4WUFSL2YzOThBR0FFZjN4L2Z3QmdCMzkvZkg5L2YzOEFZQVovZjM5OGYzOEJmMkFNZjM5L2YzOS9mMzkvZjM5L0FHQUlmSHg4Zkh4OGZId0JmMkFJZjM5OGYzOS9mMzhBWUFaL2YzeDhmSHdBWUFKOGZ3Ri9ZQUo4ZkFGL1lBUi9mMzkvQVg1Z0JIOS9mMzRCZm1BQ2YzNEFZQUo4ZkFGOFlBTi9mM3dBWUFOK2YzOEJmMkFDZm44QmYyQUNmSDhCZkdBRGYzOS9BWHhnQlg5L2YzOS9BWHhnQm45L2YzOS9md0Y4WUFKL2Z3RitZQU44Zkg4QmZHQUJmQUYvWUFOL2YzNEFZQXAvZjM5L2YzOS9mMzkvQVg5Z0RIOS9mMzkvZjM5L2YzOS9md0YvWUFOL2YzOEJmV0FMZjM5L2YzOS9mMzkvZjM4QmYyQVBmMzkvZjM5L2YzOS9mMzkvZjM5L0FBS0ZCVWtEWlc1MkFXSUFBUU5sYm5ZQll3QUNBMlZ1ZGdGa0FBZ0RaVzUyQVdVQUVBTmxibllCWmdBQ0EyVnVkZ0ZuQUJNRFpXNTJBV2dBSEFObGJuWUJhUUFCQTJWdWRnRnFBQjBEWlc1MkFXc0FDQU5sYm5ZQmJBQUlBMlZ1ZGdGdEFBRURaVzUyQVc0QUFBTmxibllCYndBQ0EyVnVkZ0Z3QUFNRFpXNTJBWEVBQVFObGJuWUJjZ0FCQTJWdWRnRnpBQUVEWlc1MkFYUUFBUU5sYm5ZQmRRQUJBMlZ1ZGdGMkFBZ0RaVzUyQVhjQUNBTmxibllCZUFBSUEyVnVkZ0Y1QUF3RFpXNTJBWG9BQXdObGJuWUJRUUFRQTJWdWRnRkNBQUVEWlc1MkFVTUFDQU5sYm5ZQlJBQUVBMlZ1ZGdGRkFCd0RaVzUyQVVZQUFBTmxibllCUndBQ0EyVnVkZ0ZJQUFFRFpXNTJBVWtBQUFObGJuWUJTZ0FUQTJWdWRnRkxBQU1EWlc1MkFVd0FBd05sYm5ZQlRRQURBMlZ1ZGdGT0FBRURaVzUyQVU4QUF3TmxibllCVUFBREEyVnVkZ0ZSQUFNRFpXNTJBVklBSEFObGJuWUJVd0FRQTJWdWRnRlVBQUVEWlc1MkFWVUFBUU5sYm5ZQlZnQUJBMlZ1ZGdGWEFBRURaVzUyQVZnQUFRTmxibllCV1FBQkEyVnVkZ0ZhQUFFRFpXNTJBVjhBQVFObGJuWUJKQUFCQTJWdWRnSmhZUUFCQTJWdWRnSmlZUUFCQTJWdWRnSmpZUUFCQTJWdWRnSmtZUUFCQTJWdWRnSmxZUUFCQTJWdWRnSm1ZUUFCQTJWdWRnSm5ZUUFCQTJWdWRnSm9ZUUFCQTJWdWRnSnBZUUFCQTJWdWRnSnFZUUFCQTJWdWRnSnJZUUFCQTJWdWRnSnNZUUFCQTJWdWRnSnRZUUFCQTJWdWRnSnVZUUFCQTJWdWRneGZYM1JoWW14bFgySmhjMlVEZndBRFpXNTJBV0VEZndBR1oyeHZZbUZzQTA1aFRnTjhBQVpuYkc5aVlXd0lTVzVtYVc1cGRIa0RmQUFEWlc1MkJtMWxiVzl5ZVFJQWdDZ0RaVzUyQlhSaFlteGxBWEFCcmdtdUNRUGtDZUlKQVFBQkFRQUNDQWdCQXdBQkF3TUFBd01CQUFBQUNBTUFBQWdJSEFnRUF3UURFQTRJQVFBSUFBQURBZ3dSRXdJSUFnSUVMQU1EQkFFSUx3QUlOQUFJQVFRQ0FBQWdEQU1ETUFBQ0Rnd01Ed0VEQkFNTkFnME9BQUlDRHdNQkF3SUFFUUFCQXdnQUFCMGRDQUlJQVFBRUFnQUNBVHc4Q0RNQ0JBMEVCQU1JQ0FNSUFSQUFCQUlEQWdFQU9UQVBEd01DRVFBaEFoRUNBUU1JQ0FJSUFBQUFBQWdJSVNFRUZ4Y0JBUUVEQVIwRENBOEFBQUlCQVFRQ0dCVVRBUUVFQ0JFSUFBTURBd2dJQ0JFQ0V3RUlERDBUQUFBOUV3QUFBUUVCQVRVSUNBd0lMUUVCQWhJQ0FRTUNKQU1JQUFFQ0FRd1BBZ0VTRHhJSUFBQUFCQU1BQ0FnREF3QVJBQWdBQWdBRENBQVJDQUlEQWdNRUNBTURCQUVBRXg4Q0h3SUJBUUVCQVFFTkFBZ0VRQ0JBSUQ4Q1B3QUFBUklCQVJNU0VoTVNFZ2doSVE0UExROFBMVDQxTlFRT0FnSURBZ01JQWdJQkFRRUJBUUVCQ0JFYkJBRWNBQUVCQVFFQkFSQWREenNFQXdFckFUUXdPQXcxTkFnRUF3TUNDQVF4TUMwSUxpNEVFQ3NDQWdJQ0FBQUJBUUFJSVJNUkJDZ1JBUUFBQWdJQUFnRURDQUFBQUFBUkFBQUJBZ0FCQUFBQ0hnTWJFQmNXRkJFQ0Z3Z0JBZ1FERHdNREFRQUVBQUFEQXdNUkR3NEFBZ01FRHc4REFBSUVBQUFBQXdBREFBTUNCQWdJQ0FBQUF3TURBd0FEQUFNQUFBQUFBZ0FBQXdBQUFnTUFBQU1BQUFNQkF3QUFBd0VDQkFBQkNBZ0lHUWNQQVFRQkFBZ1JFeElERVJNQkVnUVBFQUlBQWdJQUFRSUJBQndCSEJBUUVBRUJBQUlCQmdFUUVBd0VEd01FQXhvRUF3OFBEd1FBQUFBQkJRQUFBQWdJQVF3RUFnOEVBd1FEQVFFQkFRNE9CQXdORFFFSURBZ01EUTBNRGc0RURBME5FaElPRmc0V0lBSVhGeUFDRnhjU0Z4Y1JFeE1URWhFVEV4TVRFeE1RRUJBSUNBZ0lDQWdJRFE0T0RnNE9FUk1URXhJUkV4TVRFeE1URUJBUUNBZ0lDQWdJQVFnTkRnNE9EZzRCREJVVkdBd1lEQXdNRlJVWUFBd1lEQXdNREF3TUF3SU1EQXdNRGc0T0RnNE9EZzRPREF3TURBd01EQXdQQVFFQkRnRU9EZzRPRGc0T0RnRUVFUXdFRVF3QkF3Z0lBQU1JQ0FBREJBRUFBd1FBQVFFUUFRUUlCQUVFQ0FRQkFRRUlBd0VJRUJBUUVCQUJBQkFRRUJBUUFSQVFFQkFRRUJBUUFRSUNBUUVFQkE4TUJBTUVBUVFjSFRvQkR3SWNBd0FJQURBM05nUXpNZ1FBQWdvREFRUUVIQXNJQVNzcUFRQUJBUUVEQXdNQUF3SUlBUm9CQVFBcEFRRUpFUUVCQ0FNREh3Z0lId0FCRVJFSUFSRVRBZ0lBRVFJQUF3RUJFUkVSRVJFUkFSd1JFeElUQUFFQUFBRUFBUUFCRVJNUkFpRW5BUUVCQVFFQkFSTUJBUUVCQVFJU0pna0pKUUVSQXdFQkFRQVNFaU1SQWdBQUFnRUNDQUFCQVFBQUFBQUNBQUFCQXdNQkFRRUJFd0FDSWhFaEV4OEFFZ0lCQVFJSUFRQUNBQUFCRVJFQ0FCRWZBQUVCQUFBQkFRRUJFUklSQVFBQUFnQUJBd0FBQ0FNUkFRRUJBUU1RQ0JBUUVCUVVBd1FURVJvRkFSa0hCZ3NCQ2drQkFRQUJBUUVSRXhJRUFnRURBd01EQXdBQ0F3TURBUU1EQUFNQUFDRVhBUU1BQ0FBQ0JBQUVBQU1BQXdBQUVnNEFBZ1FBQWdRQUFBQURBd0lJQ0FnREF3QURCQUFBQUFBQ0JBQUFBZ0lBQUFNQUVRUUNBQU1BQWdRQUF3RUlBQU1EQXdNQUFnUUFBQUFEQXdNREFBQURBUUFUREFBUkR3QUNCQVFBQWdRQUFnQVJEd1FDQUFNQUFBRUlBQU1JQUFBUEFBUUFBZ0FBQ0FBUkFCRUJBd0lFQUJJREFCRUJCQUFFQkFBREFBSURBd0FFQUFNSUNBZ0NBUkFHRUFKL0FVSGdpQU1MZndGQjRJakRBZ3NIYVJJQ2IyRUFwQVlDY0dFQXpBUUNjV0VBbmdNQ2NtRUFwZ01DYzJFQWx3Y0NkR0VBMmdZQ2RXRUFuZ0lDZG1FQVF3SjNZUUJMQW5oaEFFb0NlV0VBWWdKNllRRHVDQUpCWVFEdENBSkNZUURoQmdKRFlRQ2tDZ0pFWVFDc0NBSkZZUUNVQndKR1lRRFVCd25XRGdFQUl3QUxyZ25xQ1BrSCtBZXhCMlp5Z1FGeWNuSnljb0VCZ1FGeWdRRnljbktCQVlFQmNvRUJjdDREckFLQkFZRUJnUUhlQTZ3Q2NuSnlnUUZ5Z1FGeW1RZlhCbjUrbVFQU0JuNSttUVBPQm84RGp3UEFCcjhHdkFhN0J2d0M4QVh1QmUwRjdBWHJCZW9GNlFYOEF0TUYwZ1hSQmRBRnp3WE9CYzBGNUFIa0FYN2tBZVFCZnVNQjR3Ris0d0hqQVg1K2Z1Y0NvZ1Yrb0FXTEJZb0ZyQUtCQVk0Q2pnS09BbjUrNXdLNkI3a0h6Z08xQjg0RFptWm1abVptWm1abVptWm1abVptWm1abVptWm1abVptWm1abVptYnpBOXdJMndqekEra0lrZ2Qza3dmZENNOEltQWlaQ04wRHF3TGRBNnNDN1FIdEFlMEI3UUhHQnNJR3ZnYTZCcFFGa2dXckF2MEUrZ1Q0QklVQ2hRS0ZBc0VFMEFMUUFxWUVwUVNrQktNRTF3bldDZFVKMUFuN0E3OEJ2d0g3QTZVSnBBbS9BYjhCdndHL0FiY0h0Z2QzZDNkM2QzZDNkM2QzZDNkM2Q3MEJ3Z09XQjVVSGpBZWNBOU1HMFFhY0E4OEd6UWJIQnNNR3RnYXpCdWdDNkFLVEJaRUZqZ1dCQmZ3RStRVDJCTm9FOUFqOUJyMEJ2UUc5QWIwQnZRRzJBcEFGZ0FYL0JQNEU5d1MyQXJZQyt3R0NCb0VHK2dYNUJmc0Ird0g3QVlnQnVBYTFCb2dHaHdhRkJvQUcvd1grQmZ3RitBV1BBcW9Gb3dXaEJZMEY5UVNQQXFZRmp3S2NCWWdCaUFHSUFZZ0JpQUdJQVlnQmlBR0lBWWdCaUFIeUE3SUZzQVh5QTJXeEJyQUdyd2F1Qm9rRGlRT3RCcXdHcXdhcUJxZ0dtd2FhQnBrR21BYi9BdjhDbHdhV0JwVUdsQWFUQnZZRjlRWDBCZk1GOGdYWkJkZ0Yxd1hXQmRVRnNRV3ZCV1ZsWldWbFpXVmxaV1ZsWldWbFpXVmxaV1ZsWldWbFpXVmxaV1ZsOFFPOUJid0Z1Z1c1QmJZRnRRWHhBN3dCOFFYVUJhd0Zxd1dsQmFRRjVRTGxBcDRGblFXOEFid0J2QUc4QWJ3QitnR0dCb01HL1FYN0Jmb0IrZ0g2QWVjSW1BZndBeXZjQlBBRFJyUUNzQUtqQ3RRSTVnUGJDWndJZ0FqN0IvSUgxUU9uQXJBQ2dRbTlCK1lEcFFHckI1b0hnUWZNQnZ3RzBBYjBCdFFHOEFiWkJ1Y0c0QWJFQnJJR3FRWjY5d1h2QlhxMUFaZ0Y1d1RpQk5nRXhnVENCR2RMbndHS0NmMEJud0haQVhxZkFmZ0RlcDhCMlFGNnJ3SCtBWHF2QWNjSmVxOEIvZ0Y2cndIMENmMEJyd0grQVhxdkFmNEJlcDhCK0FONjhBanZDT3dJNndqb0NPTUkwZ2pSQ0dkTG53SFpBWHFmQWRrQmV1a0R5Z2l2QVpjSS9RRy9DTDRJdXdqQkNNQUl1Z2l0Q0trSXFnaWZBYklJL1FGblMwdWRDSm9JbXdobmpnaWZBZGtCZXR3RC93ZitCL1FINkFmeEIra0g3Z2ZxQjl3RDdBZnJCKzBIOEFmekI5OEgzUWZhQjlVRHpBZXZCOHNIdEFld0I3TUhaMHZ1QWRVR25RT2JBcGdEbWdMc0Faa0Nsd09XQSt3Qm1RS1hBNVlENndHWUFwVURsQVByQVpnQ2xRT1VBNW9DbXdLYUFwc0NaMHU1Qm1kTFowdG5TMmRMWjB0blMyZEw5UUwwQXZVQzlBSm5TMmRMWjB0blMyZExaMHRuUzJkTFowdG5TMmRMUytRQ253WGpBcGNGNGdLVkJlRUNqQVhnQW9VRlMwdExTMHRuUzJkblMyZExzQUpMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFM2Y0dwZ1puUTBaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHUmtaR1JrWkdSa1pHNWdqeEJPVUl5d1RrQ01vRTRnaUdCZUVJK3dSUjZnUG9BNUlJaUFqcUErZ0RwUWVlQjVZQ2t3S3BBYWdCM2dUUUJMZ0VnZ1NBQktrQnFBRzdBcm9DcVFHb0Fha0JxQUc3QXJvQ3FRR29BWUlFZ0FTcEFhZ0JxUUdvQWJzQ3VnTE5DTXdJbGdLVEFza0lsZ2lWQ0wwSXZBaXhDTEFJalFpV0FwTUMyZ1BhQTl3SDJ3Zk1BY3dCeUFiRkJzRUd2UWFGQVlVQmhRSHhBcUlCb2dHRkFZVUJoUUh4QXFJQm9nR0ZBWVVCaFFId0FxSUJvZ0dGQVlVQmhRSHdBcUlCb2dITUFjd0JpUVdJQlljRmhBV0RCWUlGd0FUTUFiOEV1d1M2QkxjRXRBU3pCTEVFc0FTdUJJTUNxUVNpQktFRXlRS2FCSmdFbGdTVUJKRUV4d0tkQ3BzS3h3S1hDcFVLaWdTU0NvNEtpd3JKQW9VS2d3cUJDb0FLL2duOENma0pnd0wyQ2ZJSjhBbStBb01FNnducENlWUo0Z25mQ2R3SjJRblRDZElKemduSkNZTUN4UW5DQ2NBSnZnSzhDYm9KdVFtK0FvTUV0Z20xQ2JJSnNRbXZDYXdKb3dtaUNaNEptd21ZQ1pjSmxRbVRDWkVKamdtSENZWUpoQW44Q0pBSFVWRlJVVkZSVVZGUlVWRlJVVkZSVVZGUlVWRlJVVkZSVVZGUlVWRlJVVkZSVVZGUlVWRlJVVkZSVVZGUlVWRlJVVkZSVVZGUlVWRlJVVkZSVVZGUlVWRlJVVkZSVVZGUlVWRlIrUUdSQjQ4RjJ3UGJBL2tCK1FINUFlQUltZ09hQTdjR3RBYldCTklFOFFqZkNOY0Uwd1R5Q0xVQ3JnV3RCZGtFMUFUekNMVUN0UUx2QTVzRG13UHZBd3F5MmhUaUNkVU5BUWwvSUFCRkJFQVBDMEd3N3dJb0FnQWhCQ0FBUVhocUlnTWdBRUY4YWlnQ0FDSUFRWGh4SWdGcUlRVUNRQ0FBUVFGeEJFQWdBeUlBSVFJZ0FTRURCUUovSUFNb0FnQWhBaUFBUVFOeFJRUkFEd3NnQXlBQ2F5SUFJQVJKQkVBUEN5QUJJQUpxSVFOQnRPOENLQUlBSUFCR0JFQWdBQ0FGS0FJRUlnSkJBM0ZCQTBjTkFScEJxTzhDSUFNMkFnQWdCU0FDUVg1eE5nSUVJQUFnQTBFQmNqWUNCQXdEQ3lBQ1FRTjJJUVFnQWtHQUFra0VRQ0FBS0FJSUlnSWdBQ2dDRENJQlJnUkFRYUR2QWtHZzd3SW9BZ0JCQVNBRWRFRi9jM0UyQWdBRklBSWdBVFlDRENBQklBSTJBZ2dMSUFBTUFRc2dBQ2dDR0NFSElBQW9BZ3dpQWlBQVJnUkFBa0FnQUVFUWFpSUJRUVJxSWdRb0FnQWlBZ1JBSUFRaEFRVWdBU2dDQUNJQ1JRUkFRUUFoQWd3Q0N3c0RRQUpBSUFKQkZHb2lCQ2dDQUNJR1JRUkFJQUpCRUdvaUJDZ0NBQ0lHUlEwQkN5QUVJUUVnQmlFQ0RBRUxDeUFCUVFBMkFnQUxCU0FBS0FJSUlnRWdBallDRENBQ0lBRTJBZ2dMSUFjRWZ5QUFLQUljSWdGQkFuUkIwUEVDYWlJRUtBSUFJQUJHQkVBZ0JDQUNOZ0lBSUFKRkJFQkJwTzhDUWFUdkFpZ0NBRUVCSUFGMFFYOXpjVFlDQUNBQURBTUxCU0FIUVJCcUlnRWdCMEVVYWlBQktBSUFJQUJHR3lBQ05nSUFJQUFnQWtVTkFob0xJQUlnQnpZQ0dDQUFLQUlRSWdFRVFDQUNJQUUyQWhBZ0FTQUNOZ0lZQ3lBQUtBSVVJZ0VFUUNBQ0lBRTJBaFFnQVNBQ05nSVlDeUFBQlNBQUN3c2hBZ3NnQUNBRlR3UkFEd3NnQlNnQ0JDSUlRUUZ4UlFSQUR3c2dDRUVDY1FSQUlBVWdDRUYrY1RZQ0JDQUNJQU5CQVhJMkFnUWdBQ0FEYWlBRE5nSUFJQU1oQVFWQnVPOENLQUlBSUFWR0JFQkJyTzhDUWF6dkFpZ0NBQ0FEYWlJQU5nSUFRYmp2QWlBQ05nSUFJQUlnQUVFQmNqWUNCQ0FDUWJUdkFpZ0NBRWNFUUE4TFFiVHZBa0VBTmdJQVFhanZBa0VBTmdJQUR3dEJ0TzhDS0FJQUlBVkdCRUJCcU84Q1FhanZBaWdDQUNBRGFpSUROZ0lBUWJUdkFpQUFOZ0lBSUFJZ0EwRUJjallDQkF3Q0N5QUlRUU4ySVFZZ0NFR0FBa2tFUUNBRktBSUlJZ0VnQlNnQ0RDSUVSZ1JBUWFEdkFrR2c3d0lvQWdCQkFTQUdkRUYvYzNFMkFnQUZJQUVnQkRZQ0RDQUVJQUUyQWdnTEJRSkFJQVVvQWhnaENTQUZLQUlNSWdFZ0JVWUVRQUpBSUFWQkVHb2lCRUVFYWlJR0tBSUFJZ0VFUUNBR0lRUUZJQVFvQWdBaUFVVUVRRUVBSVFFTUFnc0xBMEFDUUNBQlFSUnFJZ1lvQWdBaUIwVUVRQ0FCUVJCcUlnWW9BZ0FpQjBVTkFRc2dCaUVFSUFjaEFRd0JDd3NnQkVFQU5nSUFDd1VnQlNnQ0NDSUVJQUUyQWd3Z0FTQUVOZ0lJQ3lBSkJFQWdCU2dDSENJRVFRSjBRZER4QW1vaUJpZ0NBQ0FGUmdSQUlBWWdBVFlDQUNBQlJRUkFRYVR2QWtHazd3SW9BZ0JCQVNBRWRFRi9jM0UyQWdBTUF3c0ZJQWxCRUdvaUJDQUpRUlJxSUFRb0FnQWdCVVliSUFFMkFnQWdBVVVOQWdzZ0FTQUpOZ0lZSUFVb0FoQWlCQVJBSUFFZ0JEWUNFQ0FFSUFFMkFoZ0xJQVVvQWhRaUJBUkFJQUVnQkRZQ0ZDQUVJQUUyQWhnTEN3c0xJQUlnQ0VGNGNTQURhaUlCUVFGeU5nSUVJQUFnQVdvZ0FUWUNBRUcwN3dJb0FnQWdBa1lFUUVHbzd3SWdBVFlDQUE4TEN5QUJRUU4ySVFNZ0FVR0FBa2tFUUNBRFFRTjBRY2p2QW1vaEFFR2c3d0lvQWdBaUFVRUJJQU4wSWdOeEJIOGdBRUVJYWlJRElRRWdBeWdDQUFWQm9POENJQUVnQTNJMkFnQWdBRUVJYWlFQklBQUxJUU1nQVNBQ05nSUFJQU1nQWpZQ0RDQUNJQU0yQWdnZ0FpQUFOZ0lNRHdzZ0FVRUlkaUlBQkg4Z0FVSC8vLzhIU3dSL1FSOEZJQUFnQUVHQS9qOXFRUkIyUVFoeElnUjBJZ05CZ09BZmFrRVFka0VFY1NFQUlBTWdBSFFpQmtHQWdBOXFRUkIyUVFKeElRTWdBVUVPSUFBZ0JISWdBM0pySUFZZ0EzUkJEM1pxSWdCQkIycDJRUUZ4SUFCQkFYUnlDd1ZCQUFzaUEwRUNkRUhROFFKcUlRQWdBaUFETmdJY0lBSkJBRFlDRkNBQ1FRQTJBaEJCcE84Q0tBSUFJZ1JCQVNBRGRDSUdjUVJBQWtBZ0FDZ0NBQ0lBS0FJRVFYaHhJQUZHQkVBZ0FDRURCUUpBSUFGQkFFRVpJQU5CQVhacklBTkJIMFliZENFRUEwQWdBRUVRYWlBRVFSOTJRUUowYWlJR0tBSUFJZ01FUUNBRVFRRjBJUVFnQXlnQ0JFRjRjU0FCUmcwQ0lBTWhBQXdCQ3dzZ0JpQUNOZ0lBSUFJZ0FEWUNHQ0FDSUFJMkFnd2dBaUFDTmdJSURBSUxDeUFES0FJSUlnQWdBallDRENBRElBSTJBZ2dnQWlBQU5nSUlJQUlnQXpZQ0RDQUNRUUEyQWhnTEJVR2s3d0lnQkNBR2NqWUNBQ0FBSUFJMkFnQWdBaUFBTmdJWUlBSWdBallDRENBQ0lBSTJBZ2dMUWNEdkFrSEE3d0lvQWdCQmYyb2lBRFlDQUNBQUJFQVBDMEhvOGdJaEFBTkFJQUFvQWdBaUEwRUlhaUVBSUFNTkFBdEJ3TzhDUVg4MkFnQVBDeUFBSUFOcUlBTTJBZ0FMRlFBZ0FDQUJOZ0lBSUFBZ0FSQjdJQUZxTmdJRUM1b0JBUU4vSXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBQ0FBS0FJQVFYUnFLQUlBYWlnQ0dBUkFJQUVnQUJDWEFpQUJMQUFBQkVBZ0FDQUFLQUlBUVhScUtBSUFhaWdDR0NJQ0tBSUFLQUlZSVFNZ0FpQURRZjhBY1VFRWFoRUlBRUYvUmdSQUlBQWdBQ2dDQUVGMGFpZ0NBR29pQUNJQ0lBSW9BaGhGSUFBb0FoQkJBWEp5TmdJUUN3c2dBUkRxQVFzZ0FTUUVDd1lBUVJBUU9ncytBUUYvSUFFb0FnUWdBU2dDQUdzaUFnUkFJQUFnQWhEWkFpQUFLQUlBSUFBb0FnUnFJQUVvQWdBZ0FoQytBUm9nQUNBQUtBSUVJQUpxTmdJRUN3dFJBQ0FBUVlBQ1NRUkFJQUlnQUVFQ2RFR2dzd0pxSWdBb0FnQTJBZ0FnQUNBQk5nSUFEd3NnQVNBQ0tBSUFJZ0pHQkVBUEN3TkFJQUVvQWdBaEFDQUJFRU1nQUNBQ1J3UkFJQUFoQVF3QkN3c0xPQUVDZnlBQVFRSjBRYUN6QW1vaUFpZ0NBQ0lCQkg4Z0FpQUJLQUlBTmdJQUlBRkJBRFlDQUNBQkJTQUNJQUJCLy84RGNSRFZDQXNMMkRVQkRIOGpCQ0VLSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFmVUJTUVJBUWFEdkFpZ0NBQ0lEUVJBZ0FFRUxha0Y0Y1NBQVFRdEpHeUlDUVFOMklnQjJJZ0ZCQTNFRVFDQUJRUUZ4UVFGeklBQnFJZ0ZCQTNSQnlPOENhaUlBS0FJSUlnSkJDR29pQlNnQ0FDSUVJQUJHQkVCQm9POENJQU5CQVNBQmRFRi9jM0UyQWdBRklBUWdBRFlDRENBQUlBUTJBZ2dMSUFJZ0FVRURkQ0lBUVFOeU5nSUVJQUFnQW1vaUFDQUFLQUlFUVFGeU5nSUVJQW9rQkNBRkR3c2dBa0dvN3dJb0FnQWlDVXNFZnlBQkJFQkJBaUFBZENJRVFRQWdCR3R5SUFFZ0FIUnhJZ0JCQUNBQWEzRkJmMm9pQUVFTWRrRVFjU0lCSUFBZ0FYWWlBRUVGZGtFSWNTSUJjaUFBSUFGMklnQkJBblpCQkhFaUFYSWdBQ0FCZGlJQVFRRjJRUUp4SWdGeUlBQWdBWFlpQUVFQmRrRUJjU0lCY2lBQUlBRjJhaUlFUVFOMFFjanZBbW9pQUNnQ0NDSUJRUWhxSWdjb0FnQWlCU0FBUmdSQVFhRHZBaUFEUVFFZ0JIUkJmM054SWdBMkFnQUZJQVVnQURZQ0RDQUFJQVUyQWdnZ0F5RUFDeUFCSUFKQkEzSTJBZ1FnQVNBQ2FpSURJQVJCQTNRaUJTQUNheUlFUVFGeU5nSUVJQUVnQldvZ0JEWUNBQ0FKQkVCQnRPOENLQUlBSVFJZ0NVRURkaUlGUVFOMFFjanZBbW9oQVNBQVFRRWdCWFFpQlhFRWZ5QUJRUWhxSVFnZ0FTZ0NDQVZCb084Q0lBQWdCWEkyQWdBZ0FVRUlhaUVJSUFFTElRQWdDQ0FDTmdJQUlBQWdBallDRENBQ0lBQTJBZ2dnQWlBQk5nSU1DMEdvN3dJZ0JEWUNBRUcwN3dJZ0F6WUNBQ0FLSkFRZ0J3OExRYVR2QWlnQ0FDSUxCSDhnQzBFQUlBdHJjVUYvYWlJQVFReDJRUkJ4SWdFZ0FDQUJkaUlBUVFWMlFRaHhJZ0Z5SUFBZ0FYWWlBRUVDZGtFRWNTSUJjaUFBSUFGMklnQkJBWFpCQW5FaUFYSWdBQ0FCZGlJQVFRRjJRUUZ4SWdGeUlBQWdBWFpxUVFKMFFkRHhBbW9vQWdBaUFDZ0NCRUY0Y1NBQ2F5RUhJQUFoQlFOQUFrQWdBQ2dDRUNJQkJFQWdBU0VBQlNBQUtBSVVJZ0JGRFFFTElBQW9BZ1JCZUhFZ0Ftc2lCQ0FIU1NFQklBUWdCeUFCR3lFSElBQWdCU0FCR3lFRkRBRUxDeUFDSUFWcUlnd2dCVXNFZnlBRktBSVlJUVlnQlNnQ0RDSUFJQVZHQkVBQ1FDQUZRUlJxSWdFb0FnQWlBRVVFUUNBRlFSQnFJZ0VvQWdBaUFFVUVRRUVBSVFBTUFnc0xBMEFDUUNBQVFSUnFJZ2dvQWdBaUJFVUVRQ0FBUVJCcUlnZ29BZ0FpQkVVTkFRc2dDQ0VCSUFRaEFBd0JDd3NnQVVFQU5nSUFDd1VnQlNnQ0NDSUJJQUEyQWd3Z0FDQUJOZ0lJQ3lBR0JFQUNRQ0FGS0FJY0lnRkJBblJCMFBFQ2FpSUVLQUlBSUFWR0JFQWdCQ0FBTmdJQUlBQkZCRUJCcE84Q0lBdEJBU0FCZEVGL2MzRTJBZ0FNQWdzRklBWkJFR29nQmtFVWFpQUdLQUlRSUFWR0d5QUFOZ0lBSUFCRkRRRUxJQUFnQmpZQ0dDQUZLQUlRSWdFRVFDQUFJQUUyQWhBZ0FTQUFOZ0lZQ3lBRktBSVVJZ0VFUUNBQUlBRTJBaFFnQVNBQU5nSVlDd3NMSUFkQkVFa0VRQ0FGSUFJZ0Iyb2lBRUVEY2pZQ0JDQUFJQVZxSWdBZ0FDZ0NCRUVCY2pZQ0JBVWdCU0FDUVFOeU5nSUVJQXdnQjBFQmNqWUNCQ0FISUF4cUlBYzJBZ0FnQ1FSQVFiVHZBaWdDQUNFQklBbEJBM1lpQWtFRGRFSEk3d0pxSVFBZ0EwRUJJQUowSWdKeEJIOGdBRUVJYWlFRElBQW9BZ2dGUWFEdkFpQUNJQU55TmdJQUlBQkJDR29oQXlBQUN5RUNJQU1nQVRZQ0FDQUNJQUUyQWd3Z0FTQUNOZ0lJSUFFZ0FEWUNEQXRCcU84Q0lBYzJBZ0JCdE84Q0lBdzJBZ0FMSUFva0JDQUZRUWhxRHdVZ0Fnc0ZJQUlMQlNBQ0N5RUFCU0FBUWI5L1N3UkFRWDhoQUFVQ1FDQUFRUXRxSWdGQmVIRWhBRUdrN3dJb0FnQWlDQVJBUVFBZ0FHc2hBZ0pBQWtBZ0FVRUlkaUlCQkg4Z0FFSC8vLzhIU3dSL1FSOEZJQUVnQVVHQS9qOXFRUkIyUVFoeElnUjBJZ05CZ09BZmFrRVFka0VFY1NFQklBQkJEaUFESUFGMElnTkJnSUFQYWtFUWRrRUNjU0lISUFFZ0JISnlheUFESUFkMFFROTJhaUlCUVFkcWRrRUJjU0FCUVFGMGNnc0ZRUUFMSWdaQkFuUkIwUEVDYWlnQ0FDSUJCRUFnQUVFQVFSa2dCa0VCZG1zZ0JrRWZSaHQwSVFSQkFDRURBMEFnQVNnQ0JFRjRjU0FBYXlJSElBSkpCRUFnQndSL0lBRWhBeUFIQlVFQUlRSWdBU0VEREFRTElRSUxJQVVnQVNnQ0ZDSUZJQVZGSUFVZ0FVRVFhaUFFUVI5MlFRSjBhaWdDQUNJSFJuSWJJUUVnQkVFQmRDRUVJQWNFUUNBQklRVWdCeUVCREFFTEN3VkJBQ0VCUVFBaEF3c2dBU0FEY2tVRVFDQUlRUUlnQm5RaUFVRUFJQUZyY25FaUFVVU5CRUVBSVFNZ0FVRUFJQUZyY1VGL2FpSUJRUXgyUVJCeElnUWdBU0FFZGlJQlFRVjJRUWh4SWdSeUlBRWdCSFlpQVVFQ2RrRUVjU0lFY2lBQklBUjJJZ0ZCQVhaQkFuRWlCSElnQVNBRWRpSUJRUUYyUVFGeElnUnlJQUVnQkhacVFRSjBRZER4QW1vb0FnQWhBUXNnQVEwQUlBSWhCUXdCQ3lBRElRUURmeUFCS0FJRVFYaHhJQUJySWdjZ0Fra2hCU0FISUFJZ0JSc2hBaUFCSUFRZ0JSc2hCQ0FCS0FJUUlnTkZCRUFnQVNnQ0ZDRURDeUFEQkg4Z0F5RUJEQUVGSUFJaEJTQUVDd3NoQXdzZ0F3UkFJQVZCcU84Q0tBSUFJQUJyU1FSQUlBQWdBMm9pQmlBRFN3UkFJQU1vQWhnaENTQURLQUlNSWdFZ0EwWUVRQUpBSUFOQkZHb2lBaWdDQUNJQlJRUkFJQU5CRUdvaUFpZ0NBQ0lCUlFSQVFRQWhBUXdDQ3dzRFFBSkFJQUZCRkdvaUJDZ0NBQ0lIUlFSQUlBRkJFR29pQkNnQ0FDSUhSUTBCQ3lBRUlRSWdCeUVCREFFTEN5QUNRUUEyQWdBTEJTQURLQUlJSWdJZ0FUWUNEQ0FCSUFJMkFnZ0xJQWtFUUFKQUlBTW9BaHdpQWtFQ2RFSFE4UUpxSWdRb0FnQWdBMFlFUUNBRUlBRTJBZ0FnQVVVRVFFR2s3d0lnQ0VFQklBSjBRWDl6Y1NJQk5nSUFEQUlMQlNBSlFSQnFJQWxCRkdvZ0NTZ0NFQ0FEUmhzZ0FUWUNBQ0FCUlFSQUlBZ2hBUXdDQ3dzZ0FTQUpOZ0lZSUFNb0FoQWlBZ1JBSUFFZ0FqWUNFQ0FDSUFFMkFoZ0xJQU1vQWhRaUFnUkFJQUVnQWpZQ0ZDQUNJQUUyQWhnTElBZ2hBUXNGSUFnaEFRc2dCVUVRU1FSQUlBTWdBQ0FGYWlJQVFRTnlOZ0lFSUFBZ0Eyb2lBQ0FBS0FJRVFRRnlOZ0lFQlFKQUlBTWdBRUVEY2pZQ0JDQUdJQVZCQVhJMkFnUWdCU0FHYWlBRk5nSUFJQVZCQTNZaEFpQUZRWUFDU1FSQUlBSkJBM1JCeU84Q2FpRUFRYUR2QWlnQ0FDSUJRUUVnQW5RaUFuRUVmeUFBUVFocUlRSWdBQ2dDQ0FWQm9POENJQUVnQW5JMkFnQWdBRUVJYWlFQ0lBQUxJUUVnQWlBR05nSUFJQUVnQmpZQ0RDQUdJQUUyQWdnZ0JpQUFOZ0lNREFFTElBVkJDSFlpQUFSL0lBVkIvLy8vQjBzRWYwRWZCU0FBSUFCQmdQNC9ha0VRZGtFSWNTSUNkQ0lFUVlEZ0gycEJFSFpCQkhFaEFDQUZRUTRnQkNBQWRDSUVRWUNBRDJwQkVIWkJBbkVpQ0NBQUlBSnljbXNnQkNBSWRFRVBkbW9pQUVFSGFuWkJBWEVnQUVFQmRISUxCVUVBQ3lJQ1FRSjBRZER4QW1vaEFDQUdJQUkyQWh3Z0JrRUFOZ0lVSUFaQkFEWUNFQ0FCUVFFZ0FuUWlCSEZGQkVCQnBPOENJQUVnQkhJMkFnQWdBQ0FHTmdJQUlBWWdBRFlDR0NBR0lBWTJBZ3dnQmlBR05nSUlEQUVMSUFBb0FnQWlBQ2dDQkVGNGNTQUZSZ1JBSUFBaEFRVUNRQ0FGUVFCQkdTQUNRUUYyYXlBQ1FSOUdHM1FoQWdOQUlBQkJFR29nQWtFZmRrRUNkR29pQkNnQ0FDSUJCRUFnQWtFQmRDRUNJQUVvQWdSQmVIRWdCVVlOQWlBQklRQU1BUXNMSUFRZ0JqWUNBQ0FHSUFBMkFoZ2dCaUFHTmdJTUlBWWdCallDQ0F3Q0N3c2dBU2dDQ0NJQUlBWTJBZ3dnQVNBR05nSUlJQVlnQURZQ0NDQUdJQUUyQWd3Z0JrRUFOZ0lZQ3dzZ0NpUUVJQU5CQ0dvUEN3c0xDd3NMQ3dKQUFrQkJxTzhDS0FJQUlnSWdBRThFUUVHMDd3SW9BZ0FoQVNBQ0lBQnJJZ1JCRDBzRVFFRzA3d0lnQUNBQmFpSUROZ0lBUWFqdkFpQUVOZ0lBSUFNZ0JFRUJjallDQkNBQklBSnFJQVEyQWdBZ0FTQUFRUU55TmdJRUJVR283d0pCQURZQ0FFRzA3d0pCQURZQ0FDQUJJQUpCQTNJMkFnUWdBU0FDYWlJQUlBQW9BZ1JCQVhJMkFnUUxEQUVMQWtCQnJPOENLQUlBSWdFZ0FFc0VRQXdCQzBINDhnSW9BZ0FFZjBHQTh3SW9BZ0FGUVlEekFrR0FJRFlDQUVIODhnSkJnQ0EyQWdCQmhQTUNRWDgyQWdCQmlQTUNRWDgyQWdCQmpQTUNRUUEyQWdCQjNQSUNRUUEyQWdCQitQSUNJQXBCY0hGQjJLclZxZ1Z6TmdJQVFZQWdDeUlDSUFCQkwyb2lDR29pQkVFQUlBSnJJZ2R4SWdVZ0FFMEVRQXdEQzBIWThnSW9BZ0FpQWdSQVFkRHlBaWdDQUNJRElBVnFJZ1lnQTAwZ0JpQUNTM0lFUUF3RUN3c2dBRUV3YWlFR0FrQUNRRUhjOGdJb0FnQkJCSEVFUUVFQUlRSUZBa0FDUUFKQVFianZBaWdDQUNJQ1JRMEFRZUR5QWlFREEwQUNRQ0FES0FJQUlna2dBazBFUUNBSklBTW9BZ1JxSUFKTERRRUxJQU1vQWdnaUF3MEJEQUlMQ3lBRUlBRnJJQWR4SWdKQi8vLy8vd2RKQkVBZ0FoQ3VBU0VCSUFFZ0F5Z0NBQ0FES0FJRWFrY05BaUFCUVg5SERRVUZRUUFoQWdzTUFndEJBQkN1QVNJQlFYOUdCSDlCQUFWQjBQSUNLQUlBSWdNZ0FVSDg4Z0lvQWdBaUFrRi9haUlFYWtFQUlBSnJjU0FCYTBFQUlBRWdCSEViSUFWcUlnSnFJUVFnQWtILy8vLy9CMGtnQWlBQVMzRUVmMEhZOGdJb0FnQWlCd1JBSUFRZ0EwMGdCQ0FIUzNJRVFFRUFJUUlNQlFzTElBRWdBaEN1QVNJRVJnMEZJQVFoQVF3Q0JVRUFDd3NoQWd3QkN5QUJRWDlISUFKQi8vLy8vd2RKY1NBR0lBSkxjVVVFUUNBQlFYOUdCRUJCQUNFQ0RBSUZEQVFMQUF0QmdQTUNLQUlBSWdRZ0NDQUNhMnBCQUNBRWEzRWlCRUgvLy8vL0IwOE5Ba0VBSUFKcklRTWdCQkN1QVVGL1JnUi9JQU1RcmdFYVFRQUZJQUlnQkdvaEFnd0RDeUVDQzBIYzhnSkIzUElDS0FJQVFRUnlOZ0lBQ3lBRlFmLy8vLzhIU1FSQUlBVVFyZ0VoQVVFQUVLNEJJZ1FnQVdzaUJTQUFRU2hxU3lFRElBVWdBaUFER3lFQ0lBTkJBWE1nQVVGL1JuSWdBVUYvUnlBRVFYOUhjU0FCSUFSSmNVRUJjM0pGRFFFTERBRUxRZER5QWtIUThnSW9BZ0FnQW1vaUJEWUNBQ0FFUWRUeUFpZ0NBRXNFUUVIVThnSWdCRFlDQUF0QnVPOENLQUlBSWdRRVFBSkFRZUR5QWlFREFrQUNRQU5BSUFNb0FnQWlCU0FES0FJRUlnaHFJQUZHRFFFZ0F5Z0NDQ0lERFFBTERBRUxJQU1vQWd4QkNIRkZCRUFnQlNBRVRTQUJJQVJMY1FSQUlBTWdBaUFJYWpZQ0JDQUVRUUFnQkVFSWFpSUJhMEVIY1VFQUlBRkJCM0ViSWdOcUlRRkJyTzhDS0FJQUlBSnFJZ1VnQTJzaEFrRzQ3d0lnQVRZQ0FFR3M3d0lnQWpZQ0FDQUJJQUpCQVhJMkFnUWdCQ0FGYWtFb05nSUVRYnp2QWtHSTh3SW9BZ0EyQWdBTUF3c0xDeUFCUWJEdkFpZ0NBRWtFUUVHdzd3SWdBVFlDQUFzZ0FTQUNhaUVJUWVEeUFpRURBa0FDUUFOQUlBTW9BZ0FnQ0VZTkFTQURLQUlJSWdNTkFBc01BUXNnQXlnQ0RFRUljVVVFUUNBRElBRTJBZ0FnQXlBREtBSUVJQUpxTmdJRUlBRkJBQ0FCUVFocUlnRnJRUWR4UVFBZ0FVRUhjUnRxSWdZZ0FHb2hCU0FJUVFBZ0NFRUlhaUlCYTBFSGNVRUFJQUZCQjNFYmFpSUNJQVpySUFCcklRTWdCaUFBUVFOeU5nSUVJQUlnQkVZRVFFR3M3d0pCck84Q0tBSUFJQU5xSWdBMkFnQkJ1TzhDSUFVMkFnQWdCU0FBUVFGeU5nSUVCUUpBUWJUdkFpZ0NBQ0FDUmdSQVFhanZBa0dvN3dJb0FnQWdBMm9pQURZQ0FFRzA3d0lnQlRZQ0FDQUZJQUJCQVhJMkFnUWdBQ0FGYWlBQU5nSUFEQUVMSUFJb0FnUWlDVUVEY1VFQlJnUkFJQWxCQTNZaEJDQUpRWUFDU1FSQUlBSW9BZ2dpQUNBQ0tBSU1JZ0ZHQkVCQm9POENRYUR2QWlnQ0FFRUJJQVIwUVg5emNUWUNBQVVnQUNBQk5nSU1JQUVnQURZQ0NBc0ZBa0FnQWlnQ0dDRUhJQUlvQWd3aUFDQUNSZ1JBQWtBZ0FrRVFhaUlCUVFScUlnUW9BZ0FpQUFSQUlBUWhBUVVnQWlnQ0VDSUFSUVJBUVFBaEFBd0NDd3NEUUFKQUlBQkJGR29pQ0NnQ0FDSUVSUVJBSUFCQkVHb2lDQ2dDQUNJRVJRMEJDeUFJSVFFZ0JDRUFEQUVMQ3lBQlFRQTJBZ0FMQlNBQ0tBSUlJZ0VnQURZQ0RDQUFJQUUyQWdnTElBZEZEUUFnQWlnQ0hDSUJRUUowUWREeEFtb2lCQ2dDQUNBQ1JnUkFBa0FnQkNBQU5nSUFJQUFOQUVHazd3SkJwTzhDS0FJQVFRRWdBWFJCZjNOeE5nSUFEQUlMQlNBSFFSQnFJQWRCRkdvZ0J5Z0NFQ0FDUmhzZ0FEWUNBQ0FBUlEwQkN5QUFJQWMyQWhnZ0FpZ0NFQ0lCQkVBZ0FDQUJOZ0lRSUFFZ0FEWUNHQXNnQWlnQ0ZDSUJSUTBBSUFBZ0FUWUNGQ0FCSUFBMkFoZ0xDeUFDSUFsQmVIRWlBR29oQWlBQUlBTnFJUU1MSUFJZ0FpZ0NCRUYrY1RZQ0JDQUZJQU5CQVhJMkFnUWdBeUFGYWlBRE5nSUFJQU5CQTNZaEFTQURRWUFDU1FSQUlBRkJBM1JCeU84Q2FpRUFRYUR2QWlnQ0FDSUNRUUVnQVhRaUFYRUVmeUFBUVFocUlRSWdBQ2dDQ0FWQm9POENJQUVnQW5JMkFnQWdBRUVJYWlFQ0lBQUxJUUVnQWlBRk5nSUFJQUVnQlRZQ0RDQUZJQUUyQWdnZ0JTQUFOZ0lNREFFTElBTkJDSFlpQUFSL0lBTkIvLy8vQjBzRWYwRWZCU0FBSUFCQmdQNC9ha0VRZGtFSWNTSUJkQ0lDUVlEZ0gycEJFSFpCQkhFaEFDQURRUTRnQWlBQWRDSUNRWUNBRDJwQkVIWkJBbkVpQkNBQUlBRnljbXNnQWlBRWRFRVBkbW9pQUVFSGFuWkJBWEVnQUVFQmRISUxCVUVBQ3lJQlFRSjBRZER4QW1vaEFDQUZJQUUyQWh3Z0JVRUFOZ0lVSUFWQkFEWUNFRUdrN3dJb0FnQWlBa0VCSUFGMElnUnhSUVJBUWFUdkFpQUNJQVJ5TmdJQUlBQWdCVFlDQUNBRklBQTJBaGdnQlNBRk5nSU1JQVVnQlRZQ0NBd0JDeUFBS0FJQUlnQW9BZ1JCZUhFZ0EwWUVRQ0FBSVFFRkFrQWdBMEVBUVJrZ0FVRUJkbXNnQVVFZlJodDBJUUlEUUNBQVFSQnFJQUpCSDNaQkFuUnFJZ1FvQWdBaUFRUkFJQUpCQVhRaEFpQUJLQUlFUVhoeElBTkdEUUlnQVNFQURBRUxDeUFFSUFVMkFnQWdCU0FBTmdJWUlBVWdCVFlDRENBRklBVTJBZ2dNQWdzTElBRW9BZ2dpQUNBRk5nSU1JQUVnQlRZQ0NDQUZJQUEyQWdnZ0JTQUJOZ0lNSUFWQkFEWUNHQXNMSUFva0JDQUdRUWhxRHdzTFFlRHlBaUVEQTBBQ1FDQURLQUlBSWdVZ0JFMEVRQ0FGSUFNb0FnUnFJZ1VnQkVzTkFRc2dBeWdDQ0NFRERBRUxDMEc0N3dKQkFDQUJRUWhxSWdOclFRZHhRUUFnQTBFSGNSc2lBeUFCYWlJSU5nSUFRYXp2QWlBQ1FWaHFJZ2NnQTJzaUF6WUNBQ0FJSUFOQkFYSTJBZ1FnQVNBSGFrRW9OZ0lFUWJ6dkFrR0k4d0lvQWdBMkFnQWdCRUVBSUFWQlVXb2lBMEVJYWlJSWEwRUhjVUVBSUFoQkIzRWJJQU5xSWdNZ0F5QUVRUkJxU1JzaUEwRWJOZ0lFSUFOQjRQSUNLUUlBTndJSUlBTkI2UElDS1FJQU53SVFRZUR5QWlBQk5nSUFRZVR5QWlBQ05nSUFRZXp5QWtFQU5nSUFRZWp5QWlBRFFRaHFOZ0lBSUFOQkdHb2hBUU5BSUFGQkJHb2lBa0VITmdJQUlBRkJDR29nQlVrRVFDQUNJUUVNQVFzTElBTWdCRWNFUUNBRElBTW9BZ1JCZm5FMkFnUWdCQ0FESUFScklnVkJBWEkyQWdRZ0F5QUZOZ0lBSUFWQkEzWWhBaUFGUVlBQ1NRUkFJQUpCQTNSQnlPOENhaUVCUWFEdkFpZ0NBQ0lEUVFFZ0FuUWlBbkVFZnlBQlFRaHFJUU1nQVNnQ0NBVkJvTzhDSUFJZ0EzSTJBZ0FnQVVFSWFpRURJQUVMSVFJZ0F5QUVOZ0lBSUFJZ0JEWUNEQ0FFSUFJMkFnZ2dCQ0FCTmdJTURBSUxJQVZCQ0hZaUFRUi9JQVZCLy8vL0Iwc0VmMEVmQlNBQklBRkJnUDQvYWtFUWRrRUljU0lDZENJRFFZRGdIMnBCRUhaQkJIRWhBU0FGUVE0Z0F5QUJkQ0lEUVlDQUQycEJFSFpCQW5FaUNDQUJJQUp5Y21zZ0F5QUlkRUVQZG1vaUFVRUhhblpCQVhFZ0FVRUJkSElMQlVFQUN5SUNRUUowUWREeEFtb2hBU0FFSUFJMkFod2dCRUVBTmdJVUlBUkJBRFlDRUVHazd3SW9BZ0FpQTBFQklBSjBJZ2h4UlFSQVFhVHZBaUFESUFoeU5nSUFJQUVnQkRZQ0FDQUVJQUUyQWhnZ0JDQUVOZ0lNSUFRZ0JEWUNDQXdDQ3lBQktBSUFJZ0VvQWdSQmVIRWdCVVlFUUNBQklRSUZBa0FnQlVFQVFSa2dBa0VCZG1zZ0FrRWZSaHQwSVFNRFFDQUJRUkJxSUFOQkgzWkJBblJxSWdnb0FnQWlBZ1JBSUFOQkFYUWhBeUFDS0FJRVFYaHhJQVZHRFFJZ0FpRUJEQUVMQ3lBSUlBUTJBZ0FnQkNBQk5nSVlJQVFnQkRZQ0RDQUVJQVEyQWdnTUF3c0xJQUlvQWdnaUFTQUVOZ0lNSUFJZ0JEWUNDQ0FFSUFFMkFnZ2dCQ0FDTmdJTUlBUkJBRFlDR0FzTEJVR3c3d0lvQWdBaUJFVWdBU0FFU1hJRVFFR3c3d0lnQVRZQ0FBdEI0UElDSUFFMkFnQkI1UElDSUFJMkFnQkI3UElDUVFBMkFnQkJ4TzhDUWZqeUFpZ0NBRFlDQUVIQTd3SkJmellDQUVIVTd3SkJ5TzhDTmdJQVFkRHZBa0hJN3dJMkFnQkIzTzhDUWREdkFqWUNBRUhZN3dKQjBPOENOZ0lBUWVUdkFrSFk3d0kyQWdCQjRPOENRZGp2QWpZQ0FFSHM3d0pCNE84Q05nSUFRZWp2QWtIZzd3STJBZ0JCOU84Q1FlanZBallDQUVIdzd3SkI2TzhDTmdJQVFmenZBa0h3N3dJMkFnQkIrTzhDUWZEdkFqWUNBRUdFOEFKQitPOENOZ0lBUVlEd0FrSDQ3d0kyQWdCQmpQQUNRWUR3QWpZQ0FFR0k4QUpCZ1BBQ05nSUFRWlR3QWtHSThBSTJBZ0JCa1BBQ1FZandBallDQUVHYzhBSkJrUEFDTmdJQVFaandBa0dROEFJMkFnQkJwUEFDUVpqd0FqWUNBRUdnOEFKQm1QQUNOZ0lBUWF6d0FrR2c4QUkyQWdCQnFQQUNRYUR3QWpZQ0FFRzA4QUpCcVBBQ05nSUFRYkR3QWtHbzhBSTJBZ0JCdlBBQ1FiRHdBallDQUVHNDhBSkJzUEFDTmdJQVFjVHdBa0c0OEFJMkFnQkJ3UEFDUWJqd0FqWUNBRUhNOEFKQndQQUNOZ0lBUWNqd0FrSEE4QUkyQWdCQjFQQUNRY2p3QWpZQ0FFSFE4QUpCeVBBQ05nSUFRZHp3QWtIUThBSTJBZ0JCMlBBQ1FkRHdBallDQUVIazhBSkIyUEFDTmdJQVFlRHdBa0hZOEFJMkFnQkI3UEFDUWVEd0FqWUNBRUhvOEFKQjRQQUNOZ0lBUWZUd0FrSG84QUkyQWdCQjhQQUNRZWp3QWpZQ0FFSDg4QUpCOFBBQ05nSUFRZmp3QWtIdzhBSTJBZ0JCaFBFQ1FmandBallDQUVHQThRSkIrUEFDTmdJQVFZenhBa0dBOFFJMkFnQkJpUEVDUVlEeEFqWUNBRUdVOFFKQmlQRUNOZ0lBUVpEeEFrR0k4UUkyQWdCQm5QRUNRWkR4QWpZQ0FFR1k4UUpCa1BFQ05nSUFRYVR4QWtHWThRSTJBZ0JCb1BFQ1FaanhBallDQUVHczhRSkJvUEVDTmdJQVFhanhBa0dnOFFJMkFnQkJ0UEVDUWFqeEFqWUNBRUd3OFFKQnFQRUNOZ0lBUWJ6eEFrR3c4UUkyQWdCQnVQRUNRYkR4QWpZQ0FFSEU4UUpCdVBFQ05nSUFRY0R4QWtHNDhRSTJBZ0JCelBFQ1FjRHhBallDQUVISThRSkJ3UEVDTmdJQVFianZBa0VBSUFGQkNHb2lCR3RCQjNGQkFDQUVRUWR4R3lJRUlBRnFJZ00yQWdCQnJPOENJQUpCV0dvaUFpQUVheUlFTmdJQUlBTWdCRUVCY2pZQ0JDQUJJQUpxUVNnMkFnUkJ2TzhDUVlqekFpZ0NBRFlDQUF0QnJPOENLQUlBSWdFZ0FFc0VRQXdDQ3d0QitPNENRUXcyQWdBTUFndEJyTzhDSUFFZ0FHc2lBallDQUVHNDd3SkJ1TzhDS0FJQUlnRWdBR29pQkRZQ0FDQUVJQUpCQVhJMkFnUWdBU0FBUVFOeU5nSUVDeUFLSkFRZ0FVRUlhZzhMSUFva0JFRUFDd1lBSUFBUVF3dC9BUVovQW44Q1FDQUFRWUFnYWlJRktBSUFJZ05CQkdvaUJpZ0NBQ0lISUFGQkQycEJjSEVpQW1vaUJFSDNIMHNFZnlBQ1FmZ2ZTd1IvSUFBZ0FoQytCQVVnQUJDOUJDQUZLQUlBSWdOQkJHb2lBQ2dDQUNJQklBSnFJUVFNQWdzRklBY2hBU0FHSVFBTUFRc01BUXNnQUNBRU5nSUFJQUVnQTBFSWFtb0xDMUlCQW44Z0FTZ0NBQ0lCS0FJRUlRSWdBU2dDQUNFRElBRUVRQ0FCUWRDekFpZ0NBRFlDQUVIUXN3SWdBVFlDQUFzZ0FpQUFRUmhxSUFJYklBTTJBZ0FnQTBFRWFpQUFRUnhxSUFNYklBSTJBZ0FMR2dBZ0FDd0FDMEVBU0FSQUlBQW9BZ2dhSUFBb0FnQVFRd3NMTlFFQmZ5QUFLQUlBSWdJZ0FDZ0NCRVlFZjBFQUJTQUNMUUFBSUFGQi93RnhSZ1IvSUFBZ0FrRUJhallDQUVFQkJVRUFDd3NMRFFBZ0FFSHdBbW9nQVJDcUNRc0dBRUVXRURNTGdBRUJCWDhqQkNFQ0l3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUFLQUlFSVFNZ0FrRUlhaUlFSWdVZ0FDZ0NBRFlDQUNBRklBTTJBZ1FnQWlBQktRSUFOd01BSUFKQkVHb2lBeUFDS1FJQU53SUFJQVFnQXhEQkFnUi9JQUFnQUNnQ0FDQUJLQUlFSUFFb0FnQnJhallDQUVFQkJVRUFDeUVHSUFJa0JDQUdDeUlCQVg4Q2Z5QUFLQUlBSVFJZ0FSQnBJUUVnQWdzb0FnZ2dBVUVDZEdvb0FnQUxPUUVCZnlBQUtBSUFJZ0FvQWdRaEFTQUFJQUZCZjJvMkFnUWdBVVVFUUNBQUtBSUFLQUlJSVFFZ0FDQUJRZjhEY1VHRUEyb1JBUUFMQzVNQkFRUi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FDd0FDeUlEUVFCSUlnUUVmeUFBS0FJRUJTQURRZjhCY1FzaUF5QUJTUVJBSUFBZ0FTQURheERoQkFVZ0JBUkFBbjhnQVNBQUtBSUFhaUVGSUFKQkFEb0FBQ0FGQ3lBQ0xBQUFPZ0FBSUFBZ0FUWUNCQVVnQWtFQU9nQUFJQUFnQVdvZ0Fpd0FBRG9BQUNBQUlBRTZBQXNMQ3lBQ0pBUUxSUUVCZnlBQUtBSUFLQUlRSVFJZ0FDQUJJQUpCL3dGeFFZNEhhaEVBQUNBQUxBQUZRUUZIQkVBZ0FDZ0NBQ2dDRkNFQ0lBQWdBU0FDUWY4QmNVR09CMm9SQUFBTEMxSUJBbjhnQVNnQ0FDSUJLQUlFSVFJZ0FTZ0NBQ0VESUFFRVFDQUJRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FUWUNBQXNnQWlBQVFTUnFJQUliSUFNMkFnQWdBMEVFYWlBQVFTaHFJQU1iSUFJMkFnQUxseVlCTFg4akJDRURJd1JCNEFKcUpBUWpCQ01GVGdSQVFlQUNFQUFMSUFOQndBSnFJUVVnQTBHNEFtb2hCaUFEUWJBQ2FpRUhJQU5CcUFKcUlRZ2dBMEdnQW1vaENTQURRUWhxSVFRZ0EwR1lBbW9oQ2lBRFFaQUNhaUVMSUFOQmlBSnFJUXdnQTBHQUFtb2hEU0FEUWZnQmFpRU9JQU5COEFGcUlROGdBMEhvQVdvaEVDQURRZUFCYWlFUklBTkIyQUZxSVJJZ0EwSFFBV29oRXlBRFFjZ0JhaUVVSUFOQndBRnFJUlVnQTBHNEFXb2hGaUFEUWJBQmFpRVhJQU5CcUFGcUlSZ2dBMEdnQVdvaEdTQURRWmdCYWlFYUlBTkJrQUZxSVJzZ0EwR0lBV29oSENBRFFZQUJhaUVkSUFOQitBQnFJUjRnQTBId0FHb2hIeUFEUWVnQWFpRWdJQU5CNEFCcUlTRWdBMEhZQUdvaElpQURRZEFBYWlFaklBTkJ5QUJxSVNRZ0EwRkFheUVsSUFOQk9Hb2hKaUFEUVRCcUlTY2dBMEVvYWlFb0lBTkJJR29oS1NBRFFSaHFJU29nQTBFUWFpRXJJQU5CeUFKcVFhdi9BUkJFSUFOQjBBSnFJZ0lnQXlrQ3lBSTNBZ0FnQTBIWUFtb2lMQ0FBSUFJUVVrRUJjVG9BQUNBQUtBSUVJQUFvQWdCclFRSkpCSDlCQUFVQ2Z3SkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQUNnQ0FDSUJMQUFBUVRGckRrUVNFaElTRWhJU0VoSVRFeE1URXhNVEV4TVRFeE1URXhNVEV4TUFFeE1URXhNVEV3RVRFeE1URXhNVEV4TVRFeE1ERXdRRkJnSUhFd2dURXdrS0N3d05EZzhRRVJNTElBQVF5d0lNRXdzZ0FCRERBUXdTQ3dKQUFrQUNRQ0FBS0FJRUlBQW9BZ0FpQW10QkFVc0VmeUFDTEFBQkJVRUFDMEVZZEVFWWRVSE1BR3NPSlFBQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdFQ0N5QUFLQUlFSUFBb0FnQWlBbXRCQWtzRWZ5QUNMQUFDQlVFQUMwRVlkRUVZZFVGUWFrRUtTUTBBREFFTElBQVF4Z0lNRWdzZ0FCQ2hDZ3dSQ3dKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQVN3QUFVSE9BR3NPTFFNSEJ3Y0hCQWNIQndjSEJ3Y0hCd2NIQndjQUJ3Y0JCd2NIQndjSEJ3Y0hBZ2NIQndjSEJRY0hCd2NIQmdjTElBQWdBVUVDYWpZQ0FDQUZRZWI1QVJCRUlBSWdCU2tDQURjQ0FDQUFJQUlRWXd3WEN5QUFJQUZCQW1vMkFnQWdCa0hrK1FFUVJDQUNJQVlwQWdBM0FnQWdBQ0FDRUtZQkRCWUxJQUFnQVVFQ2FqWUNBQ0FIUWVUNUFSQkVJQUlnQnlrQ0FEY0NBQ0FBSUFJUVl3d1ZDeUFBSUFGQkFtbzJBZ0FnQ0VHdS93RVFSQ0FDSUFncEFnQTNBZ0FnQUNBQ0VHTU1GQXNnQUNBQlFRSnFOZ0lBSUFsQnNmOEJFRVFnQWlBSktRSUFOd0lBSUFBZ0FoQmpEQk1MSUFBZ0FVRUNhallDQUNBQ0lBQVFYU0lCTmdJQUlBRUVmeUFBUWJQL0FTQUNFTEVCQlVFQUN3d1NDeUFBSUFGQkFtbzJBZ0FnQWlBQUVGZ2lBVFlDQUNBQkJIOGdBRUd6L3dFZ0FoQ3hBUVZCQUFzTUVRdEJBQXdRQ3dKQUFrQUNRQUpBQWtBQ1FDQUJMQUFCUWVNQWF3NFVBQVVGQlFVRkJRVUZBUUlGQXdVRkJRVUZCUVFGQ3lBQUlBRkJBbW8yQWdBZ0FpQUFFRjBpQVRZQ0FDQUJCSDhnQkNBQUVGZ2lBVFlDQUNBQkJIOGdBRUh3QW1vZ0FpQUVFT1VKQlVFQUN3VkJBQXNNRkFzZ0FDQUJRUUpxTmdJQUlBSWdBQkJZSWdFMkFnQWdBUVIvQW44Z0FFRUlhaUlCSWdVb0FnUWdCU2dDQUd0QkFuVWhCUUpBQTBBZ0FFSEZBQkJQRFFFZ0JDQUFFRmdpQmpZQ0FDQUdCRUFnQVNBRUVHZ01BUXNMUVFBTUFRc2dCQ0FBSUFVUWN5QUFRZkFDYWlBQ0lBUVE2QWtMQlVFQUN3d1RDeUFBSUFGQkFtbzJBZ0FnQ2tHOS93RVFSQ0FDSUFvcEFnQTNBZ0FnQUNBQ0VHTU1FZ3NnQUNBQlFRSnFOZ0lBSUF0QnYvOEJFRVFnQWlBTEtRSUFOd0lBSUFBZ0FoQ21BUXdSQ3lBQUVLQUtEQkFMUVFBTUR3c0NRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQ0FCTEFBQlFkWUFhdzRoQ0FrSkNRa0pDUWtKQ1FrQUNRRUpBZ2tKQ1FrSkNRTUpCQWtKQ1FrRkJna0hDUXNnQUNBQlFRSnFOZ0lBSUFJZ0FCQllJZ0UyQWdBZ0FRUi9JQVJCQVRvQUFDQUFJQUlnTENBRUVJOEVCVUVBQ3d3WEN5QUFJQUZCQW1vMkFnQWdBaUFBRUYwaUFUWUNBQ0FCQkg4Z0JDQUFFRmdpQVRZQ0FDQUJCSDhnQUVId0Ftb2dBaUFFRU80SkJVRUFDd1ZCQUFzTUZnc2dBQ0FCUVFKcU5nSUFJQXhCcC9vQkVFUWdBaUFNS1FJQU53SUFJQUFnQWhDbUFRd1ZDeUFBSUFGQkFtbzJBZ0FnQWlBQUVGZ2lBVFlDQUNBQkJIOGdCRUVBT2dBQUlBQWdBaUFzSUFRUWp3UUZRUUFMREJRTElBQVFnZ0lNRXdzZ0FDQUJRUUpxTmdJQUlBSWdBQkJZSWdFMkFnQWdBUVIvSUFRZ0FCQllJZ0UyQWdBZ0FRUi9JQUFnQWtIQi93RWdCQkNPQkFWQkFBc0ZRUUFMREJJTElBQWdBVUVDYWpZQ0FDQUNJQUFRV0NJQk5nSUFJQUVFZnlBRUlBQVFXQ0lCTmdJQUlBRUVmeUFBUWZBQ2FpQUNJQVFRL1FrRlFRQUxCVUVBQ3d3UkN5QUFJQUZCQW1vMkFnQWdEVUhFL3dFUVJDQUNJQTBwQWdBM0FnQWdBQ0FDRUdNTUVBc2dBQ0FCUVFKcU5nSUFJQTVCeHY4QkVFUWdBaUFPS1FJQU53SUFJQUFnQWhCakRBOExRUUFNRGdzQ1FBSkFBa0FDUUNBQkxBQUJRYzhBYXc0akFRTURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01BQXdJREN5QUFJQUZCQW1vMkFnQWdEMEhKL3dFUVJDQUNJQThwQWdBM0FnQWdBQ0FDRUdNTUVBc2dBQ0FCUVFKcU5nSUFJQkJCeS84QkVFUWdBaUFRS1FJQU53SUFJQUFnQWhCakRBOExJQUFnQVVFQ2FqWUNBQ0FSUWM3L0FSQkVJQUlnRVNrQ0FEY0NBQ0FBSUFJUVl3d09DMEVBREEwTEFrQUNRQUpBSUFFc0FBRkI1UUJyRGhBQUFnSUNBZ0lDQWdJQ0FnSUNBZ0lCQWdzZ0FDQUJRUUpxTmdJQUlCSkIwZjhCRUVRZ0FpQVNLUUlBTndJQUlBQWdBaEJqREE0TElBQWdBVUVDYWpZQ0FDQVRRYTM2QVJCRUlBSWdFeWtDQURjQ0FDQUFJQUlRWXd3TkMwRUFEQXdMQWtBQ1FBSkFJQUVzQUFGQjdBQnJEZzBDQVFFQkFRRUJBUUVCQVFFQUFRc2dBQ0FCUVFKcU5nSUFJQUlnQUJCWUlnRTJBZ0FnQVFSL0lBUWdBQkJZSWdFMkFnQWdBUVIvSUFCQjhBSnFRUkFRVENJQUlBSW9BZ0FnQkNnQ0FCRC9DU0FBQlVFQUN3VkJBQXNNRFF0QkFBd01DeUFBSUFGQkFtbzJBZ0FnQUVFSWFpSUJJZ1VvQWdRZ0JTZ0NBR3RCQW5VaEJRSkFBMEFnQUVIRkFCQlBEUUVnQWlBQUVOd0JJZ1kyQWdBZ0JnUkFJQUVnQWhCb0RBRUxDMEVBREF3TElBUWdBQ0FGRUhNZ0FFSHdBbW9nQkJDSUNnd0xDd0pBQWtBQ1FBSkFBa0FnQVN3QUFVSFRBR3NPSWdJRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFBRUJBUUVCQVFFQkFRRUJBUUVBUU1FQ3lBQUlBRkJBbW8yQWdBZ0ZFSFUvd0VRUkNBQ0lCUXBBZ0EzQWdBZ0FDQUNFR01NRGdzZ0FDQUJRUUpxTmdJQUlCVkIxLzhCRUVRZ0FpQVZLUUlBTndJQUlBQWdBaEJqREEwTElBQWdBVUVDYWpZQ0FDQVdRZHIvQVJCRUlBSWdGaWtDQURjQ0FDQUFJQUlRWXd3TUN5QUFJQUZCQW1vMkFnQWdGMEdZK3dFUVJDQUNJQmNwQWdBM0FnQWdBQ0FDRUdNTUN3dEJBQXdLQ3dKQUFrQUNRQUpBQWtBQ1FDQUJMQUFCUWNrQWF3NGxBUVVGQXdVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVQUJRVUNCQVVMSUFBZ0FVRUNhallDQUNBWVFiMytBUkJFSUFJZ0dDa0NBRGNDQUNBQUlBSVFZd3dPQ3lBQUlBRkJBbW8yQWdBZ0dVSGUvd0VRUkNBQ0lCa3BBZ0EzQWdBZ0FDQUNFR01NRFFzZ0FDQUJRUUpxTmdJQUlCcEJwL29CRUVRZ0FpQWFLUUlBTndJQUlBQWdBaEJqREF3TElBQWdBVUVDYWpZQ0FDQWJRZUgvQVJCRUlBSWdHeWtDQURjQ0FDQUFJQUlRWXd3TEN5QUFJQUZCQW1vMkFnQWdBRUhmQUJCUEJFQWdIRUhrL3dFUVJDQUNJQndwQWdBM0FnQWdBQ0FDRUtZQkRBc0xJQUlnQUJCWUlnRTJBZ0FnQVFSL0lBQWdBa0hrL3dFUWpRUUZRUUFMREFvTFFRQU1DUXNDUUFKQUFrQUNRQUpBQWtBZ0FTd0FBVUhoQUdzT0dBQUZCUVVCQlFJRkJRVUZCUVVGQlFVRkJRVURCUVVBQkFVTElBQVFud29NRFFzZ0FDQUJRUUpxTmdJQUlCMUI1LzhCRUVRZ0FpQWRLUUlBTndJQUlBQWdBaEJqREF3TElBQWdBVUVDYWpZQ0FDQWVRYjMrQVJCRUlBSWdIaWtDQURjQ0FDQUFJQUlRcGdFTUN3c2dBQ0FCUVFKcU5nSUFJQjlCNnY4QkVFUWdBaUFmS1FJQU53SUFJQUFnQWhDbUFRd0tDeUFBSUFGQkFtbzJBZ0FnQWlBQUVGZ2lBVFlDQUNBQkJIOGdBRUh3QW1vZ0FoQ05DZ1ZCQUFzTUNRdEJBQXdJQ3dKQUFrQUNRQUpBQWtBZ0FTd0FBVUhTQUdzT0lRTUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUFBUVFFQWdRTElBQVFnZ0lNQ3dzZ0FDQUJRUUpxTmdJQUlDQkI3UDhCRUVRZ0FpQWdLUUlBTndJQUlBQWdBaEJqREFvTElBQWdBVUVDYWpZQ0FDQWhRZS8vQVJCRUlBSWdJU2tDQURjQ0FDQUFJQUlRWXd3SkN5QUFJQUZCQW1vMkFnQWdJa0h4L3dFUVJDQUNJQ0lwQWdBM0FnQWdBQ0FDRUdNTUNBdEJBQXdIQ3dKQUFrQUNRQUpBQWtBQ1FBSkFJQUVzQUFGQnpBQnJEaWtDQmdZR0JnWUdCZ1lHQmdZR0JnWUdCZ1lHQmdZR0JnWUdCZ1lHQmdZR0JnRUFCZ1lEQmdZRUJRWUxJQUFnQVVFQ2FqWUNBQ0FqUWZUL0FSQkVJQUlnSXlrQ0FEY0NBQ0FBSUFJUVl3d01DeUFBSUFGQkFtbzJBZ0FnSkVINC93RVFSQ0FDSUNRcEFnQTNBZ0FnQUNBQ0VHTU1Dd3NnQUNBQlFRSnFOZ0lBSUNWQit2OEJFRVFnQWlBbEtRSUFOd0lBSUFBZ0FoQmpEQW9MSUFBZ0FVRUNhallDQUNBQVFkOEFFRThFUUNBbVFmMy9BUkJFSUFJZ0ppa0NBRGNDQUNBQUlBSVFwZ0VNQ2dzZ0FpQUFFRmdpQVRZQ0FDQUJCSDhnQUNBQ1FmMy9BUkNOQkFWQkFBc01DUXNnQUNBQlFRSnFOZ0lBSUNkQitQOEJFRVFnQWlBbktRSUFOd0lBSUFBZ0FoQ21BUXdJQ3lBQUlBRkJBbW8yQWdBZ0FpQUFFRmdpQVRZQ0FDQUJCSDhnQkNBQUVGZ2lBVFlDQUNBQkJIOGdBQ0FDUVlDQUFpQUVFSTRFQlVFQUN3VkJBQXNNQnd0QkFBd0dDMEVBSUFFc0FBRkI5UUJIRFFVYUlBQWdBVUVDYWpZQ0FDQUNJQUFRV0NJQk5nSUFJQUVFZnlBRUlBQVFXQ0lCTmdJQUlBRUVmeUFESUFBUVdDSUJOZ0lBSUFFRWZ5QUFRZkFDYWtFVUVFd2lBQ0FDS0FJQUlBUW9BZ0FnQXlnQ0FCQ1BDaUFBQlVFQUN3VkJBQXNGUVFBTERBVUxBa0FDUUFKQUFrQUNRQUpBSUFFc0FBRkJ6UUJyRGljQ0JRVUZCUVVFQlFVRkJRVUZCUVVGQlFVRkJRVUZBQVVGQlFVRkJRVUZCUUVGQlFVRkJRTUZDeUFBSUFGQkFtbzJBZ0FnQWlBQUVGMGlBVFlDQUNBQkJIOGdCQ0FBRUZnaUFUWUNBQ0FCQkg4Z0FFSHdBbW9nQWlBRUVKRUtCVUVBQ3dWQkFBc01DUXNnQUNBQlFRSnFOZ0lBSUNoQmc0QUNFRVFnQWlBb0tRSUFOd0lBSUFBZ0FoQmpEQWdMSUFBZ0FVRUNhallDQUNBcFFZV0FBaEJFSUFJZ0tTa0NBRGNDQUNBQUlBSVFZd3dIQ3lBQUlBRkJBbW8yQWdBZ0trR0lnQUlRUkNBQ0lDb3BBZ0EzQWdBZ0FDQUNFR01NQmdzZ0FDQUJRUUpxTmdJQUlDdEJpNEFDRUVRZ0FpQXJLUUlBTndJQUlBQWdBaEJqREFVTFFRQU1CQXNDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUVzQUFGQjBBQnJEaXNHQndjSEJ3Y0hCd2NIQlFjSEJ3Y0hCd2NIQUFjSEJ3Y0hCd2NIQndjSEJ3RUhBZ2NEQndjSEJ3Y0VCd3NnQUNBQlFRSnFOZ0lBSUFJZ0FCQmRJZ0UyQWdBZ0FRUi9JQVFnQUJCWUlnRTJBZ0FnQVFSL0lBQkI4QUpxSUFJZ0JCQ1RDZ1ZCQUFzRlFRQUxEQW9MSUFBZ0FVRUNhallDQUNBQ0lBQVFXQ0lCTmdJQUlBRUVmeUFBSUFJUTFRSUZRUUFMREFrTElBQVFnZ0lNQ0FzZ0FDQUJRUUpxTmdJQUlBSWdBQkJkSWdFMkFnQWdBUVIvSUFCQmo0QUNJQUlRc1FFRlFRQUxEQWNMSUFBZ0FVRUNhallDQUNBQ0lBQVFXQ0lCTmdJQUlBRUVmeUFBUVkrQUFpQUNFTEVCQlVFQUN3d0dDeUFBSUFGQkFtbzJBZ0FDUUFKQUFrQWdBQ2dDQkNBQUtBSUFJZ0ZyUVFCTEJIOGdBU3dBQUFWQkFBdEJHSFJCR0hWQjFBQnJEaE1BQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lCQWdzZ0FpQUFFTU1CSWdFMkFnQWdBUVIvSUFCQjhBSnFJQUlRbGdvRlFRQUxEQWNMSUFJZ0FCREdBaUlCTmdJQUlBRUVmeUFBSUFJUWpBUUZRUUFMREFZTFFRQU1CUXNnQUNBQlFRSnFOZ0lBSUFCQkNHb2lBU0lGS0FJRUlBVW9BZ0JyUVFKMUlRVUNRQU5BSUFCQnhRQVFUdzBCSUFJZ0FCREJBU0lHTmdJQUlBWUVRQ0FCSUFJUWFBd0JDd3RCQUF3RkN5QUVJQUFnQlJCeklBSWdBRUh3QW1vZ0JCQ2FDallDQUNBQUlBSVFqQVFNQkF0QkFBd0RDd0pBQWtBQ1FBSkFBa0FDUUNBQkxBQUJRZVVBYXc0VEFBVUZCUUVGQlFJRkJRVUZCUU1GQlFVRkJBVUxJQUFnQVVFQ2FqWUNBQ0FDSUFBUVdDSUJOZ0lBSUFFRWZ5QUFRWmlBQWlBQ0VMRUJCVUVBQ3d3SEN5QUFJQUZCQW1vMkFnQWdBaUFBRUYwaUFUWUNBQ0FCQkg4Z0FFR1lnQUlnQWhDeEFRVkJBQXNNQmdzZ0FDQUJRUUpxTmdJQUlBSWdBQkJkSWdFMkFnQWdBUVIvQW44Z0FFRUlhaUlCSWdVb0FnUWdCU2dDQUd0QkFuVWhCUUpBQTBBZ0FFSEZBQkJQRFFFZ0JDQUFFTndCSWdZMkFnQWdCZ1JBSUFFZ0JCQm9EQUVMQzBFQURBRUxJQVFnQUNBRkVITWdBRUh3QW1vZ0FpQUVFSndLQ3dWQkFBc01CUXNnQUNBQlFRSnFOZ0lBSUFCQm9ZQUNFRkFNQkFzZ0FDQUJRUUpxTmdJQUlBSWdBQkJZSWdFMkFnQWdBUVIvSUFCQjhBSnFJQUlRbmdvRlFRQUxEQU1MUVFBTUFnc2dBQkNDQWd3QkMwRUFDd3NoTFNBREpBUWdMUXRCQVFKL1FRd1FTU0VDSUFBb0Fod2hBeUFDUVFBMkFnQWdBaUFETmdJRUlBSWdBVFlDQ0NBRElBQkJHR29nQUNnQ0dCc2dBallDQUNBQUlBSTJBaHdnQWdzT0FDQUFJQUVnQVJDc0FSRGZCQXNOQUNBQUlBRWdBUkI3RU9NRUM4Y0JBZ04vQVg0Q1FBSkFJQUFwQTNBaUJFSUFVZ1JBSUFBcEEzZ2dCRmtOQVFzZ0FCQ2dBaUlDUVFCSURRQWdBQ2dDQ0NFQkFrQUNRQ0FBS1FOd0lnUkNBRkVOQUNBRUlBQXBBM2g5SWdRZ0FTQUFLQUlFSWdOcnJGVU5BQ0FBSUFNZ0JLZEJmMnBxTmdKb0RBRUxJQUVoQXlBQUlBRTJBbWdMSUFFRVFDQUFJQUFwQTNnZ0FVRUJhaUFBS0FJRUlnQnJySHczQTNnRklBQW9BZ1FoQUFzZ0FFRi9haUlBTFFBQUlBSkhCRUFnQUNBQ09nQUFDd3dCQ3lBQVFRQTJBbWhCZnlFQ0N5QUNDL1VSQVFaL0l3UWhCQ01FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNnQkVFSWFpRUNJQVJCRUdvaUEwRUFOZ0lBQW44Q1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFJQUFvQWdRZ0FDZ0NBQ0lCYTBFQVN3Ui9JQUVzQUFBRlFRQUxJZ0ZCR0hSQkdIVkJ3UUJyRGpvWkl4OFhJeGdnSXlNakFDTWFJeDRjSXgwaEd5SUFJeU1qSXlNakl5TWpJd1VEQkJJVEVSUUdDUW9qQ3d3UEVDTWpBQWNJRmdFQ0RRNFZJd3NnQVVIL0FYRkI4Z0JHSWdFaEFnSkFBa0FnQUNnQ0JDQUFLQUlBSWdWclFRSkJBU0FCR3lBQ0lBQW9BZ1FnQUNnQ0FDSUJheUFDU3dSL0lBRWdBbW9zQUFBRlFRQUxRZjhCY1VIV0FFWWJJZ0lnQUNnQ0JDQUFLQUlBSWdGcklBSkxCSDhnQVNBQ2Fpd0FBQVZCQUF0Qi93RnhRY3NBUm1vaUFpSUJTd1IvSUFFZ0JXb3NBQUFGUVFBTFFSaDBRUmgxUWNRQWF3NERBQ01CSXdzQ1FDQUFLQUlFSUFBb0FnQWlBV3NnQWtFQmFpSUNTd1IvSUFFZ0Ftb3NBQUFGUVFBTFFSaDBRUmgxUWM4QWF3NHFBQ01qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNQUl5TWpJeU1qSXdBQUl3c0xJQU1nQUJDSkFpSUNOZ0lBRENNTElBQWdBQ2dDQUVFQmFqWUNBQ0FBUWVqMEFSQlFEQ1FMSUFBZ0FDZ0NBRUVCYWpZQ0FDQUFRZkFDYWhDbkNRd2pDeUFBSUFBb0FnQkJBV28yQWdBZ0FFSHQ5QUVRVUF3aUN5QUFJQUFvQWdCQkFXbzJBZ0FnQUVIeTlBRVFVQXdoQ3lBQUlBQW9BZ0JCQVdvMkFnQWdBRUgzOUFFUVVBd2dDeUFBSUFBb0FnQkJBV28yQWdBZ0FFR0Q5UUVRVUF3ZkN5QUFJQUFvQWdCQkFXbzJBZ0FnQUVHUjlRRVFVQXdlQ3lBQUlBQW9BZ0JCQVdvMkFnQWdBRUdYOVFFUVVBd2RDeUFBSUFBb0FnQkJBV28yQWdBZ0FFR205UUVRVUF3Y0N5QUFJQUFvQWdCQkFXbzJBZ0FnQUVHcTlRRVFVQXdiQ3lBQUlBQW9BZ0JCQVdvMkFnQWdBRUczOVFFUVVBd2FDeUFBSUFBb0FnQkJBV28yQWdBZ0FFRzg5UUVRVUF3WkN5QUFJQUFvQWdCQkFXbzJBZ0FnQUVISzlRRVFVQXdZQ3lBQUlBQW9BZ0JCQVdvMkFnQWdBRUh3QW1vUXFBa01Gd3NnQUNBQUtBSUFRUUZxTmdJQUlBQkIxUFVCRUZBTUZnc2dBQ0FBS0FJQVFRRnFOZ0lBSUFCQjNmVUJFRkFNRlFzZ0FDQUFLQUlBUVFGcU5nSUFJQUJCNy9VQkVGQU1GQXNnQUNBQUtBSUFRUUZxTmdJQUlBQkI4QUpxRUtrSkRCTUxJQUFnQUNnQ0FFRUJhallDQUNBQVFmWDFBUkJRREJJTElBQWdBQ2dDQUVFQmFqWUNBQ0FBUVlIMkFSQlFEQkVMSUFBZ0FDZ0NBRUVCYWpZQ0FDQUFRWXoyQVJCUURCQUxJQUFnQUNnQ0FFRUJhallDQUNBQ0lBQVEzd0VnQWlnQ0FDQUNLQUlFUmdSL1FRQUZJQUFnQWhEV0Fnc01Ed3NDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFBb0FnUWdBQ2dDQUNJQmEwRUJTd1IvSUFFc0FBRUZRUUFMUVJoMFFSaDFRYzhBYXc0cURBME5EUTBKRFEwTkRRME5EUTBORFEwTkJnMEhBQUVDRFFNRURRME5EUWdNQ3cwTkJRa05DZ3dNRFFzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCa1BZQkVGQU1Hd3NnQUNBQUtBSUFRUUpxTmdJQUlBQkJtdllCRUZBTUdnc2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQnBmWUJFRkFNR1FzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCci9ZQkVGQU1HQXNnQUNBQUtBSUFRUUpxTmdJQUlBQkJ1ZllCRUZBTUZ3c2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQnd2WUJFRkFNRmdzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCeS9ZQkVGQU1GUXNnQUNBQUtBSUFRUUpxTmdJQUlBQkIwUFlCRUZBTUZBc2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQjMvWUJFRkFNRXdzZ0F5QUFFSWNDSWdJMkFnQU1FQXNnQXlBQUVNa0VJZ0kyQWdBTUR3c2dBQ0FBS0FJQVFRSnFOZ0lBSUFJZ0FCQmRJZ0UyQWdCQkFDQUJSUTBRR2lBRElBQWdBaERWQWpZQ0FBd1BDeUFESUFBUWlRSWlBallDQUF3TkMwRUFEQTRMSUFNZ0FCQ0pBaUlDTmdJQURBc0xJQU1nQUJESUJDSUNOZ0lBREFvTElBTWdBQkRIQkNJQ05nSUFEQWtMQWtBQ1FDQUFLQUlFSUFBb0FnQWlBV3RCQVVzRWZ5QUJMQUFCQlVFQUMwRVlkRUVZZFVIbEFHc09FUUFCQVFFQkFRRUJBUUVCQVFFQkFBRUFBUXNnQXlBQUVOUUNJZ0kyQWdBTUNRc2dBeUFBRU1NQklnRTJBZ0FnQVFSL0lBQXNBT2dDUlEwS0lBQW9BZ1FnQUNnQ0FDSUJhMEVBU3dSL0lBRXNBQUFGUVFBTFFmOEJjVUhKQUVjTkNpQUNJQUJCQUJDVkFTSUJOZ0lBUVFBZ0FVVU5DeG9nQXlBQUlBTWdBaENVQVRZQ0FBd0tCVUVBQ3d3S0N5QUFJQUFvQWdCQkFXbzJBZ0FnQWlBQUVGMGlBVFlDQUVFQUlBRkZEUWthSUFNZ0FFSHdBbW9nQWhDeUJEWUNBQXdJQ3lBQUlBQW9BZ0JCQVdvMkFnQWdBaUFBRUYwaUFUWUNBRUVBSUFGRkRRZ2FJQVJCQURZQ0FDQURJQUFnQWlBRUVOTUNOZ0lBREFjTElBQWdBQ2dDQUVFQmFqWUNBQ0FDSUFBUVhTSUJOZ0lBUVFBZ0FVVU5CeG9nQkVFQk5nSUFJQU1nQUNBQ0lBUVEwd0kyQWdBTUJnc2dBQ0FBS0FJQVFRRnFOZ0lBSUFJZ0FCQmRJZ0UyQWdCQkFDQUJSUTBHR2lBRElBQkI4QUpxSUFJUXRnUTJBZ0FNQlFzZ0FDQUFLQUlBUVFGcU5nSUFJQUlnQUJCZElnRTJBZ0JCQUNBQlJRMEZHaUFESUFCQjhBSnFJQUlRdVFRMkFnQU1CQXNDUUNBQUtBSUVJQUFvQWdBaUFXdEJBVXNFZnlBQkxBQUJCVUVBQzBFWWRFRVlkUTUxQWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDQUFzZ0FpQUFFTjRCSWdFMkFnQWdBUVIvSUFBc0FPZ0NCSDhnQUNnQ0JDQUFLQUlBSWdWclFRQkxCSDhnQlN3QUFBVkJBQXRCL3dGeFFja0FSZ1IvSUFRZ0FFRUFFSlVCSWdFMkFnQkJBQ0FCUlEwSEdpQURJQUFnQWlBRUVKUUJOZ0lBREFZRklBRUxCU0FCQ3dWQkFBc01CQXNnQXlBQUVJZ0NJZ0kyQWdBTUFRc2dBeUFBRU5RQ0lnSTJBZ0FMSUFJTkFFRUFEQUVMSUFCQmxBRnFJQU1RYUNBREtBSUFDeUVHSUFRa0JDQUdDMGdBUWNEVEFpd0FBRVVFUUVIQTB3SXNBQUJCQUVkQkFYTUVRRUd3K3dJUWhBYzJBZ0JCd05NQ1FRQTJBZ0JCd05NQ1FjRFRBaWdDQUVFQmNqWUNBQXNMUWJEN0FpZ0NBQXNWQUNBQVFRRWdBQnNRU2lJQUJIOGdBQVZCQUFzTG93SUJCbjhqQkNFREl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QURJQUFRbHdJQ1FDQURMQUFBUlEwQUlBTkJER29oQmlBRElBQWdBQ2dDQUVGMGFpSUZLQUlBYWlnQ0dEWUNDQ0FBSUFVb0FnQnFJZ1VvQWdRaEJ5QUZLQUpNSWdSQmYwWUVRQ0FHSUFVb0Fod2lCRFlDQUNBRUlBUW9BZ1JCQVdvMkFnUWdCa0dvK3dJUVV5SUVLQUlBS0FJY0lRZ2dCRUVnSUFoQlAzRkJpZ0ZxRVFNQUlRUWdCaEJVSUFVZ0JFRVlkRUVZZFNJRU5nSk1DeUFHSUFNb0FnZzJBZ0FnQmlBQklBRWdBbW9pQWlBQklBZEJzQUZ4UVNCR0d5QUNJQVVnQkVIL0FYRVFqZ0VOQUNBQUlBQW9BZ0JCZEdvb0FnQnFJZ0VpQWlBQ0tBSVlSU0FCS0FJUVFRVnljallDRUNBREVPb0JJQU1rQkNBQUR3c2dBeERxQVNBREpBUWdBQXMyQVFKL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQWlBQU5nSUFJQUlnQVRZQ0JDQUNFTmNJSVFNZ0FpUUVJQU1MbUFJQkJIOGdBQ0FDYWlFRUlBRkIvd0Z4SVFNZ0FrSERBRTRFUUFOQUlBQkJBM0VFUUNBQUlBTTZBQUFnQUVFQmFpRUFEQUVMQ3lBRFFRaDBJQU55SUFOQkVIUnlJQU5CR0hSeUlRRWdCRUY4Y1NJRlFVQnFJUVlEUUNBQUlBWk1CRUFnQUNBQk5nSUFJQUFnQVRZQ0JDQUFJQUUyQWdnZ0FDQUJOZ0lNSUFBZ0FUWUNFQ0FBSUFFMkFoUWdBQ0FCTmdJWUlBQWdBVFlDSENBQUlBRTJBaUFnQUNBQk5nSWtJQUFnQVRZQ0tDQUFJQUUyQWl3Z0FDQUJOZ0l3SUFBZ0FUWUNOQ0FBSUFFMkFqZ2dBQ0FCTmdJOElBQkJRR3NoQUF3QkN3c0RRQ0FBSUFWSUJFQWdBQ0FCTmdJQUlBQkJCR29oQUF3QkN3c0xBMEFnQUNBRVNBUkFJQUFnQXpvQUFDQUFRUUZxSVFBTUFRc0xJQVFnQW1zTFhRRUVmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBSkJCR29pQkNBQUVGZ2lBellDQUNBREJIOGdBaUFBRUZnaUF6WUNBQ0FEQkg4Z0FFSHdBbW9nQkNBQklBSVE0UWtGUVFBTEJVRUFDeUVGSUFJa0JDQUZDeUFCQVg5QjFOa0NRZFRaQWlnQ0FDSUFRUUZxTmdJQUlBQUVRQThMRU1NREN3Z0FRUW9RUUVFQUN3Z0FRUUVRTjBFQUN3TUFBUXRKQVFGL0lBQW9BZ1FpQWlBQUtBSUlSZ1JBSUFBZ0FDZ0NCQ0FBS0FJQWEwRUNkVUVCZEJERkJDQUFLQUlFSVFJTElBRW9BZ0FoQVNBQUlBSkJCR28yQWdRZ0FpQUJOZ0lBQzVNQkFRWi9Jd1FoQVNNRVFUQnFKQVFqQkNNRlRnUkFRVEFRQUFzZ0FVRVlhaUVESUFGQnR3STJBaEFnQVVFQU5nSVVJQUZCSUdvaUFpQUJLUUlRTndJQUlBSW9BZ0FoQkNBQ0tBSUVJUVVnQVNBQU5nSUFJQUVnQkRZQ0JDQUJJQVUyQWdnZ0FDZ0NBRUYvUndSQUlBSWdBVFlDQUNBRElBSTJBZ0FnQUNBREVPVUVDeUFBS0FJRVFYOXFJUVlnQVNRRUlBWUxod0VCQW44Z0FDQUFLQUlFUVFGcU5nSUVRYlRYQWlnQ0FFR3cxd0lvQWdBaUFtdEJBblVnQVUwRWZ5QUJRUUZxRVBJRVFiRFhBaWdDQUFVZ0Fnc2dBVUVDZEdvb0FnQWlBZ1JBSUFJZ0FpZ0NCQ0lEUVg5cU5nSUVJQU5GQkVBZ0FpQUNLQUlBS0FJSVFmOERjVUdFQTJvUkFRQUxDMEd3MXdJb0FnQWdBVUVDZEdvZ0FEWUNBQXNyQVFGL0lBQkJBUkRaQWlBQUtBSUFJUUlnQUNBQUtBSUVJZ0JCQVdvMkFnUWdBQ0FDYWlBQk9nQUFDMEVCQW45QkRCQkpJUUlnQUNnQ0tDRURJQUpCQURZQ0FDQUNJQU0yQWdRZ0FpQUJOZ0lJSUFNZ0FFRWthaUFBS0FJa0d5QUNOZ0lBSUFBZ0FqWUNLQ0FDQ3hnQUlBQW9BZ0JCSUhGRkJFQWdBU0FDSUFBUXRnTWFDd3VKQVFFQ2Z5TUVJUVVqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFVZ0JEWUNBRUdVOEFBb0FnQWhCQ0FDQkVCQmxQQUFRY2p1QWlBQ0lBSkJmMFliTmdJQUMwRi9JQVFnQkVISTdnSkdHeUVDSUFBZ0FTQURJQVVROGdFaEJpQUNCRUJCbFBBQUtBSUFHaUFDQkVCQmxQQUFRY2p1QWlBQ0lBSkJmMFliTmdJQUN3c2dCU1FFSUFZTG1nSUJCSDhnQUNnQ0JDSUZJQUFzQUFzaUJFSC9BWEVpQmlBRVFRQklHd1JBQWtBZ0FTQUNSd1JBSUFFaEJTQUNJUVFEUUNBRklBUkJmR29pQkVrRVFDQUZLQUlBSVFZZ0JTQUVLQUlBTmdJQUlBUWdCallDQUNBRlFRUnFJUVVNQVFzTElBQXNBQXNpQmlFRUlBQW9BZ1FoQlNBR1FmOEJjU0VHQ3lBQ1FYeHFJUWNnQUNnQ0FDQUFJQVJCR0hSQkdIVkJBRWdpQWhzaUFDQUZJQVlnQWh0cUlRVUNRQUpBQTBBQ1FDQUFMQUFBSWdKQkFFb2dBa0gvQUVkeElRUWdBU0FIVHcwQUlBUUVRQ0FDSUFFb0FnQkhEUU1MSUFCQkFXb2dBQ0FGSUFCclFRRktHeUVBSUFGQkJHb2hBUXdCQ3dzTUFRc2dBMEVFTmdJQURBRUxJQVFFUUNBSEtBSUFRWDlxSUFKUEJFQWdBMEVFTmdJQUN3c0xDd3VOQVFFQ2Z5TUVJUVVqQkVHQUFtb2tCQ01FSXdWT0JFQkJnQUlRQUFzZ0JFR0F3QVJ4UlNBQ0lBTktjUVJBSUFVZ0FVRVlkRUVZZFNBQ0lBTnJJZ0ZCZ0FJZ0FVR0FBa2tiRUdJYUlBRkIvd0ZMQkVBQ2Z5QUNJQU5ySVFZRFFDQUFJQVZCZ0FJUWJTQUJRWUIrYWlJQlFmOEJTdzBBQ3lBR0MwSC9BWEVoQVFzZ0FDQUZJQUVRYlFzZ0JTUUVDKzREQWdGL0Nud2dBU3NEQUNJRUlBSXJBd0FpQmFJaENpQUJLd01JSWdZZ0Fpc0RDQ0lIb2lFTEFrQWdCaUFGb2lJTUlBUWdCNklpRGFBaUNDQUlZaUFLSUF1aElna2dDV0p4UlEwQUlBYVpJd05oSWdFZ0JKa2pBMkVpQW5JRWYwUUFBQUFBQUFEd1AwUUFBQUFBQUFBQUFDQUNHeUFFcGlFRVJBQUFBQUFBQVBBL1JBQUFBQUFBQUFBQUlBRWJJQWFtSVFaRUFBQUFBQUFBQUFBZ0JhWWdCU0FGSUFWaUd5RUZSQUFBQUFBQUFBQUFJQWVtSUFjZ0J5QUhZaHNoQjBFQkJVRUFDeUVCSUFlWkl3TmhJZ0lnQlprakEyRWlBM0lFUUVRQUFBQUFBQUFBQUNBRXBpQUVJQVFnQkdJYklRUkVBQUFBQUFBQUFBQWdCcVlnQmlBR0lBWmlHeUVHUkFBQUFBQUFBUEEvUkFBQUFBQUFBQUFBSUFNYklBV21JUVZFQUFBQUFBQUE4RDlFQUFBQUFBQUFBQUFnQWhzZ0I2WWhCd1VnQVVVRVFDQUxtU01EWVNBS21TTURZWElnRFprakEyRnlJQXlaSXdOaGNrVU5Ba1FBQUFBQUFBQUFBQ0FHcGlBR0lBWWdCbUliSVFaRUFBQUFBQUFBQUFBZ0JhWWdCU0FGSUFWaUd5RUZSQUFBQUFBQUFBQUFJQWVtSUFjZ0J5QUhZaHNoQjBRQUFBQUFBQUFBQUNBRXBpQUVJQVFnQkdJYklRUUxDeUFBSUFVZ0JLSWdCeUFHb3FFakE2STVBd0FnQUNBRklBYWlJQWNnQktLZ0l3T2lPUU1JRHdzZ0FDQUpPUU1BSUFBZ0NEa0RDQXNuQVFGL0lBQW9BZ1FpQUVVRVFFRUFEd3NEUUNBQlFRRnFJUUVnQUNnQ0FDSUFEUUFMSUFFTExnQWdBQ0FCSUFGQkNHb2lBQ2dDQUNBQ1FRSjBhaUFBS0FJRUVNMENJQUFnQUNnQ0FDQUNRUUowYWpZQ0JBdUxBUUVCZnlBQktBSUFJUU1nQWdSQUlBRkI3Z0FRVHhvTEFrQUNRQ0FCS0FJRUlBRW9BZ0JyUlEwQUlBRW9BZ0FpQWl3QUFFRlFha0VLVHcwQUEwQUNRQ0FCS0FJRUlBRW9BZ0JyUlEwQUlBSXNBQUJCVUdwQkNrOE5BQ0FCSUFKQkFXb2lBallDQUF3QkN3c2dBQ0FETmdJQUlBQWdBallDQkF3QkN5QUFRUUEyQWdBZ0FFRUFOZ0lFQ3dzYkFDQUNCSDhnQUNnQ0JDQUJLQUlFRU5FQlJRVWdBQ0FCUmdzTFB3SUJmd0o4SUFGRWtFSHkvLy8vN3oraUlnTWdBVVE0M3dZQUFBRHdQNklpQkNBQlJBQUFBQUFBQUFBQVpDSUNHeUFBWlNBRUlBTWdBaHNnQUdaeEN3Z0FRUVFRSUVFQUMxWUJBbjhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNJQUJCQVJCMElBSW9BZ0FnQWlnQ0JFWUVmMEVBQlNBQVFjVUFFRThFZnlBQVFmQUNhaUFCSUFJUWt3UUZRUUFMQ3lFRElBSWtCQ0FEQzZBQkFBSkFBa0FDUUNBQ0tBSUVRYkFCY1VFWWRFRVlkVUVRYXc0UkFBSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdFQ0N3SkFBa0FnQUN3QUFDSUNRU3RyRGdNQUFRQUJDeUFBUVFGcUlRQU1BZ3NnQWtFd1JpQUJJQUJyUVFGS2NVVU5BUUpBSUFBc0FBRkIyQUJyRGlFQUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0FDQ3lBQVFRSnFJUUFNQVFzZ0FTRUFDeUFBQ3lVQUlBQW9BaEFRUXlBQVFRQTJBaGdnQUVGL05nSWNJQUJDQURjQ0NDQUFRZ0EzQWhBTGpnRUJBMzhDUUFKQUlBQWlBa0VEY1VVTkFDQUNJUUVEUUFKQUlBQXNBQUJGQkVBZ0FTRUFEQUVMSUFCQkFXb2lBQ0lCUVFOeERRRU1BZ3NMREFFTEEwQWdBRUVFYWlFQklBQW9BZ0FpQTBHQWdZS0VlSEZCZ0lHQ2hIaHpJQU5CLy8zN2QycHhSUVJBSUFFaEFBd0JDd3NnQTBIL0FYRUVRQU5BSUFCQkFXb2lBQ3dBQUEwQUN3c0xJQUFnQW1zTFJRSUNmd0YrSUFBZ0FUY0RjQ0FBSUFBb0FnZ2lBaUFBS0FJRUlnTnJyQ0lFTndONElBRkNBRklnQkNBQlZYRUVRQ0FBSUFNZ0FhZHFOZ0pvQlNBQUlBSTJBbWdMQzVrQkFRZC9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FrRUlhaUVFUVFFaEJRTkFJQU1nQUNnQ0JFY0VRQ0FCS0FJRUlRWWdCVVVFUUNBQ1FacjdBUkJFSUFRZ0Fpa0NBRGNDQUNBQklBUVFSd3NDZnlBQktBSUVJUWdnQUNnQ0FDQURRUUowYWlnQ0FDQUJFRllnQ0FzZ0FTZ0NCRVlFUUNBQklBWTJBZ1FGUVFBaEJRc2dBMEVCYWlFRERBRUxDeUFDSkFRTEJBQkJBQXVwQVFFQmZ5QUJRZjhIU2dSQUlBRkJnbkJxSWdKQi93Y2dBa0gvQjBnYklBRkJnWGhxSUFGQi9nOUtJZ0liSVFFZ0FFUUFBQUFBQUFEZ2Y2SWlBRVFBQUFBQUFBRGdmNklnQUNBQ0d5RUFCU0FCUVlKNFNBUkFJQUZCL0E5cUlnSkJnbmdnQWtHQ2VFb2JJQUZCL2dkcUlBRkJoSEJJSWdJYklRRWdBRVFBQUFBQUFBQVFBS0lpQUVRQUFBQUFBQUFRQUtJZ0FDQUNHeUVBQ3dzZ0FDQUJRZjhIYXExQ05JYS9vZ3R2QVFGL0lBRkZCRUFQQ3lBQktBS2NBU0lDQkVBZ0FDQUNFSUFCQ3lBQktBS2dBU0lDQkVBZ0FDQUNFSUFCQ3lBQktBS2tBU0lDQkVBZ0FDQUNFSUFCQ3lBQktBS29BU0lDQkVBZ0FDQUNFSUFCQ3lBQkVLSUNJQUVRUXlBQUtBSUFJQUZIQkVBUEN5QUFRUUEyQWdBTEJ3QWdBQ2dDREF1S0FRRUJmeUFBUWNUbUFEWUNiQ0FBS0FKd0lnRUVRRUVNSUFFZ0FDZ0NkQkJJSUFCQkFEWUNkQ0FBUVFBMkFuQUxJQUJCeE9ZQU5nSlVJQUFvQWxnaUFRUkFRUXdnQVNBQUtBSmNFRWdnQUVFQU5nSmNJQUJCQURZQ1dBc2dBRUhBNkFBMkFrUWdBQ2dDU0NJQlJRUkFEd3RCRUNBQklBQW9Ba3dRU0NBQVFRQTJBa3dnQUVFQU5nSklDOFlEQVFOL0lBSkJnTUFBVGdSQUlBQWdBU0FDRUJ3YUlBQVBDeUFBSVFRZ0FDQUNhaUVESUFCQkEzRWdBVUVEY1VZRVFBTkFJQUJCQTNFRVFDQUNSUVJBSUFRUEN5QUFJQUVzQUFBNkFBQWdBRUVCYWlFQUlBRkJBV29oQVNBQ1FRRnJJUUlNQVFzTElBTkJmSEVpQWtGQWFpRUZBMEFnQUNBRlRBUkFJQUFnQVNnQ0FEWUNBQ0FBSUFFb0FnUTJBZ1FnQUNBQktBSUlOZ0lJSUFBZ0FTZ0NERFlDRENBQUlBRW9BaEEyQWhBZ0FDQUJLQUlVTmdJVUlBQWdBU2dDR0RZQ0dDQUFJQUVvQWh3MkFod2dBQ0FCS0FJZ05nSWdJQUFnQVNnQ0pEWUNKQ0FBSUFFb0FpZzJBaWdnQUNBQktBSXNOZ0lzSUFBZ0FTZ0NNRFlDTUNBQUlBRW9BalEyQWpRZ0FDQUJLQUk0TmdJNElBQWdBU2dDUERZQ1BDQUFRVUJySVFBZ0FVRkFheUVCREFFTEN3TkFJQUFnQWtnRVFDQUFJQUVvQWdBMkFnQWdBRUVFYWlFQUlBRkJCR29oQVF3QkN3c0ZJQU5CQkdzaEFnTkFJQUFnQWtnRVFDQUFJQUVzQUFBNkFBQWdBQ0FCTEFBQk9nQUJJQUFnQVN3QUFqb0FBaUFBSUFFc0FBTTZBQU1nQUVFRWFpRUFJQUZCQkdvaEFRd0JDd3NMQTBBZ0FDQURTQVJBSUFBZ0FTd0FBRG9BQUNBQVFRRnFJUUFnQVVFQmFpRUJEQUVMQ3lBRUM3TUJBUUovSUFBb0FnUVFReUFBUVFBMkFnd2dBQ0FCTmdJUUlBRkJBRWdFUUNBQVFRQTJBZ2dnQUVFQU5nSUFJQUJCQURZQ0JBOExJQUFnQVVFQmFpSUVRUU4wRUVvaUFUWUNCQ0FCUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRFFRQTJBZ0FnQTBGL05nSUVJQU5CcURoQkFCQUJDeUFBSUFFMkFnQWdBQ0FFUVFOMElBRnFJZ00yQWdnZ0F5QUJUUVJBRHdzZ0FTRUFBMEFnQUNBQ0t3TUFPUU1BSUFCQkNHb2lBQ0FEU1EwQUN3czFBQ0FBUWdBM0FnQWdBRUVBTmdJSVFRQWhBUU5BSUFGQkEwY0VRQ0FCUVFKMElBQnFRUUEyQWdBZ0FVRUJhaUVCREFFTEN3dUxBUUVDZnlBQUtBSUVFRU1nQUVFQU5nSU1JQUFnQVRZQ0VDQUJRUUJJQkVBZ0FFRUFOZ0lJSUFCQkFEWUNBQ0FBUVFBMkFnUVBDeUFBSUFGQkFXb2lBMEVEZEJCS0lnRTJBZ1FnQVVVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUFrRUFOZ0lBSUFKQmZ6WUNCQ0FDUWFnNFFRQVFBUXNnQUNBQk5nSUFJQUFnQTBFRGRDQUJhallDQ0F1T0FnRUJmQ0FBSUFFZ0FoRG5BeUFBSUFFZ0FpQURJQVVRcEFnQ1FBSkFBa0FDUUNBQUtBS0FBUTREQUFFQ0F3c2dBU0FDSUFZUTJRTU1BZ3NnQUVIb0Ftb2dBU0FDSUFZUS9BY01BUXNnQUVHSUEyb2lBeXdBQkFSQUlBTWdBU0FDSUFZUTBnY0ZJQUVnQWlBR0VOa0RDd3NnQUNBQklBVWdCaUFFSUFnZ0NSQ2pDQ0FCSUFRZ0J5QUlFS0lJSUFFb0FuUWlBMFVFUUNBQUlBRWdBaERZQVE4TElBSW9BZ3doQlNBRUtBSU1JUVlEUUNBREtBSVFJZ1JCbUFGc0lBVnFJUWNnQkVHWUFXd2dCV29pQ0NzRENDQUVRUVIwSUFacUt3TUlvQ0VLSUFjZ0J5c0RBQ0FFUVFSMElBWnFLd01Bb0RrREFDQUlJQW81QXdnZ0F5Z0NBQ0lERFFBTElBQWdBU0FDRU5nQkN3Z0FRUWdRRVVFQUN5OEJBWDhnQUN3QUJpSUNRUUpHQkg4Z0FDZ0NBQ2dDQkNFQ0lBQWdBU0FDUVQ5eFFZb0JhaEVEQUFVZ0FrVUxDNFFCQVFKL0lBQkZCRUFnQVJCS0R3c2dBVUcvZjBzRVFFSDQ3Z0pCRERZQ0FFRUFEd3NnQUVGNGFrRVFJQUZCQzJwQmVIRWdBVUVMU1JzUTJBWWlBZ1JBSUFKQkNHb1BDeUFCRUVvaUFrVUVRRUVBRHdzZ0FpQUFJQUJCZkdvb0FnQWlBMEY0Y1VFRVFRZ2dBMEVEY1J0cklnTWdBU0FESUFGSkd4Q0RBUm9nQUJCRElBSUxvd1FDQm44Q2ZnSkFJQUc5SWdoQy8vLy8vLy8vLy8vL0FJTkNnSUNBZ0lDQWdQai9BRmdFUUNBQXZTSUpRdi8vLy8vLy8vLy8vd0NEUW9DQWdJQ0FnSUQ0L3dCWUJFQWdDS2NpQmlBSVFpQ0lweUlEUVlDQXdJQjhhbkpGQkVBZ0FCQ25BdzhMSUFoQ1BvaW5RUUp4SWdjZ0NVSS9pS2NpQlhJaEFpQUpRaUNJcDBILy8vLy9CM0VpQkNBSnAzSkZCRUFDUUFKQUFrQUNRQ0FDUVFOeERnUUNBZ0FCQXd0RUdDMUVWUHNoQ1VBUEMwUVlMVVJVK3lFSndBOExJQUFQQ3dzZ0EwSC8vLy8vQjNFaUF5QUdja1VOQWlBRFFZQ0F3UDhIUndSQUlBUkJnSURBL3dkR0lBTkJnSUNBSUdvZ0JFbHlEUU1nQjBFQVJ5QUVRWUNBZ0NCcUlBTkpjUVI4UkFBQUFBQUFBQUFBQlNBQUlBR2ptUkNuQXdzaEFBSkFBa0FDUUFKQUlBSkJBM0VPQXdJQUFRTUxJQUNhRHd0RUdDMUVWUHNoQ1VBZ0FFUUhYQlF6SnFhaHZLQ2hEd3NnQUE4TElBQkVCMXdVTXlhbW9ieWdSQmd0UkZUN0lRbkFvQThMSUFKQi93RnhJUUlnQkVHQWdNRC9CMFlFUUFKQUFrQUNRQUpBQWtBZ0FrRURjUTRFQXdBQkFnUUxSQmd0UkZUN0llbS9Ed3RFMGlFemYzelpBa0FQQzBUU0lUTi9mTmtDd0E4TFJCZ3RSRlQ3SWVrL0R3c0ZBa0FDUUFKQUFrQUNRQ0FDUVFOeERnUURBQUVDQkF0RUFBQUFBQUFBQUlBUEMwUVlMVVJVK3lFSlFBOExSQmd0UkZUN0lRbkFEd3RFQUFBQUFBQUFBQUFQQ3dzTEN5QUFJQUdnRHd0RUdDMUVWUHNoK2I5RUdDMUVWUHNoK1Q4Z0JSc0xQQUFnQUNBQlFRTnNRWUFJYWl3QUFEb0FBQ0FBSUFGQkEyeEJnUWhxTEFBQU9nQUJJQUFnQVVFRGJFR0NDR29zQUFBNkFBSWdBRUYvT2dBREMwRUFJQUJCbklzQk5nSUFJQUJCRkRvQUJDQUFRUUU2QUFVZ0FFRUJPZ0FHSUFCQkFUb0FCeUFBUWNTZ0FUWUNBQ0FBSUFFcEFnQTNBZ2dnQUNBQ05nSVFDNUlEQVFaL0l3UWhCaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNDUUNBQUtBSUFJZ2hGRFFBZ0JDZ0NEQ0VIQWtBZ0FpSUtJQUVpQW1zaUFVRUFTZ1JBSUFnZ0FpQUJJQWdvQWdBb0FqQkJIM0ZCeWdGcUVRUUFJQUZIRFFFTElBWWhBU0FISUFNaUN5QUNheUlDYTBFQUlBY2dBa29iSWdkQkFFb0VRQUpBSUFaQ0FEY0NBQ0FHUVFBMkFnZ2dCMEVMU1FSQUlBWkJDMm9pQ1NBSE9nQUFJQVlpQWlFREJTQUdJQWRCRUdwQmNIRWlBaEJmSWdNMkFnQWdCaUFDUVlDQWdJQjRjallDQ0NBR0lBYzJBZ1FnQmlFQ0lBRkJDMm9oQ1FzZ0F5QUZJQWNRWWhvZ0F5QUhha0VBT2dBQUlBZ2dBaWdDQUNBQklBa3NBQUJCQUVnYklBY2dDQ2dDQUNnQ01FRWZjVUhLQVdvUkJBQWdCMFlFUUNBSkxBQUFRUUJJQkVBZ0FpZ0NBQkJEQ3d3QkN5QUFRUUEyQWdBZ0NTd0FBRUVBU0FSQUlBSW9BZ0FRUXdzTUF3c0xJQXNnQ21zaUFVRUFTZ1JBSUFnZ0NpQUJJQWdvQWdBb0FqQkJIM0ZCeWdGcUVRUUFJQUZIRFFFTElBUkJBRFlDRENBR0pBUWdDQThMSUFCQkFEWUNBQXNnQmlRRVFRQUx0QWNCQ0g4Z0FDZ0NBQ0lGQkg4Z0JTZ0NEQ0lHSUFVb0FoQkdCSDhnQlNBRktBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JpZ0NBQXRCZjBZRWZ5QUFRUUEyQWdCQkFRVWdBQ2dDQUVVTEJVRUJDeUVGQWtBQ1FBSkFJQUVvQWdBaUNBUkFJQWdvQWd3aUJpQUlLQUlRUmdSL0lBZ2dDQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVlvQWdBTFFYOUdCRUFnQVVFQU5nSUFCU0FGQkVBTUJBVU1Bd3NBQ3dzZ0JVVUVRRUVBSVFnTUFnc0xJQUlnQWlnQ0FFRUdjallDQUVFQUlRUU1BUXNnQTBHQUVDQUFLQUlBSWdVb0Fnd2lCaUFGS0FJUVJnUi9JQVVnQlNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFZb0FnQUxJZ1lnQXlnQ0FDZ0NERUVmY1VIS0FXb1JCQUJGQkVBZ0FpQUNLQUlBUVFSeU5nSUFRUUFoQkF3QkN3Si9JQU1nQmtFQUlBTW9BZ0FvQWpSQkgzRkJ5Z0ZxRVFRQUlRc2dBQ2dDQUNJRktBSU1JZ1lnQlNnQ0VFWUVRQ0FGSUFVb0FnQW9BaWhCL3dCeFFRUnFFUWdBR2dVZ0JTQUdRUVJxTmdJTUlBWW9BZ0FhQ3lBSUlRVWdCQ0VHSUFzTFFSaDBRUmgxSVFRRFFBSkFJQVJCVUdvaEJDQUFLQUlBSWdvRWZ5QUtLQUlNSWdrZ0NpZ0NFRVlFZnlBS0lBb29BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUpLQUlBQzBGL1JnUi9JQUJCQURZQ0FFRUJCU0FBS0FJQVJRc0ZRUUVMSVFvQ2Z5QUlCSDhnQ0NnQ0RDSUpJQWdvQWhCR0JIOGdDQ0FJS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ1NnQ0FBdEJmMFlFZnlBQlFRQTJBZ0JCQUNFRlFRQWhDRUVCQlVFQUN3VkJBQ0VJUVFFTElRd2dBQ2dDQUNFSElBd0xJQXB6SUFaQkFVcHhSUTBBSUFOQmdCQWdCeWdDRENJSklBY29BaEJHQkg4Z0J5QUhLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDU2dDQUFzaUNTQURLQUlBS0FJTVFSOXhRY29CYWhFRUFFVU5BaUFESUFsQkFDQURLQUlBS0FJMFFSOXhRY29CYWhFRUFDRUpJQUFvQWdBaUJ5Z0NEQ0lLSUFjb0FoQkdCRUFnQnlBSEtBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBY2dDa0VFYWpZQ0RDQUtLQUlBR2dzZ0JrRi9haUVHSUFSQkNtd2dDVUVZZEVFWWRXb2hCQXdCQ3dzZ0J3Ui9JQWNvQWd3aUF5QUhLQUlRUmdSL0lBY2dCeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQU1vQWdBTFFYOUdCSDhnQUVFQU5nSUFRUUVGSUFBb0FnQkZDd1ZCQVFzaEF3SkFBa0FnQlVVTkFDQUZLQUlNSWdBZ0JTZ0NFRVlFZnlBRklBVW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUFLQUlBQzBGL1JnUkFJQUZCQURZQ0FBd0JCU0FERFFNTERBRUxJQU5GRFFFTElBSWdBaWdDQUVFQ2NqWUNBQXNnQkF2WUJ3RUlmeUFBS0FJQUlnVUVmeUFGS0FJTUlnWWdCU2dDRUVZRWZ5QUZJQVVvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FHTFFBQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlNBQUtBSUFSUXNGUVFFTElRVUNRQUpBQWtBZ0FTZ0NBQ0lJQkVBZ0NDZ0NEQ0lHSUFnb0FoQkdCSDhnQ0NBSUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JpMEFBQXRCZjBZRVFDQUJRUUEyQWdBRklBVUVRQXdFQlF3REN3QUxDeUFGUlFSQVFRQWhDQXdDQ3dzZ0FpQUNLQUlBUVFaeU5nSUFRUUFoQkF3QkN5QUFLQUlBSWdVb0Fnd2lCaUFGS0FJUVJnUi9JQVVnQlNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFZdEFBQUxJZ1ZCL3dGeElnWkJHSFJCR0hWQmYwb0VRQ0FES0FJSUlBVkJHSFJCR0hWQkFYUnFMZ0VBUVlBUWNRUkFBbjhnQXlBR1FRQWdBeWdDQUNnQ0pFRWZjVUhLQVdvUkJBQWhDeUFBS0FJQUlnVW9BZ3dpQmlBRktBSVFSZ1JBSUFVZ0JTZ0NBQ2dDS0VIL0FIRkJCR29SQ0FBYUJTQUZJQVpCQVdvMkFnd2dCaTBBQUJvTElBZ2hCU0FFSVFZZ0N3dEJHSFJCR0hVaEJBTkFBa0FnQkVGUWFpRUVJQUFvQWdBaUNnUi9JQW9vQWd3aUNTQUtLQUlRUmdSL0lBb2dDaWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQWt0QUFBTFFYOUdCSDhnQUVFQU5nSUFRUUVGSUFBb0FnQkZDd1ZCQVFzaENnSi9JQWdFZnlBSUtBSU1JZ2tnQ0NnQ0VFWUVmeUFJSUFnb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBSkxRQUFDMEYvUmdSL0lBRkJBRFlDQUVFQUlRVkJBQ0VJUVFFRlFRQUxCVUVBSVFoQkFRc2hEQ0FBS0FJQUlRY2dEQXNnQ25NZ0JrRUJTbkZGRFFBZ0J5Z0NEQ0lKSUFjb0FoQkdCSDhnQnlBSEtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0NTMEFBQXNpQ2tIL0FYRWlDVUVZZEVFWWRVRi9UQTBFSUFNb0FnZ2dDa0VZZEVFWWRVRUJkR291QVFCQmdCQnhSUTBFSUFNZ0NVRUFJQU1vQWdBb0FpUkJIM0ZCeWdGcUVRUUFJUWtnQUNnQ0FDSUhLQUlNSWdvZ0J5Z0NFRVlFUUNBSElBY29BZ0FvQWloQi93QnhRUVJxRVFnQUdnVWdCeUFLUVFGcU5nSU1JQW90QUFBYUN5QUdRWDlxSVFZZ0JFRUtiQ0FKUVJoMFFSaDFhaUVFREFFTEN5QUhCSDhnQnlnQ0RDSURJQWNvQWhCR0JIOGdCeUFIS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQXkwQUFBdEJmMFlFZnlBQVFRQTJBZ0JCQVFVZ0FDZ0NBRVVMQlVFQkN5RURBa0FDUUNBRlJRMEFJQVVvQWd3aUFDQUZLQUlRUmdSL0lBVWdCU2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQUF0QUFBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFNTkJRc01BUXNnQTBVTkF3c2dBaUFDS0FJQVFRSnlOZ0lBREFJTEN5QUNJQUlvQWdCQkJISTJBZ0JCQUNFRUN5QUVDNGNCQVFKL0l3UWhCQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQkNBRE5nSUFRWlR3QUNnQ0FDRURJQUVFUUVHVThBQkJ5TzRDSUFFZ0FVRi9SaHMyQWdBTFFYOGdBeUFEUWNqdUFrWWJJUUVnQUNBQ0lBUVE5UVloQlNBQkJFQkJsUEFBS0FJQUdpQUJCRUJCbFBBQVFjanVBaUFCSUFGQmYwWWJOZ0lBQ3dzZ0JDUUVJQVVMOVFFQUlBQkJBRFlDVENBQVFRQTJBbEFnQUVHdzVnQTJBa2dnQUVFQU5nSmNJQUJCQURZQ1lDQUFRY3pzQURZQ1dDQUFRUUEyQW13Z0FFRUFOZ0p3SUFCQnpPd0FOZ0pvSUFCQkFEWUNmQ0FBUVFBMkFvQUJJQUJCek93QU5nSjRJQUJCQURZQ2pBRWdBRUVBTmdLUUFTQUFRY3pzQURZQ2lBRWdBRUVBTmdJQUlBQkJBRFlDVkNBQVFRQTJBbVFnQUVJQU53TUlJQUJDQURjREVDQUFRZ0EzQXhnZ0FFSUFOd01nSUFCQkFEWUNLQ0FBUWdBM0F6QWdBRUlBTndNNElBQkNBRGNEUUNBQVFRQTJBblFnQUVFQU5nS0VBU0FBUVFBMkFwUUJJQUJDQURjRG1BRWdBRUlBTndPZ0FTQUFRUUEyQXFnQkN5OEJBWDhnQUN3QUJ5SUNRUUpHQkg4Z0FDZ0NBQ2dDQ0NFQ0lBQWdBU0FDUVQ5eFFZb0JhaEVEQUFVZ0FrVUxDeDBBSUFCQjhBSnFRUkFRVENJQUlBRW9BZ0FnQWlnQ0FCQ3ZCQ0FBQzZjQ0FRbC9Jd1FoQkNNRVFVQnJKQVFqQkNNRlRnUkFRY0FBRUFBTElBUkJFR29oQWlBRVFReHFJUWNnQkVFSWFpRUdJQUJCeVFBUVR3Ui9BbjhnQUVHZ0Ftb2hCU0FCQkVBZ0JTQUZLQUlBTmdJRUN5QUFRUWhxSWdnaUF5Z0NCQ0FES0FJQWEwRUNkU0VKQWtBQ1FBTkFBa0FnQUVIRkFCQlBEUU1nQVFSQUlBSWdCUkN0QkNBSElBQVF3UUVpQXpZQ0FDQUZJQUlRcXdRZ0EwVU5BU0FJSUFjUWFDQUdJQU0yQWdBZ0F5MEFCRUVjUmdSQUlBUWdBeWtDQ0RjQ0FDQUdJQUJCOEFKcUlBUVFxQVEyQWdBTElBVWdCaEJvSUFJUXhBRUZJQUlnQUJEQkFTSUROZ0lBSUFORkRRTWdDQ0FDRUdnTERBRUxDeUFDRU1RQlFRQU1BZ3RCQUF3QkN5QUNJQUFnQ1JCeklBQkI4QUpxSUFJUXFnUUxCVUVBQ3lFS0lBUWtCQ0FLQzZnS0FRcC9Jd1FoRFNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0RVRUlhaUVRSUExQkRHb2lEeUFES0FJY0lnazJBZ0FnQ1NBSktBSUVRUUZxTmdJRUlBOUJ5UHNDRUZNaENpQVBFRlFnQkVFQU5nSUFBa0FDUUFOQUFrQWdBU2dDQUNFSUlBdEZJQVlnQjBkeFJRMEFJQWdoQ3lBSUJIOGdDQ2dDRENJSklBZ29BaEJHQkg4Z0NDQUlLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDU2dDQUF0QmYwWUVmeUFCUVFBMkFnQkJBQ0VMUVFBaENFRUJCVUVBQ3dWQkFDRUlRUUVMSVE0Z0FpZ0NBQ0lKSVJFQ1FBSkFJQWxGRFFBZ0NTZ0NEQ0lNSUFrb0FoQkdCSDhnQ1NBSktBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0RDZ0NBQXRCZjBZRVFDQUNRUUEyQWdCQkFDRVJEQUVGSUE1RkRRVUxEQUVMSUE0TkEwRUFJUWtMSUFvZ0JpZ0NBRUVBSUFvb0FnQW9BalJCSDNGQnlnRnFFUVFBUWY4QmNVRWxSZ1JBSUFjZ0JrRUVhaUlPUmcwREFrQUNRQUpBSUFvZ0RpZ0NBRUVBSUFvb0FnQW9BalJCSDNGQnlnRnFFUVFBSWdsQkdIUkJHSFZCTUdzT0ZnQUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUFCQ3lBSElBWWlERUVJYWtZTkJTQU9JUVlnQ2lBTUtBSUlRUUFnQ2lnQ0FDZ0NORUVmY1VIS0FXb1JCQUFoQ0F3QkN5QUpJUWhCQUNFSkN5QUFLQUlBS0FJa0lRd2dEU0FMTmdJRUlBMGdFVFlDQUNBUUlBMG9BZ1EyQWdBZ0R5QU5LQUlBTmdJQUlBRWdBQ0FRSUE4Z0F5QUVJQVVnQ0NBSklBeEJEM0ZCNWdKcUVRMEFOZ0lBSUFaQkNHb2hCZ1VDUUNBS1FZREFBQ0FHS0FJQUlBb29BZ0FvQWd4QkgzRkJ5Z0ZxRVFRQVJRUkFJQW9nQ0NnQ0RDSUpJQWdvQWhCR0JIOGdDQ0FJS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ1NnQ0FBc2dDaWdDQUNnQ0hFRS9jVUdLQVdvUkF3QWhDU0FLSUFZb0FnQWdDaWdDQUNnQ0hFRS9jVUdLQVdvUkF3QWdDVWNFUUNBRVFRUTJBZ0FNQWdzZ0NDZ0NEQ0lKSUFnb0FoQkdCRUFnQ0NBSUtBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBZ2dDVUVFYWpZQ0RDQUpLQUlBR2dzZ0JrRUVhaUVHREFFTEEwQUNRQ0FISUFaQkJHb2lCa1lFUUNBSElRWU1BUXNnQ2tHQXdBQWdCaWdDQUNBS0tBSUFLQUlNUVI5eFFjb0JhaEVFQUEwQkN3c2dDU0VMQTBBZ0NBUi9JQWdvQWd3aUNTQUlLQUlRUmdSL0lBZ2dDQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQWtvQWdBTFFYOUdCSDhnQVVFQU5nSUFRUUFoQ0VFQkJVRUFDd1ZCQUNFSVFRRUxJUXdDUUFKQUlBdEZEUUFnQ3lnQ0RDSUpJQXNvQWhCR0JIOGdDeUFMS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ1NnQ0FBdEJmMFlFUUNBQ1FRQTJBZ0FNQVFVZ0RFVU5CQXNNQVFzZ0RBMENRUUFoQ3dzZ0NrR0F3QUFnQ0NnQ0RDSUpJQWdvQWhCR0JIOGdDQ0FJS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ1NnQ0FBc2dDaWdDQUNnQ0RFRWZjVUhLQVdvUkJBQkZEUUVnQ0NnQ0RDSUpJQWdvQWhCR0JFQWdDQ0FJS0FJQUtBSW9RZjhBY1VFRWFoRUlBQm9GSUFnZ0NVRUVhallDRENBSktBSUFHZ3NNQUFBTEFBc0xJQVFvQWdBaEN3d0JDd3NNQVFzZ0JFRUVOZ0lBQ3lBSUJIOGdDQ2dDRENJQUlBZ29BaEJHQkg4Z0NDQUlLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdBQ2dDQUF0QmYwWUVmeUFCUVFBMkFnQkJBQ0VJUVFFRlFRQUxCVUVBSVFoQkFRc2hBUUpBQWtBQ1FDQUNLQUlBSWdORkRRQWdBeWdDRENJQUlBTW9BaEJHQkg4Z0F5QURLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdBQ2dDQUF0QmYwWUVRQ0FDUVFBMkFnQU1BUVVnQVVVTkFnc01BZ3NnQVEwQURBRUxJQVFnQkNnQ0FFRUNjallDQUFzZ0RTUUVJQWdMc3dFQkFuOGdBQ2dDQkJCRElBQkJBRFlDRENBQUlBRTJBaEFnQVVFQVNBUkFJQUJCQURZQ0NDQUFRUUEyQWdBZ0FFRUFOZ0lFRHdzZ0FDQUJRUUZxSWdSQkFuUVFTaUlCTmdJRUlBRkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ05CQURZQ0FDQURRWDgyQWdRZ0EwR29PRUVBRUFFTElBQWdBVFlDQUNBQUlBUkJBblFnQVdvaUF6WUNDQ0FESUFGTkJFQVBDeUFCSVFBRFFDQUFJQUlvQWdBMkFnQWdBRUVFYWlJQUlBTkpEUUFMQzhNS0FRcC9Jd1FoRFNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0RVRUlhaUVRSUExQkRHb2lEeUFES0FJY0lnazJBZ0FnQ1NBSktBSUVRUUZxTmdJRUlBOUJxUHNDRUZNaEN5QVBFRlFnQkVFQU5nSUFBa0FDUUFOQUFrQWdBU2dDQUNFSUlBcEZJQVlnQjBkeFJRMEFJQWdoQ2lBSUJIOGdDQ2dDRENJSklBZ29BaEJHQkg4Z0NDQUlLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDUzBBQUF0QmYwWUVmeUFCUVFBMkFnQkJBQ0VLUVFBaENFRUJCVUVBQ3dWQkFDRUlRUUVMSVE0Z0FpZ0NBQ0lKSVJFQ1FBSkFJQWxGRFFBZ0NTZ0NEQ0lNSUFrb0FoQkdCSDhnQ1NBSktBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0RDMEFBQXRCZjBZRVFDQUNRUUEyQWdCQkFDRVJEQUVGSUE1RkRRVUxEQUVMSUE0TkEwRUFJUWtMSUFzZ0Jpd0FBRUVBSUFzb0FnQW9BaVJCSDNGQnlnRnFFUVFBUWY4QmNVRWxSZ1JBSUFjZ0JrRUJhaUlPUmcwREFrQUNRQUpBSUFzZ0Rpd0FBRUVBSUFzb0FnQW9BaVJCSDNGQnlnRnFFUVFBSWdsQkdIUkJHSFZCTUdzT0ZnQUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUFCQ3lBSElBWWlERUVDYWtZTkJTQU9JUVlnQ3lBTUxBQUNRUUFnQ3lnQ0FDZ0NKRUVmY1VIS0FXb1JCQUFoQ0F3QkN5QUpJUWhCQUNFSkN5QUFLQUlBS0FJa0lRd2dEU0FLTmdJRUlBMGdFVFlDQUNBUUlBMG9BZ1EyQWdBZ0R5QU5LQUlBTmdJQUlBRWdBQ0FRSUE4Z0F5QUVJQVVnQ0NBSklBeEJEM0ZCNWdKcUVRMEFOZ0lBSUFaQkFtb2hCZ1VDUUNBR0xBQUFJZ3BCZjBvRVFDQUxLQUlJSWd3Z0NrRUJkR291QVFCQmdNQUFjUVJBQTBBQ1FDQUhJQVpCQVdvaUJrWUVRQ0FISVFZTUFRc2dCaXdBQUNJS1FYOU1EUUFnQ2tFQmRDQU1haTRCQUVHQXdBQnhEUUVMQ3lBSklRb0RRQ0FJQkg4Z0NDZ0NEQ0lKSUFnb0FoQkdCSDhnQ0NBSUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0NTMEFBQXRCZjBZRWZ5QUJRUUEyQWdCQkFDRUlRUUVGUVFBTEJVRUFJUWhCQVFzaERBSkFBa0FnQ2tVTkFDQUtLQUlNSWdrZ0NpZ0NFRVlFZnlBS0lBb29BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUpMUUFBQzBGL1JnUkFJQUpCQURZQ0FBd0JCU0FNUlEwR0N3d0JDeUFNRFFSQkFDRUtDeUFJS0FJTUlna2dDQ2dDRUVZRWZ5QUlJQWdvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FKTFFBQUN5SUpRZjhCY1VFWWRFRVlkVUYvVEEwRElBc29BZ2dnQ1VFWWRFRVlkVUVCZEdvdUFRQkJnTUFBY1VVTkF5QUlLQUlNSWdrZ0NDZ0NFRVlFUUNBSUlBZ29BZ0FvQWloQi93QnhRUVJxRVFnQUdnVWdDQ0FKUVFGcU5nSU1JQWt0QUFBYUN3d0FBQXNBQ3dzZ0N5QUlLQUlNSWdrZ0NDZ0NFRVlFZnlBSUlBZ29BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUpMUUFBQzBIL0FYRWdDeWdDQUNnQ0RFRS9jVUdLQVdvUkF3QkIvd0Z4SUFzZ0Jpd0FBQ0FMS0FJQUtBSU1RVDl4UVlvQmFoRURBRUgvQVhGSEJFQWdCRUVFTmdJQURBRUxJQWdvQWd3aUNTQUlLQUlRUmdSQUlBZ2dDQ2dDQUNnQ0tFSC9BSEZCQkdvUkNBQWFCU0FJSUFsQkFXbzJBZ3dnQ1MwQUFCb0xJQVpCQVdvaEJnc0xJQVFvQWdBaENnd0JDd3NNQVFzZ0JFRUVOZ0lBQ3lBSUJIOGdDQ2dDRENJQUlBZ29BaEJHQkg4Z0NDQUlLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdBQzBBQUF0QmYwWUVmeUFCUVFBMkFnQkJBQ0VJUVFFRlFRQUxCVUVBSVFoQkFRc2hBUUpBQWtBQ1FDQUNLQUlBSWdORkRRQWdBeWdDRENJQUlBTW9BaEJHQkg4Z0F5QURLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdBQzBBQUF0QmYwWUVRQ0FDUVFBMkFnQU1BUVVnQVVVTkFnc01BZ3NnQVEwQURBRUxJQVFnQkNnQ0FFRUNjallDQUFzZ0RTUUVJQWdMd1FJQkJYOGpCQ0VISXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQUtBSUFJZ1lFUUFKQUlBUW9BZ3doQ1NBQ0lBRnJJZ2hCQW5VaENpQUlRUUJLQkVBZ0JpZ0NBQ2dDTUNFSUlBWWdBU0FLSUFoQkgzRkJ5Z0ZxRVFRQUlBcEhCRUFnQUVFQU5nSUFRUUFoQmd3Q0N3c2dDU0FESUFGclFRSjFJZ0ZyUVFBZ0NTQUJTaHNpQVVFQVNnUkFJQWRDQURjQ0FDQUhRUUEyQWdnZ0J5QUJJQVVRM0FJZ0JpZ0NBQ2dDTUNFRklBWWdCeWdDQUNBSElBY3NBQXRCQUVnYklBRWdCVUVmY1VIS0FXb1JCQUFnQVVZRVFDQUhFRTRGSUFCQkFEWUNBQ0FIRUU1QkFDRUdEQUlMQ3lBRElBSnJJZ05CQW5VaEFTQURRUUJLQkVBZ0JpZ0NBQ2dDTUNFRElBWWdBaUFCSUFOQkgzRkJ5Z0ZxRVFRQUlBRkhCRUFnQUVFQU5nSUFRUUFoQmd3Q0N3c2dCRUVBTmdJTUN3VkJBQ0VHQ3lBSEpBUWdCZ3RaQUNBQUlBRTJBaGdnQUNBQlJUWUNFQ0FBUVFBMkFoUWdBRUdDSURZQ0JDQUFRUUEyQWd3Z0FFRUdOZ0lJSUFCQ0FEY0NJQ0FBUWdBM0FpZ2dBRUlBTndJd0lBQkNBRGNDT0NBQVFnQTNBa0FnQUVFY2FoQ05BZ3NRQUNBQ0JFQWdBQ0FCSUFJUWd3Y0xDeEVBSUFJRVFDQUFJQUVnQWhDREFSb0xDek1CQVg4Z0FTQUNiQ0VFSUFKQkFDQUJHeUVDSUFNb0Frd2FJQVFnQUNBRUlBTVF0Z01pQUVjRWZ5QUFJQUZ1QlNBQ0N3dWxBZ0FnQUFSL0FuOGdBVUdBQVVrRVFDQUFJQUU2QUFCQkFRd0JDMEdVOEFBb0FnQW9BZ0JGQkVBZ0FVR0FmM0ZCZ0w4RFJnUkFJQUFnQVRvQUFFRUJEQUlGUWZqdUFrSFVBRFlDQUVGL0RBSUxBQXNnQVVHQUVFa0VRQ0FBSUFGQkJuWkJ3QUZ5T2dBQUlBQWdBVUUvY1VHQUFYSTZBQUZCQWd3QkN5QUJRWUJBY1VHQXdBTkdJQUZCZ0xBRFNYSUVRQ0FBSUFGQkRIWkI0QUZ5T2dBQUlBQWdBVUVHZGtFL2NVR0FBWEk2QUFFZ0FDQUJRVDl4UVlBQmNqb0FBa0VEREFFTElBRkJnSUI4YWtHQWdNQUFTUVIvSUFBZ0FVRVNka0h3QVhJNkFBQWdBQ0FCUVF4MlFUOXhRWUFCY2pvQUFTQUFJQUZCQm5aQlAzRkJnQUZ5T2dBQ0lBQWdBVUUvY1VHQUFYSTZBQU5CQkFWQitPNENRZFFBTmdJQVFYOExDd1ZCQVFzTFpRRURmeU1FSVFFakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkJqT0VBTmdJQUlBQW9BZ2dpQWtVRVFDQUFLQUlRRUVNZ0FTUUVEd3NnQVNBQUtBSUVOZ0lBSUFGQkJHb2lBeUFCS0FJQU5nSUFJQUlnQXhCTklBQW9BaEFRUXlBQkpBUUxsUU1CQlg4akJDRURJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFEUVFScUlRUWdBRUhNQUJCUEdnSi9Ba0FDUUFKQUFrQWdBQ2dDQkNBQUtBSUFJZ0pyUVFCTEJIOGdBaXdBQUFWQkFBdEJHSFJCR0hWQnpnQnJEZzBBQXdNREF3SURBd01EQXdNQkF3c2dBQ0FCRU0wSkRBTUxJQUFnQVJETUNRd0NDeUFBS0FJRUlBQW9BZ0FpQW10QkFVc0VmeUFDTEFBQkJVRUFDMEgvQVhGQjlBQkdEUUFnQkNBQUVONEJJZ0kyQWdBZ0FnUi9JQUFvQWdRZ0FDZ0NBQ0lDYTBFQVN3Ui9JQUlzQUFBRlFRQUxRZjhCY1VISkFFWUVmeUFESUFBZ0FVRUFSeUlDRUpVQklnVTJBZ0FnQlFSL0lBSUVRQ0FCUVFFNkFBRUxJQUFnQkNBREVKUUJCVUVBQ3dWQkFBc0ZRUUFMREFFTElBUWdBQ0FCRU1zSklnSTJBZ0FnQWdSL0lBQW9BZ1FnQUNnQ0FDSUZhMEVBU3dSL0lBVXNBQUFGUVFBTFFmOEJjVUhKQUVZRWZ5QUFRWlFCYWlBRUVHZ2dBeUFBSUFGQkFFY2lBaENWQVNJRk5nSUFJQVVFZnlBQ0JFQWdBVUVCT2dBQkN5QUFJQVFnQXhDVUFRVkJBQXNGSUFJTEJVRUFDd3NoQmlBREpBUWdCZ3VDQVFFRGZ5TUVJUU1qQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFKQmIwc0VRQkFEQ3lBQ1FRdEpCRUFnQUNBQ09nQUxCU0FBSUFKQkVHcEJjSEVpQkJCZklnVTJBZ0FnQUNBRVFZQ0FnSUI0Y2pZQ0NDQUFJQUkyQWdRZ0JTRUFDeUFBSUFFZ0FoQ2NBU0FEUVFBNkFBQWdBQ0FDYWlBRExBQUFPZ0FBSUFNa0JBc01BQ0FBUVlLR2dDQTJBQUFMeUFFQkFYOGdBMEdBRUhFRVFDQUFRU3M2QUFBZ0FFRUJhaUVBQ3lBRFFZQUVjUVJBSUFCQkl6b0FBQ0FBUVFGcUlRQUxBMEFnQVN3QUFDSUVCRUFnQUNBRU9nQUFJQUJCQVdvaEFDQUJRUUZxSVFFTUFRc0xJQUFDZndKQUFrQUNRQ0FEUWNvQWNVRUlhdzQ1QVFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQUFndEI3d0FNQWdzZ0EwRUpka0VnY1VINEFITU1BUXRCNUFCQjlRQWdBaHNMT2dBQUM3c0JBUVIvSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBaUFBRUpjQ0lBSXNBQUFFUUFKQUlBQWdBQ2dDQUVGMGFpZ0NBR29vQWhnaUJDRURJQVFFUUNBREtBSVlJZ1VnQXlnQ0hFWUVmeUFESUFGQi93RnhJQVFvQWdBb0FqUkJQM0ZCaWdGcUVRTUFCU0FESUFWQkFXbzJBaGdnQlNBQk9nQUFJQUZCL3dGeEMwRi9SdzBCQ3lBQUlBQW9BZ0JCZEdvb0FnQnFJZ0FpQVNBQktBSVlSU0FBS0FJUVFRRnljallDRUFzTElBSVE2Z0VnQWlRRUM1VUdBUU4vSUFCQnhPRUFOZ0lBSUFBb0FtUWlBUVJBSUFCQjZBQnFJUU1EUUNBQktBSUlJUUlnQUNBQUtBSnNRWDlxTmdKc0lBQWdBU2dDQURZQ1pDQUJRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FUWUNBQ0FBS0FKa0lnRkJCR29nQXlBQkcwRUFOZ0lBSUFJb0FnQUVRQU5BSUFJZ0FpZ0NCQkNHQnlBQ0tBSUFEUUFMSUFBb0FtUWhBUXNnQWtFQU5nSVFJQUVOQUFzTElBQW9BaGdpQVFSQUlBQkJIR29oQXdOQUlBRW9BZ2doQWlBQUlBRW9BZ0EyQWhnZ0FVSFFzd0lvQWdBMkFnQkIwTE1DSUFFMkFnQWdBQ2dDR0NJQlFRUnFJQU1nQVJ0QkFEWUNBQ0FDSUFJb0FnQW9BaEJCL3dOeFFZUURhaEVCQUNBQUtBSVlJZ0VOQUFzTElBQW9BaVFpQVFSQUlBQkJLR29oQXdOQUlBRW9BZ2doQWlBQUlBRW9BZ0EyQWlRZ0FVSFFzd0lvQWdBMkFnQkIwTE1DSUFFMkFnQWdBQ2dDSkNJQlFRUnFJQU1nQVJ0QkFEWUNBQ0FDSUFJb0FnQW9BaEJCL3dOeFFZUURhaEVCQUNBQUtBSWtJZ0VOQUFzTElBQW9BakFpQVFSQUlBQkJOR29oQXdOQUlBRW9BZ2doQWlBQUlBRW9BZ0EyQWpBZ0FVSFFzd0lvQWdBMkFnQkIwTE1DSUFFMkFnQWdBQ2dDTUNJQlFRUnFJQU1nQVJ0QkFEWUNBQ0FDSUFJb0FnQW9BaEJCL3dOeFFZUURhaEVCQUNBQUtBSXdJZ0VOQUFzTElBQW9BblFpQVFSQUEwQWdBU2dDR0NJQ0JFQkJHQ0FDSUFFb0Fod1FTQXNnQVNnQ0FDSUJEUUFMQ3lBQUtBS0FBU0lCQkVCQkhDQUJJQUFvQW9RQkVFZ0xJQUFvQW5RaUFRUkFRU0FnQVNBQUtBSjRFRWdMSUFCQjZPRUFOZ0pnSUFBb0FtUWlBUVJBUVF3Z0FTQUFLQUpvRUVnZ0FFRUFOZ0pvSUFCQkFEWUNaQXNnQUVIODRRQTJBamdnQUNnQ1BDSUJCRUJCRENBQklBQkJRR3NpQVNnQ0FCQklJQUZCQURZQ0FDQUFRUUEyQWp3TElBQkJrT0lBTmdJc0lBQW9BakFpQVFSQVFRd2dBU0FBS0FJMEVFZ2dBRUVBTmdJMElBQkJBRFlDTUFzZ0FFR2s0Z0EyQWlBZ0FDZ0NKQ0lCQkVCQkRDQUJJQUFvQWlnUVNDQUFRUUEyQWlnZ0FFRUFOZ0lrQ3lBQVFiamlBRFlDRkNBQUtBSVlJZ0ZGQkVBUEMwRU1JQUVnQUNnQ0hCQklJQUJCQURZQ0hDQUFRUUEyQWhnTFF3RURmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBSWdBQkJZSWdNMkFnQWdBd1IvSUFCQjhBSnFJQUVnQWhEa0NRVkJBQXNoQkNBQ0pBUWdCQXVhQkFFS2Z5TUVJUUVqQkVGQWF5UUVJd1FqQlU0RVFFSEFBQkFBQ3lBQlFUQnFJUU1nQVVFb2FpRUhJQUZCR0dvaEJDQUJRUlJxSVFnZ0FVRVFhaUVHSUFGQkNHb2hCUUovQWtBQ1FDQUFLQUlFSUFBb0FnQWlBbXRCQUVzRWZ5QUNMQUFBQlVFQUMwRVlkRUVZZFVISEFHc09EZ0FCQVFFQkFRRUJBUUVCQVFFQUFRc2dBQkNOQ1F3QkN5QUhJQUEyQWdBZ0JDQUFFSXdKSUFnZ0FDQUVFS0FCSWdJMkFnQWdBZ1IvSUFBZ0JCQ0xDUVIvUVFBRklBY1E5d01FZnlBQ0JTQUdRUUEyQWdBZ0JVR2JuZ0lRUkNBRElBVXBBZ0EzQWdBQ2Z3SkFJQUFnQXhCU1JRMEFJQUJCQ0dvaUJTSUNLQUlFSUFJb0FnQnJRUUoxSVFJQ1FBTkFJQUJCeFFBUVQwVUVRQ0FESUFBUXdRRWlDVFlDQUNBSlJRMENJQVVnQXhCb0RBRUxDeUFESUFBZ0FoQnpJQVlnQUVId0Ftb2dBeENGQ1RZQ0FBd0JDMEVBREFFTElBTkJBRFlDQUFKL0FrQWdCQ3dBQUEwQUlBUXNBQUZGRFFBZ0F5QUFFRjBpQlRZQ0FDQUZEUUJCQUF3QkN5QUFRZllBRUU4RVFDQUJRUUEyQWdBZ0FVRUFOZ0lFSUFBZ0F5QUlJQUVnQmlBRVFRUnFJQVJCQ0dvUTlnTU1BUXNnQUVFSWFpSUZJZ0lvQWdRZ0FpZ0NBR3RCQW5VaEFnSkFBMEFDUUNBQklBQVFYU0lKTmdJQUlBbEZEUUFnQlNBQkVHZ2dCeEQzQTBVTkFRd0NDd3RCQUF3QkN5QUJJQUFnQWhCeklBQWdBeUFJSUFFZ0JpQUVRUVJxSUFSQkNHb1E5Z01MQ3dzTEJVRUFDd3NoQ2lBQkpBUWdDZ3NVQUNBQVFReHFJQUZCZjJvZ0FFRWdhaENYQVF0YUFRRi9JQUVnQUNnQ0hFRUJhaUFBS0FJWWF5SUJheUlDUlFSQUR3c2dBRUVNYWlBQ0VKSUNJQUFvQWhBZ0FVRUNkR29pQVNBQUtBSVVJZ0pQQkVBUEN3TkFJQUVnQUNnQ0lEWUNBQ0FCUVFScUlnRWdBa2tOQUFzTHpBRUJBbjhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUF2VUlnaUtkQi8vLy8vd2R4SWdKQi9NT2svd05KQkVBZ0FrR0FnTUR5QTA4RVFDQUFSQUFBQUFBQUFBQUFRUUFRelFFaEFBc0ZBbndnQUNBQW9TQUNRZi8vdi84SFN3MEFHZ0pBQWtBQ1FBSkFJQUFnQVJDdEEwRURjUTREQUFFQ0F3c2dBU3NEQUNBQkt3TUlRUUVRelFFTUF3c2dBU3NEQUNBQkt3TUlFTTRCREFJTElBRXJBd0FnQVNzRENFRUJFTTBCbWd3QkN5QUJLd01BSUFFckF3Z1F6Z0dhQ3lFQUN5QUJKQVFnQUF2VUFRSUNmd0Y4SXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBTDFDSUlpblFmLy8vLzhIY1NJQ1FmekRwUDhEU1FSOElBSkJuc0dhOGdOSkJIeEVBQUFBQUFBQThEOEZJQUJFQUFBQUFBQUFBQUFRemdFTEJRSjhJQUFnQUtFZ0FrSC8vNy8vQjBzTkFCb0NRQUpBQWtBQ1FDQUFJQUVRclFOQkEzRU9Bd0FCQWdNTElBRXJBd0FnQVNzRENCRE9BUXdEQ3lBQkt3TUFJQUVyQXdoQkFSRE5BWm9NQWdzZ0FTc0RBQ0FCS3dNSUVNNEJtZ3dCQ3lBQkt3TUFJQUVyQXdoQkFSRE5BUXNMSVFNZ0FTUUVJQU1MS0FFQ2Z5QUFJUUVEUUNBQlFRUnFJUUlnQVNnQ0FBUkFJQUloQVF3QkN3c2dBU0FBYTBFQ2RRdThCQUVNZkNBQkt3TUFJUVVnQVNzRENDRUdBbndnQWlzRENDSUVtU0lISUFJckF3QWlBNWtpQ0NBSVlnMEFHaUFJSUFjZ0IySU5BQm9nQ0NBSHBRc1Evd1lpRFpraEIwRUFJQTJxYXlFQklBY2dCMklqQXlNRFluSWdCeU1EWVhJRVFFRUFJUUVGSUFNZ0FSQi9JUU1nQkNBQkVIOGhCQXNnQlNBRG9pQUdJQVNpb0NBRElBT2lJQVFnQktLZ0lnbWpJQUVRZnlFSUFrQWdCaUFEb2lBRklBU2lvU0FKb3lBQkVIOGlEaUFPWWlBSUlBaGljVVVOQUNBSlJBQUFBQUFBQUFBQVlRUkFJQVlnQm1JZ0JTQUZZbkZGQkVBZ0FDQUZJd01nQTZZaUE2STVBd0FnQUNBR0lBT2lPUU1JRHdzTElBU1pJZ2tnQ1dFakF5TURZWEVnQ1NNRFluRWdBNWtpQ2lBS1lTTURJd05oY1NBS0l3TmljU0FHbVNJTEl3TmhJZ0VnQlpraURDTURZU0lDY25GeEJFQWdBRVFBQUFBQUFBRHdQMFFBQUFBQUFBQUFBQ0FDR3lBRnBpSUZJQU9pUkFBQUFBQUFBUEEvUkFBQUFBQUFBQUFBSUFFYklBYW1JZ1lnQktLZ0l3T2lPUU1BSUFBZ0JpQURvaUFGSUFTaW9TTURvamtEQ0E4TElBc2dDMkVqQXlNRFlYRWdDeU1EWW5FZ0RDQU1ZU01ESXdOaGNTQU1Jd05pY1NBSEl3TmhJQTFFQUFBQUFBQUFBQUJrY1hGeFJRMEFJQUFnQlVRQUFBQUFBQUR3UDBRQUFBQUFBQUFBQUNBS0l3TmhHeUFEcGlJRG9pQUdSQUFBQUFBQUFQQS9SQUFBQUFBQUFBQUFJQWtqQTJFYklBU21JZ1Npb0VRQUFBQUFBQUFBQUtJNUF3QWdBQ0FHSUFPaUlBVWdCS0toUkFBQUFBQUFBQUFBb2prRENBOExJQUFnQ0RrREFDQUFJQTQ1QXdnTFVnRURmeEFkSVFNZ0FDTUJLQUlBSWdKcUlnRWdBa2dnQUVFQVNuRWdBVUVBU0hJRVFDQUJFQlFhUVF3UUQwRi9Ed3NnQVNBRFNnUkFJQUVRRzBVRVFFRU1FQTlCZnc4TEN5TUJJQUUyQWdBZ0FndGxBUU4vSXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUdRNEFBMkFnQWdBQ2dDQ0NJQ1JRUkFJQUFvQWhBUVF5QUJKQVFQQ3lBQklBQW9BZ1EyQWdBZ0FVRUVhaUlESUFFb0FnQTJBZ0FnQWlBREVGY2dBQ2dDRUJCRElBRWtCQXM2QUNBQVFaeUxBVFlDQUNBQVFRYzZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFSEFsQUUyQWdBZ0FDQUJLUUlBTndJSUN3OEFJQUJCOEFKcUlBRWdBaENVQ2d1YkFRRURmeU1FSVFNakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBSkI3Ly8vL3dOTEJFQVFBd3NnQWtFQ1NRUkFJQUFnQWpvQUN5QUFJUVFGSUFKQkJHcEJmSEVpQlVILy8vLy9BMHNFUUJBREJTQUFJQVZCQW5RUVh5SUVOZ0lBSUFBZ0JVR0FnSUNBZUhJMkFnZ2dBQ0FDTmdJRUN3c2dCQ0FCSUFJUW13RWdBMEVBTmdJQUlBSkJBblFnQkdvZ0F5Z0NBRFlDQUNBREpBUUx5d0VCQlg4akJDRURJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFESUFFNkFBQWdBMEVCYWlFRUFrQUNRQ0FBTEFBTElnRkJBRWdpQlFSL0lBQW9BZ1FoQWlBQUtBSUlRZi8vLy84SGNVRi9hZ1VnQVVIL0FYRWhBa0VLQ3lJQklBSkdCRUFnQUNBQlFRRWdBU0FCRUl3Q0lBQXNBQXRCQUVnTkFRVWdCUTBCQ3lBQUlBSkJBV282QUFzTUFRc0NmeUFBS0FJQUlRWWdBQ0FDUVFGcU5nSUVJQVlMSVFBTElBQWdBbW9pQUNBRExBQUFPZ0FBSUFSQkFEb0FBQ0FBSUFRc0FBQTZBQUVnQXlRRUM3Z0JBUVYvSUFJb0FnQWdBQ2dDQUNJRElnWnJJZ1ZCQVhRaUJFRUVJQVFiUVg4Z0JVSC8vLy8vQjBrYklRVWdBU2dDQUNFSElBTkJBQ0FBS0FJRVFia0NSeUlFR3lBRkVJb0JJZ05GQkVBUUF3c2dCQVJBSUFBZ0F6WUNBQVVnQUNnQ0FDRUVJQUFnQXpZQ0FDQUVCRUFnQkNBQUtBSUVRZjhEY1VHRUEyb1JBUUFnQUNnQ0FDRURDd3NnQUVHNkFqWUNCQ0FCSUFjZ0JtdEJBblZCQW5RZ0EybzJBZ0FnQWlBQUtBSUFJQVZCQW5aQkFuUnFOZ0lBQzRVT0FRUi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FrRUVhaUVESUFCQnBPTUFOZ0lBSUFCQmtPQUFOZ0tzQnlBQUtBSzBCeUlCQkVBZ0FpQUFLQUt3QnpZQ0FDQURJQUlvQWdBMkFnQWdBU0FERUZjTElBQW9BcndIRUVNZ0FFR1E0QUEyQW9nSElBQW9BcEFISWdFRVFDQUNJQUFvQW93SE5nSUFJQU1nQWlnQ0FEWUNBQ0FCSUFNUVZ3c2dBQ2dDbUFjUVF5QUFRWkRnQURZQzRBWWdBQ2dDNkFZaUFRUkFJQUlnQUNnQzVBWTJBZ0FnQXlBQ0tBSUFOZ0lBSUFFZ0F4QlhDeUFBS0FMd0JoQkRJQUJCa09BQU5nSzhCaUFBS0FMRUJpSUJCRUFnQWlBQUtBTEFCallDQUNBRElBSW9BZ0EyQWdBZ0FTQURFRmNMSUFBb0Fzd0dFRU1nQUVHUTRBQTJBcEFHSUFBb0FwZ0dJZ0VFUUNBQ0lBQW9BcFFHTmdJQUlBTWdBaWdDQURZQ0FDQUJJQU1RVndzZ0FDZ0NvQVlRUXlBQVFaRGdBRFlDN0FVZ0FDZ0M5QVVpQVFSQUlBSWdBQ2dDOEFVMkFnQWdBeUFDS0FJQU5nSUFJQUVnQXhCWEN5QUFLQUw4QlJCRElBQkJyT0FBTmdMQUJTQUFMQURyQlVFQVNBUkFJQUFvQXVBRkVFTUxJQUJCa09BQU5nTEFCU0FBS0FMSUJTSUJCRUFnQWlBQUtBTEVCVFlDQUNBRElBSW9BZ0EyQWdBZ0FTQURFRmNMSUFBb0F0QUZJZ0VnQUNnQzFBVWlCRWtFZndOQUlBRXNBQXRCQUVnRVFDQUJLQUlBRUVNZ0FDZ0MxQVVoQkFzZ0FVRU1haUlCSUFSSkRRQUxJQUFvQXRBRkJTQUJDeEJESUFCQnlPQUFOZ0tRQlNBQVFlVGdBRFlDc0FVZ0FDZ0N0QVVpQVFSQVFSZ2dBU0FBS0FLNEJSQklJQUJCQURZQ3VBVWdBRUVBTmdLMEJRc2dBRUdRNEFBMkFwQUZJQUFvQXBnRklnRUVRQ0FDSUFBb0FwUUZOZ0lBSUFNZ0FpZ0NBRFlDQUNBQklBTVFWd3NnQUNnQ29BVWlCQ0FBS0FLa0JVa0Vmd05BSUFRZ0JDZ0NBQ2dDQUVIL0EzRkJoQU5xRVFFQUlBUkJFR29pQkNBQUtBS2tCVWtOQUFzZ0FDZ0NvQVVGSUFRTEVFTWdBRUdNNFFBMkF1d0VJQUFvQXZRRUlnRUVRQ0FDSUFBb0F2QUVOZ0lBSUFNZ0FpZ0NBRFlDQUNBQklBTVFUUXNnQUNnQy9BUVFReUFBUVl6aEFEWUN5QVFnQUNnQzBBUWlBUVJBSUFJZ0FDZ0N6QVEyQWdBZ0F5QUNLQUlBTmdJQUlBRWdBeEJOQ3lBQUtBTFlCQkJESUFCQmpPRUFOZ0trQkNBQUtBS3NCQ0lCQkVBZ0FpQUFLQUtvQkRZQ0FDQURJQUlvQWdBMkFnQWdBU0FERUUwTElBQW9BclFFRUVNZ0FFR280UUEyQXZnRElBQXNBS01FUVFCSUJFQWdBQ2dDbUFRUVF3c2dBRUdNNFFBMkF2Z0RJQUFvQW9BRUlnRUVRQ0FDSUFBb0F2d0ROZ0lBSUFNZ0FpZ0NBRFlDQUNBQklBTVFUUXNnQUNnQ2lBUWlBU0FBS0FLTUJDSUVTUVIvQTBBZ0FTd0FDMEVBU0FSQUlBRW9BZ0FRUXlBQUtBS01CQ0VFQ3lBQlFReHFJZ0VnQkVrTkFBc2dBQ2dDaUFRRklBRUxFRU1nQUVHTTRRQTJBc3dESUFBb0F0UURJZ0VFUUNBQ0lBQW9BdEFETmdJQUlBTWdBaWdDQURZQ0FDQUJJQU1RVFFzZ0FDZ0MzQU1RUXlBQVFZemhBRFlDb0FNZ0FDZ0NxQU1pQVFSQUlBSWdBQ2dDcEFNMkFnQWdBeUFDS0FJQU5nSUFJQUVnQXhCTkN5QUFLQUt3QXhCRElBQkJxT0VBTmdMMEFpQUFMQUNmQTBFQVNBUkFJQUFvQXBRREVFTUxJQUJCak9FQU5nTDBBaUFBS0FMOEFpSUJCRUFnQWlBQUtBTDRBallDQUNBRElBSW9BZ0EyQWdBZ0FTQURFRTBMSUFBb0FvUURJZ0VnQUNnQ2lBTWlCRWtFZndOQUlBRXNBQXRCQUVnRVFDQUJLQUlBRUVNZ0FDZ0NpQU1oQkFzZ0FVRU1haUlCSUFSSkRRQUxJQUFvQW9RREJTQUJDeEJESUFCQmpPRUFOZ0xRQWlBQUtBTFlBaUlCQkVBZ0FpQUFLQUxVQWpZQ0FDQURJQUlvQWdBMkFnQWdBU0FERUUwTElBQW9BdUFDRUVNZ0FFR000UUEyQXFnQ0lBQW9BckFDSWdFRVFDQUNJQUFvQXF3Q05nSUFJQU1nQWlnQ0FEWUNBQ0FCSUFNUVRRc2dBQ2dDdUFJUVF5QUFRWXpoQURZQ2dBSWdBQ2dDaUFJaUFRUkFJQUlnQUNnQ2hBSTJBZ0FnQXlBQ0tBSUFOZ0lBSUFFZ0F4Qk5DeUFBS0FLUUFoQkRJQUJCak9FQU5nTFlBU0FBS0FMZ0FTSUJCRUFnQWlBQUtBTGNBVFlDQUNBRElBSW9BZ0EyQWdBZ0FTQURFRTBMSUFBb0F1Z0JFRU1nQUVHTTRRQTJBckFCSUFBb0FyZ0JJZ0VFUUNBQ0lBQW9BclFCTmdJQUlBTWdBaWdDQURZQ0FDQUJJQU1RVFFzZ0FDZ0N3QUVRUXlBQVFZemhBRFlDaUFFZ0FDZ0NrQUVpQVFSQUlBSWdBQ2dDakFFMkFnQWdBeUFDS0FJQU5nSUFJQUVnQXhCTkN5QUFLQUtZQVJCRElBQkJqT0VBTmdKZ0lBQW9BbWdpQVFSQUlBSWdBQ2dDWkRZQ0FDQURJQUlvQWdBMkFnQWdBU0FERUUwTElBQW9BbkFRUXlBQVFZemhBRFlDT0NBQVFVQnJLQUlBSWdFRVFDQUNJQUFvQWp3MkFnQWdBeUFDS0FJQU5nSUFJQUVnQXhCTkN5QUFLQUpJRUVNZ0FFR000UUEyQWhBZ0FDZ0NHQ0lCUlFSQUlBQW9BaUFRUXlBQ0pBUVBDeUFDSUFBb0FoUTJBZ0FnQXlBQ0tBSUFOZ0lBSUFFZ0F4Qk5JQUFvQWlBUVF5QUNKQVFMb2dNQkEzOENmd0pBSUFJZ0F5Z0NBQ0lLUmlJTFJRMEFJQUFnQ1NnQ1lFWWlERVVFUUNBSktBSmtJQUJIRFFFTElBTWdBa0VCYWpZQ0FDQUNRU3RCTFNBTUd6b0FBQ0FFUVFBMkFnQkJBQXdCQ3lBQUlBVkdJQVlvQWdRZ0Jpd0FDeUlHUWY4QmNTQUdRUUJJRzBFQVIzRUVRRUVBSUFnb0FnQWlBQ0FIYTBHZ0FVNE5BUm9nQkNnQ0FDRUJJQWdnQUVFRWFqWUNBQ0FBSUFFMkFnQWdCRUVBTmdJQVFRQU1BUXNnQ1VIb0FHb2hCMEVBSVFVRGZ5QUZRUnBHQkg4Z0J3VWdCVUVCYWlFR0lBQWdCVUVDZENBSmFpSUZLQUlBUmdSL0lBVUZJQVloQlF3Q0N3c0xJQWxySWdWQkFuVWhBQ0FGUWR3QVNnUi9RWDhGQWtBQ1FBSkFJQUZCQ0dzT0NRQUNBQUlDQWdJQ0FRSUxRWDhnQUNBQlRnMERHZ3dCQ3lBRlFkZ0FUZ1JBUVg4Z0N3MERHa0YvSUFvZ0FtdEJBMDROQXhwQmZ5QUtRWDlxTEFBQVFUQkhEUU1hSUFSQkFEWUNBQ0FBUWFBMmFpd0FBQ0VBSUFNZ0NrRUJhallDQUNBS0lBQTZBQUJCQUF3REN3c2dBRUdnTm1vc0FBQWhBQ0FESUFwQkFXbzJBZ0FnQ2lBQU9nQUFJQVFnQkNnQ0FFRUJhallDQUVFQUN3c0xxUU1CQTM4Q2Z3SkFJQUlnQXlnQ0FDSUtSaUlMUlEwQUlBa3RBQmdnQUVIL0FYRkdJZ3hGQkVBZ0NTMEFHU0FBUWY4QmNVY05BUXNnQXlBQ1FRRnFOZ0lBSUFKQkswRXRJQXdiT2dBQUlBUkJBRFlDQUVFQURBRUxJQUJCL3dGeElBVkIvd0Z4UmlBR0tBSUVJQVlzQUFzaUJrSC9BWEVnQmtFQVNCdEJBRWR4QkVCQkFDQUlLQUlBSWdBZ0IydEJvQUZPRFFFYUlBUW9BZ0FoQVNBSUlBQkJCR28yQWdBZ0FDQUJOZ0lBSUFSQkFEWUNBRUVBREFFTElBbEJHbW9oQjBFQUlRVURmeUFGUVJwR0JIOGdCd1VnQlVFQmFpRUdJQVVnQ1dvaUJTMEFBQ0FBUWY4QmNVWUVmeUFGQlNBR0lRVU1BZ3NMQ3lBSmF5SUFRUmRLQkg5QmZ3VUNRQUpBQWtBZ0FVRUlhdzRKQUFJQUFnSUNBZ0lCQWd0QmZ5QUFJQUZPRFFNYURBRUxJQUJCRms0RVFFRi9JQXNOQXhwQmZ5QUtJQUpyUVFOT0RRTWFRWDhnQ2tGL2Fpd0FBRUV3UncwREdpQUVRUUEyQWdBZ0FFR2dObW9zQUFBaEFDQURJQXBCQVdvMkFnQWdDaUFBT2dBQVFRQU1Bd3NMSUFCQm9EWnFMQUFBSVFBZ0F5QUtRUUZxTmdJQUlBb2dBRG9BQUNBRUlBUW9BZ0JCQVdvMkFnQkJBQXNMQzdvQ0FRUi9JQUFvQWdRaUFTQUFLQUlNUmdSQUlBQWdBVUVCZENJQ05nSU1JQUFvQWhnaUFRUkFJQUVvQWdnaUF5Z0NBQ2dDQ0NFRUlBTWdBaUFFUWY4QmNVR09CMm9SQUFBZ0FTZ0NBQ0lCQkVBRFFDQUJLQUlJSWdJb0FnQW9BZ2doQXlBQ0lBQW9BZ3dnQTBIL0FYRkJqZ2RxRVFBQUlBRW9BZ0FpQVEwQUN3c0xDMEVnRUVraEFTQUFJQUFvQWdRaUFrRUJhallDQkNBQlFRQTJBZ2dnQVVFQU5nSU1JQUVnQWpZQ0VDQUJRUUEyQWh3Z0FVRUFOZ0lZSUFGQkFEWUNGQ0FCUVFBMkFnQWdBU0FBS0FKNElnSTJBZ1FnQWlBQVFmUUFhaUlESUFNb0FnQWJJQUUyQWdBZ0FDQUJOZ0o0SUFBZ0FDZ0NjRUVCYWpZQ2NDQUFLQUk4SWdCRkJFQWdBUThMQTBBZ0FDZ0NDQ0lDS0FJQUtBSU1JUU1nQWlBQklBTkIvd0Z4UVk0SGFoRUFBQ0FBS0FJQUlnQU5BQXNnQVF1REFRSUNmd0YrSUFDbklRSWdBRUwvLy8vL0QxWUVRQU5BSUFGQmYyb2lBU0FBSUFCQ0NvQWlCRUlLZm4yblFmOEJjVUV3Y2pvQUFDQUFRdi8vLy8rZkFWWUVRQ0FFSVFBTUFRc0xJQVNuSVFJTElBSUVRQU5BSUFGQmYyb2lBU0FDSUFKQkNtNGlBMEVLYkd0Qk1ISTZBQUFnQWtFS1R3UkFJQU1oQWd3QkN3c0xJQUVMMWdJQ0JIOEZmQ01FSVFNakJFRWdhaVFFSXdRakJVNEVRRUVnRUFBTElBTkJFR29oQkNBQkt3TUFJZ2NnQWlzREFDSUlRYURUQWlzREFDSUxvR01nQnlBSUlBdWhaSEVFZnlBQlFRaHFJZ1VyQXdBaUNpQUxJQUpCQ0dvaUJpc0RBQ0lKb0dNZ0NpQUpJQXVoWkhFRVFDQUVJQWM1QXdBZ0JDQUtPUU1JSUFNZ0JDQUhSSnFabVptWm1ibS9vQ0FIUkpxWm1abVptYmsvb0NBS1JKcVptWm1abWJtL29DQUtSSnFabVptWm1iay9vQkNjQnlBQklBTkdCRUFnQVNzREFDRUhCU0FCSUFNckF3QWlCemtEQUNBRklBTXJBd2c1QXdBTElBSXJBd0FoQ0FzZ0JRVWdBa0VJYWlFR0lBRkJDR29MSVFFZ0NDQUhvU0lISUFlaUlBWXJBd0FnQVNzREFLRWlDQ0FJb3FDZklRa2dBRUlBTndNQUlBQkNBRGNEQ0NBSklBQVFtd2NFUUNBREpBUVBDeUFBSUFkRUFBQUFBQUFBOEQ4Z0NhTWdDYU1pQjZJNUF3QWdBQ0FJSUFlaU9RTUlJQU1rQkF2MkF3RUpmQ0FCS3dNSUlRWWdBQ3NEQ0NFRklBRXJBd0FpQXlBQUt3TUFJZ2RCb05NQ0t3TUFJZ1NoSWdoalJRUkFJQVlnQlNBRW9XTkZJQU1nQnlBRW9HTkZJQU1nQ0dSRmNuSUVRQ0FDS3dNSUlRY2dBaXNEQUNJRklBTWdCS0VpQ0dORkJFQWdCeUFHSUFTaFkwVWdCU0FESUFTZ1kwVWdCU0FJWkVWeWNnUkFRUUFQQ3dzZ0FTQUNSd1JBSUFFZ0JUa0RBQ0FCSUFjNUF3Z0xJQUlnQXprREFDQUNJQVk1QXdnZ0FTc0RDQ0VHSUFBckF3Z2hCU0FCS3dNQUlnTWdBQ3NEQUNJSElBU2hJZ2hqUlFSQUlBWWdCU0FFb1dORklBTWdCQ0FIb0dORklBTWdDR1JGY25JRVFFRUJEd3NMSUFBZ0FVY0VRQ0FBSUFNNUF3QWdBQ0FHT1FNSUN5QUJJQWM1QXdBZ0FTQUZPUU1JUVFJUEN3c2dBaXNEQ0NFS0lBSXJBd0FpQ1NBRElBU2hJZ3RqUlFSQUlBb2dCaUFFb1dORklBa2dBeUFFb0dORklBa2dDMlJGY25JRVFDQUFJQUZIQkVBZ0FDQURPUU1BSUFBZ0Jqa0RDQXNnQVNBSE9RTUFJQUVnQlRrRENDQUNLd01JSVFZZ0Fpc0RBQ0lESUFoalJRUkFJQVlnQlNBRW9XTkZJQU1nQnlBRW9HTkZJQU1nQ0dSRmNuSUVRRUVCRHdzTElBRWdBa2NFUUNBQklBTTVBd0FnQVNBR09RTUlDeUFDSUFjNUF3QWdBaUFGT1FNSVFRSVBDd3NnQUNBQ1J3UkFJQUFnQ1RrREFDQUFJQW81QXdnTElBSWdCemtEQUNBQ0lBVTVBd2hCQVFzSUFFRU1FRDVCQUFzSUFFRUZFQnBCQUF0ZUFRRi9JQUVnQUVnZ0FDQUJJQUpxU0hFRVFDQUJJQUpxSVFFZ0FDSURJQUpxSVFBRFFDQUNRUUJLQkVBZ0FrRUJheUVDSUFCQkFXc2lBQ0FCUVFGcklnRXNBQUE2QUFBTUFRc0xJQU1oQUFVZ0FDQUJJQUlRZ3dFYUN5QUFDd1FBUVFFTHRnRUJCbjhqQkNFQkl3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUJRUmhxSVFRZ0FVRUlhaUVESUFGQkVHb2lBa0VBTmdJQUlBQWdBaERDQWdSL1FRQUZJQUlvQWdBaUFrRi9haUFBS0FJRUlBQW9BZ0JyU1FSL0lBTWdBQ2dDQUNJRk5nSUFJQU1nQWlBRmFqWUNCQ0FBSUFJZ0FDZ0NBR28yQWdBZ0FVSDFoUUlRUkNBRUlBRXBBZ0EzQWdBZ0F5QUVFTUVDQkg4Z0FFSHdBbW9RZ2dvRklBQWdBeERXQWdzRlFRQUxDeUVHSUFFa0JDQUdDOW9DQVFaL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNDZndKQUFrQUNRQUpBSUFBb0FnUWdBQ2dDQUNJQmEwRUFTd1IvSUFFc0FBQUZRUUFMUVJoMFFSaDFRY29BYXc0UEFRTUNBd01EQXdNREF3TURBd01BQXdzZ0FDQUFLQUlBUVFGcU5nSUFJQUFRV0NJQkJIOENmeUFCUVFBZ0FFSEZBQkJQR3lFRklBSWtCQ0FGQ3c4RlFRQUxEQU1MSUFBZ0FDZ0NBRUVCYWpZQ0FDQUFRUWhxSWdFaUF5Z0NCQ0FES0FJQWEwRUNkU0VEQWtBRFFDQUFRY1VBRUU4TkFTQUNJQUFRd1FFaUJEWUNBQ0FFQkVBZ0FTQUNFR2dNQVFzTFFRQU1Bd3NnQWlBQUlBTVFjeUFBUWZBQ2FpQUNFSkFFREFJTElBQW9BZ1FnQUNnQ0FDSUJhMEVCU3dSL0lBRXNBQUVGUVFBTFFmOEJjVUhhQUVjRVFDQUFFTXNDREFJTElBQWdBQ2dDQUVFQ2FqWUNBQ0FBRUtjQklnRUVmeUFCUVFBZ0FFSEZBQkJQR3dWQkFBc01BUXNnQUJCZEN5RUdJQUlrQkNBR0N5OEJBWDhnQUN3QUJTSUNRUUpHQkg4Z0FDZ0NBQ2dDQUNFQ0lBQWdBU0FDUVQ5eFFZb0JhaEVEQUFVZ0FrVUxDK3dCQVFSL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQWtFRWFpRUJJQUJCMUFBUVR3Ui9JQUZCQURZQ0FBSi9Ba0FnQUVIZkFCQlBCSDhNQVFVZ0FDQUJFTUlDUlFSQUlBRWdBU2dDQUVFQmFpSUROZ0lBSUFCQjN3QVFUdzBDQzBFQUN3d0JDeUFBTEFEcUFnUkFJQUJCeS9ZQkVGQU1BUXNnQUN3QTZRSUVRQ0FBUWZBQ2FrRVVFRXdpQXlBQktBSUFFTmdKSUFJZ0F5SUJOZ0lBSUFCQnpBSnFJQUlRYUNBQkRBRUxJQU1nQUVHZ0Ftb2lBQ0lCS0FJRUlBRW9BZ0JyUVFKMVNRUi9JQUFvQWdBZ0EwRUNkR29vQWdBRlFRQUxDd1ZCQUFzaEJDQUNKQVFnQkFzWEFDQUFLQUlBSUFCQkRHcEhCRUFnQUNnQ0FCQkRDd3MxQVFGL1FkVCtBaWdDQUNJQUJFQWdBQ2tETUVLQWZvTkNnTmFzbWZUSWs2YkRBRkVFUUNBQUtBSU1FTmdDQ3d0QkFoRFlBZ3M2QVFGL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQWlBQk5nSUFRY2p1QUNnQ0FDSUJJQUFnQWhDN0F4b2dBUkR6QmhBREM5VUJBUVIvUVJnUVNTSUVJQUUyQWhBZ0JFRUFOZ0lBSUFRZ0FTZ0NIQ0lETmdJRUlBTWdBVUVZYWlJRklBVW9BZ0FiSUFRMkFnQWdBU0FFTmdJY0lBRWdBU2dDRkVFQmFqWUNGQ0FCSUFFb0FneEJBV28yQWd4QkdCQkpJZ01nQWpZQ0VDQURRUUEyQWdBZ0F5QUNLQUljSWdVMkFnUWdCU0FDUVJocUlnWWdCaWdDQUJzZ0F6WUNBQ0FDSUFNMkFod2dBaUFDS0FJVVFRRnFOZ0lVSUFJZ0FpZ0NDRUVCYWpZQ0NDQUVJQU0yQWdnZ0F5QUVOZ0lJSUFNZ0FDQUJJQUlnQkNBREVMSURJZ0EyQWd3Z0JDQUFOZ0lNSUFBTGVBRUNmeU1FSVFNakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBTWdBU2dDSENJQk5nSUFJQUVnQVNnQ0JFRUJhallDQkNBRFFkRDdBaEJUSWdFb0FnQW9BaEFoQkNBQ0lBRWdCRUgvQUhGQkJHb1JDQUEyQWdBZ0FDQUJJQUVvQWdBb0FoUkIvd0Z4UVk0SGFoRUFBQ0FERUZRZ0F5UUVDd2tBSUFBZ0FSQ05CZ3Q0QVFKL0l3UWhBeU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQXlBQktBSWNJZ0UyQWdBZ0FTQUJLQUlFUVFGcU5nSUVJQU5CdVBzQ0VGTWlBU2dDQUNnQ0VDRUVJQUlnQVNBRVFmOEFjVUVFYWhFSUFEb0FBQ0FBSUFFZ0FTZ0NBQ2dDRkVIL0FYRkJqZ2RxRVFBQUlBTVFWQ0FESkFRTHpBRUFJQUJCeE9FQU5nSUFJQUJCdU9JQU5nSVVJQUJCQURZQ0dDQUFRUUEyQWh3Z0FFR2s0Z0EyQWlBZ0FFRUFOZ0lrSUFCQkFEWUNLQ0FBUVpEaUFEWUNMQ0FBUVFBMkFqQWdBRUVBTmdJMElBQkIvT0VBTmdJNElBQkJBRFlDWkNBQVFRQTJBbWdnQUVJQU53SThJQUJDQURjQ1JDQUFRZ0EzQWt3Z0FFSUFOd0pVSUFCQkFEWUNYQ0FBUWN6aUFEWUNZQ0FBUVFBMkFnZ2dBRUVBTmdJRUlBQkNBRGNDYkNBQVFnQTNBblFnQUVJQU53SjhJQUJCQURZQ2hBRWdBRUVRTmdJTUlBQkJFRFlDRUFzREFBRUxtQUVCQTN3Z0FDQUFvaUlESUFNZ0E2S2lJQU5FZk5YUFdqclo1VDJpUk91Y0s0cm01VnErb0tJZ0F5QURSSDMrc1ZmakhjYytva1RWWWNFWm9BRXF2NkNpUktiNEVCRVJFWUUvb0tBaEJTQURJQUNpSVFRZ0FnUjhJQUFnQkVSSlZWVlZWVlhGUDZJZ0F5QUJSQUFBQUFBQUFPQS9vaUFFSUFXaW9hSWdBYUdnb1FVZ0JDQURJQVdpUkVsVlZWVlZWY1cvb0tJZ0FLQUxDNVFCQVFSOElBQWdBS0lpQWlBQ29pRURSQUFBQUFBQUFQQS9JQUpFQUFBQUFBQUE0RCtpSWdTaElnVkVBQUFBQUFBQThEOGdCYUVnQktFZ0FpQUNJQUlnQWtTUUZjc1pvQUg2UHFKRWQxSEJGbXpCVnIrZ29rUk1WVlZWVlZXbFA2Q2lJQU1nQTZJZ0FrVEVzYlM5bnU0aFBpQUNSTlE0aUw3cCtxZzlvcUdpUksxU25JQlBmcEsrb0tLZ29pQUFJQUdpb2FDZ0N6VUJBbjhqQkNFRUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUVJQU0yQWdBZ0FDQUJJQUlnQkJEeUFTRUZJQVFrQkNBRkM0Z0RBUVovSXdRaEJ5TUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBMEg4N2dJZ0F4c2lCQ2dDQUNFREFuOENRQ0FCQkg4Q2Z5QUFJQWNnQUJzaEJTQUNCRUFDUUFKQUlBTUVRQ0FESVFBZ0FpRUREQUVGSUFFc0FBQWlBRUYvU2dSQUlBVWdBRUgvQVhFMkFnQWdBRUVBUnd3RkN5QUJMQUFBSVFCQmxQQUFLQUlBS0FJQVJRUkFJQVVnQUVIL3Z3TnhOZ0lBUVFFTUJRc2dBRUgvQVhGQnZuNXFJZ0JCTWtzTkJpQUJRUUZxSVFFZ0FFRUNkRUhRREdvb0FnQWhBQ0FDUVg5cUlnTU5BUXNNQVFzZ0FTMEFBQ0lHUVFOMklnZ2dBRUVhZFdvZ0NFRndhbkpCQjBzTkJDQURRWDlxSVFNZ0JrR0FmMm9nQUVFR2RISWlBRUVBU0FSQUEwQWdBMFVOQWlBQlFRRnFJZ0VzQUFBaUJrSEFBWEZCZ0FGSERRWWdBMEYvYWlFRElBWkIvd0Z4UVlCL2FpQUFRUVowY2lJQVFRQklEUUFMQ3lBRVFRQTJBZ0FnQlNBQU5nSUFJQUlnQTJzTUFnc2dCQ0FBTmdJQUMwRitDd1VnQXcwQlFRQUxEQUVMSUFSQkFEWUNBRUg0N2dKQjFBQTJBZ0JCZndzaENTQUhKQVFnQ1F0Y0FRSi9JQUFzQUFBaUFpQUJMQUFBSWdOSElBSkZjZ1IvSUFJaEFTQURCUU4vSUFCQkFXb2lBQ3dBQUNJQ0lBRkJBV29pQVN3QUFDSURSeUFDUlhJRWZ5QUNJUUVnQXdVTUFRc0xDeUVBSUFGQi93RnhJQUJCL3dGeGF3djJBd0VGZnlBQktBSUVJZ01vQXB3QklnUUVRQ0FCSUFRMkFnUWdBQ0FCSUFJUTBnRWdBU2dDQkNnQ21BRWlBd1JBSUFFZ0F6WUNCQVZCd1BRQ1FkVEZBVUVuRUdBYUlBRW9BZ1FoQXdzRklBTW9BcUFCUlFSQUlBTW9BcVFCUlFSQUlBTW9BcWdCUlFSQUlBTkJ6QUJxSWdVb0FnQWlCQVJBSUFKQnpBQnFJUVlEUUNBRUtBSUlJUWNnQXlBREtBSlVRWDlxTmdKVUlBVWdCQ2dDQURZQ0FDQUVRZEN6QWlnQ0FEWUNBRUhRc3dJZ0JEWUNBQ0FGS0FJQUlnUkJCR29nQTBIUUFHb2dCQnRCQURZQ0FDQUNJQUlvQWxSQkFXbzJBbFJCREJCSklRTWdBaWdDVUNFRUlBTkJBRFlDQUNBRElBUTJBZ1FnQXlBSE5nSUlJQVFnQmlBR0tBSUFHeUFETmdJQUlBSWdBellDVUNBQktBSUVJZ05CekFCcUlnVW9BZ0FpQkEwQUN3c0xDd3NMSUFNb0FxQUJJZ1FFUUNBQklBUTJBZ1FnQUNBQklBSVEwZ0VnQVNnQ0JDZ0NtQUVpQXdSQUlBRWdBellDQkFWQndQUUNRZFRGQVVFbkVHQWFJQUVvQWdRaEF3c0xJQU1vQXFRQklnUUVRQ0FCSUFRMkFnUWdBQ0FCSUFJUTBnRWdBU2dDQkNnQ21BRWlBd1JBSUFFZ0F6WUNCQVZCd1BRQ1FkVEZBVUVuRUdBYUlBRW9BZ1FoQXdzTElBTW9BcWdCSWdORkJFQVBDeUFCSUFNMkFnUWdBQ0FCSUFJUTBnRWdBU2dDQkNnQ21BRWlBQVJBSUFFZ0FEWUNCQVZCd1BRQ1FkVEZBVUVuRUdBYUN3dW1CUUVDZndOQUlBSW9BZ1FoQkNBQ0VNRUhJQUlnQkRZQ0JDQUNFTUFIRFFBTEFrQUNRQ0FDS0FJRUlnUW9BcHdCRFFBZ0JDZ0NvQUVOQUNBRUtBS2tBUTBBSUFRb0FxZ0JEUUFNQVFzZ0JDZ0NLQ0FBS0FJd1RBUkFJQUFnQWlBRUVOSUJJQVFvQXB3QklnVUVRQ0FDSUFVUWdBRWdCRUVBTmdLY0FRc2dCQ2dDb0FFaUJRUkFJQUlnQlJDQUFTQUVRUUEyQXFBQkN5QUVLQUtrQVNJRkJFQWdBaUFGRUlBQklBUkJBRFlDcEFFTElBUW9BcWdCSWdVRVFDQUNJQVVRZ0FFZ0JFRUFOZ0tvQVFzTEN5QUNLQUlFSWdRb0Fwd0JJZ1VFUUNBQ0lBVTJBZ1FnQUNBQklBSWdBeERUQVNBQ0tBSUVLQUtZQVNJRUJFQWdBaUFFTmdJRUJVSEE5QUpCMU1VQlFTY1FZQm9nQWlnQ0JDRUVDd1VnQkNnQ29BRkZCRUFnQkNnQ3BBRkZCRUFnQkNnQ3FBRkZCRUFnQkNnQ0tDQUFLQUl3U2dSQUlBTWdBeWdDREVFQmFqWUNERUVNRUVraEFDQURLQUlJSVFFZ0FFRUFOZ0lBSUFBZ0FUWUNCQ0FBSUFRMkFnZ2dBeWdDQkFSQUlBRWdBRFlDQUFVZ0F5QUFOZ0lFQ3lBRElBQTJBZ2dQQ3dzTElBUW9BcVFCUlFSQUlBUW9BcWdCUlFSQUlBUW9BaWdnQUNnQ01Fd0VRQ0FBSUFFZ0FoRFNBeG9QQ3dzTElBUW9BcVFCUlFSQUlBUW9BcWdCUlFSQUR3c0xDd3NnQkNnQ29BRWlCUVJBSUFJZ0JUWUNCQ0FBSUFFZ0FpQURFTk1CSUFJb0FnUW9BcGdCSWdRRVFDQUNJQVEyQWdRRlFjRDBBa0hVeFFGQkp4QmdHaUFDS0FJRUlRUUxDeUFFS0FLa0FTSUZCRUFnQWlBRk5nSUVJQUFnQVNBQ0lBTVEwd0VnQWlnQ0JDZ0NtQUVpQkFSQUlBSWdCRFlDQkFWQndQUUNRZFRGQVVFbkVHQWFJQUlvQWdRaEJBc0xJQVFvQXFnQklnUkZCRUFQQ3lBQ0lBUTJBZ1FnQUNBQklBSWdBeERUQVNBQ0tBSUVLQUtZQVNJQUJFQWdBaUFBTmdJRUJVSEE5QUpCMU1VQlFTY1FZQm9MQzc4REFRTi9Ba0FDUUNBQktBSUVJZ0lvQXB3QklnTUVRQ0FDUVFBMkFpZ2dBU0FETmdJRUlBQWdBUkRVQVNBQktBSUVLQUtZQVNJQ0JFQWdBU0FDTmdJRUJVSEE5QUpCMU1VQlFTY1FZQm9nQVNnQ0JDRUNDeUFDSUFJb0Fwd0JLQUlvSUFJb0FpaHFOZ0lvSUFKQm9BRnFJZ01vQWdBaEJBd0JCUUpBSUFKQm9BRnFJZ01vQWdBaUJFVUVRQ0FDS0FLa0FVVUVRQ0FDS0FLb0FRUkFJQUpCQURZQ0tBd0RCUThMQUFzTElBSkJBRFlDS0F3Q0N3c01BUXNnQkFSQUlBRWdBeWdDQURZQ0JDQUFJQUVRMUFFZ0FTZ0NCQ2dDbUFFaUFnUkFJQUVnQWpZQ0JBVkJ3UFFDUWRURkFVRW5FR0FhSUFFb0FnUWhBZ3NnQWlBQ0tBS2dBU2dDS0NBQ0tBSW9hallDS0FzTElBSW9BcVFCSWdNRVFDQUJJQU0yQWdRZ0FDQUJFTlFCSUFFb0FnUW9BcGdCSWdJRVFDQUJJQUkyQWdRRlFjRDBBa0hVeFFGQkp4QmdHaUFCS0FJRUlRSUxJQUlnQWlnQ3BBRW9BaWdnQWlnQ0tHbzJBaWdMSUFJb0FxZ0JJZ0pGQkVBUEN5QUJJQUkyQWdRZ0FDQUJFTlFCSUFFb0FnUW9BcGdCSWdBRVFDQUJJQUEyQWdRRlFjRDBBa0hVeFFGQkp4QmdHaUFCS0FJRUlRQUxJQUFnQUNnQ3FBRW9BaWdnQUNnQ0tHbzJBaWdML0FNQkJIOGpCQ0VISXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBRUlBSk9CRUFnQWlBRVJnUkFJQU1vQWdBZ0JpQURLQUlFSUFVZ0F5Z0NFR3RzYWtFQ2RHb2dBU2dDQkRZQ0FBVWdCMEhBOUFKQnJzWUJRVFlRWUNJQUlBQW9BZ0JCZEdvb0FnQnFLQUljSWdFMkFnQWdBU0FCS0FJRVFRRnFOZ0lFSUFkQnFQc0NFRk1pQVNnQ0FDZ0NIQ0VDSUFGQkNpQUNRVDl4UVlvQmFoRURBQ0VCSUFjUVZDQUFJQUVRcEFFZ0FCQkZDeUFISkFRUEN5QUJFS0VISUFFUW9BY2dBUkNmQnlBQkVKMEhJQUVnQVNnQ0JDZ0NuQUUyQWdRZ0FDQUJJQUlnQXlBRVFRRnFJZ2dnQlVFQmRDSUZJQVpCQVhRaUJrRUJjaUlKRU5VQklBRW9BZ1FvQXBnQklnUUVRQ0FCSUFRMkFnUUZRY0QwQWtIVXhRRkJKeEJnR2lBQktBSUVJUVFMSUFFZ0JDZ0NvQUUyQWdRZ0FDQUJJQUlnQXlBSUlBVkJBWElpQ2lBSkVOVUJJQUVvQWdRb0FwZ0JJZ1FFUUNBQklBUTJBZ1FGUWNEMEFrSFV4UUZCSnhCZ0dpQUJLQUlFSVFRTElBRWdCQ2dDcEFFMkFnUWdBQ0FCSUFJZ0F5QUlJQVVnQmhEVkFTQUJLQUlFS0FLWUFTSUVCRUFnQVNBRU5nSUVCVUhBOUFKQjFNVUJRU2NRWUJvZ0FTZ0NCQ0VFQ3lBQklBUW9BcWdCTmdJRUlBQWdBU0FDSUFNZ0NDQUtJQVlRMVFFZ0FTZ0NCQ2dDbUFFaUFBUkFJQUVnQURZQ0JBVkJ3UFFDUWRURkFVRW5FR0FhQ3lBSEpBUUxqUm9CR244Q1FBSkFJQUlvQXBnQklna0VRQ0FKS0FKc0lnY0VRQU5BUVF3UVNTSUdRUUEyQWdBZ0JpQUlOZ0lFSUFZZ0J5Z0NDRFlDQ0NBREJFQWdDQ0FHTmdJQUJTQUdJUU1MSUFjb0FnQWlCd1JBSUFZaENBd0JDd3NMSUFrb0Fsd2lFQVIvUVFBaENBTkFRUXdRU1NJSFFRQTJBZ0FnQnlBT05nSUVJQWNnRUNnQ0NEWUNDQ0FJQkVBZ0RpQUhOZ0lBQlNBSElRZ0xJQkFvQWdBaUVBUkFJQWNoRGd3QkN3c2dDRVVpRGdSL0lBY0ZJQWdoRUFOQUlCQW9BZ2doQ2tFTUVFa2lDVUVBTmdJQUlBa2dCallDQkNBSklBbzJBZ2dnQXdSQUlBWWdDVFlDQUNBSklRWUZJQWtpQmlFREN5QVFLQUlBSWhBTkFBc2dEZ1IvSUFjRlFRd2dDQ0FIRUVoQkFBc0xCVUVBQ3lFSEJTQUNLQUtjQVNJR0JFQkJEQkJKSWdOQkFEWUNBQ0FEUVFBMkFnUWdBeUFHTmdJSUN5QUNLQUtnQVNJSUJFQkJEQkJKSWdaQkFEWUNBQ0FHSUFNMkFnUWdCaUFJTmdJSUlBTUVRQ0FESUFZMkFnQUZJQVloQXdzRklBTWhCZ3NnQWlnQ3BBRWlCd1JBUVF3UVNTSUlRUUEyQWdBZ0NDQUdOZ0lFSUFnZ0J6WUNDQ0FEQkVBZ0JpQUlOZ0lBSUFnaEJnVWdDQ0lHSVFNTEN5QUNLQUtvQVNJSUJFQkJEQkJKSWdsQkFEWUNBQ0FKSUFZMkFnUWdDU0FJTmdJSUlBTUVmeUFHSUFrMkFnQWdBeUVLREFNRlFRQWhCeUFKSWdZTElRTUZRUUFoQndzTElBTUVmeUFHSVFrZ0F5RUtJQWNoQ3d3QkJVRUFJUTVCQUNFUUlBY2hDRUVBSVFsQkFBc2hCZ3dCQzBFQUlRNUJBQ0VRUVFBaENFRUFJUWRCQUNFRFFRQWhCaUFLSVFRZ0N5RUtRUUFoQ3dOL0lBUW9BZ2doRHlBRUtBSUFJZzBoRmlBRVFkQ3pBaWdDQURZQ0FFSFFzd0lnQkRZQ0FDQU5SU0lhQkVCQkFDRUpCU0FXUVFBMkFnUUxJQUlnRHhES0J3UkFRUXdRU1NJRVFRQTJBZ0FnQkNBTE5nSUVJQVFnRHpZQ0NDQWJCRUFnQ3lBRU5nSUFJQVFoQ3dVZ0JDSU9JZ3NoR3dzRkFrQWdBaWdDQUNBUEtBSUFTQVJBUVF3UVNTSUVRUUEyQWdBZ0JDQUtOZ0lFSUFRZ0R6WUNDQ0FWQkVBZ0NpQUVOZ0lBSUFRaENnVWdCQ0lLSVJVTElCbEJBV29oR1F3QkN5QVBLQUtjQVNJV0JFQkJEQkJKSWdSQkFEWUNBQ0FFSUFrMkFnUWdCQ0FXTmdJSUlCb0VRQ0FFSWdraERRVWdDU0FFTmdJQUlBUWhDUXNGSUE4b0FxQUJSUVJBSUE4b0FxUUJSUVJBSUE4b0FxZ0JSUVJBSUFJZ0R4Q29BZ1JBSUJGQkFXb2hFVUVNRUVraUJFRUFOZ0lBSUFRZ0V6WUNCQ0FFSUE4MkFnZ2dCUVIvSUJNZ0JEWUNBQ0FFQlNBRUlRVWdCQ0lHSWdNTElSTU1CUXNnQWlBUFJnMEVJQUlvQXB3QlJRUkFJQUlvQXFBQlJRUkFJQUlvQXFRQlJRUkFJQUlvQXFnQkJFQUNRQ0FDS0FLZ0FRMEFJQUlvQXFRQkRRQWdBaWdDcUFGRkRRa0xCU0FYUVFGcUlRUkJEQkJKSWhkQkFEWUNBQ0FYSUJRMkFnUWdGeUFQTmdJSUlBd0VmeUFVSUJjMkFnQWdGeUVVSUFRRklCY2lCeUlJSVJRZ0J5RU1JQVFMSVJjTUNBc0xDd3RCREJCSklnUkJBRFlDQUNBRUlCSTJBZ1FnQkNBUE5nSUlJQndFUUNBU0lBUTJBZ0FnQkNFU0JTQUVJaEFpRWlFY0N3d0VDd3NMQ3lBUEtBS2dBU0lXQkVCQkRCQkpJZ1JCQURZQ0FDQUVJQWsyQWdRZ0JDQVdOZ0lJSUEwRVFDQUpJQVEyQWdBZ0JDRUpCU0FFSWdraERRc0xJQThvQXFRQkloWUVRRUVNRUVraUJFRUFOZ0lBSUFRZ0NUWUNCQ0FFSUJZMkFnZ2dEUVJBSUFrZ0JEWUNBQ0FFSVFrRklBUWlDU0VOQ3dzZ0R5Z0NxQUVpRmdSQVFRd1FTU0lFUVFBMkFnQWdCQ0FKTmdJRUlBUWdGallDQ0NBTkJFQWdDU0FFTmdJQUlBUWhDUVVnQkNJSklRMExDd3NMSUEwRWZ5QU5JUVFNQVFVZ0RpRWFJQkFoRmlBSUlRNGdCeUVRSUFNaERTQUxJUVFnRWlFSklBb0xDeUVJQ3lBQ1Fkd0FhaUlLS0FJQUlnTUVRRUVNSUFNZ0FpZ0NZQkJJSUFKQkFEWUNZQ0FLUVFBMkFnQUxJQlZGSWhKRkJFQWdGU0VEQTBCQkRCQkpJUXNnQWlnQ1lDRUhJQXRCQURZQ0FDQUxJQWMyQWdRZ0N5QURLQUlJTmdJSUlBY2dDaUFLS0FJQUd5QUxOZ0lBSUFJZ0N6WUNZQ0FES0FJQUlnTU5BQXNMSUFJZ0dUWUNaQ0FDUWV3QWFpSVlLQUlBSWdNRVFFRU1JQU1nQWlnQ2NCQklJQUpCQURZQ2NDQVlRUUEyQWdBTElBVkZJZ2RGQkVBZ0JTRURBMEJCREJCSklRc2dBaWdDY0NFS0lBdEJBRFlDQUNBTElBbzJBZ1FnQ3lBREtBSUlOZ0lJSUFvZ0dDQVlLQUlBR3lBTE5nSUFJQUlnQ3pZQ2NDQURLQUlBSWdNTkFBc0xJQUlnRVRZQ2RDQUNRZndBYWlJUEtBSUFJZ01FUUVFTUlBTWdBaWdDZ0FFUVNDQUNRUUEyQW9BQklBOUJBRFlDQUFzZ0RFVWlDa1VFUUNBTUlRTURRRUVNRUVraEVTQUNLQUtBQVNFTElCRkJBRFlDQUNBUklBczJBZ1FnRVNBREtBSUlOZ0lJSUFzZ0R5QVBLQUlBR3lBUk5nSUFJQUlnRVRZQ2dBRWdBeWdDQUNJRERRQUxDeUFDSUJjMkFvUUJJQUlvQXBnQkJFQWdBQ0FDRU1rSEN5QWJSU0laUlFSQUlCc2hBd05BSUFBZ0F5Z0NDQ0FDRU1nSElBTW9BZ0FpQXcwQUN3c2dIRVVpRjBVRVFDQWNJUU1EUUNBQUlBRWdBeWdDQ0NBQ0VNY0hJQU1vQWdBaUF3MEFDd3NDZndKQUFrQWdBaWdDbkFFaUF3Ui9JQUFnQVNBREVOWUJJQUlvQXFBQklnTkZEUUlNQVFVZ0FpZ0NvQUVpQXdSL0RBSUZBbjhnQWlnQ3BBRU5CQ0FDS0FLb0FRMEVJQWNFZnlBVEJVRU1JQTBnRXhCSVFRQUxJUU1nR0NnQ0FDSUhCSDlCQUNFQlFRQWhCZ05BUVF3UVNTSUFRUUEyQWdBZ0FDQUROZ0lFSUFBZ0J5Z0NDRFlDQ0NBR0JFQWdBeUFBTmdJQUJTQUFJZ0VoQmdzZ0FDRURJQWNvQWdBaUJ3MEFDeUFHSVJNZ0FRVkJBQ0VUUVFBTElRQWdBaWdDZENFTElBb0VmeUFVQlVFTUlBNGdGQkJJUVFBTElRY2dEeWdDQUNJT0JIOUJBQ0VCUVFBaEJnTkFRUXdRU1NJS1FRQTJBZ0FnQ2lBSE5nSUVJQW9nRGlnQ0NEWUNDQ0FHQkVBZ0J5QUtOZ0lBQlNBS0lnRWhCZ3NnQ2lFSElBNG9BZ0FpRGcwQUN5QUdCVUVBSVFGQkFBc2hDaUFDS0FLRUFTRVVJQklFZjBFQUlSRWdDeUVPUVFBaEVFRUFJUXRCQUNFU0lBQUZRUUFoQmlBTElRNUJBQ0VRUVFBaEMwRUFJUklEZnlBVktBSUlJUTBnRlNnQ0FDSU1JUVVnRlVIUXN3SW9BZ0EyQWdCQjBMTUNJQlUyQWdBZ0RFVWlGUVJBUVFBaENBVWdCVUVBTmdJRUN3SkFBa0FnRFNnQ25BRU5BQ0FOS0FLZ0FRMEFJQTBvQXFRQkRRQWdEU2dDcUFFTkFDQUNJQTBRcUFJRVFFRU1FRWtpQlVFQU5nSUFJQVVnQXpZQ0JDQUZJQTAyQWdnZ0V3UkFJQU1nQlRZQ0FDQUZJUU1GSUFVaUFDSURJUk1MSUE1QkFXb2hEZ1ZCREJCSklnVkJBRFlDQUNBRklBYzJBZ1FnQlNBTk5nSUlJQW9FUUNBSElBVTJBZ0FnQlNFSEJTQUZJZ0VpQnlFS0N5QVVRUUZxSVJRTERBRUxJQUlnRFJDb0FrVUVRQ0FMUVFGcUlRdEJEQkJKSWdWQkFEWUNBQ0FGSUJBMkFnUWdCU0FOTmdJSUlCSUVmeUFRSUFVMkFnQWdCUVVnQlNFU0lBVWlCZ3NoRUF3QkN5QU5LQUtjQVNJUkJFQkJEQkJKSWdWQkFEWUNBQ0FGSUFnMkFnUWdCU0FSTmdJSUlCVUVRQ0FGSWdnaERBVWdDQ0FGTmdJQUlBVWhDQXNMSUEwb0FxQUJJaEVFUUVFTUVFa2lCVUVBTmdJQUlBVWdDRFlDQkNBRklCRTJBZ2dnREFSQUlBZ2dCVFlDQUNBRklRZ0ZJQVVpQ0NFTUN3c2dEU2dDcEFFaUVRUkFRUXdRU1NJRlFRQTJBZ0FnQlNBSU5nSUVJQVVnRVRZQ0NDQU1CRUFnQ0NBRk5nSUFJQVVoQ0FVZ0JTSUlJUXdMQ3lBTktBS29BU0lSUlEwQVFRd1FTU0lGUVFBMkFnQWdCU0FJTmdJRUlBVWdFVFlDQ0NBTUJFQWdDQ0FGTmdJQUlBVWhDQVVnQlNJSUlRd0xDeUFNQkg4Z0RDRVZEQUVGSUFZaEVTQUFDd3NMSVFZZ0dDZ0NBQ0lBQkVCQkRDQUFJQUlvQW5BUVNDQUNRUUEyQW5BZ0dFRUFOZ0lBQ3lBVEJFQWdFeUVBQTBCQkRCQkpJUVVnQWlnQ2NDRU1JQVZCQURZQ0FDQUZJQXcyQWdRZ0JTQUFLQUlJTmdJSUlBd2dHQ0FZS0FJQUd5QUZOZ0lBSUFJZ0JUWUNjQ0FBS0FJQUlnQU5BQXNMSUFJZ0RqWUNkQ0FQS0FJQUlnQUVRRUVNSUFBZ0FpZ0NnQUVRU0NBQ1FRQTJBb0FCSUE5QkFEWUNBQXNnQ2dSQUlBb2hBQU5BUVF3UVNTRU1JQUlvQW9BQklRNGdERUVBTmdJQUlBd2dEallDQkNBTUlBQW9BZ2cyQWdnZ0RpQVBJQThvQWdBYklBdzJBZ0FnQWlBTU5nS0FBU0FBS0FJQUlnQU5BQXNMSUFJZ0ZEWUNoQUVnQWtHTUFXb2lEQ2dDQUNJQUJFQkJEQ0FBSUFJb0FwQUJFRWdnQWtFQU5nS1FBU0FNUVFBMkFnQUxJQkpGQkVBZ0FpQUxOZ0tVQVNBQklRQWdBeUVDSUFjaEZFRUFJUlVnQmd3QkN5QVNJUUFEUUVFTUVFa2hFaUFDS0FLUUFTRU9JQkpCQURZQ0FDQVNJQTQyQWdRZ0VpQUFLQUlJTmdJSUlBNGdEQ0FNS0FJQUd5QVNOZ0lBSUFJZ0VqWUNrQUVnQUNnQ0FDSUFEUUFMSUFJZ0N6WUNsQUZCRENBUklCQVFTQ0FCSVFBZ0F5RUNJQWNoRkVFQUlSVWdCZ3NMQ3d3Q0N5QUFJQUVnQXhEV0FRc2dBaWdDcEFFaUF3UkFJQUFnQVNBREVOWUJDeUFDS0FLb0FTSUNCRUFnQUNBQklBSVExZ0VMSUJNaEFpQUZJUk1nRENFS0lCQWhBQ0FHQ3lFQklBb0VRRUVNSUFBZ0ZCQklDeUFUQkVCQkRDQUJJQUlRU0FzZ0YwVUVRRUVNSUJZZ0NSQklDeUFaUlFSQVFRd2dHaUFFRUVnTElCVkZCRUFQQzBFTUlCVWdDQkJJQzZvRUFnTi9BM3dnQUNBQ0tBSUVFTVlISUFJb0FnUWlCQ3NER0NJSVJBQUFBQUFBQU9BL29pRUhJQVFyQXdnZ0I2QWhDU0FFS3dNUUlBZWdJQWhFL0tueDBrMWlVRCtpUVFGQmdKVHIzQU1RWVVFQmFyZEVBQUFBQVdYTnpVR2pvcUFoQnlBRUlBazVBekFnQkNBSE9RTTRJQUlvQWdRaUJDZ0NuQUVpQlFSQUlBSWdCVFlDQkNBQUlBRWdBaUFERU5jQklBQWdBaWdDQkJEekFTQUNLQUlFS0FLWUFTSUVCRUFnQWlBRU5nSUVCVUhBOUFKQjFNVUJRU2NRWUJvZ0FpZ0NCQ0VFQ3dVZ0JDZ0NvQUZGQkVBZ0JDZ0NwQUZGQkVBZ0JDZ0NxQUZGQkVBZ0F5QURLQUlNUVFGcU5nSU1RUXdRU1NFRklBTW9BZ2doQmlBRlFRQTJBZ0FnQlNBR05nSUVJQVVnQkRZQ0NDQUdJQU5CQkdvaUJDQUVLQUlBR3lBRk5nSUFJQU1nQlRZQ0NDQUFJQUVnQWlnQ0JCREZCdzhMQ3dzTElBUW9BcUFCSWdVRVFDQUNJQVUyQWdRZ0FDQUJJQUlnQXhEWEFTQUFJQUlvQWdRUTh3RWdBaWdDQkNnQ21BRWlCQVJBSUFJZ0JEWUNCQVZCd1BRQ1FkVEZBVUVuRUdBYUlBSW9BZ1FoQkFzTElBUW9BcVFCSWdVRVFDQUNJQVUyQWdRZ0FDQUJJQUlnQXhEWEFTQUFJQUlvQWdRUTh3RWdBaWdDQkNnQ21BRWlCQVJBSUFJZ0JEWUNCQVZCd1BRQ1FkVEZBVUVuRUdBYUlBSW9BZ1FoQkFzTElBUW9BcWdCSWdSRkJFQVBDeUFDSUFRMkFnUWdBQ0FCSUFJZ0F4RFhBU0FBSUFJb0FnUVE4d0VnQWlnQ0JDZ0NtQUVpQUFSQUlBSWdBRFlDQkFWQndQUUNRZFRGQVVFbkVHQWFDd3U5QXdJRWZ3WjhJd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FpZ0NEQ0lGSUFFb0FuUWlCQ2dDRUNJR1FaZ0JiR29yQXdBaEJ5QUdRWmdCYkNBRmFpc0RDQ0VKSUFRRVFDQUVJUUlnQnlFSUlBa2hDd05BSUFJb0FoQWlCRUdZQVd3Z0JXb3JBd0FpQ2lBSUlBb2dDR01iSVFnZ0NpQUhJQW9nQjJRYklRY2dCRUdZQVd3Z0JXb3JBd2dpQ2lBTElBb2dDMk1iSVFzZ0NpQUpJQW9nQ1dRYklRa2dBaWdDQUNJQ0RRQUxCU0FISVFnZ0NTRUxDeUFBSUFoRUFBQUFBQUFBOEwrZ25DSUtPUU9vQWlBQUlBdEVBQUFBQUFBQThMK2duQ0lNT1FPd0FpQUFJQWNnQ0tFaUJ5QUpJQXVoSWdrZ0NTQUhZeHRFS1Z5UHd2VW84RCtpUkFBQUFBQUFBQUJBb0pzaUJ6a0RtQUlnQjBRQUFBQUFBQUFBUUdVRVFDQUFJQUVvQW5CQkZHeTNJZ2M1QTVnQ0lBQWdDSndnQjBRQUFBQUFBQURnUDZJaUNLRWlDVGtEcUFJZ0FDQUxuQ0FJb1NJSU9RT3dBZ1VnQ2lFSklBd2hDQXNDUUFKQUFrQWdBQ2dDZ0FFT0F3QUFBUUlMSUFBZ0J6a0Q4QUlnQUNBSk9RUDRBaUFBSUFnNUE0QURJQU1rQkE4TElBTWdDVGtEQUNBRElBZzVBd2dnQUVHSUEyb2dCeUFERUtvSElBTWtCQThMSUFNa0JBdHZBUU4vSXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBVUVFYWlFQ0lBQkJqT0VBTmdJQUlBQW9BZ2dpQXdSQUlBRWdBQ2dDQkRZQ0FDQUNJQUVvQWdBMkFnQWdBeUFDRUUwTElBQW9BaEFRUXlBQVFiQzBBaWdDQURZQ0FFR3d0QUlnQURZQ0FDQUJKQVFMa0FFQkJIOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQ0lBRTJBZ0FnQUNnQ0FDRUVJQUVFZnlBQUtBSUVJZ01vQWdBRVFDQUVRZkFDYWtFUUVFd2lBU0FES0FJQUlBSW9BZ0FRdUFrZ0FDZ0NCQ0FCTmdJQUJTQURJQUUyQWdBTElBQW9BZ2dvQWdBaUFRUkFJQUZCQURvQUFRc2dBQ2dDQkNnQ0FFRUFSd1ZCQUFzaEJTQUNKQVFnQlF0MEFRSi9Jd1FoQVNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FVRUFOZ0lBSUFCQjhnQVFUd1JBSUFFZ0FTZ0NBRUVFY2pZQ0FBc2dBRUhXQUJCUEJFQWdBU0FCS0FJQVFRSnlOZ0lBQ3lBQVFjc0FFRThFUUNBQklBRW9BZ0JCQVhJMkFnQUxJQUVvQWdBaEFpQUJKQVFnQWd1dkF3RUZmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBSkJDR29oQXlBQ1FRUnFJUVFDZndKQUlBQW9BZ1FnQUNnQ0FDSUJhMEVBU3dSL0lBRXNBQUFGUVFBTFFmOEJjVUhrQUVjTkFBSi9Ba0FDUUFKQUlBQW9BZ1FnQUNnQ0FDSUJhMEVCU3dSL0lBRXNBQUVGUVFBTFFSaDBRUmgxUWRnQWF3NGhBZ1FFQkFRRUJBUUVCQVFFQkFRRUJBUUFCQVFFQkFRRUJBUUVCQVFFQkFRQkJBc2dBQ0FBS0FJQVFRSnFOZ0lBSUFNZ0FCREFBU0lCTmdJQUlBRUVmeUFFSUFBUTNBRWlBVFlDQUNBQkJIOGdBa0VBT2dBQUlBQWdBeUFFSUFJUWlBUUZRUUFMQlVFQUN3d0NDeUFBSUFBb0FnQkJBbW8yQWdBZ0F5QUFFRmdpQVRZQ0FDQUJCSDhnQkNBQUVOd0JJZ0UyQWdBZ0FRUi9JQUpCQVRvQUFDQUFJQU1nQkNBQ0VJZ0VCVUVBQ3dWQkFBc01BUXNnQUNBQUtBSUFRUUpxTmdJQUlBTWdBQkJZSWdFMkFnQWdBUVIvSUFRZ0FCQllJZ0UyQWdBZ0FRUi9JQUlnQUJEY0FTSUJOZ0lBSUFFRWZ5QUFRZkFDYWtFVUVFd2lBQ0FES0FJQUlBUW9BZ0FnQWlnQ0FCQ0dDaUFBQlVFQUN3VkJBQXNGUVFBTEN3d0JDeUFBRUZnTElRVWdBaVFFSUFVTHZBRUJBbjhnQUNnQ0JCQkRJQUJCQURZQ0RDQUFJQUUyQWhBZ0FVRUFTQVJBSUFCQkFEWUNDQ0FBUVFBMkFnQWdBRUVBTmdJRUR3c2dBQ0FCUVFGcUlnUkJER3dRU2lJQk5nSUVJQUZGQkVCQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdOQkFEWUNBQ0FEUVg4MkFnUWdBMEdvT0VFQUVBRUxJQUFnQVRZQ0FDQUFJQVJCREd3Z0FXb2lBellDQ0NBRElBRk5CRUFQQ3dOQUlBRWdBaWtDQURjQ0FDQUJJQUlvQWdnMkFnZ2dBVUVNYWlJQklBQW9BZ2hKRFFBTEM5Y0RBUVIvSXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUhUQUJCUEJIOENmeUFBS0FJRUlBQW9BZ0FpQW10QkFFc0VmeUFDTEFBQUJVRUFDMEVZZEVFWWRTSUNRWjkvYWtFYVR3UkFJQUJCM3dBUVR3UkFRUUFnQUVHVUFXb2lBQ0lDS0FJQUlBSW9BZ1JHRFFJYUlBQW9BZ0FvQWdBTUFnc2dBVUVBTmdJQUlBQWdBUkRTQWdSL1FRQUZJQUVnQVNnQ0FFRUJhaUlDTmdJQUlBQkIzd0FRVHdSL0lBSWdBRUdVQVdvaUFDSURLQUlFSUFNb0FnQnJRUUoxU1FSL0lBQW9BZ0FnQWtFQ2RHb29BZ0FGUVFBTEJVRUFDd3NNQVFzQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFKQjRRQnJEaE1BQVFZRkJnWUdCZ01HQmdZR0JnUUdCZ1lDQmdzZ0FDQUFLQUlBUVFGcU5nSUFJQUZCQURZQ0FBd0dDeUFBSUFBb0FnQkJBV28yQWdBZ0FVRUJOZ0lBREFVTElBQWdBQ2dDQUVFQmFqWUNBQ0FCUVFJMkFnQU1CQXNnQUNBQUtBSUFRUUZxTmdJQUlBRkJBellDQUF3REN5QUFJQUFvQWdCQkFXbzJBZ0FnQVVFRU5nSUFEQUlMSUFBZ0FDZ0NBRUVCYWpZQ0FDQUJRUVUyQWdBTUFRdEJBQXdCQ3lBQklBQWdBRUh3QW1vZ0FSQzhCQ0lDRUlZQ0lnTTJBZ0FnQWlBRFJnUi9JQUlGSUFCQmxBRnFJQUVRYUNBREN3c0ZRUUFMSVFRZ0FTUUVJQVFMakFFQkEzOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQ1FRaHFJZ05CQURZQ0FBSkFBa0FnQVNBREVNSUNEUUFnQVNnQ0JDQUJLQUlBYXlBREtBSUFJZ05KRFFBZ0FpQUJLQUlBSWdRMkFnQWdBaUFESUFScU5nSUVJQUVnQXlBQktBSUFhallDQUNBQUlBSXBBd0EzQWdBTUFRc2dBRUVBTmdJQUlBQkJBRFlDQkFzZ0FpUUVDODRCQVFWL0l3UWhBeU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQXlBQk5nSUFJQU5CQkdvaEJBSkFBa0FnQUN3QUN5SUJRUUJJSWdVRWZ5QUFLQUlFSVFJZ0FDZ0NDRUgvLy8vL0IzRkJmMm9GSUFGQi93RnhJUUpCQVFzaUFTQUNSZ1JBSUFBZ0FVRUJJQUVnQVJEYUFpQUFMQUFMUVFCSURRRUZJQVVOQVFzZ0FDQUNRUUZxT2dBTERBRUxBbjhnQUNnQ0FDRUdJQUFnQWtFQmFqWUNCQ0FHQ3lFQUN5QUNRUUowSUFCcUlnQWdBeWdDQURZQ0FDQUVRUUEyQWdBZ0FDQUVLQUlBTmdJRUlBTWtCQXMvQUNBQVFnQTNBZ0FnQUVFQU5nSUlJQUVzQUF0QkFFZ0VRQ0FBSUFFb0FnQWdBU2dDQkJDaEFRVWdBQ0FCS1FJQU53SUFJQUFnQVNnQ0NEWUNDQXNMaXdFQkFuOGdBQ2dDRkNJQ0lBQW9BaEJCQVdvZ0FDZ0NER3RHQkVBZ0FDd0FHRVVFUUVIQTlBSVFSVUhBOUFJUVJVRU1FQUlpQTBFQU5nSUFJQU5CZnpZQ0JDQURRUTQyQWdnZ0EwR0lPMEVBRUFFTElBSkJBU0FDUVFGS0d5SURCRUFnQUNBREVKSUNJQUFvQWhRaEFnc0xJQUFnQWtFQmFqWUNGQ0FBS0FJQUlBSkJBblJxSUFFMkFnQUxDQUJCLy8vLy93Y0xCUUJCL3dBTHVnWUJDSDhqQkNFSkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUdRY2o3QWhCVElRb2dCa0hRK3dJUVV5SUxLQUlBS0FJVUlRWWdDU0FMSUFaQi93RnhRWTRIYWhFQUFDQUpLQUlFSUFrc0FBc2lCa0gvQVhFZ0JrRUFTQnNFUUNBRklBTTJBZ0FnQWdKL0FrQUNRQ0FBTEFBQUlnWkJLMnNPQXdBQkFBRUxJQW9vQWdBb0Fpd2hCeUFLSUFZZ0IwRS9jVUdLQVdvUkF3QWhCaUFGSUFVb0FnQWlCMEVFYWpZQ0FDQUhJQVkyQWdBZ0FFRUJhZ3dCQ3lBQUN5SUdhMEVCU2dSQUlBWXNBQUJCTUVZRVFBSkFBa0FnQml3QUFVSFlBR3NPSVFBQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBQUVMSUFvb0FnQW9BaXdoQnlBS1FUQWdCMEUvY1VHS0FXb1JBd0FoQnlBRklBVW9BZ0FpQ0VFRWFqWUNBQ0FJSUFjMkFnQWdDaWdDQUNnQ0xDRUhJQW9nQml3QUFTQUhRVDl4UVlvQmFoRURBQ0VISUFVZ0JTZ0NBQ0lJUVFScU5nSUFJQWdnQnpZQ0FDQUdRUUpxSVFZTEN3c2dBaUFHUndSQUFrQWdCaUVJSUFJaEJ3TkFJQWdnQjBGL2FpSUhUdzBCSUFnc0FBQWhEU0FJSUFjc0FBQTZBQUFnQnlBTk9nQUFJQWhCQVdvaENBd0FBQXNBQ3dzZ0N5Z0NBQ2dDRUNFSElBc2dCMEgvQUhGQkJHb1JDQUFoRFVFQUlRdEJBQ0VISUFZaENBTkFJQWdnQWtrRVFDQUhJQWtvQWdBZ0NTQUpMQUFMUVFCSUcyb3NBQUFpREVFQVJ5QUxJQXhHY1FSQUlBVWdCU2dDQUNJTFFRUnFOZ0lBSUFzZ0RUWUNBRUVBSVFzZ0J5QUhJQWtvQWdRZ0NTd0FDeUlIUWY4QmNTQUhRUUJJRzBGL2FrbHFJUWNMSUFvb0FnQW9BaXdoRENBS0lBZ3NBQUFnREVFL2NVR0tBV29SQXdBaERDQUZJQVVvQWdBaURrRUVhallDQUNBT0lBdzJBZ0FnQzBFQmFpRUxJQWhCQVdvaENBd0JDd3NnQlNnQ0FDSUlJQVlnQUd0QkFuUWdBMm9pQmtZRWZ5QUdCU0FHSVFjZ0NDRUdBMEFnQnlBR1FYeHFJZ1pKQkVBZ0J5Z0NBQ0VJSUFjZ0JpZ0NBRFlDQUNBR0lBZzJBZ0FnQjBFRWFpRUhEQUVMQ3lBRktBSUFDeUVGQlNBS0tBSUFLQUl3SVFZZ0NpQUFJQUlnQXlBR1FRZHhRZW9CYWhFUEFCb2dCU0FDSUFCclFRSjBJQU5xSWdVMkFnQUxJQVFnQlNBQklBQnJRUUowSUFOcUlBRWdBa1liTmdJQUlBa1FUaUFKSkFRTHNRWUJDSDhqQkNFSkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUdRYWo3QWhCVElRb2dCa0c0K3dJUVV5SUxLQUlBS0FJVUlRWWdDU0FMSUFaQi93RnhRWTRIYWhFQUFDQUpLQUlFSUFrc0FBc2lCa0gvQVhFZ0JrRUFTQnNFUUNBRklBTTJBZ0FnQWdKL0FrQUNRQ0FBTEFBQUlnWkJLMnNPQXdBQkFBRUxJQW9vQWdBb0Fod2hCeUFLSUFZZ0IwRS9jVUdLQVdvUkF3QWhCaUFGSUFVb0FnQWlCMEVCYWpZQ0FDQUhJQVk2QUFBZ0FFRUJhZ3dCQ3lBQUN5SUdhMEVCU2dSQUlBWXNBQUJCTUVZRVFBSkFBa0FnQml3QUFVSFlBR3NPSVFBQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBQUVMSUFvb0FnQW9BaHdoQnlBS1FUQWdCMEUvY1VHS0FXb1JBd0FoQnlBRklBVW9BZ0FpQ0VFQmFqWUNBQ0FJSUFjNkFBQWdDaWdDQUNnQ0hDRUhJQW9nQml3QUFTQUhRVDl4UVlvQmFoRURBQ0VISUFVZ0JTZ0NBQ0lJUVFGcU5nSUFJQWdnQnpvQUFDQUdRUUpxSVFZTEN3c2dBaUFHUndSQUFrQWdCaUVJSUFJaEJ3TkFJQWdnQjBGL2FpSUhUdzBCSUFnc0FBQWhEU0FJSUFjc0FBQTZBQUFnQnlBTk9nQUFJQWhCQVdvaENBd0FBQXNBQ3dzZ0N5Z0NBQ2dDRUNFSElBc2dCMEgvQUhGQkJHb1JDQUFoRFVFQUlRdEJBQ0VISUFZaENBTkFJQWdnQWtrRVFDQUhJQWtvQWdBZ0NTQUpMQUFMUVFCSUcyb3NBQUFpREVFQVJ5QUxJQXhHY1FSQUlBVWdCU2dDQUNJTFFRRnFOZ0lBSUFzZ0RUb0FBRUVBSVFzZ0J5QUhJQWtvQWdRZ0NTd0FDeUlIUWY4QmNTQUhRUUJJRzBGL2FrbHFJUWNMSUFvb0FnQW9BaHdoRENBS0lBZ3NBQUFnREVFL2NVR0tBV29SQXdBaERDQUZJQVVvQWdBaURrRUJhallDQUNBT0lBdzZBQUFnQzBFQmFpRUxJQWhCQVdvaENBd0JDd3NnQlNnQ0FDSUlJQU1nQmlBQWEyb2lCa1lFZnlBR0JTQUdJUWNnQ0NFR0EwQWdCeUFHUVg5cUlnWkpCRUFnQnl3QUFDRUlJQWNnQml3QUFEb0FBQ0FHSUFnNkFBQWdCMEVCYWlFSERBRUxDeUFGS0FJQUN5RUZCU0FLS0FJQUtBSWdJUVlnQ2lBQUlBSWdBeUFHUVFkeFFlb0JhaEVQQUJvZ0JTQURJQUlnQUd0cUlnVTJBZ0FMSUFRZ0JTQURJQUVnQUd0cUlBRWdBa1liTmdJQUlBa1FUaUFKSkFRTDdRRUJCWDhnQWtHQUVIRUVRQ0FBUVNzNkFBQWdBRUVCYWlFQUN5QUNRWUFJY1FSQUlBQkJJem9BQUNBQVFRRnFJUUFMSUFKQmhBSnhJZ05CaEFKR0lnUUVmMEVBQlNBQVFTNDZBQUFnQUVFcU9nQUJJQUJCQW1vaEFFRUJDeUVISUFKQmdJQUJjU0VDQTBBZ0FTd0FBQ0lHQkVBZ0FDQUdPZ0FBSUFCQkFXb2hBQ0FCUVFGcUlRRU1BUXNMSUFBQ2Z3SkFBa0FnQTBFRWF5SUJCRUFnQVVIOEFVWUVRQXdDQlF3REN3QUxJQUpCQ1haQi93RnhRZVlBY3d3Q0N5QUNRUWwyUWY4QmNVSGxBSE1NQVFzZ0FrRUpka0gvQVhFaEFTQUJRZUVBY3lBQlFlY0FjeUFFR3dzNkFBQWdCd3VwQ0FFTmZ5TUVJUThqQkVId0FHb2tCQ01FSXdWT0JFQkI4QUFRQUFzZ0R5RUpJQU1nQW10QkRHMGlCMEhrQUVzRVFDQUhFRW9pQ1FSQUlBa2lFaUVOQlJBREN3VWdDU0VOQ3lBQ0lRb2dEU0VKQTBBZ0F5QUtSd1JBSUFvc0FBc2lDRUVBU0FSL0lBb29BZ1FGSUFoQi93RnhDd1JBSUFsQkFUb0FBQVVnQ1VFQ09nQUFJQXhCQVdvaERDQUhRWDlxSVFjTElBcEJER29oQ2lBSlFRRnFJUWtNQVFzTElBd2hDU0FISVF3RFFBSkFJQUFvQWdBaUNBUi9JQWdvQWd3aUJ5QUlLQUlRUmdSL0lBZ2dDQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQWNvQWdBTFFYOUdCSDhnQUVFQU5nSUFRUUVGSUFBb0FnQkZDd1ZCQVFzaENnSi9JQUVvQWdBaUJ3Ui9JQWNvQWd3aUNDQUhLQUlRUmdSL0lBY2dCeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQWdvQWdBTFFYOUdCSDhnQVVFQU5nSUFRUUFoQjBFQkJVRUFDd1ZCQUNFSFFRRUxJUk1nQUNnQ0FDRUxJQk1MSUFweklBeEJBRWR4UlEwQUlBc29BZ3dpQnlBTEtBSVFSZ1IvSUFzZ0N5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBY29BZ0FMSVE0Z0JrVUVRQ0FFSUE0Z0JDZ0NBQ2dDSEVFL2NVR0tBV29SQXdBaERnc2dFRUVCYWlFTFFRQWhDaUFDSVFnZ0NTRUhJQTBoQ1FOQUlBTWdDRWNFUUNBSkxBQUFRUUZHQkVBQ1FDQUlMQUFMUVFCSUJIOGdDQ2dDQUFVZ0NBc2dFRUVDZEdvb0FnQWhFU0FHQkg4Z0VRVWdCQ0FSSUFRb0FnQW9BaHhCUDNGQmlnRnFFUU1BQ3lBT1J3UkFJQWxCQURvQUFDQU1RWDlxSVF3TUFRc2dDQ3dBQ3lJS1FRQklCSDhnQ0NnQ0JBVWdDa0gvQVhFTElBdEdCRUFnQ1VFQ09nQUFJQXhCZjJvaERDQUhRUUZxSVFjTFFRRWhDZ3NMSUFoQkRHb2hDQ0FKUVFGcUlRa01BUXNMSUFvRVFBSkFJQUFvQWdBaUNDZ0NEQ0lKSUFnb0FoQkdCRUFnQ0NBSUtBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBZ2dDVUVFYWpZQ0RDQUpLQUlBR2dzZ0J5QU1ha0VCU3dSQUlBSWhDaUFOSVFrRFFDQURJQXBHRFFJZ0NTd0FBRUVDUmdSQUlBb3NBQXNpQ0VFQVNBUi9JQW9vQWdRRklBaEIvd0Z4Q3lBTFJ3UkFJQWxCQURvQUFDQUhRWDlxSVFjTEN5QUtRUXhxSVFvZ0NVRUJhaUVKREFBQUN3QUxDd3NnQ3lFUUlBY2hDUXdCQ3dzZ0N3Ui9JQXNvQWd3aUJDQUxLQUlRUmdSL0lBc2dDeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVFvQWdBTFFYOUdCSDhnQUVFQU5nSUFRUUVGSUFBb0FnQkZDd1ZCQVFzaEJBSkFBa0FDUUNBSFJRMEFJQWNvQWd3aUFDQUhLQUlRUmdSL0lBY2dCeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQUFvQWdBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFSRkRRSUxEQUlMSUFRTkFBd0JDeUFGSUFVb0FnQkJBbkkyQWdBTEFrQUNRQU5BSUFJZ0EwWU5BU0FOTEFBQVFRSkhCRUFnQWtFTWFpRUNJQTFCQVdvaERRd0JDd3NNQVFzZ0JTQUZLQUlBUVFSeU5nSUFJQU1oQWdzZ0VoQkRJQThrQkNBQ0M3SUlBUTEvSXdRaER5TUVRZkFBYWlRRUl3UWpCVTRFUUVId0FCQUFDeUFQSVFrZ0F5QUNhMEVNYlNJSFFlUUFTd1JBSUFjUVNpSUpCRUFnQ1NJU0lRMEZFQU1MQlNBSklRMExJQUloQ2lBTklRa0RRQ0FESUFwSEJFQWdDaXdBQ3lJSVFRQklCSDhnQ2lnQ0JBVWdDRUgvQVhFTEJFQWdDVUVCT2dBQUJTQUpRUUk2QUFBZ0RFRUJhaUVNSUFkQmYyb2hCd3NnQ2tFTWFpRUtJQWxCQVdvaENRd0JDd3NnRENFSklBY2hEQU5BQWtBZ0FDZ0NBQ0lJQkg4Z0NDZ0NEQ0lISUFnb0FoQkdCSDhnQ0NBSUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0J5MEFBQXRCZjBZRWZ5QUFRUUEyQWdCQkFRVWdBQ2dDQUVVTEJVRUJDeUVLQW44Z0FTZ0NBQ0lIQkg4Z0J5Z0NEQ0lJSUFjb0FoQkdCSDhnQnlBSEtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0NDMEFBQXRCZjBZRWZ5QUJRUUEyQWdCQkFDRUhRUUVGUVFBTEJVRUFJUWRCQVFzaEV5QUFLQUlBSVFzZ0V3c2dDbk1nREVFQVIzRkZEUUFnQ3lnQ0RDSUhJQXNvQWhCR0JIOGdDeUFMS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQnkwQUFBdEIvd0Z4SVE0Z0JrVUVRQ0FFSUE0Z0JDZ0NBQ2dDREVFL2NVR0tBV29SQXdBaERnc2dFRUVCYWlFTFFRQWhDaUFDSVFnZ0NTRUhJQTBoQ1FOQUlBTWdDRWNFUUNBSkxBQUFRUUZHQkVBQ1FDQUlMQUFMUVFCSUJIOGdDQ2dDQUFVZ0NBc2dFR29zQUFBaEVTQU9RZjhCY1NBR0JIOGdFUVVnQkNBUklBUW9BZ0FvQWd4QlAzRkJpZ0ZxRVFNQUMwSC9BWEZIQkVBZ0NVRUFPZ0FBSUF4QmYyb2hEQXdCQ3lBSUxBQUxJZ3BCQUVnRWZ5QUlLQUlFQlNBS1FmOEJjUXNnQzBZRVFDQUpRUUk2QUFBZ0RFRi9haUVNSUFkQkFXb2hCd3RCQVNFS0N3c2dDRUVNYWlFSUlBbEJBV29oQ1F3QkN3c2dDZ1JBQWtBZ0FDZ0NBQ0lJS0FJTUlna2dDQ2dDRUVZRVFDQUlJQWdvQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQ0NBSlFRRnFOZ0lNSUFrdEFBQWFDeUFISUF4cVFRRkxCRUFnQWlFS0lBMGhDUU5BSUFNZ0NrWU5BaUFKTEFBQVFRSkdCRUFnQ2l3QUN5SUlRUUJJQkg4Z0NpZ0NCQVVnQ0VIL0FYRUxJQXRIQkVBZ0NVRUFPZ0FBSUFkQmYyb2hCd3NMSUFwQkRHb2hDaUFKUVFGcUlRa01BQUFMQUFzTEN5QUxJUkFnQnlFSkRBRUxDeUFMQkg4Z0N5Z0NEQ0lFSUFzb0FoQkdCSDhnQ3lBTEtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JDMEFBQXRCZjBZRWZ5QUFRUUEyQWdCQkFRVWdBQ2dDQUVVTEJVRUJDeUVFQWtBQ1FBSkFJQWRGRFFBZ0J5Z0NEQ0lBSUFjb0FoQkdCSDhnQnlBSEtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0FDMEFBQXRCZjBZRVFDQUJRUUEyQWdBTUFRVWdCRVVOQWdzTUFnc2dCQTBBREFFTElBVWdCU2dDQUVFQ2NqWUNBQXNDUUFKQUEwQWdBaUFEUmcwQklBMHNBQUJCQWtjRVFDQUNRUXhxSVFJZ0RVRUJhaUVOREFFTEN3d0JDeUFGSUFVb0FnQkJCSEkyQWdBZ0F5RUNDeUFTRUVNZ0R5UUVJQUlMbVFFQkFuOGdBQ2dDQkNJQklBRW9BZ0JCZEdvb0FnQnFJZ0VvQWhnRVFDQUJLQUlRUlFSQUlBRW9BZ1JCZ01BQWNRUkFFSjREUlFSQUlBQW9BZ1FpQVNBQktBSUFRWFJxS0FJQWFpZ0NHQ0lCS0FJQUtBSVlJUUlnQVNBQ1FmOEFjVUVFYWhFSUFFRi9SZ1JBSUFBb0FnUWlBQ0FBS0FJQVFYUnFLQUlBYWlJQUlnRWdBU2dDR0VVZ0FDZ0NFRUVCY25JMkFoQUxDd3NMQ3dzS0FDQUFRUVJxRU80QkN3b0FJQUJCQ0dvUTdnRUxCQUJCZndzekFDQUFRZnp3QURZQ0FDQUFFTllHSUFCQkhHb1FWQ0FBS0FJZ0VFTWdBQ2dDSkJCRElBQW9BakFRUXlBQUtBSThFRU1MbndNREFuOENmZ1Y4SUFDOUlnTkNJSWluSWdGQmdJREFBRWtnQTBJQVV5SUNjZ1JBQWtBZ0EwTC8vLy8vLy8vLy8vOEFnMElBVVFSQVJBQUFBQUFBQVBDL0lBQWdBS0tqRHdzZ0FrVUVRQ0FBUkFBQUFBQUFBRkJEb3IwaUJFTC8vLy8vRDRNaEF5QUVRaUNJcHlFQlFjdDNJUUlNQVFzZ0FDQUFvVVFBQUFBQUFBQUFBS01QQ3dVZ0FVSC8vNy8vQjBzRVFDQUFEd3NnQVVHQWdNRC9BMFlnQTBMLy8vLy9ENE1pQTBJQVVYRUVmMFFBQUFBQUFBQUFBQThGUVlGNEN5RUNDeUFESUFGQjRyNGxhaUlCUWYvL1AzRkJuc0dhL3dOcXJVSWdob1MvUkFBQUFBQUFBUEMvb0NJRklBVkVBQUFBQUFBQTREK2lvaUVHSUFVZ0JVUUFBQUFBQUFBQVFLQ2pJZ2NnQjZJaUNDQUlvaUVBSUFJZ0FVRVVkbXEzSWdsRUFBRGcva0l1NWoraUlBVWdDVVIyUEhrMTd6bnFQYUlnQnlBR0lBQWdBQ0FBUkovR2VOQUptc00vb2tTdmVJNGR4WEhNUDZDaVJBVDZsNW1abWRrL29LSWdDQ0FBSUFBZ0FFUkVVajdmRXZIQ1A2SkUzZ1BMbG1SR3h6K2dva1Jaa3lLVUpFblNQNkNpUkpOVlZWVlZWZVUvb0tLZ29LS2dJQWFob0tBTGV3RUJmeUFBUVg5R0JFQkJmeUVBQlFKQUlBRW9Ba3hCZjBvRWYwRUJCVUVBQ3hvQ1FBSkFJQUVvQWdRaUFnMEFJQUVRdndNYUlBRW9BZ1FpQWcwQURBRUxJQUlnQVNnQ0xFRjRha3NFUUNBQklBSkJmMm9pQWpZQ0JDQUNJQUE2QUFBZ0FTQUJLQUlBUVc5eE5nSUFEQUlMQzBGL0lRQUxDeUFBQzE0QkFYOENmeUFBS0FKTVFRQk9CRUFnQUNnQ0JDSUJJQUFvQWdoSkJIOGdBQ0FCUVFGcU5nSUVJQUV0QUFBRklBQVFvQUlMREFFTElBQW9BZ1FpQVNBQUtBSUlTUVIvSUFBZ0FVRUJhallDQkNBQkxRQUFCU0FBRUtBQ0N3c0x6Z0VCQW44akJDRUVJd1JCb0FGcUpBUWpCQ01GVGdSQVFhQUJFQUFMSUFSQmtBRnFJUVVnQkVIUXlBQkJrQUVRZ3dFYUFrQUNRQ0FCUVg5cVFmNy8vLzhIVFEwQUlBRUVmMEg0N2dKQnl3QTJBZ0JCZndWQkFTRUJJQVVoQUF3QkN5RUFEQUVMSUFSQmZpQUFheUlGSUFFZ0FTQUZTeHNpQVRZQ01DQUVJQUEyQWhRZ0JDQUFOZ0lzSUFRZ0FDQUJhaUlBTmdJUUlBUWdBRFlDSENBRUlBSWdBeEM3QXlFQUlBRUVRQ0FFS0FJVUlnRWdBU0FFS0FJUVJrRWZkRUVmZFdwQkFEb0FBQXNMSUFRa0JDQUFDOFVGQWdsL0JYd2pCQ0VFSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQktBS1lBU0VDSUFBb0FqUWlCMEVCYWlFRklBZEJBRWdFZjBFQUJTQUZRUVIwRUVvaUJrVUVRRUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlBMEVBTmdJQUlBTkJmellDQkNBRFFhZzRRUUFRQVFzZ0JrRVFhaUVESUFWQkJIUWdCbW9pQlNBR1N3UkFJQVpCQUNBR1FYOXpJQVVnQXlBRklBTkxHMnBCRUdwQmNIRVFZaG9MSUFZTElRVWdBaXNETUNFTUlBSXJBemdoQ3dKOElBRXJBekFoRHlBQkt3TTRJUTRnQWtGQWF5SUpLQUlBSWdJZ0FVRkFheUlJS0FJQUlnRXJBd0FnQWlzREFLQTVBd0FnQWlBQkt3TUlJQUlyQXdpZ09RTUlJQVZFQUFBQUFBQUE4RDg1QXdBZ0JVUUFBQUFBQUFBQUFEa0RDQ0FIUVFGSUJFQWdCaEJESUFRa0JBOExJQVJCRUdvaEF5QVBDeUFNb1NFTUlBNGdDNkVoQzBFQklRRURRQ0FFSUF3NUF3QWdCQ0FMT1FNSUlBTWdBVUYvYWtFRWRDQUZhaUFFRUhFZ0FVRUVkQ0FGYWlJQ0lBTXBBd0EzQXdBZ0FpQURLUU1JTndNSUlBRkJBV29oQWlBQklBQW9BalFpQVVnRVFDQUNJUUVNQVFzTElBRkJBVWdFUUNBR0VFTWdCQ1FFRHd0QkFTRUJBMEFnQkNBSUtBSUFJZ0lwQXdBM0F3QWdCQ0FDS1FNSU53TUlJQVFnQkNzREFKbzVBd0FnQkNBRUt3TUltamtEQ0NBRElBUWdBVUVFZENBRmFoQnhJQUZCZjJvaENrRUJJUUlnQXlzREFDQUJ0eUlMb3lFTUlBTXJBd2dnQzZNaEN3TkFJQU1nQ0NnQ0FDQUNRUVIwYWlBQklBSnJRUVIwSUFWcUVIRWdEQ0FBS0FKVUlBcEJBblJxS0FJQUlBSkJmMnBCQTNScUt3TUFJZzBnQXlzREFLS2dJUXdnQ3lBTklBTXJBd2lpb0NFTElBSkJBV29oQnlBQklBSkxCRUFnQnlFQ0RBRUxDeUFKS0FJQUlnSWdBVUVFZEdvaUJ5QU1JQWNyQXdDZ09RTUFJQUZCQkhRZ0Ftb2lBaUFMSUFJckF3aWdPUU1JSUFGQkFXb2hBaUFCSUFBb0FqUklCRUFnQWlFQkRBRUxDeUFHRUVNZ0JDUUVDOEFCQVFWL0lBQW9BZ1FpQkNBQUtBSUlJZ0pQQkVBUEN3TkFJQVJCNU9BQU5nSUFJQVJCQURZQ0JDQUVJZ1ZCQURZQ0NDQUJLQUlFSWdZRVFDQUdJUUlEUUVFWUVFa2hBeUFGS0FJSUlRWWdBMEVBTmdJQUlBTWdCallDQkNBRElBSXJBd2c1QXdnZ0F5QUNLd01RT1FNUUlBUW9BZ1FFUUNBR0lBTTJBZ0FGSUFRZ0F6WUNCQXNnQlNBRE5nSUlJQUlvQWdBaUFnMEFDeUFBS0FJSUlRSUxJQVVnQVNnQ0REWUNEQ0FGUWZqZ0FEWUNBQ0FGUVJCcUlnUWdBa2tOQUFzTHF3TUJDWDhnQUNnQ0JDSUZJQUFvQWdoR0JFQVBDeUFCUVFGcUlRY2dBVUVBVGdSQUlBZEJBblFpQkJCS0lnWkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ05CQURZQ0FDQURRWDgyQWdRZ0EwR29PRUVBRUFFTElBZEJBblFnQm1vZ0Jrc0VRQ0FHUVFBZ0FVRUNkRUVEY2tFRWFrRjhjUkJpR2dzZ0JpRURJQVFRU2lJRUJFQWdCaUVLSUFNaENDQUVJZ3NoQ1FWQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdSQkFEWUNBQ0FFUVg4MkFnUWdCRUdvT0VFQUVBRUxDeUFGQkVBRFFDQUNJQVZCQ0dvZ0FpZ0NBQ2dDQ0VFL2NVR0tBV29SQXdBaUJFRUNkQ0FJYWlFRElBUkJBblFnQ1dvaEJDQURLQUlBQkVBZ0JTQUVLQUlBSWdNMkFnUWdBeUFGTmdJQUlBUWhBd1VnQkNBRk5nSUFDeUFESUFVMkFnQWdCU2dDQUNJRkRRQUxDeUFCUVFCSUJFQkJBQ0VEQlVFQUlRSkJBQ0VEQTBBZ0FrRUNkQ0FJYWlnQ0FDSUVCRUFnQXdSQUlBTWdCRFlDQUFVZ0FDQUVOZ0lFUVFBaEF3c2dCQ0FETmdJRUlBSkJBblFnQ1dvb0FnQWhBd3NnQWtFQmFpRUVJQUlnQVVnRVFDQUVJUUlNQVFzTEN5QUFJQU0yQWdnZ0EwRUFOZ0lBSUFzUVF5QUtFRU1MTFFFQmZ5QUFLQUlFSWdFZ0FDZ0NDRThFUUE4TEEwQWdBUkNqQWlBQlFaZ0JhaUlCSUFBb0FnaEpEUUFMQzBzQkFYOUIyTmtDSUFBMkFnQkJBU0VCQTBBZ0FVRUNkRUhZMlFKcUlBRWdBQ0FBUVI1MmMwSGxrcDdnQm14cUlnQTJBZ0FnQVVFQmFpSUJRZkFFUncwQUMwR1k3UUpCQURZQ0FBdmpCd0lFZnc1OEl3UWhCQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNDUUFKQUFrQUNRQ0FBSUFFZ0FoRGVDQ0lERGdJQkFBSUxJQUFyQXhnaUJ5QUFLd01JSWdvZ0J5QUtZeHNoQ3lBQUt3TWdJZ2dnQUNzREVDSUpJQWdnQ1dNYklRd2dDQ0FKSUFrZ0NHTWJJUWtnQWlzREFDSUlJQWNnQ2lBS0lBZGpHMEdnMHdJckF3QWlCNkJqSUFnZ0N5QUhvV1J4UlEwQ0lBSXJBd2dpQ2lBSklBZWdZMFVnQ2lBTUlBZWhaRVZ5RFFJZ0FTc0RHQ0lKSUFFckF3Z2lDeUFKSUF0akd5RU9JQUVyQXlBaURDQUJLd01RSWcwZ0RDQU5ZeHNoRUNBSklBc2dDeUFKWXhzaENTQUVKQVFnQ2lBSElBd2dEU0FOSUF4akc2QmpRUUFnQ0NBSElBbWdZeUFJSUE0Z0I2RmtjU0FLSUJBZ0I2RmtjUnRCQVhFUEN5QUVKQVFnQXc4TElBQXJBd2doQnlBQUt3TVFJUW9nQUNzREdDRUlJQUFyQXlBaENTQUJLd01JSVFzZ0FTc0RFQ0VNSUFFckF4Z2hEU0FCS3dNZ0lRNUJ3QUFRU2lJRFJRUkFRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSUZRUUEyQWdBZ0JVRi9OZ0lFSUFWQnFEaEJBQkFCQ3lBRElBYzVBd0FnQXlBS09RTUlJQU1nQ0RrREVDQURJQWs1QXhnZ0F5QUxPUU1nSUFNZ0REa0RLQ0FESUEwNUF6QWdBeUFPT1FNNElBTWdBMEZBYXlBRUVMTUNJQUlnQTBFUWFrWUVRQ0FDS3dNQUlRZ0ZJQUlnQXlzREVDSUlPUU1BSUFJZ0F5c0RHRGtEQ0FzZ0FDc0RHQ0lKSUFBckF3Z2lDeUFKSUF0akd5RUtJQUFyQXlBaURDQUFLd01RSWcwZ0RDQU5ZeHNoRGlBTUlBMGdEU0FNWXhzaEVRSi9BbjhDUUNBSUlBa2dDeUFMSUFsakcwR2cwd0lyQXdBaUI2QmpJQWdnQ2lBSG9XUnhCSDhnQWlzRENDSUtJQkVnQjZCalJTQUtJQTRnQjZGa1JYSUVmMEVBQlF3Q0N3VkJBQXNNQVFzZ0FTc0RHQ0lPSUFFckF3Z2lFQ0FPSUJCakd5RVBJQUVyQXlBaUVTQUJLd01RSWhJZ0VTQVNZeHNoRXlBUklCSWdFaUFSWXhzaEZFRUFJQWdnQnlBT0lCQWdFQ0FPWXh1Z1l5QUlJQThnQjZGa2NVVU5BQnBCQUNBS0lBY2dGS0JqUlNBS0lCTWdCNkZrUlhJTkFCb2dBeXNERUNJUElBY2dBeXNESUNJVG9HTWdEeUFUSUFlaFpIRUVRQ0FES3dNWUlnOGdCeUFES3dNb0loT2dZeUFQSUJNZ0I2RmtjUVJBQWtBZ0N5QUlJQWVnSWc5aklBc2dDQ0FIb1NJSVpIRUVRQ0FOSUFjZ0NxQWlDMk1nRFNBS0lBZWhJZzFrY1FSQUlBa2dEMk1nQ1NBSVpIRkJBQ0FNSUF0aklBd2dEV1J4R3cwQ0N3dEJBU0FRSUE5aklCQWdDR1J4UlEwREdrRUJJQklnQnlBS29DSUpZeUFTSUFvZ0I2RWlCMlJ4UlEwREdrRUJJQTRnRDJNZ0RpQUlaSEZGRFFNYVFRRWdFU0FKWXlBUklBZGtjVVVOQXhvTEN3dEJBZ3NoQmlBREVFTWdCQ1FFSUFZTER3c2dCQ1FFUVFBTEJnQkJGeEF5Q3dnQVFRMFFQVUVBQ3dnQVFRY1FFa0VBQzFVQkEzOGdBQ2dDQkNJR1FRaDFJUVVnQmtFQmNRUkFJQUlvQWdBZ0JXb29BZ0FoQlFzZ0FDZ0NBQ0lBS0FJQUtBSVlJUWNnQUNBQklBSWdCV29nQTBFQ0lBWkJBbkViSUFRZ0IwRURjVUdlQ1dvUkV3QUxKUUFnQUNnQ0VCQkRJQUJCQURZQ0dDQUFRWDgyQWh3Z0FFSUFOd01JSUFCQ0FEY0RFQXR2QVFOL0l3UWhBU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQVVFRWFpRUNJQUJCa09BQU5nSUFJQUFvQWdnaUF3UkFJQUVnQUNnQ0JEWUNBQ0FDSUFFb0FnQTJBZ0FnQXlBQ0VGY0xJQUFvQWhBUVF5QUFRYkMwQWlnQ0FEWUNBRUd3dEFJZ0FEWUNBQ0FCSkFRTEhRQWdBRUh3QW1wQkVCQk1JZ0FnQVNnQ0FDQUNLQUlBRU84SklBQUxoQUVCQlg4akJDRUJJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFCUVFScUlnTWdBQkRBQVNJQ05nSUFJQUlFZnlBQUtBSUVJQUFvQWdBaUJHdEJBRXNFZnlBRUxBQUFCVUVBQzBIL0FYRkJ5UUJHQkg4Z0FTQUFRUUFRbFFFaUFqWUNBQ0FDQkg4Z0FDQURJQUVRbEFFRlFRQUxCU0FDQ3dWQkFBc2hCU0FCSkFRZ0JRdElBQ0FBUVp5TEFUWUNBQ0FBUVRBNkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVHNGtnRTJBZ0FnQUNBQktRSUFOd0lJSUFBZ0FqWUNFQ0FBSUFNMkFoUUxpd1VCQm44akJDRUVJd1JCTUdva0JDTUVJd1ZPQkVCQk1CQUFDeUFFUVJCcUlRRWdCRUVJYWlJQ1FRQTJBZ0FnQkVFWWFrR3Rod0lRUkNBRVFTQnFJZ01nQkNrQ0dEY0NBQUpBSUFBZ0F4QlNCSDhnQWlBQUVNQUNJZ0UyQWdBZ0FRUi9JQUFvQWdRZ0FDZ0NBQ0lCYTBFQVN3Ui9JQUVzQUFBRlFRQUxRZjhCY1VISkFFWUVRQ0FESUFCQkFCQ1ZBU0lCTmdJQUlBRUVRQ0FDSUFBZ0FpQURFSlFCTmdJQUJVRUFJUUFNQkFzTEFrQUNRQU5BSUFCQnhRQVFUMFVFUUNBRElBQVFnQUlpQVRZQ0FDQUJSUTBDSUFJZ0FDQUNJQU1RL3dFMkFnQU1BUXNMREFFTFFRQWhBQXdEQ3lBRElBQVF2d0lpQVRZQ0FDQUJCSDhnQUNBQ0lBTVEvd0VGUVFBTEJVRUFDd1VnQVVHci93RVFSQ0FESUFFcEFnQTNBZ0FnQUNBREVGSWhCU0FFUWJHSEFoQkVJQU1nQkNrQ0FEY0NBQ0FBSUFNUVVrVUVRQ0FDSUFBUXZ3SWlBVFlDQUNBQlJTQUZRUUZ6Y2dSQUlBRWhBQXdEQ3lBQ0lBQWdBaENHQkNJQU5nSUFEQUlMSUFBb0FnUWdBQ2dDQUNJQmEwRUFTd1IvSUFFc0FBQUZRUUFMUVJoMFFSaDFRVkJxUVFwSkJFQUNRQU5BQWtBZ0F5QUFJZ0VRZ0FJaUJqWUNBQ0FHUlEwQUlBSW9BZ0FFUUNBQ0lBQWdBaUFERVA4Qk5nSUFCU0FGQkVBZ0FpQUFJQU1RaGdRMkFnQUZJQUlnQmpZQ0FBc0xJQUJCeFFBUVQwVU5BUXdDQ3d0QkFDRUFEQU1MQlNBQ0lBQWlBUkRBQWlJRk5nSUFJQVZGQkVCQkFDRUFEQU1MSUFBb0FnUWdBQ2dDQUNJRmEwRUFTd1IvSUFVc0FBQUZRUUFMUWY4QmNVSEpBRVlFUUNBRElBRkJBQkNWQVNJRk5nSUFJQVVFUUNBQ0lBQWdBaUFERUpRQk5nSUFCVUVBSVFBTUJBc0xDeUFESUFFUXZ3SWlBVFlDQUNBQkJIOGdBQ0FDSUFNUS93RUZRUUFMQ3lFQUN5QUVKQVFnQUFza0FRRi9JQUVvQWdnaUFTZ0NBQ2dDR0NFQ0lBQWdBU0FDUWY4QmNVR09CMm9SQUFBTFp3RUJmeUFBS0FJRUlBQW9BZ0JySUFFb0FnUWdBU2dDQUd0R0JIOENmeUFBS0FJQUlRSWdBQ2dDQkNFQUlBRW9BZ0FoQVFOL1FRRWdBQ0FDUmcwQkdpQUNMQUFBSUFFc0FBQkdCSDhnQWtFQmFpRUNJQUZCQVdvaEFRd0JCVUVBQ3dzTEJVRUFDd3NFQUVFQUMzSUJBbjhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNRUWhxSVFNZ0FpQUJOZ0lBQWtBQ1FBTkFJQUJCd2dBUVR3UkFJQU1nQUJEZkFTQURLQUlBSUFNb0FnUkdEUUlnQWlBQVFmQUNhaUFDSUFNUXhBUWlBVFlDQUF3QkN3c01BUXRCQUNFQkN5QUNKQVFnQVF0MkFRTi9Jd1FoQVNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFSEVBQkJQQkg4Q2Z5QUFRZlFBRUU5RkJFQkJBQ0FBUWRRQUVFOUZEUUVhQ3lBQklBQVFXQ0lDTmdJQUlBSUVmeUFBUWNVQUVFOEVmeUFBUVpPYUFpQUJFTEVCQlVFQUN3VkJBQXNMQlVFQUN5RURJQUVrQkNBREM3b0RBUVYvSXdRaEFTTUVRVUJySkFRakJDTUZUZ1JBUWNBQUVBQUxJQUZCTUdvaEFpQUJRU2hxSVFRZ0FVRWdhaUVGSUFGQkZHb2hBeUFBUWRVQUVFOEVRQ0FFSUFBUTN3RWdCQ2dDQUNBRUtBSUVSZ1IvUVFBRkFuOGdCVUczbWdJUVJDQUNJQVVwQWdBM0FnQWdCQ0FDRU1FQ1JRUkFJQUlnQUJDSUFpSUROZ0lBSUFNRWZ5QUFRZkFDYWlBQ0lBUVFvQWtGUVFBTERBRUxJQUlnQkVFSkVNZ0NJQUZCQURZQ0FDQUJRUUEyQWdRZ0FpZ0NBQ0VFSUFNZ0FEWUNBQ0FESUFBb0FnQTJBZ1FnQTBFQk9nQUlJQUFnQkRZQ0FDQUNLQUlFSVFJZ0FTQUFRUVJxTmdJSUlBRWdBQ2dDQkRZQ0RDQUJRUUU2QUJBZ0FDQUNOZ0lFSUFFZ0FCRGZBU0FCTEFBUUJFQWdBU2dDQ0NBQktBSU1OZ0lBQ3lBRExBQUlCRUFnQXlnQ0FDQURLQUlFTmdJQUN5QUJLQUlBSUFFb0FnUkdCSDlCQUFVZ0F5QUFFSWdDSWdJMkFnQWdBZ1IvSUFCQjhBSnFJQU1nQVJDZENRVkJBQXNMQ3dzaEFBVWdBaUFBRU5zQklnVTJBZ0FnQkNBQUVGMGlBellDQUNBREJFQWdCUVJBSUFCQjhBSnFRUkFRVENJQUlBUW9BZ0FnQWlnQ0FCQ21DU0FFSUFBMkFnQUZJQU1oQUFzRlFRQWhBQXNMSUFFa0JDQUFDL0lFQVF4L0l3UWhBaU1FUWVBQWFpUUVJd1FqQlU0RVFFSGdBQkFBQ3lBQ1FUaHFJUU1nQWtFd2FpRUVJQUpCSUdvaEJTQUNRZEFBYWlFR0lBSkJFR29oQ1NBQ1FRaHFJUW9nQWtFb2FpSUxJQUFRMndFMkFnQWdBa0VZYWlJSFFRQTJBZ0FnQWtGQWF5SUlRZkNiQWhCRUlBSkJ5QUJxSWdFZ0NDa0NBRGNDQUFKL0FrQWdBQ0FCRUZJRWZ5QUhJQUJCODVzQ0VGQTJBZ0FNQVFVQ2Z5QURRZnliQWhCRUlBRWdBeWtDQURjQ0FDQUFJQUVRVWdSQUlBRWdBQkJZSWdNMkFnQkJBQ0FEUlEwQkdrRUFJQUJCeFFBUVQwVU5BUm9nQnlBQVFmQUNhaUFCRUpRSk5nSUFEQU1MSUFSQi81c0NFRVFnQVNBRUtRSUFOd0lBSUFBZ0FSQlNSUTBDSUFCQkNHb2lBeUlFS0FJRUlBUW9BZ0JyUVFKMUlRUUNRQU5BSUFCQnhRQVFUMFVFUUNBQklBQVFYU0lJTmdJQUlBaEZEUUlnQXlBQkVHZ01BUXNMSUFFZ0FDQUVFSE1nQnlBQVFmQUNhaUFCRUpZSk5nSUFEQU1MUVFBTEN3d0JDeUFGUVlLY0FoQkVJQUVnQlNrQ0FEY0NBQ0FBSUFFUVVob2dBRUhHQUJCUEJIOGdBRUhaQUJCUEdpQUNJQUFRWFNJRE5nSUFJQU1FZnlBR1FRQTZBQUFnQUVFSWFpSURJZ1FvQWdRZ0JDZ0NBR3RCQW5VaEJBSi9Ba0FDUUFKQUEwQUNRQ0FBUWNVQUVFOE5CQ0FBUWZZQUVFOUZCRUFnQ1VHRm5BSVFSQ0FCSUFrcEFnQTNBZ0FnQUNBQkVGSU5BU0FLUVlpY0FoQkVJQUVnQ2lrQ0FEY0NBQ0FBSUFFUVVnMERJQUVnQUJCZElnVTJBZ0FnQlVVTkJDQURJQUVRYUFzTUFRc0xJQVpCQVRvQUFBd0NDeUFHUVFJNkFBQU1BUXRCQUF3QkN5QUJJQUFnQkJCeklBQkI4QUpxSUFJZ0FTQUxJQVlnQnhDYUNRc0ZRUUFMQlVFQUN3c2hEQ0FDSkFRZ0RBdW5BUUFnQUVFQk9nQTFJQUlnQUNnQ0JFWUVRQUpBSUFCQkFUb0FOQ0FBS0FJUUlnSkZCRUFnQUNBQk5nSVFJQUFnQXpZQ0dDQUFRUUUyQWlRZ0FDZ0NNRUVCUmlBRFFRRkdjVVVOQVNBQVFRRTZBRFlNQVFzZ0FTQUNSd1JBSUFBZ0FDZ0NKRUVCYWpZQ0pDQUFRUUU2QURZTUFRc2dBQ2dDR0NJQlFRSkdCRUFnQUNBRE5nSVlCU0FCSVFNTElBQW9BakJCQVVZZ0EwRUJSbkVFUUNBQVFRRTZBRFlMQ3dzTFhnRUJmeUFBS0FJUUlnTUVRQUpBSUFFZ0EwY0VRQ0FBSUFBb0FpUkJBV28yQWlRZ0FFRUNOZ0lZSUFCQkFUb0FOZ3dCQ3lBQUtBSVlRUUpHQkVBZ0FDQUNOZ0lZQ3dzRklBQWdBVFlDRUNBQUlBSTJBaGdnQUVFQk5nSWtDd3VuQVFFQ2YwRnZJQUZySUFKSkJFQVFBd3NnQUN3QUMwRUFTQVIvSUFBb0FnQUZJQUFMSVFVZ0FVSG4vLy8vQjBrRWYwRUxJQUZCQVhRaUJpQUJJQUpxSWdJZ0FpQUdTUnNpQWtFUWFrRndjU0FDUVF0Skd3VkJid3NpQmhCZklRSWdCQVJBSUFJZ0JTQUVFSndCQ3lBRElBUnJJZ01FUUNBQ0lBUnFJQVFnQldvZ0F4Q2NBUXNnQVVFS1J3UkFJQVVRUXdzZ0FDQUNOZ0lBSUFBZ0JrR0FnSUNBZUhJMkFnZ0xIQUFnQUJEbUJDZ0NBQ0lBTmdJQUlBQWdBQ2dDQkVFQmFqWUNCQXNFQUVFQkN3c0FJQVFnQWpZQ0FFRURDNzRFQVFGL0lBQWdCVVlFZnlBQkxBQUFCSDhnQVVFQU9nQUFJQVFnQkNnQ0FDSUFRUUZxTmdJQUlBQkJMam9BQUNBSEtBSUVJQWNzQUFzaUFFSC9BWEVnQUVFQVNCc0VRQ0FKS0FJQUlnQWdDR3RCb0FGSUJFQWdDaWdDQUNFQklBa2dBRUVFYWpZQ0FDQUFJQUUyQWdBTEMwRUFCVUYvQ3dVQ2Z5QUFJQVpHQkVBZ0J5Z0NCQ0FITEFBTElnVkIvd0Z4SUFWQkFFZ2JCRUJCZnlBQkxBQUFSUTBDR2tFQUlBa29BZ0FpQUNBSWEwR2dBVTROQWhvZ0NpZ0NBQ0VCSUFrZ0FFRUVhallDQUNBQUlBRTJBZ0FnQ2tFQU5nSUFRUUFNQWdzTElBdEJnQUZxSVF4QkFDRUZBMzhnQlVFZ1JnUi9JQXdGSUFWQkFXb2hCaUFBSUFWQkFuUWdDMm9pQlNnQ0FFWUVmeUFGQlNBR0lRVU1BZ3NMQ3lBTGF5SUFRZndBU2dSL1FYOEZJQUJCQW5WQm9EWnFMQUFBSVFVQ1FBSkFBa0FDUUNBQVFhaC9haUlHUVFKMklBWkJIblJ5RGdRQkFRQUFBZ3NnQkNnQ0FDSUFJQU5IQkVCQmZ5QUFRWDlxTEFBQVFkOEFjU0FDTEFBQVFmOEFjVWNOQlJvTElBUWdBRUVCYWpZQ0FDQUFJQVU2QUFCQkFBd0VDeUFDUWRBQU9nQUFEQUVMSUFWQjN3QnhJZ01nQWl3QUFFWUVRQ0FDSUFOQmdBRnlPZ0FBSUFFc0FBQUVRQ0FCUVFBNkFBQWdCeWdDQkNBSExBQUxJZ0ZCL3dGeElBRkJBRWdiQkVBZ0NTZ0NBQ0lCSUFoclFhQUJTQVJBSUFvb0FnQWhBaUFKSUFGQkJHbzJBZ0FnQVNBQ05nSUFDd3NMQ3dzZ0JDQUVLQUlBSWdGQkFXbzJBZ0FnQVNBRk9nQUFJQUJCMUFCTUJFQWdDaUFLS0FJQVFRRnFOZ0lBQzBFQUN3c0xDN29CQVFKL0l3UWhCU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQlNBQktBSWNJZ0UyQWdBZ0FTQUJLQUlFUVFGcU5nSUVJQVZCeVBzQ0VGTWlBU2dDQUNnQ01DRUdJQUZCb0RaQndEWWdBaUFHUVFkeFFlb0JhaEVQQUJvZ0JVSFErd0lRVXlJQktBSUFLQUlNSVFJZ0F5QUJJQUpCL3dCeFFRUnFFUWdBTmdJQUlBUWdBU0FCS0FJQUtBSVFRZjhBY1VFRWFoRUlBRFlDQUNBQUlBRWdBU2dDQUNnQ0ZFSC9BWEZCamdkcUVRQUFJQVVRVkNBRkpBUUwrQUVCQlg4Z0FDZ0NFQ0lESUFGQkFXcHFJQUFvQWd3aUJXc2hCQ0FBS0FJRUlnWkZCRUFnQUNBRVFRSjBFRW9pQWpZQ0JDQUNCRUFnQUVFQUlBVnJRUUowSUFKcU5nSUFJQUFnQkVFQ2RDQUNhallDQ0NBQUlBRWdBMm8yQWhBUEJVSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUFrRUFOZ0lBSUFKQmZ6WUNCQ0FDUWFnNFFRQVFBUXNMSUFZZ0JFRUNkQkNLQVNJQ1JRUkFRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSURRUUEyQWdBZ0EwRi9OZ0lFSUFOQnFEaEJBQkFCQ3lBQUlBSTJBZ1FnQUNnQ0VDRURJQUJCQUNBQUtBSU1hMEVDZENBQ2FqWUNBQ0FBSUFSQkFuUWdBbW8yQWdnZ0FDQUJJQU5xTmdJUUN4UUFJQUJCREdvZ0FVRi9haUFBUVNCcUVJMERDOVFFQVFGL0lBQkIvd0Z4SUFWQi93RnhSZ1IvSUFFc0FBQUVmeUFCUVFBNkFBQWdCQ0FFS0FJQUlnQkJBV28yQWdBZ0FFRXVPZ0FBSUFjb0FnUWdCeXdBQ3lJQVFmOEJjU0FBUVFCSUd3UkFJQWtvQWdBaUFDQUlhMEdnQVVnRVFDQUtLQUlBSVFFZ0NTQUFRUVJxTmdJQUlBQWdBVFlDQUFzTFFRQUZRWDhMQlFKL0lBQkIvd0Z4SUFaQi93RnhSZ1JBSUFjb0FnUWdCeXdBQ3lJRlFmOEJjU0FGUVFCSUd3UkFRWDhnQVN3QUFFVU5BaHBCQUNBSktBSUFJZ0FnQ0d0Qm9BRk9EUUlhSUFvb0FnQWhBU0FKSUFCQkJHbzJBZ0FnQUNBQk5nSUFJQXBCQURZQ0FFRUFEQUlMQ3lBTFFTQnFJUXhCQUNFRkEzOGdCVUVnUmdSL0lBd0ZJQVZCQVdvaEJpQUZJQXRxSWdVdEFBQWdBRUgvQVhGR0JIOGdCUVVnQmlFRkRBSUxDd3NnQzJzaUJVRWZTZ1IvUVg4RklBVkJvRFpxTEFBQUlRQUNRQUpBQWtBZ0JVRVdhdzRFQVFFQUFBSUxJQVFvQWdBaUFTQURSd1JBUVg4Z0FVRi9haXdBQUVIZkFIRWdBaXdBQUVIL0FIRkhEUVFhQ3lBRUlBRkJBV28yQWdBZ0FTQUFPZ0FBUVFBTUF3c2dBa0hRQURvQUFDQUVJQVFvQWdBaUFVRUJhallDQUNBQklBQTZBQUJCQUF3Q0N5QUFRZDhBY1NJRElBSXNBQUJHQkVBZ0FpQURRWUFCY2pvQUFDQUJMQUFBQkVBZ0FVRUFPZ0FBSUFjb0FnUWdCeXdBQ3lJQlFmOEJjU0FCUVFCSUd3UkFJQWtvQWdBaUFTQUlhMEdnQVVnRVFDQUtLQUlBSVFJZ0NTQUJRUVJxTmdJQUlBRWdBallDQUFzTEN3c2dCQ0FFS0FJQUlnRkJBV28yQWdBZ0FTQUFPZ0FBUVFBZ0JVRVZTZzBCR2lBS0lBb29BZ0JCQVdvMkFnQkJBQXNMQ3d1NkFRRUNmeU1FSVFVakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBVWdBU2dDSENJQk5nSUFJQUVnQVNnQ0JFRUJhallDQkNBRlFhajdBaEJUSWdFb0FnQW9BaUFoQmlBQlFhQTJRY0EySUFJZ0JrRUhjVUhxQVdvUkR3QWFJQVZCdVBzQ0VGTWlBU2dDQUNnQ0RDRUNJQU1nQVNBQ1FmOEFjVUVFYWhFSUFEb0FBQ0FFSUFFZ0FTZ0NBQ2dDRUVIL0FIRkJCR29SQ0FBNkFBQWdBQ0FCSUFFb0FnQW9BaFJCL3dGeFFZNEhhaEVBQUNBRkVGUWdCU1FFQzFzQkFYOGdBU0FBS0FJY1FRRnFJQUFvQWhocklnRnJJZ0pGQkVBUEN5QUFRUXhxSUFJUWtnSWdBQ2dDRUNBQlFRSjBhaUlCSUFBb0FoUlBCRUFQQ3dOQUlBRWdBQ2dDSURZQ0FDQUJRUVJxSWdFZ0FDZ0NGRWtOQUFzTFBBQWdBRUVBT2dBQUlBQWdBVFlDQkNBQklBRW9BZ0JCZEdvb0FnQnFJZ0VvQWhCRkJFQWdBU2dDU0NJQkJFQWdBUkJGQ3lBQVFRRTZBQUFMQ3dzQUlBQVE2d0VnQUJCREN3c0FJQUFRN0FFZ0FCQkRDd3NBSUFBUW1BTWdBQkJEQ3dzQUlBQVFuUU1nQUJCREM0b0JBd0YvQVg0Q2ZDTUVJUU1qQkVHUUFXb2tCQ01FSXdWT0JFQkJrQUVRQUFzZ0EwRUFRWkFCRUdJYUlBTWdBRFlDQkNBRFFYODJBZ2dnQXlBQU5nSXNJQU5CZnpZQ1RDQURRZ0FRZkNBRElBSkJBUkN6QXlFR0lBTXBBM2dnQXlnQ0JDQURLQUlJYTZ4OElRUWdBUVJBSUFFZ0FDQUFJQVNuYWlBRVFnQlJHellDQUFzZ0F5UUVJQVlMa1FFQkEzOENmd0pBSUFBb0FoUWdBQ2dDSEUwTkFDQUFLQUlrSVFFZ0FFRUFRUUFnQVVFZmNVSEtBV29SQkFBYUlBQW9BaFFOQUVGL0RBRUxJQUFvQWdRaUFTQUFLQUlJSWdKSkJFQWdBQ2dDS0NFRElBQWdBU0FDYTZ4QkFTQURRUUZ4UWY0Q2FoRUxBQm9MSUFCQkFEWUNFQ0FBUVFBMkFod2dBRUVBTmdJVUlBQkJBRFlDQ0NBQVFRQTJBZ1JCQUFzTGpnRUJBWDhnQUFSQUFuOGdBQ2dDVEVGL1RBUkFJQUFRblFJTUFRc2dBQkNkQWdzaEFBVkIxTzRBS0FJQUJIOUIxTzRBS0FJQUVKNENCVUVBQ3lFQVFZenZBaEFRUVpUdkFpZ0NBQ0lCQkVBRFFDQUJLQUpNUVg5S0JIOUJBUVZCQUFzYUlBRW9BaFFnQVNnQ0hFc0VRQ0FCRUowQ0lBQnlJUUFMSUFFb0FqZ2lBUTBBQ3d0QmpPOENFQXNMSUFBTHFoTUNGSDhCZmlNRUlROGpCRUZBYXlRRUl3UWpCVTRFUUVIQUFCQUFDeUFQUVNocUlRb2dEMEV3YWlFWUlBOUJQR29oRkNBUFFUaHFJZ3NnQVRZQ0FDQUFRUUJISVJFZ0QwRW9haUlUSVJJZ0QwRW5haUVWUVFBaEFRSkFBa0FEUUFKQUEwQWdDVUYvU2dSQUlBRkIvLy8vL3djZ0NXdEtCSDlCK080Q1Fjc0FOZ0lBUVg4RklBRWdDV29MSVFrTElBc29BZ0FpREN3QUFDSUZSUTBESUF3aEFRSkFBa0FEUUFKQUFrQWdCVUVZZEVFWWRRNG1BUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1BQ3lBTElBRkJBV29pQVRZQ0FDQUJMQUFBSVFVTUFRc0xEQUVMSUFFaEJRTi9JQUVzQUFGQkpVY0VRQ0FGSVFFTUFnc2dCVUVCYWlFRklBc2dBVUVDYWlJQk5nSUFJQUVzQUFCQkpVWU5BQ0FGQ3lFQkN5QUJJQXhySVFFZ0VRUkFJQUFnRENBQkVHMExJQUVOQUFzZ0N5QUxLQUlBSWdFZ0N5Z0NBQ3dBQVVGUWFrRUtUd1IvUVg4aERrRUJCU0FCTEFBQ1FTUkdCSDhnQVN3QUFVRlFhaUVPUVFFaEIwRURCVUYvSVE1QkFRc0xhaUlCTmdJQUlBRXNBQUFpQmtGZ2FpSUZRUjlMUVFFZ0JYUkJpZEVFY1VWeUJFQkJBQ0VGQlVFQUlRWURRQ0FHUVFFZ0JYUnlJUVVnQ3lBQlFRRnFJZ0UyQWdBZ0FTd0FBQ0lHUVdCcUlnaEJIMHRCQVNBSWRFR0owUVJ4UlhKRkJFQWdCU0VHSUFnaEJRd0JDd3NMSUFaQi93RnhRU3BHQkg4Q2Z3SkFJQUVzQUFGQlVHcEJDazhOQUNBTEtBSUFJZ0VzQUFKQkpFY05BQ0FCTEFBQlFWQnFRUUowSUFScVFRbzJBZ0JCQVNFSUlBRkJBMm9oQmlBQkxBQUJRVkJxUVFOMElBTnFLUU1BcHd3QkN5QUhCRUJCZnlFSkRBTUxJQkVFUUNBQ0tBSUFRUU5xUVh4eElnWW9BZ0FoQVNBQ0lBWkJCR28yQWdBRlFRQWhBUXRCQUNFSUlBc29BZ0JCQVdvaEJpQUJDeUVISUFzZ0JqWUNBQ0FHSVFFZ0JVR0F3QUJ5SUFVZ0IwRUFTQ0lGR3lFTlFRQWdCMnNnQnlBRkd5RVFJQWdGSUFzUXVnTWlFRUVBU0FSQVFYOGhDUXdDQ3lBTEtBSUFJUUVnQlNFTklBY0xJUllnQVN3QUFFRXVSZ1JBQWtBZ0FVRUJhaUVGSUFFc0FBRkJLa2NFUUNBTElBVTJBZ0FnQ3hDNkF5RUJJQXNvQWdBaEJ3d0JDeUFCTEFBQ1FWQnFRUXBKQkVBZ0N5Z0NBQ0lGTEFBRFFTUkdCRUFnQlN3QUFrRlFha0VDZENBRWFrRUtOZ0lBSUFVc0FBSkJVR3BCQTNRZ0Eyb3BBd0NuSVFFZ0N5QUZRUVJxSWdjMkFnQU1BZ3NMSUJZRVFFRi9JUWtNQXdzZ0VRUkFJQUlvQWdCQkEycEJmSEVpQlNnQ0FDRUJJQUlnQlVFRWFqWUNBQVZCQUNFQkN5QUxJQXNvQWdCQkFtb2lCellDQUFzRklBRWhCMEYvSVFFTFFRQWhCUU5BSUFjc0FBQkJ2MzlxUVRsTEJFQkJmeUVKREFJTElBc2dCMEVCYWlJR05nSUFJQWNzQUFBZ0JVRTZiR3BCN3c5cUxBQUFJZ2RCL3dGeElnaEJmMnBCQ0VrRVFDQUdJUWNnQ0NFRkRBRUxDeUFIUlFSQVFYOGhDUXdCQ3lBT1FYOUtJUmNDUUFKQUlBZEJFMFlFUUNBWEJFQkJmeUVKREFRTEJRSkFJQmNFUUNBT1FRSjBJQVJxSUFnMkFnQWdDaUFPUVFOMElBTnFLUU1BTndNQURBRUxJQkZGQkVCQkFDRUpEQVVMSUFvZ0NDQUNFTGtESUFzb0FnQWhCZ3dDQ3dzZ0VRMEFRUUFoQVF3QkN5QU5RZi8vZTNFaUNDQU5JQTFCZ01BQWNSc2hCd0pBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQWdCa0YvYWl3QUFDSUdRVjl4SUFZZ0JrRVBjVUVEUmlBRlFRQkhjUnNpQmtIQkFHc09PQWtLQndvSkNRa0tDZ29LQ2dvS0Nnb0tDZ2dLQ2dvS0N3b0tDZ29LQ2dvS0NRb0ZBd2tKQ1FvRENnb0tDZ0FDQVFvS0Jnb0VDZ29MQ2dzQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFWQi93RnhRUmgwUVJoMURnZ0FBUUlEQkFjRkJnY0xJQW9vQWdBZ0NUWUNBRUVBSVFFTUZ3c2dDaWdDQUNBSk5nSUFRUUFoQVF3V0N5QUtLQUlBSUFtc053TUFRUUFoQVF3VkN5QUtLQUlBSUFrN0FRQkJBQ0VCREJRTElBb29BZ0FnQ1RvQUFFRUFJUUVNRXdzZ0NpZ0NBQ0FKTmdJQVFRQWhBUXdTQ3lBS0tBSUFJQW1zTndNQVFRQWhBUXdSQzBFQUlRRU1FQXNnQjBFSWNpRUhJQUZCQ0NBQlFRaExHeUVCUWZnQUlRWU1DUXNnQVNBU0lBb3BBd0FnRXhDTkJ5SUZheUlHUVFGcUlBZEJDSEZGSUFFZ0JrcHlHeUVCUVFBaERFR3UwUUVoQ0F3TEN5QUtLUU1BSWhsQ0FGTUVmeUFLUWdBZ0dYMGlHVGNEQUVHdTBRRWhDRUVCQlVHdjBRRkJzTkVCUWE3UkFTQUhRUUZ4R3lBSFFZQVFjUnNoQ0NBSFFZRVFjVUVBUndzaERBd0lDeUFLS1FNQUlSbEJBQ0VNUWE3UkFTRUlEQWNMSUJVZ0Npa0RBRHdBQUNBVklRWWdDQ0VIUVFFaEJVRUFJUXhCcnRFQklRZ2dFaUVCREFvTElBb29BZ0FpQlVHNDBRRWdCUnNpQmlBQkVMZ0RJZzFGSVE0Z0NDRUhJQUVnRFNBR2F5QU9HeUVGUVFBaERFR3UwUUVoQ0NBQklBWnFJQTBnRGhzaEFRd0pDeUFQSUFvcEF3QStBakFnRDBFQU5nSTBJQW9nR0RZQ0FFRi9JUXdNQlFzZ0FRUkFJQUVoREF3RkJTQUFRU0FnRUVFQUlBY1FjRUVBSVFFTUJ3c0FDeUFBSUFvckF3QWdFQ0FCSUFjZ0JrR0pBUkVLQUNFQkRBY0xJQXdoQmlBQklRVkJBQ0VNUWE3UkFTRUlJQkloQVF3RkN5QUtLUU1BSUJNZ0JrRWdjUkNPQnlFRlFRQkJBaUFIUVFoeFJTQUtLUU1BUWdCUmNpSUlHeUVNUWE3UkFTQUdRUVIyUWE3UkFXb2dDQnNoQ0F3Q0N5QVpJQk1RdVFFaEJRd0JDMEVBSVFFZ0NpZ0NBQ0VHQWtBQ1FBTkFJQVlvQWdBaUJRUkFJQlFnQlJDM0F5SUZRUUJJSWdnZ0JTQU1JQUZyUzNJTkFpQUdRUVJxSVFZZ0RDQUJJQVZxSWdGTERRRUxDd3dCQ3lBSUJFQkJmeUVKREFZTEN5QUFRU0FnRUNBQklBY1FjQ0FCQkVCQkFDRU1JQW9vQWdBaEJnTkFJQVlvQWdBaUJVVU5BeUFVSUFVUXR3TWlCU0FNYWlJTUlBRktEUU1nQmtFRWFpRUdJQUFnRkNBRkVHMGdEQ0FCU1EwQUN3VkJBQ0VCQ3d3QkN5QUZJQk1nQ2lrREFFSUFVaUlOSUFGQkFFZHlJZzRiSVFZZ0IwSC8vM3R4SUFjZ0FVRi9TaHNoQnlBQklCSWdCV3NnRFVFQmMyb2lCU0FCSUFWS0cwRUFJQTRiSVFVZ0VpRUJEQUVMSUFCQklDQVFJQUVnQjBHQXdBQnpFSEFnRUNBQklCQWdBVW9iSVFFTUFRc2dBRUVnSUF3Z0FTQUdheUlOSUFVZ0JTQU5TQnNpRG1vaUJTQVFJQkFnQlVnYklnRWdCU0FIRUhBZ0FDQUlJQXdRYlNBQVFUQWdBU0FGSUFkQmdJQUVjeEJ3SUFCQk1DQU9JQTFCQUJCd0lBQWdCaUFORUcwZ0FFRWdJQUVnQlNBSFFZREFBSE1RY0FzZ0ZpRUhEQUVMQ3d3QkN5QUFSUVJBSUFjRWYwRUJJUUFEUUNBQVFRSjBJQVJxS0FJQUlnRUVRQ0FBUVFOMElBTnFJQUVnQWhDNUF5QUFRUUZxSWdCQkNra05BVUVCSVFrTUJBc0xBMzhnQUVFQ2RDQUVhaWdDQUFSQVFYOGhDUXdFQ3lBQVFRRnFJZ0JCQ2trTkFFRUJDd1ZCQUFzaENRc0xJQThrQkNBSkMxVUJBMzhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFFTDhEQkg5QmZ3VWdBQ2dDSUNFQ0lBQWdBVUVCSUFKQkgzRkJ5Z0ZxRVFRQVFRRkdCSDhnQVMwQUFBVkJmd3NMSVFNZ0FTUUVJQU1MRFFBZ0FDQUJJQUpDZnhEQkF3dXVCQUVCZnlBQUtBSWdJZ0VFUUNBQklBRW9BZ0FvQWdSQi93TnhRWVFEYWhFQkFBc2dBRUVBTmdJZ0lBQW9BaVFpQVFSQUlBRWdBU2dDQUNnQ0JFSC9BM0ZCaEFOcUVRRUFDeUFBUVFBMkFpUWdBRUVBTmdKVUlBQW9Ba3dpQVFSQVFRd2dBU0FBS0FKUUVFZ2dBRUVBTmdKUUlBQkJBRFlDVEFzZ0FFRUFOZ0prSUFBb0Fsd2lBUVJBUVF3Z0FTQUFLQUpnRUVnZ0FFRUFOZ0pnSUFCQkFEWUNYQXNnQUVFQU5nSjBJQUFvQW13aUFRUkFRUXdnQVNBQUtBSndFRWdnQUVFQU5nSndJQUJCQURZQ2JBc2dBRUVBTmdLRUFTQUFLQUo4SWdFRVFFRU1JQUVnQUNnQ2dBRVFTQ0FBUVFBMkFvQUJJQUJCQURZQ2ZBc2dBRUVBTmdLVUFTQUFLQUtNQVNJQkJFQkJEQ0FCSUFBb0FwQUJFRWdnQUVFQU5nS1FBU0FBUVFBMkFvd0JDeUFBUVVCcktBSUFJZ0VFUUNBQkVFTUxJQUFvQWtRaUFRUkFJQUVRUXdzZ0FFSGc3QUEyQW9nQklBQW9Bb3dCSWdFRVFFRU1JQUVnQUNnQ2tBRVFTQ0FBUVFBMkFwQUJJQUJCQURZQ2pBRUxJQUJCNE93QU5nSjRJQUFvQW53aUFRUkFRUXdnQVNBQUtBS0FBUkJJSUFCQkFEWUNnQUVnQUVFQU5nSjhDeUFBUWVEc0FEWUNhQ0FBS0FKc0lnRUVRRUVNSUFFZ0FDZ0NjQkJJSUFCQkFEWUNjQ0FBUVFBMkFtd0xJQUJCNE93QU5nSllJQUFvQWx3aUFRUkFRUXdnQVNBQUtBSmdFRWdnQUVFQU5nSmdJQUJCQURZQ1hBc2dBRUhFNWdBMkFrZ2dBQ2dDVENJQlJRUkFEd3RCRENBQklBQW9BbEFRU0NBQVFRQTJBbEFnQUVFQU5nSk1DNHNCQUNBQVFRQTJBa2dnQUVFQU5nSk1JQUJCMU9nQU5nSkVJQUJCQURZQ1VDQUFRUUEyQWxnZ0FFRUFOZ0pjSUFCQnNPWUFOZ0pVSUFCQkFEWUNZQ0FBUVFBMkFuQWdBRUVBTmdKMElBQkJzT1lBTmdKc0lBQkJBRFlDZUNBQVFnQTNBd0FnQUVJQU53TUlJQUJDQURjREVDQUFRZ0EzQXhnZ0FFSUFOd01nSUFCQkFEWUNLQ0FBRU13REM5VUdBZ3QvQkh3akJDRUlJd1JCMEFCcUpBUWpCQ01GVGdSQVFkQUFFQUFMSUFoQktHb2hCaUFCSUFCclFTaHRJZ05CS0VrRVFDQUFRU2hxSWdRZ0FVc0VRQ0FJSkFRUEN3TkFJQVlnQkNrREFEY0RBQ0FHSUFRcEF3ZzNBd2dnQmlBRUtRTVFOd01RSUFZZ0JDa0RHRGNER0NBR0lBUXBBeUEzQXlBZ0JFRllhaUlESUFCSkJIOGdCQ0lEQlFKL0lBUWhCUUpBQTBBZ0FpZ0NDQ0VIQW53Z0FpQUdJQWRCQTNFUkNRQWhEeUFDS0FJSUlRY2dEd3NnQWlBRElBZEJBM0VSQ1FCalJRMEJJQVVnQXlrREFEY0RBQ0FGSUFNcEF3ZzNBd2dnQlNBRlFXaHFLQUlBTmdJUUlBVWdCVUZzYWlnQ0FEWUNGQ0FGSUFWQmNHb29BZ0EyQWhnZ0JTQUZRWFJxTEFBQU9nQWNJQVVnQlVGNGFpZ0NBRFlDSUNBRFFWaHFJZ2NnQUU4RVFDQURJUVVnQnlFRERBRUxDeUFEREFFTElBVWlBd3NMSVFVZ0F5QUdLUU1BTndNQUlBTWdCaWtEQ0RjRENDQUZJQVlvQWhBMkFoQWdCU0FHS0FJVU5nSVVJQVVnQmlnQ0dEWUNHQ0FGSUFZc0FCdzZBQndnQlNBR0tBSWdOZ0lnSUFSQktHb2lCQ0FCVFEwQUN5QUlKQVFQQ3lBSUlBTkJBWFpCS0d3Z0FHb2lBeWtEQURjREFDQUlJQU1wQXdnM0F3Z2dDQ0FES1FNUU53TVFJQWdnQXlrREdEY0RHQ0FJSUFNcEF5QTNBeUFnQUNFRElBRWhCQU5BQTBBZ0FpZ0NDQ0VGQW53Z0FpQURJQVZCQTNFUkNRQWhFQ0FDS0FJSUlRY2dBMEVvYWlFRklCQUxJQUlnQ0NBSFFRTnhFUWtBWXdSQUlBVWhBd3dCQ3dzRFFDQUNLQUlJSVFjQ2ZDQUNJQWdnQjBFRGNSRUpBQ0VSSUFJb0FnZ2hDU0FFUVZocUlRY2dFUXNnQWlBRUlBbEJBM0VSQ1FCakJFQWdCeUVFREFFTEN5QURJQVJOQkVBZ0JpQURLUU1BTndNQUlBWWdBeWtEQ0RjRENDQURLQUlRSVFrZ0F5Z0NGQ0VLSUFNb0FoZ2hDeUFETEFBY0lRd2dBeWdDSUNFTklBTWdCQ2tEQURjREFDQURJQVFwQXdnM0F3Z2dBeUFFS0FJUU5nSVFJQU1nQkNnQ0ZEWUNGQ0FESUFRb0FoZzJBaGdnQXlBRUxBQWNPZ0FjSUFNZ0JDZ0NJRFlDSUNBRUlBWXBBd0EzQXdBZ0JDQUdLUU1JTndNSUlBUWdDVFlDRUNBRUlBbzJBaFFnQkNBTE5nSVlJQVFnRERvQUhDQUVJQTAyQWlBZ0JTRURJQWNoQkFzZ0F5QUVUUTBBQ3lBRUlBQkxCRUFnQUNBRUlBSVFwQUlMSUFNZ0FVa0VRQ0FESUFFZ0FoQ2tBZ3NnQ0NRRUM1TURBZ3AvQVh3akJDRUlJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFJUVFScUlRMGdBRUVnYWlBQVFTUnFJQVViS0FJQUlnWW9BZ1FpRENFSklBWW9BZ2dpRGlFSEFuOENRQ0FNS3dNUUlBQkJDR29nQUVFUWFpQUZHeXNEQUNBQUt3TVlSQUFBQUFBQUFPQS9vcUFpRUdZRWZ5QU1JUVlNQVFVZ0RDRVBJQTRoQ2lBSklRWWdCeUVMQWtBQ1FBTkFJQW9yQXhBZ0VHTkZCRUFnQmdSL0lBOG9BZ0FpQmlBSklBWWJCU0FKQ3lFR0lBc0VmeUFLS0FJRUlnc2dCeUFMR3dVZ0J3c2hDaUFHSWc4ckF4QWdFR1lOQWlBS0lRc01BUXNMREFFTElBWWhDUXdDQ3lBS0lBNUdCSDhnQVNBQUtBSWdOZ0lBSUFJZ0FDZ0NKRFlDQUNBRFFRQTJBZ0FnQkVFQU5nSUFJQWdrQkE4RklBc2hCMEVCQ3dzTUFRc2dCaUFNUmdSL0lBRkJBRFlDQUNBQ1FRQTJBZ0FnQXlBQUtBSWdOZ0lBSUFRZ0FDZ0NKRFlDQUNBSUpBUVBCVUVBSUFsRkRRRWFJQVlvQWdRaUJpQUhJQVliSVFkQkFBc0xJUVlnQ0NBSE5nSUFJQTBnQ0NnQ0FEWUNBQ0FBSUFFZ0FpQURJQVFnRFNBR0lBVVF1QWNnQ0NRRUM0QUdBZ1YvRFh4Qm9OTUNLd01BSVFnRFFBSkFJQUlyQXdBaURpQUJLd01BSWd5aFJGbnorTUlmYnFVQlpnUkFJQUVyQXdnaER5QUNLd01JSVFrRklBSXJBd2dpQ1NBQkt3TUlJZytoUkZueitNSWZicVVCWmtVTkFRc2dBQ3NER0NJVFJBQUFBQUFBQU9BL29pSVVJQUFyQXhBaUVhQWhDaUFKSUJNZ0VhQWlEV01pQXlBS0lBOWxSU0lFSUFBckF3Z2lFRVFBQUFBQUFBQUFBS0FpRWlBTVpVVWdEaUFVSUJDZ0lndGpSWElpQm5KQkFYTnhCRUFnRUNFTEJRSkFJQXdnRGlBSW9HTWdEQ0FPSUFpaFpIRWlCUVJBSUE4Z0NTQUlvR01nRHlBSklBaWhaSEVFUUNBT0lBc2dDS0JqSUE0Z0N5QUlvV1J4QkVBZ0NTQU5JQWlnWXlBSklBMGdDS0ZrY1FSQUlBc2dFaUFJb0dNZ0N5QVNJQWloWkhFZ0RTQUtJQWlnWXlBTklBb2dDS0ZrY1hFRVFDQVFJUXNNQlFzTEN3c0xJQU1nQkNBTElBeGxSU0FPSUJNZ0VLQWlER05GY2lJSGNrRUJjM0ZGQkVBZ0JRUkFJQThnQ1NBSW9HTWdEeUFKSUFpaFpIRUVRQ0FPSUF3Z0NLQmpJQTRnRENBSW9XUnhCRUFnQ1NBTklBaWdZeUFKSUEwZ0NLRmtjUVJBSUF3Z0N5QUlvR01nRENBTElBaWhaSEVnRFNBS0lBaWdZeUFOSUFvZ0NLRmtjWEVOQlFzTEN3c2dDU0FLWXlJRElCRkVBQUFBQUFBQUFBQ2dJZzBnRDJWRklnUWdCbkpCQVhOeEJFQWdFQ0VMQlNBRkJFQWdEeUFKSUFpZ1l5QVBJQWtnQ0tGa2NRUkFJQTRnQ3lBSW9HTWdEaUFMSUFpaFpIRUVRQ0FKSUFvZ0NLQmpJQWtnQ2lBSW9XUnhCRUFnQ3lBU0lBaWdZeUFMSUJJZ0NLRmtjU0FLSUEwZ0NLQmpJQW9nRFNBSW9XUnhjUVJBSUJBaEN5QVJJUW9NQndzTEN3c0xJQU1nQkNBSGNrRUJjM0ZGQkVBZ0JVVU5CU0FQSUFrZ0NLQmpJQThnQ1NBSW9XUnhSUTBGSUE0Z0RDQUlvR01nRGlBTUlBaWhaSEZGRFFVZ0NTQUtJQWlnWXlBSklBb2dDS0ZrY1VVTkJTQU1JQXNnQ0tCaklBd2dDeUFJb1dSeElBb2dEU0FJb0dNZ0NpQU5JQWloWkhGeFJRMEZDd3NnRVNFS0N3c0xJQUFnQUNnQ0FFRUJhallDQUNBQUlCUTVBeGdnQUNBTE9RTUlJQUFnQ2prREVBd0JDd3NMVndFQ2Z5TUVJUUVqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQmpPRUFOZ0lBSUFBb0FnZ2lBa1VFUUNBQkpBUVBDeUFCSUFBb0FnUTJBZ0FnQVVFRWFpSUFJQUVvQWdBMkFnQWdBaUFBRUUwZ0FTUUVDOG9DQVF0OElBQXJBeGdpQlNBQUt3TUlJZ21nSVFZZ0JTQUFLd01RSWdLZ0lRTWdBU3NER0NJSElBRXJBd2dpQ3FBaENDQUhJQUVyQXhBaUM2QWhCQ0FKSUFvZ0JpQUlJQUlnQ3lBRElBUVEwd01FUUVFQUR3c0NRQ0FGSUFkbEJId2dDU0FLWXdSOElBVWdCaUlKb0FVZ0JpQUlaQVI4SUFrZ0JhRWhDU0FHSUFXaEJTQUdDd3NoQmlBQ0lBdGpCRUFnQlNBRG9DRU1JQVFoQWlBTElRUU1BZ3NnQXlBRVpBUjhJQU1nQmFFaERDQUNJQVdoQlNBRElRd2dBZ3NoQXlBRUlRSWdDd1VnQ2lBSll3UjhJQWNnQ0NJS29BVWdDQ0FHWkFSOElBb2dCNkVoQ2lBSUlBZWhCU0FJQ3dzaENDQUxJQUpqQkVBZ0F5RU1JQUloQXlBSElBU2dJUUlNQWdzZ0JDQURaQVI4SUFNaERDQUNJUU1nQkNBSG9TRUNJQXNnQjZFRklBTWhEQ0FDSVFNZ0JDRUNJQXNMQ3lFRUN5QUpJQW9nQmlBSUlBTWdCQ0FNSUFJUTB3TUxwd2dDQ244SGZDTUVJUWdqQkVId0FHb2tCQ01FSXdWT0JFQkI4QUFRQUFzZ0NFRTRhaUVGSUFFZ0FHdEJPRzBpQkVFb1NRUkFJQUJCT0dvaUJDQUJTd1JBSUFna0JBOExJQUFoQXdOQUlBVWdCQ3NEQURrREFDQUZJQU5CUUdzckF3QTVBd2dnQlNBREt3TklPUU1RSUFVZ0F5c0RVRGtER0NBRklBTXBBMWczQXlBZ0JTQURLUU5nTndNb0lBVWdBeWdDYURZQ01DQUZJQU1zQUd3NkFEUWdCRUZJYWlJRElBQkpCRUFnQkNFREJRSkFJQVFoQmdOQUlBSW9BZ2doQndKOElBSWdCU0FIUVFOeEVRa0FJUkVnQWlnQ0NDRUhJQkVMSUFJZ0F5QUhRUU54RVFrQVkwVUVRQ0FHSVFNTUFnc2dCaUFES3dNQU9RTUFJQVlnQmtGUWFpc0RBRGtEQ0NBR0lBWkJXR29yQXdBNUF4QWdCaUFHUVdCcUt3TUFPUU1ZSUFZZ0JrRm9haUlIS1FNQU53TWdJQVlnQnlrRENEY0RLQ0FHSUFjb0FoQTJBakFnQmlBSExBQVVPZ0EwSUFOQlNHb2lCeUFBVHdSQUlBTWhCaUFISVFNTUFRc0xDd3NnQXlBRlJ3UkFJQU1nQlNzREFEa0RBQ0FESUFVckF3ZzVBd2dnQXlBRkt3TVFPUU1RSUFNZ0JTc0RHRGtER0FzZ0F5QUZLUU1nTndNZ0lBTWdCU2tES0RjREtDQURJQVVvQWpBMkFqQWdBeUFGTEFBME9nQTBJQVJCT0dvaUJpQUJUUVJBSUFRaEF5QUdJUVFNQVFzTElBZ2tCQThMSUFnZ0JFRUJkaUlFUVRoc0lBQnFLd01BT1FNQUlBZ2dCRUU0YkNBQWFpc0RDRGtEQ0NBSUlBUkJPR3dnQUdvckF4QTVBeEFnQ0NBRVFUaHNJQUJxS3dNWU9RTVlJQWdnQkVFNGJDQUFhaUlFS1FNZ053TWdJQWdnQkNrREtEY0RLQ0FJSUFRb0FqQTJBakFnQ0NBRUxBQTBPZ0EwSUFBaEJDQUJJUU1EUUFOQUlBSW9BZ2doQmdKOElBSWdCQ0FHUVFOeEVRa0FJUklnQWlnQ0NDRUhJQVJCT0dvaEJpQVNDeUFDSUFnZ0IwRURjUkVKQUdNRVFDQUdJUVFNQVFzTEEwQWdBaWdDQ0NFSEFud2dBaUFJSUFkQkEzRVJDUUFoRXlBQ0tBSUlJUWtnQTBGSWFpRUhJQk1MSUFJZ0F5QUpRUU54RVFrQVl3UkFJQWNoQXd3QkN3c2dCQ0FEVFFSQUlBUXJBd0FoRFNBRVFRaHFJZ2tyQXdBaERpQUVRUkJxSWdvckF3QWhEeUFFUVJocUlnd3JBd0FoRUNBRklBUWlDeWtESURjREFDQUZJQVFwQXlnM0F3Z2dCU0FFS0FJd05nSVFJQVVnQkN3QU5Eb0FGQ0FESUFSR0JFQWdDaUVFSUF3aENnVWdDeUFES3dNQU9RTUFJQWtnQTBFSWFpSUpLd01BT1FNQUlBb2dBMEVRYWlJRUt3TUFPUU1BSUF3Z0EwRVlhaUlLS3dNQU9RTUFDeUFMSUFNcEF5QTNBeUFnQ3lBREtRTW9Od01vSUFzZ0F5Z0NNRFlDTUNBTElBTXNBRFE2QURRZ0F5QU5PUU1BSUFrZ0Rqa0RBQ0FFSUE4NUF3QWdDaUFRT1FNQUlBTWdCU2tEQURjRElDQURJQVVwQXdnM0F5Z2dBeUFGS0FJUU5nSXdJQU1nQlN3QUZEb0FOQ0FHSVFRZ0J5RURDeUFFSUFOTkRRQUxJQU1nQUVzRVFDQUFJQU1nQWhDcEFnc2dCQ0FCU1FSQUlBUWdBU0FDRUtrQ0N5QUlKQVFMUVFBZ0FDQURRUUlnQTBGL1NoczJBZ0FnQWlBQVFSQnFJZ05HQkVBZ0FDQUJPUU1JRHdzZ0F5QUNLd01BT1FNQUlBQWdBaXNEQ0RrREdDQUFJQUU1QXdnTEJBQWdBUXNIQUNBQUtBSUlDNzBCQVFKL0lBQW9BZ1FRUXlBQVFRQTJBZ3dnQUNBQk5nSVFJQUZCQUVnRVFDQUFRUUEyQWdnZ0FFRUFOZ0lBSUFCQkFEWUNCQThMSUFBZ0FVRUJhaUlEUVJoc0VFb2lBVFlDQkNBQlJRUkFRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSUNRUUEyQWdBZ0FrRi9OZ0lFSUFKQnFEaEJBQkFCQ3lBQUlBRTJBZ0FnQUNBRFFSaHNJQUZxSWdJMkFnZ2dBaUFCVFFSQUR3c0RRQ0FCUWdBM0F3QWdBVUlBTndNSUlBRkJBRHNCRUNBQlFSaHFJZ0VnQUNnQ0NFa05BQXNMUkFBZ0FFRUFOZ0lZSUFCQmZ6WUNIQ0FBUVFBMkFoUWdBRUVBTmdJTUlBQkJBRFlDRUNBQVFRQTJBZ1FnQUVFQU5nSUlJQUJCcE9nQU5nSUFJQUJCSUdvUW93SUwwd0VCQTM4Z0FTZ0NEQ0VESUFCQkFEWUNHQ0FBSUFOQmYybzJBaHdnQTBFQlNBUkFJQUJCQURZQ0ZDQUFRUUEyQWd3Z0FFRUFOZ0lRQlNBQUlBTVFTaUlFTmdJUUlBUkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ1ZCQURZQ0FDQUZRWDgyQWdRZ0JVR29PRUVBRUFFTElBQWdCRFlDRENBQUlBTWdCR29pQXpZQ0ZBTkFJQVFnQWl3QUFEb0FBQ0FFUVFGcUlnUWdBMGNOQUFzTElBQkJqT0VBTmdJQUlBQkJBRFlDQkNBQUlBRTJBZ2dnQUNBQklBQVFXVFlDQkNBQVFiem5BRFlDQUNBQUlBSXNBQUE2QUNBTEJBQVFHUXZjQXdJQmZ3WjhJQUFnQVNBQ0lBTVFzZ0loQlNBRUt3TUlJUWNnQXlzRENDRUlJQVFyQXdBaUJpQURLd01BSWdsQm9OTUNLd01BSWdxaElndGpSUVJBSUFjZ0NDQUtvV05GSUFZZ0NTQUtvR05GSUFZZ0MyUkZjbklFUUNBRkR3c0xJQU1nQkVjRVFDQURJQVk1QXdBZ0F5QUhPUU1JQ3lBRUlBazVBd0FnQkNBSU9RTUlJQU1yQXdnaEJ5QUNLd01JSVFnZ0F5c0RBQ0lHSUFJckF3QWlDU0FLb1NJTFkwVUVRQ0FGUVFGcUlRUWdCeUFJSUFxaFkwVWdCaUFLSUFtZ1kwVWdCaUFMWkVWeWNnUkFJQVFQQ3dzZ0FpQURSd1JBSUFJZ0Jqa0RBQ0FDSUFjNUF3Z0xJQU1nQ1RrREFDQURJQWc1QXdnZ0Fpc0RDQ0VISUFFckF3Z2hDQ0FDS3dNQUlnWWdBU3NEQUNJSklBcWhJZ3RqUlFSQUlBVkJBbW9oQXlBSElBZ2dDcUZqUlNBR0lBb2dDYUJqUlNBR0lBdGtSWEp5QkVBZ0F3OExDeUFCSUFKSEJFQWdBU0FHT1FNQUlBRWdCemtEQ0FzZ0FpQUpPUU1BSUFJZ0NEa0RDQ0FCS3dNSUlRY2dBQ3NEQ0NFSUlBRXJBd0FpQmlBQUt3TUFJZ2tnQ3FFaUMyTkZCRUFnQlVFRGFpRUNJQWNnQ0NBS29XTkZJQVlnQ2lBSm9HTkZJQVlnQzJSRmNuSUVRQ0FDRHdzTElBQWdBVWNFUUNBQUlBWTVBd0FnQUNBSE9RTUlDeUFCSUFrNUF3QWdBU0FJT1FNSUlBVkJCR29MNlFJQ0FYOEdmQ0FBSUFFZ0FoQzdBU0VFSUFNckF3Z2hCaUFDS3dNSUlRY2dBeXNEQUNJRklBSXJBd0FpQ0VHZzB3SXJBd0FpQ2FFaUNtTkZCRUFnQmlBSElBbWhZMFVnQlNBSUlBbWdZMFVnQlNBS1pFVnljZ1JBSUFRUEN3c2dBaUFEUndSQUlBSWdCVGtEQUNBQ0lBWTVBd2dMSUFNZ0NEa0RBQ0FESUFjNUF3Z2dBaXNEQ0NFR0lBRXJBd2doQnlBQ0t3TUFJZ1VnQVNzREFDSUlJQW1oSWdwalJRUkFJQVJCQVdvaEF5QUdJQWNnQ2FGalJTQUZJQWtnQ0tCalJTQUZJQXBrUlhKeUJFQWdBdzhMQ3lBQklBSkhCRUFnQVNBRk9RTUFJQUVnQmprRENBc2dBaUFJT1FNQUlBSWdCemtEQ0NBQkt3TUlJUVlnQUNzRENDRUhJQUVyQXdBaUJTQUFLd01BSWdnZ0NhRWlDbU5GQkVBZ0JFRUNhaUVDSUFZZ0J5QUpvV05GSUFVZ0NTQUlvR05GSUFVZ0NtUkZjbklFUUNBQ0R3c0xJQUFnQVVjRVFDQUFJQVU1QXdBZ0FDQUdPUU1JQ3lBQklBZzVBd0FnQVNBSE9RTUlJQVJCQTJvTDJ3NENDbjhJZkFKQUFrQUNRQUpBQWtBRFFBSkFJQUVpQ2tGd2FpRUJJQXBCWUdvaEN5QUtJUVlDUUFKQUFrQUNRQU5BQWtBQ1FDQUtJQUJySWdOQkJIVWlCUTRHRFEwSENRb0xBQXNnQTBId0FFZ05DeUFGUVFKdElnaEJCSFFnQUdvaEJDQURRZkQ4QUVvRWZ5QUFJQVZCQkcwaUEwRUVkQ0FBYWlBRUlBTkJCSFFnQkdvZ0FSQ3hBZ1VnQUNBRUlBRVF1d0VMSVFjZ0FDSUZLd01JSVJFZ0FDc0RBQ0lOSUFRckF3QWlEa0dnMHdJckF3QWlENkVpRUdNRWZ5QUJJUUFnQndVZ0VTQUlRUVIwSUFWcUt3TUlJQStoSWhSalJTQU5JQTRnRDZBaUUyTkZJQTBnRUdSRmNuSUVmeUFGSUF0R0RRSWdBU0VESUFzaEFBTkFBa0FnQTBGNGFpc0RBQ0VTSUFBckF3QWlEaUFRWXcwQUlCSWdGR05GSUE0Z0UyTkZJQTRnRUdSRmNuSkZEUUFnQlNBQVFYQnFJZ2hHRFFRZ0FDRURJQWdoQUF3QkN3c2dCU0FPT1FNQUlBVWdFamtEQ0NBQUlBMDVBd0FnQTBGNGFpQVJPUU1BSUFkQkFXb0ZJQUVoQUNBSEN3c2hBeUFGUVJCcUlnY2dBRWtFUUFKQUlBY2hDQ0FESVFjRFFDQUVLd01BSWcwZ0Q2RWhFQ0FQSUEyZ0lSSWdCQ3NEQ0NBUG9TRVRJQWdoQXdOQUFrQWdBeXNEQ0NFVUlBTXJBd0FpRGlBUVkwVUVRQ0FVSUJOalJTQU9JQkpqUlNBT0lCQmtSWEp5RFFFTElBTkJFR29oQXd3QkN3c2dBeUVKSUFCQmVHb2lBeXNEQUNFUklBQkJjR29pQUNzREFDSU5JQkJqUlFSQUEwQWdFU0FUWTBVZ0RTQVNZMFVnRFNBUVpFVnljZ1JBSUFCQmVHb2lBeXNEQUNFUklBQkJjR29pQUNzREFDSU5JQkJqUlEwQkN3c0xBbjhnQUNFTUlBa2dBRXNFUUNBSklRQWdCeUVEREFNTElBQWdDVWNFUUNBSklBMDVBd0FnQ1NBUk9RTUlDeUFNQ3lBT09RTUFJQU1nRkRrREFDQUpRUkJxSVFnZ0FDQUVJQVFnQ1VZYklRUWdCMEVCYWlFSERBQUFDd0FMQlNBSElRQUxJQUFnQkVjRVFBSkFJQVFyQXdnaEVTQUFLd01JSVJBZ0JDc0RBQ0lOSUFBckF3QWlEaUFQb1NJU1kwVUVRQ0FSSUJBZ0Q2RmpSU0FOSUE4Z0RxQmpSU0FOSUJKa1JYSnlEUUVMSUFBZ0RUa0RBQ0FBSUJFNUF3Z2dCQ0FPT1FNQUlBUWdFRGtEQ0NBRFFRRnFJUU1MQ3lBRFJRUkFJQVVnQUJEdUF5RUVJQUJCRUdvaUF5QUdFTzRERFFNZ0JBUkFJQU1oQVNBR0lRTkJBaUVBREFZTEN5QUFJQVZySUFZZ0FHdE9EUU1nQlNBQUlBSVFzd0lnQUVFUWFpRUFEQUVMQ3lBRlFSQnFJUUFnQmtGNGFpSURLd01BSVJBZ0RTQUJLd01BSWc0Z0Q2RWlFbU5GQkVBZ0VTQVFJQStoWTBVZ0RTQVBJQTZnWTBVZ0RTQVNaRVZ5Y2dSQUlBQWdBVVlOREFOQUFrQWdBQ3NEQ0NFU0lBMGdBQ3NEQUNJVElBK2hJaFJqRFFBZ0VTQVNJQStoWTBVZ0RTQVBJQk9nWTBVZ0RTQVVaRVZ5Y2tVTkFDQUFRUkJxSWdBZ0FVY05BUXdPQ3dzZ0FDQU9PUU1BSUFBZ0VEa0RDQ0FCSUJNNUF3QWdBeUFTT1FNQUlBQkJFR29oQUFzTElBQWdBVVlOQ2dOQUlBVXJBd2doRWlBQVFRaHFJZ01yQXdBaEVTQUZLd01BSWc0Z0FDc0RBQ0lOSUEraEloQmpSUVJBQTBBZ0VpQVJJQStoWTBVZ0RpQVBJQTJnWTBVZ0RpQVFaRVZ5Y2dSQUlBQkJHR29pQXlzREFDRVJJQTRnQUVFUWFpSUFLd01BSWcwZ0Q2RWlFR05GRFFFTEN3c2dBQ0VISUFNaEJDQUJJUU1EUUFKQUlBTkJlR29yQXdBaEVDQU9JQU5CY0dvaUFTc0RBQ0lUSUEraEloUmpSUVJBSUJJZ0VDQVBvV05GSUE0Z0R5QVRvR05GSUE0Z0ZHUkZjbklOQVFzZ0FTRUREQUVMQ3lBQUlBRkpCRUFnQnlBVE9RTUFJQVFnRURrREFDQUJJQTA1QXdBZ0EwRjRhaUFST1FNQUlBQkJFR29oQUF3QkJTQUFJUUVnQmlFRFFRUWhBQXdFQ3dBQUN3QUxJQVVoQVNBR0lBQWdCQnNoQTBFQlFRSWdCQnNoQUF3QkN5QUFRUkJxSUFZZ0FoQ3pBaUFGSVFFZ0FDRUREQUVMQWtBZ0FFRUhjUTRGQUFnQUNBQUlDd3NnQVNFQUlBTWhBUXdCQ3dzZ0JrRjRhaUlDS3dNQUlSRWdBQ3NEQ0NFUUlBWkJjR29pQVNzREFDSU5JQUFyQXdBaUQwR2cwd0lyQXdBaURxRWlFbU5GQkVBZ0VTQVFJQTZoWTBVZ0RTQVBJQTZnWTBVZ0RTQVNaRVZ5Y2dSQUR3c0xJQUFnQVVjRVFDQUFJQTA1QXdBZ0FDQVJPUU1JQ3lBQklBODVBd0FnQWlBUU9RTUFEd3NnQUNBQVFSQnFJQVpCY0dvUXV3RWFEd3NnQUNBQVFSQnFJQUJCSUdvZ0JrRndhaEN5QWhvUEN5QUFJQUJCRUdvZ0FFRWdhaUFBUVRCcUlBWkJjR29Rc1FJYUR3c2dBQ0FBUVJCcUlBQkJJR29pQXhDN0FSb2dCaUFBUVRCcUlnRkdCRUFQQzBHZzB3SXJBd0FoRFNBRElRSURRQ0FCSWdNckF3Z2hFQ0FDS3dNSUlROENRQUpBSUFNckF3QWlFU0FDS3dNQUlnNGdEYUVpRW1NTkFDQVFJQThnRGFGalJTQVJJQTBnRHFCalJTQVJJQkprUlhKeVJRMEFEQUVMSUFNZ0Rqa0RBQ0FESUE4NUF3Z2dBQ0FDUmdSQUlBQWhBUVVDUUNBQ0lRRURmeUFCUVhocUt3TUFJUThnRVNBQlFYQnFJZ0lyQXdBaURpQU5vU0lTWTBVRVFDQVFJQThnRGFGalJTQVJJQTBnRHFCalJTQVJJQkprUlhKeURRSUxJQUVnRGprREFDQUJJQTg1QXdnZ0FDQUNSZ1IvSUFBRklBSWhBUXdCQ3dzaEFRc0xJQUVnRVRrREFDQUJJQkE1QXdnTElBTkJFR29pQVNBR1J3UkFJQU1oQWd3QkN3c0xDMWNCQW44akJDRUJJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVpEZ0FEWUNBQ0FBS0FJSUlnSkZCRUFnQVNRRUR3c2dBU0FBS0FJRU5nSUFJQUZCQkdvaUFDQUJLQUlBTmdJQUlBSWdBQkJYSUFFa0JBc0dBRUVhRUM4TENBQkJCaEFUUVFBTFZ3RURmeUFBS0FJRUlnZEJDSFVoQmlBSFFRRnhCRUFnQXlnQ0FDQUdhaWdDQUNFR0N5QUFLQUlBSWdBb0FnQW9BaFFoQ0NBQUlBRWdBaUFESUFacUlBUkJBaUFIUVFKeEd5QUZJQWhCQjNGQm9nbHFFUklBQzY0QkFRTi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FrRUlhaUVCSUFCQjZBQVFUd1IvSUFFZ0FFRUJFSFFnQVNnQ0FDQUJLQUlFUmdSL1FRRUZJQUJCM3dBUVQwRUJjd3NGSUFCQjlnQVFUd1IvSUFFZ0FFRUJFSFFnQVNnQ0FDQUJLQUlFUmdSL1FRRUZJQUJCM3dBUVR3Ui9JQUlnQUVFQkVIUWdBaWdDQUNBQ0tBSUVSZ1IvUVFFRklBQkIzd0FRVDBFQmN3c0ZRUUVMQ3dWQkFRc0xJUU1nQWlRRUlBTUxMd0VCZnlBQUlBRW9BZ0FpQWtFQmFpQUNJQUVvQWdRaUFVVWlBaHMyQWdBZ0FDQUJRUUZxSUFFZ0FoczJBZ1FMRkFBZ0FFRU1haUFCUVg5cUlBQkJJR29RM1FFTFpRRUJmeUFCSUFBb0FoeEJBV29nQUNnQ0dHc2lBV3NpQWtVRVFBOExJQUJCREdvZ0FoQ3dDU0FBS0FJUUlBRkJER3hxSWdFZ0FDZ0NGRThFUUE4TEEwQWdBU0FBS1FJZ053SUFJQUVnQUNnQ0tEWUNDQ0FCUVF4cUlnRWdBQ2dDRkVrTkFBc0xIUUFnQUVId0FtcEJFQkJNSWdBZ0FTZ0NBQ0FDS0FJQUVMOEpJQUFMbkFJQkJuOGpCQ0VFSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBRVFRaHFJUU1DZndKQUFrQWdBQ2dDQkNBQUtBSUFJZ0pyUVFCTEJIOGdBaXdBQUFWQkFBc2lBa0gvQVhGQjFRQkdCSDhnQUJESUNTRUJEQUVGSUFKQlQycEJHSFJCR0hWQi93RnhRUWxJQkVBZ0FCREFBU0VCREFJTElBUkIvcElDRUVRZ0F5QUVLUUlBTndJQUlBQWdBeEJTUlFSQUlBQWdBUkNGQkNFQkRBSUxJQUJCQ0dvaUFTSUNLQUlFSUFJb0FnQnJRUUoxSVFVQ1FBTkFJQU1nQUNJQ0VNQUJJZ1kyQWdBZ0JrVU5BU0FCSUFNUWFDQUFRY1VBRUU5RkRRQUxJQU1nQUNBRkVITWdBRUh3QW1vZ0F4REdDU0VCREFNTFFRQUxEQUlMSUFFRWZ5QUFJUUlNQVFWQkFBc01BUXNnQWlBQkVJWUNDeUVISUFRa0JDQUhDMDRCQW44akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBS0FJSUlBRVFWaUFDUWJTSEFoQkVJQUpCQ0dvaUF5QUNLUUlBTndJQUlBRWdBeEJISUFBb0Fnd2dBUkJXSUFJa0JBdUVBZ0VHZnlNRUlRSWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUpCR0dvaEF5QUNRUkJxSVFFZ0FrRUlhaUVFSUFBb0FnUWdBQ2dDQUNJRmEwRUFTd1IvSUFVc0FBQUZRUUFMUVJoMFFSaDFRVkJxUVFwSkJIOGdBQkNBQWdVQ2Z5QUJRZStIQWhCRUlBTWdBU2tDQURjQ0FDQUFJQU1RVWdSQUlBQVErQWtNQVFzZ0JFSHlod0lRUkNBRElBUXBBZ0EzQWdBZ0FDQURFRklhSUFNZ0FFRUFFSVVFSWdFMkFnQWdBUVIvSUFBb0FnUWdBQ2dDQUNJRWEwRUFTd1IvSUFRc0FBQUZRUUFMUWY4QmNVSEpBRVlFZnlBQ0lBQkJBQkNWQVNJQk5nSUFJQUVFZnlBQUlBTWdBaENVQVFWQkFBc0ZJQUVMQlVFQUN3c0xJUVlnQWlRRUlBWUxzUUVCQTM4akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDd0ovQWtBQ1FBSkFJQUFvQWdRZ0FDZ0NBQ0lCYTBFQVN3Ui9JQUVzQUFBRlFRQUxRUmgwUVJoMVFjUUFhdzRSQVFJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0FDQ3lBQ0lBQVF3d0VpQVRZQ0FDQUJCSDhnQUVHVUFXb2dBaEJvSUFFRlFRQUxEQUlMSUFJZ0FCQ0hBaUlCTmdJQUlBRUVmeUFBUVpRQmFpQUNFR2dnQVFWQkFBc01BUXNnQUJEZUFRc2hBeUFDSkFRZ0F3dG5BUUYvSUFFb0FnUWdBU2dDQUdzZ0FDZ0NCQ0FBS0FJQWEwc0VmMEVBQlFKL0lBRW9BZ0FoQWlBQktBSUVJUUVnQUNnQ0FDRUFBMzlCQVNBQklBSkdEUUVhSUFJc0FBQWdBQ3dBQUVZRWZ5QUNRUUZxSVFJZ0FFRUJhaUVBREFFRlFRQUxDd3NMQzdRQkFRSi9JQUZCQURZQ0FDQUFLQUlFSUFBb0FnQWlBbXRCQUVzRWZ5QUNMQUFBQlVFQUMwRlFha0VZZEVFWWRVSC9BWEZCQ1VvRWYwRUJCUU4vSUFBb0FnUWdBQ2dDQUNJQ2EwRUFTd1IvSUFJc0FBQUZRUUFMUVZCcVFSaDBRUmgxUWY4QmNVRUtTQVIvSUFFZ0EwRUtiRFlDQUNBQklBQW9BZ0FpQWlBQUtBSUVSZ1IvUVFBRklBQWdBa0VCYWpZQ0FDQUNMQUFBQzBFWWRFRVlkVUZRYWlBQktBSUFhaUlETmdJQURBRUZRUUFMQ3dzTE53QWdBRUdjaXdFMkFnQWdBRUVkT2dBRUlBQkJBVG9BQlNBQVFRRTZBQVlnQUVFQk9nQUhJQUJCakpJQk5nSUFJQUFnQVRZQ0NBdExBQ0FBUVp5TEFUWUNBQ0FBUVM4NkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVHMGtRRTJBZ0FnQUNBQktRSUFOd0lJSUFBZ0FqWUNFQ0FBSUFNcEFnQTNBaFFMOVFFQkFuOGdBQ2dDQkNJQ0lBQW9BZ2dpQTBrRWZ3TkFJQUlzQUF0QkFFZ0VRQ0FDS0FJQUVFTWdBQ2dDQ0NFREN5QUNRUXhxSWdJZ0Ewa05BQXNnQUNnQ0JBVWdBZ3NRUXlBQVFRQTJBZ3dnQUNBQlFYOXFOZ0lRSUFGQkFVZ0VRQ0FBUVFBMkFnZ2dBRUVBTmdJQUlBQkJBRFlDQkE4TElBQWdBVUVNYkJCS0lnSTJBZ1FnQWtVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUEwRUFOZ0lBSUFOQmZ6WUNCQ0FEUWFnNFFRQVFBUXNnQUNBQ05nSUFJQUFnQVVFTWJDQUNhaUlCTmdJSUlBRWdBazBFUUE4TElBSWhBUU5BSUFGQ0FEY0NBQ0FCUVFBMkFnZ2dBVUVNYWlJQklBQW9BZ2hKRFFBTEM4OEJBUU4vSXdRaEFpTUVRU0JxSkFRakJDTUZUZ1JBUVNBUUFBc2dBa0VJYWtIeGtBSVFSQ0FDUVJCcUlnRWdBaWtDQ0RjQ0FDQUFJQUVRVWdSL0lBQVEyd0VhSUFFZ0FFRUFFSFFnQUVIZkFCQlBCSDhnQUNBQkVQNERCVUVBQ3dVZ0FrSDBrQUlRUkNBQklBSXBBZ0EzQWdBZ0FDQUJFRklFZnlBQklBQkJBQkIwSUFFb0FnQWdBU2dDQkVZRWYwRUFCU0FBUWZBQUVFOEVmeUFBRU5zQkdpQUJJQUJCQUJCMElBQkIzd0FRVHdSL0lBQWdBUkQrQXdWQkFBc0ZRUUFMQ3dWQkFBc0xJUU1nQWlRRUlBTUxDd0FnQUVFSWFpQUJFSDBMTlFFQmZ5QUJLQUlFSVFNZ0FDQUJLQUlBSUFJZ0FTZ0NCQ0FCS0FJQWF5SUJRWDlxSUFFZ0Frc2JhallDQUNBQUlBTTJBZ1FMZ1FFQkEzOGpCQ0VDSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQ1FSQnFJZ1JCNHZrQkVFUWdBa0VZYWlJRElBUXBBZ0EzQWdBZ0FTQURFRWNnQUNnQ0NDQUJFRllnQWtFSWFpSUVRZDc1QVJCRUlBTWdCQ2tDQURjQ0FDQUJJQU1RUnlBQ0lBQXBBZ3czQXdBZ0F5QUNLUUlBTndJQUlBRWdBeEJISUFJa0JBc2JBQ0FBUWZBQ2FrRU1FRXdpQUNBQktBSUFRUUJIRUpVRUlBQUxrd2tCRm44akJDRUNJd1JCb0FGcUpBUWpCQ01GVGdSQVFhQUJFQUFMSUFKQmtBRnFJUUVnQWtHSUFXb2hBeUFDUVlBQmFpRUVJQUpCK0FCcUlRVWdBa0h3QUdvaEJpQUNRZWdBYWlFSElBSkI0QUJxSVFnZ0FrSFlBR29oQ1NBQ1FkQUFhaUVLSUFKQnlBQnFJUXNnQWtGQWF5RU1JQUpCT0dvaERTQUNRVEJxSVE0Z0FrRW9haUVQSUFKQklHb2hFQ0FDUVJocUlSRWdBa0VRYWlFU0lBSkJDR29oRXlBQVFjd0FFRThFZndKL0FrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFBb0FnUWdBQ2dDQUNJVWEwRUFTd1IvSUJRc0FBQUZRUUFMUVJoMFFSaDFRZFFBYXc0bUFCUVVGQlFVRkJRVUZCUVRGQVFDQXhFU0VCUUZDQWtVQ2dzT0R4UVVGQVlIRkJRQkRBMFVDMEVBREJRTElBQWdBQ2dDQUVFQmFqWUNBQ0FEUVlEOEFSQkVJQUVnQXlrQ0FEY0NBQ0FBSUFFUWVBd1RDeUFFUVlqOEFSQkVJQUVnQkNrQ0FEY0NBQ0FBSUFFUVVnUkFJQUZCQURZQ0FDQUFJQUVReWdJTUV3c2dCVUdNL0FFUVJDQUJJQVVwQWdBM0FnQkJBQ0FBSUFFUVVrVU5FaG9nQVVFQk5nSUFJQUFnQVJES0Fnd1NDeUFBSUFBb0FnQkJBV28yQWdBZ0JrSHk5QUVRUkNBQklBWXBBZ0EzQWdBZ0FDQUJFSGdNRVFzZ0FDQUFLQUlBUVFGcU5nSUFJQWRCOS9RQkVFUWdBU0FIS1FJQU53SUFJQUFnQVJCNERCQUxJQUFnQUNnQ0FFRUJhallDQUNBSVFZUDFBUkJFSUFFZ0NDa0NBRGNDQUNBQUlBRVFlQXdQQ3lBQUlBQW9BZ0JCQVdvMkFnQWdDVUdSOVFFUVJDQUJJQWtwQWdBM0FnQWdBQ0FCRUhnTURnc2dBQ0FBS0FJQVFRRnFOZ0lBSUFwQmwvVUJFRVFnQVNBS0tRSUFOd0lBSUFBZ0FSQjREQTBMSUFBZ0FDZ0NBRUVCYWpZQ0FDQUxRWVAvQWhCRUlBRWdDeWtDQURjQ0FDQUFJQUVRZUF3TUN5QUFJQUFvQWdCQkFXbzJBZ0FnREVHUS9BRVFSQ0FCSUF3cEFnQTNBZ0FnQUNBQkVIZ01Dd3NnQUNBQUtBSUFRUUZxTmdJQUlBMUJrdndCRUVRZ0FTQU5LUUlBTndJQUlBQWdBUkI0REFvTElBQWdBQ2dDQUVFQmFqWUNBQ0FPUVpUOEFSQkVJQUVnRGlrQ0FEY0NBQ0FBSUFFUWVBd0pDeUFBSUFBb0FnQkJBV28yQWdBZ0QwR1gvQUVRUkNBQklBOHBBZ0EzQWdBZ0FDQUJFSGdNQ0FzZ0FDQUFLQUlBUVFGcU5nSUFJQkJCbXZ3QkVFUWdBU0FRS1FJQU53SUFJQUFnQVJCNERBY0xJQUFnQUNnQ0FFRUJhallDQUNBUlFkVDFBUkJFSUFFZ0VTa0NBRGNDQUNBQUlBRVFlQXdHQ3lBQUlBQW9BZ0JCQVdvMkFnQWdFa0hkOVFFUVJDQUJJQklwQWdBM0FnQWdBQ0FCRUhnTUJRc2dBQ0FBS0FJQVFRRnFOZ0lBSUFBUW9BUU1CQXNnQUNBQUtBSUFRUUZxTmdJQUlBQVFud1FNQXdzZ0FDQUFLQUlBUVFGcU5nSUFJQUFRbmdRTUFnc2dFMEd3OUFFUVJDQUJJQk1wQWdBM0FnQkJBQ0FBSUFFUVVrVU5BUm9nQUJDbkFTSUJCRUFnQVNBQVFjVUFFRThOQWhvTFFRQU1BUXNnQVNBQUVGMGlBellDQUNBREJIOGdBaUFBUVFBUWRBSi9JQUlvQWdBZ0FpZ0NCRVloRlNBQVFjVUFFRThoQkNBVkN3Ui9JQU5CQUNBRUd3VWdCQVIvSUFCQjhBSnFJQUVnQWhDZEJBVkJBQXNMQlVFQUN3c0ZRUUFMSVJZZ0FpUUVJQllMdmhZQkJYOGpCQ0VGSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBRlFRaHFJUVFnQUNBQklBQW9BdEFIY2pZQzBBY2dBVUVCY1FSQUlBQW9BZ1FpQXlnQ0RFRi9haUVDSUFCQk1Hb2lCa1FBQUFBQUFBQUFBRGtEQUNBQVFSeHFJQUlnQmhDRUFTQUFLQUlZSWdJRVFDQUZJQUFvQWhRMkFnQWdCQ0FGS0FJQU5nSUFJQUlnQkJCTkN5QUFJQU0yQWhnZ0FDQURJQUJCRUdvUVdUWUNGQ0FBS0FJRUlnTW9BZ3hCZjJvaEFpQUFRZGdBYWlJR1JBQUFBQUFBQUFBQU9RTUFJQUJCeEFCcUlBSWdCaENFQVNBQVFVQnJJZ0lvQWdBaUJnUkFJQVVnQUNnQ1BEWUNBQ0FFSUFVb0FnQTJBZ0FnQmlBRUVFMExJQUlnQXpZQ0FDQUFJQU1nQUVFNGFoQlpOZ0k4SUFBb0FnUWlBeWdDREVGL2FpRUNJQUJCb0FKcUlnWkVBQUFBQUFBQU5FQTVBd0FnQUVHTUFtb2dBaUFHRUlRQklBQW9Bb2dDSWdJRVFDQUZJQUFvQW9RQ05nSUFJQVFnQlNnQ0FEWUNBQ0FDSUFRUVRRc2dBQ0FETmdLSUFpQUFJQU1nQUVHQUFtb1FXVFlDaEFJZ0FDZ0NCQ0lES0FJTVFYOXFJUUlnQUVISUFtb2lCa1FBQUFBQUFBQTBRRGtEQUNBQVFiUUNhaUFDSUFZUWhBRWdBQ2dDc0FJaUFnUkFJQVVnQUNnQ3JBSTJBZ0FnQkNBRktBSUFOZ0lBSUFJZ0JCQk5DeUFBSUFNMkFyQUNJQUFnQXlBQVFhZ0NhaEJaTmdLc0FpQUFLQUlFSWdNb0FneEJmMm9oQWlBQVFmQUNhaUlHUVFBMkFnQWdBRUhjQW1vZ0FpQUdFSmNCSUFBb0F0Z0NJZ0lFUUNBRklBQW9BdFFDTmdJQUlBUWdCU2dDQURZQ0FDQUNJQVFRVFFzZ0FDQUROZ0xZQWlBQUlBTWdBRUhRQW1vUVdUWUMxQUlMSUFGQmdJQUNjUVJBSUFBb0FnUWlBeWdDREVGL2FpRUNJQUJCZ0FGcUlnWkVBQUFBQUFBQUFBQTVBd0FnQUVIc0FHb2dBaUFHRUlRQklBQW9BbWdpQWdSQUlBVWdBQ2dDWkRZQ0FDQUVJQVVvQWdBMkFnQWdBaUFFRUUwTElBQWdBellDYUNBQUlBTWdBRUhnQUdvUVdUWUNaQ0FCSUFBb0F0QUhja0dBZ0FSeEJFQWdBQ2dDQkNJREtBSU1RWDlxSVFJZ0FFSDRBV29pQmtRQUFBQUFBQUFBQURrREFDQUFRZVFCYWlBQ0lBWVFoQUVnQUNnQzRBRWlBZ1JBSUFVZ0FDZ0MzQUUyQWdBZ0JDQUZLQUlBTmdJQUlBSWdCQkJOQ3lBQUlBTTJBdUFCSUFBZ0F5QUFRZGdCYWhCWk5nTGNBUXNMSUFGQmdCQnhCRUFnQUNnQ0JDSUNLQUlNUVg5cUlRWWdBRUhBQTJvaUEwSFEyQUlwQWdBM0FnQWdBMEhZMkFJdUFRQTdBUWdnQTBIYTJBSXNBQUE2QUFvZ0FFR3NBMm9nQmlBREVOMEJJQUFvQXFnRElnTUVRQ0FGSUFBb0FxUUROZ0lBSUFRZ0JTZ0NBRFlDQUNBRElBUVFUUXNnQUNBQ05nS29BeUFBSUFJZ0FFR2dBMm9RV1RZQ3BBTWdBQ2dDQkNJREtBSU1RWDlxSVFZZ0FFSHNBMm9pQWtIYzJBSXBBZ0EzQWdBZ0FrSGsyQUlvQWdBMkFnZ2dBRUhZQTJvZ0JpQUNFTjBCSUFBb0F0UURJZ0lFUUNBRklBQW9BdEFETmdJQUlBUWdCU2dDQURZQ0FDQUNJQVFRVFFzZ0FDQUROZ0xVQXlBQUlBTWdBRUhNQTJvUVdUWUMwQU1MSUFGQkFuRUVRQ0FBS0FJRUlRTWdCRUVBTmdJRUlBUkJBRFlDQ0NBRVFRQTJBZ3dnQkVINDRBQTJBZ0FnQUVHUUJXb2dBeUFFRUtJS0lBUkI1T0FBTmdJQUlBUW9BZ1FpQXdSQVFSZ2dBeUFFS0FJSUVFZ2dCRUVBTmdJSUlBUkJBRFlDQkFzTElBRkJnQWh4QkVBZ0FDZ0NCQ0lDS0FJUVFYOXFJUVlnQUVHd0Jtb2lBMEhvMkFJcEFnQTNBZ0FnQTBIdzJBSXVBUUE3QVFnZ0EwSHkyQUlzQUFBNkFBb2dBRUdjQm1vZ0JpQURFTjBCSUFBb0FwZ0dJZ01FUUNBRklBQW9BcFFHTmdJQUlBUWdCU2dDQURZQ0FDQURJQVFRVndzZ0FDQUNOZ0tZQmlBQUlBSWdBRUdRQm1vUWJEWUNsQVlMSUFGQmdJQUJjUVJBSUFBb0FnUWlBeWdDREVGL2FpRUNJQUJCNkFScUlnWkJBRFlDQUNBQVFkUUVhaUFDSUFZUWx3RWdBQ2dDMEFRaUFnUkFJQVVnQUNnQ3pBUTJBZ0FnQkNBRktBSUFOZ0lBSUFJZ0JCQk5DeUFBSUFNMkF0QUVJQUFnQXlBQVFjZ0VhaEJaTmdMTUJBc2dBVUVFY1FSQUlBQW9BZ1FpQXlnQ0VFRi9haUVDSUFCQjNBWnFJZ1pCQVRZQ0FDQUFRY2dHYWlBQ0lBWVFsd0VnQUNnQ3hBWWlBZ1JBSUFVZ0FDZ0N3QVkyQWdBZ0JDQUZLQUlBTmdJQUlBSWdCQkJYQ3lBQUlBTTJBc1FHSUFBZ0F5QUFRYndHYWhCc05nTEFCZ3NnQVVFSWNRUkFJQUFvQWdRaUF5Z0NFRUYvYWlFQ0lBQkJnQWRxSWdaRUFBQUFBQUFBOEQ4NUF3QWdBRUhzQm1vZ0FpQUdFSVFCSUFBb0F1Z0dJZ0lFUUNBRklBQW9BdVFHTmdJQUlBUWdCU2dDQURZQ0FDQUNJQVFRVndzZ0FDQUROZ0xvQmlBQUlBTWdBRUhnQm1vUWJEWUM1QVlMSUFGQklIRUVRQ0FBUVlBRGFpQUFLQUlFSWdNb0Fnd1F4UUlnQUNnQy9BSWlBZ1JBSUFVZ0FDZ0MrQUkyQWdBZ0JDQUZLQUlBTmdJQUlBSWdCQkJOQ3lBQUlBTTJBdndDSUFBZ0F5QUFRZlFDYWhCWk5nTDRBZ3NnQVVHQWdBUnhCRUFnQUNnQ0JDSURLQUlNUVg5cUlRSWdBRUdvQVdvaUJrUUFBQUFBQUFBQUFEa0RBQ0FBUVpRQmFpQUNJQVlRaEFFZ0FDZ0NrQUVpQWdSQUlBVWdBQ2dDakFFMkFnQWdCQ0FGS0FJQU5nSUFJQUlnQkJCTkN5QUFJQU0yQXBBQklBQWdBeUFBUVlnQmFoQlpOZ0tNQVNBQUtBSUVJZ01vQWd4QmYyb2hBaUFBUWRBQmFpSUdSQUFBQUFBQUFBQUFPUU1BSUFCQnZBRnFJQUlnQmhDRUFTQUFLQUs0QVNJQ0JFQWdCU0FBS0FLMEFUWUNBQ0FFSUFVb0FnQTJBZ0FnQWlBRUVFMExJQUFnQXpZQ3VBRWdBQ0FESUFCQnNBRnFFRmsyQXJRQklBRWdBQ2dDMEFkeVFZQ0FBbkVFUUNBQUtBSUVJZ01vQWd4QmYyb2hBaUFBUWZnQmFpSUdSQUFBQUFBQUFBQUFPUU1BSUFCQjVBRnFJQUlnQmhDRUFTQUFLQUxnQVNJQ0JFQWdCU0FBS0FMY0FUWUNBQ0FFSUFVb0FnQTJBZ0FnQWlBRUVFMExJQUFnQXpZQzRBRWdBQ0FESUFCQjJBRnFFRmsyQXR3QkN3c2dBVUVRY1FSQUlBQkJ6QVZxSUFBb0FnUWlBeWdDRUJERkFpQUFLQUxJQlNJQ0JFQWdCU0FBS0FMRUJUWUNBQ0FFSUFVb0FnQTJBZ0FnQWlBRUVGY0xJQUFnQXpZQ3lBVWdBQ0FESUFCQndBVnFFR3cyQXNRRkN5QUJRY0FBY1FSQUlBQW9BZ1FpQXlnQ0VFRi9haUVDSUFCQnFBZHFJZ1pCQURZQ0FDQUFRWlFIYWlBQ0lBWVFsd0VnQUNnQ2tBY2lBZ1JBSUFVZ0FDZ0NqQWMyQWdBZ0JDQUZLQUlBTmdJQUlBSWdCQkJYQ3lBQUlBTTJBcEFISUFBZ0F5QUFRWWdIYWhCc05nS01Cd3NnQVVHQUFYRUVRQ0FBS0FJRUlnTW9BZ3hCZjJvaEFpQUFRWXdGYWlJR1FRQTJBZ0FnQUVINEJHb2dBaUFHRUpjQklBQW9BdlFFSWdJRVFDQUZJQUFvQXZBRU5nSUFJQVFnQlNnQ0FEWUNBQ0FDSUFRUVRRc2dBQ0FETmdMMEJDQUFJQU1nQUVIc0JHb1FXVFlDOEFRTElBRkJnQUp4QkVBZ0FDZ0NCQ0lES0FJTVFYOXFJUUlnQUVIRUJHb2lCa0YvTmdJQUlBQkJzQVJxSUFJZ0JoQ1hBU0FBS0FLc0JDSUNCRUFnQlNBQUtBS29CRFlDQUNBRUlBVW9BZ0EyQWdBZ0FpQUVFRTBMSUFBZ0F6WUNyQVFnQUNBRElBQkJwQVJxRUZrMkFxZ0VDeUFCUVlBRWNRUkFJQUFvQWdRaUF5Z0NFRUYvYWlFQ0lBQkJqQVpxSWdaQkFUWUNBQ0FBUWZnRmFpQUNJQVlRbHdFZ0FDZ0M5QVVpQWdSQUlBVWdBQ2dDOEFVMkFnQWdCQ0FGS0FJQU5nSUFJQUlnQkJCWEN5QUFJQU0yQXZRRklBQWdBeUFBUWV3RmFoQnNOZ0x3QlFzZ0FVR0FJSEVFUUNBQVFZUUVhaUFBS0FJRUlnTW9BZ3dReFFJZ0FDZ0NnQVFpQWdSQUlBVWdBQ2dDL0FNMkFnQWdCQ0FGS0FJQU5nSUFJQUlnQkJCTkN5QUFJQU0yQW9BRUlBQWdBeUFBUWZnRGFoQlpOZ0w4QXdzZ0FVR0F3QUJ4UlFSQUlBVWtCQThMSUFBb0FnUWlBU2dDRUVGL2FpRURJQUJCekFkcUlnSkJBRFlDQUNBQVFiZ0hhaUFESUFJUWx3RWdBQ2dDdEFjaUF3UkFJQVVnQUNnQ3NBYzJBZ0FnQkNBRktBSUFOZ0lBSUFNZ0JCQlhDeUFBSUFFMkFyUUhJQUFnQVNBQVFhd0hhaEJzTmdLd0J5QUZKQVFMT2dFQmZ5QUJRZkFDYWlBRElBSnJJZ0ZCQW5VaUJFRUNkQkJNSVFNZ0FRUkFJQU1nQWlBQkVMNEJHZ3NnQUNBRE5nSUFJQUFnQkRZQ0JBdFdBUU4vSXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBVUVJYWlFQ0lBQW9BZ2dpQUMwQUJFRUhSZ1IvSUFJZ0FDa0NDRGNDQUNBQlFadjZBUkJFSUFJZ0FSQ0VBZ1ZCQUFzaEF5QUJKQVFnQXd0a0FRSi9JQUFnQVNnQ0RDSUVOZ0lBSUFBZ0FTZ0NDQ0lCTmdJRUEwQWdBU0FDSUFFb0FnQW9BZ3hCUDNGQmlnRnFFUU1BSWdNdEFBUkJERVlFUUNBQUlBTW9BZ2dpQVRZQ0JDQUFJQU1vQWd3aUF5QUVJQU1nQkVnYklnUTJBZ0FNQVFzTEN3d0FJQUFvQWdnZ0FSRENBUXRCQUNBQVFaeUxBVFlDQUNBQVFRVTZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFSDBpd0UyQWdBZ0FDQUJOZ0lJSUFBZ0Fpa0NBRGNDREF2a0FRRUVmeUFBS0FJRUlBQW9BZ0FpQW10QkFFc0VmeUFDTEFBQUJVRUFDeUlDUVJoMFFSaDFRUzlLQkg4Z0FrRVlkRUVZZFVFNlNBUi9RUUVGSUFKQnYzOXFRUmgwUVJoMVFmOEJjVUVhU0FzRWYwRUFJUUlEUUFKQUlBQW9BZ1FnQUNnQ0FDSURhMEVBU3dSL0lBTXNBQUFGUVFBTElnTkJHSFJCR0hWQkwwd05BQUovSUFOQkdIUkJHSFZCT2tnRWYwRlFCU0FEUWI5L2FrRVlkRUVZZFVIL0FYRkJHazROQWtGSkN5RUZJQUFnQUNnQ0FFRUJhallDQUNBRkN5QUNRU1JzYWlBRFFSaDBRUmgxYWlFQ0RBRUxDeUFCSUFJMkFnQkJBQVZCQVFzRlFRRUxDeDBBSUFCQjhBSnFRUlFRVENJQUlBRW9BZ0FnQWlnQ0FCQzFCQ0FBQytvQkFRVi9Jd1FoQVNNRVFUQnFKQVFqQkNNRlRnUkFRVEFRQUFzZ0FVRVFhaUVDSUFGQkNHb2hCQ0FCUVFBMkFnQWdBVUVBTmdJRUlBRkJHR3BCNXBFQ0VFUWdBVUVnYWlJRElBRXBBaGczQWdBZ0FDQURFRklFUUNBQlFlbVJBaEJFQlFKQUlBSkI4SkVDRUVRZ0F5QUNLUUlBTndJQUlBQWdBeEJTQkVBZ0FVSHprUUlRUkF3QkN5QUVRZm1SQWhCRUlBTWdCQ2tDQURjQ0FDQUFJQU1RVWdSQUlBRkIvSkVDRUVRTEN3c2dBeUFBUVFBUW9BRWlBallDQUNBQ0JIOGdBU2dDQUNBQktBSUVSd1IvSUFCQjhBSnFJQUVnQXhEUUNRVWdBZ3NGUVFBTElRVWdBU1FFSUFVTEdBQWdBRUh3QW1wQkRCQk1JZ0FnQVNnQ0FCRERBaUFBQ3cwQUlBQkI4QUpxSUFFUXF3a0xEd0FnQUVId0Ftb2dBU0FDRUpJSkN6QUJBWDhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUU54UVlBRGFoRVFBRUdJOUFFZ0FSREdBUXRKQVFGL0lBRWdBQ2dDQkdvaUFTQUFLQUlJSWdKUEJFQWdBQ0FCSUFKQkFYUWlBaUFDSUFGSkd5SUJOZ0lJSUFBZ0FDZ0NBQ0FCRUlvQklnQTJBZ0FnQUVVRVFCREZBUXNMQzgwQkFRTi9RZS8vLy84RElBRnJJQUpKQkVBUUF3c2dBQ3dBQzBFQVNBUi9JQUFvQWdBRklBQUxJUVVnQVVIbi8vLy9BVWtFUUVFQ0lBRkJBWFFpQnlBQklBSnFJZ0lnQWlBSFNSc2lBa0VFYWtGOGNTQUNRUUpKR3lJQ1FmLy8vLzhEU3dSQUVBTUZJQUloQmdzRlFlLy8vLzhESVFZTElBWkJBblFRWHlFQ0lBUUVRQ0FDSUFVZ0JCQ2JBUXNnQXlBRWF5SURCRUFnQWlBRVFRSjBhaUFGSUFSQkFuUnFJQU1RbXdFTElBRkJBVWNFUUNBRkVFTUxJQUFnQWpZQ0FDQUFJQVpCZ0lDQWdIaHlOZ0lJQzdBQ0FRUi9Jd1FoQ0NNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUF0Qjd2Ly8vd01nQVdzZ0Fra0VRQkFEQ3lBQUxBQUxRUUJJQkg4Z0FDZ0NBQVVnQUFzaENTQUJRZWYvLy84QlNRUkFRUUlnQVVFQmRDSUxJQUVnQW1vaUFpQUNJQXRKR3lJQ1FRUnFRWHh4SUFKQkFra2JJZ0pCLy8vLy93TkxCRUFRQXdVZ0FpRUtDd1ZCNy8vLy93TWhDZ3NnQ2tFQ2RCQmZJUUlnQkFSQUlBSWdDU0FFRUpzQkN5QUdCRUFnQkVFQ2RDQUNhaUFISUFZUW13RUxJQU1nQldzaUF5QUVheUlIQkVBZ0JFRUNkQ0FDYWlBR1FRSjBhaUFFUVFKMElBbHFJQVZCQW5ScUlBY1Ftd0VMSUFGQkFVY0VRQ0FKRUVNTElBQWdBallDQUNBQUlBcEJnSUNBZ0hoeU5nSUlJQUFnQXlBR2FpSUFOZ0lFSUFoQkFEWUNBQ0FBUVFKMElBSnFJQWdvQWdBMkFnQWdDQ1FFQzZBQkFRTi9Jd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FVSHYvLy8vQTBzRVFCQURDeUFCUVFKSkJFQWdBQ0FCT2dBTElBQWhCQVVnQVVFRWFrRjhjU0lGUWYvLy8vOERTd1JBRUFNRklBQWdCVUVDZEJCZklnUTJBZ0FnQUNBRlFZQ0FnSUI0Y2pZQ0NDQUFJQUUyQWdRTEN5QUJCRUFnQkNBQ0lBRVE4Z1lMSUFOQkFEWUNBQ0FCUVFKMElBUnFJQU1vQWdBMkFnQWdBeVFFQy80QkFRTi9Jd1FoQ0NNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUF0QmJpQUJheUFDU1FSQUVBTUxJQUFzQUF0QkFFZ0VmeUFBS0FJQUJTQUFDeUVKSUFGQjUvLy8vd2RKQkg5QkN5QUJRUUYwSWdvZ0FTQUNhaUlDSUFJZ0Nra2JJZ0pCRUdwQmNIRWdBa0VMU1JzRlFXOExJZ29RWHlFQ0lBUUVRQ0FDSUFrZ0JCQ2NBUXNnQmdSQUlBSWdCR29nQnlBR0VKd0JDeUFESUFWcklnTWdCR3NpQndSQUlBWWdBaUFFYW1vZ0JTQUVJQWxxYWlBSEVKd0JDeUFCUVFwSEJFQWdDUkJEQ3lBQUlBSTJBZ0FnQUNBS1FZQ0FnSUI0Y2pZQ0NDQUFJQU1nQm1vaUFEWUNCQ0FJUVFBNkFBQWdBQ0FDYWlBSUxBQUFPZ0FBSUFna0JBc1VBQ0FCQkVBZ0FDQUNRZjhCY1NBQkVHSWFDd3N6QVFGL1FiVFhBaWdDQUNFQkEwQWdBVUVBTmdJQVFiVFhBa0cwMXdJb0FnQkJCR29pQVRZQ0FDQUFRWDlxSWdBTkFBc0xFZ0FnQUVHY2h3RTJBZ0FnQUVFUWFoQk9DeElBSUFCQjlJWUJOZ0lBSUFCQkRHb1FUZ3NqQVFGL0lBQkJ3SVlCTmdJQUlBQW9BZ2dpQVFSQUlBQXNBQXdFUUNBQkVFTUxDd3Q5QVFSL0lBQkJySVlCTmdJQUlBQkJDR29oQXdOQUlBSWdBQ2dDRENBREtBSUFJZ0ZyUVFKMVNRUkFJQUpCQW5RZ0FXb29BZ0FpQVFSQUlBRWdBU2dDQkNJRVFYOXFOZ0lFSUFSRkJFQWdBU0FCS0FJQUtBSUlRZjhEY1VHRUEyb1JBUUFMQ3lBQ1FRRnFJUUlNQVFzTElBQkJrQUZxRUU0Z0F4Q1dCUXNlQUNBQVFmeUZBVFlDQUNBQUtBSUlFRjVIQkVBZ0FDZ0NDQkN1QXdzTEVnQWdCQ0FDTmdJQUlBY2dCVFlDQUVFREM0c0JBUUovSUFBb0FnUVFReUFBUVFBMkFnd2dBQ0FCTmdJUUlBRkJBRWdFUUNBQVFRQTJBZ2dnQUVFQU5nSUFJQUJCQURZQ0JBOExJQUFnQVVFQmFpSURRUUowRUVvaUFUWUNCQ0FCUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJQ1FRQTJBZ0FnQWtGL05nSUVJQUpCcURoQkFCQUJDeUFBSUFFMkFnQWdBQ0FEUVFKMElBRnFOZ0lJQ3dRQVFRUUxGUUFnQVNnQ0FDQUJJQUVzQUF0QkFFZ2JHa0YvQzRFSkFRdC9JQUlnQURZQ0FDQU5RUVJxSVJjZ0EwR0FCSEZGSVJnZ0RrRUFTaUVaQTBBZ0ZrRUVSd1JBQWtBQ1FBSkFBa0FDUUFKQUlBZ2dGbW9zQUFBT0JRQUJBd0lFQlFzZ0FTQUNLQUlBTmdJQURBUUxJQUVnQWlnQ0FEWUNBQ0FHS0FJQUtBSXNJUThnQmtFZ0lBOUJQM0ZCaWdGcUVRTUFJUkFnQWlBQ0tBSUFJZzlCQkdvMkFnQWdEeUFRTmdJQURBTUxJQTBzQUFzaUQwRUFTQ0VRSUJjb0FnQWdEMEgvQVhFZ0VCc0VRQ0FOS0FJQUlBMGdFQnNvQWdBaEVDQUNJQUlvQWdBaUQwRUVhallDQUNBUElCQTJBZ0FMREFJTElBd3NBQXNpRDBFQVNDRVFJQXdvQWdRZ0QwSC9BWEVnRUJzaUVrVWdHSEpGQkVBZ0RDZ0NBQ0FNSUJBYklnOGdFa0VDZEdvaEVTQUNLQUlBSWhBaEV3TkFJQThnRVVjRVFDQVRJQThvQWdBMkFnQWdEMEVFYWlFUElCTkJCR29oRXd3QkN3c2dBaUFTUVFKMElCQnFOZ0lBQ3d3QkN5QUNLQUlBSVJVZ0JFRUVhaUFFSUFjYkloTWhCQU5BQWtBZ0JDQUZUdzBBSUFZb0FnQW9BZ3doRHlBR1FZQVFJQVFvQWdBZ0QwRWZjVUhLQVdvUkJBQkZEUUFnQkVFRWFpRUVEQUVMQ3lBWkJFQWdEaUVQQTBBZ0QwRUFTaUlRSUFRZ0UwdHhCRUFnQkVGOGFpSUVLQUlBSVJFZ0FpQUNLQUlBSWhCQkJHbzJBZ0FnRUNBUk5nSUFJQTlCZjJvaER3d0JDd3NnRUFSL0lBWW9BZ0FvQWl3aEVDQUdRVEFnRUVFL2NVR0tBV29SQXdBRlFRQUxJUklnRHlFUklBSW9BZ0FoRUFOQUlCQkJCR29oRHlBUlFRQktCRUFnRUNBU05nSUFJQkZCZjJvaEVTQVBJUkFNQVFzTElBSWdEellDQUNBUUlBazJBZ0FMSUFRZ0UwWUVRQ0FHS0FJQUtBSXNJUVFnQmtFd0lBUkJQM0ZCaWdGcUVRTUFJUkFnQWlBQ0tBSUFJZzlCQkdvaUJEWUNBQ0FQSUJBMkFnQUZJQXNzQUFzaUQwRUFTQ0VRSUFzb0FnUWdEMEgvQVhFZ0VCc0VmeUFMS0FJQUlBc2dFQnNzQUFBRlFYOExJUThnQkNFUlFRQWhCRUVBSVJJRFFDQVJJQk5IQkVBZ0FpZ0NBQ0VVSUE4Z0VrWUVRQ0FDSUJSQkJHb2lFRFlDQUNBVUlBbzJBZ0FnQ3l3QUN5SVBRUUJJSVJRZ0JFRUJhaUlFSUFzb0FnUWdEMEgvQVhFZ0ZCdEpCRUJCZnlBTEtBSUFJQXNnRkJzZ0JHb3NBQUFpRHlBUFFmOEFSaHNoRHdVZ0VpRVBDMEVBSVJJRklCUWhFQXNnRVVGOGFpSVJLQUlBSVJRZ0FpQVFRUVJxTmdJQUlCQWdGRFlDQUNBU1FRRnFJUklNQVFzTElBSW9BZ0FoQkFzZ0JDQVZSZ1IvSUJNRkEwQWdGU0FFUVh4cUlnUkpCRUFnRlNnQ0FDRVBJQlVnQkNnQ0FEWUNBQ0FFSUE4MkFnQWdGVUVFYWlFVkRBRUZJQk1oQkF3REN3QUFDd0FMSVFRTElCWkJBV29oRmd3QkN3c2dEU3dBQ3lJRVFRQklJUWNnRnlnQ0FDQUVRZjhCY1NBSEd5SUdRUUZMQkVBZ0RTZ0NBQ0lGUVFScUlCY2dCeHNoQkNBR1FRSjBJQVVnRFNBSEcyb2lCeUFFYXlFR0lBSW9BZ0FpQlNFSUEwQWdCQ0FIUndSQUlBZ2dCQ2dDQURZQ0FDQUVRUVJxSVFRZ0NFRUVhaUVJREFFTEN5QUNJQVpCQW5aQkFuUWdCV28yQWdBTEFrQUNRQUpBSUFOQnNBRnhRUmgwUVJoMVFSQnJEaEVDQVFFQkFRRUJBUUVCQVFFQkFRRUJBQUVMSUFFZ0FpZ0NBRFlDQUF3QkN5QUJJQUEyQWdBTEM0SUdBUVYvSXdRaENpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dDa0VNYWlFTElBb2dBQVIvSUFKQm9QMENFRk1GSUFKQm1QMENFRk1MSWdBZ0FRUi9JQXNnQUNBQUtBSUFLQUlzUWY4QmNVR09CMm9SQUFBZ0F5QUxLQUlBTmdBQUlBQW9BZ0FvQWlBRklBc2dBQ0FBS0FJQUtBSW9RZjhCY1VHT0Iyb1JBQUFnQXlBTEtBSUFOZ0FBSUFBb0FnQW9BaHdMUWY4QmNVR09CMm9SQUFBZ0NDd0FDMEVBU0FSQUFuOGdDQ2dDQUNFTUlBdEJBRFlDQUNBTUN5QUxLQUlBTmdJQUlBaEJBRFlDQkNBSUxBQUxRUUJJQkVBZ0NDZ0NDQm9nQ0NnQ0FCQkRJQWhCQURZQ0NBc0ZJQXRCQURZQ0FDQUlJQXNvQWdBMkFnQWdDRUVBT2dBTEN5QUlJQW9wQWdBM0FnQWdDQ0FLS0FJSU5nSUlRUUFoQVFOQUlBRkJBMGNFUUNBQlFRSjBJQXBxUVFBMkFnQWdBVUVCYWlFQkRBRUxDeUFLRUU0Z0JDQUFJQUFvQWdBb0FneEIvd0J4UVFScUVRZ0FOZ0lBSUFVZ0FDQUFLQUlBS0FJUVFmOEFjVUVFYWhFSUFEWUNBQ0FLSUFBZ0FDZ0NBQ2dDRkVIL0FYRkJqZ2RxRVFBQUlBWXNBQXRCQUVnRVFBSi9JQVlvQWdBaERTQUxRUUE2QUFBZ0RRc2dDeXdBQURvQUFDQUdRUUEyQWdRZ0Jpd0FDMEVBU0FSQUlBWW9BZ2dhSUFZb0FnQVFReUFHUVFBMkFnZ0xCU0FMUVFBNkFBQWdCaUFMTEFBQU9nQUFJQVpCQURvQUN3c2dCaUFLS1FJQU53SUFJQVlnQ2lnQ0NEWUNDRUVBSVFFRFFDQUJRUU5IQkVBZ0FVRUNkQ0FLYWtFQU5nSUFJQUZCQVdvaEFRd0JDd3NnQ2hCT0lBb2dBQ0FBS0FJQUtBSVlRZjhCY1VHT0Iyb1JBQUFnQnl3QUMwRUFTQVJBQW44Z0J5Z0NBQ0VPSUF0QkFEWUNBQ0FPQ3lBTEtBSUFOZ0lBSUFkQkFEWUNCQ0FITEFBTFFRQklCRUFnQnlnQ0NCb2dCeWdDQUJCRElBZEJBRFlDQ0FzRklBdEJBRFlDQUNBSElBc29BZ0EyQWdBZ0IwRUFPZ0FMQ3lBSElBb3BBZ0EzQWdBZ0J5QUtLQUlJTmdJSVFRQWhBUU5BSUFGQkEwY0VRQ0FCUVFKMElBcHFRUUEyQWdBZ0FVRUJhaUVCREFFTEN5QUtFRTRnQ1NBQUlBQW9BZ0FvQWlSQi93QnhRUVJxRVFnQU5nSUFJQW9rQkF1NkNBRUtmeUFDSUFBMkFnQWdBMEdBQkhGRklSWWdEa0VBU2lFWEEwQWdGRUVFUndSQUFrQUNRQUpBQWtBQ1FBSkFJQWdnRkdvc0FBQU9CUUFCQXdJRUJRc2dBU0FDS0FJQU5nSUFEQVFMSUFFZ0FpZ0NBRFlDQUNBR0tBSUFLQUljSVE4Z0JrRWdJQTlCUDNGQmlnRnFFUU1BSVJBZ0FpQUNLQUlBSWc5QkFXbzJBZ0FnRHlBUU9nQUFEQU1MSUEwc0FBc2lEMEVBU0NFUUlBMG9BZ1FnRDBIL0FYRWdFQnNFUUNBTktBSUFJQTBnRUJzc0FBQWhFQ0FDSUFJb0FnQWlEMEVCYWpZQ0FDQVBJQkE2QUFBTERBSUxJQXdzQUFzaUQwRUFTQ0VSSUF3b0FnUWdEMEgvQVhFZ0VSc2lFRVVnRm5KRkJFQWdEQ2dDQUNBTUlCRWJJZzhnRUdvaEVDQUNLQUlBSVJFRFFDQVBJQkJIQkVBZ0VTQVBMQUFBT2dBQUlCRkJBV29oRVNBUFFRRnFJUThNQVFzTElBSWdFVFlDQUFzTUFRc2dBaWdDQUNFU0lBUkJBV29nQkNBSEd5SVRJUVFEUUFKQUlBUWdCVThOQUNBRUxBQUFJZzlCZjB3TkFDQUdLQUlJSUE5QkFYUnFMZ0VBUVlBUWNVVU5BQ0FFUVFGcUlRUU1BUXNMSUJjRVFDQU9JUThEUUNBUFFRQktJaEFnQkNBVFMzRUVRQ0FFUVg5cUlnUXNBQUFoRVNBQ0lBSW9BZ0FpRUVFQmFqWUNBQ0FRSUJFNkFBQWdEMEYvYWlFUERBRUxDeUFRQkg4Z0JpZ0NBQ2dDSENFUUlBWkJNQ0FRUVQ5eFFZb0JhaEVEQUFWQkFBc2hFUU5BSUFJZ0FpZ0NBQ0lRUVFGcU5nSUFJQTlCQUVvRVFDQVFJQkU2QUFBZ0QwRi9haUVQREFFTEN5QVFJQWs2QUFBTElBUWdFMFlFUUNBR0tBSUFLQUljSVFRZ0JrRXdJQVJCUDNGQmlnRnFFUU1BSVE4Z0FpQUNLQUlBSWdSQkFXbzJBZ0FnQkNBUE9nQUFCUUpBSUFzc0FBc2lEMEVBU0NFUUlBc29BZ1FnRDBIL0FYRWdFQnNFZnlBTEtBSUFJQXNnRUJzc0FBQUZRWDhMSVE4Z0JDRVFRUUFoQkVFQUlSRURRQ0FRSUJOR0RRRWdEeUFSUmdSQUlBSWdBaWdDQUNJUFFRRnFOZ0lBSUE4Z0Nqb0FBQ0FMTEFBTElnOUJBRWdoRlNBRVFRRnFJZ1FnQ3lnQ0JDQVBRZjhCY1NBVkcwa0VRRUYvSUFzb0FnQWdDeUFWR3lBRWFpd0FBQ0lQSUE5Qi93QkdHeUVQQlNBUklROExRUUFoRVFzZ0VFRi9haUlRTEFBQUlSZ2dBaUFDS0FJQUloVkJBV28yQWdBZ0ZTQVlPZ0FBSUJGQkFXb2hFUXdBQUFzQUN3c2dFaUFDS0FJQUlnUkdCSDhnRXdVRFFDQVNJQVJCZjJvaUJFa0VRQ0FTTEFBQUlROGdFaUFFTEFBQU9nQUFJQVFnRHpvQUFDQVNRUUZxSVJJTUFRVWdFeUVFREFNTEFBQUxBQXNoQkFzZ0ZFRUJhaUVVREFFTEN5QU5MQUFMSWdSQkFFZ2hCaUFOS0FJRUlBUkIvd0Z4SUFZYklnVkJBVXNFUUNBTktBSUFJQTBnQmhzaUJDQUZhaUVGSUFJb0FnQWhCZ05BSUFSQkFXb2lCQ0FGUndSQUlBWWdCQ3dBQURvQUFDQUdRUUZxSVFZTUFRc0xJQUlnQmpZQ0FBc0NRQUpBQWtBZ0EwR3dBWEZCR0hSQkdIVkJFR3NPRVFJQkFRRUJBUUVCQVFFQkFRRUJBUUVBQVFzZ0FTQUNLQUlBTmdJQURBRUxJQUVnQURZQ0FBc0xnZ1lCQlg4akJDRUtJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFLUVF4cUlRc2dDaUFBQkg4Z0FrR1EvUUlRVXdVZ0FrR0kvUUlRVXdzaUFDQUJCSDhnQ3lBQUlBQW9BZ0FvQWl4Qi93RnhRWTRIYWhFQUFDQURJQXNvQWdBMkFBQWdBQ2dDQUNnQ0lBVWdDeUFBSUFBb0FnQW9BaWhCL3dGeFFZNEhhaEVBQUNBRElBc29BZ0EyQUFBZ0FDZ0NBQ2dDSEF0Qi93RnhRWTRIYWhFQUFDQUlMQUFMUVFCSUJFQUNmeUFJS0FJQUlRd2dDMEVBT2dBQUlBd0xJQXNzQUFBNkFBQWdDRUVBTmdJRUlBZ3NBQXRCQUVnRVFDQUlLQUlJR2lBSUtBSUFFRU1nQ0VFQU5nSUlDd1VnQzBFQU9nQUFJQWdnQ3l3QUFEb0FBQ0FJUVFBNkFBc0xJQWdnQ2lrQ0FEY0NBQ0FJSUFvb0FnZzJBZ2hCQUNFQkEwQWdBVUVEUndSQUlBRkJBblFnQ21wQkFEWUNBQ0FCUVFGcUlRRU1BUXNMSUFvUVRpQUVJQUFnQUNnQ0FDZ0NERUgvQUhGQkJHb1JDQUE2QUFBZ0JTQUFJQUFvQWdBb0FoQkIvd0J4UVFScUVRZ0FPZ0FBSUFvZ0FDQUFLQUlBS0FJVVFmOEJjVUdPQjJvUkFBQWdCaXdBQzBFQVNBUkFBbjhnQmlnQ0FDRU5JQXRCQURvQUFDQU5DeUFMTEFBQU9nQUFJQVpCQURZQ0JDQUdMQUFMUVFCSUJFQWdCaWdDQ0JvZ0JpZ0NBQkJESUFaQkFEWUNDQXNGSUF0QkFEb0FBQ0FHSUFzc0FBQTZBQUFnQmtFQU9nQUxDeUFHSUFvcEFnQTNBZ0FnQmlBS0tBSUlOZ0lJUVFBaEFnTkFJQUpCQTBjRVFDQUNRUUowSUFwcVFRQTJBZ0FnQWtFQmFpRUNEQUVMQ3lBS0VFNGdDaUFBSUFBb0FnQW9BaGhCL3dGeFFZNEhhaEVBQUNBSExBQUxRUUJJQkVBQ2Z5QUhLQUlBSVE0Z0MwRUFPZ0FBSUE0TElBc3NBQUE2QUFBZ0IwRUFOZ0lFSUFjc0FBdEJBRWdFUUNBSEtBSUlHaUFIS0FJQUVFTWdCMEVBTmdJSUN3VWdDMEVBT2dBQUlBY2dDeXdBQURvQUFDQUhRUUE2QUFzTElBY2dDaWtDQURjQ0FDQUhJQW9vQWdnMkFnaEJBQ0VCQTBBZ0FVRURSd1JBSUFGQkFuUWdDbXBCQURZQ0FDQUJRUUZxSVFFTUFRc0xJQW9RVGlBSklBQWdBQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQTJBZ0FnQ2lRRUM3RWpBUnAvSXdRaER5TUVRWUFFYWlRRUl3UWpCVTRFUUVHQUJCQUFDeUFQUWZRRGFpRVpJQTlCMkFOcUlSOGdEMEhVQTJvaElDQVBRYndEYWlFTUlBOUJzQU5xSVEwZ0QwR2tBMm9oRGlBUFFaZ0RhaUVSSUE5QmxBTnFJUmNnRDBHUUEyb2hIQ0FQUWZBRGFpSWFJQW8yQWdBZ0QwSG9BMm9pRkNBUE5nSUFJQlJCdVFJMkFnUWdEMEhnQTJvaUVpQVBOZ0lBSUE5QjNBTnFJaHNnRDBHUUEybzJBZ0FnRDBISUEyb2lGa0lBTndJQUlCWkJBRFlDQ0VFQUlRb0RRQ0FLUVFOSEJFQWdDa0VDZENBV2FrRUFOZ0lBSUFwQkFXb2hDZ3dCQ3dzZ0RFSUFOd0lBSUF4QkFEWUNDRUVBSVFvRFFDQUtRUU5IQkVBZ0NrRUNkQ0FNYWtFQU5nSUFJQXBCQVdvaENnd0JDd3NnRFVJQU53SUFJQTFCQURZQ0NFRUFJUW9EUUNBS1FRTkhCRUFnQ2tFQ2RDQU5ha0VBTmdJQUlBcEJBV29oQ2d3QkN3c2dEa0lBTndJQUlBNUJBRFlDQ0VFQUlRb0RRQ0FLUVFOSEJFQWdDa0VDZENBT2FrRUFOZ0lBSUFwQkFXb2hDZ3dCQ3dzZ0VVSUFOd0lBSUJGQkFEWUNDRUVBSVFvRFFDQUtRUU5IQkVBZ0NrRUNkQ0FSYWtFQU5nSUFJQXBCQVdvaENnd0JDd3NnQWlBRElCa2dIeUFnSUJZZ0RDQU5JQTRnRnhDekJTQUpJQWdvQWdBMkFnQWdCRUdBQkhGQkFFY2hJVUVBSVFJQ2Z3SkFBa0FDUUFKQUFrQUNRQU5BQWtBZ0UwRUVUdzBISUFBb0FnQWlBd1IvSUFNb0Fnd2lCQ0FES0FJUVJnUi9JQU1nQXlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFRb0FnQUxRWDlHQkg4Z0FFRUFOZ0lBUVFFRklBQW9BZ0JGQ3dWQkFRc2hBd0pBQWtBZ0FTZ0NBQ0lMUlEwQUlBc29BZ3dpQkNBTEtBSVFSZ1IvSUFzZ0N5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMUVg5R0JFQWdBVUVBTmdJQURBRUZJQU5GRFFvTERBRUxJQU1OQ0VFQUlRc0xBa0FDUUFKQUFrQUNRQUpBQWtBZ0V5QVphaXdBQUE0RkFRQURBZ1FHQ3lBVFFRTkhCRUFnQjBHQXdBQWdBQ2dDQUNJREtBSU1JZ1FnQXlnQ0VFWUVmeUFESUFNb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUtBSUFDeUFIS0FJQUtBSU1RUjl4UWNvQmFoRUVBRVVOQnlBUklBQW9BZ0FpQXlnQ0RDSUVJQU1vQWhCR0JIOGdBeUFES0FJQUtBSW9RZjhBY1VFRWFoRUlBQVVnQXlBRVFRUnFOZ0lNSUFRb0FnQUxFT0FCREFVTERBVUxJQk5CQTBjTkF3d0VDeUFOS0FJRUlBMHNBQXNpQTBIL0FYRWdBMEVBU0JzaUMwRUFJQTRvQWdRZ0Rpd0FDeUlEUWY4QmNTQURRUUJJR3lJUWEwY0VRQ0FBS0FJQUlnTW9BZ3dpQkNBREtBSVFSaUVLSUF0Rklnc2dFRVZ5QkVBZ0NnUi9JQU1nQXlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFRb0FnQUxJUU1nQ3dSQUlBTWdEaWdDQUNBT0lBNHNBQXRCQUVnYktBSUFSdzBHSUFBb0FnQWlBeWdDRENJRUlBTW9BaEJHQkVBZ0F5QURLQUlBS0FJb1FmOEFjVUVFYWhFSUFCb0ZJQU1nQkVFRWFqWUNEQ0FFS0FJQUdnc2dCa0VCT2dBQUlBNGdBaUFPS0FJRUlBNHNBQXNpQWtIL0FYRWdBa0VBU0J0QkFVc2JJUUlNQmdzZ0F5QU5LQUlBSUEwZ0RTd0FDMEVBU0Jzb0FnQkhCRUFnQmtFQk9nQUFEQVlMSUFBb0FnQWlBeWdDRENJRUlBTW9BaEJHQkVBZ0F5QURLQUlBS0FJb1FmOEFjVUVFYWhFSUFCb0ZJQU1nQkVFRWFqWUNEQ0FFS0FJQUdnc2dEU0FDSUEwb0FnUWdEU3dBQ3lJQ1FmOEJjU0FDUVFCSUcwRUJTeHNoQWd3RkN5QUtCSDhnQXlBREtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JDZ0NBQXNoQ3lBQUtBSUFJZ01vQWd3aUJDQURLQUlRUmlFS0lBMG9BZ0FnRFNBTkxBQUxRUUJJR3lnQ0FDQUxSZ1JBSUFvRVFDQURJQU1vQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQXlBRVFRUnFOZ0lNSUFRb0FnQWFDeUFOSUFJZ0RTZ0NCQ0FOTEFBTElnSkIvd0Z4SUFKQkFFZ2JRUUZMR3lFQ0RBVUxJQW9FZnlBRElBTW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUVLQUlBQ3lBT0tBSUFJQTRnRGl3QUMwRUFTQnNvQWdCSERRY2dBQ2dDQUNJREtBSU1JZ1FnQXlnQ0VFWUVRQ0FESUFNb0FnQW9BaWhCL3dCeFFRUnFFUWdBR2dVZ0F5QUVRUVJxTmdJTUlBUW9BZ0FhQ3lBR1FRRTZBQUFnRGlBQ0lBNG9BZ1FnRGl3QUN5SUNRZjhCY1NBQ1FRQklHMEVCU3hzaEFnc01Bd3NDUUFKQUlCTkJBa2tnQW5JRVFDQU1LQUlBSWdNZ0RDQU1MQUFMSWdSQkFFZ2JJUW9nRXcwQkJTQVRRUUpHSUJrc0FBTkJBRWR4SUNGeVJRUkFRUUFoQWd3R0N5QU1LQUlBSWdNZ0RDQU1MQUFMSWdSQkFFZ2JJUW9NQVFzTUFRc2dHU0FUUVg5cWFpMEFBRUVDU0FSQUFrQUNRQU5BSUF3b0FnUWdCRUgvQVhFZ0JFRVlkRUVZZFVFQVNDSVFHMEVDZENBRElBd2dFQnRxSUFwSEJFQWdCMEdBd0FBZ0NpZ0NBQ0FIS0FJQUtBSU1RUjl4UWNvQmFoRUVBRVVOQWlBTUxBQUxJUVFnRENnQ0FDRURJQXBCQkdvaENnd0JDd3NNQVFzZ0RDd0FDeUVFSUF3b0FnQWhBd3NnRVN3QUN5SVlRUUJJSVJVZ0NpQURJQXdnQkVFWWRFRVlkVUVBU0JzaUhTSVFhMEVDZFNJaUlCRW9BZ1FpSGlBWVFmOEJjU0lZSUJVYlN3Ui9JQkFGSUJFb0FnQWdIa0VDZEdvaUhpQVlRUUowSUJGcUloZ2dGUnNoSTBFQUlDSnJRUUowSUI0Z0dDQVZHMm9oRlFOL0lCVWdJMFlOQXlBVktBSUFJQjBvQWdCR0JIOGdGVUVFYWlFVklCMUJCR29oSFF3QkJTQVFDd3NMSVFvTEN3TkFBa0FnQ2lBTUtBSUVJQVJCL3dGeElBUkJHSFJCR0hWQkFFZ2lCQnRCQW5RZ0F5QU1JQVFiYWtZTkFDQUFLQUlBSWdNRWZ5QURLQUlNSWdRZ0F5Z0NFRVlFZnlBRElBTW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUVLQUlBQzBGL1JnUi9JQUJCQURZQ0FFRUJCU0FBS0FJQVJRc0ZRUUVMSVFNQ1FBSkFJQXRGRFFBZ0N5Z0NEQ0lFSUFzb0FoQkdCSDhnQ3lBTEtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JDZ0NBQXRCZjBZRVFDQUJRUUEyQWdBTUFRVWdBMFVOQXdzTUFRc2dBdzBCUVFBaEN3c2dBQ2dDQUNJREtBSU1JZ1FnQXlnQ0VFWUVmeUFESUFNb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUtBSUFDeUFLS0FJQVJ3MEFJQUFvQWdBaUF5Z0NEQ0lFSUFNb0FoQkdCRUFnQXlBREtBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBTWdCRUVFYWpZQ0RDQUVLQUlBR2dzZ0RDd0FDeUVFSUF3b0FnQWhBeUFLUVFScUlRb01BUXNMSUNFRVFDQU1MQUFMSWdSQkFFZ2hBeUFNS0FJRUlBUkIvd0Z4SUFNYlFRSjBJQXdvQWdBZ0RDQURHMm9nQ2tjTkJ3c01BZ3NnQ3lFRFFRQWhCQU5BQWtBZ0FDZ0NBQ0lLQkg4Z0NpZ0NEQ0lRSUFvb0FoQkdCSDhnQ2lBS0tBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0VDZ0NBQXRCZjBZRWZ5QUFRUUEyQWdCQkFRVWdBQ2dDQUVVTEJVRUJDeUVLQWtBQ1FDQUxSUTBBSUFzb0Fnd2lFQ0FMS0FJUVJnUi9JQXNnQ3lnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUJBb0FnQUxRWDlHQkVBZ0FVRUFOZ0lBUVFBaEF3d0JCU0FLUlEwREN3d0JDeUFLRFFGQkFDRUxDeUFIUVlBUUlBQW9BZ0FpQ2lnQ0RDSVFJQW9vQWhCR0JIOGdDaUFLS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnRUNnQ0FBc2lFQ0FIS0FJQUtBSU1RUjl4UWNvQmFoRUVBQVIvSUFrb0FnQWlDaUFhS0FJQVJnUkFJQWdnQ1NBYUVMUUJJQWtvQWdBaENnc2dDU0FLUVFScU5nSUFJQW9nRURZQ0FDQUVRUUZxQlNBV0tBSUVJQllzQUFzaUNrSC9BWEVnQ2tFQVNCdEJBRWNnQkVFQVIzRWdJQ2dDQUNBUVJuRkZEUUVnRWlnQ0FDSUtJQnNvQWdCR0JFQWdGQ0FTSUJzUXRBRWdFaWdDQUNFS0N5QVNJQXBCQkdvMkFnQWdDaUFFTmdJQVFRQUxJUVFnQUNnQ0FDSUtLQUlNSWhBZ0NpZ0NFRVlFUUNBS0lBb29BZ0FvQWloQi93QnhRUVJxRVFnQUdnVWdDaUFRUVFScU5nSU1JQkFvQWdBYUN3d0JDd3NnRWlnQ0FDSUtJQlFvQWdCSElBUkJBRWR4QkVBZ0NpQWJLQUlBUmdSQUlCUWdFaUFiRUxRQklCSW9BZ0FoQ2dzZ0VpQUtRUVJxTmdJQUlBb2dCRFlDQUFzZ0Z5Z0NBRUVBU2dSQUFrQWdBQ2dDQUNJRUJIOGdCQ2dDRENJS0lBUW9BaEJHQkg4Z0JDQUVLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDaWdDQUF0QmYwWUVmeUFBUVFBMkFnQkJBUVVnQUNnQ0FFVUxCVUVCQ3lFRUFrQUNRQ0FEUlEwQUlBTW9BZ3dpQ2lBREtBSVFSZ1IvSUFNZ0F5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBb29BZ0FMUVg5R0JFQWdBVUVBTmdJQURBRUZJQVJGRFFzTERBRUxJQVFOQ1VFQUlRTUxJQUFvQWdBaUJDZ0NEQ0lLSUFRb0FoQkdCSDhnQkNBRUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0NpZ0NBQXNnSHlnQ0FFY05DQ0FBS0FJQUlnUW9BZ3dpQ2lBRUtBSVFSZ1JBSUFRZ0JDZ0NBQ2dDS0VIL0FIRkJCR29SQ0FBYUJTQUVJQXBCQkdvMkFnd2dDaWdDQUJvTEEwQWdGeWdDQUVFQVRBMEJJQUFvQWdBaUJBUi9JQVFvQWd3aUNpQUVLQUlRUmdSL0lBUWdCQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQW9vQWdBTFFYOUdCSDhnQUVFQU5nSUFRUUVGSUFBb0FnQkZDd1ZCQVFzaEJBSkFBa0FnQTBVTkFDQURLQUlNSWdvZ0F5Z0NFRVlFZnlBRElBTW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUtLQUlBQzBGL1JnUkFJQUZCQURZQ0FBd0JCU0FFUlEwTkN3d0JDeUFFRFF0QkFDRURDeUFIUVlBUUlBQW9BZ0FpQkNnQ0RDSUtJQVFvQWhCR0JIOGdCQ0FFS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ2lnQ0FBc2dCeWdDQUNnQ0RFRWZjVUhLQVdvUkJBQkZEUW9nQ1NnQ0FDQWFLQUlBUmdSQUlBZ2dDU0FhRUxRQkN5QUFLQUlBSWdRb0Fnd2lDaUFFS0FJUVJnUi9JQVFnQkNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFvb0FnQUxJUVFnQ1NBSktBSUFJZ3BCQkdvMkFnQWdDaUFFTmdJQUlCY2dGeWdDQUVGL2FqWUNBQ0FBS0FJQUlnUW9BZ3dpQ2lBRUtBSVFSZ1JBSUFRZ0JDZ0NBQ2dDS0VIL0FIRkJCR29SQ0FBYUJTQUVJQXBCQkdvMkFnd2dDaWdDQUJvTERBQUFDd0FMQ3lBSktBSUFJQWdvQWdCR0RRZ01BUXNEUUNBQUtBSUFJZ01FZnlBREtBSU1JZ1FnQXlnQ0VFWUVmeUFESUFNb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUtBSUFDMEYvUmdSL0lBQkJBRFlDQUVFQkJTQUFLQUlBUlFzRlFRRUxJUU1DUUFKQUlBdEZEUUFnQ3lnQ0RDSUVJQXNvQWhCR0JIOGdDeUFMS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQkNnQ0FBdEJmMFlFUUNBQlFRQTJBZ0FNQVFVZ0EwVU5CQXNNQVFzZ0F3MENRUUFoQ3dzZ0IwR0F3QUFnQUNnQ0FDSURLQUlNSWdRZ0F5Z0NFRVlFZnlBRElBTW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUVLQUlBQ3lBSEtBSUFLQUlNUVI5eFFjb0JhaEVFQUVVTkFTQVJJQUFvQWdBaUF5Z0NEQ0lFSUFNb0FoQkdCSDhnQXlBREtBSUFLQUlvUWY4QWNVRUVhaEVJQUFVZ0F5QUVRUVJxTmdJTUlBUW9BZ0FMRU9BQkRBQUFDd0FMSUJOQkFXb2hFd3dCQ3dzZ0JTQUZLQUlBUVFSeU5nSUFRUUFNQmdzZ0JTQUZLQUlBUVFSeU5nSUFRUUFNQlFzZ0JTQUZLQUlBUVFSeU5nSUFRUUFNQkFzZ0JTQUZLQUlBUVFSeU5nSUFRUUFNQXdzZ0JTQUZLQUlBUVFSeU5nSUFRUUFNQWdzZ0JTQUZLQUlBUVFSeU5nSUFRUUFNQVFzZ0FnUkFBa0FnQWlFR1FRRWhCd05BQWtBZ0J5QUNMQUFMSWdOQkFFZ0VmeUFHS0FJRUJTQURRZjhCY1F0UERRSWdBQ2dDQUNJREJIOGdBeWdDRENJRUlBTW9BaEJHQkg4Z0F5QURLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCQ2dDQUF0QmYwWUVmeUFBUVFBMkFnQkJBUVVnQUNnQ0FFVUxCVUVCQ3lFRUFrQUNRQ0FCS0FJQUlnTkZEUUFnQXlnQ0RDSUlJQU1vQWhCR0JIOGdBeUFES0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ0NnQ0FBdEJmMFlFUUNBQlFRQTJBZ0FNQVFVZ0JFVU5Bd3NNQVFzZ0JBMEJDeUFBS0FJQUlnTW9BZ3dpQkNBREtBSVFSZ1IvSUFNZ0F5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMSUFJc0FBdEJBRWdFZnlBQ0tBSUFCU0FDQ3lBSFFRSjBhaWdDQUVjTkFDQUFLQUlBSWdNb0Fnd2lCQ0FES0FJUVJnUkFJQU1nQXlnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRElBUkJCR28yQWd3Z0JDZ0NBQm9MSUFkQkFXb2hCd3dCQ3dzZ0JTQUZLQUlBUVFSeU5nSUFRUUFNQWdzTElCUW9BZ0FpQUNBU0tBSUFJZ0ZHQkg5QkFRVWdIRUVBTmdJQUlCWWdBQ0FCSUJ3UWJ5QWNLQUlBQkg4Z0JTQUZLQUlBUVFSeU5nSUFRUUFGUVFFTEN3c2hKQ0FSRUU0Z0RoQk9JQTBRVGlBTUVFNGdGaEJPSUJRb0FnQWhBQ0FVUVFBMkFnQWdBQVJBSUFBZ0ZDZ0NCRUgvQTNGQmhBTnFFUUVBQ3lBUEpBUWdKQXVzQVFFRmZ5QUNLQUlBSUFBb0FnQWlBeUlHYXlJRlFRRjBJZ1JCQVNBRUcwRi9JQVZCLy8vLy93ZEpHeUVGSUFFb0FnQWhCeUFEUVFBZ0FDZ0NCRUc1QWtjaUJCc2dCUkNLQVNJRFJRUkFFQU1MSUFRRVFDQUFJQU0yQWdBRklBQW9BZ0FoQkNBQUlBTTJBZ0FnQkFSQUlBUWdBQ2dDQkVIL0EzRkJoQU5xRVFFQUlBQW9BZ0FoQXdzTElBQkJ1Z0kyQWdRZ0FTQURJQWNnQm10cU5nSUFJQUlnQlNBQUtBSUFhallDQUF2Vkl3RWFmeU1FSVJBakJFR0FCR29rQkNNRUl3Vk9CRUJCZ0FRUUFBc2dFRUh3QTJvaEdpQVFRZTBEYWlFZ0lCQkI3QU5xSVNFZ0VFRzhBMm9oRFNBUVFiQURhaUVPSUJCQnBBTnFJUThnRUVHWUEyb2hFU0FRUVpRRGFpRVhJQkJCa0FOcUlSNGdFRUhvQTJvaUd5QUtOZ0lBSUJCQjRBTnFJaFVnRURZQ0FDQVZRYmtDTmdJRUlCQkIyQU5xSWhNZ0VEWUNBQ0FRUWRRRGFpSWNJQkJCa0FOcU5nSUFJQkJCeUFOcUloWkNBRGNDQUNBV1FRQTJBZ2hCQUNFS0EwQWdDa0VEUndSQUlBcEJBblFnRm1wQkFEWUNBQ0FLUVFGcUlRb01BUXNMSUExQ0FEY0NBQ0FOUVFBMkFnaEJBQ0VLQTBBZ0NrRURSd1JBSUFwQkFuUWdEV3BCQURZQ0FDQUtRUUZxSVFvTUFRc0xJQTVDQURjQ0FDQU9RUUEyQWdoQkFDRUtBMEFnQ2tFRFJ3UkFJQXBCQW5RZ0RtcEJBRFlDQUNBS1FRRnFJUW9NQVFzTElBOUNBRGNDQUNBUFFRQTJBZ2hCQUNFS0EwQWdDa0VEUndSQUlBcEJBblFnRDJwQkFEWUNBQ0FLUVFGcUlRb01BUXNMSUJGQ0FEY0NBQ0FSUVFBMkFnaEJBQ0VLQTBBZ0NrRURSd1JBSUFwQkFuUWdFV3BCQURZQ0FDQUtRUUZxSVFvTUFRc0xJQUlnQXlBYUlDQWdJU0FXSUEwZ0RpQVBJQmNRdHdVZ0NTQUlLQUlBTmdJQUlBUkJnQVJ4UVFCSElTSkJBQ0VDQW44Q1FBSkFBa0FDUUFKQUFrQURRQUpBSUJSQkJFOE5CeUFBS0FJQUlnTUVmeUFES0FJTUlnUWdBeWdDRUVZRWZ5QURJQU1vQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFTFFBQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlNBQUtBSUFSUXNGUVFFTElRTUNRQUpBSUFFb0FnQWlERVVOQUNBTUtBSU1JZ1FnRENnQ0VFWUVmeUFNSUF3b0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUxRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQURSUTBLQ3d3QkN5QUREUWhCQUNFTUN3SkFBa0FDUUFKQUFrQUNRQUpBSUJRZ0dtb3NBQUFPQlFFQUF3SUVCZ3NnRkVFRFJ3UkFJQUFvQWdBaUF5Z0NEQ0lFSUFNb0FoQkdCSDhnQXlBREtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JDMEFBQXNpQTBIL0FYRkJHSFJCR0hWQmYwd05CeUFIS0FJSUlBTkJHSFJCR0hWQkFYUnFMZ0VBUVlEQUFIRkZEUWNnRVNBQUtBSUFJZ01vQWd3aUJDQURLQUlRUmdSL0lBTWdBeWdDQUNnQ0tFSC9BSEZCQkdvUkNBQUZJQU1nQkVFQmFqWUNEQ0FFTFFBQUMwSC9BWEVRc3dFTUJRc01CUXNnRkVFRFJ3MEREQVFMSUE0b0FnUWdEaXdBQ3lJRFFmOEJjU0FEUVFCSUd5SUxRUUFnRHlnQ0JDQVBMQUFMSWdOQi93RnhJQU5CQUVnYklneHJSd1JBSUFBb0FnQWlBeWdDRENJRUlBTW9BaEJHSVFvZ0MwVWlDeUFNUlhJRVFDQUtCSDhnQXlBREtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JDMEFBQXRCL3dGeElRTWdDd1JBSUE4b0FnQWdEeUFQTEFBTFFRQklHeTBBQUNBRFJ3MEdJQUFvQWdBaUF5Z0NEQ0lFSUFNb0FoQkdCRUFnQXlBREtBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBTWdCRUVCYWpZQ0RDQUVMUUFBR2dzZ0JrRUJPZ0FBSUE4Z0FpQVBLQUlFSUE4c0FBc2lBa0gvQVhFZ0FrRUFTQnRCQVVzYklRSU1CZ3NnRGlnQ0FDQU9JQTRzQUF0QkFFZ2JMUUFBSUFOSEJFQWdCa0VCT2dBQURBWUxJQUFvQWdBaUF5Z0NEQ0lFSUFNb0FoQkdCRUFnQXlBREtBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBTWdCRUVCYWpZQ0RDQUVMUUFBR2dzZ0RpQUNJQTRvQWdRZ0Rpd0FDeUlDUWY4QmNTQUNRUUJJRzBFQlN4c2hBZ3dGQ3lBS0JIOGdBeUFES0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQkMwQUFBc2hDeUFBS0FJQUlnTW9BZ3dpQkNBREtBSVFSaUVLSUE0b0FnQWdEaUFPTEFBTFFRQklHeTBBQUNBTFFmOEJjVVlFUUNBS0JFQWdBeUFES0FJQUtBSW9RZjhBY1VFRWFoRUlBQm9GSUFNZ0JFRUJhallDRENBRUxRQUFHZ3NnRGlBQ0lBNG9BZ1FnRGl3QUN5SUNRZjhCY1NBQ1FRQklHMEVCU3hzaEFnd0ZDeUFLQkg4Z0F5QURLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCQzBBQUF0Qi93RnhJQThvQWdBZ0R5QVBMQUFMUVFCSUd5MEFBRWNOQnlBQUtBSUFJZ01vQWd3aUJDQURLQUlRUmdSQUlBTWdBeWdDQUNnQ0tFSC9BSEZCQkdvUkNBQWFCU0FESUFSQkFXbzJBZ3dnQkMwQUFCb0xJQVpCQVRvQUFDQVBJQUlnRHlnQ0JDQVBMQUFMSWdKQi93RnhJQUpCQUVnYlFRRkxHeUVDQ3d3REN3SkFBa0FnRkVFQ1NTQUNjZ1JBSUEwb0FnQWlDaUFOSUEwc0FBc2lBMEVBU0NJTEd5SVlJUVFnRkEwQkJTQVVRUUpHSUJvc0FBTkJBRWR4SUNKeVJRUkFRUUFoQWd3R0N5QU5LQUlBSWdvZ0RTQU5MQUFMSWdOQkFFZ2lDeHNpQkNFWURBRUxEQUVMSUJvZ0ZFRi9hbW90QUFCQkFrZ0VRQ0FZSUEwb0FnUWdBMEgvQVhFZ0N4dHFJUklnQkNFTEEwQUNRQ0FMSUJKR0RRQWdDeXdBQUNJZFFYOU1EUUFnQnlnQ0NDQWRRUUYwYWk0QkFFR0F3QUJ4UlEwQUlBdEJBV29oQ3d3QkN3c2dFU3dBQ3lJWlFRQklJUklnQ3lBRWF5SWRJQkVvQWdRaUh5QVpRZjhCY1NJWklCSWJUUVJBSUI4Z0VTZ0NBR29pSHlBUklCbHFJaGtnRWhzaEl5QWZJQjFySUJrZ0hXc2dFaHNoRWdOQUlCSWdJMFlFUUNBTElRUU1CQXNnRWl3QUFDQVlMQUFBUmdSQUlCSkJBV29oRWlBWVFRRnFJUmdNQVFzTEN3c0xBMEFDUUNBRUlBMG9BZ1FnQTBIL0FYRWdBMEVZZEVFWWRVRUFTQ0lER3lBS0lBMGdBeHRxUmcwQUlBQW9BZ0FpQXdSL0lBTW9BZ3dpQ2lBREtBSVFSZ1IvSUFNZ0F5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBb3RBQUFMUVg5R0JIOGdBRUVBTmdJQVFRRUZJQUFvQWdCRkN3VkJBUXNoQXdKQUFrQWdERVVOQUNBTUtBSU1JZ29nRENnQ0VFWUVmeUFNSUF3b0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBS0xRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQURSUTBEQ3d3QkN5QUREUUZCQUNFTUN5QUFLQUlBSWdNb0Fnd2lDaUFES0FJUVJnUi9JQU1nQXlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFvdEFBQUxRZjhCY1NBRUxRQUFSdzBBSUFBb0FnQWlBeWdDRENJS0lBTW9BaEJHQkVBZ0F5QURLQUlBS0FJb1FmOEFjVUVFYWhFSUFCb0ZJQU1nQ2tFQmFqWUNEQ0FLTFFBQUdnc2dEU3dBQ3lFRElBMG9BZ0FoQ2lBRVFRRnFJUVFNQVFzTElDSUVRQ0FOTEFBTElncEJBRWdoQXlBTktBSUVJQXBCL3dGeElBTWJJQTBvQWdBZ0RTQURHMm9nQkVjTkJ3c01BZ3NnRENFRFFRQWhCQU5BQWtBZ0FDZ0NBQ0lLQkg4Z0NpZ0NEQ0lMSUFvb0FoQkdCSDhnQ2lBS0tBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0N5MEFBQXRCZjBZRWZ5QUFRUUEyQWdCQkFRVWdBQ2dDQUVVTEJVRUJDeUVLQWtBQ1FDQU1SUTBBSUF3b0Fnd2lDeUFNS0FJUVJnUi9JQXdnRENnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFzdEFBQUxRWDlHQkVBZ0FVRUFOZ0lBUVFBaEF3d0JCU0FLUlEwREN3d0JDeUFLRFFGQkFDRU1Dd0ovQWtBZ0FDZ0NBQ0lLS0FJTUlnc2dDaWdDRUVZRWZ5QUtJQW9vQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FMTFFBQUN5SUtRZjhCY1NJTFFSaDBRUmgxUVg5TURRQWdCeWdDQ0NBS1FSaDBRUmgxUVFGMGFpNEJBRUdBRUhGRkRRQWdDU2dDQUNJS0lCc29BZ0JHQkVBZ0NDQUpJQnNRN2dJZ0NTZ0NBQ0VLQ3lBSklBcEJBV28yQWdBZ0NpQUxPZ0FBSUFSQkFXb01BUXNnRmlnQ0JDQVdMQUFMSWdwQi93RnhJQXBCQUVnYlFRQkhJQVJCQUVkeElDRXRBQUFnQzBaeFJRMEJJQk1vQWdBaUNpQWNLQUlBUmdSQUlCVWdFeUFjRUxRQklCTW9BZ0FoQ2dzZ0V5QUtRUVJxTmdJQUlBb2dCRFlDQUVFQUN5RUVJQUFvQWdBaUNpZ0NEQ0lMSUFvb0FoQkdCRUFnQ2lBS0tBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBb2dDMEVCYWpZQ0RDQUxMUUFBR2dzTUFRc0xJQk1vQWdBaUNpQVZLQUlBUnlBRVFRQkhjUVJBSUFvZ0hDZ0NBRVlFUUNBVklCTWdIQkMwQVNBVEtBSUFJUW9MSUJNZ0NrRUVhallDQUNBS0lBUTJBZ0FMSUJjb0FnQkJBRW9FUUFKQUlBQW9BZ0FpQkFSL0lBUW9BZ3dpQ2lBRUtBSVFSZ1IvSUFRZ0JDZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBb3RBQUFMUVg5R0JIOGdBRUVBTmdJQVFRRUZJQUFvQWdCRkN3VkJBUXNoQkFKQUFrQWdBMFVOQUNBREtBSU1JZ29nQXlnQ0VFWUVmeUFESUFNb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBS0xRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQUVSUTBMQ3d3QkN5QUVEUWxCQUNFREN5QUFLQUlBSWdRb0Fnd2lDaUFFS0FJUVJnUi9JQVFnQkNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFvdEFBQUxRZjhCY1NBZ0xRQUFSdzBJSUFBb0FnQWlCQ2dDRENJS0lBUW9BaEJHQkVBZ0JDQUVLQUlBS0FJb1FmOEFjVUVFYWhFSUFCb0ZJQVFnQ2tFQmFqWUNEQ0FLTFFBQUdnc0RRQ0FYS0FJQVFRQk1EUUVnQUNnQ0FDSUVCSDhnQkNnQ0RDSUtJQVFvQWhCR0JIOGdCQ0FFS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ2kwQUFBdEJmMFlFZnlBQVFRQTJBZ0JCQVFVZ0FDZ0NBRVVMQlVFQkN5RUVBa0FDUUNBRFJRMEFJQU1vQWd3aUNpQURLQUlRUmdSL0lBTWdBeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQW90QUFBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFSRkRRMExEQUVMSUFRTkMwRUFJUU1MSUFBb0FnQWlCQ2dDRENJS0lBUW9BaEJHQkg4Z0JDQUVLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDaTBBQUFzaUJFSC9BWEZCR0hSQkdIVkJmMHdOQ2lBSEtBSUlJQVJCR0hSQkdIVkJBWFJxTGdFQVFZQVFjVVVOQ2lBSktBSUFJQnNvQWdCR0JFQWdDQ0FKSUJzUTdnSUxJQUFvQWdBaUJDZ0NEQ0lLSUFRb0FoQkdCSDhnQkNBRUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0NpMEFBQXNoQkNBSklBa29BZ0FpQ2tFQmFqWUNBQ0FLSUFRNkFBQWdGeUFYS0FJQVFYOXFOZ0lBSUFBb0FnQWlCQ2dDRENJS0lBUW9BaEJHQkVBZ0JDQUVLQUlBS0FJb1FmOEFjVUVFYWhFSUFCb0ZJQVFnQ2tFQmFqWUNEQ0FLTFFBQUdnc01BQUFMQUFzTElBa29BZ0FnQ0NnQ0FFWU5DQXdCQ3dOQUlBQW9BZ0FpQXdSL0lBTW9BZ3dpQkNBREtBSVFSZ1IvSUFNZ0F5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUXRBQUFMUVg5R0JIOGdBRUVBTmdJQVFRRUZJQUFvQWdCRkN3VkJBUXNoQXdKQUFrQWdERVVOQUNBTUtBSU1JZ1FnRENnQ0VFWUVmeUFNSUF3b0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUxRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQURSUTBFQ3d3QkN5QUREUUpCQUNFTUN5QUFLQUlBSWdNb0Fnd2lCQ0FES0FJUVJnUi9JQU1nQXlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFRdEFBQUxJZ05CL3dGeFFSaDBRUmgxUVg5TURRRWdCeWdDQ0NBRFFSaDBRUmgxUVFGMGFpNEJBRUdBd0FCeFJRMEJJQkVnQUNnQ0FDSURLQUlNSWdRZ0F5Z0NFRVlFZnlBRElBTW9BZ0FvQWloQi93QnhRUVJxRVFnQUJTQURJQVJCQVdvMkFnd2dCQzBBQUF0Qi93RnhFTE1CREFBQUN3QUxJQlJCQVdvaEZBd0JDd3NnQlNBRktBSUFRUVJ5TmdJQVFRQU1CZ3NnQlNBRktBSUFRUVJ5TmdJQVFRQU1CUXNnQlNBRktBSUFRUVJ5TmdJQVFRQU1CQXNnQlNBRktBSUFRUVJ5TmdJQVFRQU1Bd3NnQlNBRktBSUFRUVJ5TmdJQVFRQU1BZ3NnQlNBRktBSUFRUVJ5TmdJQVFRQU1BUXNnQWdSQUFrQWdBaUVHUVFFaEJ3TkFBa0FnQnlBQ0xBQUxJZ05CQUVnRWZ5QUdLQUlFQlNBRFFmOEJjUXRQRFFJZ0FDZ0NBQ0lEQkg4Z0F5Z0NEQ0lFSUFNb0FoQkdCSDhnQXlBREtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JDMEFBQXRCZjBZRWZ5QUFRUUEyQWdCQkFRVWdBQ2dDQUVVTEJVRUJDeUVFQWtBQ1FDQUJLQUlBSWdORkRRQWdBeWdDRENJSUlBTW9BaEJHQkg4Z0F5QURLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDQzBBQUF0QmYwWUVRQ0FCUVFBMkFnQU1BUVVnQkVVTkF3c01BUXNnQkEwQkN5QUFLQUlBSWdNb0Fnd2lCQ0FES0FJUVJnUi9JQU1nQXlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFRdEFBQUxRZjhCY1NBQ0xBQUxRUUJJQkg4Z0FpZ0NBQVVnQWdzZ0Iyb3RBQUJIRFFBZ0FDZ0NBQ0lES0FJTUlnUWdBeWdDRUVZRVFDQURJQU1vQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQXlBRVFRRnFOZ0lNSUFRdEFBQWFDeUFIUVFGcUlRY01BUXNMSUFVZ0JTZ0NBRUVFY2pZQ0FFRUFEQUlMQ3lBVktBSUFJZ0FnRXlnQ0FDSUJSZ1IvUVFFRklCNUJBRFlDQUNBV0lBQWdBU0FlRUc4Z0hpZ0NBQVIvSUFVZ0JTZ0NBRUVFY2pZQ0FFRUFCVUVCQ3dzTElTUWdFUkJPSUE4UVRpQU9FRTRnRFJCT0lCWVFUaUFWS0FJQUlRQWdGVUVBTmdJQUlBQUVRQ0FBSUJVb0FnUkIvd054UVlRRGFoRUJBQXNnRUNRRUlDUUxHUUFnQUVJQU53SUFJQUJCQURZQ0NDQUFRUUZCTFJEY0Fnc1ZBQ0FBUWdBM0FnQWdBRUVBTmdJSUlBQVE1QVFMRlFBZ0FDZ0NBQkJlUndSQUlBQW9BZ0FRcmdNTEMyOEJBWDhqQkNFR0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUdRU1U2QUFBZ0JpQUVPZ0FCSUFZZ0JUb0FBaUFHUVFBNkFBTWdCVUgvQVhFRVFDQUdJQVU2QUFFZ0JpQUVPZ0FDQ3lBQ0lBRWdBaWdDQUNBQmF5QUdJQU1nQUNnQ0FCQVhJQUZxTmdJQUlBWWtCQXNPQUNBQVFRaHFFUElDSUFBUVF3c0tBQ0FBUVFocUVQSUNDM3NCQVg4akJDRUZJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFGSUFJb0FnQTJBZ0FnQlVFRWFpSUNJQVVvQWdBMkFnQWdBU0FDSUFNZ0JFRUVFSThCSVFFZ0F5Z0NBRUVFY1VVRVFDQUFJQUZCeFFCSUJIOGdBVUhRRDJvRklBRkI3QTVxSUFFZ0FVSGtBRWdiQzBHVWNXbzJBZ0FMSUFVa0JBdUZBUUVDZnlNRUlRWWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCQ0dvaUFDZ0NBQ2dDQkNFSElBQWdCMEgvQUhGQkJHb1JDQUFoQUNBR0lBTW9BZ0EyQWdBZ0JrRUVhaUlESUFZb0FnQTJBZ0FnQWlBRElBQWdBRUdnQW1vZ0JTQUVRUUFRNkFFZ0FHc2lBRUdnQWtnRVFDQUJJQUJCREcxQkRHODJBZ0FMSUFZa0JBdUZBUUVDZnlNRUlRWWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCQ0dvaUFDZ0NBQ2dDQUNFSElBQWdCMEgvQUhGQkJHb1JDQUFoQUNBR0lBTW9BZ0EyQWdBZ0JrRUVhaUlESUFZb0FnQTJBZ0FnQWlBRElBQWdBRUdvQVdvZ0JTQUVRUUFRNkFFZ0FHc2lBRUdvQVVnRVFDQUJJQUJCREcxQkIyODJBZ0FMSUFZa0JBdDdBUUYvSXdRaEJTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dCU0FDS0FJQU5nSUFJQVZCQkdvaUFpQUZLQUlBTmdJQUlBRWdBaUFESUFSQkJCQ1FBU0VCSUFNb0FnQkJCSEZGQkVBZ0FDQUJRY1VBU0FSL0lBRkIwQTlxQlNBQlFld09haUFCSUFGQjVBQklHd3RCbEhGcU5nSUFDeUFGSkFRTGhRRUJBbjhqQkNFR0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUWhxSWdBb0FnQW9BZ1FoQnlBQUlBZEIvd0J4UVFScUVRZ0FJUUFnQmlBREtBSUFOZ0lBSUFaQkJHb2lBeUFHS0FJQU5nSUFJQUlnQXlBQUlBQkJvQUpxSUFVZ0JFRUFFT2tCSUFCcklnQkJvQUpJQkVBZ0FTQUFRUXh0UVF4dk5nSUFDeUFHSkFRTGhRRUJBbjhqQkNFR0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUWhxSWdBb0FnQW9BZ0FoQnlBQUlBZEIvd0J4UVFScUVRZ0FJUUFnQmlBREtBSUFOZ0lBSUFaQkJHb2lBeUFHS0FJQU5nSUFJQUlnQXlBQUlBQkJxQUZxSUFVZ0JFRUFFT2tCSUFCcklnQkJxQUZJQkVBZ0FTQUFRUXh0UVFkdk5nSUFDeUFHSkFRTEJBQkJBZ3ZaQ0FFTGZ5TUVJUW9qQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFaQnlQc0NFRk1oQ1NBR1FkRDdBaEJUSWcwb0FnQW9BaFFoQmlBS0lBMGdCa0gvQVhGQmpnZHFFUUFBSUFVZ0F6WUNBQUpBQWtBZ0FpSU1BbjhDUUFKQUlBQXNBQUFpQWtFcmF3NERBQUVBQVFzZ0NTQUNJQWtvQWdBb0FpeEJQM0ZCaWdGcUVRTUFJUUlnQlNBRktBSUFJZ1pCQkdvMkFnQWdCaUFDTmdJQUlBQkJBV29NQVFzZ0FBc2lCbXRCQVV3TkFDQUdMQUFBUVRCSERRQUNRQ0FHTEFBQlFkZ0FhdzRoQUFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUFBUXNnQ1VFd0lBa29BZ0FvQWl4QlAzRkJpZ0ZxRVFNQUlRSWdCU0FGS0FJQUlnZEJCR28yQWdBZ0J5QUNOZ0lBSUFrZ0Jpd0FBU0FKS0FJQUtBSXNRVDl4UVlvQmFoRURBQ0VDSUFVZ0JTZ0NBQ0lIUVFScU5nSUFJQWNnQWpZQ0FDQUdRUUpxSWdZaEFnTkFJQUlnREVrRVFDQUNMQUFBSVFjUVhob2dCMEZRYWtFS1NTQUhRU0J5UVo5L2FrRUdTWElFUUNBQ1FRRnFJUUlNQWdzTEN3d0JDeUFHSVFJRFFDQUNJQXhQRFFFQ2Z5QUNMQUFBSVJFUVhob2dFUXRCVUdwQkNra0VRQ0FDUVFGcUlRSU1BUXNMQ3lBS0tBSUVJQW9zQUFzaUIwSC9BWEVnQjBFQVNCc0VRQ0FDSUFaSEJFQUNRQ0FHSVFnZ0FpRUhBMEFnQ0NBSFFYOXFJZ2RQRFFFZ0NDd0FBQ0VMSUFnZ0J5d0FBRG9BQUNBSElBczZBQUFnQ0VFQmFpRUlEQUFBQ3dBTEN5QU5JQTBvQWdBb0FoQkIvd0J4UVFScUVRZ0FJUTlCQUNFSVFRQWhCeUFHSVFzRFFDQUxJQUpKQkVBZ0J5QUtLQUlBSUFvZ0Npd0FDMEVBU0J0cUxBQUFJZzVCQUVvZ0NDQU9SbkVFUUNBRklBVW9BZ0FpQ0VFRWFqWUNBQ0FJSUE4MkFnQkJBQ0VJSUFjZ0J5QUtLQUlFSUFvc0FBc2lEa0gvQVhFZ0RrRUFTQnRCZjJwSmFpRUhDeUFKSUFzc0FBQWdDU2dDQUNnQ0xFRS9jVUdLQVdvUkF3QWhEaUFGSUFVb0FnQWlFRUVFYWpZQ0FDQVFJQTQyQWdBZ0NFRUJhaUVJSUF0QkFXb2hDd3dCQ3dzZ0JTZ0NBQ0lJSUFZZ0FHdEJBblFnQTJvaUJrWUVRQ0FKSVFjRklBWWhCeUFJSVFZRGZ5QUhJQVpCZkdvaUJra0VmeUFIS0FJQUlRc2dCeUFHS0FJQU5nSUFJQVlnQ3pZQ0FDQUhRUVJxSVFjTUFRVWdDU0VISUFnTEN5RUdDd1VnQ1NBR0lBSWdCU2dDQUNBSktBSUFLQUl3UVFkeFFlb0JhaEVQQUJvZ0JTQUZLQUlBSUFJZ0JtdEJBblJxSWdZMkFnQWdDU0VIQ3dKQUFrQURRQ0FDSUF4SkJFQWdBaXdBQUNJR1FTNUdEUUlnQ1NBR0lBY29BZ0FvQWl4QlAzRkJpZ0ZxRVFNQUlRZ2dCU0FGS0FJQUlndEJCR29pQmpZQ0FDQUxJQWcyQWdBZ0FrRUJhaUVDREFFTEN3d0JDeUFOSUEwb0FnQW9BZ3hCL3dCeFFRUnFFUWdBSVFjZ0JTQUZLQUlBSWdoQkJHb2lCallDQUNBSUlBYzJBZ0FnQWtFQmFpRUNDeUFKSUFJZ0RDQUdJQWtvQWdBb0FqQkJCM0ZCNmdGcUVROEFHaUFGSUFVb0FnQWdEQ0FDYTBFQ2RHb2lBallDQUNBRUlBSWdBU0FBYTBFQ2RDQURhaUFCSUF4R0d6WUNBQ0FLRUU0Z0NpUUVDNzRJQVF0L0l3UWhDaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQmtHbyt3SVFVeUVJSUFaQnVQc0NFRk1pRFNnQ0FDZ0NGQ0VHSUFvZ0RTQUdRZjhCY1VHT0Iyb1JBQUFnQlNBRE5nSUFBa0FDUUNBQ0lnc0Nmd0pBQWtBZ0FDd0FBQ0lDUVN0ckRnTUFBUUFCQ3lBSUlBSWdDQ2dDQUNnQ0hFRS9jVUdLQVdvUkF3QWhBaUFGSUFVb0FnQWlCa0VCYWpZQ0FDQUdJQUk2QUFBZ0FFRUJhZ3dCQ3lBQUN5SUdhMEVCVEEwQUlBWXNBQUJCTUVjTkFBSkFJQVlzQUFGQjJBQnJEaUVBQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRQUJDeUFJUVRBZ0NDZ0NBQ2dDSEVFL2NVR0tBV29SQXdBaEFpQUZJQVVvQWdBaUIwRUJhallDQUNBSElBSTZBQUFnQ0NBR0xBQUJJQWdvQWdBb0FoeEJQM0ZCaWdGcUVRTUFJUUlnQlNBRktBSUFJZ2RCQVdvMkFnQWdCeUFDT2dBQUlBWkJBbW9pQmlFQ0EwQWdBaUFMU1FSQUlBSXNBQUFoQnhCZUdpQUhRVkJxUVFwSklBZEJJSEpCbjM5cVFRWkpjZ1JBSUFKQkFXb2hBZ3dDQ3dzTERBRUxJQVloQWdOQUlBSWdDMDhOQVFKL0lBSXNBQUFoRVJCZUdpQVJDMEZRYWtFS1NRUkFJQUpCQVdvaEFnd0JDd3NMSUFvb0FnUWdDaXdBQ3lJSFFmOEJjU0FIUVFCSUd3Ui9JQUlnQmtjRVFBSkFJQVloQnlBQ0lRa0RRQ0FISUFsQmYyb2lDVThOQVNBSExBQUFJUXdnQnlBSkxBQUFPZ0FBSUFrZ0REb0FBQ0FIUVFGcUlRY01BQUFMQUFzTElBMGdEU2dDQUNnQ0VFSC9BSEZCQkdvUkNBQWhEMEVBSVFkQkFDRUpJQVloREFOQUlBd2dBa2tFUUNBSklBb29BZ0FnQ2lBS0xBQUxRUUJJRzJvc0FBQWlEa0VBU2lBSElBNUdjUVJBSUFVZ0JTZ0NBQ0lIUVFGcU5nSUFJQWNnRHpvQUFDQUpJQWtnQ2lnQ0JDQUtMQUFMSWdkQi93RnhJQWRCQUVnYlFYOXFTV29oQ1VFQUlRY0xJQWdnREN3QUFDQUlLQUlBS0FJY1FUOXhRWW9CYWhFREFDRU9JQVVnQlNnQ0FDSVFRUUZxTmdJQUlCQWdEam9BQUNBSFFRRnFJUWNnREVFQmFpRU1EQUVMQ3lBRktBSUFJZ2tnQXlBR0lBQnJhaUlIUmdSL0lBZ0ZJQWtoQmdOL0lBY2dCa0YvYWlJR1NRUi9JQWNzQUFBaENTQUhJQVlzQUFBNkFBQWdCaUFKT2dBQUlBZEJBV29oQnd3QkJTQUlDd3NMQlNBSUlBWWdBaUFGS0FJQUlBZ29BZ0FvQWlCQkIzRkI2Z0ZxRVE4QUdpQUZJQVVvQWdBZ0FpQUdhMm8yQWdBZ0NBc2hCZ0pBQWtBRFFDQUNJQXRKQkVBZ0Fpd0FBQ0lIUVM1R0RRSWdDQ0FISUFZb0FnQW9BaHhCUDNGQmlnRnFFUU1BSVFjZ0JTQUZLQUlBSWdsQkFXbzJBZ0FnQ1NBSE9nQUFJQUpCQVdvaEFnd0JDd3NNQVFzZ0RTQU5LQUlBS0FJTVFmOEFjVUVFYWhFSUFDRUdJQVVnQlNnQ0FDSUhRUUZxTmdJQUlBY2dCam9BQUNBQ1FRRnFJUUlMSUFnZ0FpQUxJQVVvQWdBZ0NDZ0NBQ2dDSUVFSGNVSHFBV29SRHdBYUlBVWdCU2dDQUNBTElBSnJhaUlDTmdJQUlBUWdBaUFESUFFZ0FHdHFJQUVnQzBZYk5nSUFJQW9RVGlBS0pBUUxZZ0VDZnlNRUlRWWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQVlnQVNnQ0FEWUNCQ0FHSUFJb0FnQTJBZ0FnQmtFSWFpSUJJQVlvQWdRMkFnQWdCa0VNYWlJQ0lBWW9BZ0EyQWdBZ0FTQUNJQU1nQkNBRkVJd0dJUWNnQmlRRUlBY0wzZ0VDQTM4QmZpTUVJUVFqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFBZ0FVWUVmeUFDUVFRMkFnQkJBQVZCK080Q0tBSUFJUVZCK080Q1FRQTJBZ0FnQUNBRUlBTVFYaEMrQXlFSFFmanVBaWdDQUNJQVJRUkFRZmp1QWlBRk5nSUFDeUFCSUFRb0FnQkdCSDhDZnlBQVFTSkdCRUFnQWtFRU5nSUFRZi8vLy84SElBZENBRlVOQVJvRkFrQWdCMEtBZ0lDQWVGTUVRQ0FDUVFRMkFnQU1BUXNnQjZjZ0IwTC8vLy8vQjFjTkFob2dBa0VFTmdJQVFmLy8vLzhIREFJTEMwR0FnSUNBZUFzRklBSkJCRFlDQUVFQUN3c2hCaUFFSkFRZ0JndXRBUUlDZndGK0l3UWhCQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUNBQlJnUkFJQUpCQkRZQ0FBVkIrTzRDS0FJQUlRVkIrTzRDUVFBMkFnQWdBQ0FFSUFNUVhoQytBeUVHUWZqdUFpZ0NBQ0lBUlFSQVFmanVBaUFGTmdJQUN5QUJJQVFvQWdCR0JINGdBRUVpUmdSK0lBSkJCRFlDQUVMLy8vLy8vLy8vLy84QVFvQ0FnSUNBZ0lDQWdIOGdCa0lBVlJzRklBWUxCU0FDUVFRMkFnQkNBQXNoQmdzZ0JDUUVJQVlMNFFFQ0JIOEJmaU1FSVFRakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQWdBVVlFZnlBQ1FRUTJBZ0JCQUFVQ2Z5QUFMQUFBUVMxR0lnVUVRQ0FCSUFCQkFXb2lBRVlFUUNBQ1FRUTJBZ0JCQUF3Q0N3dEIrTzRDS0FJQUlRWkIrTzRDUVFBMkFnQWdBQ0FFSUFNUVhoQ2hBaUVJUWZqdUFpZ0NBQ0lBUlFSQVFmanVBaUFHTmdJQUN5QUJJQVFvQWdCR0JIOENmeUFBUVNKR0lBaEMvLzhEVm5JRVFDQUNRUVEyQWdCQmZ3d0JDeUFJcDBILy93TnhJUUJCQUNBSXAydEIvLzhEY1NBQUlBVWJDd1VnQWtFRU5nSUFRUUFMQ3dzaEJ5QUVKQVFnQnd2U0FRSUVmd0YrSXdRaEJDTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBQ0FCUmdSL0lBSkJCRFlDQUVFQUJRSi9JQUFzQUFCQkxVWWlCUVJBSUFFZ0FFRUJhaUlBUmdSQUlBSkJCRFlDQUVFQURBSUxDMEg0N2dJb0FnQWhCa0g0N2dKQkFEWUNBQ0FBSUFRZ0F4QmVFS0VDSVFoQitPNENLQUlBSWdCRkJFQkIrTzRDSUFZMkFnQUxJQUVnQkNnQ0FFWUVmeUFBUVNKR0lBaEMvLy8vL3c5V2NnUi9JQUpCQkRZQ0FFRi9CVUVBSUFpbklnQnJJQUFnQlJzTEJTQUNRUVEyQWdCQkFBc0xDeUVISUFRa0JDQUhDOFVCQWdOL0FuNGpCQ0VFSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQUlBRkdCSDRnQWtFRU5nSUFRZ0FGQW40Z0FDd0FBRUV0UmlJRkJFQWdBU0FBUVFGcUlnQkdCRUFnQWtFRU5nSUFRZ0FNQWdzTFFmanVBaWdDQUNFR1FmanVBa0VBTmdJQUlBQWdCQ0FERUY0UW9RSWhCMEg0N2dJb0FnQWlBRVVFUUVINDdnSWdCallDQUFzZ0FTQUVLQUlBUmdSK0lBQkJJa1lFZmlBQ1FRUTJBZ0JDZndWQ0FDQUhmU0FISUFVYkN3VWdBa0VFTmdJQVFnQUxDd3NoQ0NBRUpBUWdDQXVWQVFJQ2Z3RjlJd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FDQUJSZ1JBSUFKQkJEWUNBQVZCK080Q0tBSUFJUVJCK080Q1FRQTJBZ0FRWGhvZ0FDQURRUUFRbkFLMklRVkIrTzRDS0FJQUlnQkZCRUJCK080Q0lBUTJBZ0FMQWtBQ1FDQUJJQU1vQWdCR0JFQWdBRUVpUmcwQkJVTUFBQUFBSVFVTUFRc01BUXNnQWtFRU5nSUFDd3NnQXlRRUlBVUxtQUVDQW44QmZDTUVJUU1qQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFBZ0FVWUVRQ0FDUVFRMkFnQUZRZmp1QWlnQ0FDRUVRZmp1QWtFQU5nSUFFRjRhSUFBZ0EwRUJFSndDSVFWQitPNENLQUlBSWdCRkJFQkIrTzRDSUFRMkFnQUxBa0FDUUNBQklBTW9BZ0JHQkVBZ0FFRWlSZzBCQlVRQUFBQUFBQUFBQUNFRkRBRUxEQUVMSUFKQkJEWUNBQXNMSUFNa0JDQUZDNWdCQWdKL0FYd2pCQ0VESXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQUlBRkdCRUFnQWtFRU5nSUFCVUg0N2dJb0FnQWhCRUg0N2dKQkFEWUNBQkJlR2lBQUlBTkJBaENjQWlFRlFmanVBaWdDQUNJQVJRUkFRZmp1QWlBRU5nSUFDd0pBQWtBZ0FTQURLQUlBUmdSQUlBQkJJa1lOQVFWRUFBQUFBQUFBQUFBaEJRd0JDd3dCQ3lBQ1FRUTJBZ0FMQ3lBREpBUWdCUXVKQVFFQ2Z5TUVJUU1qQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFNZ0FqWUNBRUdVOEFBb0FnQWhBaUFCQkVCQmxQQUFRY2p1QWlBQklBRkJmMFliTmdJQUMwRi9JQUlnQWtISTdnSkdHeUVCSUFCQm0rRUJJQU1RcWdNaEJDQUJCRUJCbFBBQUtBSUFHaUFCQkVCQmxQQUFRY2p1QWlBQklBRkJmMFliTmdJQUN3c2dBeVFFSUFRTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUo4R0lRY2dCaVFFSUFjTHVRRUJCSDhqQkNFRkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNJQUZyUVFKMUlnUkI3Ly8vL3dOTEJFQVFBd3NnQkVFQ1NRUkFJQUFnQkRvQUN5QUFJUU1GSUFSQkJHcEJmSEVpQmtILy8vLy9BMHNFUUJBREJTQUFJQVpCQW5RUVh5SUROZ0lBSUFBZ0JrR0FnSUNBZUhJMkFnZ2dBQ0FFTmdJRUN3c0RRQ0FCSUFKSEJFQWdBeUFCS0FJQU5nSUFJQUZCQkdvaEFTQURRUVJxSVFNTUFRc0xJQVZCQURZQ0FDQURJQVVvQWdBMkFnQWdCU1FFQzY0QkFRUi9Jd1FoQlNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FpQUJheUlFUVc5TEJFQVFBd3NnQkVFTFNRUkFJQUFnQkRvQUN3VWdBQ0FFUVJCcVFYQnhJZ1lRWHlJRE5nSUFJQUFnQmtHQWdJQ0FlSEkyQWdnZ0FDQUVOZ0lFSUFNaEFBc2dBaUFCYXlFR0lBQWhBd05BSUFFZ0FrY0VRQ0FESUFFc0FBQTZBQUFnQVVFQmFpRUJJQU5CQVdvaEF3d0JDd3NnQlVFQU9nQUFJQUFnQm1vZ0JTd0FBRG9BQUNBRkpBUUx0QU1DQ244QmZpTUVJUVVqQkVFZ2FpUUVJd1FqQlU0RVFFRWdFQUFMSUFWQkVHb2hBeUFGUVFocUlRUWdCVUVFYWlFSklBQXNBRFFFUUFKL0lBQW9BakFoQ3lBQkJFQWdBRUYvTmdJd0lBQkJBRG9BTkFzZ0N3c2hBQVVnQUNnQ0xDSUNRUUVnQWtFQlNoc2hBZ0pBQWtBRFFDQUdJQUpQRFFFZ0FDZ0NJQkR4QVNJSFFYOUhCRUFnQXlBR2FpQUhPZ0FBSUFaQkFXb2hCZ3dCQ3d0QmZ5RUFEQUVMQWtBQ1FDQUFMQUExQkVBZ0JDQURMQUFBT2dBQURBRUZBa0FnQkVFQmFpRUdBa0FDUUFKQUEwQUNRQ0FBS0FJb0lnY3BBZ0FoRENBQUtBSWtJZ2dvQWdBb0FoQWhDZ0pBSUFnZ0J5QURJQUlnQTJvaUJ5QUpJQVFnQmlBRklBcEJEM0ZCNWdKcUVRMEFRUUZyRGdNQUJBTUJDeUFBS0FJb0lBdzNBZ0FnQWtFSVJnMERJQUFvQWlBUThRRWlDRUYvUmcwRElBY2dDRG9BQUNBQ1FRRnFJUUlNQVFzTERBSUxJQVFnQXl3QUFEb0FBQXdCQzBGL0lRQU1BUXNNQWdzTERBRUxJQUVFUUNBQUlBUXRBQUEyQWpBRkFrQURRQ0FDUVFCTURRRWdBeUFDUVg5cUlnSnFMUUFBSUFBb0FpQVE4QUZCZjBjTkFBdEJmeUVBREFJTEN5QUVMUUFBSVFBTEN3c2dCU1FFSUFBTHNnRUJBbjhnQUNnQ0JCQkRJQUJCQURZQ0RDQUFJQUUyQWhBZ0FVRUFTQVJBSUFCQkFEWUNDQ0FBUVFBMkFnQWdBRUVBTmdJRUR3c2dBQ0FCUVFGcUlnUkJBblFRU2lJQk5nSUVJQUZGQkVCQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdOQkFEWUNBQ0FEUVg4MkFnUWdBMEdvT0VFQUVBRUxJQUFnQVRZQ0FDQUFJQVJCQW5RZ0FXb2lBellDQ0NBRElBRk5CRUFQQ3dOQUlBRWdBaWdDQURZQ0FDQUJRUVJxSWdFZ0FDZ0NDRWtOQUFzTHRBTUNDbjhCZmlNRUlRVWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQVZCRUdvaEF5QUZRUWhxSVFRZ0JVRUVhaUVKSUFBc0FEUUVRQUovSUFBb0FqQWhDeUFCQkVBZ0FFRi9OZ0l3SUFCQkFEb0FOQXNnQ3dzaEFBVWdBQ2dDTENJQ1FRRWdBa0VCU2hzaEFnSkFBa0FEUUNBR0lBSlBEUUVnQUNnQ0lCRHhBU0lIUVg5SEJFQWdBeUFHYWlBSE9nQUFJQVpCQVdvaEJnd0JDd3RCZnlFQURBRUxBa0FDUUNBQUxBQTFCRUFnQkNBRExBQUFOZ0lBREFFRkFrQWdCRUVFYWlFR0FrQUNRQUpBQTBBQ1FDQUFLQUlvSWdjcEFnQWhEQ0FBS0FJa0lnZ29BZ0FvQWhBaENnSkFJQWdnQnlBRElBSWdBMm9pQnlBSklBUWdCaUFGSUFwQkQzRkI1Z0pxRVEwQVFRRnJEZ01BQkFNQkN5QUFLQUlvSUF3M0FnQWdBa0VJUmcwRElBQW9BaUFROFFFaUNFRi9SZzBESUFjZ0NEb0FBQ0FDUVFGcUlRSU1BUXNMREFJTElBUWdBeXdBQURZQ0FBd0JDMEYvSVFBTUFRc01BZ3NMREFFTElBRUVRQ0FBSUFRb0FnQTJBakFGQWtBRFFDQUNRUUJNRFFFZ0F5QUNRWDlxSWdKcUxBQUFJQUFvQWlBUThBRkJmMGNOQUF0QmZ5RUFEQUlMQ3lBRUtBSUFJUUFMQ3dzZ0JTUUVJQUFMcGdFQkJYOGpCQ0VCSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQlFRaHFJZ0pCQ0dvaEJRSkFBa0FEUUNBQUtBSWtJZ01vQWdBb0FoUWhCQ0FESUFBb0FpZ2dBaUFGSUFFZ0JFRWZjVUg2QVdvUkRBQWhBd0pBSUFKQkFTQUJLQUlBSUFKcklnUWdBQ2dDSUJDZEFTQUVSdzBBQWtBZ0EwRUJhdzRDQUFFREN3d0JDd3RCZnlFQURBRUxJQUFvQWlBUW5nSkJBRWRCSDNSQkgzVWhBQXNnQVNRRUlBQUxoUUVCQVg4akJDRURJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBRUpJRElBQkJ6UE1BTmdJQUlBQWdBVFlDSUNBRElBQW9BZ1FpQVRZQ0FDQUJJQUVvQWdSQkFXbzJBZ1FnQTBIZy9RSVFVeUVCSUFNUVZDQUFJQUUyQWlRZ0FDQUNOZ0lvSUFBZ0FTQUJLQUlBS0FJY1FmOEFjVUVFYWhFSUFFRUJjVG9BTENBREpBUUxoUUVCQVg4akJDRURJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBRUpNRElBQkJqUFFBTmdJQUlBQWdBVFlDSUNBRElBQW9BZ1FpQVRZQ0FDQUJJQUVvQWdSQkFXbzJBZ1FnQTBIWS9RSVFVeUVCSUFNUVZDQUFJQUUyQWlRZ0FDQUNOZ0lvSUFBZ0FTQUJLQUlBS0FJY1FmOEFjVUVFYWhFSUFFRUJjVG9BTENBREpBUUxMUUFnQUVITThRQTJBZ0FnQUVFRWFoQ05BaUFBUVFocUlnQkNBRGNDQUNBQVFnQTNBZ2dnQUVJQU53SVFDeTBBSUFCQmpQRUFOZ0lBSUFCQkJHb1FqUUlnQUVFSWFpSUFRZ0EzQWdBZ0FFSUFOd0lJSUFCQ0FEY0NFQXNUQUNBQUlBQW9BZ0JCZEdvb0FnQnFFSmdDQ3hNQUlBQWdBQ2dDQUVGMGFpZ0NBR29RNndFTEV3QWdBQ0FBS0FJQVFYUnFLQUlBYWhDWkFnc1RBQ0FBSUFBb0FnQkJkR29vQWdCcUVPd0JDeElBSUFCQnpQRUFOZ0lBSUFCQkJHb1FWQXNFQUVGL0N4QUFJQUJDQURjREFDQUFRbjgzQXdnTEVBQWdBRUlBTndNQUlBQkNmemNEQ0FzRUFDQUFDeElBSUFCQmpQRUFOZ0lBSUFCQkJHb1FWQXNIQUJBcVFRQktDN1VNQVFkL0lBQWdBV29oQlNBQUtBSUVJZ05CQVhGRkJFQUNRQ0FBS0FJQUlRSWdBMEVEY1VVRVFBOExJQUVnQW1vaEFTQUFJQUpySWdCQnRPOENLQUlBUmdSQUlBVW9BZ1FpQWtFRGNVRURSdzBCUWFqdkFpQUJOZ0lBSUFVZ0FrRitjVFlDQkNBQUlBRkJBWEkyQWdRZ0JTQUJOZ0lBRHdzZ0FrRURkaUVFSUFKQmdBSkpCRUFnQUNnQ0NDSUNJQUFvQWd3aUEwWUVRRUdnN3dKQm9POENLQUlBUVFFZ0JIUkJmM054TmdJQUJTQUNJQU0yQWd3Z0F5QUNOZ0lJQ3d3QkN5QUFLQUlZSVFjZ0FDZ0NEQ0lDSUFCR0JFQUNRQ0FBUVJCcUlnTkJCR29pQkNnQ0FDSUNCRUFnQkNFREJTQURLQUlBSWdKRkJFQkJBQ0VDREFJTEN3TkFBa0FnQWtFVWFpSUVLQUlBSWdaRkJFQWdBa0VRYWlJRUtBSUFJZ1pGRFFFTElBUWhBeUFHSVFJTUFRc0xJQU5CQURZQ0FBc0ZJQUFvQWdnaUF5QUNOZ0lNSUFJZ0F6WUNDQXNnQndSQUlBQW9BaHdpQTBFQ2RFSFE4UUpxSWdRb0FnQWdBRVlFUUNBRUlBSTJBZ0FnQWtVRVFFR2s3d0pCcE84Q0tBSUFRUUVnQTNSQmYzTnhOZ0lBREFNTEJTQUhRUkJxSWdNZ0IwRVVhaUFES0FJQUlBQkdHeUFDTmdJQUlBSkZEUUlMSUFJZ0J6WUNHQ0FBS0FJUUlnTUVRQ0FDSUFNMkFoQWdBeUFDTmdJWUN5QUFLQUlVSWdNRVFDQUNJQU0yQWhRZ0F5QUNOZ0lZQ3dzTEN5QUZLQUlFSWdkQkFuRUVRQ0FGSUFkQmZuRTJBZ1FnQUNBQlFRRnlOZ0lFSUFBZ0FXb2dBVFlDQUNBQklRTUZRYmp2QWlnQ0FDQUZSZ1JBUWF6dkFrR3M3d0lvQWdBZ0FXb2lBVFlDQUVHNDd3SWdBRFlDQUNBQUlBRkJBWEkyQWdRZ0FFRzA3d0lvQWdCSEJFQVBDMEcwN3dKQkFEWUNBRUdvN3dKQkFEWUNBQThMUWJUdkFpZ0NBQ0FGUmdSQVFhanZBa0dvN3dJb0FnQWdBV29pQVRZQ0FFRzA3d0lnQURZQ0FDQUFJQUZCQVhJMkFnUWdBQ0FCYWlBQk5nSUFEd3NnQjBFRGRpRUVJQWRCZ0FKSkJFQWdCU2dDQ0NJQ0lBVW9BZ3dpQTBZRVFFR2c3d0pCb084Q0tBSUFRUUVnQkhSQmYzTnhOZ0lBQlNBQ0lBTTJBZ3dnQXlBQ05nSUlDd1VDUUNBRktBSVlJUWdnQlNnQ0RDSUNJQVZHQkVBQ1FDQUZRUkJxSWdOQkJHb2lCQ2dDQUNJQ0JFQWdCQ0VEQlNBREtBSUFJZ0pGQkVCQkFDRUNEQUlMQ3dOQUFrQWdBa0VVYWlJRUtBSUFJZ1pGQkVBZ0FrRVFhaUlFS0FJQUlnWkZEUUVMSUFRaEF5QUdJUUlNQVFzTElBTkJBRFlDQUFzRklBVW9BZ2dpQXlBQ05nSU1JQUlnQXpZQ0NBc2dDQVJBSUFVb0Fod2lBMEVDZEVIUThRSnFJZ1FvQWdBZ0JVWUVRQ0FFSUFJMkFnQWdBa1VFUUVHazd3SkJwTzhDS0FJQVFRRWdBM1JCZjNOeE5nSUFEQU1MQlNBSVFSQnFJZ01nQ0VFVWFpQURLQUlBSUFWR0d5QUNOZ0lBSUFKRkRRSUxJQUlnQ0RZQ0dDQUZLQUlRSWdNRVFDQUNJQU0yQWhBZ0F5QUNOZ0lZQ3lBRktBSVVJZ01FUUNBQ0lBTTJBaFFnQXlBQ05nSVlDd3NMQ3lBQUlBZEJlSEVnQVdvaUEwRUJjallDQkNBQUlBTnFJQU0yQWdCQnRPOENLQUlBSUFCR0JFQkJxTzhDSUFNMkFnQVBDd3NnQTBFRGRpRUNJQU5CZ0FKSkJFQWdBa0VEZEVISTd3SnFJUUZCb084Q0tBSUFJZ05CQVNBQ2RDSUNjUVIvSUFGQkNHb2lBaUVESUFJb0FnQUZRYUR2QWlBQ0lBTnlOZ0lBSUFGQkNHb2hBeUFCQ3lFQ0lBTWdBRFlDQUNBQ0lBQTJBZ3dnQUNBQ05nSUlJQUFnQVRZQ0RBOExJQU5CQ0hZaUFRUi9JQU5CLy8vL0Iwc0VmMEVmQlNBQklBRkJnUDQvYWtFUWRrRUljU0lFZENJQ1FZRGdIMnBCRUhaQkJIRWhBU0FDSUFGMElnWkJnSUFQYWtFUWRrRUNjU0VDSUFOQkRpQUJJQVJ5SUFKeWF5QUdJQUowUVE5MmFpSUJRUWRxZGtFQmNTQUJRUUYwY2dzRlFRQUxJZ0pCQW5SQjBQRUNhaUVCSUFBZ0FqWUNIQ0FBUVFBMkFoUWdBRUVBTmdJUUFrQkJwTzhDS0FJQUlnUkJBU0FDZENJR2NVVUVRRUdrN3dJZ0JDQUdjallDQUNBQklBQTJBZ0FNQVFzZ0FTZ0NBQ0lCS0FJRVFYaHhJQU5HQkVBZ0FTRUNCUUpBSUFOQkFFRVpJQUpCQVhacklBSkJIMFliZENFRUEwQWdBVUVRYWlBRVFSOTJRUUowYWlJR0tBSUFJZ0lFUUNBRVFRRjBJUVFnQWlnQ0JFRjRjU0FEUmcwQ0lBSWhBUXdCQ3dzZ0JpQUFOZ0lBREFJTEN5QUNLQUlJSWdFZ0FEWUNEQ0FDSUFBMkFnZ2dBQ0FCTmdJSUlBQWdBallDRENBQVFRQTJBaGdQQ3lBQUlBRTJBaGdnQUNBQU5nSU1JQUFnQURZQ0NBc3pBUUYvSXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBU0FBTmdJQVFZaktBRUVGSUFFb0FnQVFCQ0FCSkFRTE13RUJmeU1FSVFFakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBRWdBRFlDQUVHUXlnQkJCQ0FCS0FJQUVBUWdBU1FFQ3pNQkFYOGpCQ0VCSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQklBQTJBZ0JCbU1vQVFRTWdBU2dDQUJBRUlBRWtCQXN6QVFGL0l3UWhBU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQVNBQU5nSUFRYURLQUVFQ0lBRW9BZ0FRQkNBQkpBUUxNd0VCZnlNRUlRRWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUVnQURZQ0FFR295Z0JCQVNBQktBSUFFQVFnQVNRRUN6TUJBWDhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUJJQUEyQWdCQnNNb0FRUUFnQVNnQ0FCQUVJQUVrQkF2TkFRQkJrTjhBUWVqMEFSQWVRWmpmQUVIdDlBRkJBVUVCUVFBUUloRHVCaER0QmhEc0JoRHJCaERxQmhEcEJoRG9CaERtQmhEbEJoRGtCaERqQmtHQXl3QkJwZmdCRUF4QjZNb0FRWkxTQVJBTVFjaktBRUVFUWJQU0FSQWZRY0RLQUVIQTBnRVFJUkRpQmtIdTBnRVFwUU5CazlNQkVLUURRYnJUQVJDakEwSFowd0VRb2dOQmdkUUJFS0VEUVo3VUFSQ2dBeERmQmhEZUJrR0oxUUVRcFFOQnFkVUJFS1FEUWNyVkFSQ2pBMEhyMVFFUW9nTkJqZFlCRUtFRFFhN1dBUkNnQXhEZEJoRGNCaERiQmd1SUJBTUNmd0YrQW53Z0FMMGlBMEkvaUtjaEFpQURRaUNJcDBILy8vLy9CM0VpQVVILy83K2dCRXNFUUNBQVJCZ3RSRlQ3SWZtL1JCZ3RSRlQ3SWZrL0lBSWJJQU5DLy8vLy8vLy8vLy8vQUlOQ2dJQ0FnSUNBZ1BqL0FGWWJEd3NnQVVHQWdQRCtBMGtFUUNBQlFZQ0FnUElEU1FSL0lBQVBCVUYvQ3lFQkJTQUFtU0VBSUFGQmdJRE0vd05KQkh3Z0FVR0FnSmovQTBrRWZFRUFJUUVnQUVRQUFBQUFBQUFBUUtKRUFBQUFBQUFBOEwrZ0lBQkVBQUFBQUFBQUFFQ2dvd1ZCQVNFQklBQkVBQUFBQUFBQThMK2dJQUJFQUFBQUFBQUE4RCtnb3dzRklBRkJnSUNPZ0FSSkJIeEJBaUVCSUFCRUFBQUFBQUFBK0wrZ0lBQkVBQUFBQUFBQStEK2lSQUFBQUFBQUFQQS9vS01GUVFNaEFVUUFBQUFBQUFEd3Z5QUFvd3NMSVFBTElBQWdBS0lpQlNBRm9pRUVJQVVnQkNBRUlBUWdCQ0FFUkJIYUl1TTZyWkEvb2tUckRYWWtTM3VwUDZDaVJGRTkwS0JtRGJFL29LSkViaUJNeGMxRnR6K2dva1QvZ3dDU0pFbkNQNkNpUkExVlZWVlZWZFUvb0tJaEJTQUVJQVFnQkNBRVJKcjkzbEl0M3EyL0lBUkVMMnhxTEVTMG9qK2lvYUpFYlpwMHIvS3dzNytnb2tSeEZpUCt4bkc4djZDaVJNVHJtSm1abWNtL29LSWhCQ0FCUVFCSUJId2dBQ0FBSUFRZ0JhQ2lvUVVnQVVFRGRFSGdOV29yQXdBZ0FDQUVJQVdnb2lBQlFRTjBRWUEyYWlzREFLRWdBS0doSWdBZ0FKb2dBa1ViQ3d2Y0NnRVNmeUFCS0FJQUlRUUNmd0pBSUFORkRRQWdBeWdDQUNJRlJRMEFJQUFFZnlBRFFRQTJBZ0FnQlNFT0lBUWhDQ0FDSVJBZ0FDRVBRVEFGSUFVaENTQUVJUWNnQWlFTVFSb0xEQUVMSUFCQkFFY2hBMEdVOEFBb0FnQW9BZ0FFUUNBREJFQWdCQ0VOSUFJaEVTQUFJUkpCSVF3Q0JTQUVJUk1nQWlFVVFROE1BZ3NBQ3lBRFJRUkFJQVFRZXlFS1FUOE1BUXNnQWdSQUFrQWdCQ0VESUFJaEJTQUFJUVFEUUNBRExBQUFJZ1lFUUNBRFFRRnFJUU1nQkNBR1FmKy9BM0UyQWdBZ0JVRi9haUlGUlEwQ0lBUkJCR29oQkF3QkN3c2dCRUVBTmdJQUlBRkJBRFlDQUNBQ0lBVnJJUXBCUHd3Q0N3VWdCQ0VEQ3lBQklBTTJBZ0FnQWlFS1FUOExJUU1EUUFKQUFrQUNRQUpBSUFOQkQwWUVRQ0FUSVFVZ0ZDRURBMEFnQlN3QUFDSUVRZjhCY1VGL2FrSC9BRWtFZnlBRlFRTnhCSDhnQkFVZ0JTZ0NBQ0lFUWY4QmNTRUdJQVFnQkVILy9mdDNhbkpCZ0lHQ2hIaHhCSDhnQmdVRFFDQURRWHhxSVFNZ0JVRUVhaUlGS0FJQUlnUWdCRUgvL2Z0M2FuSkJnSUdDaEhoeFJRMEFDeUFFUWY4QmNRc0xCU0FFQzBIL0FYRWlCRUYvYWtIL0FFa0VRQ0FGUVFGcUlRVWdBMEYvYWlFRERBRUxDeUFFUWI1K2FpSUVRVEpMQkVBZ0JTRUVJQU1oQlNBQUlRTU1Bd1VnQkVFQ2RFSFFER29vQWdBaENTQUZRUUZxSVFjZ0F5RU1RUm9oQXd3R0N3QUZJQU5CR2tZRVFDQUhMUUFBUVFOMklnTWdDVUVhZFdvZ0EwRndhbkpCQjBzRVFDQUpJUVlnQnlFRUlBd2hCU0FBSVFNTUF3VWdCMEVCYWlFRElBbEJnSUNBRUhFRWZ5QURMQUFBUWNBQmNVR0FBVWNFUUNBSklRWWdCeUVFSUF3aEJTQUFJUU1NQlFzZ0IwRUNhaUVESUFsQmdJQWdjUVIvSUFNc0FBQkJ3QUZ4UVlBQlJ3UkFJQWtoQmlBSElRUWdEQ0VGSUFBaEF3d0dDeUFIUVFOcUJTQURDd1VnQXdzaEV5QU1RWDlxSVJSQkR5RUREQWNMQUFVZ0EwRWhSZ1JBSUJFRVFBSkFJQTBoQkNBUklRVWdFaUVEQTBBQ1FBSkFBa0FnQkMwQUFDSUdRWDlxSWd0Qi93QlBEUUFnQkVFRGNVVWdCVUVFUzNFRVFBSi9Ba0FEUUNBRUtBSUFJZ1lnQmtILy9mdDNhbkpCZ0lHQ2hIaHhEUUVnQXlBR1FmOEJjVFlDQUNBRElBUXRBQUUyQWdRZ0F5QUVMUUFDTmdJSUlBUkJCR29oQmlBRFFSQnFJUXNnQXlBRUxRQUROZ0lNSUFWQmZHb2lCVUVFU3dSQUlBWWhCQ0FMSVFNTUFRc0xJQXNoQXlBR0lnUXNBQUFNQVFzZ0JrSC9BWEVMUWY4QmNTSUxJUVlnQzBGL2FpRUxEQUVMREFFTElBdEIvd0JQRFFFTElBUkJBV29oQkNBRElBWTJBZ0FnQlVGL2FpSUZSUTBDSUFOQkJHb2hBd3dCQ3dzZ0JrRytmbW9pQmtFeVN3MEdJQVpCQW5SQjBBeHFLQUlBSVE0Z0JFRUJhaUVJSUFVaEVDQURJUTlCTUNFRERBa0xCU0FOSVFRTElBRWdCRFlDQUNBQ0lRcEJQeUVEREFjRklBTkJNRVlFUUNBSUxRQUFJZ05CQTNZaUJDQU9RUnAxYWlBRVFYQnFja0VIU3dSQUlBNGhCaUFJSVFRZ0VDRUZJQThoQXd3RkJRSkFJQWhCQVdvaEJDQURRWUIvYWlBT1FRWjBjaUlEUVFCSUJFQUNRQ0FFTFFBQVFZQi9haUlGUVQ5TkJFQWdDRUVDYWlFRUlBTkJCblFnQlhJaUEwRUFUZ1JBSUFRaERRd0NDeUFFTFFBQVFZQi9haUlFUVQ5TkJFQWdBMEVHZENBRWNpRURJQWhCQTJvaERRd0NDd3RCK080Q1FkUUFOZ0lBSUFoQmYyb2hGUXdDQ3dVZ0JDRU5DeUFQSUFNMkFnQWdFRUYvYWlFUklBOUJCR29oRWtFaElRTU1DZ3NMQlNBRFFUOUdCRUFnQ2c4TEN3c0xDd3dEQ3lBRVFYOXFJUVFnQmcwQkN5QUVMQUFBUlFSQUlBTUVRQ0FEUVFBMkFnQWdBVUVBTmdJQUN5QUNJQVZySVFwQlB5RUREQU1MQzBINDdnSkIxQUEyQWdBZ0F3Ui9JQVFGUVg4aENrRS9JUU1NQWdzaEZRc2dBU0FWTmdJQVFYOGhDa0UvSVFNTUFBQUxBQXRTQUNBQUJFQUNRQUpBQWtBQ1FBSkFBa0FnQVVGK2F3NEdBQUVDQXdVRUJRc2dBQ0FDUEFBQURBUUxJQUFnQWowQkFBd0RDeUFBSUFJK0FnQU1BZ3NnQUNBQ1BnSUFEQUVMSUFBZ0FqY0RBQXNMQzFRQkFuOGpCQ0VESXdSQmtBRnFKQVFqQkNNRlRnUkFRWkFCRUFBTElBTkJBRUdRQVJCaUdpQURRUm8yQWlBZ0F5QUFOZ0lzSUFOQmZ6WUNUQ0FESUFBMkFsUWdBeUFCSUFJUSt3WWhCQ0FESkFRZ0JBczFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBaUFCTmdJQUlBQkJtT3NCSUFJUXFnTWhBeUFDSkFRZ0F3dVlBUUVEZnlNRUlRRWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUZCQ2pvQUFBSkFBa0FnQUNnQ0VDSUNEUUFnQUJDMUEwVUVRQ0FBS0FJUUlRSU1BUXNNQVFzZ0FDZ0NGQ0lESUFKSkJFQWdBQ3dBUzBFS1J3UkFJQUFnQTBFQmFqWUNGQ0FEUVFvNkFBQU1BZ3NMSUFBZ0FVRUJJQUFvQWlSQkgzRkJ5Z0ZxRVFRQVFRRkdCSDhnQVMwQUFBVkJmd3NhQ3lBQkpBUUxpQWtEQ0g4QmZnUjhJd1FoQkNNRVFUQnFKQVFqQkNNRlRnUkFRVEFRQUFzZ0JFRVFhaUVGSUFDOUlncENQNGluSVFZQ2Z3SkFJQXBDSUlpbklnSkIvLy8vL3dkeElnTkIrOVM5Z0FSSkJIOGdBa0gvL3o5eFFmdkRKRVlOQVNBR1FRQkhJUUlnQTBIOXNvdUFCRWtFZnlBQ0JIOGdBU0FBUkFBQVFGVDdJZmsvb0NJQVJERmpZaHBodE5BOW9DSUxPUU1BSUFFZ0FDQUxvVVF4WTJJYVliVFFQYUE1QXdoQmZ3VWdBU0FBUkFBQVFGVDdJZm0vb0NJQVJERmpZaHBodE5DOW9DSUxPUU1BSUFFZ0FDQUxvVVF4WTJJYVliVFF2YUE1QXdoQkFRc0ZJQUlFZnlBQklBQkVBQUJBVlBzaENVQ2dJZ0JFTVdOaUdtRzA0RDJnSWdzNUF3QWdBU0FBSUF1aFJERmpZaHBodE9BOW9Ea0RDRUYrQlNBQklBQkVBQUJBVlBzaENjQ2dJZ0JFTVdOaUdtRzA0TDJnSWdzNUF3QWdBU0FBSUF1aFJERmpZaHBodE9DOW9Ea0RDRUVDQ3dzRkFuOGdBMEc4alBHQUJFa0VRQ0FEUWIzNzE0QUVTUVJBSUFOQi9MTExnQVJHRFFRZ0JnUkFJQUVnQUVRQUFEQi9mTmtTUUtBaUFFVEtsSk9ua1E3cFBhQWlDemtEQUNBQklBQWdDNkZFeXBTVHA1RU82VDJnT1FNSVFYME1Bd1VnQVNBQVJBQUFNSDk4MlJMQW9DSUFSTXFVazZlUkR1bTlvQ0lMT1FNQUlBRWdBQ0FMb1VUS2xKT25rUTdwdmFBNUF3aEJBd3dEQ3dBRklBTkIrOFBrZ0FSR0RRUWdCZ1JBSUFFZ0FFUUFBRUJVK3lFWlFLQWlBRVF4WTJJYVliVHdQYUFpQ3prREFDQUJJQUFnQzZGRU1XTmlHbUcwOEQyZ09RTUlRWHdNQXdVZ0FTQUFSQUFBUUZUN0lSbkFvQ0lBUkRGallocGh0UEM5b0NJTE9RTUFJQUVnQUNBTG9VUXhZMklhWWJUd3ZhQTVBd2hCQkF3REN3QUxBQXNnQTBIN3crU0pCRWtOQWlBRFFmLy92LzhIU3dSQUlBRWdBQ0FBb1NJQU9RTUlJQUVnQURrREFFRUFEQUVMUVFBaEFpQUtRdi8vLy8vLy8vOEhnMEtBZ0lDQWdJQ0FzTUVBaEw4aEFBTkFJQUpCQTNRZ0JXb2dBS3EzSWdzNUF3QWdBQ0FMb1VRQUFBQUFBQUJ3UWFJaEFDQUNRUUZxSWdKQkFrY05BQXNnQlNBQU9RTVFJQUJFQUFBQUFBQUFBQUJoQkVCQkFTRUNBMEFnQWtGL2FpRUhJQUpCQTNRZ0JXb3JBd0JFQUFBQUFBQUFBQUJoQkVBZ0J5RUNEQUVMQ3dWQkFpRUNDeUFGSUFRZ0EwRVVka0hxZDJvZ0FrRUJhaENDQnlFQ0lBUXJBd0FoQUNBR0JIOGdBU0FBbWprREFDQUJJQVFyQXdpYU9RTUlRUUFnQW1zRklBRWdBRGtEQUNBQklBUXJBd2c1QXdnZ0Fnc0xDd3dCQ3lBQVJJUEl5VzB3WCtRL29rUUFBQUFBQUFBNFE2QkVBQUFBQUFBQU9NT2dJZ3lxSVFnZ0FTQUFJQXhFQUFCQVZQc2grVCtpb1NJTElBeEVNV05pR21HMDBEMmlJZzJoSWdBNUF3QWdBMEVVZGlJSElBQzlRalNJcDBIL0QzRnJRUkJLQkVBZ0RFUnpjQU11aWhtak82SWdDeUFMSUF4RUFBQmdHbUcwMEQyaUlnQ2hJZ3VoSUFDaG9TRU5JQUVnQ3lBTm9TSUFPUU1BSUF4RXdVa2dKWnFEZXptaUlBc2dDeUFNUkFBQUFDNktHYU03b2lJT29TSU1vU0FPb2FFaERpQUhJQUM5UWpTSXAwSC9EM0ZyUVRGS0JFQWdBU0FNSUE2aElnQTVBd0FnRENFTElBNGhEUXNMSUFFZ0N5QUFvU0FOb1RrRENDQUlDeUVKSUFRa0JDQUpDeDRBSUFCQjRPNENSeUFBUVFCSGNTQUFRYkR1QUVkeEJFQWdBQkJEQ3dzSUFDQUFJQUVRZndzSkFDQUFJQUVRaVFjTDRnTUNBMzhCZmdKK0FrQUNRQUpBQWtBZ0FDZ0NCQ0lDSUFBb0FtaEpCSDhnQUNBQ1FRRnFOZ0lFSUFJdEFBQUZJQUFRWEFzaUFrRXJhdzREQUFFQUFRc2dBQ2dDQkNJRElBQW9BbWhKQkg4Z0FDQURRUUZxTmdJRUlBTXRBQUFGSUFBUVhBc2hCQ0FDUVMxR0lRTWdBVUVBUnlBRVFWQnFJZ0pCQ1V0eEJINGdBQ2dDYUFSK0lBQWdBQ2dDQkVGL2FqWUNCQXdFQlVLQWdJQ0FnSUNBZ0lCL0N3VWdCQ0VCREFJTERBTUxJQUlpQVVGUWFpRUNDeUFDUVFsTERRQkJBQ0VDQTBBZ0FVRlFhaUFDUVFwc2FpRUNJQUpCekptejVnQklJQUFvQWdRaUFTQUFLQUpvU1FSL0lBQWdBVUVCYWpZQ0JDQUJMUUFBQlNBQUVGd0xJZ0ZCVUdvaUJFRUtTWEVOQUFzZ0Fxd2hCU0FFUVFwSkJFQURRQ0FCckVKUWZDQUZRZ3ArZkNFRklBQW9BZ1FpQVNBQUtBSm9TUVIvSUFBZ0FVRUJhallDQkNBQkxRQUFCU0FBRUZ3TElnRkJVR29pQWtFS1NTQUZRcTZQaGRmSHd1dWpBVk54RFFBTElBSkJDa2tFUUFOQUlBQW9BZ1FpQVNBQUtBSm9TUVIvSUFBZ0FVRUJhallDQkNBQkxRQUFCU0FBRUZ3TFFWQnFRUXBKRFFBTEN3c2dBQ2dDYUFSQUlBQWdBQ2dDQkVGL2FqWUNCQXRDQUNBRmZTQUZJQU1iREFFTElBQW9BbWdFUUNBQUlBQW9BZ1JCZjJvMkFnUUxRb0NBZ0lDQWdJQ0FnSDhMQzRvREFRUi9JQUFvQWdnaUJTQUFLQUlRUmdSQUlBQWdCVUVCZENJR05nSVFJQUFvQWlRaUJRUkFJQVVvQWdnaUJ5Z0NBQ2dDQ0NFSUlBY2dCaUFJUWY4QmNVR09CMm9SQUFBZ0JTZ0NBQ0lGQkVBRFFDQUZLQUlJSWdZb0FnQW9BZ2doQnlBR0lBQW9BaEFnQjBIL0FYRkJqZ2RxRVFBQUlBVW9BZ0FpQlEwQUN3c0xJQUFvQWpBaUJRUkFBMEFnQlNnQ0NDSUdLQUlBS0FJSUlRY2dCaUFBS0FJUVFRRjBJQWRCL3dGeFFZNEhhaEVBQUNBRktBSUFJZ1VOQUFzTEN5QURJQUFvQWdoQkFYUWlCVFlDRkNBRUlBVkJBWEkyQWhSQkhCQkpJUVVnQUNBQUtBSUlJZ1pCQVdvMkFnZ2dCU0FCTmdJSUlBVWdBallDRENBRklBTTJBaEFnQlNBRU5nSVVJQVVnQmpZQ0dDQUZRUUEyQWdBZ0JTQUFLQUtFQVNJQk5nSUVJQUVnQUVHQUFXb2lBaUFDS0FJQUd5QUZOZ0lBSUFBZ0JUWUNoQUVnQUNBQUtBSjhRUUZxTmdKOElBQW9BandpQUVVRVFDQUZEd3NEUUNBQUtBSUlJZ0VvQWdBb0FoUWhBaUFCSUFVZ0FrSC9BWEZCamdkcUVRQUFJQUFvQWdBaUFBMEFDeUFGQzlRSEFRVi9BbndDUUFKQUFrQUNRQUpBSUFFT0F3QUJBZ01MUVJnaEJVSHJmaUVHREFNTFFUVWhCVUhPZHlFR0RBSUxRVFVoQlVIT2R5RUdEQUVMUkFBQUFBQUFBQUFBREFFTEEwQWdBQ2dDQkNJQklBQW9BbWhKQkg4Z0FDQUJRUUZxTmdJRUlBRXRBQUFGSUFBUVhBc2lBU0lFUVNCR0lBUkJkMnBCQlVseURRQUxBa0FDUUFKQUlBRkJLMnNPQXdBQkFBRUxRUUVnQVVFdFJrRUJkR3NoQkNBQUtBSUVJZ0VnQUNnQ2FFa0VmeUFBSUFGQkFXbzJBZ1FnQVMwQUFBVWdBQkJjQ3lFQkRBRUxRUUVoQkFzQ1FBSkFBa0FEZnlBRFFkN1JBV29zQUFBZ0FVRWdja1lFZnlBRFFRZEpCRUFnQUNnQ0JDSUJJQUFvQW1oSkJIOGdBQ0FCUVFGcU5nSUVJQUV0QUFBRklBQVFYQXNoQVFzZ0EwRUJhaUlEUVFoSkRRRkJDQVVnQXdzTElnTkIvLy8vL3dkeFFRTnJEZ1lCQUFBQUFBSUFDeUFDUVFCSElnY2dBMEVEUzNFRVFDQURRUWhHRFFJTUFRc2dBMFVFUUFKQVFRQWhBd04vSUFOQjU5RUJhaXdBQUNBQlFTQnlSdzBCSUFOQkFra0VRQ0FBS0FJRUlnRWdBQ2dDYUVrRWZ5QUFJQUZCQVdvMkFnUWdBUzBBQUFVZ0FCQmNDeUVCQ3lBRFFRRnFJZ05CQTBrTkFFRURDeUVEQ3dzQ1FBSkFBa0FnQXc0RUFRSUNBQUlMSUFBb0FnUWlBU0FBS0FKb1NRUi9JQUFnQVVFQmFqWUNCQ0FCTFFBQUJTQUFFRndMUVNoSEJFQWpBaUFBS0FKb1JRMEZHaUFBSUFBb0FnUkJmMm8yQWdRakFnd0ZDMEVCSVFFRFFBSkFJQUFvQWdRaUFpQUFLQUpvU1FSL0lBQWdBa0VCYWpZQ0JDQUNMUUFBQlNBQUVGd0xJZ0pCVUdwQkNra2dBa0cvZjJwQkdrbHlSUVJBSUFKQjN3QkdJQUpCbjM5cVFScEpja1VOQVFzZ0FVRUJhaUVCREFFTEN5TUNJQUpCS1VZTkJCb2dBQ2dDYUVVaUFrVUVRQ0FBSUFBb0FnUkJmMm8yQWdRTElBZEZCRUJCK080Q1FSWTJBZ0FnQUVJQUVIeEVBQUFBQUFBQUFBQU1CUXNqQWlBQlJRMEVHZ05BSUFKRkJFQWdBQ0FBS0FJRVFYOXFOZ0lFQ3lNQ0lBRkJmMm9pQVVVTkJSb01BQUFMQUFzZ0FDQUJRVEJHQkg4Z0FDZ0NCQ0lCSUFBb0FtaEpCSDhnQUNBQlFRRnFOZ0lFSUFFdEFBQUZJQUFRWEF0QklISkIrQUJHQkVBZ0FDQUZJQVlnQkNBQ0VJc0hEQVVMSUFBb0FtZ0VRQ0FBSUFBb0FnUkJmMm8yQWdRTFFUQUZJQUVMSUFVZ0JpQUVJQUlRaWdjTUF3c2dBQ2dDYUFSQUlBQWdBQ2dDQkVGL2FqWUNCQXRCK080Q1FSWTJBZ0FnQUVJQUVIeEVBQUFBQUFBQUFBQU1BZ3NnQUNnQ2FFVWlBVVVFUUNBQUlBQW9BZ1JCZjJvMkFnUUxJQUpCQUVjZ0EwRURTM0VFUUFOQUlBRkZCRUFnQUNBQUtBSUVRWDlxTmdJRUN5QURRWDlxSWdOQkEwc05BQXNMQ3lBRXNpTUR0cFM3Q3d1UkFRSUJmd0orQWtBQ1FDQUF2U0lEUWpTSUlnU25RZjhQY1NJQ0JFQWdBa0gvRDBZRVFBd0RCUXdDQ3dBTElBRWdBRVFBQUFBQUFBQUFBR0lFZnlBQVJBQUFBQUFBQVBCRG9pQUJFTFFESVFBZ0FTZ0NBRUZBYWdWQkFBczJBZ0FNQVFzZ0FTQUVwMEgvRDNGQmduaHFOZ0lBSUFOQy8vLy8vLy8vLzRlQWY0TkNnSUNBZ0lDQWdQQS9oTDhoQUFzZ0FBdGhBUUYvSUFBZ0FDd0FTaUlCSUFGQi93RnFjam9BU2lBQUtBSUFJZ0ZCQ0hFRWZ5QUFJQUZCSUhJMkFnQkJmd1VnQUVFQU5nSUlJQUJCQURZQ0JDQUFJQUFvQWl3aUFUWUNIQ0FBSUFFMkFoUWdBQ0FCSUFBb0FqQnFOZ0lRUVFBTEMvRUJBUU4vQWtBQ1FDQUNLQUlRSWdNTkFDQUNFTFVEQkg5QkFBVWdBaWdDRUNFRERBRUxJUVFNQVFzZ0F5QUNLQUlVSWdScklBRkpCRUFnQWlnQ0pDRURJQUlnQUNBQklBTkJIM0ZCeWdGcUVRUUFJUVFNQVFzZ0FVVWdBaXdBUzBFQVNISUVRRUVBSVFNRkFrQWdBU0VEQTBBZ0FDQURRWDlxSWdWcUxBQUFRUXBIQkVBZ0JRUkFJQVVoQXd3Q0JVRUFJUU1NQXdzQUN3c2dBaWdDSkNFRUlBSWdBQ0FESUFSQkgzRkJ5Z0ZxRVFRQUlnUWdBMGtOQWlBQ0tBSVVJUVFnQVNBRGF5RUJJQUFnQTJvaEFBc0xJQVFnQUNBQkVJTUJHaUFDSUFJb0FoUWdBV28yQWhRZ0FTQURhaUVFQ3lBRUN4RUFJQUFFZnlBQUlBRVFuZ0VGUVFBTEM5QUJBUUYvQWtBQ1FBSkFJQUZCQUVjaUFpQUFRUU54UVFCSGNRUkFBMEFnQUMwQUFFVU5BaUFCUVg5cUlnRkJBRWNpQWlBQVFRRnFJZ0JCQTNGQkFFZHhEUUFMQ3lBQ1JRMEJDeUFBTFFBQVJRUkFJQUZGRFFFTUFnc0NRQUpBSUFGQkEwME5BQU5BSUFBb0FnQWlBa0dBZ1lLRWVIRkJnSUdDaEhoeklBSkIvLzM3ZDJweFJRUkFJQUJCQkdvaEFDQUJRWHhxSWdGQkEwc05BUXdDQ3dzTUFRc2dBVVVOQVFzRFFDQUFMUUFBUlEwQ0lBRkJmMm9pQVVVTkFTQUFRUUZxSVFBTUFBQUxBQXRCQUNFQUN5QUFDNzREQXdGL0FYNEJmQ0FCUVJSTkJFQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFGQkNXc09DZ0FCQWdNRUJRWUhDQWtLQ3lBQ0tBSUFRUU5xUVh4eElnRW9BZ0FoQXlBQ0lBRkJCR28yQWdBZ0FDQUROZ0lBREFrTElBSW9BZ0JCQTJwQmZIRWlBU2dDQUNFRElBSWdBVUVFYWpZQ0FDQUFJQU9zTndNQURBZ0xJQUlvQWdCQkEycEJmSEVpQVNnQ0FDRURJQUlnQVVFRWFqWUNBQ0FBSUFPdE53TUFEQWNMSUFJb0FnQkJCMnBCZUhFaUFTa0RBQ0VFSUFJZ0FVRUlhallDQUNBQUlBUTNBd0FNQmdzZ0FpZ0NBRUVEYWtGOGNTSUJLQUlBSVFNZ0FpQUJRUVJxTmdJQUlBQWdBMEgvL3dOeFFSQjBRUkIxckRjREFBd0ZDeUFDS0FJQVFRTnFRWHh4SWdFb0FnQWhBeUFDSUFGQkJHbzJBZ0FnQUNBRFFmLy9BM0d0TndNQURBUUxJQUlvQWdCQkEycEJmSEVpQVNnQ0FDRURJQUlnQVVFRWFqWUNBQ0FBSUFOQi93RnhRUmgwUVJoMXJEY0RBQXdEQ3lBQ0tBSUFRUU5xUVh4eElnRW9BZ0FoQXlBQ0lBRkJCR28yQWdBZ0FDQURRZjhCY2EwM0F3QU1BZ3NnQWlnQ0FFRUhha0Y0Y1NJQkt3TUFJUVVnQWlBQlFRaHFOZ0lBSUFBZ0JUa0RBQXdCQ3lBQUlBSkJ3Z2dSQUFBTEN3dEdBUUovSUFBb0FnQXNBQUJCVUdwQkNra0VRQU5BSUFBb0FnQWlBU3dBQUNBQ1FRcHNRVkJxYWlFQ0lBQWdBVUVCYWpZQ0FDQUJMQUFCUVZCcVFRcEpEUUFMQ3lBQ0N3c0FJQUFnQVNBQ0VJOEhDMHdCQW53Z0FDQUNJQUtpSWdRNUF3QWdBU0FDSUFKRUFBQUFBZ0FBb0VHaUlnTWdBaUFEb2FBaUFxRWlBeUFEb2lBQ0lBS2lJQVNoSUFKRUFBQUFBQUFBQUVDaUlBT2lvS0E1QXdBTDJBSURCbjhEZmdKOEl3UWhBeU1FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNnQTBFWWFpRUZJQU5CRUdvaEJpQURRUWhxSVFjZ0FMMUMvLy8vLy8vLy8vLy9BSU1pQ1NBQnZVTC8vLy8vLy8vLy8vOEFneUlJVkNFQ0lBZ2dDU0FDR3lJS1FqU0lweUVFSUFrZ0NDQUNHeUlJUWpTSXB5RUNJQXEvSVFFZ0NMOGhBQ0FDUWY4UFJ3UkFJQVJCL3c5R0lBaENBRkZ5Qkh3Z0FRVWdCQ0FDYTBIQUFFb0VmQ0FCSUFDZ0JRSjhJQVJCL1F0S0JId2dBVVFBQUFBQUFBQXdGS0loQ3lBQVJBQUFBQUFBQURBVW9pRUJSQUFBQUFBQUFMQnJCU0FCUkFBQUFBQUFBTEJyb2lBQklBSkJ2UVJJSWdJYklRc2dBRVFBQUFBQUFBQ3dhNklnQUNBQ0d5RUJSQUFBQUFBQUFEQVVSQUFBQUFBQUFQQS9JQUliQ3lFTUlBVWdCaUFMRUx3RElBY2dBeUFCRUx3RElBd0xJQU1yQXdBZ0Jpc0RBS0FnQnlzREFLQWdCU3NEQUtDZm9nc0xJUUFMSUFNa0JDQUFDeFlBSUFBZ0FTQUNRb0NBZ0lDQWdJQ0FnSDhRd1FNTGp3RUJBbjhnQUNBQUxBQktJZ0VnQVVIL0FXcHlPZ0JLSUFBb0FoUWdBQ2dDSEVzRVFDQUFLQUlrSVFFZ0FFRUFRUUFnQVVFZmNVSEtBV29SQkFBYUN5QUFRUUEyQWhBZ0FFRUFOZ0ljSUFCQkFEWUNGQ0FBS0FJQUlnRkJCSEVFZnlBQUlBRkJJSEkyQWdCQmZ3VWdBQ0FBS0FJc0lBQW9BakJxSWdJMkFnZ2dBQ0FDTmdJRUlBRkJHM1JCSDNVTEM3RUxBZ1YvQlg0Z0FVRWtTd1JBUWZqdUFrRVdOZ0lBUWdBaEF3VUNRQU5BSUFBb0FnUWlCQ0FBS0FKb1NRUi9JQUFnQkVFQmFqWUNCQ0FFTFFBQUJTQUFFRndMSWdRaUJVRWdSaUFGUVhkcVFRVkpjZzBBQ3dKQUFrQUNRQ0FFUVN0ckRnTUFBUUFCQ3lBRVFTMUdRUjkwUVI5MUlRY2dBQ2dDQkNJRUlBQW9BbWhKQkg4Z0FDQUVRUUZxTmdJRUlBUXRBQUFGSUFBUVhBc2hCQXdCQ3dzZ0FVVWhCUUpBQWtBQ1FDQUJRUkJ5UVJCR0lBUkJNRVp4QkVBQ1FDQUFLQUlFSWdRZ0FDZ0NhRWtFZnlBQUlBUkJBV28yQWdRZ0JDMEFBQVVnQUJCY0N5SUVRU0J5UWZnQVJ3UkFJQVVFUUVFSUlRRWdCQ0VDREFRRklBUWhBZ3dDQ3dBTElBQW9BZ1FpQVNBQUtBSm9TUVIvSUFBZ0FVRUJhallDQkNBQkxRQUFCU0FBRUZ3TElnUkJvUTVxTFFBQVFROUtCRUFnQUNnQ2FFVWlBVVVFUUNBQUlBQW9BZ1JCZjJvMkFnUUxJQUpGQkVBZ0FFSUFFSHhDQUNFRERBY0xJQUVFUUVJQUlRTU1Cd3NnQUNBQUtBSUVRWDlxTmdJRVFnQWhBd3dHQlVFUUlRRWdCQ0VDREFNTEFBc0ZRUW9nQVNBRkd5SUJJQVJCb1E1cUxRQUFTd1IvSUFRRklBQW9BbWdFUUNBQUlBQW9BZ1JCZjJvMkFnUUxJQUJDQUJCOFFmanVBa0VXTmdJQVFnQWhBd3dGQ3lFQ0N5QUJRUXBIRFFBZ0FrRlFhaUlDUVFwSkJFQkJBQ0VCQTBBZ0FVRUtiQ0FDYWlFQklBQW9BZ1FpQWlBQUtBSm9TUVIvSUFBZ0FrRUJhallDQkNBQ0xRQUFCU0FBRUZ3TElnUkJVR29pQWtFS1NTQUJRWm16NXN3QlNYRU5BQXNnQWEwaENTQUNRUXBKQkVBZ0JDRUJBMEFnQ1VJS2ZpSUtJQUtzSWd0Q2Y0VldCRUJCQ2lFQ0RBVUxJQW9nQzN3aENTQUFLQUlFSWdFZ0FDZ0NhRWtFZnlBQUlBRkJBV28yQWdRZ0FTMEFBQVVnQUJCY0N5SUJRVkJxSWdKQkNra2dDVUthcytiTW1iUG16QmxVY1EwQUN5QUNRUWxOQkVCQkNpRUNEQVFMQ3dzTUFnc2dBU0FCUVg5cWNVVUVRQ0FCUVJkc1FRVjJRUWR4UWFYUkFXb3NBQUFoQ0NBQklBSkJvUTVxTEFBQUlnUkIvd0Z4SWdaTEJINGdCaUVDUVFBaEJnTkFJQUlnQmlBSWRISWlCa0dBZ0lEQUFFa2dBU0FBS0FJRUlnSWdBQ2dDYUVrRWZ5QUFJQUpCQVdvMkFnUWdBaTBBQUFVZ0FCQmNDeUlGUWFFT2Fpd0FBQ0lFUWY4QmNTSUNTM0VOQUFzZ0JxMEZJQUloQlNBR0lRSkNBQXNoQ1NBQklBSk5RbjhnQ0swaUNvZ2lDeUFKVkhJRVFDQUJJUUlnQlNFQkRBSUxBMEFnQVNBQUtBSUVJZ0lnQUNnQ2FFa0VmeUFBSUFKQkFXbzJBZ1FnQWkwQUFBVWdBQkJjQ3lJRlFhRU9haXdBQUNJQ1FmOEJjVTBnQkVIL0FYR3RJQWtnQ29hRUlna2dDMVp5QkVBZ0FTRUNJQVVoQVF3REJTQUNJUVFNQVFzQUFBc0FDeUFCSUFKQm9RNXFMQUFBSWdWQi93RnhJZ1pMQkg0Z0JpRUNRUUFoQmdOQUlBSWdBU0FHYkdvaUJrSEg0L0U0U1NBQklBQW9BZ1FpQWlBQUtBSm9TUVIvSUFBZ0FrRUJhallDQkNBQ0xRQUFCU0FBRUZ3TElnUkJvUTVxTEFBQUlnVkIvd0Z4SWdKTGNRMEFDeUFHclFVZ0FpRUVJQVloQWtJQUN5RUpJQUd0SVFvZ0FTQUNTd1IvUW44Z0NvQWhDd04vSUFrZ0MxWUVRQ0FCSVFJZ0JDRUJEQU1MSUFrZ0NuNGlEQ0FGUWY4QmNhMGlEVUovaFZZRVFDQUJJUUlnQkNFQkRBTUxJQXdnRFh3aENTQUJJQUFvQWdRaUFpQUFLQUpvU1FSL0lBQWdBa0VCYWpZQ0JDQUNMUUFBQlNBQUVGd0xJZ1JCb1E1cUxBQUFJZ1ZCL3dGeFN3MEFJQUVoQWlBRUN3VWdBU0VDSUFRTElRRUxJQUlnQVVHaERtb3RBQUJMQkVBRFFDQUNJQUFvQWdRaUFTQUFLQUpvU1FSL0lBQWdBVUVCYWpZQ0JDQUJMUUFBQlNBQUVGd0xRYUVPYWkwQUFFc05BQXRCK080Q1FTSTJBZ0FnQjBFQUlBTkNBWU5DQUZFYklRY2dBeUVKQ3dzZ0FDZ0NhQVJBSUFBZ0FDZ0NCRUYvYWpZQ0JBc2dDU0FEV2dSQUlBZEJBRWNnQTBJQmcwSUFVbkpGQkVCQitPNENRU0kyQWdBZ0EwSi9mQ0VEREFJTElBa2dBMVlFUUVINDdnSkJJallDQUF3Q0N3c2dCNndpQXlBSmhTQURmU0VEQ3dzZ0F3dUpBUUlCZndGK0l3UWhCQ01FUVpBQmFpUUVJd1FqQlU0RVFFR1FBUkFBQ3lBRVFRQTJBZ0FnQkNBQU5nSUVJQVFnQURZQ0xDQUVRWDhnQUVILy8vLy9CMm9nQUVFQVNCczJBZ2dnQkVGL05nSk1JQVJDQUJCOElBUWdBa0VCSUFNUXdBTWhCU0FCQkVBZ0FTQUFJQVFvQWdRZ0JDa0RlS2RxSUFRb0FnaHJhallDQUFzZ0JDUUVJQVVMbHdNQkIzOGpCQ0VHSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBR1FTQnFJUVVnQmlJRElBQW9BaHdpQkRZQ0FDQURJQUFvQWhRZ0JHc2lCRFlDQkNBRElBRTJBZ2dnQXlBQ05nSU1JQU5CRUdvaUFTQUFLQUk4TmdJQUlBRWdBellDQkNBQlFRSTJBZ2hCa2dFZ0FSQU9JZ0ZCZ0dCTEJFQkIrTzRDUVFBZ0FXczJBZ0JCZnlFQkN3SkFBa0FnQVNBQ0lBUnFJZ2hHRFFCQkFpRUhBMEFnQVVFQVRnUkFJQU5CQ0dvZ0F5QUJJQU1vQWdRaUJFc2lDUnNpQXlBQklBUkJBQ0FKRzJzaUJDQURLQUlBYWpZQ0FDQURJQU1vQWdRZ0JHczJBZ1FnQlNBQUtBSThOZ0lBSUFVZ0F6WUNCQ0FGSUFsQkgzUkJIM1VnQjJvaUJ6WUNDRUdTQVNBRkVBNGlCRUdBWUVzRVFFSDQ3Z0pCQUNBRWF6WUNBRUYvSVFRTElBZ2dBV3NpQ0NBRVJnMENJQVFoQVF3QkN3c2dBRUVBTmdJUUlBQkJBRFlDSENBQVFRQTJBaFFnQUNBQUtBSUFRU0J5TmdJQUlBZEJBa1lFZjBFQUJTQUNJQU1vQWdSckN5RUNEQUVMSUFBZ0FDZ0NMQ0lCSUFBb0FqQnFOZ0lRSUFBZ0FUWUNIQ0FBSUFFMkFoUUxJQVlrQkNBQ0N3MEFRUjRRQ2hwQjB3QVFDaG9Mc3dFQ0FYOENmQ0FBUlBKNWN6K1FEQmdwWXdSOFJBQUFBQUFBQVBBL0lRTkU4bmx6UDVBTUdDa0ZJQUJFL3BUR1J6Qkt4VlprQkh4RS9wVEdSekJLeFZZRlFRQVBDd3NoQUVFQlFZQ1U2OXdERUdGQkFXcTNSQUFBQUFGbHpjMUJveUFEb0NFRVFRQkJBUkJoSVFKQkFVR0FsT3ZjQXhCaFFRRnF0MFFBQUFBQlpjM05RYU1nQTZBaUF5QURta0VBUVFFUVlVVWJJQUNpSVFNZ0FTQUVtaUFFSUFJYklBQ2lPUU1BSUFFZ0F6a0RDRUVCQzNVQ0FYOERmRUd3QVJCZklnTVFrZ0VnQUNnQ0JDSUFLd01RSVFRZ0FDc0RDQ0FBS3dNWVJBQUFBQUFBQU9BL29pSUZvQ0VHSUFNZ0FDZ0NBRUVCYWpZQ0FDQURJQVk1QXdnZ0F5QUVPUU1RSUFNZ0JUa0RHQ0FESUFFMkFpQWdBeUFDTmdJa0lBTWdBRFlDbUFFZ0FDQUROZ0tvQVF0d0FnRi9BbnhCc0FFUVh5SURFSklCSUFBb0FnUWlBQ3NEQ0NFRUlBQXJBeEFoQlNBRElBQW9BZ0JCQVdvMkFnQWdBeUFFT1FNSUlBTWdCVGtERUNBRElBQXJBeGhFQUFBQUFBQUE0RCtpT1FNWUlBTWdBVFlDSUNBRElBSTJBaVFnQXlBQU5nS1lBU0FBSUFNMkFxUUJDM29DQVg4RGZFR3dBUkJmSWdNUWtnRWdBQ2dDQkNJQUt3TVlSQUFBQUFBQUFPQS9vaUVFSUFBckF3Z2dCS0FoQlNBQUt3TVFJQVNnSVFZZ0F5QUFLQUlBUVFGcU5nSUFJQU1nQlRrRENDQURJQVk1QXhBZ0F5QUVPUU1ZSUFNZ0FUWUNJQ0FESUFJMkFpUWdBeUFBTmdLWUFTQUFJQU0yQXFBQkMzVUNBWDhEZkVHd0FSQmZJZ01Ra2dFZ0FDZ0NCQ0lBS3dNSUlRUWdBQ3NERUNBQUt3TVlSQUFBQUFBQUFPQS9vaUlGb0NFR0lBTWdBQ2dDQUVFQmFqWUNBQ0FESUFRNUF3Z2dBeUFHT1FNUUlBTWdCVGtER0NBRElBRTJBaUFnQXlBQ05nSWtJQU1nQURZQ21BRWdBQ0FETmdLY0FRdDJBUVYvSUFBb0FoUWdBU2dDRUNJRVFRSjBhaWdDQUNFQ0lBQW9BZ0FnQUNnQ0JDSUZRUUowYWlJR0tBSUFJUU1nQmlBQk5nSUFJQUFvQWdBZ0FrRUNkR29nQXpZQ0FDQUFLQUlVSWdFZ0JFRUNkR29nQlRZQ0FDQURLQUlRUVFKMElBRnFJQUkyQWdBZ0FDQUFLQUlFUVg5cU5nSUVDK2NCQVFOL0l3UWhCQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQkVFRWFpRUNJQUJCZnlBQktBSndJZ05CQW5RZ0EwSC8vLy8vQTBzYkVGODJBZ0FnQUVFVWFpQUJLQUlNUVg5cUVPWUNJQUFvQWhBaUF3UkFJQVFnQUNnQ0REWUNBQ0FDSUFRb0FnQTJBZ0FnQXlBQ0VFMExJQUFnQVRZQ0VDQUFJQUVnQUVFSWFoQlpOZ0lNSUFFb0FuUWlBa1VFUUNBQUlBRW9BbkJCZjJvMkFnUWdCQ1FFRHdzRFFDQUFLQUlBSUFJb0FoQWlBMEVDZEdvZ0FqWUNBQ0FBS0FJVUlBTkJBblJxSUFNMkFnQWdBaWdDQUNJQ0RRQUxJQUFnQVNnQ2NFRi9hallDQkNBRUpBUUxxUUVCQTM4akJDRUJJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBS0FJQUlnSUVRQ0FDRUVNTElBRkJCR29oQWlBQVFZemhBRFlDTENBQUtBSTBJZ01FUUNBQklBQW9BakEyQWdBZ0FpQUJLQUlBTmdJQUlBTWdBaEJOQ3lBQUtBSThFRU1nQUVHTTRRQTJBZ2dnQUNnQ0VDSURSUVJBSUFBb0FoZ1FReUFCSkFRUEN5QUJJQUFvQWd3MkFnQWdBaUFCS0FJQU5nSUFJQU1nQWhCTklBQW9BaGdRUXlBQkpBUUxvZ0lCQW44Z0FFRUFOZ0lzSUFCQkFEWUNNQ0FBUkFBQUFBQUFBQUFBT1FNNElBQkJRR3RCQURZQ0FDQUFRUUEyQWxBZ0FDZ0NTQ0lCQkVCQkVDQUJJQUFvQWt3UVNDQUFRUUEyQWt3Z0FFRUFOZ0pJQ3lBQVFRQTJBbUFnQUNnQ1dDSUJCRUJCRENBQklBQW9BbHdRU0NBQVFRQTJBbHdnQUVFQU5nSllDeUFBSUFCQnhBQnFOZ0prSUFBZ0FFSFVBR28yQW1nZ0FFSHNBR29oQVNBQVFRQTJBbmdnQUNnQ2NDSUNSUVJBSUFBZ0FUWUNmQ0FBUVFBNkFJQUJJQUJFQUFBQUFBQUFBQUE1QTRnQklBQkVHQzFFVlBzaEdVQTVBNUFCRHd0QkRDQUNJQUFvQW5RUVNDQUFRUUEyQW5RZ0FFRUFOZ0p3SUFBZ0FUWUNmQ0FBUVFBNkFJQUJJQUJFQUFBQUFBQUFBQUE1QTRnQklBQkVHQzFFVlBzaEdVQTVBNUFCQys0REFRaC9JQUFvQWdBb0FnZ2hCQ0FBSUFSQi93QnhRUVJxRVFnQUlnWkJBVWdFZjBFQUlRUkJBQVVnQmtFb2JCQktJZ1JGQkVCQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdKQkFEWUNBQ0FDUVg4MkFnUWdBa0dvT0VFQUVBRUxJQVpCS0d3Z0JHb2lCeUFFU3dSL0lBUWhBZ04vSUFKQkFEWUNBQ0FDUVFBMkFpQWdBa0lBTndNSUlBSkNBRGNERUNBQ1FRQTJBaGdnQWtFQU9nQWNJQUpCS0dvaUFpQUhTUTBBSUFRTEJTQUVDd3NoQXlBQUtBSUVJZ2dFUUNBSUlRSURRQ0FGUVNoc0lBTnFJZ2tnQWlrRENEY0RBQ0FKSUFJcEF4QTNBd2dnQlVFb2JDQURhaUFDS0FJWU5nSVFJQVZCS0d3Z0Eyb2dBaWdDSERZQ0ZDQUZRU2hzSUFOcUlBSW9BaUEyQWhnZ0JVRW9iQ0FEYWlBQ0xBQWtPZ0FjSUFWQktHd2dBMm9nQWlnQ0tEWUNJQ0FGUVFGcUlRVWdBaWdDQUNJQ0RRQUxDeUFHUVFGS0JIOGdBeUFIUVZocUlBRVFwQUlnQUNnQ0JBVWdDQXNpQUVVRVFDQUVFRU1QQzBFQUlRRURRQ0FBSUFGQktHd2dBMm9pQWlrREFEY0RDQ0FBSUFJcEF3ZzNBeEFnQUNBQlFTaHNJQU5xS0FJUU5nSVlJQUFnQVVFb2JDQURhaWdDRkRZQ0hDQUFJQUZCS0d3Z0Eyb29BaGcyQWlBZ0FDQUJRU2hzSUFOcUxBQWNPZ0FrSUFBZ0FVRW9iQ0FEYWlnQ0lEWUNLQ0FCUVFGcUlRRWdBQ2dDQUNJQURRQUxJQVFRUXdzS0FDQUFLQUlBS0FJQUMvMENBZ2wvQVh3akJDRUpJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFKUVFScUlRNGdCQ2dDQUNJSEtBSUVJZ3doQ2lBSEtBSUlJZzhoQ0FKL0FrQWdEQ3NERUNBQUt3TVFJQUFyQXhoRUFBQUFBQUFBNEQraW9DSVFaZ1IvSUF3aEJ3d0JCU0FQSVFzZ0RDRUFJQW9oQnlBSUlRMENRQUpBQTBBZ0N5c0RFQ0FRWTBVRVFDQUhCSDhnQUNnQ0FDSUFJQW9nQUJzRklBb0xJUWNnRFFSL0lBc29BZ1FpQUNBSUlBQWJCU0FJQ3lFTElBY2lBQ3NERUNBUVpnMENJQXNoRFF3QkN3c01BUXNnQnlFS0RBSUxJQXNnRDBZRWZ5QUNJQUVvQWdBMkFnQWdCU0FFS0FJQU5nSUFJQU5CQURZQ0FDQUdRUUEyQWdBZ0NTUUVEd1VnRFNFSVFRRUxDd3dCQ3lBSElBeEdCSDhnQWtFQU5nSUFJQVZCQURZQ0FDQURJQUVvQWdBMkFnQWdCaUFFS0FJQU5nSUFJQWtrQkE4RlFRQWdDa1VOQVJvZ0J5Z0NCQ0lBSUFnZ0FCc2hDRUVBQ3dzaEFDQUpJQWcyQWdBZ0RpQUpLQUlBTmdJQUlBRWdBaUFESUFRZ0JTQUdJQTRnQUJDN0J5QUpKQVFMb0JBQ0dYOEVmQ01FSVFjakJFSHdBR29rQkNNRUl3Vk9CRUJCOEFBUUFBc2dCMEV3YWlFWElBZEJJR29oR0NBSFFSQnFJUmtnQVNnQ0JDSUlLQUlnSWdZb0FnQW9BZ2doQlFKL0lBWWdCVUgvQUhGQkJHb1JDQUFoR2lBSFFkZ0FhaUlOUVFBMkFnQWdCMEhnQUdvaUQwRUFOZ0lBSUFkQjNBQnFJZzVCQURZQ0FDQUhRZVFBYWlJUVFRQTJBZ0FnQjBIb0FHb2lFVUVBTmdJQUlBZEI3QUJxSWhKQkFEWUNBQ0FIUVVCckloTkJBRFlDQUNBSFFjZ0FhaUlVUVFBMkFnQWdCMEhFQUdvaUZVRUFOZ0lBSUFkQnpBQnFJaFpCQURZQ0FDQUhRZEFBYWlJS1FRQTJBZ0FnQjBIVUFHb2lERUVBTmdJQUlBRW9BZ1FpQ3lnQ0lDSUdLQUlFS3dNUUlSNGdDeWdDSkNJRktBSUVLd01RSVI4Z0JpZ0NDQ3NERUNFZ0lBVW9BZ2dyQXhBaElRSkFBa0FDUUNBQUtBSXNEZ0lBQVFJTElCY2dIamtEQUNBWElCODVBd2dnR0NBZ09RTUFJQmdnSVRrRENDQUxJQmNnR0JDbUFnd0JDeUFaSUI0NUF3QWdHU0FmT1FNSUlBY2dJRGtEQUNBSElDRTVBd2dnQUNBTElCa2dCeERSQXdzZ0dnc2dBQ2dDTUVvRVFDQWdJQjZoUkZueitNSWZicVVCWmlBaElCK2hSRm56K01JZmJxVUJabklFUUNBSUlCSWdEQ0FSSUFwQkFSQ2xBaUFCQW44Q1FDQVJLQUlBUlEwQUFuOGdFaWdDQUNJR0JFQWdCaWdDQUNnQ0NDRUZBbjhnQmlBRlFmOEFjVUVFYWhFSUFDRWJJQkVvQWdBaUJpZ0NBQ2dDQ0NFRklCc0xJQVlnQlVIL0FIRkJCR29SQ0FCS0RRSUxJQWdnRHlBVUlBMGdFMEVBRUtVQ0lBMG9BZ0FpQlFSQUFrQWdEeWdDQUNJR0JFQWdCaWdDQUNnQ0NDRUZBbjhnQmlBRlFmOEFjVUVFYWhFSUFDRWNJQTBvQWdBaUJpZ0NBQ2dDQ0NFRklCd0xJQVlnQlVIL0FIRkJCR29SQ0FCS0RRRWdEU2dDQUNFRkN5QUJJQVVnRXlnQ0FCREhBeUFCS0FJRVFhQUJhZ3dDQ3dzZ0FTQVBLQUlBSUJRb0FnQVF4UU1nQVNnQ0JFR29BV29MREFFTElBZ2dFQ0FXSUE0Z0ZVRUFFS1VDSUE0b0FnQWlCUVJBQWtBZ0VDZ0NBQ0lHQkVBZ0JpZ0NBQ2dDQ0NFRkFuOGdCaUFGUWY4QWNVRUVhaEVJQUNFZElBNG9BZ0FpQmlnQ0FDZ0NDQ0VGSUIwTElBWWdCVUgvQUhGQkJHb1JDQUJLRFFFZ0RpZ0NBQ0VGQ3lBQklBVWdGU2dDQUJESUF5QUJLQUlFUVp3QmFnd0NDd3NnQVNBUUtBSUFJQllvQWdBUXhnTWdBU2dDQkVHa0FXb0xLQUlBTmdJRUlBQWdBU0FDSUFNZ0JCRFFBeUFCS0FJRUtBS1lBU0lDQkVBZ0FTQUNOZ0lFQlVIQTlBSkIxTVVCUVNjUVlCb0xBa0FDUUNBT0tBSUFSU0FRS0FJQVJTQVNLQUlBUVFCSGNYRkZEUUFnQ0NnQ3BBRU5BQ0FJS0FLY0FRMEFJQWdnRWlBUUlBNGdEQ0FXSUJVUXp3TU1BUXNnRFNnQ0FFVWdEeWdDQUVVZ0VTZ0NBRUVBUjNGeEJFQWdDQ2dDcUFGRkJFQWdDQ2dDb0FGRkJFQWdDQ0FSSUE4Z0RTQUtJQlFnRXhEUEF3c0xDd3NnQ0NnQ3BBRkZJQkFvQWdBaUFFRUFSM0VFUUNBQklBQWdGaWdDQUJER0F5QUJJQUVvQWdRb0FxUUJJZ0EyQWdRZ0JDQUVLQUlNUVFGcU5nSU1RUXdRU1NFRElBUW9BZ2doQWlBRFFRQTJBZ0FnQXlBQ05nSUVJQU1nQURZQ0NDQUNJQVJCQkdvaUFDQUFLQUlBR3lBRE5nSUFJQVFnQXpZQ0NDQUJLQUlFS0FLWUFTSUFCRUFnQVNBQU5nSUVCVUhBOUFKQjFNVUJRU2NRWUJvTEN5QUlLQUtjQVVVZ0RpZ0NBQ0lBUVFCSGNRUkFJQUVnQUNBVktBSUFFTWdESUFFZ0FTZ0NCQ2dDbkFFaUFEWUNCQ0FFSUFRb0FneEJBV28yQWd4QkRCQkpJUU1nQkNnQ0NDRUNJQU5CQURZQ0FDQURJQUkyQWdRZ0F5QUFOZ0lJSUFJZ0JFRUVhaUlBSUFBb0FnQWJJQU0yQWdBZ0JDQUROZ0lJSUFFb0FnUW9BcGdCSWdBRVFDQUJJQUEyQWdRRlFjRDBBa0hVeFFGQkp4QmdHZ3NMSUFnb0FxZ0JSU0FQS0FJQUlnQkJBRWR4QkVBZ0FTQUFJQlFvQWdBUXhRTWdBU0FCS0FJRUtBS29BU0lBTmdJRUlBUWdCQ2dDREVFQmFqWUNERUVNRUVraEF5QUVLQUlJSVFJZ0EwRUFOZ0lBSUFNZ0FqWUNCQ0FESUFBMkFnZ2dBaUFFUVFScUlnQWdBQ2dDQUJzZ0F6WUNBQ0FFSUFNMkFnZ2dBU2dDQkNnQ21BRWlBQVJBSUFFZ0FEWUNCQVZCd1BRQ1FkVEZBVUVuRUdBYUN3c2dDQ2dDb0FGRklBMG9BZ0FpQUVFQVIzRUVRQ0FCSUFBZ0V5Z0NBQkRIQXlBQklBRW9BZ1FvQXFBQklnQTJBZ1FnQkNBRUtBSU1RUUZxTmdJTVFRd1FTU0VESUFRb0FnZ2hBaUFEUVFBMkFnQWdBeUFDTmdJRUlBTWdBRFlDQ0NBQ0lBUkJCR29pQUNBQUtBSUFHeUFETmdJQUlBUWdBellDQ0NBQktBSUVLQUtZQVNJQUJFQWdBU0FBTmdJRUJVSEE5QUpCMU1VQlFTY1FZQm9MQ3lBSVFRQTJBaUFnQ0VFQU5nSWtJQWNrQkE4TEN5QUlLQUlnS0FJRUlnd0VmMEVBSVFCQkFDRUtRUUFoQ1VFQUlRVURRQ0FNS0FJSUlRc2dDVUVCYWlFSlFRd1FTU0lHUVFBMkFnQWdCaUFLTmdJRUlBWWdDellDQ0NBRkJFQWdDaUFHTmdJQUJTQUdJZ0FoQlFzZ0RDZ0NBQ0lNQkVBZ0JpRUtEQUVMQ3lBQUlRUWdCUVZCQUNFRVFRQWhCa0VBSVFsQkFBc2hBQ0FCS0FJRUlndEJ6QUJxSWd3b0FnQWlBUVJBUVF3Z0FTQUxLQUpRRUVnZ0MwRUFOZ0pRSUF4QkFEWUNBQXNnQUVVaUFVVUVRQU5BUVF3UVNTRUtJQXNvQWxBaEJTQUtRUUEyQWdBZ0NpQUZOZ0lFSUFvZ0FDZ0NDRFlDQ0NBRklBd2dEQ2dDQUJzZ0NqWUNBQ0FMSUFvMkFsQWdBQ2dDQUNJQURRQUxDeUFMSUFrMkFsUWdBaUFERUx3SElBZ29BaUFpQWtFQU5nSU1JQUlvQWdRaUFBUkFRVEFnQUNBQ0tBSUlFRWdnQWtFQU5nSUlJQUpCQURZQ0JBc2dDQ2dDSkNJQ1FRQTJBZ3dnQWlnQ0JDSUFCRUJCTUNBQUlBSW9BZ2dRU0NBQ1FRQTJBZ2dnQWtFQU5nSUVDeUFCQkVBZ0J5UUVEd3RCRENBRUlBWVFTQ0FISkFRTHdnY0NCMzhQZkNNRUlRWWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUVvQWdBaENpQUFLQUpRUVFGcUlRUWdBaXNEQ0NFU0lBTXJBd0FoRlNBREt3TUlJUllnQVNzREdDRUxJQUVyQXhBaEV5QUNJQUlyQXdBaUZ5QUJLd01JSWhpaE9RTUFJQUlnRWlBVG9Ua0RDQ0FESUFNckF3QWdHS0VpRERrREFDQURJQU1yQXdnZ0U2RWlEemtEQ0FKL0FrQWdBaXNEQUNJUUlBeEJvTk1DS3dNQUlnMmdZeUFRSUF3Z0RhRmtjVVVOQUNBQ0t3TUlJZzRnRHlBTm9HTWdEaUFQSUEyaFpIRkZEUUJCQVNFSElBUU1BUXNnRUNBTVlRUkFJQUlyQXdnZ0QySUVRRUVCSVFnZ0JBd0NDd3NnQ3lBTUlCQ2hveEFJbTZvTElRVWdBaXNEQ0NJT0lBOWhJQkFnREdKeEJIOGdCQ0VKUVFFRklBc2dEeUFPb2FNUUNKdXFJUWxCQUFzaEJDQUhCRUFnQmlRRUR3c2dGeUFWb1NBUUlBeWhFSFlFUUNBU0lCYWhJQUlyQXdnZ0F5c0RDS0VRZGdSQUlBSXJBd0FpRVNBTG95SU1SRm56K01JZmJxVUJZMFVFUUNBREt3TUFJaGtnQzZNaUQwUlo4L2pDSDI2bEFXTkZCRUFnQWlzRENDSVVJQXVqSWhCRVdmUDR3aDl1cFFGalJRUkFJQU1yQXdnaURTQUxveUlPUkZueitNSWZicVVCWTBVRVFDQUZJQUFvQWxBaUFFb2hBaUFKSUFCS0lnQkJBWE1nQkhJZ0FrRUJjeUFJY2lBQUlBSnhRUUZ6Y1hFRVFDQVJJQmxpSWdjRWZ5QU1RUUVnQlhTM0lneWltNm9oQWlBRklBOGdES0tjcWlJQUlBQWdBaUFDUVFGeEd5QUFJQUpHQkg5QkFRVWdDeUFNb3lBQ3Q2SWdFV0VMR3lJQUlBQkJmMnB6UVFGcXR4QUlSQUFBQUFBQUFQQy9vS3ByUVg5cUlnQWhCQ0FDUVFFZ0JTQUFhM1J0QlVFQUlRUkJBQXNoQXdKQUFrQWdGQ0FOWWlJSUJFQWdFRUVCSUFsMHR5SU5vcHVxSVFJZ0RpQU5vcHlxSVFBZ0N5QU5veUFDdDZJZ0ZHSUVRQ0FDSUFBZ0FrRUJjVVVnQUNBQ1JuSWJJUUFMSUFKQkFTQUpJQWtnQUNBQVFYOXFjMEVCYXJjUUNFUUFBQUFBQUFEd3Y2Q3FhMEYvYWlJRmEzUnRJUUlnQnlBSWNRUkFJQVFnQlVZRVFDQUVJUUFGSUFRZ0JVZ0VRQ0FDUVFFZ0JTQUVJZ0JyZEcwaEFnVWdBMEVCSUFRZ0JTSUFhM1J0SVFNTEN3VWdCU0VBREFJTEJVRUFJUUJCQUNFQ0RBRUxEQUVMSUJFZ0dXRUVRQ0FSUVFFZ0FIUzNvaUFMbzV5cUlRTUZJQlJCQVNBRUlnQjB0NklnQzZPY3FpRUNDd3NnQVNBQUlBcHFOZ0lBSUFFZ0MwRUJJQUIwdDZNaURqa0RHQ0FCSUJnZ0RpQUR0NktnT1FNSUlBRWdFeUFPSUFLM29xQTVBeEFnQmlRRUR3c0xDd3NMQ3dzZ0JrRVFhaUlBSUJjNUF3QWdBQ0FTT1FNSUlBWWdGVGtEQUNBR0lCWTVBd2dnQVNBQUlBWVFwZ0lnQmlRRUM3WUVBZ2QvQlh3akJDRUdJd1JCUUdza0JDTUVJd1ZPQkVCQndBQVFBQXNnQWlnQ0JDZ0NUQ0lIQkVBRFFFRU1FRWtpQkVFQU5nSUFJQVFnQlRZQ0JDQUVJQWNvQWdnMkFnZ2dBd1JBSUFVZ0JEWUNBQVVnQkNFREN5QUhLQUlBSWdjRVFDQUVJUVVNQVFzTEN5QURLQUlJSVFnQ2Z5QURLQUlBSVFrZ0F3UkFJQU5CMExNQ0tBSUFOZ0lBUWRDekFpQUROZ0lBQ3lBSkN5SURSU0lIUlFSQUlBTkJBRFlDQkFzZ0FTZ0NEQ0lGSUFnb0FoQWlCRUdZQVd4cUt3TUFJUXNnQkVHWUFXd2dCV29yQXdnaERDQUhCRUFnQ3lFTklBd2hEZ1VnQ3lFTklBd2hEZ05BSUFNb0FnZ2hDQ0FES0FJQUlnUWhCU0FEUWRDekFpZ0NBRFlDQUVIUXN3SWdBellDQUNBRVJTSUhSUVJBSUFWQkFEWUNCQXNnQVNnQ0RDSUZJQWdvQWhBaUEwR1lBV3hxS3dNQUlnb2dEU0FOSUFwa0d5RU5JQW9nQ3lBTElBcGpHeUVMSUFOQm1BRnNJQVZxS3dNSUlnb2dEaUFPSUFwa0d5RU9JQW9nRENBTUlBcGpHeUVNSUFkRkJFQWdCQ0VEREFFTEN3c2dEU0FMUWFEVEFpc0RBQ0lLb0dORklBMGdDeUFLb1dSRmNpQU9JQXdnQ3FCalJTQU9JQXdnQ3FGa1JYSnlSUVJBSUFZa0JFRUFEd3NnQmtFd2FpRUZJQVpCSUdvaEJDQUdRUkJxSVFNZ0FpZ0NCQ0VCQWtBQ1FBSkFJQUFvQWl3T0FnQUJBZ3NnQlNBTk9RTUFJQVVnRGprRENDQUVJQXM1QXdBZ0JDQU1PUU1JSUFFZ0JTQUVFS1lDREFFTElBTWdEVGtEQUNBRElBNDVBd2dnQmlBTE9RTUFJQVlnRERrRENDQUFJQUVnQXlBR0VORURDeUFHSkFSQkFRdW5BUUFDUUFKQUlBRWdBR1VOQUNBQklBQVFkZzBBREFFTElBSWdBMlZGQkVBZ0FpQURFSFpGRFFFTElBVWdCR1ZGQkVBZ0JTQUVFSFpGRFFFTElBWWdCMlVFUUVFQkR3c2dCaUFIRUhZRVFFRUJEd3NMSUFBZ0FXVkZCRUFnQUNBQkVIWkZCRUJCQUE4TEN5QURJQUpsUlFSQUlBTWdBaEIyUlFSQVFRQVBDd3NnQkNBRlpVVUVRQ0FFSUFVUWRrVUVRRUVBRHdzTElBY2dCbVVFUUVFQkR3c2dCeUFHRUhZTG9RRUJBbjhnQTBFQlNBUkFEd3RCQVNFRkEwQWdBQ2dDQUNBRlFRSjBhaWdDQUNJRUJFQWdCQ0FFS0FJQUtBSUVRZjhEY1VHRUEyb1JBUUFMSUFFb0FnQWdCVUVDZEdvb0FnQWlCQVJBSUFRZ0JDZ0NBQ2dDQkVIL0EzRkJoQU5xRVFFQUN5QUNLQUlBSUFWQkFuUnFLQUlBSWdRRVFDQUVJQVFvQWdBb0FnUkIvd054UVlRRGFoRUJBQXNnQlVFQmFpRUVJQU1nQlVjRVFDQUVJUVVNQVFzTEMxd0JBWDhnQUVIazRBQTJBZ0FnQUNnQ0JDSUJSUVJBSUFCQjRMTUNLQUlBTmdJQVFlQ3pBaUFBTmdJQUR3dEJHQ0FCSUFBb0FnZ1FTQ0FBUVFBMkFnZ2dBRUVBTmdJRUlBQkI0TE1DS0FJQU5nSUFRZUN6QWlBQU5nSUFDNmdCQVFoL0lBQW9BZ1FpQXlBQUtBSUlJZ0pQQkVBUEN3TkFJQU5CbE9jQU5nSUFJQU5CQkdvaUIwRUFOZ0lBSUFOQkNHb2lCRUVBTmdJQUlBRW9BZ1FpQlFSQUlBVWhBZ05BUVFnUVNTSUdRUUEyQWdBZ0JpQUNLQUlFTmdJRUFuOGdCeWdDQUFSL0lBUW9BZ0FoQ0NBRUJTQUVJUWdnQndzaENTQUlJQVkyQWdBZ0NRc2dCallDQUNBQ0tBSUFJZ0lOQUFzZ0FDZ0NDQ0VDQ3lBRFFReHFJZ01nQWtrTkFBc0xzQVFCQ1g4Z0FDZ0NBQ2dDQ0NFRklBQWdCVUgvQUhGQkJHb1JDQUFpQjBFQlNBUi9RUUFoQlVFQUJTQUhRVGhzRUVvaUJVVUVRRUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlBa0VBTmdJQUlBSkJmellDQkNBQ1FhZzRRUUFRQVFzZ0IwRTRiQ0FGYWlJR0lBVkxCSDhnQlNFQ0EzOGdBa0lBTndNQUlBSkNBRGNEQ0NBQ1FnQTNBeEFnQWtJQU53TVlJQUpDQURjRElDQUNRZ0EzQXlnZ0FrRi9OZ0l3SUFKQkFEb0FOQ0FDUVRocUlnSWdCa2tOQUNBRkN3VWdCUXNMSVFNZ0FDZ0NCQ0lKQkVBZ0NTRUNBMEFnQkVFNGJDQURhaUlJSUFKQkNHb2lDa2NFUUNBSUlBb3JBd0E1QXdBZ0JFRTRiQ0FEYWlBQ0t3TVFPUU1JSUFSQk9Hd2dBMm9nQWlzREdEa0RFQ0FFUVRoc0lBTnFJQUlyQXlBNUF4Z0xJQVJCQVdvaENDQUVRVGhzSUFOcUlnUWdBaWtES0RjRElDQUVJQUlwQXpBM0F5Z2dCQ0FDS0FJNE5nSXdJQVFnQWl3QVBEb0FOQ0FDS0FJQUlnSUVRQ0FJSVFRTUFRc0xDeUFIUVFGS0JIOGdBeUFHUVVocUlBRVFxUUlnQUNnQ0JBVWdDUXNpQUVVRVFDQUZFRU1QQzBFQUlRRURRQ0FCUVRoc0lBTnFJZ0lnQUVFSWFpSUdSd1JBSUFZZ0Fpc0RBRGtEQUNBQUlBRkJPR3dnQTJvckF3ZzVBeEFnQUNBQlFUaHNJQU5xS3dNUU9RTVlJQUFnQVVFNGJDQURhaXNER0RrRElBc2dBVUVCYWlFQ0lBQWdBVUU0YkNBRGFpSUJLUU1nTndNb0lBQWdBU2tES0RjRE1DQUFJQUVvQWpBMkFqZ2dBQ0FCTEFBME9nQThJQUFvQWdBaUFBUkFJQUloQVF3QkN3c2dCUkJEQytZREFReC9Jd1FoQkNNRVFUQnFKQVFqQkNNRlRnUkFRVEFRQUFzZ0FpZ0NBQ2dDQ0NFRElBSWdBMEgvQUhGQkJHb1JDQUFpQ0VFQVRnUkFJQWhCQW5SQkJHb1FTaUlEQkVBZ0F5SUxJUWtGUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlEUVFBMkFnQWdBMEYvTmdJRUlBTkJxRGhCQUJBQkN3c2dBaWdDQkNJQ0JFQkJBU0VEQTBBZ0EwRUNkQ0FKYWlBQ0tBSUlOZ0lBSUFOQkFXb2hBeUFDS0FJQUlnSU5BQXNMSUFoQkFVd0VRQ0FMRUVNZ0JDUUVEd3NnQkVFZ2FpRUhJQVJCRUdvaERFRUJJUU1EUUNBRFFRSjBJQWxxSVEwZ0EwRUJhaUlESVFvRFFDQUtRUUowSUFscUtBSUFJUVlnRENBQktBSU1JZ1VnRFNnQ0FDSU9LQUlRSWdKQm1BRnNhaXNEQURrREFDQU1JQUpCbUFGc0lBVnFLd01JT1FNSUlBUWdCaWdDRUNJQ1FaZ0JiQ0FGYWlzREFEa0RBQ0FFSUFKQm1BRnNJQVZxS3dNSU9RTUlJQWNnRENBRUVMb0JJQUFvQWd3aUJTQUdLQUlRSWdaQkJIUnFJZ0lnQnlzREFDQUNLd01Bb0RrREFDQUdRUVIwSUFWcUlnSWdCeXNEQ0NBQ0t3TUlvRGtEQ0NBT0tBSVFJZ1pCQkhRZ0JXb2lBaUFDS3dNQUlBY3JBd0NoT1FNQUlBWkJCSFFnQldvaUFpQUNLd01JSUFjckF3aWhPUU1JSUFwQkFXb2hBaUFLSUFoSUJFQWdBaUVLREFFTEN5QURJQWhJRFFBTElBc1FReUFFSkFRTGhBUUJESDhqQkNFR0l3UkJNR29rQkNNRUl3Vk9CRUJCTUJBQUN5QUFLQUp3SWdsQkFFNEVRQ0FKUVFKMFFRUnFFRW9pQXdSQUlBTWlEU0VLQlVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQTBFQU5nSUFJQU5CZnpZQ0JDQURRYWc0UVFBUUFRc0xJQUFvQW5RaUFBUkFJQUlvQWd3aEJDQUFJUU1EUUNBREtBSVFRUVIwSUFScUlnZENBRGNEQUNBSFFnQTNBd2dnQXlnQ0FDSUREUUFMSUFBaEEwRUJJUUFEUUNBQVFRSjBJQXBxSUFNMkFnQWdBRUVCYWlFQUlBTW9BZ0FpQXcwQUN3c2dDVUVCVEFSQUlBMFFReUFHSkFRUEN5QUdRU0JxSVFjZ0JrRVFhaUVMUVFFaEFBTkFJQUJCQW5RZ0Ntb2hEaUFBUVFGcUlnQWhBd05BSUFOQkFuUWdDbW9vQWdBaEJTQUxJQUVvQWd3aUJDQU9LQUlBSWd3b0FoQWlDRUdZQVd4cUt3TUFPUU1BSUFzZ0NFR1lBV3dnQkdvckF3ZzVBd2dnQmlBRktBSVFJZ2hCbUFGc0lBUnFLd01BT1FNQUlBWWdDRUdZQVd3Z0JHb3JBd2c1QXdnZ0J5QUxJQVlRdWdFZ0FpZ0NEQ0lFSUFVb0FoQWlCVUVFZEdvaUNDQUhLd01BSUFnckF3Q2dPUU1BSUFWQkJIUWdCR29pQlNBSEt3TUlJQVVyQXdpZ09RTUlJQXdvQWhBaUJVRUVkQ0FFYWlJTUlBd3JBd0FnQnlzREFLRTVBd0FnQlVFRWRDQUVhaUlFSUFRckF3Z2dCeXNEQ0tFNUF3Z2dBMEVCYWlFRUlBTWdDVWdFUUNBRUlRTU1BUXNMSUFBZ0NVZ05BQXNnRFJCRElBWWtCQXViQVFFRGZ5QUFLQUlJSVFJZ0FTZ0NDQ0VESUFBb0FnQW9BZ0FoQkNBQUlBUkIvd0J4UVFScUVRZ0FHaUFDS3dNSUlBTXJBd2hqQkVBZ0FpZ0NHQ0lFQkVBZ0F5QUVOZ0lVSUFRZ0F6WUNFQXNnQXlBQ05nSVFJQUlnQXpZQ0dDQUFJQUkyQWdnRklBTW9BaGdpQkFSQUlBSWdCRFlDRkNBRUlBSTJBaEFMSUFJZ0F6WUNFQ0FESUFJMkFoZ2dBQ0FETmdJSUN5QUJRUUEyQWdnTDdBRUJBWDhnQVNBQ0tBSUFOZ0lBSUFFZ0Fpc0RDRGtEQ0NBQktBSVFJZ0pGQkVBUEN5QUJLQUlVSVFNZ0FTQUNLQUlZUmdSQUlBSWdBellDR0FVZ0FpQUROZ0lVSUFFb0FoUWhBd3NnQXdSQUlBTWdBallDRUFzZ0FVRUFOZ0lRSUFGQkFEWUNGQ0FBS0FJSUlRSWdBQ2dDQUNnQ0FDRURJQUFnQTBIL0FIRkJCR29SQ0FBYUlBSXJBd2dnQVNzRENHTUVRQ0FDS0FJWUlnTUVRQ0FCSUFNMkFoUWdBeUFCTmdJUUN5QUJJQUkyQWhBZ0FpQUJOZ0lZSUFJaEFRVWdBU2dDR0NJREJFQWdBaUFETmdJVUlBTWdBallDRUFzZ0FpQUJOZ0lRSUFFZ0FqWUNHQXNnQUNBQk5nSUlDeVVCQW44Z0FDZ0NDQ0lCS0FJWUlRSWdBUVJBSUFFUVF3c2dBQ0FBSUFJUS9RYzJBZ2dMeWdFQkFuOUJJQkJmSWdJZ0FTa0RBRGNEQUNBQ0lBRXBBd2czQXdnZ0FrRUFOZ0lRSUFKQkFEWUNGQ0FDUVFBMkFoZ2dBQ2dDQ0NJQlJRUkFJQUFnQWpZQ0NDQUNEd3NnQUNnQ0FDZ0NBQ0VESUFBZ0EwSC9BSEZCQkdvUkNBQWFJQUVyQXdnZ0Fpc0RDR01FUUNBQktBSVlJZ01FUUNBQ0lBTTJBaFFnQXlBQ05nSVFDeUFDSUFFMkFoQWdBU0FDTmdJWUlBQWdBVFlDQ0FVZ0FpZ0NHQ0lEQkVBZ0FTQUROZ0lVSUFNZ0FUWUNFQXNnQVNBQ05nSVFJQUlnQVRZQ0dDQUFJQUkyQWdnTElBSUxCd0FnQUVFRWFndU1DQUlLZndGOEl3UWhCU01FUVVCckpBUWpCQ01GVGdSQVFjQUFFQUFMSUFWQktHb2hCaUFGUVJScUlRTUNRQUpBQWtBZ0FTZ0NCQ0lKS0FKd0lnZ09BZ0VBQWdzZ0FTZ0NIQ0FKS0FKMEtBSVFJZ0JCQTNScVJBQUFBQUFBQUFBQU9RTUFJQUVvQWtRZ0FFRURkR3BFQUFBQUFBQUFBQUE1QXdBZ0JTUUVEd3NnQlNRRUR3c2dDUkNNQ0NJQ0JFQWdBU2dDSENFR0lBRW9Ba1FoQ3lBQVFRaHFJUWtnQWlFRUEwQUNRQ0FDS0FJUUlnTkJBM1FnQm1vZ0REa0RBQ0FEUVFOMElBdHFSQUFBQUFBQUFBQUFPUU1BSUFJb0FoZ2lBd1IvQTBBZ0F5Z0NDQ2dDRUNJS0lBUkhJQUlnQ2taeVJRUkFJQU1vQWdBaUEwVU5BeUFDSVFRTUFRc0xJQUloQkNBTUlBQXNBQkFFZnlBQktBTHNCaUFES0FJTUtBSVlRUU4wYWdVZ0NRc3JBd0NnSVF3Z0NnVWdBZ3NpQXlBRVJ3UkFJQU1oQWd3Q0N3c0xJQVVrQkE4TElBWkJBRFlDRENBR1FYODJBaEFnQmtFQU5nSUlJQVpCQURZQ0FDQUdRUUEyQWdRZ0FDQUJJQVlRaXdnZ0JoQ0tDQ0FEUVFBMkFnd2dBMEVCTmdJUUlBTkJLQkJLSWdJMkFnUWdBa1VFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQkVFQU5nSUFJQVJCZnpZQ0JDQUVRYWc0UVFBUUFRc2dBeUFDTmdJQUlBTWdBa0VvYWlJTE5nSUlJQUpCQURZQ0RDQUNRWDgyQWhBZ0FrRUFOZ0lJSUFKQkFEWUNBQ0FDUVFBMkFnUWdBa0VBTmdJZ0lBSkJmellDSkNBQ1FRQTJBaHdnQWtFQU5nSVVJQUpCQURZQ0dDQUNJQWhCZjJvaUJCQ0dBU0FDUVJScUlBUVFoZ0VnQlVFQU5nSU1JQVZCQVRZQ0VDQUZRUkFRU2lJSE5nSUVJQWRGQkVCQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdSQkFEWUNBQ0FFUVg4MkFnUWdCRUdvT0VFQUVBRUxJQVVnQnpZQ0FDQUZJQWRCRUdvMkFnZ2dCaUFESUFVUWlRZ2dCeUFIS3dNQW55SU1PUU1BSUFoQkFFb0VRQ0FDS0FJQUlnTWdEQ0FES3dNQW9qa0RBQ0FJUVFGSEJFQkJBU0VBQTBBZ0FFRURkQ0FEYWlJRUlBY3JBd0FnQkNzREFLSTVBd0FnQUVFQmFpSUFJQWhIRFFBTEN5QUhJQWNyQXdpZklndzVBd2dnQWlnQ0ZDSURJQXdnQXlzREFLSTVBd0FnQ0VFQlJ3UkFRUUVoQUFOQUlBQkJBM1FnQTJvaUJDQUhLd01JSUFRckF3Q2lPUU1BSUFCQkFXb2lBQ0FJUncwQUN3c0ZJQWNnQnlzRENKODVBd2dMSUFrb0FuUWlBQVJBSUFJb0FnQWhDaUFCS0FJY0lRZ2dBaWdDRkNFSklBRW9Ba1FoQTBFQUlRRURRQ0FBS0FJUUlnUkJBM1FnQ0dvZ0FVRURkQ0FLYWlzREFEa0RBQ0FFUVFOMElBTnFJQUZCQTNRZ0NXb3JBd0E1QXdBZ0FVRUJhaUVCSUFBb0FnQWlBQTBBQ3dzZ0J4QkRJQUloQUFOQUlBQW9BZ1FRUXlBQVFSUnFJZ0FnQzBrTkFBc2dBaEJESUFZb0FnUWlBU0FHS0FJSUlnSkpCRUFnQVNFQUEwQWdBQ2dDQkJCRElBQkJGR29pQUNBQ1NRMEFDd3NnQVJCRElBVWtCQXU0QWdFRWZ5TUVJUVFqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFFb0Fnd2hBeUFBS0FJUUlnSWdBQ2dDRkVrRVFBTkFJQUlRZ2dFZ0FrR1lBV29pQWlBQUtBSVVTUTBBQ3lBQUtBSVFJUUlMSUFCQkRHb2hCU0FDRUVNZ0FFRUFOZ0lZSUFBZ0EwRi9hallDSENBRFFRRklCRUFnQUVFQU5nSVVJQVZCQURZQ0FDQUFRUUEyQWhBRklBQWdBMEdZQVd3UVNpSUNOZ0lRSUFJRVFDQUZJQUkyQWdBZ0FDQURRWmdCYkNBQ2FqWUNGQVZCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ0pCQURZQ0FDQUNRWDgyQWdRZ0FrR29PRUVBRUFFTEN5QUZFUFlCSUFBb0FnZ2lBa1VFUUNBQUlBRTJBZ2dnQUNBQklBQVFXVFlDQkNBRUpBUVBDeUFFSUFBb0FnUTJBZ0FnQkVFRWFpSURJQVFvQWdBMkFnQWdBaUFERUUwZ0FDQUJOZ0lJSUFBZ0FTQUFFRmsyQWdRZ0JDUUVDeTRCQVg4Z0FDZ0NCQ0lDSUFBb0FnaFBCRUFQQ3dOQUlBSWdBUkRoQVNBQ1FReHFJZ0lnQUNnQ0NFa05BQXNMdUFFQkFuOGdBQ2dDQkJCRElBQkJBRFlDRENBQUlBRTJBaEFnQVVFQVNBUkFJQUJCQURZQ0NDQUFRUUEyQWdBZ0FFRUFOZ0lFRHdzZ0FDQUJRUUZxSWdOQkJIUVFTaUlCTmdJRUlBRkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ0pCQURZQ0FDQUNRWDgyQWdRZ0FrR29PRUVBRUFFTElBQWdBVFlDQUNBQUlBTkJCSFFnQVdvaUFEWUNDQ0FBSUFGTkJFQVBDeUFCUVFBZ0FVRi9jeUFBSUFGQkVHb2lBU0FBSUFGTEcycEJFR3BCY0hFUVlob0xoZ1VCQm44akJDRUVJd1JCMEFCcUpBUWpCQ01GVGdSQVFkQUFFQUFMSUFSQlBHb2lDVUVlTmdJQUlBQXNBRXdFUUNBQUlBRW9BbkEyQWxBTElBUkJLR29pQjBFQU5nSU1JQWRCSGpZQ0VDQUhRZndBRUVvaUJUWUNCQ0FGUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJR1FRQTJBZ0FnQmtGL05nSUVJQVpCcURoQkFCQUJDeUFISUFVMkFnQWdCeUFGUWZ3QWFqWUNDQ0FFUVJScUlnVkJBRFlDRENBRlFSNDJBaEFnQlVIOEFCQktJZ1kyQWdRZ0JrVUVRRUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlDRUVBTmdJQUlBaEJmellDQkNBSVFhZzRRUUFRQVFzZ0JTQUdOZ0lBSUFVZ0JrSDhBR28yQWdnZ0JFRUFOZ0lNSUFSQkhqWUNFQ0FFUWZ3QUVFb2lCallDQkNBR1JRUkFRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSUlRUUEyQWdBZ0NFRi9OZ0lFSUFoQnFEaEJBQkFCQ3lBRUlBWTJBZ0FnQkNBR1Fmd0FhallDQ0NBRVFVQnJJZ1lnQVNBQ0lBTWdBQ2dDSUNBQUtBSlVJQUFvQWxBZ0FDZ0NXQ0FISUFVZ0JDQUpFT2NISUFrb0FnQWlBVUYvVEFSQUlBY2dCU0FFSUFFUTFBTWdCQ2dDQkJCRElBVW9BZ1FRUXlBSEtBSUVFRU1nQkNRRUR3c2dBU0VDQTBBZ0FTQUNSZ1JBSUFBZ0J5Z0NBQ0FCUVFKMGFpZ0NBQ0FGS0FJQUlBRkJBblJxS0FJQUVLZ0lCU0FDSUFBb0FtUWdCeUFGSUFRUTJBY2dBQ0FIS0FJQUlBSkJBblJxS0FJQUlBVW9BZ0FnQWtFQ2RHb29BZ0FRMkFFTElBQWdCeWdDQUNBQ1FRSjBhaWdDQUNBRktBSUFJQUpCQW5ScUtBSUFJQVFvQWdBZ0FrRUNkR29vQWdBZ0FpQUpLQUlBRUtjSUlBSkJmMm9oQXlBSktBSUFJUUVnQWtFQVNnUkFJQU1oQWd3QkN3c2dCeUFGSUFRZ0FSRFVBeUFFS0FJRUVFTWdCU2dDQkJCRElBY29BZ1FRUXlBRUpBUUwzZ1FCQkg4Z0FDQUJLd01BT1FNQUlBQWdBU3NEQ0RrRENDQUFJQUVwQXhBM0F4QWdBQ0FCS1FNWU53TVlJQUFnQVNrRElEY0RJQ0FBSUFFcEF5ZzNBeWdnQUNBQktRTXdOd013SUFBZ0FTa0RPRGNET0NBQUlBRW9Ba0EyQWtBZ0FFSEE2QUEyQWtRZ0FFRUFOZ0pJSUFCQkFEWUNUQ0FCS0FKSUlnTUVRQU5BUVJBUVNTRUNJQUFvQWt3aEJDQUNRUUEyQWdBZ0FpQUVOZ0lFSUFJZ0F5c0RDRGtEQ0NBQUtBSklCRUFnQkNBQ05nSUFCU0FBSUFJMkFrZ0xJQUFnQWpZQ1RDQURLQUlBSWdNTkFBc0xJQUJCMU9nQU5nSkVJQUFnQVNnQ1VEWUNVQ0FBUWNUbUFEWUNWQ0FBUWRnQWFpSUVRUUEyQWdBZ0FFRUFOZ0pjSUFFb0FsZ2lBd1JBQTBCQkRCQkpJUUlnQUNnQ1hDRUZJQUpCQURZQ0FDQUNJQVUyQWdRZ0FpQURLQUlJTmdJSUlBVWdCQ0FFS0FJQUd5QUNOZ0lBSUFBZ0FqWUNYQ0FES0FJQUlnTU5BQXNMSUFCQnNPWUFOZ0pVSUFBZ0FTZ0NZRFlDWUNBQUlBRXBBbVEzQW1RZ0FFSEU1Z0EyQW13Z0FFSHdBR29pQkVFQU5nSUFJQUJCQURZQ2RDQUJLQUp3SWdORkJFQWdBRUd3NWdBMkFtd2dBQ0FCS0FKNE5nSjRJQUFnQVNrQ2ZEY0NmQ0FBSUFFcEFvUUJOd0tFQVNBQUlBRXBBb3dCTndLTUFTQUFJQUVvQXBRQk5nS1VBUThMQTBCQkRCQkpJUUlnQUNnQ2RDRUZJQUpCQURZQ0FDQUNJQVUyQWdRZ0FpQURLQUlJTmdJSUlBVWdCQ0FFS0FJQUd5QUNOZ0lBSUFBZ0FqWUNkQ0FES0FJQUlnTU5BQXNnQUVHdzVnQTJBbXdnQUNBQktBSjROZ0o0SUFBZ0FTa0NmRGNDZkNBQUlBRXBBb1FCTndLRUFTQUFJQUVwQW93Qk53S01BU0FBSUFFb0FwUUJOZ0tVQVFzdkFRRi9JQUFvQWdRaUFpQUFLQUlJVHdSQUR3c0RRQ0FDSUFFUTVBTWdBa0dZQVdvaUFpQUFLQUlJU1EwQUN3dGtBUUovSUFBb0FoQWlBU0FBS0FJVUlnSkpCSDhEUUNBQkxBQUxRUUJJQkVBZ0FTZ0NBQkJESUFBb0FoUWhBZ3NnQVVFTWFpSUJJQUpKRFFBTElBQW9BaEFGSUFFTEVFTWdBRUVBTmdJWUlBQkJmellDSENBQVFnQTNBZ2dnQUVJQU53SVFDLzRIQWd0L0JYd2pCQ0VFSXdSQjRBRnFKQVFqQkNNRlRnUkFRZUFCRUFBTElBUkIyQUZxSVF3Z0JFSElBV29oQXlBRVFhQUJhaUVISUFSQitBQnFJUWtnQkVIUUFHb2hDaUFFUVNocUlRc0NRQUpBQWtBZ0FDZ0NLQTRDQVFBQ0N5QUFJQUFyQTVBQ1JBQUFBQUFBQUZsQW9pQUJLQUp3dHlJT29pQU9vamtEZ0FJTUFRc2dCQ1FFRHdzZ0FTZ0NkQ0lJUlFSQUlBUWtCQThMQTBBZ0FpZ0NEQ0lGSUFnb0FoQWlCa0dZQVd4cUlnMHJBd0FoRHlBR1FaZ0JiQ0FGYWlFRkFrQUNRQ0FQSUFBckE0QUNJZzVrRFFBZ0JTc0RDQ0lRSUE1a0RRQWdEeUFPbWlJUFl5QVFJQTlqY2cwQURBRUxJQU5DQURjREFDQURRZ0EzQXdnZ0RTc0RBQ0VQSUFVckF3Z2hFQ0FIUWdBM0F3Z2dCMElBTndNUUlBY2dEemtER0NBSElCQTVBeUFnQjBHQTV3QTJBZ0FnQ1NBT21pSVBPUU1JSUFrZ0R6a0RFQ0FKSUE4NUF4Z2dDU0FPT1FNZ0lBbEJnT2NBTmdJQUlBb2dEamtEQ0NBS0lBODVBeEFnQ2lBT09RTVlJQW9nRGprRElDQUtRWURuQURZQ0FDQUxJQTg1QXdnZ0N5QU9PUU1RSUFzZ0Rqa0RHQ0FMSUE0NUF5QWdDMEdBNXdBMkFnQWdCQ0FQT1FNSUlBUWdEemtERUNBRUlBNDVBeGdnQkNBUE9RTWdJQVJCZ09jQU5nSUFJQWNnQ1NBREVQZ0JRUUZHQkVBZ0FpZ0NEQ0lGSUFnb0FoQWlCa0dZQVd4cUlBTXJBd0E1QXdBZ0JrR1lBV3dnQldvZ0F5c0RDRGtEQ0FVQ1FDQUhJQW9nQXhENEFVRUJSZ1JBSUFJb0Fnd2lCU0FJS0FJUUlnWkJtQUZzYWlBREt3TUFPUU1BSUFaQm1BRnNJQVZxSUFNckF3ZzVBd2dNQVFzZ0J5QUxJQU1RK0FGQkFVWUVRQ0FDS0FJTUlnVWdDQ2dDRUNJR1FaZ0JiR29nQXlzREFEa0RBQ0FHUVpnQmJDQUZhaUFES3dNSU9RTUlEQUVMSUFjZ0JDQURFUGdCUVFGR0JFQWdBaWdDRENJRklBZ29BaEFpQmtHWUFXeHFJQU1yQXdBNUF3QWdCa0dZQVd3Z0JXb2dBeXNEQ0RrRENBVWdERUhBOUFKQnZyTUJRU1VRWUNJRklBVW9BZ0JCZEdvb0FnQnFLQUljSWdZMkFnQWdCaUFHS0FJRVFRRnFOZ0lFSUF4QnFQc0NFRk1pQmlnQ0FDZ0NIQ0VOSUFaQkNpQU5RVDl4UVlvQmFoRURBQ0VHSUF3UVZDQUZJQVlRcEFFZ0JSQkZDd3NMQ3lBSUtBSUFJZ2dOQUFzZ0FTZ0NkQ0lCUlFSQUlBUWtCQThMSUFJb0Fnd2hBaUFBS3dPb0FpRU9BMEFnQVNnQ0VDSURRWmdCYkNBQ2FpSUhLd01BbkNFUEFud2dBMEdZQVd3Z0Ftb2lBeXNEQ0NFU0lBOGdEbU1FUUNBQUlBQXJBNWdDUkFBQUFBQUFBQUJBb0RrRG1BSWdBQ0FPUkFBQUFBQUFBQURBb0NJT09RT29BZ3NnRWd1Y0loQWdBQ3NEc0FJaUVXTUVRQ0FBSUFBckE1Z0NSQUFBQUFBQUFBQkFvRGtEbUFJZ0FDQVJSQUFBQUFBQUFBREFvRGtEc0FJTElBY2dEemtEQUNBRElCQTVBd2dnQVNnQ0FDSUJEUUFMSUFRa0JBc1VBQ0FBUVF4cUlBRkJmMm9nQUVFZ2FoQ3JDQXVrQVFFRGZ5TUVJUUVqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQjlPY0FOZ0lBSUFCQjVPQUFOZ0xnQXlBQUtBTGtBeUlDQkVCQkdDQUNJQUFvQXVnREVFZ2dBRUVBTmdMb0F5QUFRUUEyQXVRREN5QUFRWXpoQURZQ3VBSWdBQ2dDd0FJaUFrVUVRQ0FBS0FMSUFoQkRJQUVrQkE4TElBRWdBQ2dDdkFJMkFnQWdBVUVFYWlJRElBRW9BZ0EyQWdBZ0FpQURFRTBnQUNnQ3lBSVFReUFCSkFRTFh3RUJmeUFCSUFBb0FoeEJBV29nQUNnQ0dHc2lBV3NpQWtVRVFBOExJQUJCREdvZ0FoQzJDQ0FBS0FJUUlBRkJER3hxSWdFZ0FDZ0NGRThFUUE4TElBQkJJR29oQWdOQUlBRWdBaERoQVNBQlFReHFJZ0VnQUNnQ0ZFa05BQXNMM3dFQkEzOGdBU2dDRUNFQ0lBQkJBRFlDR0NBQUlBSkJmMm8yQWh3Z0FrRUJTQVJBSUFCQkFEWUNGQ0FBUVFBMkFnd2dBRUVBTmdJUUlBQkJrT0FBTmdJQUlBQkJBRFlDQkNBQUlBRTJBZ2dnQUNBQklBQVFiRFlDQkNBQVFhVGxBRFlDQUE4TElBQWdBa0VDZEJCS0lnTTJBaEFnQTBVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUJFRUFOZ0lBSUFSQmZ6WUNCQ0FFUWFnNFFRQVFBUXNnQUNBRE5nSU1JQUFnQWtFQ2RDQURhallDRkNBQVFaRGdBRFlDQUNBQVFRQTJBZ1FnQUNBQk5nSUlJQUFnQVNBQUVHdzJBZ1FnQUVHazVRQTJBZ0FMalFNQkNuOGdBRUVFYWlJS0tBSUFJZ1VnQUNnQ0NFWUVRQThMSUFGQkFXb2hCeUFCUVFCT0JFQWdCMEVDZENJRUVFb2lCa1VFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQTBFQU5nSUFJQU5CZnpZQ0JDQURRYWc0UVFBUUFRc2dCMEVDZENBR2FpQUdTd1JBSUFaQkFDQUJRUUowUVFOeVFRUnFRWHh4RUdJYUN5QUdJUU1nQkJCS0lnUUVRQ0FHSVFzZ0F5RUlJQVFpRENFSkJVSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUJFRUFOZ0lBSUFSQmZ6WUNCQ0FFUWFnNFFRQVFBUXNMSUFVRVFBTkFJQUlnQlVFRWFpQUNLQUlBS0FJSVFUOXhRWW9CYWhFREFDSUVRUUowSUFocUlRTWdCRUVDZENBSmFpRUVJQU1vQWdBRWZ5QUVJZ01vQWdBRklBUUxJQVUyQWdBZ0F5QUZOZ0lBSUFVb0FnQWlCUTBBQ3dzZ0FVRUFTQVJBUVFBaEF3VkJBQ0VDUVFBaEF3TkFJQUpCQW5RZ0NHb29BZ0FpQkFSQUlBTWdDaUFER3lBRU5nSUFJQUpCQW5RZ0NXb29BZ0FoQXdzZ0FrRUJhaUVFSUFJZ0FVZ0VRQ0FFSVFJTUFRc0xDeUFBSUFNMkFnZ2dBMEVBTmdJQUlBd1FReUFMRUVNTFJRSUJmd0o4SXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBQ3NEQUNFQ0lBRVFGUm9nQUNBQktBSUF0MEVDRUFxM295SURPUU1BSUFFa0JDQURJQUtoQzlVRUFnZC9CbndqQkNFREl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN3SkFBa0FDUUFKQUFrQUNRQ0FCSUFCclFRUjFEZ1lGQlFBQkFnTUVDeUFCUVhocUlnSXJBd0FoQ1NBQUt3TUlJUXNnQVVGd2FpSUJLd01BSWdvZ0FDc0RBQ0lNUWFEVEFpc0RBQ0lOb1NJT1kwVUVRQ0FKSUFzZ0RhRmpSU0FLSUF3Z0RhQmpSU0FLSUE1a1JYSnlEUVVMSUFBZ0FVY0VRQ0FBSUFvNUF3QWdBQ0FKT1FNSUN5QUJJQXc1QXdBZ0FpQUxPUU1BREFRTElBQWdBRUVRYWlBQlFYQnFFTHNCR2d3REN5QUFJQUJCRUdvZ0FFRWdhaUFCUVhCcUVMSUNHZ3dDQ3lBQUlBQkJFR29nQUVFZ2FpQUFRVEJxSUFGQmNHb1FzUUlhREFFTElBQWdBRUVRYWlBQVFTQnFJZ0lRdXdFYUlBRWdBRUV3YWlJRVJnMEFRYURUQWlzREFDRUtBMEFDUUNBRUt3TUlJUXNDUUFKQUlBUXJBd0FpQ1NBQ0t3TUFJZ3dnQ3FFaURXTU5BQ0FMSUFJckF3Z2dDcUZqUlNBSklBd2dDcUJqUlNBSklBMWtSWEp5UlEwQUlBY2hBZ3dCQ3lBRElBazVBd0FnQXlBTE9RTUlJQVFoQlFOQUFrQWdBaUFGUndSQUlBVWdBaXNEQURrREFDQUZJQUlyQXdnNUF3Z0xJQU1yQXdBaENTQUFJQUpHQkVBZ0FDRUNEQUVMSUFrZ0FrRndhaUlHS3dNQUlnc2dDcUVpREdORkJFQWdBeXNEQ0NBQ1FYaHFLd01BSUFxaFkwVWdDU0FLSUF1Z1kwVWdDU0FNWkVWeWNnMEJDeUFDSVFVZ0JpRUNEQUVMQ3lBQ0lBazVBd0FnQWlBREt3TUlPUU1JSUFkQkFXb2lBa0VJUmcwQkN5QUJJQVJCRUdvaUJrWU5BZ0ovSUFRaENDQUNJUWNnQmlFRUlBZ0xJUUlNQVFzTElBTWtCQ0FCSUFSQkVHcEdEd3NnQXlRRVFRRUxCZ0JCR3hBdUN3WUFRUThRT3dzSUFFRUxFRDlCQUFzSUFFRUpFRUZCQUFzSUFFRUNFQ3hCQUF0YUFRTi9JQUFvQWdRaEJTQUNCRUFnQlVFSWRTRUVJQVZCQVhFRVFDQUNLQUlBSUFScUtBSUFJUVFMQ3lBQUtBSUFJZ0FvQWdBb0Fod2hCaUFBSUFFZ0FpQUVhaUFEUVFJZ0JVRUNjUnNnQmtFSGNVR1dDV29SRVFBTEZRQWdBQkNRQ2lBQUlBRTJBZ1FnQUNBQ0VNd0NDeGNBSUFCQjhBSnFJQUVnQWlBRElBUWdCU0FHRUlrSkMxZ0JBWDhnQUNnQ0FDSUFJZ0VvQWdRZ0FTZ0NBR3NFUUNBQUtBSUVJQUFvQWdBaUFHdEJBRXNFZnlBQUxBQUFCVUVBQ3lJQVFmOEJjVUhGQUVjRVFDQUFRZjhCY1VIZkFFWWdBRUgvQVhGQkxrWnlEd3NMUVFFTGJ3RURmeU1FSVFFakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBRkJCR29oQWlBQVFZemhBRFlDQUNBQUtBSUlJZ01FUUNBQklBQW9BZ1EyQWdBZ0FpQUJLQUlBTmdJQUlBTWdBaEJOQ3lBQUtBSVFFRU1nQUVIUXRBSW9BZ0EyQWdCQjBMUUNJQUEyQWdBZ0FTUUVDMEVBSUFCQm5Jc0JOZ0lBSUFCQkdUb0FCQ0FBUVFFNkFBVWdBRUVCT2dBR0lBQkJBVG9BQnlBQVFlU2RBVFlDQUNBQUlBRTJBZ2dnQUNBQ0tRSUFOd0lNQzJnQkFuOGpCQ0VESXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQVFSUVFUQ0VFSUFFb0FnQWhBU0FESUFJcEFnQTNBd0FnQTBFUWFpSUFJQU1wQWdBM0FnQWdBMEVJYWlJQ0lBQVF1UUlnQUNBQ0tRSUFOd0lBSUFRZ0FTQUFFUGtESUFNa0JDQUVDd3dBSUFBb0Fnd2dBUkRDQVFzbEFDQUFRZkFDYWtFVUVFd2lBQ0FCS0FJQUlBSXNBQUJCQUVjZ0F5Z0NBQkM5Q1NBQUM3b0JBUUovSUFBZ0FVY0VRQUpBSUFBc0FBQWlBa0hmQUVjRVFDQUNRVkJxUVFwUERRRWdBQ0VDQTBBZ0FTQUNRUUZxSWdKR0JFQWdBU0VBREFNTElBSXNBQUJCVUdwQkNra05BQXNNQVFzZ0FFRUJhaUlDSUFGSEJFQWdBaXdBQUNJQ1FWQnFRUXBKQkVBZ0FFRUNhaUVBREFJTElBSkIzd0JHQkVBZ0FFRUNhaUVDQTBBZ0FTQUNSZzBESUFJc0FBQWlBMEZRYWtFS1NRUkFJQUpCQVdvaEFnd0JDd3NnQWtFQmFpQUFJQU5CM3dCR0d3OExDd3NMSUFBTERRQWdBRUh3QW1vZ0FSRGFDUXRMQVFKL0l3UWhBU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUNnQ0JDRUNJQUFvQWdCQktCQnJJQUVnQWlnQ0NCRERBaUFCSUFBb0FnQVFWaUFBS0FJQVFTa1FheUFCSkFRTEZBQWdBRUVNYWlBQlFYOXFJQUJCSUdvUWhBRUxVZ0VCZnlNRUlRTWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCRkJCTUlRQWdBU2dDQUNFQklBTWdBaWtDQURjREFDQURRUWhxSWdJZ0F5a0NBRGNDQUNBQUlBRWdBaERxQ1NBREpBUWdBQXRhQVFGL0lBRWdBQ2dDSEVFQmFpQUFLQUlZYXlJQmF5SUNSUVJBRHdzZ0FFRU1haUFDRU5FSklBQW9BaEFnQVVFRGRHb2lBU0FBS0FJVUlnSlBCRUFQQ3dOQUlBRWdBQ3NESURrREFDQUJRUWhxSWdFZ0Fra05BQXNMSkFFQmZ5QUJLQUlNSWdFb0FnQW9BaGdoQWlBQUlBRWdBa0gvQVhGQmpnZHFFUUFBQ3hnQUlBQkI4QUpxUVF3UVRDSUFJQUVvQWdBUTh3a2dBQXZ5RlFFR2Z5TUVJUVVqQkVFZ2FpUUVJd1FqQlU0RVFFRWdFQUFMSUFWQkVHb2hBaUFGUVFocUlRUUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUlBQW9BZ1FnQUNnQ0FDSURhMEVBU3dSL0lBTXNBQUFGUVFBTFFSaDBRUmgxUWVFQWF3NFdBQThCQWdNUEJBOEZEdzhHQndnSkNnc01EUThQRGc4TEFrQUNRQUpBQWtBQ1FDQUFLQUlFSUFBb0FnQWlBV3RCQVVzRWZ5QUJMQUFCQlVFQUMwRVlkRUVZZFVIT0FHc09JUUlFQkFRRUF3UUVCQVFFQkFRRUJBUUVCQVFBQkFRQkJBUUVCQVFFQkFRRUFRUUxJQUFnQUNnQ0FFRUNhallDQUNBQVFmV0hBaEJRSVFBTUV3c2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQmdJZ0NFRkFoQUF3U0N5QUFJQUFvQWdCQkFtbzJBZ0FnQUVHS2lBSVFVQ0VBREJFTElBQWdBQ2dDQUVFQ2FqWUNBQ0FBUVpXSUFoQlFJUUFNRUF0QkFDRUFEQThMQWtBQ1FBSkFBa0FDUUNBQUtBSUVJQUFvQWdBaUEydEJBVXNFZnlBRExBQUJCVUVBQzBFWWRFRVlkVUhzQUdzT0N3QUJCQUlFQkFRRUJBUURCQXNnQUNBQUtBSUFRUUpxTmdJQUlBQkJuNGdDRUZBaEFBd1NDeUFBSUFBb0FnQkJBbW8yQWdBZ0FFR3FpQUlRVUNFQURCRUxJQUFnQUNnQ0FFRUNhallDQUNBQVFiU0lBaEJRSVFBTUVBc2dBQ0FBS0FJQVFRSnFOZ0lBSUFJZ0FFSG9BbW8yQWdBZ0FpQUFMQURvQWpvQUJDQUNRUUU2QUFVZ0FFRUFPZ0RvQWlBQlFRQkhJZ1lnQUN3QTZRSkJBRWR5SVFjZ0JDQUFRZWtDYWlJRE5nSUFJQVFnQXl3QUFEb0FCQ0FFUVFFNkFBVWdBeUFIT2dBQUlBVWdBQkJkSWdNMkFnQWdBd1IvSUFZRVFDQUJRUUU2QUFBTElBQWdCUkNFQkFWQkFBc2hBQ0FFTEFBRkJFQWdCQ2dDQUNBRUxBQUVPZ0FBQ3lBQ0xBQUZCRUFnQWlnQ0FDQUNMQUFFT2dBQUN3d1BDMEVBSVFBTURnc0NRQUpBQWtBQ1FBSkFBa0FnQUNnQ0JDQUFLQUlBSWdGclFRRkxCSDhnQVN3QUFRVkJBQXRCR0hSQkdIVkIxZ0JyRGlFRUJRVUZCUVVGQlFVRkJRQUZCUVVCQlFVRkJRVUZBZ1VGQlFVRkJRVUZCUU1GQ3lBQUlBQW9BZ0JCQW1vMkFnQWdBRUcraUFJUVVDRUFEQklMSUFBZ0FDZ0NBRUVDYWpZQ0FDQUFRZENJQWhCUUlRQU1FUXNnQUNBQUtBSUFRUUpxTmdJQUlBQkI4QUpxRVBVSklRQU1FQXNnQUNBQUtBSUFRUUpxTmdJQUlBQkIyb2dDRUZBaEFBd1BDeUFBSUFBb0FnQkJBbW8yQWdBZ0FFSGtpQUlRVUNFQURBNExRUUFoQUF3TkN3SkFBa0FDUUFKQUlBQW9BZ1FnQUNnQ0FDSUJhMEVCU3dSL0lBRXNBQUVGUVFBTFFSaDBRUmgxUWM4QWF3NGpBUU1EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQUF3SURDeUFBSUFBb0FnQkJBbW8yQWdBZ0FFSHZpQUlRVUNFQURBOExJQUFnQUNnQ0FFRUNhallDQUNBQVFmbUlBaEJRSVFBTURnc2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQmhJa0NFRkFoQUF3TkMwRUFJUUFNREFzQ1FBSkFBa0FnQUNnQ0JDQUFLQUlBSWdGclFRRkxCSDhnQVN3QUFRVkJBQXRCR0hSQkdIVkI1UUJyRGhBQUFnSUNBZ0lDQWdJQ0FnSUNBZ0lCQWdzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCajRrQ0VGQWhBQXdOQ3lBQUlBQW9BZ0JCQW1vMkFnQWdBRUdhaVFJUVVDRUFEQXdMUVFBaEFBd0xDeUFBS0FJRUlBQW9BZ0FpQVd0QkFVc0VmeUFCTEFBQkJVRUFDMEgvQVhGQitBQkdCSDhnQUNBQUtBSUFRUUpxTmdJQUlBQkJwSWtDRUZBRlFRQUxJUUFNQ2dzQ1FBSkFBa0FDUUFKQUFrQWdBQ2dDQkNBQUtBSUFJZ0ZyUVFGTEJIOGdBU3dBQVFWQkFBdEJHSFJCR0hWQjB3QnJEaUlEQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVBQlFVRkFRVUZCUVVGQlFVRkJRSUVCUXNnQUNBQUtBSUFRUUpxTmdJQUlBQkJyNGtDRUZBaEFBd09DeUFBSUFBb0FnQkJBbW8yQWdBZ0FpQUFFTUFCSWdFMkFnQWdBUVIvSUFCQjhBSnFJQUlROXdrRlFRQUxJUUFNRFFzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCdW9rQ0VGQWhBQXdNQ3lBQUlBQW9BZ0JCQW1vMkFnQWdBRUhGaVFJUVVDRUFEQXNMSUFBZ0FDZ0NBRUVDYWpZQ0FDQUFRZEdKQWhCUUlRQU1DZ3RCQUNFQURBa0xBa0FDUUFKQUFrQUNRQUpBSUFBb0FnUWdBQ2dDQUNJQmEwRUJTd1IvSUFFc0FBRUZRUUFMUVJoMFFSaDFRY2tBYXc0bEFRVUZBd1VGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVGQlFVRkJRVUZCUVVBQlFVQ0JBVUxJQUFnQUNnQ0FFRUNhallDQUNBQVFkdUpBaEJRSVFBTURRc2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQjVZa0NFRkFoQUF3TUN5QUFJQUFvQWdCQkFtbzJBZ0FnQUVIUWlBSVFVQ0VBREFzTElBQWdBQ2dDQUVFQ2FqWUNBQ0FBUWZDSkFoQlFJUUFNQ2dzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCKzRrQ0VGQWhBQXdKQzBFQUlRQU1DQXNDUUFKQUFrQUNRQUpBQWtBZ0FDZ0NCQ0FBS0FJQUlnRnJRUUZMQkg4Z0FTd0FBUVZCQUF0QkdIUkJHSFZCNFFCckRoY0FCUVVGQVFVQ0JRVUZCUVVGQlFVRkJRVUZBd1VGQkFVTElBQWdBQ2dDQUVFQ2FqWUNBQ0FBUVlhS0FoQlFJUUFNREFzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCbFlvQ0VGQWhBQXdMQ3lBQUlBQW9BZ0JCQW1vMkFnQWdBRUhiaVFJUVVDRUFEQW9MSUFBZ0FDZ0NBRUVDYWpZQ0FDQUFRYUNLQWhCUUlRQU1DUXNnQUNBQUtBSUFRUUpxTmdJQUlBQkJxb29DRUZBaEFBd0lDMEVBSVFBTUJ3c0NRQUpBQWtBQ1FDQUFLQUlFSUFBb0FnQWlBV3RCQVVzRWZ5QUJMQUFCQlVFQUMwRVlkRUVZZFVIU0FHc09JUUlEQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQUFNREFRTUxJQUFnQUNnQ0FFRUNhallDQUNBQVFiZUtBaEJRSVFBTUNRc2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQndvb0NFRkFoQUF3SUN5QUFJQUFvQWdCQkFtbzJBZ0FnQUVITWlnSVFVQ0VBREFjTFFRQWhBQXdHQ3dKQUFrQUNRQUpBQWtBQ1FBSkFJQUFvQWdRZ0FDZ0NBQ0lCYTBFQlN3Ui9JQUVzQUFFRlFRQUxRUmgwUVJoMVFjd0FhdzRwQWdZR0JnWUdCZ1lHQmdZR0JnWUdCZ1lHQmdZR0JnWUdCZ1lHQmdZR0JnWUJBQVlHQXdZR0JBVUdDeUFBSUFBb0FnQkJBbW8yQWdBZ0FFSFhpZ0lRVUNFQURBc0xJQUFnQUNnQ0FFRUNhallDQUNBQVFlT0tBaEJRSVFBTUNnc2dBQ0FBS0FJQVFRSnFOZ0lBSUFCQjdZb0NFRkFoQUF3SkN5QUFJQUFvQWdCQkFtbzJBZ0FnQUVINGlnSVFVQ0VBREFnTElBQWdBQ2dDQUVFQ2FqWUNBQ0FBUWVPS0FoQlFJUUFNQndzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCZzRzQ0VGQWhBQXdHQzBFQUlRQU1CUXNnQUNnQ0JDQUFLQUlBSWdGclFRRkxCSDhnQVN3QUFRVkJBQXRCL3dGeFFmVUFSZ1IvSUFBZ0FDZ0NBRUVDYWpZQ0FDQUFRWTZMQWhCUUJVRUFDeUVBREFRTEFrQUNRQUpBQWtBQ1FDQUFLQUlFSUFBb0FnQWlBV3RCQVVzRWZ5QUJMQUFCQlVFQUMwRVlkRUVZZFVITkFHc09Kd0VFQkFRRUJBTUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUFBUUVCQVFFQWdRTElBQWdBQ2dDQUVFQ2FqWUNBQ0FBUVppTEFoQlFJUUFNQndzZ0FDQUFLQUlBUVFKcU5nSUFJQUJCb29zQ0VGQWhBQXdHQ3lBQUlBQW9BZ0JCQW1vMkFnQWdBRUd0aXdJUVVDRUFEQVVMSUFBZ0FDZ0NBRUVDYWpZQ0FDQUFRYmlMQWhCUUlRQU1CQXRCQUNFQURBTUxJQUFvQWdRZ0FDZ0NBQ0lCYTBFQlN3Ui9JQUVzQUFFRlFRQUxRZjhCY1VIekFFWUVmeUFBSUFBb0FnQkJBbW8yQWdBZ0FFSEVpd0lRVUFWQkFBc2hBQXdDQ3lBQUtBSUVJQUFvQWdBaUFXdEJBVXNFZnlBQkxBQUJCVUVBQzBFWWRFRVlkVUZRYWtFS1NRUi9JQUFnQUNnQ0FFRUNhallDQUNBQ0lBQVF3QUVpQVRZQ0FDQUJCSDhnQUNBQ0VJUUVCVUVBQ3dWQkFBc2hBQXdCQzBFQUlRQUxJQVVrQkNBQUN4Z0FJQUJCOEFKcVFRd1FUQ0lBSUFFb0FnQVErZ2tnQUF0SUFDQUFRWnlMQVRZQ0FDQUFRUzQ2QUFRZ0FFRUJPZ0FGSUFCQkFUb0FCaUFBUVFFNkFBY2dBRUdZbFFFMkFnQWdBQ0FCTmdJSUlBQWdBaWtDQURjQ0RDQUFJQU0yQWhRTEpRQWdBRUh3QW1wQkZCQk1JZ0FnQVNnQ0FDQUNLQUlBSUFNc0FBQkJBRWNRaEFvZ0FBdUZBUUVCZnlNRUlRWWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUJCSUJCTUlRQWdCaUFCS1FJQU53TUlJQUlvQWdBaEFTQUdJQU1wQWdBM0F3QWdCQ3dBQUVFQVJ5RUNJQVVzQUFCQkFFY2hBeUFHUVJCcUlnUWdCaWtDQ0RjQ0FDQUdRUmhxSWdVZ0Jpa0NBRGNDQUNBQUlBUWdBU0FGSUFJZ0F4Q01DaUFHSkFRZ0FBdTVBZ0VIZnlNRUlRSWpCRUZBYXlRRUl3UWpCVTRFUUVIQUFCQUFDeUFDUVRCcUlRVWdBa0VZYWlFSUlBSkJJR29pQnlJRElBRkJER28yQWdBZ0F5QUJLQUlNTmdJRUlBTkJBVG9BQ0NBQlFYODJBZ3dnQWtFSWFpSURJZ1lnQVVFUWFqWUNBQ0FHSUFFb0FoQTJBZ1FnQmtFQk9nQUlJQUZCZnpZQ0VDQUJLQUlFSVFRZ0FDZ0NDQ0FCRUZZQ1FBSkFBa0FDUUNBQktBSVFJZ1pCZjJzT0FnQUJBZ3NnQ0VHTTlnRVFSQ0FGSUFncEFnQTNBZ0FnQVNBRkVFY01BZ3NnQVNBRU5nSUVEQUVMUVFFaEJBTkFJQVFnQms4TkFTQUNRWnI3QVJCRUlBVWdBaWtDQURjQ0FDQUJJQVVRUnlBQklBUTJBZ3dnQUNnQ0NDQUJFRllnQkVFQmFpRUVEQUFBQ3dBTElBTXNBQWdFUUNBREtBSUFJQU1vQWdRMkFnQUxJQWNzQUFnRVFDQUhLQUlBSUFjb0FnUTJBZ0FMSUFJa0JBdEJBQ0FBUVp5TEFUWUNBQ0FBUVRnNkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVIY2tBRTJBZ0FnQUNBQk5nSUlJQUFnQWlrQ0FEY0NEQXNOQUNBQVFmQUNhaUFCRUprS0N3OEFJQUJCOEFKcUlBRWdBaENLQ2dzUkFDQUFRZkFDYWlBQklBSWdBeEQ3Q1FzUkFDQUFRZkFDYWlBQklBSWdBeER0Q1F0MUFRRi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVFFRXdoQUNBQ0lBRXBBZ0EzQXdBZ0FpQUNLUUlBTndJSUlBQkJuSXNCTmdJQUlBQkJIRG9BQkNBQVFRRTZBQVVnQUVFQk9nQUdJQUJCQVRvQUJ5QUFRWVNRQVRZQ0FDQUFJQUlwQWdnM0FnZ2dBaVFFSUFBTG93SUJCWDhqQkNFREl3UkJRR3NrQkNNRUl3Vk9CRUJCd0FBUUFBc2dBMEU0YWlFQ0lBTkJNR29oQkNBRFFTaHFJUVVnQUNnQ0RDQUFLQUlJYTBFRFN3UkFJQVJCNHZrQkVFUWdBaUFFS1FJQU53SUFJQUVnQWhCSElBTWdBQ2tDQ0RjREVDQUNJQU1wQWhBM0FnQWdBU0FDRUVjZ0JVSGUrUUVRUkNBQ0lBVXBBZ0EzQWdBZ0FTQUNFRWNMSUFOQklHb2hCQ0FEUVJocUlRVWdBRUVRYWlJR0tBSUFMQUFBUWU0QVJnUkFJQVJCdmY0QkVFUWdBaUFFS1FJQU53SUFJQUVnQWhCSElBVWdCa0VCRU1nQ0lBSWdCU2tDQURjQ0FBVWdBeUFHS1FJQU53TUlJQUlnQXlrQ0NEY0NBQXNnQVNBQ0VFY2dBQ2dDRENBQUtBSUlhMEVFU1FSQUlBTWdBQ2tDQ0RjREFDQUNJQU1wQWdBM0FnQWdBU0FDRUVjTElBTWtCQXRFQUNBQVFaeUxBVFlDQUNBQVFUMDZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFSFlqd0UyQWdBZ0FDQUJLUUlBTndJSUlBQWdBaWtDQURjQ0VBdGtBUUYvSXdRaEF5TUVRU0JxSkFRakJDTUZUZ1JBUVNBUUFBc2dBRUVZRUV3aEFDQURJQUVwQWdBM0F3Z2dBeUFDS1FJQU53TUFJQU5CRUdvaUFTQURLUUlJTndJQUlBTkJHR29pQWlBREtRSUFOd0lBSUFBZ0FTQUNFSklFSUFNa0JDQUFDMDBCQVg4akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBTEFBSUJFQWdBa0dHL2dFUVJBVWdBa0dML2dFUVJBc2dBa0VJYWlJQUlBSXBBZ0EzQWdBZ0FTQUFFRWNnQWlRRUN6b0FJQUJCbklzQk5nSUFJQUJCT3pvQUJDQUFRUUU2QUFVZ0FFRUJPZ0FHSUFCQkFUb0FCeUFBUWF5UEFUWUNBQ0FBSUFGQkFYRTZBQWdMd1FJQkNYOGpCQ0VDSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBQ1FSaHFJUVFnQWtFb2FpRUZJQUpCSUdvaEJpQUFRUWhxSWdBb0FnQWhCeUFBS0FJRVFRRnFJQWRyUVFoTEJFQUNmeUFGUVFScUlRb2dCU0VBQTBBZ0EwRUlSd1JBSUFCQjBBRkJxUUVnQnlBRFFRRnlhaXdBQUNJSlFWQnFRUXBKR3lBSmFrRUFRUWtnQXlBSGFpd0FBQ0lKUVZCcVFRcEpHeUFKYWtFRWRHbzZBQUFnQUVFQmFpRUFJQU5CQW1vaEF3d0JDd3NnQlNFRElBb0xJUUFEUUNBRElBQkJmMm9pQUVrRVFDQURMQUFBSVFnZ0F5QUFMQUFBT2dBQUlBQWdDRG9BQUNBRFFRRnFJUU1NQVFzTElBSkNBRGNEQUNBQ1FnQTNBd2dnQWtJQU53TVFJQVFnQlNvQ0FMczVBd0FnQWtFWVFjcjlBU0FFRU04QklBSnFJUUFnQmlBQ05nSUFJQVlnQURZQ0JDQUVJQVlwQWdBM0FnQWdBU0FFRUVjTElBSWtCQXQxQVFGL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFUUVFd2hBQ0FDSUFFcEFnQTNBd0FnQWlBQ0tRSUFOd0lJSUFCQm5Jc0JOZ0lBSUFCQlBqb0FCQ0FBUVFFNkFBVWdBRUVCT2dBR0lBQkJBVG9BQnlBQVFZQ1BBVFlDQUNBQUlBSXBBZ2czQWdnZ0FpUUVJQUFMeUFJQkNYOGpCQ0VDSXdSQlFHc2tCQ01FSXdWT0JFQkJ3QUFRQUFzZ0FrRW9haUVFSUFKQklHb2hCU0FDUVRCcUlRWWdBRUVJYWlJQUtBSUFJUWNnQUNnQ0JFRUJhaUFIYTBFUVN3UkFBbjhnQlVFSWFpRUtJQVVoQUFOQUlBTkJFRWNFUUNBQVFkQUJRYWtCSUFjZ0EwRUJjbW9zQUFBaUNVRlFha0VLU1JzZ0NXcEJBRUVKSUFNZ0Iyb3NBQUFpQ1VGUWFrRUtTUnNnQ1dwQkJIUnFPZ0FBSUFCQkFXb2hBQ0FEUVFKcUlRTU1BUXNMSUFVaEF5QUtDeUVBQTBBZ0F5QUFRWDlxSWdCSkJFQWdBeXdBQUNFSUlBTWdBQ3dBQURvQUFDQUFJQWc2QUFBZ0EwRUJhaUVEREFFTEN5QUNRZ0EzQXdBZ0FrSUFOd01JSUFKQ0FEY0RFQ0FDUWdBM0F4Z2dCQ0FGS3dNQU9RTUFJQUpCSUVHUC9RRWdCQkRQQVNBQ2FpRUFJQVlnQWpZQ0FDQUdJQUEyQWdRZ0JDQUdLUUlBTndJQUlBRWdCQkJIQ3lBQ0pBUUxkUUVCZnlNRUlRSWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCRUJCTUlRQWdBaUFCS1FJQU53TUFJQUlnQWlrQ0FEY0NDQ0FBUVp5TEFUWUNBQ0FBUVQ4NkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVIVWpnRTJBZ0FnQUNBQ0tRSUlOd0lJSUFJa0JDQUFDOUlDQVFsL0l3UWhBaU1FUVVCckpBUWpCQ01GVGdSQVFjQUFFQUFMSUFKQk1Hb2hCU0FDUVNocUlRWWdBa0U0YWlFSElBQkJDR29pQUNnQ0FDRUVJQUFvQWdSQkFXb2dCR3RCRkVzRVFBSi9JQVpCQ0dvaENpQUdJUUFEUUNBRFFSUkhCRUFnQUVIUUFVR3BBU0FFSUFOQkFYSnFMQUFBSWdoQlVHcEJDa2tiSUFocVFRQkJDU0FESUFScUxBQUFJZ2hCVUdwQkNra2JJQWhxUVFSMGFqb0FBQ0FBUVFGcUlRQWdBMEVDYWlFRERBRUxDeUFHSVFNZ0NndEJBbW9oQUFOQUlBTWdBRUYvYWlJQVNRUkFJQU1zQUFBaEJDQURJQUFzQUFBNkFBQWdBQ0FFT2dBQUlBTkJBV29oQXd3QkN3c2dBa0lBTndNQUlBSkNBRGNEQ0NBQ1FnQTNBeEFnQWtJQU53TVlJQUpDQURjRElDQUZJQVlyQXdBNUF3QWdBa0VvUWRMOEFTQUZFTThCSUFKcUlRQWdCeUFDTmdJQUlBY2dBRFlDQkNBRklBY3BBZ0EzQWdBZ0FTQUZFRWNMSUFJa0JBdDJBUUYvSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVRRUV3aEFDQUNJQUVwQWdBM0F3QWdBaUFDS1FJQU53SUlJQUJCbklzQk5nSUFJQUJCd0FBNkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVHb2pnRTJBZ0FnQUNBQ0tRSUlOd0lJSUFJa0JDQUFDMEVBSUFCQm5Jc0JOZ0lBSUFCQlBEb0FCQ0FBUVFFNkFBVWdBRUVCT2dBR0lBQkJBVG9BQnlBQVFmeU5BVFlDQUNBQUlBRTJBZ2dnQUNBQ0tRSUFOd0lNQzFJQkFYOGpCQ0VESXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFSUVFUQ0VBSUFFb0FnQWhBU0FESUFJcEFnQTNBd0FnQTBFSWFpSUNJQU1wQWdBM0FnQWdBQ0FCSUFJUW5BUWdBeVFFSUFBTHZ3RUJCWDhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFLQUlFSUFBb0FnQnJRUlZKQkg5QkFBVWdBaUFBS0FJQUlnRTJBZ0FnQWlBQlFSUnFOZ0lFSUFJb0FnQWhBU0FDS0FJRUlRTUNmd0pBQTM4Z0FTQURSZzBCSUFGQkFXb2hCQ0FCTEFBQUlnRkJVR3BCQ2trZ0FVRWdja0dmZjJwQkJrbHlCSDhnQkNFQkRBRUZRUUFMQ3d3QkN5QUFJQUFvQWdCQkZHbzJBZ0FnQUVIRkFCQlBCSDhnQUVId0Ftb2dBaENiQkFWQkFBc0xDeUVGSUFJa0JDQUZDNzhCQVFWL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUNnQ0JDQUFLQUlBYTBFUlNRUi9RUUFGSUFJZ0FDZ0NBQ0lCTmdJQUlBSWdBVUVRYWpZQ0JDQUNLQUlBSVFFZ0FpZ0NCQ0VEQW44Q1FBTi9JQUVnQTBZTkFTQUJRUUZxSVFRZ0FTd0FBQ0lCUVZCcVFRcEpJQUZCSUhKQm4zOXFRUVpKY2dSL0lBUWhBUXdCQlVFQUN3c01BUXNnQUNBQUtBSUFRUkJxTmdJQUlBQkJ4UUFRVHdSL0lBQkI4QUpxSUFJUW1RUUZRUUFMQ3dzaEJTQUNKQVFnQlF1L0FRRUZmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQW9BZ1FnQUNnQ0FHdEJDVWtFZjBFQUJTQUNJQUFvQWdBaUFUWUNBQ0FDSUFGQkNHbzJBZ1FnQWlnQ0FDRUJJQUlvQWdRaEF3Si9Ba0FEZnlBQklBTkdEUUVnQVVFQmFpRUVJQUVzQUFBaUFVRlFha0VLU1NBQlFTQnlRWjkvYWtFR1NYSUVmeUFFSVFFTUFRVkJBQXNMREFFTElBQWdBQ2dDQUVFSWFqWUNBQ0FBUWNVQUVFOEVmeUFBUWZBQ2FpQUNFSmNFQlVFQUN3c0xJUVVnQWlRRUlBVUxXUUVCZnlBQktBSVFRWDlHQkVBZ0FTQUFLQUlNTmdJUUlBRkJBRFlDREFzZ0FTZ0NEQ0lDSUFBb0FneEpCRUFnQUNnQ0NDQUNRUUowYWlnQ0FDSUFLQUlBS0FJVUlRSWdBQ0FCSUFKQi93RnhRWTRIYWhFQUFBc0xXUUVCZnlBQktBSVFRWDlHQkVBZ0FTQUFLQUlNTmdJUUlBRkJBRFlDREFzZ0FTZ0NEQ0lDSUFBb0FneEpCRUFnQUNnQ0NDQUNRUUowYWlnQ0FDSUFLQUlBS0FJUUlRSWdBQ0FCSUFKQi93RnhRWTRIYWhFQUFBc0xXd0VCZnlBQktBSVFRWDlHQkVBZ0FTQUFLQUlNTmdJUUlBRkJBRFlDREFzZ0FTZ0NEQ0lDSUFBb0FneEpCSDhnQUNnQ0NDQUNRUUowYWlnQ0FDSUFLQUlBS0FJTUlRSWdBQ0FCSUFKQlAzRkJpZ0ZxRVFNQUJTQUFDd3RHQVFGL0lBRW9BaEJCZjBZRVFDQUJJQUFvQWd3MkFoQWdBVUVBTmdJTUN5QUJLQUlNSWdJZ0FDZ0NERWtFZnlBQUtBSUlJQUpCQW5ScUtBSUFJQUVRa3dFRlFRQUxDMFlCQVg4Z0FTZ0NFRUYvUmdSQUlBRWdBQ2dDRERZQ0VDQUJRUUEyQWd3TElBRW9BZ3dpQWlBQUtBSU1TUVIvSUFBb0FnZ2dBa0VDZEdvb0FnQWdBUkNKQVFWQkFBc0xSZ0VCZnlBQktBSVFRWDlHQkVBZ0FTQUFLQUlNTmdJUUlBRkJBRFlDREFzZ0FTZ0NEQ0lDSUFBb0FneEpCSDhnQUNnQ0NDQUNRUUowYWlnQ0FDQUJFTUlCQlVFQUN3dTNBZ0VEZnlBQVFaeUxBVFlDQUNBQVFSczZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFSFFqUUUyQWdBZ0FFRUlhaUlDSUFFcEFnQTNBZ0FnQUVFQ09nQUZJQUJCQWpvQUJ5QUFRUUk2QUFZZ0FpZ0NBQ0VCSUFJb0FnQWdBaWdDQkVFQ2RHb2hCQUpBQWtBRFFDQUJJQVJHRFFFZ0FVRUVhaUVESUFFb0FnQXNBQVpCQVVZRVFDQURJUUVNQVFzTERBRUxJQUJCQVRvQUJnc2dBaWdDQUNFQklBSW9BZ0FnQWlnQ0JFRUNkR29oQkFKQUFrQURRQ0FCSUFSR0RRRWdBVUVFYWlFRElBRW9BZ0FzQUFkQkFVWUVRQ0FESVFFTUFRc0xEQUVMSUFCQkFUb0FCd3NnQWlnQ0FDRUJJQUlvQWdBZ0FpZ0NCRUVDZEdvaEFnSkFBa0FEUUNBQklBSkdEUUVnQVVFRWFpRURJQUVvQWdBc0FBVkJBVVlFUUNBRElRRU1BUXNMREFFTElBQkJBVG9BQlFzTFNRRUJmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkJFQkJNSVFBZ0FpQUJLUUlBTndNQUlBSkJDR29pQVNBQ0tRSUFOd0lBSUFBZ0FSQ25CQ0FDSkFRZ0FBdWtBUUVEZnlNRUlRSWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUpCQ0dvaEJDQUNRUkJxUVpqN0FSQkVJQUpCR0dvaUF5QUNLUUlRTndJQUlBRWdBeEJISUFCQkNHb2dBUkI5SUFFb0FnUWlBQVIvSUFFb0FnQWdBRUYvYW1vc0FBQUZRUUFMUWY4QmNVRStSZ1JBSUFSQjRQa0JFRVFnQXlBRUtRSUFOd0lBSUFFZ0F4QkhDeUFDUWEzNkFSQkVJQU1nQWlrQ0FEY0NBQ0FCSUFNUVJ5QUNKQVFMZFFFQmZ5TUVJUUlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQkVCQk1JUUFnQWlBQktRSUFOd01BSUFJZ0Fpa0NBRGNDQ0NBQVFaeUxBVFlDQUNBQVFSNDZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFR2tqUUUyQWdBZ0FDQUNLUUlJTndJSUlBSWtCQ0FBQzZJQ0FRSi9JQUFvQWdBZ0FFRU1ha1loQWlBQktBSUFJQUZCREdwR0JFQWdBa1VFUUNBQUtBSUFFRU1nQUNBQVFReHFJZ0kyQWdBZ0FDQUNOZ0lFSUFBZ0FFRXNhallDQ0FzZ0FTZ0NCQ0FCS0FJQUlnSnJJZ01FUUNBQUtBSUFJQUlnQXhDK0FSb0xJQUFnQUNnQ0FDQUJLQUlFSUFFb0FnQnJRUUoxUVFKMGFqWUNCQ0FCSUFFb0FnQTJBZ1FGSUFJRVFDQUFJQUVvQWdBMkFnQWdBQ0FCS0FJRU5nSUVJQUFnQVNnQ0NEWUNDQ0FCSUFGQkRHb2lBRFlDQUNBQklBQTJBZ1FnQVNBQlFTeHFOZ0lJQlNBQUtBSUFJUUlnQUNBQktBSUFOZ0lBSUFFZ0FqWUNBQ0FBS0FJRUlRSWdBQ0FCS0FJRU5nSUVJQUVnQWpZQ0JDQUFLQUlJSVFJZ0FDQUJLQUlJTmdJSUlBRWdBallDQ0NBQklBRW9BZ0EyQWdRTEN3dWNGQUVFZnlNRUlRTWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQU5CQkdvaEJDQUFJQUFvQXRBSElBRkJmM054TmdMUUJ5QUJRUUZ4QkVBZ0FDZ0NJQkJESUFCQkFEWUNLQ0FBUVg4MkFpd2dBRUVBTmdJa0lBQkJBRFlDSENBQVFRQTJBaUFnQUNnQ0dDSUNCRUFnQXlBQUtBSVVOZ0lBSUFRZ0F5Z0NBRFlDQUNBQ0lBUVFUUXNnQUVFQU5nSVlJQUFvQWtnUVF5QUFRUUEyQWxBZ0FFRi9OZ0pVSUFCQkFEWUNUQ0FBUVFBMkFrUWdBRUVBTmdKSUlBQkJRR3NpQWlnQ0FDSUZCRUFnQXlBQUtBSThOZ0lBSUFRZ0F5Z0NBRFlDQUNBRklBUVFUUXNnQWtFQU5nSUFJQUFvQXBBQ0VFTWdBRUVBTmdLWUFpQUFRWDgyQXB3Q0lBQkJBRFlDbEFJZ0FFRUFOZ0tNQWlBQVFRQTJBcEFDSUFBb0FvZ0NJZ0lFUUNBRElBQW9Bb1FDTmdJQUlBUWdBeWdDQURZQ0FDQUNJQVFRVFFzZ0FFRUFOZ0tJQWlBQUtBSzRBaEJESUFCQkFEWUN3QUlnQUVGL05nTEVBaUFBUVFBMkFyd0NJQUJCQURZQ3RBSWdBRUVBTmdLNEFpQUFLQUt3QWlJQ0JFQWdBeUFBS0FLc0FqWUNBQ0FFSUFNb0FnQTJBZ0FnQWlBRUVFMExJQUJCQURZQ3NBSWdBQ2dDNEFJUVF5QUFRUUEyQXVnQ0lBQkJmellDN0FJZ0FFRUFOZ0xrQWlBQVFRQTJBdHdDSUFCQkFEWUM0QUlnQUNnQzJBSWlBZ1JBSUFNZ0FDZ0MxQUkyQWdBZ0JDQURLQUlBTmdJQUlBSWdCQkJOQ3lBQVFRQTJBdGdDSUFGQmdCQnhCRUFnQUNnQ3NBTVFReUFBUVFBMkFyZ0RJQUJCZnpZQ3ZBTWdBRUVBTmdLMEF5QUFRUUEyQXF3RElBQkJBRFlDc0FNZ0FDZ0NxQU1pQWdSQUlBTWdBQ2dDcEFNMkFnQWdCQ0FES0FJQU5nSUFJQUlnQkJCTkN5QUFRUUEyQXFnRElBQW9BdHdERUVNZ0FFRUFOZ0xrQXlBQVFYODJBdWdESUFCQkFEWUM0QU1nQUVFQU5nTFlBeUFBUVFBMkF0d0RJQUFvQXRRRElnSUVRQ0FESUFBb0F0QUROZ0lBSUFRZ0F5Z0NBRFlDQUNBQ0lBUVFUUXNnQUVFQU5nTFVBd3NMSUFGQmdJQUNjUVJBSUFBb0FuQVFReUFBUVFBMkFuZ2dBRUYvTmdKOElBQkJBRFlDZENBQVFRQTJBbXdnQUVFQU5nSndJQUFvQW1naUFnUkFJQU1nQUNnQ1pEWUNBQ0FFSUFNb0FnQTJBZ0FnQWlBRUVFMExJQUJCQURZQ2FDQUFLQUxvQVJCRElBQkJBRFlDOEFFZ0FFRi9OZ0wwQVNBQVFRQTJBdXdCSUFCQkFEWUM1QUVnQUVFQU5nTG9BU0FBS0FMZ0FTSUNCRUFnQXlBQUtBTGNBVFlDQUNBRUlBTW9BZ0EyQWdBZ0FpQUVFRTBMSUFCQkFEWUM0QUVMSUFGQkFuRUVRQ0FBS0FLZ0JTSUZJQUFvQXFRRlNRUi9BMEFnQlNBRktBSUFLQUlBUWY4RGNVR0VBMm9SQVFBZ0JVRVFhaUlGSUFBb0FxUUZTUTBBQ3lBQUtBS2dCUVVnQlFzUVF5QUFRUUEyQXFnRklBQkJmellDckFVZ0FFRUFOZ0trQlNBQVFRQTJBcHdGSUFCQkFEWUNvQVVnQUNnQ21BVWlBZ1JBSUFNZ0FDZ0NsQVUyQWdBZ0JDQURLQUlBTmdJQUlBSWdCQkJYQ3lBQVFRQTJBcGdGQ3lBQlFZQUljUVJBSUFBb0FxQUdFRU1nQUVFQU5nS29CaUFBUVg4MkFxd0dJQUJCQURZQ3BBWWdBRUVBTmdLY0JpQUFRUUEyQXFBR0lBQW9BcGdHSWdJRVFDQURJQUFvQXBRR05nSUFJQVFnQXlnQ0FEWUNBQ0FDSUFRUVZ3c2dBRUVBTmdLWUJnc2dBVUdBZ0FGeEJFQWdBQ2dDMkFRUVF5QUFRUUEyQXVBRUlBQkJmellDNUFRZ0FFRUFOZ0xjQkNBQVFRQTJBdFFFSUFCQkFEWUMyQVFnQUNnQzBBUWlBZ1JBSUFNZ0FDZ0N6QVEyQWdBZ0JDQURLQUlBTmdJQUlBSWdCQkJOQ3lBQVFRQTJBdEFFQ3lBQlFRUnhCRUFnQUNnQ3pBWVFReUFBUVFBMkF0UUdJQUJCZnpZQzJBWWdBRUVBTmdMUUJpQUFRUUEyQXNnR0lBQkJBRFlDekFZZ0FDZ0N4QVlpQWdSQUlBTWdBQ2dDd0FZMkFnQWdCQ0FES0FJQU5nSUFJQUlnQkJCWEN5QUFRUUEyQXNRR0N5QUJRUWh4QkVBZ0FDZ0M4QVlRUXlBQVFRQTJBdmdHSUFCQmZ6WUMvQVlnQUVFQU5nTDBCaUFBUVFBMkF1d0dJQUJCQURZQzhBWWdBQ2dDNkFZaUFnUkFJQU1nQUNnQzVBWTJBZ0FnQkNBREtBSUFOZ0lBSUFJZ0JCQlhDeUFBUVFBMkF1Z0dDeUFCUVNCeEJFQWdBQ2dDaEFNaUFpQUFLQUtJQXlJRlNRUi9BMEFnQWl3QUMwRUFTQVJBSUFJb0FnQVFReUFBS0FLSUF5RUZDeUFDUVF4cUlnSWdCVWtOQUFzZ0FDZ0NoQU1GSUFJTEVFTWdBRUVBTmdLTUF5QUFRWDgyQXBBRElBQkJBRFlDaUFNZ0FFRUFOZ0tBQXlBQVFRQTJBb1FESUFBb0F2d0NJZ0lFUUNBRElBQW9BdmdDTmdJQUlBUWdBeWdDQURZQ0FDQUNJQVFRVFFzZ0FFRUFOZ0w4QWdzZ0FVR0FnQVJ4QkVBZ0FDZ0NtQUVRUXlBQVFRQTJBcUFCSUFCQmZ6WUNwQUVnQUVFQU5nS2NBU0FBUVFBMkFwUUJJQUJCQURZQ21BRWdBQ2dDa0FFaUFnUkFJQU1nQUNnQ2pBRTJBZ0FnQkNBREtBSUFOZ0lBSUFJZ0JCQk5DeUFBUVFBMkFwQUJJQUFvQXNBQkVFTWdBRUVBTmdMSUFTQUFRWDgyQXN3QklBQkJBRFlDeEFFZ0FFRUFOZ0s4QVNBQVFRQTJBc0FCSUFBb0FyZ0JJZ0lFUUNBRElBQW9BclFCTmdJQUlBUWdBeWdDQURZQ0FDQUNJQVFRVFFzZ0FFRUFOZ0s0QVNBQUtBTG9BUkJESUFCQkFEWUM4QUVnQUVGL05nTDBBU0FBUVFBMkF1d0JJQUJCQURZQzVBRWdBRUVBTmdMb0FTQUFLQUxnQVNJQ0JFQWdBeUFBS0FMY0FUWUNBQ0FFSUFNb0FnQTJBZ0FnQWlBRUVFMExJQUJCQURZQzRBRUxJQUZCRUhFRVFDQUFLQUxRQlNJQ0lBQW9BdFFGSWdWSkJIOERRQ0FDTEFBTFFRQklCRUFnQWlnQ0FCQkRJQUFvQXRRRklRVUxJQUpCREdvaUFpQUZTUTBBQ3lBQUtBTFFCUVVnQWdzUVF5QUFRUUEyQXRnRklBQkJmellDM0FVZ0FFRUFOZ0xVQlNBQVFRQTJBc3dGSUFCQkFEWUMwQVVnQUNnQ3lBVWlBZ1JBSUFNZ0FDZ0N4QVUyQWdBZ0JDQURLQUlBTmdJQUlBSWdCQkJYQ3lBQVFRQTJBc2dGQ3lBQlFZQUNjUVJBSUFBb0FyUUVFRU1nQUVFQU5nSzhCQ0FBUVg4MkFzQUVJQUJCQURZQ3VBUWdBRUVBTmdLd0JDQUFRUUEyQXJRRUlBQW9BcXdFSWdJRVFDQURJQUFvQXFnRU5nSUFJQVFnQXlnQ0FEWUNBQ0FDSUFRUVRRc2dBRUVBTmdLc0JBc2dBVUdBQkhFRVFDQUFLQUw4QlJCRElBQkJBRFlDaEFZZ0FFRi9OZ0tJQmlBQVFRQTJBb0FHSUFCQkFEWUMrQVVnQUVFQU5nTDhCU0FBS0FMMEJTSUNCRUFnQXlBQUtBTHdCVFlDQUNBRUlBTW9BZ0EyQWdBZ0FpQUVFRmNMSUFCQkFEWUM5QVVMSUFGQmdDQnhCRUFnQUNnQ2lBUWlBaUFBS0FLTUJDSUZTUVIvQTBBZ0Fpd0FDMEVBU0FSQUlBSW9BZ0FRUXlBQUtBS01CQ0VGQ3lBQ1FReHFJZ0lnQlVrTkFBc2dBQ2dDaUFRRklBSUxFRU1nQUVFQU5nS1FCQ0FBUVg4MkFwUUVJQUJCQURZQ2pBUWdBRUVBTmdLRUJDQUFRUUEyQW9nRUlBQW9Bb0FFSWdJRVFDQURJQUFvQXZ3RE5nSUFJQVFnQXlnQ0FEWUNBQ0FDSUFRUVRRc2dBRUVBTmdLQUJBc2dBVUdBd0FCeFJRUkFJQU1rQkE4TElBQW9BcndIRUVNZ0FFRUFOZ0xFQnlBQVFYODJBc2dISUFCQkFEWUN3QWNnQUVFQU5nSzRCeUFBUVFBMkFyd0hJQUFvQXJRSElnRUVRQ0FESUFBb0FyQUhOZ0lBSUFRZ0F5Z0NBRFlDQUNBQklBUVFWd3NnQUVFQU5nSzBCeUFESkFRTHNBRUJBbjhnQUNBQVFReHFJZ0kyQWdBZ0FDQUNOZ0lFSUFBZ0FFRXNhallDQ0NBQktBSUFJQUZCREdwR0JFQWdBU2dDQkNBQktBSUFJZ0pySWdNRVFDQUFLQUlBSUFJZ0F4QytBUm9MSUFBZ0FDZ0NBQ0FCS0FJRUlBRW9BZ0JyUVFKMVFRSjBhallDQkNBQklBRW9BZ0EyQWdRRklBQWdBU2dDQURZQ0FDQUFJQUVvQWdRMkFnUWdBQ0FCS0FJSU5nSUlJQUVnQVVFTWFpSUFOZ0lBSUFFZ0FEWUNCQ0FCSUFGQkxHbzJBZ2dMQ3hRQUlBQW9BZ2dnQVJCV0lBQW9BZ3dnQVJCV0N6NEFJQUJCbklzQk5nSUFJQUJCSURvQUJDQUFRUUU2QUFVZ0FFRUJPZ0FHSUFCQkFUb0FCeUFBUWZpTUFUWUNBQ0FBSUFFMkFnZ2dBQ0FDTmdJTUM2UUJBUU4vSXdRaEF5TUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBMEVJYWlFRUFrQUNRQ0FBS0FJSUlnSXRBQVJCQ2tjTkFDQUNFTTRDUlFSQUlBQW9BZ2doQWd3QkN3d0JDd0pBQWtBZ0FpQUJFSWtCRFFBZ0FDZ0NDQ0FCRUpNQkRRQU1BUXNnQTBIZStRRVFSQ0FFSUFNcEFnQTNBZ0FnQVNBRUVFY0xJQUFvQWdnaUFDZ0NBQ2dDRkNFQ0lBQWdBU0FDUWY4QmNVR09CMm9SQUFBTElBTWtCQXZRQWdFSWZ5TUVJUU1qQkVGQWF5UUVJd1FqQlU0RVFFSEFBQkFBQ3lBRFFUQnFJUUlnQTBFb2FpRUZJQU5CSUdvaEJpQURRUmhxSVFjZ0EwRVFhaUVJSUFOQkNHb2hDUUpBQWtBZ0FDZ0NDQ0lFTFFBRVFRcEhEUUFnQkJET0FnUkFJQUFvQWdnaEFDQUlRYW42QVJCRUlBSWdDQ2tDQURjQ0FDQUJJQUlRUnlBRElBQXBBZ3czQXdBZ0FpQURLUUlBTndJQUlBRWdBaEJISUFsQnJmb0JFRVFnQWlBSktRSUFOd0lBSUFFZ0FoQkhCU0FBS0FJSUlRUU1BUXNNQVFzZ0JDQUJJQVFvQWdBb0FoQkIvd0Z4UVk0SGFoRUFBQ0FBS0FJSUlBRVFpUUVFUUNBRlFlRDVBUkJFSUFJZ0JTa0NBRGNDQUNBQklBSVFSd3NDUUFKQUlBQW9BZ2dnQVJDSkFRMEFJQUFvQWdnZ0FSQ1RBUTBBREFFTElBWkI0dmtCRUVRZ0FpQUdLUUlBTndJQUlBRWdBaEJIQ3lBSFFhZjZBUkJFSUFJZ0J5a0NBRGNDQUNBQklBSVFSd3NnQXlRRUMxTUJBMzhnQUVFTUVFd2lBeUlDSVFBZ0FTZ0NBQ0lCTEFBRklRUWdBRUdjaXdFMkFnQWdBRUVMT2dBRUlBQWdCRG9BQlNBQVFRRTZBQVlnQUVFQk9nQUhJQUpCekl3Qk5nSUFJQUlnQVRZQ0NDQURDODBCQVFWL0l3UWhBaU1FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNnQWtFWWFpRUZJQUpCRUdvaEF5QUNRUWhxSVFZZ0FFRVFhaUlFTEFBQVJRUkFJQU1nQkRZQ0FDQURJQVFzQUFBNkFBUWdBMEVCT2dBRklBUkJBVG9BQUNBR0lBQWdBUkRQQWdKQUFrQWdCaWdDQkNJQUlBRVFpUUVOQUNBQUlBRVFrd0VOQUF3QkN5QUNRZDc1QVJCRUlBVWdBaWtDQURjQ0FDQUJJQVVRUndzZ0FDQUJJQUFvQWdBb0FoUkIvd0Z4UVk0SGFoRUFBQ0FETEFBRkJFQWdBeWdDQUNBRExBQUVPZ0FBQ3dzZ0FpUUVDNk1DQVFkL0l3UWhBaU1FUVRCcUpBUWpCQ01GVGdSQVFUQVFBQXNnQWtFb2FpRURJQUpCR0dvaEJDQUNRUWhxSVFZZ0FrRWdhaUVISUFKQkVHb2hDQ0FBUVJCcUlnVXNBQUJGQkVBZ0JDQUZOZ0lBSUFRZ0JTd0FBRG9BQkNBRVFRRTZBQVVnQlVFQk9nQUFJQVlnQUNBQkVNOENJQVlvQWdRaUFDZ0NBQ2dDRUNFRklBQWdBU0FGUWY4QmNVR09CMm9SQUFBZ0FDQUJFSWtCQkVBZ0IwSGcrUUVRUkNBRElBY3BBZ0EzQWdBZ0FTQURFRWNMQWtBQ1FDQUFJQUVRaVFFTkFDQUFJQUVRa3dFTkFBd0JDeUFJUWVMNUFSQkVJQU1nQ0NrQ0FEY0NBQ0FCSUFNUVJ3c2dBa0htK1FGQjVQa0JJQVlvQWdBYkVFUWdBeUFDS1FJQU53SUFJQUVnQXhCSElBUXNBQVVFUUNBRUtBSUFJQVFzQUFRNkFBQUxDeUFDSkFRTFRnRUJmeUFCTEFBRklRTWdBRUdjaXdFMkFnQWdBRUVNT2dBRUlBQWdBem9BQlNBQVFRRTZBQVlnQUVFQk9nQUhJQUJCb0l3Qk5nSUFJQUFnQVRZQ0NDQUFJQUkyQWd3Z0FFRUFPZ0FRQzFBQkFuOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFSUVFUQ0VBSUFFb0FnQWhBU0FDUWRYNUFSQkVJQUpCQ0dvaUF5QUNLUUlBTndJQUlBQWdBU0FERU5FQ0lBSWtCQ0FBQzE0QkEzOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQUtBSUlJZ01vQWdBb0FoQWhCQ0FESUFFZ0JFSC9BWEZCamdkcUVRQUFJQUlnQUNrQ0REY0RBQ0FDUVFocUlnQWdBaWtDQURjQ0FDQUJJQUFRUnlBQ0pBUUxzd2NDQ244SmZDQUJLQUlFSVFRZ0FTZ0MwQWNpQmtFQmNRUkFJQVFvQW5BRVFDQUJLQUljSWdjZ0JDZ0NkQ0lDS0FJUUlnTkJBM1JxS3dNQUlRMGdBU2dDUkNJSUlBTkJBM1JxS3dNQUlRNGdBZ1JBSUFFb0Fvd0NJUWtnQVNnQ3RBSWhDaUFHUVlBUWNRUkFJQUVvQXF3RElRc2dEU0lNSVE4Z0RpSVJJUkFEUUNBTUlBTkJBM1FnQ1dvckF3QkVBQUFBQUFBQTREK2lJaE9oSUFOQkRHd2dDMm9xQWdTN1JBQUFBQUFBQU9BL29pSVNvU0lVSUE4Z0R5QVVaQnNoRHlBU0lBd2dFNkNnSWd3Z0RTQU5JQXhqR3lFTklCRWdBMEVEZENBS2Fpc0RBRVFBQUFBQUFBRGdQNklpREtFZ0VxRWlFeUFRSUJBZ0UyUWJJUkFnRWlBUklBeWdvQ0lNSUE0Z0RpQU1ZeHNoRGlBQ0tBSUFJZ0lFUUNBQ0tBSVFJZ1VoQXlBRlFRTjBJQWRxS3dNQUlRd2dCVUVEZENBSWFpc0RBQ0VSREFFTEN3VWdEU0lNSVE4Z0RpSVJJUkFEUUNBTUlBTkJBM1FnQ1dvckF3QkVBQUFBQUFBQTREK2lJaEtoSWhNZ0R5QVBJQk5rR3lFUElBd2dFcUJFQUFBQUFBQUFBQUNnSWd3Z0RTQU5JQXhqR3lFTklCRWdBMEVEZENBS2Fpc0RBRVFBQUFBQUFBRGdQNklpREtFaUVpQVFJQkFnRW1RYklSQWdFU0FNb0VRQUFBQUFBQUFBQUtBaURDQU9JQTRnREdNYklRNGdBaWdDQUNJQ0JFQWdBaWdDRUNJRklRTWdCVUVEZENBSGFpc0RBQ0VNSUFWQkEzUWdDR29yQXdBaEVRd0JDd3NMQlNBTklROGdEaUVRQ3dzTElBWkJBbkVFUUNBRUtBS0FBU0lDQkVBZ0FTZ0NuQVVoQXlBR1FZQUljUVJBSUFFb0Fwd0dJUVFEUUNBQ0tBSVlJZ0ZCREd3Z0JHb3FBZ1M3UkFBQUFBQUFBT0Evb2lFTUlBRkJCSFFnQTJvb0FnUWlBUVJBQTBBZ0FTc0RDQ0lSSUF5aEloSWdEeUFQSUJKa0d5RVBJQXdnRWFBaUVTQU5JQTBnRVdNYklRMGdBU3NERUNJUklBeWhJaElnRUNBUUlCSmtHeUVRSUF3Z0VhQWlFU0FPSUE0Z0VXTWJJUTRnQVNnQ0FDSUJEUUFMQ3lBQ0tBSUFJZ0lOQUFzRkEwQWdBaWdDR0VFRWRDQURhaWdDQkNJQkJFQURRQ0FCS3dNSUlnd2dEeUFQSUF4a0d5RVBJQXhFQUFBQUFBQUFBQUNnSWd3Z0RTQU5JQXhqR3lFTklBRXJBeEFpRENBUUlCQWdER1FiSVJBZ0RFUUFBQUFBQUFBQUFLQWlEQ0FPSUE0Z0RHTWJJUTRnQVNnQ0FDSUJEUUFMQ3lBQ0tBSUFJZ0lOQUFzTEN3c2dBRUhzNHdBMkFnQWdBQ0FQT1FNSUlBQWdFRGtERUNBQUlBMDVBeGdnQUNBT09RTWdJQTBnRDZGRUFBQUFBQUFBQUFCakJFQWdBQ0FQT1FNWUlBQWdEVGtEQ0FzZ0RpQVFvVVFBQUFBQUFBQUFBR05GQkVBUEN5QUFJQkE1QXlBZ0FDQU9PUU1RQzFBQkFuOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFSUVFUQ0VBSUFFb0FnQWhBU0FDUVpINUFSQkVJQUpCQ0dvaUF5QUNLUUlBTndJQUlBQWdBU0FERU5FQ0lBSWtCQ0FBQzE4QUFrQUNRQUpBQWtBQ1FBSkFBa0FnQVNnQ0NBNEdBQUVDQXdRRkJnc2dBRUhOOXdFUVJBd0ZDeUFBUWRmM0FSQkVEQVFMSUFCQjVQY0JFRVFNQXdzZ0FFSHI5d0VRUkF3Q0N5QUFRZlAzQVJCRURBRUxJQUJCKy9jQkVFUUxDNGNDQVFkL0l3UWhBeU1FUVVCckpBUWpCQ01GVGdSQVFjQUFFQUFMSUFOQk1Hb2hBaUFEUVNocUlRUWdBMEVnYWlFRklBTkJHR29oQmlBRFFSQnFJUWNnQTBFSWFpRUlBa0FDUUFKQUFrQUNRQUpBQWtBZ0FDZ0NDQTRHQUFFQ0F3UUZCZ3NnQkVHRStBRVFSQ0FDSUFRcEFnQTNBZ0FnQVNBQ0VFY01CUXNnQlVHVCtBRVFSQ0FDSUFVcEFnQTNBZ0FnQVNBQ0VFY01CQXNnQmtHbCtBRVFSQ0FDSUFZcEFnQTNBZ0FnQVNBQ0VFY01Bd3NnQjBHeCtBRVFSQ0FDSUFjcEFnQTNBZ0FnQVNBQ0VFY01BZ3NnQ0VHKytBRVFSQ0FDSUFncEFnQTNBZ0FnQVNBQ0VFY01BUXNnQTBITCtBRVFSQ0FDSUFNcEFnQTNBZ0FnQVNBQ0VFY0xJQU1rQkF0TUFRRi9JQUJCREJCTUlnSWhBQ0FCS0FJQUlRRWdBRUdjaXdFMkFnQWdBRUVrT2dBRUlBQkJBVG9BQlNBQVFRRTZBQVlnQUVFQk9nQUhJQUJCeUlzQk5nSUFJQUFnQVRZQ0NDQUNDekFCQVg5QmdDQVFTaUlCQkVBZ0FTQUFRWUFnYWlJQUtBSUFOZ0lBSUFGQkFEWUNCQ0FBSUFFMkFnQUZFTVVCQ3dzN0FDQUJRUWhxRUVvaUFRUkFJQUVnQUVHQUlHb29BZ0FpQUNnQ0FEWUNBQ0FCUVFBMkFnUWdBQ0FCTmdJQUlBRkJDR29QQlJERkFRdEJBQXNRQUNBQVFRQTJBZ0FnQUVFQU5nSUVDNWdCQVFOL0l3UWhBeU1FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNnQUNnQ0NDSUNLQUlBS0FJUUlRUWdBaUFCSUFSQi93RnhRWTRIYWhFQUFDQURRUkJxSWdSQjd2WUJFRVFnQTBFWWFpSUNJQVFwQWdBM0FnQWdBU0FDRUVjZ0F5QUFLUUlNTndNQUlBSWdBeWtDQURjQ0FDQUJJQUlRUnlBRFFRaHFJZ0JCOVBZQkVFUWdBaUFBS1FJQU53SUFJQUVnQWhCSElBTWtCQXNFQUNBQUM0Y0NBZ2gvQVh3Z0FDZ0MwQWNpQkVFQmNRUkFJQUFvQWdRb0FuUWlBUVJBSUFBb0Fod2hCU0FBS0FKRUlRWWdBQ2dDakFJaEJ5QUFLQUswQWlFSUEwQWdBU2dDRUNJQ1FRTjBJQVZxSWdNckF3QWhDU0FESUFKQkEzUWdCbW9pQXlzREFEa0RBQ0FESUFtYU9RTUFJQUpCQTNRZ0Iyb2lBeXNEQUNFSklBTWdBa0VEZENBSWFpSUNLd01BT1FNQUlBSWdDVGtEQUNBQktBSUFJZ0VOQUFzTEN5QUVRUUp4UlFSQUR3c2dBQ2dDQkNnQ2dBRWlBVVVFUUE4TElBQW9BcHdGSVFJRFFDQUJLQUlZUVFSMElBSnFLQUlFSWdBRVFBTkFJQUFyQXdnaENTQUFJQUFyQXhBNUF3Z2dBQ0FKbWprREVDQUFLQUlBSWdBTkFBc0xJQUVvQWdBaUFRMEFDd3RZQVFOL0lBRXNBQVVoQXlBQkxBQUdJUVFnQVN3QUJ5RUZJQUJCbklzQk5nSUFJQUJCQ0RvQUJDQUFJQU02QUFVZ0FDQUVPZ0FHSUFBZ0JUb0FCeUFBUWZDS0FUWUNBQ0FBSUFFMkFnZ2dBQ0FDS1FJQU53SU1DMUlCQVg4akJDRURJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVJRUVRDRUFJQUVvQWdBaEFTQURJQUlwQWdBM0F3QWdBMEVJYWlJQ0lBTXBBZ0EzQWdBZ0FDQUJJQUlRd3dRZ0F5UUVJQUFMblFFQkJYOGdBQ2dDQkNBQUtBSUFhMEVDZFNFRklBQW9BZ0FnQUVFTWFrWUVRQ0FCUVFKMEVFb2lBa1VFUUJERkFRc2dBRUVFYWlJRUtBSUFJQUFvQWdBaUJtc2lBd1JBSUFJZ0JpQURFTDRCR2dzZ0FDQUNOZ0lBQlNBQUlBQW9BZ0FnQVVFQ2RCQ0tBU0lETmdJQUlBTUVRQ0FESVFJZ0FFRUVhaUVFQlJERkFRc0xJQVFnQlVFQ2RDQUNhallDQUNBQUlBRkJBblFnQW1vMkFnZ0xod0lDQ0g4QmZDQUFLQUxRQnlJRVFRRnhCRUFnQUNnQ0JDZ0NkQ0lCQkVBZ0FDZ0NIQ0VGSUFBb0FrUWhCaUFBS0FLTUFpRUhJQUFvQXJRQ0lRZ0RRQ0FCS0FJUUlnSkJBM1FnQldvaUF5c0RBQ0VKSUFNZ0FrRURkQ0FHYWlJREt3TUFtamtEQUNBRElBazVBd0FnQWtFRGRDQUhhaUlES3dNQUlRa2dBeUFDUVFOMElBaHFJZ0lyQXdBNUF3QWdBaUFKT1FNQUlBRW9BZ0FpQVEwQUN3c0xJQVJCQW5GRkJFQVBDeUFBS0FJRUtBS0FBU0lCUlFSQUR3c2dBQ2dDbkFVaEFnTkFJQUVvQWhoQkJIUWdBbW9vQWdRaUFBUkFBMEFnQUNzRENDRUpJQUFnQUNzREVKbzVBd2dnQUNBSk9RTVFJQUFvQWdBaUFBMEFDd3NnQVNnQ0FDSUJEUUFMQzNnQkJIOGpCQ0VCSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQlFRUnFJUU1nQUVITkFCQlBCSDhnQXlBQUVGMGlBallDQUNBQ0JIOGdBU0FBRUYwaUFqWUNBQ0FDQkg4Z0FFSHdBbXBCRUJCTUlnQWdBeWdDQUNBQktBSUFFTGNKSUFBRlFRQUxCVUVBQ3dWQkFBc2hCQ0FCSkFRZ0JBdjFBUUVGZnlNRUlRRWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUZCRUdvaEF5QUJRUWhxSVFJZ0FFSEJBQkJQQkg4Z0FVRUFOZ0lBSUFGQkFEWUNCQUovQWtBZ0FDZ0NCQ0FBS0FJQUlnUnJRUUJMQkg4Z0JDd0FBQVZCQUF0QkdIUkJHSFZCVUdwQkNra0VmeUFDSUFCQkFCQjBJQU1nQWlrQ0FEY0NBQ0FCSUFNUXVRSWdBRUhmQUJCUERRRkJBQVVnQUVIZkFCQlBEUUVnQUJCWUlnSUVmeUFBUWQ4QUVFOEVmeUFCSUFJMkFnQWdBVUVBTmdJRURBTUZRUUFMQlVFQUN3c01BUXNnQXlBQUVGMGlBallDQUNBQ0JIOGdBRUh3QW1vZ0F5QUJFTFFKQlVFQUN3c0ZRUUFMSVFVZ0FTUUVJQVVMeFFJQkJIOGpCQ0VCSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQlFRaHFRWmFaQWhCRUlBRkJFR29pQXlBQktRSUlOd0lBSUFBZ0F4QlNCSDhDZnlBQUtBSUVJQUFvQWdBaUFtdEJBRXNFZnlBQ0xBQUFCVUVBQzBGUGFrRVlkRUVZZFVIL0FYRkJDVWdFUUNBRElBQkJBQkIwSUFCQjN3QVFUd1IvQW44Z0FFSHdBQkJQQkVBZ0FFSHdBbW9nQXhDdENRd0JDeUFCSUFBUVhTSUNOZ0lBSUFJRWZ5QUFRZkFDYWlBQklBTVErZ01GUVFBTEN3VkJBQXNNQVFzZ0FFSGZBQkJQQkVBZ0F5QUFFRjBpQWpZQ0FDQUNCSDhnQVVFQU5nSUFJQUZCQURZQ0JDQUFRZkFDYWlBRElBRVErZ01GUVFBTERBRUxJQU1nQUJCWUlnSTJBZ0FnQWdSL0lBQkIzd0FRVHdSL0lBRWdBQkJkSWdJMkFnQWdBZ1IvSUFCQjhBSnFJQUVnQXhDdUNRVkJBQXNGUVFBTEJVRUFDd3NGUVFBTElRUWdBU1FFSUFRTEpnRUJmeUFBS0FJQUtBSXNJUVVnQUNBQklBRWdBaUFESUFRZ0JVRUJjVUdHQjJvUkJ3QUx5Z0lDQ0g4Q2ZDQUFLQUxRQnlJTFFRRnhCRUFnQUNnQ0JDZ0NkQ0lIUlNJSVJRUkFJQUFvQWh3aENTQUFLQUpFSVF3Z0J5RUdBMEFnQmlnQ0VDSUtRUU4wSUFscUlnMGdEU3NEQUNBQm9pQURvRGtEQUNBS1FRTjBJQXhxSWdvZ0Npc0RBQ0FDb2lBRW9Ea0RBQ0FHS0FJQUlnWU5BQXNnQ0NBRlFRRnpja1VFUUNBQm1TRU9JQUtaSVE4Z0FDZ0NqQUloQmlBQUtBSzBBaUVJSUFjaEJRTkFJQVVvQWhBaUIwRURkQ0FHYWlJSklBNGdDU3NEQUtJNUF3QWdCMEVEZENBSWFpSUhJQThnQnlzREFLSTVBd0FnQlNnQ0FDSUZEUUFMQ3dzTElBdEJBbkZGQkVBUEN5QUFLQUlFS0FLQUFTSUZSUVJBRHdzZ0FDZ0NuQVVoQmdOQUlBVW9BaGhCQkhRZ0Jtb29BZ1FpQUFSQUEwQWdBQ0FBS3dNSUlBR2lJQU9nT1FNSUlBQWdBQ3NERUNBQ29pQUVvRGtERUNBQUtBSUFJZ0FOQUFzTElBVW9BZ0FpQlEwQUN3dkhBd0VHZnlNRUlRUWpCRUhnQ0dva0JDTUVJd1ZPQkVCQjRBZ1FBQXNnQkVIWUIyb2lCaERMQVNBRUlBWkJrT01BS0FJQVFaVGpBQ2dDQUhJUTlRTkJmeUFBUVFKMElBQkIvLy8vL3dOTEd4QmZJUWNnQUVFQVNpSUlCRUFEUUNBRlFRSjBJQWRxSUFZUXVBRTJBZ0FnQlVFQmFpSUZJQUJJRFFBTEN5QUJRUUJLQkVCQkFDRUZBMEFnQmlBRlFRSjBJQUpxS0FJQVFRSjBJQWRxS0FJQUlBVkJBblFnQTJvb0FnQkJBblFnQjJvb0FnQVF4d0VhSUFWQkFXb2lCU0FCU0EwQUN3dEJHQkJLSWdGRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnSkJBRFlDQUNBQ1FYODJBZ1FnQWtHb09FRUFFQUVMSUFGQi9Pa0FOZ0lBSUFGQitnRTJBZ1FnQVVRQUFBQUFBQUJaUURrRENDQUJRUUE2QUJBZ0FTQUVRWVRxQUNnQ0FFSC9BWEZCamdkcUVRQUFJQUJCQTNRUVNpRUNJQWhGQkVBZ0JCQzFBU0FHRUtVQklBUWtCQ0FDRHdzZ0JDZ0NIQ0VESUFRb0FrUWhCVUVBSVFFRFFDQUJRUUYwSWdoQkFuUWdBbW9nQVVFQ2RDQUhhaWdDQUNnQ0VDSUpRUU4wSUFOcUt3TUF0amdDQUNBSVFRRnlRUUowSUFKcUlBbEJBM1FnQldvckF3QzJPQUlBSUFGQkFXb2lBU0FBUncwQUN5QUVFTFVCSUFZUXBRRWdCQ1FFSUFJTFJnRUNmeUFBUVlBZ2FpRUJBMEFnQVNnQ0FDSUNCRUFnQVNBQ0tBSUFOZ0lBSUFBZ0FrY0VRQ0FDRUVNTERBRUxDeUFBUVFBMkFnQWdBRUVBTmdJRUlBRWdBRFlDQUF0RUFBSi9Ba0FnQUFSL0lBRW9BZ0FoQVF3QkJVR0FDQkJLSWdBRWYwR0FDQ0VCREFJRlFRQUxDd3dCQ3lBQ1FRQTJBZ1FnQWlBQU5nSUFJQUlnQVRZQ0NFRUJDd3REQVFGL0lBQkI4QUpxRU0wRUlBQkJ6QUpxSWdFb0FnQWdBVUVNYWtjRVFDQUFLQUxNQWhCREN5QUFRYUFDYWhERUFTQUFRWlFCYWhERUFTQUFRUWhxRU1RQkM3UUJBZ1IvQVh3Z0FDZ0MwQWNpQWtFQmNVVUVRQThMSUFFckF3Z2dBU3NER0tBaEJpQUFLQUlFSWdNb0FuUWlBUVJBSUFBb0Fod2hCQU5BSUFFb0FoQkJBM1FnQkdvaUJTQUdJQVVyQXdDaE9RTUFJQUVvQWdBaUFRMEFDd3NnQWtFQ2NVVUVRQThMSUFNb0FvQUJJZ0ZGQkVBUEN5QUFLQUtjQlNFQ0EwQWdBU2dDR0VFRWRDQUNhaWdDQkNJQUJFQURRQ0FBSUFZZ0FDc0RDS0U1QXdnZ0FDZ0NBQ0lBRFFBTEN5QUJLQUlBSWdFTkFBc0xyQU1CQm44akJDRURJd1JCTUdva0JDTUVJd1ZPQkVCQk1CQUFDeUFEUVJCcUlRSWdBMEVJYWlFRUlBTkJHR3BCc1BRQkVFUWdBMEVnYWlJQklBTXBBaGczQWdBZ0FDQUJFRklFZnlBQklBQVFwd0VpQWpZQ0FDQUNCSDhnQUNnQ0JDQUFLQUlBSWdSclFRQkxCSDhnQkN3QUFBVkJBQXRCL3dGeFFTNUdCRUFnQUNnQ0JDRUNJQU1nQUNnQ0FEWUNBQ0FESUFJMkFnUWdBU0FBUWZBQ2FpQUJJQU1Ra0FraUFqWUNBQ0FBSUFBb0FnUTJBZ0FMUVFBZ0FpQUFLQUlFSUFBb0FnQnJHd1ZCQUFzRkFuOGdBa0d6OUFFUVJDQUJJQUlwQWdBM0FnQWdBQ0FCRUZKRkJFQkJBQ0FBRUYwZ0FDZ0NCQ0FBS0FJQWF4c01BUXNnQXlBQUVLY0JJZ0kyQWdBZ0FnUi9JQVJCdVBRQkVFUWdBU0FFS1FJQU53SUFJQUFnQVJCU0JIOENmeUFBUWQ4QUVFOGhCU0FCSUFCQkFCQjBJQVVMSUFFb0FnQWdBU2dDQkVaeEJIOUJBQVVnQUNnQ0JDQUFLQUlBSWdGclFRQkxCSDhnQVN3QUFBVkJBQXRCL3dGeFFTNUdCRUFnQUNBQUtBSUVOZ0lBQ3lBQUtBSUVJQUFvQWdCckJIOUJBQVVnQUVIRzlBRWdBeERYQWdzTEJVRUFDd1ZCQUFzTEN5RUdJQU1rQkNBR0N6OEJBWDhnQUNBQktBSUlRUUFRZFFSQUlBRWdBaUFERUlzQ0JTQUFLQUlJSWdBb0FnQW9BaHdoQkNBQUlBRWdBaUFESUFSQkIzRkJsZ2xxRVJFQUN3dXRBZ0VDZnlBQUlBRW9BZ2dnQkJCMUJFQWdBaUFCS0FJRVJnUkFJQUVvQWh4QkFVY0VRQ0FCSUFNMkFod0xDd1VDUUNBQUlBRW9BZ0FnQkJCMVJRUkFJQUFvQWdnaUFDZ0NBQ2dDR0NFRklBQWdBU0FDSUFNZ0JDQUZRUU54UVo0SmFoRVRBQXdCQ3lBQktBSVFJQUpIQkVBZ0FTZ0NGQ0FDUndSQUlBRWdBellDSUNBQktBSXNRUVJIQkVBZ0FVRUFPZ0EwSUFGQkFEb0FOU0FBS0FJSUlnQW9BZ0FvQWhRaEF5QUFJQUVnQWlBQ1FRRWdCQ0FEUVFkeFFhSUphaEVTQUNBQkxBQTFCRUFDZnlBQkxBQTBSU0VHSUFGQkF6WUNMQ0FHQzBVTkJBVWdBVUVFTmdJc0N3c2dBU0FDTmdJVUlBRWdBU2dDS0VFQmFqWUNLQ0FCS0FJa1FRRkhEUUlnQVNnQ0dFRUNSdzBDSUFGQkFUb0FOZ3dDQ3dzZ0EwRUJSZ1JBSUFGQkFUWUNJQXNMQ3d0RkFRRi9JQUFnQVNnQ0NDQUZFSFVFUUNBQklBSWdBeUFFRUlvQ0JTQUFLQUlJSWdBb0FnQW9BaFFoQmlBQUlBRWdBaUFESUFRZ0JTQUdRUWR4UWFJSmFoRVNBQXNMMVFJQkJIOGpCQ0VDSXdSQlFHc2tCQ01FSXdWT0JFQkJ3QUFRQUFzZ0FDQUFLQUlBSWdOQmVHb29BZ0JxSVFRZ0EwRjhhaWdDQUNFRElBSWdBVFlDQUNBQ0lBQTJBZ1FnQWtHQTFnQTJBZ2dnQWtFQU5nSU1JQUpDQURjQ0VDQUNRZ0EzQWhnZ0FrSUFOd0lnSUFKQ0FEY0NLQ0FDUVFBMkFqQWdBa0VBT3dFMElBSkJBRG9BTmlBRElBRkJBQkIxQkg4Z0FrRUJOZ0l3SUFNZ0FpQUVJQVJCQVVFQUlBTW9BZ0FvQWhSQkIzRkJvZ2xxRVJJQUlBUkJBQ0FDS0FJWVFRRkdHd1VDZnlBRElBSWdCRUVCUVFBZ0F5Z0NBQ2dDR0VFRGNVR2VDV29SRXdBQ1FBSkFBa0FnQWlnQ0pBNENBQUlCQ3lBQ0tBSVVRUUFnQWlnQ0tFRUJSaUFDS0FJY1FRRkdjU0FDS0FJZ1FRRkdjUnNNQWd0QkFBd0JDeUFDS0FJWVFRRkhCRUJCQUNBQ0tBSW9SU0FDS0FJY1FRRkdjU0FDS0FJZ1FRRkdjVVVOQVJvTElBSW9BaEFMQ3lFRklBSWtCQ0FGQ3hrQUlBQWdBU2dDQ0VFQUVIVUVRQ0FCSUFJZ0F4Q0xBZ3NMcFFFQUlBQWdBU2dDQ0NBRUVIVUVRQ0FDSUFFb0FnUkdCRUFnQVNnQ0hFRUJSd1JBSUFFZ0F6WUNIQXNMQlNBQUlBRW9BZ0FnQkJCMUJFQUNRQ0FCS0FJUUlBSkhCRUFnQVNnQ0ZDQUNSd1JBSUFFZ0F6WUNJQ0FCSUFJMkFoUWdBU0FCS0FJb1FRRnFOZ0lvSUFFb0FpUkJBVVlFUUNBQktBSVlRUUpHQkVBZ0FVRUJPZ0EyQ3dzZ0FVRUVOZ0lzREFJTEN5QURRUUZHQkVBZ0FVRUJOZ0lnQ3dzTEN3dFVBUU4vSXdRaEFTTUVRVEJxSkFRakJDTUZUZ1JBUVRBUUFBc2dBQ2dDQUNJQ0tBSW9JUU1nQWlnQ1BDRUNJQUVnQUNBQ1FmOEJjVUdPQjJvUkFBQWdBQ0FCSUFOQi93RnhRWTRIYWhFQUFDQUJKQVFMR3dBZ0FDQUJLQUlJSUFVUWRRUkFJQUVnQWlBRElBUVFpZ0lMQzlvQkFRSi9Jd1FoQXlNRVFVQnJKQVFqQkNNRlRnUkFRY0FBRUFBTElBQWdBVUVBRUhVRWYwRUJCU0FCQkg4Z0FVSHcxUUFRMVFRaUFRUi9JQU1nQVRZQ0FDQURRUUEyQWdRZ0F5QUFOZ0lJSUFOQmZ6WUNEQ0FEUWdBM0FoQWdBMElBTndJWUlBTkNBRGNDSUNBRFFnQTNBaWdnQTBFQU5nSXdJQU5CQURzQk5DQURRUUE2QURZZ0EwRUJOZ0l3SUFFb0FnQW9BaHdoQUNBQklBTWdBaWdDQUVFQklBQkJCM0ZCbGdscUVSRUFJQU1vQWhoQkFVWUVmeUFDSUFNb0FoQTJBZ0JCQVFWQkFBc0ZRUUFMQlVFQUN3c2hCQ0FESkFRZ0JBdk1BUUVFZnlNRUlRVWpCRUdRSTJva0JDTUVJd1ZPQkVCQmtDTVFBQXNnQlVINEltb2hCQUovQWtBZ0FFVU5BQ0FDUlNJR0lBRkJBRWR4RFFBZ0JTQUFJQUFRZXlBQWFoRDFDQ0FFUVg4MkFnd2dCRUYvTmdJUUlBVVEwUVFpQUFSL0lBRWdBaUFFRU00RUJIOGdBQ0FFRUZZZ0JFRUFFR3NnQmtVRVFDQUNJQVFvQWdRMkFnQUxJQVFvQWdBaEFVRUFCVUYvQ3dWQmZnc2hBQ0FEQkVBZ0F5QUFOZ0lBQ3lBRkVNOEVRUUFnQVNBQUd3d0JDeUFEQkVBZ0EwRjlOZ0lBQzBFQUN5RUhJQVVrQkNBSEM5OENBUWgvSXdRaEFpTUVRYkFJYWlRRUl3UWpCVTRFUUVHd0NCQUFDeUFDUVpnSWFpRUJJQUpCa0FocUlRTWdBa0dBQ0dvaEJDQUNRYXdJYWlFRklBSkJxQWhxSVFZZ0FrR2tDR29oQjBIVS9nSW9BZ0FpQUFSQUlBQXBBekJDZ0g2RFFvRFdySm4weUpPbXd3QlNCRUFnQVVIOThnRTJBZ0JCeS9JQklBRVF4Z0VMSUFCQjBBQnFJUUVnQlNBQUtRTXdRb0hXckpuMHlKT213d0JSQkg4Z0FDZ0NMQVVnQVFzMkFnQWdBQ2dDQUNFQUlBZEJnQWcyQWdBZ0FDZ0NCQ0FDSUFjZ0JoRGJCQ0VCSUFZb0FnQUVRQ0FBS0FJRUlRRUxRZWpWQUNBQUlBVkI2TlVBS0FJQUtBSVFRUjl4UWNvQmFoRUVBQVJBSUFVb0FnQWlBQ2dDQUNnQ0NDRURJQUFnQTBIL0FIRkJCR29SQ0FBaEFDQUVRZjN5QVRZQ0FDQUVJQUUyQWdRZ0JDQUFOZ0lJUWZYeEFTQUVFTVlCQlNBRFFmM3lBVFlDQUNBRElBRTJBZ1JCb3ZJQklBTVF4Z0VMQzBIeDhnRWdBa0dnQ0dvUXhnRUx6UUVCQkg4akJDRUZJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBTEFBTElnUkJBRWdpQmdSL0lBQW9BZ1FoQXlBQUtBSUlRZi8vLy84SGNVRi9hZ1VnQkVIL0FYRWhBMEVCQ3lJRUlBTnJJQUpKQkVBZ0FDQUVJQUlnQTJvZ0JHc2dBeUFEUVFBZ0FpQUJFTnNDQlNBQ0JFQWdCZ1IvSUFBb0FnQUZJQUFMSWdRZ0EwRUNkR29nQVNBQ0VKc0JJQUlnQTJvaEFTQUFMQUFMUVFCSUJFQWdBQ0FCTmdJRUJTQUFJQUU2QUFzTElBVkJBRFlDQUNBQlFRSjBJQVJxSUFVb0FnQTJBZ0FMQ3lBRkpBUUx0QUVDQkg4QmZDQUFLQUxRQnlJQ1FRRnhSUVJBRHdzZ0FTc0RFQ0FCS3dNZ29DRUdJQUFvQWdRaUF5Z0NkQ0lCQkVBZ0FDZ0NSQ0VFQTBBZ0FTZ0NFRUVEZENBRWFpSUZJQVlnQlNzREFLRTVBd0FnQVNnQ0FDSUJEUUFMQ3lBQ1FRSnhSUVJBRHdzZ0F5Z0NnQUVpQVVVRVFBOExJQUFvQXB3RklRSURRQ0FCS0FJWVFRUjBJQUpxS0FJRUlnQUVRQU5BSUFBZ0JpQUFLd01Rb1RrREVDQUFLQUlBSWdBTkFBc0xJQUVvQWdBaUFRMEFDd3ZBQVFFRWZ5TUVJUVVqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFBc0FBc2lCa0VBU0NJREJIOGdBQ2dDQ0VILy8vLy9CM0ZCZjJvRlFRRUxJZ1FnQWtrRVFDQUFJQVFnQWlBRWF5QURCSDhnQUNnQ0JBVWdCa0gvQVhFTElnQkJBQ0FBSUFJZ0FSRGJBZ1VnQXdSL0lBQW9BZ0FGSUFBTElnTWhCQ0FDQkVBZ0JDQUJJQUlROFFZTElBVkJBRFlDQUNBQ1FRSjBJQU5xSUFVb0FnQTJBZ0FnQUN3QUMwRUFTQVJBSUFBZ0FqWUNCQVVnQUNBQ09nQUxDd3NnQlNRRUM4Y0JBUVIvSXdRaEJTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBQ3dBQ3lJRVFRQklJZ1lFZnlBQUtBSUVJUU1nQUNnQ0NFSC8vLy8vQjNGQmYyb0ZJQVJCL3dGeElRTkJDZ3NpQkNBRGF5QUNTUVJBSUFBZ0JDQUNJQU5xSUFScklBTWdBMEVBSUFJZ0FSRGRBZ1VnQWdSQUlBTWdCZ1IvSUFBb0FnQUZJQUFMSWdScUlBRWdBaENjQVNBQ0lBTnFJUUVnQUN3QUMwRUFTQVJBSUFBZ0FUWUNCQVVnQUNBQk9nQUxDeUFGUVFBNkFBQWdBU0FFYWlBRkxBQUFPZ0FBQ3dzZ0JTUUVDOGNCQVFSL0l3UWhCQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQVFSQUlBQXNBQXNpQTBFQVNBUi9JQUFvQWdRaEFpQUFLQUlJUWYvLy8vOEhjVUYvYWdVZ0EwSC9BWEVoQWtFS0N5SUZJQUpySUFGSkJIOGdBQ0FGSUFFZ0Ftb2dCV3NnQWlBQ0VJd0NJQUFzQUFzRklBTUxRUUJJQkg4Z0FDZ0NBQVVnQUFzaUF5QUNhaUFCUVFBUTNnSWdBU0FDYWlFQklBQXNBQXRCQUVnRVFDQUFJQUUyQWdRRklBQWdBVG9BQ3dzZ0JFRUFPZ0FBSUFFZ0Eyb2dCQ3dBQURvQUFBc2dCQ1FFQzFRQkEzOGpCQ0VCSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBQUtBSUFJZ0lvQWlBaEF5QUNLQUk4SVFJZ0FTQUFJQUpCL3dGeFFZNEhhaEVBQUNBQUlBRWdBMEgvQVhGQmpnZHFFUUFBSUFFa0JBdStBUUVFZnlNRUlRVWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUFzQUFzaUJrRUFTQ0lEQkg4Z0FDZ0NDRUgvLy8vL0IzRkJmMm9GUVFvTElnUWdBa2tFUUNBQUlBUWdBaUFFYXlBREJIOGdBQ2dDQkFVZ0JrSC9BWEVMSWdCQkFDQUFJQUlnQVJEZEFnVWdBd1IvSUFBb0FnQUZJQUFMSWdNaEJDQUNCRUFnQkNBQklBSVF2Z0VhQ3lBRlFRQTZBQUFnQWlBRGFpQUZMQUFBT2dBQUlBQXNBQXRCQUVnRVFDQUFJQUkyQWdRRklBQWdBam9BQ3dzTElBVWtCQXRBQVFGL0l3UWhBU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFQk9nQUxJQUJCQVVFdEVONENJQUZCQURvQUFDQUFJQUVzQUFBNkFBRWdBU1FFQ3p3QUEwQWdBQ2dDQUVFQlJnUkFRYVQrQWtHSS9nSVFHQm9NQVFzTElBQW9BZ0JGQkVBZ0FFRUJOZ0lBSUFGQnZBVVJBUUFnQUVGL05nSUFDd3RuQVFGL1FjallBaXdBQUVVRVFFSEkyQUlzQUFCQkFFZEJBWE1FUUVHQS9nSVE2QVFvQWdBaUFEWUNBQ0FBSUFBb0FnUkJBV28yQWdSQmhQNENRWUQrQWpZQ0FFSEkyQUpCQURZQ0FFSEkyQUpCeU5nQ0tBSUFRUUZ5TmdJQUN3dEJoUDRDS0FJQUM1SUJBZ0ovQW53akJDRUJJd1JCTUdva0JDTUVJd1ZPQkVCQk1CQUFDeUFBS0FMUUIwRUJjVVVFUUNBQkpBUVBDeUFBS0FJQUtBSThJUUlnQVNBQUlBSkIvd0Z4UVk0SGFoRUFBQ0FCS3dNSUlnTkVBQUFBQUFBQUFJQmlJQUVyQXhBaUJFUUFBQUFBQUFBQWdHSnlCRUFnQUNnQ0FDZ0NGQ0VDSUFBZ0E1b2dCSm9nQWtFQmNVR0VCMm9SQmdBTElBRWtCQXRYQUVHZzF3SXNBQUJGQkVCQm9OY0NMQUFBUVFCSFFRRnpCRUFROUFSQitQMENRYWpYQWpZQ0FFSDgvUUpCK1AwQ05nSUFRYURYQWtFQU5nSUFRYURYQWtHZzF3SW9BZ0JCQVhJMkFnQUxDMEg4L1FJb0FnQUxRQUVCZjBHMDF3SkJzTmdDTEFBQUJIOUI4QUFRWHdWQnNOZ0NRUUU2QUFCQndOY0NDeUlBTmdJQVFiRFhBaUFBTmdJQVFialhBaUFBUWZBQWFqWUNBQXRmQVFGL1FielZBa0VBTmdJQVFialZBa0gwaGdFMkFnQkJ3TlVDUVM0NkFBQkJ3ZFVDUVN3NkFBQkJ4TlVDUWdBM0FnQkJ6TlVDUVFBMkFnQURRQ0FBUVFOSEJFQWdBRUVDZEVIRTFRSnFRUUEyQWdBZ0FFRUJhaUVBREFFTEN3dGZBUUYvUWRUVkFrRUFOZ0lBUWREVkFrR2Nod0UyQWdCQjJOVUNRUzQyQWdCQjNOVUNRU3cyQWdCQjROVUNRZ0EzQWdCQjZOVUNRUUEyQWdBRFFDQUFRUU5IQkVBZ0FFRUNkRUhnMVFKcVFRQTJBZ0FnQUVFQmFpRUFEQUVMQ3d0VUFRSi9JQUFvQWdRaEFpQUFLQUlJSVFFRFFDQUJJQUpIQkVBZ0FDQUJRWHhxSWdFMkFnZ01BUXNMSUFBb0FnQWlBUVJBSUFFZ0FDZ0NFQ0lDUmdSQUlBSkJBRG9BY0FVZ0FDZ0NEQm9nQVJCREN3c0xvUUVCQTM4Z0FDQUFLQUlFUVFCQnROY0NLQUlBUWJEWEFpZ0NBQ0lEYXlJQ1FRSjFhMEVDZEdvaUFUWUNCQ0FDUVFCS0JFQWdBU0FESUFJUWd3RWFJQUFvQWdRaEFRdEJzTmNDS0FJQUlRSkJzTmNDSUFFMkFnQWdBQ0FDTmdJRVFiVFhBaWdDQUNFQlFiVFhBaUFBS0FJSU5nSUFJQUFnQVRZQ0NFRzQxd0lvQWdBaEFVRzQxd0lnQUNnQ0REWUNBQ0FBSUFFMkFnd2dBQ0FBS0FJRU5nSUFDeTBCQVg4Z0FDZ0NDQ0VDQTBBZ0FrRUFOZ0lBSUFBZ0FDZ0NDRUVFYWlJQ05nSUlJQUZCZjJvaUFRMEFDd3R5QVFGL1FjRFhBaUVESUFCQkFEWUNEQ0FBUWNEWEFqWUNFQ0FCQkVCQnNOZ0NMQUFBUlNBQlFSMUpjUVJBUWJEWUFrRUJPZ0FBQlNBQlFRSjBFRjhoQXdzRlFRQWhBd3NnQUNBRE5nSUFJQUFnQWtFQ2RDQURhaUlDTmdJSUlBQWdBallDQkNBQUlBRkJBblFnQTJvMkFnd0x0QUVCQlg4akJDRUJJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDMEc0MXdJb0FnQkJ0TmNDS0FJQUlnSnJRUUoxSUFCSkJFQkIvLy8vL3dNZ0FDQUNRYkRYQWlnQ0FHdEJBblZxSWdKSkJFQVFBd1VnQVNBQ1FialhBaWdDQUVHdzF3SW9BZ0FpQTJzaUJFRUJkU0lGSUFVZ0Fra2JRZi8vLy84RElBUkJBblZCLy8vLy93RkpHMEcwMXdJb0FnQWdBMnRCQW5VUTd3UWdBU0FBRU80RUlBRVE3UVFnQVJEc0JBc0ZJQUFRM3dJTElBRWtCQXZQQVFFR2Z5QUFLQUxRQnlJRVFRRnhCRUFnQUNnQ0JDZ0NkQ0lEQkVBZ0FDZ0NIQ0VHSUFBb0FrUWhCd05BSUFNb0FoQWlCVUVEZENBR2FpSUlJQWdyQXdBZ0FhQTVBd0FnQlVFRGRDQUhhaUlGSUFVckF3QWdBcUE1QXdBZ0F5Z0NBQ0lERFFBTEN3c2dCRUVDY1VVRVFBOExJQUFvQWdRb0FvQUJJZ05GQkVBUEN5QUFLQUtjQlNFRUEwQWdBeWdDR0VFRWRDQUVhaWdDQkNJQUJFQURRQ0FBSUFBckF3Z2dBYUE1QXdnZ0FDQUFLd01RSUFLZ09RTVFJQUFvQWdBaUFBMEFDd3NnQXlnQ0FDSUREUUFMQzBBQkFuOUJ0TmNDS0FJQVFiRFhBaWdDQUNJQ2EwRUNkU0lCSUFCSkJFQWdBQ0FCYXhEd0JBVWdBU0FBU3dSQVFiVFhBaUFBUVFKMElBSnFOZ0lBQ3dzTExnQkJzTmNDUVFBMkFnQkJ0TmNDUVFBMkFnQkJ1TmNDUVFBMkFnQkJzTmdDUVFBNkFBQVE2UVJCSEJEZkFndTdDQUJCck5jQ1FRQTJBZ0JCcU5jQ1FheUdBVFlDQUJEekJFRzQyQUpDQURjQ0FFSEEyQUpCQURZQ0FFRzQyQUpCbnVFQlFaN2hBUkI3RUtFQlFiVFhBa0d3MXdJb0FnQTJBZ0JCN05RQ1FRQTJBZ0JCNk5RQ1FjejFBRFlDQUVIbzFBSkJtUHNDRUdrUWFrSDAxQUpCQURZQ0FFSHcxQUpCN1BVQU5nSUFRZkRVQWtHZyt3SVFhUkJxUWZ6VUFrRUFOZ0lBUWZqVUFrSEFoZ0UyQWdCQmdOVUNRUUEyQWdCQmhOVUNRUUE2QUFCQmdOVUNRY3p3QUNnQ0FEWUNBRUg0MUFKQnFQc0NFR2tRYWtHTTFRSkJBRFlDQUVHSTFRSkJoSWdCTmdJQVFZalZBa0hJK3dJUWFSQnFRWlRWQWtFQU5nSUFRWkRWQWtISWlBRTJBZ0JCa05VQ1FkajlBaEJwRUdwQm5OVUNRUUEyQWdCQm1OVUNRZnlGQVRZQ0FFR2cxUUlRWGpZQ0FFR1kxUUpCNFAwQ0VHa1Fha0dzMVFKQkFEWUNBRUdvMVFKQitJZ0JOZ0lBUWFqVkFrSG8vUUlRYVJCcVFiVFZBa0VBTmdJQVFiRFZBa0dvaVFFMkFnQkJzTlVDUWZEOUFoQnBFR29RNmdSQnVOVUNRYmo3QWhCcEVHb1E2d1JCME5VQ1FkRDdBaEJwRUdwQjlOVUNRUUEyQWdCQjhOVUNRWXoyQURZQ0FFSHcxUUpCd1BzQ0VHa1Fha0g4MVFKQkFEWUNBRUg0MVFKQnpQWUFOZ0lBUWZqVkFrSFkrd0lRYVJCcVFZVFdBa0VBTmdJQVFZRFdBa0dNOXdBMkFnQkJnTllDUWVEN0FoQnBFR3BCak5ZQ1FRQTJBZ0JCaU5ZQ1FjRDNBRFlDQUVHSTFnSkI2UHNDRUdrUWFrR1UxZ0pCQURZQ0FFR1ExZ0pCaklJQk5nSUFRWkRXQWtHSS9RSVFhUkJxUVp6V0FrRUFOZ0lBUVpqV0FrSEVnZ0UyQWdCQm1OWUNRWkQ5QWhCcEVHcEJwTllDUVFBMkFnQkJvTllDUWZ5Q0FUWUNBRUdnMWdKQm1QMENFR2tRYWtHczFnSkJBRFlDQUVHbzFnSkJ0SU1CTmdJQVFhaldBa0dnL1FJUWFSQnFRYlRXQWtFQU5nSUFRYkRXQWtIc2d3RTJBZ0JCc05ZQ1FhajlBaEJwRUdwQnZOWUNRUUEyQWdCQnVOWUNRWWlFQVRZQ0FFRzQxZ0pCc1AwQ0VHa1Fha0hFMWdKQkFEWUNBRUhBMWdKQnBJUUJOZ0lBUWNEV0FrRzQvUUlRYVJCcVFjeldBa0VBTmdJQVFjaldBa0hBaEFFMkFnQkJ5TllDUWNEOUFoQnBFR3BCMU5ZQ1FRQTJBZ0JCME5ZQ1FmQ0hBVFlDQUVIWTFnSkIySWtCTmdJQVFkRFdBa0gwOXdBMkFnQkIyTllDUWFUNEFEWUNBRUhRMWdKQnJQd0NFR2tRYWtIazFnSkJBRFlDQUVIZzFnSkI4SWNCTmdJQVFlaldBa0g4aVFFMkFnQkI0TllDUWNqNEFEWUNBRUhvMWdKQitQZ0FOZ0lBUWVEV0FrSHcvQUlRYVJCcVFmVFdBa0VBTmdJQVFmRFdBa0h3aHdFMkFnQkIrTllDRUY0MkFnQkI4TllDUWR5QkFUWUNBRUh3MWdKQitQd0NFR2tRYWtHRTF3SkJBRFlDQUVHQTF3SkI4SWNCTmdJQVFZalhBaEJlTmdJQVFZRFhBa0gwZ1FFMkFnQkJnTmNDUVlEOUFoQnBFR3BCbE5jQ1FRQTJBZ0JCa05jQ1FkeUVBVFlDQUVHUTF3SkJ5UDBDRUdrUWFrR2Mxd0pCQURZQ0FFR1kxd0pCL0lRQk5nSUFRWmpYQWtIUS9RSVFhUkJxQzFFQkEzOENmeUFDSUFGclFRSjJJUWNnQVNFQUEwQWdBQ0FDUndSQUlBUWdBQ2dDQUNJR1FmOEJjU0FESUFaQmdBRkpHem9BQUNBRVFRRnFJUVFnQUVFRWFpRUFEQUVMQ3lBSEMwRUNkQ0FCYWdzUkFDQUJRZjhCY1NBQ0lBRkJnQUZKR3dzcEFBTkFJQUVnQWtjRVFDQURJQUVzQUFBMkFnQWdBMEVFYWlFRElBRkJBV29oQVF3QkN3c2dBZ3NLQUNBQlFSaDBRUmgxQzBFQUEwQWdBU0FDUndSQUlBRWdBU2dDQUNJQVFZQUJTUVIvUWREd0FDZ0NBQ0FCS0FJQVFRSjBhaWdDQUFVZ0FBczJBZ0FnQVVFRWFpRUJEQUVMQ3lBQ0N4NEFJQUZCZ0FGSkJIOUIwUEFBS0FJQUlBRkJBblJxS0FJQUJTQUJDd3NpQVFGL0lBQW9BZ0FvQWd3aEF5QUFJQUVnQVNBQ0lBTkJBWEZCaWdkcUVRVUFDMEVBQTBBZ0FTQUNSd1JBSUFFZ0FTZ0NBQ0lBUVlBQlNRUi9RZFR3QUNnQ0FDQUJLQUlBUVFKMGFpZ0NBQVVnQUFzMkFnQWdBVUVFYWlFQkRBRUxDeUFDQ3g0QUlBRkJnQUZKQkg5QjFQQUFLQUlBSUFGQkFuUnFLQUlBQlNBQkN3dEtBQU5BQWtBZ0FpQURSZ1JBSUFNaEFnd0JDeUFDS0FJQVFZQUJUdzBBSUFGQnpQQUFLQUlBSUFJb0FnQkJBWFJxTGdFQWNVSC8vd054QkVBZ0FrRUVhaUVDREFJTEN3c2dBZ3RLQUFOQUFrQWdBaUFEUmdSQUlBTWhBZ3dCQ3lBQ0tBSUFRWUFCU1FSQUlBRkJ6UEFBS0FJQUlBSW9BZ0JCQVhScUxnRUFjVUgvL3dOeERRRUxJQUpCQkdvaEFnd0JDd3NnQWd0R0FBTkFJQUVnQWtjRVFDQURJQUVvQWdCQmdBRkpCSDlCelBBQUtBSUFJQUVvQWdCQkFYUnFMd0VBQlVFQUN6c0JBQ0FCUVFScUlRRWdBMEVDYWlFRERBRUxDeUFDQ3lrQUlBSkJnQUZKQkg4Z0FVSE04QUFvQWdBZ0FrRUJkR291QVFCeFFmLy9BM0ZCQUVjRlFRQUxDeUFBSUFCQ0FEY0NBQ0FBUVFBMkFnZ2dBRUc4aHdGQnZJY0JFS3dCRUxJQkN5QUFJQUJDQURjQ0FDQUFRUUEyQWdnZ0FFSFVod0ZCMUljQkVLd0JFTElCQ3d3QUlBQWdBVUVRYWhEaEFRc0xBQ0FBRU9BQ0lBQVFRd3U5QWdJSWZ3SjhJQUFvQXRBSElnbEJBWEVFUUNBQUtBSUVLQUowSWdWRklnWkZCRUFnQUNnQ0hDRUhJQUFvQWtRaENpQUZJUVFEUUNBRUtBSVFJZ2hCQTNRZ0Iyb2lDeUFMS3dNQUlBR2lPUU1BSUFoQkEzUWdDbW9pQ0NBSUt3TUFJQUtpT1FNQUlBUW9BZ0FpQkEwQUN3c2dBd1JBSUFHWklRd2dBcGtoRFNBR1JRUkFJQUFvQW93Q0lRUWdBQ2dDdEFJaEJpQUZJUU1EUUNBREtBSVFJZ1ZCQTNRZ0JHb2lCeUFNSUFjckF3Q2lPUU1BSUFWQkEzUWdCbW9pQlNBTklBVXJBd0NpT1FNQUlBTW9BZ0FpQXcwQUN3c0xDeUFKUVFKeFJRUkFEd3NnQUNnQ0JDZ0NnQUVpQTBVRVFBOExJQUFvQXB3RklRUURRQ0FES0FJWVFRUjBJQVJxS0FJRUlnQUVRQU5BSUFBZ0FDc0RDQ0FCb2prRENDQUFJQUFyQXhBZ0FxSTVBeEFnQUNnQ0FDSUFEUUFMQ3lBREtBSUFJZ01OQUFzTEh3QWdBRUlBTndJQUlBQkJBRFlDQ0NBQVFZditBVUdML2dFUWV4Q2hBUXNmQUNBQVFnQTNBZ0FnQUVFQU5nSUlJQUJCaHY0QlFZYitBUkI3RUtFQkN3d0FJQUFnQVVFTWFoRGhBUXNIQUNBQUxBQUpDd2NBSUFBc0FBZ0xDd0FnQUJEaEFpQUFFRU1MTXdBRFFDQUJJQUpIQkVBZ0JDQUJMQUFBSWdBZ0F5QUFRWDlLR3pvQUFDQUVRUUZxSVFRZ0FVRUJhaUVCREFFTEN5QUNDeElBSUFFZ0FpQUJRUmgwUVJoMVFYOUtHd3NiQUNBQUlBRTJBZ1FnQUNBQUtBTFFCeENzQkNBQUlBSVF6QUlMS1FBRFFDQUJJQUpIQkVBZ0F5QUJMQUFBT2dBQUlBTkJBV29oQXlBQlFRRnFJUUVNQVFzTElBSUxSQUFEUUNBQklBSkhCRUFnQVNBQkxBQUFJZ0JCZjBvRWYwSFE4QUFvQWdBZ0FTd0FBRUVDZEdvb0FnQkIvd0Z4QlNBQUN6b0FBQ0FCUVFGcUlRRU1BUXNMSUFJTExRQWdBVUVZZEVFWWRVRi9TZ1IvUWREd0FDZ0NBQ0FCUVJoMFFSaDFRUUowYWlnQ0FFSC9BWEVGSUFFTEMwUUFBMEFnQVNBQ1J3UkFJQUVnQVN3QUFDSUFRWDlLQkg5QjFQQUFLQUlBSUFFc0FBQkJBblJxS0FJQVFmOEJjUVVnQUFzNkFBQWdBVUVCYWlFQkRBRUxDeUFDQ3lzQUlBRkJHSFJCR0hWQmYwb0VmMEhVOEFBb0FnQWdBVUgvQVhGQkFuUnFLQUlBUWY4QmNRVWdBUXNMQ3dBZ0FCRGlBaUFBRUVNTE53RUNmeUFBS0FJQUlnRWhBaUFCQkVBZ0FDQUNOZ0lFSUFFZ0FFRVFha1lFUUNBQVFRQTZBSUFCQlNBQUtBSUlHaUFCRUVNTEN3c0xBQ0FBRU9NQ0lBQVFRd3NMQUNBQUVMVUJJQUFRUXd1UUJnRUNmeUFDSUFBMkFnQWdCU0FETmdJQUlBSW9BZ0FoQUFOQUFrQWdBQ0FCVHdSQVFRQWhBQXdCQ3lBQUxnRUFJZ1pCLy84RGNTSURRZi8vd3dCTEJFQkJBaUVBREFFTElBWkIvLzhEY1VHQUFVZ0VRQ0FFSUFVb0FnQWlBR3RCQVVnRVFFRUJJUUFNQWdzZ0JTQUFRUUZxTmdJQUlBQWdCam9BQUFVQ1FDQUdRZi8vQTNGQmdCQklCRUFnQkNBRktBSUFJZ0JyUVFKSUJFQkJBU0VBREFRTElBVWdBRUVCYWpZQ0FDQUFJQU5CQm5aQndBRnlPZ0FBSUFVZ0JTZ0NBQ0lBUVFGcU5nSUFJQUFnQTBFL2NVR0FBWEk2QUFBTUFRc2dCa0gvL3dOeFFZQ3dBMGdFUUNBRUlBVW9BZ0FpQUd0QkEwZ0VRRUVCSVFBTUJBc2dCU0FBUVFGcU5nSUFJQUFnQTBFTWRrSGdBWEk2QUFBZ0JTQUZLQUlBSWdCQkFXbzJBZ0FnQUNBRFFRWjJRVDl4UVlBQmNqb0FBQ0FGSUFVb0FnQWlBRUVCYWpZQ0FDQUFJQU5CUDNGQmdBRnlPZ0FBREFFTElBWkIvLzhEY1VHQXVBTk9CRUFnQmtILy93TnhRWURBQTBnRVFFRUNJUUFNQkFzZ0JDQUZLQUlBSWdCclFRTklCRUJCQVNFQURBUUxJQVVnQUVFQmFqWUNBQ0FBSUFOQkRIWkI0QUZ5T2dBQUlBVWdCU2dDQUNJQVFRRnFOZ0lBSUFBZ0EwRUdka0UvY1VHQUFYSTZBQUFnQlNBRktBSUFJZ0JCQVdvMkFnQWdBQ0FEUVQ5eFFZQUJjam9BQUF3QkN5QUJJQUJyUVFSSUJFQkJBU0VBREFNTElBQkJBbW9oQmlBQUx3RUNJZ0JCZ1BnRGNVR0F1QU5IQkVCQkFpRUFEQU1MSUFRZ0JTZ0NBR3RCQkVnRVFFRUJJUUFNQXdzZ0FFSC9CM0VnQTBIQUIzRWlCMEVLZEVHQWdBUnFJQU5CQ25SQmdQZ0RjWEp5UWYvL3d3QkxCRUJCQWlFQURBTUxJQUlnQmpZQ0FDQUZJQVVvQWdBaUJrRUJhallDQUNBR0lBZEJCblpCQVdvaUJrRUNka0h3QVhJNkFBQWdCU0FGS0FJQUlnZEJBV28yQWdBZ0J5QURRUUoyUVE5eElBWkJCSFJCTUhGeVFZQUJjam9BQUNBRklBVW9BZ0FpQmtFQmFqWUNBQ0FHSUFCQkJuWkJEM0VnQTBFRWRFRXdjWEpCZ0FGeU9nQUFJQVVnQlNnQ0FDSURRUUZxTmdJQUlBTWdBRUUvY1VHQUFYSTZBQUFMQ3lBQ0lBSW9BZ0JCQW1vaUFEWUNBQXdCQ3dzZ0FBdTlCZ0VGZnlBQ0lBQTJBZ0FnQlNBRE5nSUFBMEFDUUNBQ0tBSUFJZ01nQVU4RVFFRUFJUUFNQVFzZ0JTZ0NBQ0lJSUFSUEJFQkJBU0VBREFFTElBTXNBQUFpQjBIL0FYRWlDVUgvLzhNQVN3UkFRUUloQUF3QkN5QUNJQWRCZjBvRWZ5QUlJQWRCL3dGeE93RUFJQU5CQVdvRkFuOGdCMEgvQVhGQndnRklCRUJCQWlFQURBTUxJQWRCL3dGeFFlQUJTQVJBSUFFZ0EydEJBa2dFUUVFQklRQU1CQXNnQXkwQUFTSUFRY0FCY1VHQUFVY0VRRUVDSVFBTUJBc2dBRUUvY1NBSlFRWjBRY0FQY1hJaUFFSC8vOE1BU3dSQVFRSWhBQXdFQ3lBSUlBQTdBUUFnQTBFQ2Fnd0JDeUFIUWY4QmNVSHdBVWdFUUNBQklBTnJRUU5JQkVCQkFTRUFEQVFMSUFNc0FBRWhCaUFETFFBQ0lRQUNRQUpBQWtBQ1FDQUhRV0JyRGc0QUFnSUNBZ0lDQWdJQ0FnSUNBUUlMSUFaQjRBRnhRYUFCUndSQVFRSWhBQXdIQ3d3Q0N5QUdRZUFCY1VHQUFVY0VRRUVDSVFBTUJnc01BUXNnQmtIQUFYRkJnQUZIQkVCQkFpRUFEQVVMQ3lBQVFjQUJjVUdBQVVjRVFFRUNJUUFNQkFzZ0FFRS9jU0FKUVF4MElBWkJQM0ZCQm5SeWNpSUFRZi8vQTNGQi8vL0RBRXNFUUVFQ0lRQU1CQXNnQ0NBQU93RUFJQU5CQTJvTUFRc2dCMEgvQVhGQjlRRk9CRUJCQWlFQURBTUxJQUVnQTJ0QkJFZ0VRRUVCSVFBTUF3c2dBeXdBQVNFR0lBTXRBQUloQUNBRExRQURJUU1DUUFKQUFrQUNRQ0FIUVhCckRnVUFBZ0lDQVFJTElBWkI4QUJxUVJoMFFSaDFRZjhCY1VFd1RnUkFRUUloQUF3R0N3d0NDeUFHUWZBQmNVR0FBVWNFUUVFQ0lRQU1CUXNNQVFzZ0JrSEFBWEZCZ0FGSEJFQkJBaUVBREFRTEN5QUFRY0FCY1VHQUFVY0VRRUVDSVFBTUF3c2dBMEhBQVhGQmdBRkhCRUJCQWlFQURBTUxJQVFnQ0d0QkJFZ0VRRUVCSVFBTUF3c2dBMEUvY1NJSElBQkJCblFpQ2tIQUgzRWdCa0gvQVhFaUEwRU1kRUdBNEE5eElBbEJCM0VpQmtFU2RISnlja0gvLzhNQVN3UkFRUUloQUF3REN5QUlJQU5CQkhaQkEzRWdCa0VDZEhKQkJuUkJ3UDhBYWlBQVFRUjJRUU54SUFOQkFuUkJQSEZ5Y2tHQXNBTnlPd0VBSUFVZ0NFRUNhallDQUNBSUlBY2dDa0hBQjNGeVFZQzRBM0k3QVFJZ0FpZ0NBRUVFYWdzTE5nSUFJQVVnQlNnQ0FFRUNhallDQUF3QkN3c2dBQXVkQkFFSGZ5QUJJUWNnQUNFRFFRQWhBUU5BQWtBZ0F5QUhTU0FCSUFKSmNVVU5BQ0FETEFBQUlnUkIvd0Z4SWdsQi8vL0RBRXNOQUNBRVFYOUtCSDhnQTBFQmFnVUNmeUFFUWY4QmNVSENBVWdOQWlBRVFmOEJjVUhnQVVnRVFDQUhJQU5yUVFKSURRTWdBeTBBQVNJRlFjQUJjVUdBQVVjTkF5QUZRVDl4SUFsQkJuUkJ3QTl4Y2tILy84TUFTdzBESUFOQkFtb01BUXNnQkVIL0FYRkI4QUZJQkVBZ0J5QURhMEVEU0EwRElBTXNBQUVoQmlBRExRQUNJUVVDUUFKQUFrQUNRQ0FFUVdCckRnNEFBZ0lDQWdJQ0FnSUNBZ0lDQVFJTElBWkI0QUZ4UWFBQlJ3MEdEQUlMSUFaQjRBRnhRWUFCUncwRkRBRUxJQVpCd0FGeFFZQUJSdzBFQ3lBRlFjQUJjVUdBQVVjTkF5QUZRVDl4SUFsQkRIUkJnT0FEY1NBR1FUOXhRUVowY25KQi8vL0RBRXNOQXlBRFFRTnFEQUVMSUFSQi93RnhRZlVCVGcwQ0lBY2dBMnRCQkVnZ0FpQUJhMEVDU1hJTkFpQURMQUFCSVFnZ0F5MEFBaUVGSUFNdEFBTWhCZ0pBQWtBQ1FBSkFJQVJCY0dzT0JRQUNBZ0lCQWdzZ0NFSHdBR3BCR0hSQkdIVkIvd0Z4UVRCT0RRVU1BZ3NnQ0VId0FYRkJnQUZIRFFRTUFRc2dDRUhBQVhGQmdBRkhEUU1MSUFWQndBRnhRWUFCUncwQ0lBWkJ3QUZ4UVlBQlJ3MENJQVpCUDNFZ0JVRUdkRUhBSDNFZ0NVRVNkRUdBZ1BBQWNTQUlRVDl4UVF4MGNuSnlRZi8vd3dCTERRSWdBVUVCYWlFQklBTkJCR29MQ3lFRElBRkJBV29oQVF3QkN3c2dBeUFBYXdzTEFDQUNJQU1nQkJDYkJRdFpBUUYvSXdRaEFDTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVFYWlJQklBSTJBZ0FnQUNBRk5nSUFJQUlnQXlBQklBVWdCaUFBRUpvRklRZ2dCQ0FCS0FJQU5nSUFJQWNnQUNnQ0FEWUNBQ0FBSkFRZ0NBdFpBUUYvSXdRaEFDTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVFYWlJQklBSTJBZ0FnQUNBRk5nSUFJQUlnQXlBQklBVWdCaUFBRUprRklRZ2dCQ0FCS0FJQU5nSUFJQWNnQUNnQ0FEWUNBQ0FBSkFRZ0NBc0xBQ0FBRU9RQ0lBQVFRd3Q2QVFGL0lBQW9BZ2dpQUFSQVFaVHdBQ2dDQUNFQklBQUVRRUdVOEFCQnlPNENJQUFnQUVGL1JoczJBZ0FMUVg4Z0FTQUJRY2p1QWtZYklRRkJCRUVCUVpUd0FDZ0NBQ2dDQUJzaEFDQUJCRUJCbFBBQUtBSUFHaUFCQkVCQmxQQUFRY2p1QWlBQklBRkJmMFliTmdJQUN3c0ZRUUVoQUFzZ0FBdTVBUUVFZnlBRElRWURRQUpBSUFJZ0JrWWdCeUFFVDNJTkFFR1U4QUFvQWdBaEF5QUFLQUlJSWdVRVFFR1U4QUJCeU80Q0lBVWdCVUYvUmhzMkFnQUxRWDhnQXlBRFFjanVBa1liSVFWQkFDQUNJQVlnQW1zZ0FVR1k3d0lnQVJzUTBBRWhBeUFGQkVCQmxQQUFLQUlBR2lBRkJFQkJsUEFBUWNqdUFpQUZJQVZCZjBZYk5nSUFDd3NDUUFKQUlBTkJmbXNPQXdJQ0FBRUxRUUVoQXdzZ0FpQURhaUVDSUFNZ0NHb2hDQ0FIUVFGcUlRY01BUXNMSUFnTDV3RUJCSDlCbFBBQUtBSUFJUUVnQUNnQ0NDSUNCRUJCbFBBQVFjanVBaUFDSUFKQmYwWWJOZ0lBQzBGL0lBRWdBVUhJN2dKR0d5RUJBbjhRL2dZaEF5QUJCRUJCbFBBQUtBSUFHaUFCQkVCQmxQQUFRY2p1QWlBQklBRkJmMFliTmdJQUN3c2dBd3NFZjBGL0JTQUFLQUlJSWdBRWYwR1U4QUFvQWdBaEFTQUFCRUJCbFBBQVFjanVBaUFBSUFCQmYwWWJOZ0lBQzBGL0lBRWdBVUhJN2dKR0d5RUFBbjlCQkVFQlFaVHdBQ2dDQUNnQ0FCc2hCQ0FBQkVCQmxQQUFLQUlBR2lBQUJFQkJsUEFBUWNqdUFpQUFJQUJCZjBZYk5nSUFDd3NnQkF0QkFVWUZRUUVMQ3d2cUFRRUNmeU1FSVFVakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBUWdBallDQUVHVThBQW9BZ0FoQVNBQUtBSUlJZ0FFUUVHVThBQkJ5TzRDSUFBZ0FFRi9SaHMyQWdBTFFYOGdBU0FCUWNqdUFrWWJJUUVnQlNJQVFRQVFuZ0VoQWlBQkJFQkJsUEFBS0FJQUdpQUJCRUJCbFBBQVFjanVBaUFCSUFGQmYwWWJOZ0lBQ3dzZ0FrRUJha0VDU1FSL1FRSUZJQUpCZjJvaUFTQURJQVFvQWdCclN3Ui9RUUVGQTM4Z0FRUi9JQUFzQUFBaEFpQUVJQVFvQWdBaUEwRUJhallDQUNBRElBSTZBQUFnQVVGL2FpRUJJQUJCQVdvaEFBd0JCVUVBQ3dzTEN5RUdJQVVrQkNBR0M4WUZBUVYvSXdRaENpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBaUVJQTBBQ1FDQURJQWhHQkVBZ0F5RUlEQUVMSUFnc0FBQUVRQ0FJUVFGcUlRZ01BZ3NMQ3lBSElBVTJBZ0FnQkNBQ05nSUFJQVloQ3lBSUlRWUNmd0pBQWtBRFFBSkFJQUlnQTBZZ0JTQUxSbklOQXlBS0lBRXBBZ0EzQXdCQmxQQUFLQUlBSVFnZ0FDZ0NDQ0lKQkVCQmxQQUFRY2p1QWlBSklBbEJmMFliTmdJQUMwRi9JQWdnQ0VISTdnSkdHeUVJSUFVZ0JDQUdJQUpySUFzZ0JXdEJBblVnQVJENEJpRUpJQWdFUUVHVThBQW9BZ0FhSUFnRVFFR1U4QUJCeU80Q0lBZ2dDRUYvUmhzMkFnQUxDeUFKUVg5R0RRQWdCeUFIS0FJQUlBbEJBblJxSWdVMkFnQWdCU0FMUmcwQ0lBUW9BZ0FoQWlBRElBWkdCRUFnQXlFR0JVR1U4QUFvQWdBaEJpQUFLQUlJSWdnRVFFR1U4QUJCeU80Q0lBZ2dDRUYvUmhzMkFnQUxRWDhnQmlBR1FjanVBa1liSVFZZ0JTQUNRUUVnQVJEUUFTRUNJQVlFUUVHVThBQW9BZ0FhSUFZRVFFR1U4QUJCeU80Q0lBWWdCa0YvUmhzMkFnQUxDMEVDSUFJTkJSb2dCeUFIS0FJQVFRUnFOZ0lBSUFRZ0JDZ0NBRUVCYWlJQ05nSUFJQUloQmdOQUFrQWdBeUFHUmdSQUlBTWhCZ3dCQ3lBR0xBQUFCRUFnQmtFQmFpRUdEQUlMQ3dzZ0J5Z0NBQ0VGQ3d3QkN3c0NRQUpBQTBBQ1FDQUhJQVUyQWdBZ0JDZ0NBQ0FDUmcwRFFaVHdBQ2dDQUNFQklBQW9BZ2dpQ0FSQVFaVHdBRUhJN2dJZ0NDQUlRWDlHR3pZQ0FBdEJmeUFCSUFGQnlPNENSaHNoQ0NBRklBSWdCaUFDYXlBS0VOQUJJUUVnQ0FSQVFaVHdBQ2dDQUJvZ0NBUkFRWlR3QUVISTdnSWdDQ0FJUVg5R0d6WUNBQXNMQWtBQ1FDQUJRWDVyRGdNRUFnQUJDMEVCSVFFTElBRWdBbW9oQWlBSEtBSUFRUVJxSVFVTUFRc0xJQVFnQWpZQ0FFRUNEQVFMSUFRZ0FqWUNBRUVCREFNTElBUWdBallDQUNBQ0lBTkhEQUlMSUFRb0FnQWhBZ3NnQWlBRFJ3c2hEQ0FLSkFRZ0RBdnNCUUVHZnlNRUlRc2pCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQXRCQ0dvaERDQUNJUWdEUUFKQUlBTWdDRVlFUUNBRElRZ01BUXNnQ0NnQ0FBUkFJQWhCQkdvaENBd0NDd3NMSUFjZ0JUWUNBQ0FFSUFJMkFnQWdCaUVLQW44Q1FBSkFBMEFDUUNBQ0lBTkdJQVVnQ2taeURRTWdDeUFCS1FJQU53TUFRWlR3QUNnQ0FDRUdJQUFvQWdnaUNRUkFRWlR3QUVISTdnSWdDU0FKUVg5R0d6WUNBQXRCZnlBR0lBWkJ5TzRDUmhzaEJpQUZJQVFnQ0NBQ2EwRUNkU0FLSUFWckVQY0dJUWtnQmdSQVFaVHdBQ2dDQUJvZ0JnUkFRWlR3QUVISTdnSWdCaUFHUVg5R0d6WUNBQXNMQWtBQ1FDQUpRWDlyRGdJQ0FBRUxRUUVNQlFzZ0J5QUhLQUlBSUFscUlnVTJBZ0FnQlNBS1JnMENJQU1nQ0VZRVFDQUVLQUlBSVFZZ0F5RUNCVUdVOEFBb0FnQWhBaUFBS0FJSUlnVUVRRUdVOEFCQnlPNENJQVVnQlVGL1JoczJBZ0FMUVg4Z0FpQUNRY2p1QWtZYklRVWdERUVBRUo0QklRSWdCUVJBUVpUd0FDZ0NBQm9nQlFSQVFaVHdBRUhJN2dJZ0JTQUZRWDlHR3pZQ0FBc0xRUUlnQWtGL1JnMEZHa0VCSUFJZ0NpQUhLQUlBYTBzTkJSb2dEQ0VGQTBBZ0FnUkFJQVVzQUFBaEJpQUhJQWNvQWdBaUNFRUJhallDQUNBSUlBWTZBQUFnQWtGL2FpRUNJQVZCQVdvaEJRd0JDd3NnQkNBRUtBSUFRUVJxSWdZMkFnQWdCaUVDQTBBQ1FDQUNJQU5HQkVBZ0F5RUNEQUVMSUFJb0FnQUVRQ0FDUVFScUlRSU1BZ3NMQ3lBSEtBSUFJUVVMSUFJaENDQUdJUUlNQVFzTElBY2dCVFlDQUFOQUFrQWdCQ2dDQUNBQ1JnMEFJQUlvQWdBaEJrR1U4QUFvQWdBaEFTQUFLQUlJSWdNRVFFR1U4QUJCeU80Q0lBTWdBMEYvUmhzMkFnQUxRWDhnQVNBQlFjanVBa1liSVFFZ0JTQUdFSjRCSVFNZ0FRUkFRWlR3QUNnQ0FCb2dBUVJBUVpUd0FFSEk3Z0lnQVNBQlFYOUdHellDQUFzTElBTkJmMFlOQUNBSElBY29BZ0FnQTJvaUJUWUNBQ0FDUVFScUlRSU1BUXNMSUFRZ0FqWUNBRUVDREFJTElBUW9BZ0FoQWdzZ0FpQURSd3NoRFNBTEpBUWdEUXNSQUNBRElBSnJJZ0FnQkNBQUlBUkpHd3VQQXdFQmZ5QUNJQUEyQWdBZ0JTQUROZ0lBSUFJb0FnQWhBQU5BQWtBZ0FDQUJUd1JBUVFBaEFBd0JDeUFBS0FJQUlnQkJnSEJ4UVlDd0EwWWdBRUgvLzhNQVMzSUVRRUVDSVFBTUFRc2dBRUdBQVVrRVFDQUVJQVVvQWdBaUEydEJBVWdFUUVFQklRQU1BZ3NnQlNBRFFRRnFOZ0lBSUFNZ0FEb0FBQVVDUUNBQVFZQVFTUVJBSUFRZ0JTZ0NBQ0lEYTBFQ1NBUkFRUUVoQUF3RUN5QUZJQU5CQVdvMkFnQWdBeUFBUVFaMlFjQUJjam9BQUF3QkN5QUVJQVVvQWdBaUEyc2hCaUFBUVlDQUJFa0VRQ0FHUVFOSUJFQkJBU0VBREFRTElBVWdBMEVCYWpZQ0FDQURJQUJCREhaQjRBRnlPZ0FBQlNBR1FRUklCRUJCQVNFQURBUUxJQVVnQTBFQmFqWUNBQ0FESUFCQkVuWkI4QUZ5T2dBQUlBVWdCU2dDQUNJRFFRRnFOZ0lBSUFNZ0FFRU1ka0UvY1VHQUFYSTZBQUFMSUFVZ0JTZ0NBQ0lEUVFGcU5nSUFJQU1nQUVFR2RrRS9jVUdBQVhJNkFBQUxJQVVnQlNnQ0FDSURRUUZxTmdJQUlBTWdBRUUvY1VHQUFYSTZBQUFMSUFJZ0FpZ0NBRUVFYWlJQU5nSUFEQUVMQ3lBQUM3b0ZBUVYvSUFJZ0FEWUNBQ0FGSUFNMkFnQURRQUpBSUFJb0FnQWlCaUFCVHdSQVFRQWhBQXdCQ3lBRktBSUFJZ29nQkU4RVFFRUJJUUFNQVFzZ0Jpd0FBQ0lIUWY4QmNTRURJQWRCZjBvRWZ5QURRZi8vd3dCTEJIOUJBaUVBREFJRlFRRUxCUUovSUFkQi93RnhRY0lCU0FSQVFRSWhBQXdEQ3lBSFFmOEJjVUhnQVVnRVFDQUJJQVpyUVFKSUJFQkJBU0VBREFRTElBWXRBQUVpQUVIQUFYRkJnQUZIQkVCQkFpRUFEQVFMUVFJZ0FFRS9jU0FEUVFaMFFjQVBjWElpQTBILy84TUFUUTBCR2tFQ0lRQU1Bd3NnQjBIL0FYRkI4QUZJQkVBZ0FTQUdhMEVEU0FSQVFRRWhBQXdFQ3lBR0xBQUJJUWdnQmkwQUFpRUFBa0FDUUFKQUFrQWdCMEZnYXc0T0FBSUNBZ0lDQWdJQ0FnSUNBZ0VDQ3lBSVFlQUJjVUdnQVVjRVFFRUNJUUFNQndzTUFnc2dDRUhnQVhGQmdBRkhCRUJCQWlFQURBWUxEQUVMSUFoQndBRnhRWUFCUndSQVFRSWhBQXdGQ3dzZ0FFSEFBWEZCZ0FGSEJFQkJBaUVBREFRTFFRTWdBRUUvY1NBRFFReDBRWURnQTNFZ0NFRS9jVUVHZEhKeUlnTkIvLy9EQUUwTkFScEJBaUVBREFNTElBZEIvd0Z4UWZVQlRnUkFRUUloQUF3REN5QUJJQVpyUVFSSUJFQkJBU0VBREFNTElBWXNBQUVoQ1NBR0xRQUNJUUFnQmkwQUF5RUlBa0FDUUFKQUFrQWdCMEZ3YXc0RkFBSUNBZ0VDQ3lBSlFmQUFha0VZZEVFWWRVSC9BWEZCTUU0RVFFRUNJUUFNQmdzTUFnc2dDVUh3QVhGQmdBRkhCRUJCQWlFQURBVUxEQUVMSUFsQndBRnhRWUFCUndSQVFRSWhBQXdFQ3dzZ0FFSEFBWEZCZ0FGSEJFQkJBaUVBREFNTElBaEJ3QUZ4UVlBQlJ3UkFRUUloQUF3REN5QUlRVDl4SUFCQkJuUkJ3Qjl4SUFOQkVuUkJnSUR3QUhFZ0NVRS9jVUVNZEhKeWNpSURRZi8vd3dCTEJIOUJBaUVBREFNRlFRUUxDd3NoQUNBS0lBTTJBZ0FnQWlBQUlBWnFOZ0lBSUFVZ0JTZ0NBRUVFYWpZQ0FBd0JDd3NnQUF1TEJBRUhmeUFCSVFZZ0FDRUJBMEFDUUNBQklBWkpJQWtnQWtseFJRMEFJQUVzQUFBaUEwSC9BWEVoQnlBRFFYOUtCSDhnQjBILy84TUFTdzBCSUFGQkFXb0ZBbjhnQTBIL0FYRkJ3Z0ZJRFFJZ0EwSC9BWEZCNEFGSUJFQWdCaUFCYTBFQ1NBMERJQUV0QUFFaUJFSEFBWEZCZ0FGSERRTWdCRUUvY1NBSFFRWjBRY0FQY1hKQi8vL0RBRXNOQXlBQlFRSnFEQUVMSUFOQi93RnhRZkFCU0FSQUlBWWdBV3RCQTBnTkF5QUJMQUFCSVFVZ0FTMEFBaUVFQWtBQ1FBSkFBa0FnQTBGZ2F3NE9BQUlDQWdJQ0FnSUNBZ0lDQWdFQ0N5QUZRZUFCY1VHZ0FVY05CZ3dDQ3lBRlFlQUJjVUdBQVVjTkJRd0JDeUFGUWNBQmNVR0FBVWNOQkFzZ0JFSEFBWEZCZ0FGSERRTWdCRUUvY1NBSFFReDBRWURnQTNFZ0JVRS9jVUVHZEhKeVFmLy93d0JMRFFNZ0FVRURhZ3dCQ3lBRFFmOEJjVUgxQVU0TkFpQUdJQUZyUVFSSURRSWdBU3dBQVNFSUlBRXRBQUloQkNBQkxRQURJUVVDUUFKQUFrQUNRQ0FEUVhCckRnVUFBZ0lDQVFJTElBaEI4QUJxUVJoMFFSaDFRZjhCY1VFd1RnMEZEQUlMSUFoQjhBRnhRWUFCUncwRURBRUxJQWhCd0FGeFFZQUJSdzBEQ3lBRVFjQUJjVUdBQVVjTkFpQUZRY0FCY1VHQUFVY05BaUFGUVQ5eElBUkJCblJCd0I5eElBZEJFblJCZ0lEd0FIRWdDRUUvY1VFTWRISnlja0gvLzhNQVN3MENJQUZCQkdvTEN5RUJJQWxCQVdvaENRd0JDd3NnQVNBQWF3c0xBQ0FDSUFNZ0JCQ3BCUXRaQVFGL0l3UWhBQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFRWFpSUJJQUkyQWdBZ0FDQUZOZ0lBSUFJZ0F5QUJJQVVnQmlBQUVLZ0ZJUWdnQkNBQktBSUFOZ0lBSUFjZ0FDZ0NBRFlDQUNBQUpBUWdDQXRaQVFGL0l3UWhBQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFRWFpSUJJQUkyQWdBZ0FDQUZOZ0lBSUFJZ0F5QUJJQVVnQmlBQUVLY0ZJUWdnQkNBQktBSUFOZ0lBSUFjZ0FDZ0NBRFlDQUNBQUpBUWdDQXZRQkFFSWZ5TUVJUVFqQkVHd0FXb2tCQ01FSXdWT0JFQkJzQUVRQUFzZ0JFR29BV29oRENBRUlRRWdCRUdrQVdvaENpQUVRYUFCYWlFSElBUkJtQUZxSVFJZ0JFR1FBV29oQ3lBRVFZQUJhaUlJUWdBM0FnQWdDRUVBTmdJSUEwQWdCa0VEUndSQUlBWkJBblFnQ0dwQkFEWUNBQ0FHUVFGcUlRWU1BUXNMSUFKQkFEWUNCQ0FDUVp5RkFUWUNBQ0FGS0FJQUlBVWdCU3dBQ3lJRFFRQklJZ2tiSWdZZ0JTZ0NCQ0FEUWY4QmNTQUpHMEVDZEdvaEF5QUJRU0JxSVFsQkFDRUZBa0FDUUFOQUlBVkJBa2NnQmlBRFNYRUVRQ0FISUFZMkFnQWdBaUFNSUFZZ0F5QUhJQUVnQ1NBS0lBSW9BZ0FvQWd4QkQzRkI1Z0pxRVEwQUlnVkJBa1lnQnlnQ0FDQUdSbklOQWlBQklRWURRQ0FHSUFvb0FnQkpCRUFnQ0NBR0xBQUFFTE1CSUFaQkFXb2hCZ3dCQ3dzZ0J5Z0NBQ0VHREFFTEN3d0JDeEFEQ3dKL0lBZ29BZ0FnQ0NBSUxBQUxRUUJJR3lJRElRMGdBRUlBTndJQUlBQkJBRFlDQ0VFQUlRSURRQ0FDUVFOSEJFQWdBa0VDZENBQWFrRUFOZ0lBSUFKQkFXb2hBZ3dCQ3dzZ0MwRUFOZ0lFSUF0QnpJVUJOZ0lBSUEwTEVIc2dBMm9pQlNFR0lBRkJnQUZxSVFsQkFDRUNBa0FDUUFOQUlBSkJBa2NnQXlBRlNYRkZEUUVnQnlBRE5nSUFJQXNnRENBRElBTkJJR29nQlNBR0lBTnJRU0JLR3lBSElBRWdDU0FLSUFzb0FnQW9BaEJCRDNGQjVnSnFFUTBBSWdKQkFrWWdCeWdDQUNBRFJuSkZCRUFnQVNFREEwQWdBeUFLS0FJQVNRUkFJQUFnQXlnQ0FCRGdBU0FEUVFScUlRTU1BUXNMSUFjb0FnQWhBd3dCQ3dzUUF3d0JDeUFJRUU0Z0JDUUVDd3VNQWdFQ2Z5TUVJUUVqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFGQ0FEY0NBQ0FCUVFBMkFnZ0RRQ0FHUVFOSEJFQWdCa0VDZENBQmFrRUFOZ0lBSUFaQkFXb2hCZ3dCQ3dzZ0JTZ0NBQ0FGSUFVc0FBc2lBMEVBU0NJRUd5SUNJQVVvQWdRZ0EwSC9BWEVnQkJ0cUlRTWdBaUVGQTBBZ0JTQURTUVJBSUFFZ0JTd0FBQkN6QVNBRlFRRnFJUVVNQVFzTEFuOGdBU2dDQUNBQklBRXNBQXRCQUVnYklnSWhCeUFBUWdBM0FnQWdBRUVBTmdJSVFRQWhBd05BSUFOQkEwY0VRQ0FEUVFKMElBQnFRUUEyQWdBZ0EwRUJhaUVEREFFTEN5QUhDeEI3SUFKcUlRTURRQ0FDSUFOSkJFQWdBQ0FDTEFBQUVMTUJJQUpCQVdvaEFnd0JDd3NnQVJCT0lBRWtCQXZpQlFFU2Z5TUVJUVlqQkVIZ0Eyb2tCQ01FSXdWT0JFQkI0QU1RQUFzZ0JrSE1BMm9pQ3lBREtBSWNJZ0EyQWdBZ0FDQUFLQUlFUVFGcU5nSUVJQXRCeVBzQ0VGTWhEQ0FGTEFBTElnZEJBRWdoQUNBRktBSUVJQWRCL3dGeElBQWJCSDhnQlNnQ0FDQUZJQUFiS0FJQUlBeEJMU0FNS0FJQUtBSXNRVDl4UVlvQmFoRURBRVlGUVFBTElRNGdCa0hVQTJvaER5QUdRY2dEYWlFUUlBWkJ4QU5xSVJFZ0JrR3NBMm9oQnlBR1FhQURhaUVJSUFaQm5BTnFJUWtnQmtHNEEyb2lDa0lBTndJQUlBcEJBRFlDQ0VFQUlRQURRQ0FBUVFOSEJFQWdBRUVDZENBS2FrRUFOZ0lBSUFCQkFXb2hBQXdCQ3dzZ0IwSUFOd0lBSUFkQkFEWUNDRUVBSVFBRFFDQUFRUU5IQkVBZ0FFRUNkQ0FIYWtFQU5nSUFJQUJCQVdvaEFBd0JDd3NnQ0VJQU53SUFJQWhCQURZQ0NFRUFJUUFEUUNBQVFRTkhCRUFnQUVFQ2RDQUlha0VBTmdJQUlBQkJBV29oQUF3QkN3c2dBaUFPSUFzZ0R5QVFJQkVnQ2lBSElBZ2dDUkRxQWlBRkxBQUxJZ0JCQUVnaEVpQUZLQUlFSUFCQi93RnhJQkliSWhNZ0NTZ0NBQ0lKU2dSL0lBY29BZ1FnQnl3QUN5SUFRZjhCY1NBQVFRQklHeUVDSUFnb0FnUWdDQ3dBQ3lJQVFmOEJjU0FBUVFCSUd5RVVJQWxCQVdvZ0V5QUphMEVCZEdvRklBY29BZ1FnQnl3QUN5SUFRZjhCY1NBQVFRQklHeUVDSUFnb0FnUWdDQ3dBQ3lJQVFmOEJjU0FBUVFCSUd5RVVJQWxCQW1vTElSWWdCaUVBSUJRZ0Ztb2dBbW9pQWtIa0FFc0VRQ0FDUVFKMEVFb2lBQ0VDSUFBRVFDQUNJUlVnQUNFTkJSQURDd1VnQUNFTkN5QU5JQVpCbUFOcUlBWkJsQU5xSUFNb0FnUWdCU2dDQUNBRklCSWJJZ0FnRTBFQ2RDQUFhaUFNSUE0Z0R5QVFLQUlBSUJFb0FnQWdDaUFISUFnZ0NSRHBBaUFHSUFFb0FnQTJBcEFESUFZb0FwZ0RJUUFnQmlnQ2xBTWhBU0FHUWRBRGFpSUNJQVlvQXBBRE5nSUFJQUlnRFNBQUlBRWdBeUFFRUprQklSY2dGUVJBSUJVUVF3c2dDQkJPSUFjUVRpQUtFRTRnQ3hCVUlBWWtCQ0FYQzlnR0FSVi9Jd1FoQmlNRVFlQUhhaVFFSXdRakJVNEVRRUhnQnhBQUN5QUdRWWdIYWlFSUlBWkJrQU5xSVFBZ0JrSFlCMm9pQ1NBR1FhQUdhaUlITmdJQUlBWkJrQWRxSWcwZ0JUa0RBQ0FIUWVRQVFlWHNBU0FORU04QklnZEI0d0JMQkVBUVhpRUFJQWdnQlRrREFDQUpJQUJCNWV3QklBZ1FrUUVoQUNBSktBSUFJZ2hGQkVBUUF3c2dBRUVDZEJCS0lnY2hDaUFIQkVBZ0J5RU1JQW9oRUNBSUlSRWdBQ0VMQlJBREN3VWdBQ0VNSUFjaEN3c2dCa0hVQjJvaURpQURLQUljSWdBMkFnQWdBQ0FBS0FJRVFRRnFOZ0lFSUE1QnlQc0NFRk1pRWlnQ0FDZ0NNQ0VBSUJJZ0NTZ0NBQ0lISUFjZ0Myb2dEQ0FBUVFkeFFlb0JhaEVQQUJvZ0N3Ui9JQWtvQWdBc0FBQkJMVVlGUVFBTElSTWdCa0hjQjJvaEZDQUdRZEFIYWlFVklBWkJ6QWRxSVJZZ0JrRzBCMm9oQnlBR1FhZ0hhaUVJSUFaQnBBZHFJUWtnQmtIQUIyb2lDa0lBTndJQUlBcEJBRFlDQ0VFQUlRQURRQ0FBUVFOSEJFQWdBRUVDZENBS2FrRUFOZ0lBSUFCQkFXb2hBQXdCQ3dzZ0IwSUFOd0lBSUFkQkFEWUNDRUVBSVFBRFFDQUFRUU5IQkVBZ0FFRUNkQ0FIYWtFQU5nSUFJQUJCQVdvaEFBd0JDd3NnQ0VJQU53SUFJQWhCQURZQ0NFRUFJUUFEUUNBQVFRTkhCRUFnQUVFQ2RDQUlha0VBTmdJQUlBQkJBV29oQUF3QkN3c2dBaUFUSUE0Z0ZDQVZJQllnQ2lBSElBZ2dDUkRxQWlBTElBa29BZ0FpQ1VvRWZ5QUlLQUlFSUFnc0FBc2lBRUgvQVhFZ0FFRUFTQnNoQWlBSEtBSUVJQWNzQUFzaUFFSC9BWEVnQUVFQVNCc2hGeUFKUVFGcUlBc2dDV3RCQVhScUJTQUlLQUlFSUFnc0FBc2lBRUgvQVhFZ0FFRUFTQnNoQWlBSEtBSUVJQWNzQUFzaUFFSC9BWEVnQUVFQVNCc2hGeUFKUVFKcUN5RVpJQVloQUNBQ0lCbHFJQmRxSWdKQjVBQkxCRUFnQWtFQ2RCQktJZ0FoQWlBQUJFQWdBaUVZSUFBaER3VVFBd3NGSUFBaER3c2dEeUFHUWFBSGFpQUdRWndIYWlBREtBSUVJQXdnQzBFQ2RDQU1haUFTSUJNZ0ZDQVZLQUlBSUJZb0FnQWdDaUFISUFnZ0NSRHBBaUFHSUFFb0FnQTJBcGdISUFZb0FxQUhJUUFnQmlnQ25BY2hBU0FOSUFZb0FwZ0hOZ0lBSUEwZ0R5QUFJQUVnQXlBRUVKa0JJUm9nR0FSQUlCZ1FRd3NnQ0JCT0lBY1FUaUFLRUU0Z0RoQlVJQkFFUUNBUUVFTUxJQkVFUUNBUkVFTUxJQVlrQkNBYUM5d0ZBUkovSXdRaEJpTUVRYkFCYWlRRUl3UWpCVTRFUUVHd0FSQUFDeUFHUVpnQmFpSUxJQU1vQWh3aUFEWUNBQ0FBSUFBb0FnUkJBV28yQWdRZ0MwR28rd0lRVXlFTUlBVXNBQXNpQjBFQVNDRUFJQVVvQWdRZ0IwSC9BWEVnQUJzRWZ5QUZLQUlBSUFVZ0FCc3RBQUFnREVFdElBd29BZ0FvQWh4QlAzRkJpZ0ZxRVFNQVFmOEJjVVlGUVFBTElRNGdCa0drQVdvaER5QUdRYUVCYWlFUUlBWkJvQUZxSVJFZ0JrR0FBV29oQnlBR1FmUUFhaUVJSUFaQjhBQnFJUWtnQmtHTUFXb2lDa0lBTndJQUlBcEJBRFlDQ0VFQUlRQURRQ0FBUVFOSEJFQWdBRUVDZENBS2FrRUFOZ0lBSUFCQkFXb2hBQXdCQ3dzZ0IwSUFOd0lBSUFkQkFEWUNDRUVBSVFBRFFDQUFRUU5IQkVBZ0FFRUNkQ0FIYWtFQU5nSUFJQUJCQVdvaEFBd0JDd3NnQ0VJQU53SUFJQWhCQURZQ0NFRUFJUUFEUUNBQVFRTkhCRUFnQUVFQ2RDQUlha0VBTmdJQUlBQkJBV29oQUF3QkN3c2dBaUFPSUFzZ0R5QVFJQkVnQ2lBSElBZ2dDUkRzQWlBRkxBQUxJZ0JCQUVnaEVpQUZLQUlFSUFCQi93RnhJQkliSWhNZ0NTZ0NBQ0lKU2dSL0lBY29BZ1FnQnl3QUN5SUFRZjhCY1NBQVFRQklHeUVDSUFnb0FnUWdDQ3dBQ3lJQVFmOEJjU0FBUVFCSUd5RVVJQWxCQVdvZ0V5QUphMEVCZEdvRklBY29BZ1FnQnl3QUN5SUFRZjhCY1NBQVFRQklHeUVDSUFnb0FnUWdDQ3dBQ3lJQVFmOEJjU0FBUVFCSUd5RVVJQWxCQW1vTElSWWdCaUVBSUJRZ0Ztb2dBbW9pQWtIa0FFc0VRQ0FDRUVvaUFDRUNJQUFFUUNBQ0lSVWdBQ0VOQlJBREN3VWdBQ0VOQ3lBTklBWkI3QUJxSUFaQjZBQnFJQU1vQWdRZ0JTZ0NBQ0FGSUJJYklnQWdBQ0FUYWlBTUlBNGdEeUFRTEFBQUlCRXNBQUFnQ2lBSElBZ2dDUkRyQWlBR0lBRW9BZ0EyQW1RZ0JpZ0NiQ0VBSUFZb0FtZ2hBU0FHUVp3QmFpSUNJQVlvQW1RMkFnQWdBaUFOSUFBZ0FTQURJQVFRamdFaEZ5QVZCRUFnRlJCREN5QUlFRTRnQnhCT0lBb1FUaUFMRUZRZ0JpUUVJQmNMendZQkZYOGpCQ0VHSXdSQm9BTnFKQVFqQkNNRlRnUkFRYUFERUFBTElBWkJ5QUpxSVFnZ0JrSHdBR29oQUNBR1FaQURhaUlKSUFaQjRBRnFJZ2MyQWdBZ0JrSFFBbW9pRFNBRk9RTUFJQWRCNUFCQjVld0JJQTBRendFaUIwSGpBRXNFUUJCZUlRQWdDQ0FGT1FNQUlBa2dBRUhsN0FFZ0NCQ1JBU0VBSUFrb0FnQWlDRVVFUUJBREN5QUFFRW9pQnlFS0lBY0VRQ0FISVF3Z0NpRVFJQWdoRVNBQUlRc0ZFQU1MQlNBQUlRd2dCeUVMQ3lBR1FZd0RhaUlPSUFNb0Fod2lBRFlDQUNBQUlBQW9BZ1JCQVdvMkFnUWdEa0dvK3dJUVV5SVNLQUlBS0FJZ0lRQWdFaUFKS0FJQUlnY2dCeUFMYWlBTUlBQkJCM0ZCNmdGcUVROEFHaUFMQkg4Z0NTZ0NBQ3dBQUVFdFJnVkJBQXNoRXlBR1FaZ0RhaUVVSUFaQmxRTnFJUlVnQmtHVUEyb2hGaUFHUWZRQ2FpRUhJQVpCNkFKcUlRZ2dCa0hrQW1vaENTQUdRWUFEYWlJS1FnQTNBZ0FnQ2tFQU5nSUlRUUFoQUFOQUlBQkJBMGNFUUNBQVFRSjBJQXBxUVFBMkFnQWdBRUVCYWlFQURBRUxDeUFIUWdBM0FnQWdCMEVBTmdJSVFRQWhBQU5BSUFCQkEwY0VRQ0FBUVFKMElBZHFRUUEyQWdBZ0FFRUJhaUVBREFFTEN5QUlRZ0EzQWdBZ0NFRUFOZ0lJUVFBaEFBTkFJQUJCQTBjRVFDQUFRUUowSUFocVFRQTJBZ0FnQUVFQmFpRUFEQUVMQ3lBQ0lCTWdEaUFVSUJVZ0ZpQUtJQWNnQ0NBSkVPd0NJQXNnQ1NnQ0FDSUpTZ1IvSUFnb0FnUWdDQ3dBQ3lJQVFmOEJjU0FBUVFCSUd5RUNJQWNvQWdRZ0J5d0FDeUlBUWY4QmNTQUFRUUJJR3lFWElBbEJBV29nQ3lBSmEwRUJkR29GSUFnb0FnUWdDQ3dBQ3lJQVFmOEJjU0FBUVFCSUd5RUNJQWNvQWdRZ0J5d0FDeUlBUWY4QmNTQUFRUUJJR3lFWElBbEJBbW9MSVJrZ0JpRUFJQUlnR1dvZ0Yyb2lBa0hrQUVzRVFDQUNFRW9pQUNFQ0lBQUVRQ0FDSVJnZ0FDRVBCUkFEQ3dVZ0FDRVBDeUFQSUFaQjRBSnFJQVpCM0FKcUlBTW9BZ1FnRENBTElBeHFJQklnRXlBVUlCVXNBQUFnRml3QUFDQUtJQWNnQ0NBSkVPc0NJQVlnQVNnQ0FEWUMyQUlnQmlnQzRBSWhBQ0FHS0FMY0FpRUJJQTBnQmlnQzJBSTJBZ0FnRFNBUElBQWdBU0FESUFRUWpnRWhHaUFZQkVBZ0dCQkRDeUFJRUU0Z0J4Qk9JQW9RVGlBT0VGUWdFQVJBSUJBUVF3c2dFUVJBSUJFUVF3c2dCaVFFSUJvTGxBY0JCWDhqQkNFS0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFCSDhnQVVHZy9RSVFVeUlCS0FJQUtBSXNCU0FCUVpqOUFoQlRJZ0VvQWdBb0Fpd0xJUUFnQ2tFTWFpQUJJQUJCL3dGeFFZNEhhaEVBQUNBQ0lBb29BZ3cyQUFBZ0NpQUJJQUVvQWdBb0FpQkIvd0Z4UVk0SGFoRUFBQ0FJTEFBTFFRQklCRUFDZnlBSUtBSUFJUXNnQ2tFQU5nSU1JQXNMSUFvb0FndzJBZ0FnQ0VFQU5nSUVJQWdzQUF0QkFFZ0VRQ0FJS0FJSUdpQUlLQUlBRUVNZ0NFRUFOZ0lJQ3dVZ0NrRUFOZ0lNSUFnZ0NpZ0NERFlDQUNBSVFRQTZBQXNMSUFnZ0Npa0NBRGNDQUNBSUlBb29BZ2cyQWdoQkFDRUFBMEFnQUVFRFJ3UkFJQUJCQW5RZ0NtcEJBRFlDQUNBQVFRRnFJUUFNQVFzTElBb1FUaUFLSUFFZ0FTZ0NBQ2dDSEVIL0FYRkJqZ2RxRVFBQUlBY3NBQXRCQUVnRVFBSi9JQWNvQWdBaERDQUtRUUEyQWd3Z0RBc2dDaWdDRERZQ0FDQUhRUUEyQWdRZ0J5d0FDMEVBU0FSQUlBY29BZ2dhSUFjb0FnQVFReUFIUVFBMkFnZ0xCU0FLUVFBMkFnd2dCeUFLS0FJTU5nSUFJQWRCQURvQUN3c2dCeUFLS1FJQU53SUFJQWNnQ2lnQ0NEWUNDRUVBSVFBRFFDQUFRUU5IQkVBZ0FFRUNkQ0FLYWtFQU5nSUFJQUJCQVdvaEFBd0JDd3NnQ2hCT0lBTWdBU0FCS0FJQUtBSU1RZjhBY1VFRWFoRUlBRFlDQUNBRUlBRWdBU2dDQUNnQ0VFSC9BSEZCQkdvUkNBQTJBZ0FnQ2lBQklBRW9BZ0FvQWhSQi93RnhRWTRIYWhFQUFDQUZMQUFMUVFCSUJFQUNmeUFGS0FJQUlRMGdDa0VBT2dBTUlBMExJQW9zQUF3NkFBQWdCVUVBTmdJRUlBVXNBQXRCQUVnRVFDQUZLQUlJR2lBRktBSUFFRU1nQlVFQU5nSUlDd1VnQ2tFQU9nQU1JQVVnQ2l3QUREb0FBQ0FGUVFBNkFBc0xJQVVnQ2lrQ0FEY0NBQ0FGSUFvb0FnZzJBZ2hCQUNFQUEwQWdBRUVEUndSQUlBQkJBblFnQ21wQkFEWUNBQ0FBUVFGcUlRQU1BUXNMSUFvUVRpQUtJQUVnQVNnQ0FDZ0NHRUgvQVhGQmpnZHFFUUFBSUFZc0FBdEJBRWdFUUFKL0lBWW9BZ0FoRGlBS1FRQTJBZ3dnRGdzZ0NpZ0NERFlDQUNBR1FRQTJBZ1FnQml3QUMwRUFTQVJBSUFZb0FnZ2FJQVlvQWdBUVF5QUdRUUEyQWdnTEJTQUtRUUEyQWd3Z0JpQUtLQUlNTmdJQUlBWkJBRG9BQ3dzZ0JpQUtLUUlBTndJQUlBWWdDaWdDQ0RZQ0NFRUFJUUFEUUNBQVFRTkhCRUFnQUVFQ2RDQUtha0VBTmdJQUlBQkJBV29oQUF3QkN3c2dDaEJPSUFrZ0FTQUJLQUlBS0FJa1FmOEFjVUVFYWhFSUFEWUNBQ0FLSkFRTDdRSUJCMzhqQkNFREl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFMQUFMSWdaQkFFZ2lCd1IvSUFBb0FnaEIvLy8vL3dkeFFYOXFJUVFnQUNnQ0JBVkJBU0VFSUFaQi93RnhDeUVGSUFJZ0FXc2lDRUVDZFNFSklBZ0VRQUpBSUFjRWZ5QUFLQUlFSVFZZ0FDZ0NBQVVnQmtIL0FYRWhCaUFBQ3lJSElRZ2dBU0FHUVFKMElBZHFTU0FJSUFGTmNRUkFJQU5DQURjQ0FDQURRUUEyQWdnZ0F5QUJJQUlRaWdNZ0FDQURLQUlBSUFNZ0F5d0FDeUlBUVFCSUlnRWJJQU1vQWdRZ0FFSC9BWEVnQVJzUTNRUWdBeEJPREFFTElBUWdCV3NnQ1VrRVFDQUFJQVFnQlNBSmFpQUVheUFGSUFVUTJnSUxJQUFzQUF0QkFFZ0VmeUFBS0FJQUJTQUFDeUFGUVFKMGFpRUVBMEFnQVNBQ1J3UkFJQVFnQVNnQ0FEWUNBQ0FCUVFScUlRRWdCRUVFYWlFRURBRUxDeUFEUVFBMkFnQWdCQ0FES0FJQU5nSUFJQVVnQ1dvaEFTQUFMQUFMUVFCSUJFQWdBQ0FCTmdJRUJTQUFJQUU2QUFzTEN3c2dBeVFFQzlZRUFRaC9Jd1FoQUNNRVFiQURhaVFFSXdRakJVNEVRRUd3QXhBQUN5QUFRYUFEYWlJSUlBQTJBZ0FnQ0VHNUFqWUNCQ0FBUVpBRGFpSUxJQVFvQWh3aUJ6WUNBQ0FISUFjb0FnUkJBV28yQWdRZ0MwSEkrd0lRVXlFSElBQkJyQU5xSWdwQkFEb0FBQ0FBSUFJb0FnQWlDVFlDbEFNZ0JDZ0NCQ0VNSUFCQnFBTnFJZ1FnQUNnQ2xBTTJBZ0FnQVNBRUlBTWdDeUFNSUFVZ0NpQUhJQWdnQUVHWUEyb2dBRUdRQTJvUTdRSUVRQ0FHTEFBTFFRQklCRUFDZnlBR0tBSUFJUTBnQkVFQU5nSUFJQTBMSUFRb0FnQTJBZ0FnQmtFQU5nSUVCU0FFUVFBMkFnQWdCaUFFS0FJQU5nSUFJQVpCQURvQUN3c2dDaXdBQUFSQUlBWWdCMEV0SUFjb0FnQW9BaXhCUDNGQmlnRnFFUU1BRU9BQkN5QUhRVEFnQnlnQ0FDZ0NMRUUvY1VHS0FXb1JBd0FoQkNBQUtBS1lBeUlIUVh4cUlRb2dDQ2dDQUNFREEwQUNRQ0FESUFwUERRQWdCQ0FES0FJQVJ3MEFJQU5CQkdvaEF3d0JDd3NnQmlBRElBY1F0QVVMSUFFb0FnQWlBd1IvSUFNb0Fnd2lCQ0FES0FJUVJnUi9JQU1nQXlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFRb0FnQUxRWDlHQkg4Z0FVRUFOZ0lBUVFFRklBRW9BZ0JGQ3dWQkFRc2hBd0pBQWtBQ1FDQUpSUTBBSUFrb0Fnd2lCQ0FKS0FJUVJnUi9JQWtnQ1NnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFRb0FnQUxRWDlHQkVBZ0FrRUFOZ0lBREFFRklBTkZEUUlMREFJTElBTU5BQXdCQ3lBRklBVW9BZ0JCQW5JMkFnQUxJQUVvQWdBaERpQUxFRlFnQ0NnQ0FDRUJJQWhCQURZQ0FDQUJCRUFnQVNBSUtBSUVRZjhEY1VHRUEyb1JBUUFMSUFBa0JDQU9DN29GQVF0L0l3UWhCeU1FUWRBRWFpUUVJd1FqQlU0RVFFSFFCQkFBQ3lBSFFhZ0VhaUVPSUFjaER5QUhRYmdFYWlJSklBZEI4QUJxSWdvMkFnQWdDVUc1QWpZQ0JDQUhRYkFFYWlJTklBUW9BaHdpQURZQ0FDQUFJQUFvQWdSQkFXbzJBZ1FnRFVISSt3SVFVeUVBSUFkQndBUnFJZ3hCQURvQUFDQUhJQUlvQWdBMkFxd0VJQVFvQWdRaEN5QUhRWUFFYWlJRUlBY29BcXdFTmdJQUlBRWdCQ0FESUEwZ0N5QUZJQXdnQUNBSklBZEJ0QVJxSUFwQmtBTnFFTzBDQkVBZ0FFSDc2d0ZCaGV3QklBUWdBQ2dDQUNnQ01FRUhjVUhxQVdvUkR3QWFJQWNvQXJRRUlnc2dDU2dDQUNJS2F5SUFRWWdEU2dSQUlBQkJBblpCQW1vUVNpSUFJUU1nQUFSQUlBTWhFQ0FBSVFnRkVBTUxCU0FQSVFnTElBd3NBQUFFUUNBSVFTMDZBQUFnQ0VFQmFpRUlDeUFFUVNocUlRTWdCQ0VNQTBBZ0NpQUxTUVJBSUFvb0FnQWhDeUFFSVFBRFFBSkFJQUFnQTBZRVFDQURJUUFNQVFzZ0FDZ0NBQ0FMUndSQUlBQkJCR29oQUF3Q0N3c0xJQWdnQUNBTWEwRUNkVUg3NndGcUxBQUFPZ0FBSUFjb0FyUUVJUXNnQ0VFQmFpRUlJQXBCQkdvaENnd0JDd3NnQ0VFQU9nQUFJQTRnQmpZQ0FDQVBJQTRRcXdOQkFVY0VRQkFEQ3lBUUJFQWdFQkJEQ3dzZ0FTZ0NBQ0lBQkg4Z0FDZ0NEQ0lESUFBb0FoQkdCSDhnQUNBQUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0F5Z0NBQXRCZjBZRWZ5QUJRUUEyQWdCQkFRVWdBU2dDQUVVTEJVRUJDeUVEQWtBQ1FBSkFJQUlvQWdBaUFFVU5BQ0FBS0FJTUlnUWdBQ2dDRUVZRWZ5QUFJQUFvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFS0FJQUMwRi9SZ1JBSUFKQkFEWUNBQXdCQlNBRFJRMENDd3dDQ3lBRERRQU1BUXNnQlNBRktBSUFRUUp5TmdJQUN5QUJLQUlBSVJFZ0RSQlVJQWtvQWdBaEFDQUpRUUEyQWdBZ0FBUkFJQUFnQ1NnQ0JFSC9BM0ZCaEFOcUVRRUFDeUFISkFRZ0VRdVVCd0VGZnlNRUlRb2pCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUFFZnlBQlFaRDlBaEJUSWdFb0FnQW9BaXdGSUFGQmlQMENFRk1pQVNnQ0FDZ0NMQXNoQUNBS1FReHFJQUVnQUVIL0FYRkJqZ2RxRVFBQUlBSWdDaWdDRERZQUFDQUtJQUVnQVNnQ0FDZ0NJRUgvQVhGQmpnZHFFUUFBSUFnc0FBdEJBRWdFUUFKL0lBZ29BZ0FoQ3lBS1FRQTZBQXdnQ3dzZ0Npd0FERG9BQUNBSVFRQTJBZ1FnQ0N3QUMwRUFTQVJBSUFnb0FnZ2FJQWdvQWdBUVF5QUlRUUEyQWdnTEJTQUtRUUE2QUF3Z0NDQUtMQUFNT2dBQUlBaEJBRG9BQ3dzZ0NDQUtLUUlBTndJQUlBZ2dDaWdDQ0RZQ0NFRUFJUUFEUUNBQVFRTkhCRUFnQUVFQ2RDQUtha0VBTmdJQUlBQkJBV29oQUF3QkN3c2dDaEJPSUFvZ0FTQUJLQUlBS0FJY1FmOEJjVUdPQjJvUkFBQWdCeXdBQzBFQVNBUkFBbjhnQnlnQ0FDRU1JQXBCQURvQURDQU1DeUFLTEFBTU9nQUFJQWRCQURZQ0JDQUhMQUFMUVFCSUJFQWdCeWdDQ0JvZ0J5Z0NBQkJESUFkQkFEWUNDQXNGSUFwQkFEb0FEQ0FISUFvc0FBdzZBQUFnQjBFQU9nQUxDeUFISUFvcEFnQTNBZ0FnQnlBS0tBSUlOZ0lJUVFBaEFBTkFJQUJCQTBjRVFDQUFRUUowSUFwcVFRQTJBZ0FnQUVFQmFpRUFEQUVMQ3lBS0VFNGdBeUFCSUFFb0FnQW9BZ3hCL3dCeFFRUnFFUWdBT2dBQUlBUWdBU0FCS0FJQUtBSVFRZjhBY1VFRWFoRUlBRG9BQUNBS0lBRWdBU2dDQUNnQ0ZFSC9BWEZCamdkcUVRQUFJQVVzQUF0QkFFZ0VRQUovSUFVb0FnQWhEU0FLUVFBNkFBd2dEUXNnQ2l3QUREb0FBQ0FGUVFBMkFnUWdCU3dBQzBFQVNBUkFJQVVvQWdnYUlBVW9BZ0FRUXlBRlFRQTJBZ2dMQlNBS1FRQTZBQXdnQlNBS0xBQU1PZ0FBSUFWQkFEb0FDd3NnQlNBS0tRSUFOd0lBSUFVZ0NpZ0NDRFlDQ0VFQUlRQURRQ0FBUVFOSEJFQWdBRUVDZENBS2FrRUFOZ0lBSUFCQkFXb2hBQXdCQ3dzZ0NoQk9JQW9nQVNBQktBSUFLQUlZUWY4QmNVR09CMm9SQUFBZ0Jpd0FDMEVBU0FSQUFuOGdCaWdDQUNFT0lBcEJBRG9BRENBT0N5QUtMQUFNT2dBQUlBWkJBRFlDQkNBR0xBQUxRUUJJQkVBZ0JpZ0NDQm9nQmlnQ0FCQkRJQVpCQURZQ0NBc0ZJQXBCQURvQURDQUdJQW9zQUF3NkFBQWdCa0VBT2dBTEN5QUdJQW9wQWdBM0FnQWdCaUFLS0FJSU5nSUlRUUFoQUFOQUlBQkJBMGNFUUNBQVFRSjBJQXBxUVFBMkFnQWdBRUVCYWlFQURBRUxDeUFLRUU0Z0NTQUJJQUVvQWdBb0FpUkIvd0J4UVFScUVRZ0FOZ0lBSUFva0JBdnZBZ0VIZnlNRUlRTWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUFzQUFzaUJVRUFTQ0lIQkg4Z0FDZ0NDRUgvLy8vL0IzRkJmMm9oQkNBQUtBSUVCVUVLSVFRZ0JVSC9BWEVMSVFZZ0FpQUJheUlJQkVBQ1FDQUhCSDhnQUNnQ0JDRUZJQUFvQWdBRklBVkIvd0Z4SVFVZ0FBc2lCeUVKSUFFZ0JTQUhha2tnQ1NBQlRYRUVRQ0FEUWdBM0FnQWdBMEVBTmdJSUlBTWdBU0FDRUlzRElBQWdBeWdDQUNBRElBTXNBQXNpQUVFQVNDSUJHeUFES0FJRUlBQkIvd0Z4SUFFYkVPQUVJQU1RVGd3QkN5QUVJQVpySUFoSkJFQWdBQ0FFSUFZZ0NHb2dCR3NnQmlBR0VJd0NDeUFDSUFZZ0FXdHFJUWNnQUN3QUMwRUFTQVIvSUFBb0FnQUZJQUFMSWdVZ0Jtb2hCQU5BSUFFZ0FrY0VRQ0FFSUFFc0FBQTZBQUFnQVVFQmFpRUJJQVJCQVdvaEJBd0JDd3NnQTBFQU9nQUFJQVVnQjJvZ0F5d0FBRG9BQUNBR0lBaHFJUUVnQUN3QUMwRUFTQVJBSUFBZ0FUWUNCQVVnQUNBQk9nQUxDd3NMSUFNa0JBdlhCQUVJZnlNRUlRQWpCRUdBQVdva0JDTUVJd1ZPQkVCQmdBRVFBQXNnQUVId0FHb2lDQ0FBTmdJQUlBaEJ1UUkyQWdRZ0FFSGtBR29pQ3lBRUtBSWNJZ2MyQWdBZ0J5QUhLQUlFUVFGcU5nSUVJQXRCcVBzQ0VGTWhCeUFBUWZ3QWFpSUtRUUE2QUFBZ0FDQUNLQUlBSWdrMkFtZ2dCQ2dDQkNFTUlBQkIrQUJxSWdRZ0FDZ0NhRFlDQUNBQklBUWdBeUFMSUF3Z0JTQUtJQWNnQ0NBQVFld0FhaUFBUWVRQWFoRHZBZ1JBSUFZc0FBdEJBRWdFUUFKL0lBWW9BZ0FoRFNBRVFRQTZBQUFnRFFzZ0JDd0FBRG9BQUNBR1FRQTJBZ1FGSUFSQkFEb0FBQ0FHSUFRc0FBQTZBQUFnQmtFQU9nQUxDeUFLTEFBQUJFQWdCaUFIUVMwZ0J5Z0NBQ2dDSEVFL2NVR0tBV29SQXdBUXN3RUxJQWRCTUNBSEtBSUFLQUljUVQ5eFFZb0JhaEVEQUNFRUlBQW9BbXdpQjBGL2FpRUtJQWdvQWdBaEF3TkFBa0FnQXlBS1R3MEFJQU10QUFBZ0JFSC9BWEZIRFFBZ0EwRUJhaUVEREFFTEN5QUdJQU1nQnhDNEJRc2dBU2dDQUNJREJIOGdBeWdDRENJRUlBTW9BaEJHQkg4Z0F5QURLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCQzBBQUF0QmYwWUVmeUFCUVFBMkFnQkJBUVVnQVNnQ0FFVUxCVUVCQ3lFREFrQUNRQUpBSUFsRkRRQWdDU2dDRENJRUlBa29BaEJHQkg4Z0NTQUpLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCQzBBQUF0QmYwWUVRQ0FDUVFBMkFnQU1BUVVnQTBVTkFnc01BZ3NnQXcwQURBRUxJQVVnQlNnQ0FFRUNjallDQUFzZ0FTZ0NBQ0VPSUFzUVZDQUlLQUlBSVFFZ0NFRUFOZ0lBSUFFRVFDQUJJQWdvQWdSQi93TnhRWVFEYWhFQkFBc2dBQ1FFSUE0THRBVUJDMzhqQkNFSEl3UkJnQUpxSkFRakJDTUZUZ1JBUVlBQ0VBQUxJQWRCMkFGcUlRNGdCeUVQSUFkQjZBRnFJZ2tnQjBId0FHb2lDallDQUNBSlFia0NOZ0lFSUFkQjRBRnFJZzBnQkNnQ0hDSUFOZ0lBSUFBZ0FDZ0NCRUVCYWpZQ0JDQU5RYWo3QWhCVElRQWdCMEg2QVdvaURFRUFPZ0FBSUFjZ0FpZ0NBRFlDM0FFZ0JDZ0NCQ0VMSUFkQjhBRnFJZ1FnQnlnQzNBRTJBZ0FnQVNBRUlBTWdEU0FMSUFVZ0RDQUFJQWtnQjBIa0FXb2dDa0hrQUdvUTd3SUVRQ0FBUVkzckFVR1g2d0VnQkNBQUtBSUFLQUlnUVFkeFFlb0JhaEVQQUJvZ0J5Z0M1QUVpQ3lBSktBSUFJZ3BySWdCQjRnQktCRUFnQUVFQ2FoQktJZ0FoQXlBQUJFQWdBeUVRSUFBaENBVVFBd3NGSUE4aENBc2dEQ3dBQUFSQUlBaEJMVG9BQUNBSVFRRnFJUWdMSUFSQkNtb2hBeUFFSVF3RFFDQUtJQXRKQkVBZ0Npd0FBQ0VMSUFRaEFBTkFBa0FnQUNBRFJnUkFJQU1oQUF3QkN5QUFMQUFBSUF0SEJFQWdBRUVCYWlFQURBSUxDd3NnQ0NBQUlBeHJRWTNyQVdvc0FBQTZBQUFnQnlnQzVBRWhDeUFJUVFGcUlRZ2dDa0VCYWlFS0RBRUxDeUFJUVFBNkFBQWdEaUFHTmdJQUlBOGdEaENyQTBFQlJ3UkFFQU1MSUJBRVFDQVFFRU1MQ3lBQktBSUFJZ0FFZnlBQUtBSU1JZ01nQUNnQ0VFWUVmeUFBSUFBb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRExRQUFDMEYvUmdSL0lBRkJBRFlDQUVFQkJTQUJLQUlBUlFzRlFRRUxJUU1DUUFKQUFrQWdBaWdDQUNJQVJRMEFJQUFvQWd3aUJDQUFLQUlRUmdSL0lBQWdBQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVF0QUFBTFFYOUdCRUFnQWtFQU5nSUFEQUVGSUFORkRRSUxEQUlMSUFNTkFBd0JDeUFGSUFVb0FnQkJBbkkyQWdBTElBRW9BZ0FoRVNBTkVGUWdDU2dDQUNFQUlBbEJBRFlDQUNBQUJFQWdBQ0FKS0FJRVFmOERjVUdFQTJvUkFRQUxJQWNrQkNBUkMrWUJBUUovSXdRaEJpTUVRWUFCYWlRRUl3UWpCVTRFUUVHQUFSQUFDeUFHUWZRQWFpSUhJQVpCNUFCcU5nSUFJQUFnQmlBSElBTWdCQ0FGRVBNQ0lBWkI2QUJxSWdSQ0FEY0RBQ0FHUWZBQWFpSUZJQVkyQWdBZ0FpZ0NBQ0FCYTBFQ2RTRUhRWlR3QUNnQ0FDRURJQUFvQWdBaUFBUkFRWlR3QUVISTdnSWdBQ0FBUVg5R0d6WUNBQXRCZnlBRElBTkJ5TzRDUmhzaEFDQUJJQVVnQnlBRUVLZ0RJUU1nQUFSQVFaVHdBQ2dDQUJvZ0FBUkFRWlR3QUVISTdnSWdBQ0FBUVg5R0d6WUNBQXNMSUFOQmYwWUVRQkFEQlNBQ0lBTkJBblFnQVdvMkFnQWdCaVFFQ3d1OUFRQWpCQ0VDSXdSQm9BTnFKQVFqQkNNRlRnUkFRYUFERUFBTElBSkJrQU5xSWdNZ0FrR1FBMm8yQWdBZ0FFRUlhaUFDSUFNZ0JDQUZJQVlRdXdVZ0F5Z0NBQ0VGSUFJaEF5QUJLQUlBSVFBRFFDQURJQVZIQkVBZ0F5Z0NBQ0VCSUFBRWYwRUFJQUFnQUNnQ0dDSUVJQUFvQWh4R0JIOGdBQ0FCSUFBb0FnQW9BalJCUDNGQmlnRnFFUU1BQlNBQUlBUkJCR28yQWhnZ0JDQUJOZ0lBSUFFTFFYOUdHd1ZCQUFzaEFDQURRUVJxSVFNTUFRc0xJQUlrQkNBQUM4VUJBQ01FSVFJakJFSHdBR29rQkNNRUl3Vk9CRUJCOEFBUUFBc2dBa0hrQUdvaUF5QUNRZVFBYWpZQ0FDQUFRUWhxSUFJZ0F5QUVJQVVnQmhEekFpQURLQUlBSVFVZ0FpRURJQUVvQWdBaEFBTkFJQU1nQlVjRVFDQURMQUFBSVFFZ0FBUi9RUUFnQUNBQUtBSVlJZ1FnQUNnQ0hFWUVmeUFBSUFGQi93RnhJQUFvQWdBb0FqUkJQM0ZCaWdGcUVRTUFCU0FBSUFSQkFXbzJBaGdnQkNBQk9nQUFJQUZCL3dGeEMwRi9SaHNGUVFBTElRQWdBMEVCYWlFRERBRUxDeUFDSkFRZ0FBdUpCQUVEZnlBQUtBSUFJZ1FFZnlBRUtBSU1JZ1VnQkNnQ0VFWUVmeUFFSUFRb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRktBSUFDMEYvUmdSL0lBQkJBRFlDQUVFQkJTQUFLQUlBUlFzRlFRRUxJUVVDUUFKQUFrQWdBU2dDQUNJRUJFQWdCQ2dDRENJR0lBUW9BaEJHQkg4Z0JDQUVLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCaWdDQUF0QmYwWUVRQ0FCUVFBMkFnQUZJQVVFUUF3RUJRd0RDd0FMQ3lBRlJRUkFRUUFoQkF3Q0N3c2dBaUFDS0FJQVFRWnlOZ0lBREFFTElBTWdBQ2dDQUNJRktBSU1JZ1lnQlNnQ0VFWUVmeUFGSUFVb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBR0tBSUFDMEVBSUFNb0FnQW9BalJCSDNGQnlnRnFFUVFBUWY4QmNVRWxSd1JBSUFJZ0FpZ0NBRUVFY2pZQ0FBd0JDeUFBS0FJQUlnTW9BZ3dpQlNBREtBSVFSZ1JBSUFNZ0F5Z0NBQ2dDS0VIL0FIRkJCR29SQ0FBYUJTQURJQVZCQkdvMkFnd2dCU2dDQUJvTElBQW9BZ0FpQXdSL0lBTW9BZ3dpQlNBREtBSVFSZ1IvSUFNZ0F5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBVW9BZ0FMUVg5R0JIOGdBRUVBTmdJQVFRRUZJQUFvQWdCRkN3VkJBUXNoQUFKQUFrQWdCRVVOQUNBRUtBSU1JZ01nQkNnQ0VFWUVmeUFFSUFRb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBREtBSUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQUFEUU1MREFFTElBQkZEUUVMSUFJZ0FpZ0NBRUVDY2pZQ0FBc0xYZ0VCZnlNRUlRVWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQVVnQWlnQ0FEWUNBQ0FGUVFScUlnSWdCU2dDQURZQ0FDQUJJQUlnQXlBRVFRUVFqd0VoQVNBREtBSUFRUVJ4UlFSQUlBQWdBVUdVY1dvMkFnQUxJQVVrQkF0ckFRRi9Jd1FoQlNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JTQUNLQUlBTmdJQUlBVkJCR29pQWlBRktBSUFOZ0lBSUFFZ0FpQURJQVJCQVJDUEFTSUJRUWRJSUFNb0FnQWlBa0VFY1VWeEJFQWdBQ0FCTmdJQUJTQURJQUpCQkhJMkFnQUxJQVVrQkF0ckFRRi9Jd1FoQlNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JTQUNLQUlBTmdJQUlBVkJCR29pQWlBRktBSUFOZ0lBSUFFZ0FpQURJQVJCQWhDUEFTSUJRVDFJSUFNb0FnQWlBa0VFY1VWeEJFQWdBQ0FCTmdJQUJTQURJQUpCQkhJMkFnQUxJQVVrQkF2dUFRRUVmeU1FSVFjakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkJDR29pQUNnQ0FDZ0NDQ0VHSUFBZ0JrSC9BSEZCQkdvUkNBQWlBQ3dBQ3lJR1FRQklCSDhnQUNnQ0JBVWdCa0gvQVhFTElRWWdCMEVFYWlFSVFRQWdBQ3dBRnlJSlFRQklCSDhnQUNnQ0VBVWdDVUgvQVhFTGF5QUdSZ1JBSUFRZ0JDZ0NBRUVFY2pZQ0FBVUNRQ0FISUFNb0FnQTJBZ0FnQ0NBSEtBSUFOZ0lBSUFJZ0NDQUFJQUJCR0dvZ0JTQUVRUUFRNkFFZ0FHc2lBa1VnQVNnQ0FDSUFRUXhHY1FSQUlBRkJBRFlDQUF3QkN5QUNRUXhHSUFCQkRFaHhCRUFnQVNBQVFReHFOZ0lBQ3dzTElBY2tCQXZ5QXdFRGZ3TkFBa0FnQUNnQ0FDSUVCSDhnQkNnQ0RDSUZJQVFvQWhCR0JIOGdCQ0FFS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQlNnQ0FBdEJmMFlFZnlBQVFRQTJBZ0JCQVFVZ0FDZ0NBRVVMQlVFQkN5RUZBa0FDUUNBQktBSUFJZ1JGRFFBZ0JDZ0NEQ0lHSUFRb0FoQkdCSDhnQkNBRUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JpZ0NBQXRCZjBZRVFDQUJRUUEyQWdBTUFRVWdCVVVOQXdzTUFRc2dCUVIvUVFBaEJBd0NCVUVBQ3lFRUN5QURRWURBQUNBQUtBSUFJZ1VvQWd3aUJpQUZLQUlRUmdSL0lBVWdCU2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVlvQWdBTElBTW9BZ0FvQWd4QkgzRkJ5Z0ZxRVFRQVJRMEFJQUFvQWdBaUJDZ0NEQ0lGSUFRb0FoQkdCRUFnQkNBRUtBSUFLQUlvUWY4QWNVRUVhaEVJQUJvRklBUWdCVUVFYWpZQ0RDQUZLQUlBR2dzTUFRc0xJQUFvQWdBaUF3Ui9JQU1vQWd3aUJTQURLQUlRUmdSL0lBTWdBeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVVvQWdBTFFYOUdCSDhnQUVFQU5nSUFRUUVGSUFBb0FnQkZDd1ZCQVFzaEFBSkFBa0FDUUNBRVJRMEFJQVFvQWd3aUF5QUVLQUlRUmdSL0lBUWdCQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQU1vQWdBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFCRkRRSUxEQUlMSUFBTkFBd0JDeUFDSUFJb0FnQkJBbkkyQWdBTEMyc0JBWDhqQkNFRkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUZJQUlvQWdBMkFnQWdCVUVFYWlJQ0lBVW9BZ0EyQWdBZ0FTQUNJQU1nQkVFQ0VJOEJJZ0ZCUEVnZ0F5Z0NBQ0lDUVFSeFJYRUVRQ0FBSUFFMkFnQUZJQU1nQWtFRWNqWUNBQXNnQlNRRUMyNEJBWDhqQkNFRkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUZJQUlvQWdBMkFnQWdCVUVFYWlJQ0lBVW9BZ0EyQWdBZ0FTQUNJQU1nQkVFQ0VJOEJJZ0ZCRFVnZ0F5Z0NBQ0lDUVFSeFJYRUVRQ0FBSUFGQmYybzJBZ0FGSUFNZ0FrRUVjallDQUFzZ0JTUUVDMndCQVg4akJDRUZJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFGSUFJb0FnQTJBZ0FnQlVFRWFpSUNJQVVvQWdBMkFnQWdBU0FDSUFNZ0JFRURFSThCSWdGQjdnSklJQU1vQWdBaUFrRUVjVVZ4QkVBZ0FDQUJOZ0lBQlNBRElBSkJCSEkyQWdBTElBVWtCQXR1QVFGL0l3UWhCU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQlNBQ0tBSUFOZ0lBSUFWQkJHb2lBaUFGS0FJQU5nSUFJQUVnQWlBRElBUkJBaENQQVNJQlFYOXFRUXhKSUFNb0FnQWlBa0VFY1VWeEJFQWdBQ0FCTmdJQUJTQURJQUpCQkhJMkFnQUxJQVVrQkF0ckFRRi9Jd1FoQlNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JTQUNLQUlBTmdJQUlBVkJCR29pQWlBRktBSUFOZ0lBSUFFZ0FpQURJQVJCQWhDUEFTSUJRUmhJSUFNb0FnQWlBa0VFY1VWeEJFQWdBQ0FCTmdJQUJTQURJQUpCQkhJMkFnQUxJQVVrQkF0dUFRRi9Jd1FoQlNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JTQUNLQUlBTmdJQUlBVkJCR29pQWlBRktBSUFOZ0lBSUFFZ0FpQURJQVJCQWhDUEFTSUJRWDlxUVI5SklBTW9BZ0FpQWtFRWNVVnhCRUFnQUNBQk5nSUFCU0FESUFKQkJISTJBZ0FMSUFVa0JBdVBBZ0VDZjBIZzFBSXNBQUJGQkVCQjROUUNMQUFBUVFCSFFRRnpCRUJCOE5FQ0lRQURRQ0FBUWdBM0FnQWdBRUVBTmdJSVFRQWhBUU5BSUFGQkEwY0VRQ0FCUVFKMElBQnFRUUEyQWdBZ0FVRUJhaUVCREFFTEN5QUFRUXhxSWdCQm1OTUNSdzBBQzBIZzFBSkJBRFlDQUVIZzFBSkI0TlFDS0FJQVFRRnlOZ0lBQ3d0QjhORUNRWUQvQUJCYVFmelJBa0djL3dBUVdrR0kwZ0pCdVA4QUVGcEJsTklDUWRqL0FCQmFRYURTQWtHQWdBRVFXa0dzMGdKQnBJQUJFRnBCdU5JQ1FjQ0FBUkJhUWNUU0FrSGtnQUVRV2tIUTBnSkI5SUFCRUZwQjNOSUNRWVNCQVJCYVFlalNBa0dVZ1FFUVdrSDAwZ0pCcElFQkVGcEJnTk1DUWJTQkFSQmFRWXpUQWtIRWdRRVFXZ3Z6QWdFQ2YwSFExQUlzQUFCRkJFQkIwTlFDTEFBQVFRQkhRUUZ6QkVCQjBNOENJUUFEUUNBQVFnQTNBZ0FnQUVFQU5nSUlRUUFoQVFOQUlBRkJBMGNFUUNBQlFRSjBJQUJxUVFBMkFnQWdBVUVCYWlFQkRBRUxDeUFBUVF4cUlnQkI4TkVDUncwQUMwSFExQUpCQURZQ0FFSFExQUpCME5RQ0tBSUFRUUZ5TmdJQUN3dEIwTThDUWZqNkFCQmFRZHpQQWtHWSt3QVFXa0hvendKQnZQc0FFRnBCOU04Q1FkVDdBQkJhUVlEUUFrSHMrd0FRV2tHTTBBSkIvUHNBRUZwQm1OQUNRWkQ4QUJCYVFhVFFBa0drL0FBUVdrR3cwQUpCd1B3QUVGcEJ2TkFDUWVqOEFCQmFRY2pRQWtHSS9RQVFXa0hVMEFKQnJQMEFFRnBCNE5BQ1FkRDlBQkJhUWV6UUFrSGcvUUFRV2tINDBBSkI4UDBBRUZwQmhORUNRWUQrQUJCYVFaRFJBa0hzK3dBUVdrR2MwUUpCa1A0QUVGcEJxTkVDUWFEK0FCQmFRYlRSQWtHdy9nQVFXa0hBMFFKQndQNEFFRnBCek5FQ1FkRCtBQkJhUWRqUkFrSGcvZ0FRV2tIazBRSkI4UDRBRUZvTGx3RUJBbjlCd05RQ0xBQUFSUVJBUWNEVUFpd0FBRUVBUjBFQmN3UkFRYkRQQWlFQUEwQWdBRUlBTndJQUlBQkJBRFlDQ0VFQUlRRURRQ0FCUVFOSEJFQWdBVUVDZENBQWFrRUFOZ0lBSUFGQkFXb2hBUXdCQ3dzZ0FFRU1haUlBUWNqUEFrY05BQXRCd05RQ1FRQTJBZ0JCd05RQ1FjRFVBaWdDQUVFQmNqWUNBQXNMUWJEUEFrSGcrZ0FRV2tHOHp3SkI3UG9BRUZvTFh3QkJtTlFDTEFBQVJRUkFRWmpVQWl3QUFFRUFSMEVCY3dSQVFiVDhBa0lBTndJQVFiejhBa0VBTmdJQVFiVDhBa0dVK1FCQmxQa0FFS3dCRUxJQlFaalVBa0VBTmdJQVFaalVBa0dZMUFJb0FnQkJBWEkyQWdBTEMwRzAvQUlMWHdCQm9OUUNMQUFBUlFSQVFhRFVBaXdBQUVFQVIwRUJjd1JBUWNEOEFrSUFOd0lBUWNqOEFrRUFOZ0lBUWNEOEFrRzQrUUJCdVBrQUVLd0JFTElCUWFEVUFrRUFOZ0lBUWFEVUFrR2cxQUlvQWdCQkFYSTJBZ0FMQzBIQS9BSUxYd0JCcU5RQ0xBQUFSUVJBUWFqVUFpd0FBRUVBUjBFQmN3UkFRY3o4QWtJQU53SUFRZFQ4QWtFQU5nSUFRY3o4QWtIYytRQkIzUGtBRUt3QkVMSUJRYWpVQWtFQU5nSUFRYWpVQWtHbzFBSW9BZ0JCQVhJMkFnQUxDMEhNL0FJTFh3QkJzTlFDTEFBQVJRUkFRYkRVQWl3QUFFRUFSMEVCY3dSQVFkajhBa0lBTndJQVFlRDhBa0VBTmdJQVFkajhBa0dNK2dCQmpQb0FFS3dCRUxJQlFiRFVBa0VBTmdJQVFiRFVBa0d3MUFJb0FnQkJBWEkyQWdBTEMwSFkvQUlMVEFCQnVOUUNMQUFBUlFSQVFialVBaXdBQUVFQVIwRUJjd1JBRU13RlFlVDhBa0d3endJMkFnQkJ1TlFDUVFBMkFnQkJ1TlFDUWJqVUFpZ0NBRUVCY2pZQ0FBc0xRZVQ4QWlnQ0FBdE1BRUhJMUFJc0FBQkZCRUJCeU5RQ0xBQUFRUUJIUVFGekJFQVF5d1ZCNlB3Q1FkRFBBallDQUVISTFBSkJBRFlDQUVISTFBSkJ5TlFDS0FJQVFRRnlOZ0lBQ3d0QjZQd0NLQUlBQzB3QVFkalVBaXdBQUVVRVFFSFkxQUlzQUFCQkFFZEJBWE1FUUJES0JVSHMvQUpCOE5FQ05nSUFRZGpVQWtFQU5nSUFRZGpVQWtIWTFBSW9BZ0JCQVhJMkFnQUxDMEhzL0FJb0FnQUxsQXdCQlg4akJDRUhJd1JCa0FGcUpBUWpCQ01GVGdSQVFaQUJFQUFMSUFkQjhBQnFJUW9nQjBGQWF5RUxJQVJCQURZQ0FDQUhRWUFCYWlJSUlBTW9BaHdpQ1RZQ0FDQUpJQWtvQWdSQkFXbzJBZ1FnQ0VISSt3SVFVeUVKSUFnUVZBSi9Ba0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBZ0JrRVlkRUVZZFVFbGF3NVZGaGNYRnhjWEZ4Y1hGeGNYRnhjWEZ4Y1hGeGNYRnhjWEZ4Y1hGd0FCRndRWEJSY0dCeGNYRndvWEZ4Y1hEZzhRRnhjWEV4VVhGeGNYRnhjWEFBRUNBd01YRndFWENCY1hDUXNYREJjTkZ3c1hGeEVTRkJjTElBY2dBaWdDQURZQ2ZDQUlJQWNvQW53MkFnQWdBQ0FGUVJocUlBRWdDQ0FFSUFrUStBSU1Gd3NnQnlBQ0tBSUFOZ0o0SUFnZ0J5Z0NlRFlDQUNBQUlBVkJFR29nQVNBSUlBUWdDUkQzQWd3V0N5QUFRUWhxSWdZb0FnQW9BZ3doQ1NBR0lBbEIvd0J4UVFScUVRZ0FJUVlnQnlBQktBSUFOZ0owSUFjZ0FpZ0NBRFlDYkNBR0tBSUFJQVlnQml3QUN5SUNRUUJJSWdrYklnc2dCaWdDQkNBQ1FmOEJjU0FKRzBFQ2RHb2hBaUFLSUFjb0FuUTJBZ0FnQ0NBSEtBSnNOZ0lBSUFFZ0FDQUtJQWdnQXlBRUlBVWdDeUFDRUpZQk5nSUFEQlVMSUFjZ0FpZ0NBRFlDYUNBSUlBY29BbWcyQWdBZ0JVRU1haUFCSUFnZ0JDQUpFTWtGREJRTElBY2dBU2dDQURZQ1pDQUhJQUlvQWdBMkFtQWdDaUFIS0FKa05nSUFJQWdnQnlnQ1lEWUNBQ0FCSUFBZ0NpQUlJQU1nQkNBRlFkQTJRZkEyRUpZQk5nSUFEQk1MSUFjZ0FTZ0NBRFlDWENBSElBSW9BZ0EyQWxnZ0NpQUhLQUpjTmdJQUlBZ2dCeWdDV0RZQ0FDQUJJQUFnQ2lBSUlBTWdCQ0FGUWZBMlFaQTNFSllCTmdJQURCSUxJQWNnQWlnQ0FEWUNWQ0FJSUFjb0FsUTJBZ0FnQlVFSWFpQUJJQWdnQkNBSkVNZ0ZEQkVMSUFjZ0FpZ0NBRFlDVUNBSUlBY29BbEEyQWdBZ0JVRUlhaUFCSUFnZ0JDQUpFTWNGREJBTElBY2dBaWdDQURZQ1RDQUlJQWNvQWt3MkFnQWdCVUVjYWlBQklBZ2dCQ0FKRU1ZRkRBOExJQWNnQWlnQ0FEWUNTQ0FJSUFjb0FrZzJBZ0FnQlVFUWFpQUJJQWdnQkNBSkVNVUZEQTRMSUFjZ0FpZ0NBRFlDUkNBSUlBY29Ba1EyQWdBZ0JVRUVhaUFCSUFnZ0JDQUpFTVFGREEwTElBc2dBaWdDQURZQ0FDQUlJQXNvQWdBMkFnQWdBU0FJSUFRZ0NSRERCUXdNQ3lBSElBSW9BZ0EyQWp3Z0NDQUhLQUk4TmdJQUlBQWdCVUVJYWlBQklBZ2dCQ0FKRU1JRkRBc0xJQWNnQVNnQ0FEWUNPQ0FISUFJb0FnQTJBalFnQ2lBSEtBSTROZ0lBSUFnZ0J5Z0NORFlDQUNBQklBQWdDaUFJSUFNZ0JDQUZRWkEzUWJ3M0VKWUJOZ0lBREFvTElBY2dBU2dDQURZQ01DQUhJQUlvQWdBMkFpd2dDaUFIS0FJd05nSUFJQWdnQnlnQ0xEWUNBQ0FCSUFBZ0NpQUlJQU1nQkNBRlFjQTNRZFEzRUpZQk5nSUFEQWtMSUFjZ0FpZ0NBRFlDS0NBSUlBY29BaWcyQWdBZ0JTQUJJQWdnQkNBSkVNRUZEQWdMSUFjZ0FTZ0NBRFlDSkNBSElBSW9BZ0EyQWlBZ0NpQUhLQUlrTmdJQUlBZ2dCeWdDSURZQ0FDQUJJQUFnQ2lBSUlBTWdCQ0FGUWVBM1FZQTRFSllCTmdJQURBY0xJQWNnQWlnQ0FEWUNIQ0FJSUFjb0FodzJBZ0FnQlVFWWFpQUJJQWdnQkNBSkVNQUZEQVlMSUFBb0FnQW9BaFFoQmlBSElBRW9BZ0EyQWhnZ0J5QUNLQUlBTmdJVUlBb2dCeWdDR0RZQ0FDQUlJQWNvQWhRMkFnQWdBQ0FLSUFnZ0F5QUVJQVVnQmtFL2NVR2VBbW9SRGdBTUJnc2dBRUVJYWlJR0tBSUFLQUlZSVFrZ0JpQUpRZjhBY1VFRWFoRUlBQ0VHSUFjZ0FTZ0NBRFlDRUNBSElBSW9BZ0EyQWd3Z0JpZ0NBQ0FHSUFZc0FBc2lBa0VBU0NJSkd5SUxJQVlvQWdRZ0FrSC9BWEVnQ1J0QkFuUnFJUUlnQ2lBSEtBSVFOZ0lBSUFnZ0J5Z0NERFlDQUNBQklBQWdDaUFJSUFNZ0JDQUZJQXNnQWhDV0FUWUNBQXdFQ3lBSElBSW9BZ0EyQWdnZ0NDQUhLQUlJTmdJQUlBVkJGR29nQVNBSUlBUWdDUkQyQWd3REN5QUhJQUlvQWdBMkFnUWdDQ0FIS0FJRU5nSUFJQVZCRkdvZ0FTQUlJQVFnQ1JDL0JRd0NDeUFISUFJb0FnQTJBZ0FnQ0NBSEtBSUFOZ0lBSUFFZ0NDQUVJQWtRdmdVTUFRc2dCQ0FFS0FJQVFRUnlOZ0lBQ3lBQktBSUFDeUVNSUFja0JDQU1DM2dCQW44akJDRUdJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFHUVFScUlnQWdBeWdDSENJRE5nSUFJQU1nQXlnQ0JFRUJhallDQkNBQVFjajdBaEJUSVFNZ0FCQlVJQVlnQWlnQ0FEWUNBQ0FBSUFZb0FnQTJBZ0FnQlVFVWFpQUJJQUFnQkNBREVQWUNJQUVvQWdBaEJ5QUdKQVFnQnd0NkFRTi9Jd1FoQmlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JrRUVhaUlISUFNb0Fod2lBellDQUNBRElBTW9BZ1JCQVdvMkFnUWdCMEhJK3dJUVV5RURJQWNRVkNBR0lBSW9BZ0EyQWdBZ0J5QUdLQUlBTmdJQUlBQWdCVUVRYWlBQklBY2dCQ0FERVBjQ0lBRW9BZ0FoQ0NBR0pBUWdDQXQ2QVFOL0l3UWhCaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQmtFRWFpSUhJQU1vQWh3aUF6WUNBQ0FESUFNb0FnUkJBV28yQWdRZ0IwSEkrd0lRVXlFRElBY1FWQ0FHSUFJb0FnQTJBZ0FnQnlBR0tBSUFOZ0lBSUFBZ0JVRVlhaUFCSUFjZ0JDQURFUGdDSUFFb0FnQWhDQ0FHSkFRZ0NBdXpBUUVFZnlNRUlRY2pCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCQ0dvaUJpZ0NBQ2dDRkNFSUlBWWdDRUgvQUhGQkJHb1JDQUFoQmlBSElBRW9BZ0EyQWdRZ0J5QUNLQUlBTmdJQUlBWW9BZ0FnQmlBR0xBQUxJZ0pCQUVnaUNCc2hBU0FHS0FJRUlBSkIvd0Z4SUFnYlFRSjBJQUZxSVFJZ0IwRUlhaUlHSUFjb0FnUTJBZ0FnQjBFTWFpSUlJQWNvQWdBMkFnQWdBQ0FHSUFnZ0F5QUVJQVVnQVNBQ0VKWUJJUWtnQnlRRUlBa0xhZ0VDZnlNRUlRWWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQVlnQVNnQ0FEWUNCQ0FHSUFJb0FnQTJBZ0FnQmtFSWFpSUJJQVlvQWdRMkFnQWdCa0VNYWlJQ0lBWW9BZ0EyQWdBZ0FDQUJJQUlnQXlBRUlBVkJnRGhCb0RnUWxnRWhCeUFHSkFRZ0J3dU5CQUVEZnlBQUtBSUFJZ1FFZnlBRUtBSU1JZ1VnQkNnQ0VFWUVmeUFFSUFRb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRkxRQUFDMEYvUmdSL0lBQkJBRFlDQUVFQkJTQUFLQUlBUlFzRlFRRUxJUVVDUUFKQUFrQWdBU2dDQUNJRUJFQWdCQ2dDRENJR0lBUW9BaEJHQkg4Z0JDQUVLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCaTBBQUF0QmYwWUVRQ0FCUVFBMkFnQUZJQVVFUUF3RUJRd0RDd0FMQ3lBRlJRUkFRUUFoQkF3Q0N3c2dBaUFDS0FJQVFRWnlOZ0lBREFFTElBTWdBQ2dDQUNJRktBSU1JZ1lnQlNnQ0VFWUVmeUFGSUFVb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBR0xRQUFDMEgvQVhGQkFDQURLQUlBS0FJa1FSOXhRY29CYWhFRUFFSC9BWEZCSlVjRVFDQUNJQUlvQWdCQkJISTJBZ0FNQVFzZ0FDZ0NBQ0lES0FJTUlnVWdBeWdDRUVZRVFDQURJQU1vQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQXlBRlFRRnFOZ0lNSUFVdEFBQWFDeUFBS0FJQUlnTUVmeUFES0FJTUlnVWdBeWdDRUVZRWZ5QURJQU1vQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FGTFFBQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlNBQUtBSUFSUXNGUVFFTElRQUNRQUpBSUFSRkRRQWdCQ2dDRENJRElBUW9BaEJHQkg4Z0JDQUVLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdBeTBBQUF0QmYwWUVRQ0FCUVFBMkFnQU1BUVVnQUEwREN3d0JDeUFBUlEwQkN5QUNJQUlvQWdCQkFuSTJBZ0FMQzE0QkFYOGpCQ0VGSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBRklBSW9BZ0EyQWdBZ0JVRUVhaUlDSUFVb0FnQTJBZ0FnQVNBQ0lBTWdCRUVFRUpBQklRRWdBeWdDQUVFRWNVVUVRQ0FBSUFGQmxIRnFOZ0lBQ3lBRkpBUUxhd0VCZnlNRUlRVWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQVVnQWlnQ0FEWUNBQ0FGUVFScUlnSWdCU2dDQURZQ0FDQUJJQUlnQXlBRVFRRVFrQUVpQVVFSFNDQURLQUlBSWdKQkJIRkZjUVJBSUFBZ0FUWUNBQVVnQXlBQ1FRUnlOZ0lBQ3lBRkpBUUxhd0VCZnlNRUlRVWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQVVnQWlnQ0FEWUNBQ0FGUVFScUlnSWdCU2dDQURZQ0FDQUJJQUlnQXlBRVFRSVFrQUVpQVVFOVNDQURLQUlBSWdKQkJIRkZjUVJBSUFBZ0FUWUNBQVVnQXlBQ1FRUnlOZ0lBQ3lBRkpBUUw3Z0VCQkg4akJDRUhJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVFocUlnQW9BZ0FvQWdnaEJpQUFJQVpCL3dCeFFRUnFFUWdBSWdBc0FBc2lCa0VBU0FSL0lBQW9BZ1FGSUFaQi93RnhDeUVHSUFkQkJHb2hDRUVBSUFBc0FCY2lDVUVBU0FSL0lBQW9BaEFGSUFsQi93RnhDMnNnQmtZRVFDQUVJQVFvQWdCQkJISTJBZ0FGQWtBZ0J5QURLQUlBTmdJQUlBZ2dCeWdDQURZQ0FDQUNJQWdnQUNBQVFSaHFJQVVnQkVFQUVPa0JJQUJySWdKRklBRW9BZ0FpQUVFTVJuRUVRQ0FCUVFBMkFnQU1BUXNnQWtFTVJpQUFRUXhJY1FSQUlBRWdBRUVNYWpZQ0FBc0xDeUFISkFRTGhBUUJBMzhEUUFKQUlBQW9BZ0FpQkFSL0lBUW9BZ3dpQlNBRUtBSVFSZ1IvSUFRZ0JDZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBVXRBQUFMUVg5R0JIOGdBRUVBTmdJQVFRRUZJQUFvQWdCRkN3VkJBUXNoQlFKQUFrQWdBU2dDQUNJRVJRMEFJQVFvQWd3aUJpQUVLQUlRUmdSL0lBUWdCQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVl0QUFBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFWRkRRTUxEQUVMSUFVRWYwRUFJUVFNQWdWQkFBc2hCQXNnQUNnQ0FDSUZLQUlNSWdZZ0JTZ0NFRVlFZnlBRklBVW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUdMUUFBQ3lJRlFmOEJjVUVZZEVFWWRVRi9UQTBBSUFNb0FnZ2dCVUVZZEVFWWRVRUJkR291QVFCQmdNQUFjVVVOQUNBQUtBSUFJZ1FvQWd3aUJTQUVLQUlRUmdSQUlBUWdCQ2dDQUNnQ0tFSC9BSEZCQkdvUkNBQWFCU0FFSUFWQkFXbzJBZ3dnQlMwQUFCb0xEQUVMQ3lBQUtBSUFJZ01FZnlBREtBSU1JZ1VnQXlnQ0VFWUVmeUFESUFNb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRkxRQUFDMEYvUmdSL0lBQkJBRFlDQUVFQkJTQUFLQUlBUlFzRlFRRUxJUUFDUUFKQUFrQWdCRVVOQUNBRUtBSU1JZ01nQkNnQ0VFWUVmeUFFSUFRb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRExRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQUFSUTBDQ3d3Q0N5QUFEUUFNQVFzZ0FpQUNLQUlBUVFKeU5nSUFDd3RyQVFGL0l3UWhCU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQlNBQ0tBSUFOZ0lBSUFWQkJHb2lBaUFGS0FJQU5nSUFJQUVnQWlBRElBUkJBaENRQVNJQlFUeElJQU1vQWdBaUFrRUVjVVZ4QkVBZ0FDQUJOZ0lBQlNBRElBSkJCSEkyQWdBTElBVWtCQXR1QVFGL0l3UWhCU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQlNBQ0tBSUFOZ0lBSUFWQkJHb2lBaUFGS0FJQU5nSUFJQUVnQWlBRElBUkJBaENRQVNJQlFRMUlJQU1vQWdBaUFrRUVjVVZ4QkVBZ0FDQUJRWDlxTmdJQUJTQURJQUpCQkhJMkFnQUxJQVVrQkF0c0FRRi9Jd1FoQlNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JTQUNLQUlBTmdJQUlBVkJCR29pQWlBRktBSUFOZ0lBSUFFZ0FpQURJQVJCQXhDUUFTSUJRZTRDU0NBREtBSUFJZ0pCQkhGRmNRUkFJQUFnQVRZQ0FBVWdBeUFDUVFSeU5nSUFDeUFGSkFRTGJnRUJmeU1FSVFVakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBVWdBaWdDQURZQ0FDQUZRUVJxSWdJZ0JTZ0NBRFlDQUNBQklBSWdBeUFFUVFJUWtBRWlBVUYvYWtFTVNTQURLQUlBSWdKQkJIRkZjUVJBSUFBZ0FUWUNBQVVnQXlBQ1FRUnlOZ0lBQ3lBRkpBUUxhd0VCZnlNRUlRVWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQVVnQWlnQ0FEWUNBQ0FGUVFScUlnSWdCU2dDQURZQ0FDQUJJQUlnQXlBRVFRSVFrQUVpQVVFWVNDQURLQUlBSWdKQkJIRkZjUVJBSUFBZ0FUWUNBQVVnQXlBQ1FRUnlOZ0lBQ3lBRkpBUUxiZ0VCZnlNRUlRVWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQVVnQWlnQ0FEWUNBQ0FGUVFScUlnSWdCU2dDQURZQ0FDQUJJQUlnQXlBRVFRSVFrQUVpQVVGL2FrRWZTU0FES0FJQUlnSkJCSEZGY1FSQUlBQWdBVFlDQUFVZ0F5QUNRUVJ5TmdJQUN5QUZKQVFMandJQkFuOUJrTlFDTEFBQVJRUkFRWkRVQWl3QUFFRUFSMEVCY3dSQVFZRE9BaUVBQTBBZ0FFSUFOd0lBSUFCQkFEWUNDRUVBSVFFRFFDQUJRUU5IQkVBZ0FVRUNkQ0FBYWtFQU5nSUFJQUZCQVdvaEFRd0JDd3NnQUVFTWFpSUFRYWpQQWtjTkFBdEJrTlFDUVFBMkFnQkJrTlFDUVpEVUFpZ0NBRUVCY2pZQ0FBc0xRWURPQWtHRDVnRVFXMEdNemdKQml1WUJFRnRCbU00Q1FaSG1BUkJiUWFUT0FrR1o1Z0VRVzBHd3pnSkJvK1lCRUZ0QnZNNENRYXptQVJCYlFjak9Ba0d6NWdFUVcwSFV6Z0pCdk9ZQkVGdEI0TTRDUWNEbUFSQmJRZXpPQWtIRTVnRVFXMEg0emdKQnlPWUJFRnRCaE04Q1Fjem1BUkJiUVpEUEFrSFE1Z0VRVzBHY3p3SkIxT1lCRUZzTDh3SUJBbjlCZ05RQ0xBQUFSUVJBUVlEVUFpd0FBRUVBUjBFQmN3UkFRZURMQWlFQUEwQWdBRUlBTndJQUlBQkJBRFlDQ0VFQUlRRURRQ0FCUVFOSEJFQWdBVUVDZENBQWFrRUFOZ0lBSUFGQkFXb2hBUXdCQ3dzZ0FFRU1haUlBUVlET0FrY05BQXRCZ05RQ1FRQTJBZ0JCZ05RQ1FZRFVBaWdDQUVFQmNqWUNBQXNMUWVETEFrR0I1UUVRVzBIc3l3SkJpZVVCRUZ0QitNc0NRWkxsQVJCYlFZVE1Ba0dZNVFFUVcwR1F6QUpCbnVVQkVGdEJuTXdDUWFMbEFSQmJRYWpNQWtHbjVRRVFXMEcwekFKQnJPVUJFRnRCd013Q1FiUGxBUkJiUWN6TUFrRzk1UUVRVzBIWXpBSkJ4ZVVCRUZ0QjVNd0NRYzdsQVJCYlFmRE1Ba0hYNVFFUVcwSDh6QUpCMitVQkVGdEJpTTBDUWQvbEFSQmJRWlROQWtIajVRRVFXMEdnelFKQm51VUJFRnRCck0wQ1FlZmxBUkJiUWJqTkFrSHI1UUVRVzBIRXpRSkI3K1VCRUZ0QjBNMENRZlBsQVJCYlFkek5Ba0gzNVFFUVcwSG96UUpCKytVQkVGdEI5TTBDUWYvbEFSQmJDNWNCQVFKL1FmRFRBaXdBQUVVRVFFSHcwd0lzQUFCQkFFZEJBWE1FUUVIQXl3SWhBQU5BSUFCQ0FEY0NBQ0FBUVFBMkFnaEJBQ0VCQTBBZ0FVRURSd1JBSUFGQkFuUWdBR3BCQURZQ0FDQUJRUUZxSVFFTUFRc0xJQUJCREdvaUFFSFl5d0pIRFFBTFFmRFRBa0VBTmdJQVFmRFRBa0h3MHdJb0FnQkJBWEkyQWdBTEMwSEF5d0pCKytRQkVGdEJ6TXNDUWY3a0FSQmJDMTRBUWNqVEFpd0FBRVVFUUVISTB3SXNBQUJCQUVkQkFYTUVRRUh3K3dKQ0FEY0NBRUg0K3dKQkFEWUNBRUh3K3dKQnlPUUJRY2prQVJCN0VLRUJRY2pUQWtFQU5nSUFRY2pUQWtISTB3SW9BZ0JCQVhJMkFnQUxDMEh3K3dJTFhnQkIwTk1DTEFBQVJRUkFRZERUQWl3QUFFRUFSMEVCY3dSQVFmejdBa0lBTndJQVFZVDhBa0VBTmdJQVFmejdBa0hSNUFGQjBlUUJFSHNRb1FGQjBOTUNRUUEyQWdCQjBOTUNRZERUQWlnQ0FFRUJjallDQUFzTFFmejdBZ3RlQUVIWTB3SXNBQUJGQkVCQjJOTUNMQUFBUVFCSFFRRnpCRUJCaVB3Q1FnQTNBZ0JCa1B3Q1FRQTJBZ0JCaVB3Q1FkcmtBVUhhNUFFUWV4Q2hBVUhZMHdKQkFEWUNBRUhZMHdKQjJOTUNLQUlBUVFGeU5nSUFDd3RCaVB3Q0MxNEFRZURUQWl3QUFFVUVRRUhnMHdJc0FBQkJBRWRCQVhNRVFFR1UvQUpDQURjQ0FFR2MvQUpCQURZQ0FFR1UvQUpCNXVRQlFlYmtBUkI3RUtFQlFlRFRBa0VBTmdJQVFlRFRBa0hnMHdJb0FnQkJBWEkyQWdBTEMwR1UvQUlMVEFCQjZOTUNMQUFBUlFSQVFlalRBaXdBQUVFQVIwRUJjd1JBRU9nRlFhRDhBa0hBeXdJMkFnQkI2Tk1DUVFBMkFnQkI2Tk1DUWVqVEFpZ0NBRUVCY2pZQ0FBc0xRYUQ4QWlnQ0FBdE1BRUg0MHdJc0FBQkZCRUJCK05NQ0xBQUFRUUJIUVFGekJFQVE1d1ZCcFB3Q1FlRExBallDQUVINDB3SkJBRFlDQUVINDB3SkIrTk1DS0FJQVFRRnlOZ0lBQ3d0QnBQd0NLQUlBQ3lvQUlBQVFwd0lnQUNnQ0VCQkRJQUJGQkVBUEN5QUFRYkMwQWlnQ0FEWUNBRUd3dEFJZ0FEWUNBQXRNQUVHSTFBSXNBQUJGQkVCQmlOUUNMQUFBUVFCSFFRRnpCRUFRNWdWQnFQd0NRWURPQWpZQ0FFR0kxQUpCQURZQ0FFR0kxQUpCaU5RQ0tBSUFRUUZ5TmdJQUN3dEJxUHdDS0FJQUM1Z01BUVYvSXdRaEJ5TUVRWkFCYWlRRUl3UWpCVTRFUUVHUUFSQUFDeUFIUWZBQWFpRUtJQWRCUUdzaEN5QUVRUUEyQWdBZ0IwR0FBV29pQ0NBREtBSWNJZ2syQWdBZ0NTQUpLQUlFUVFGcU5nSUVJQWhCcVBzQ0VGTWhDU0FJRUZRQ2Z3SkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FDUUFKQUFrQUNRQUpBSUFaQkdIUkJHSFZCSldzT1ZSWVhGeGNYRnhjWEZ4Y1hGeGNYRnhjWEZ4Y1hGeGNYRnhjWEZ4Y0FBUmNFRndVWEJnY1hGeGNLRnhjWEZ3NFBFQmNYRnhNVkZ4Y1hGeGNYRndBQkFnTURGeGNCRndnWEZ3a0xGd3dYRFJjTEZ4Y1JFaFFYQ3lBSElBSW9BZ0EyQW53Z0NDQUhLQUo4TmdJQUlBQWdCVUVZYWlBQklBZ2dCQ0FKRVBzQ0RCY0xJQWNnQWlnQ0FEWUNlQ0FJSUFjb0FuZzJBZ0FnQUNBRlFSQnFJQUVnQ0NBRUlBa1ErZ0lNRmdzZ0FFRUlhaUlHS0FJQUtBSU1JUWtnQmlBSlFmOEFjVUVFYWhFSUFDRUdJQWNnQVNnQ0FEWUNkQ0FISUFJb0FnQTJBbXdnQmlnQ0FDQUdJQVlzQUFzaUFrRUFTQ0lKR3lJTElBWW9BZ1FnQWtIL0FYRWdDUnRxSVFJZ0NpQUhLQUowTmdJQUlBZ2dCeWdDYkRZQ0FDQUJJQUFnQ2lBSUlBTWdCQ0FGSUFzZ0FoQ1lBVFlDQUF3VkN5QUhJQUlvQWdBMkFtZ2dDQ0FIS0FKb05nSUFJQVZCREdvZ0FTQUlJQVFnQ1JEbEJRd1VDeUFISUFFb0FnQTJBbVFnQnlBQ0tBSUFOZ0pnSUFvZ0J5Z0NaRFlDQUNBSUlBY29BbUEyQWdBZ0FTQUFJQW9nQ0NBRElBUWdCVUhZNWdGQjRPWUJFSmdCTmdJQURCTUxJQWNnQVNnQ0FEWUNYQ0FISUFJb0FnQTJBbGdnQ2lBSEtBSmNOZ0lBSUFnZ0J5Z0NXRFlDQUNBQklBQWdDaUFJSUFNZ0JDQUZRZURtQVVIbzVnRVFtQUUyQWdBTUVnc2dCeUFDS0FJQU5nSlVJQWdnQnlnQ1ZEWUNBQ0FGUVFocUlBRWdDQ0FFSUFrUTVBVU1FUXNnQnlBQ0tBSUFOZ0pRSUFnZ0J5Z0NVRFlDQUNBRlFRaHFJQUVnQ0NBRUlBa1E0d1VNRUFzZ0J5QUNLQUlBTmdKTUlBZ2dCeWdDVERZQ0FDQUZRUnhxSUFFZ0NDQUVJQWtRNGdVTUR3c2dCeUFDS0FJQU5nSklJQWdnQnlnQ1NEWUNBQ0FGUVJCcUlBRWdDQ0FFSUFrUTRRVU1EZ3NnQnlBQ0tBSUFOZ0pFSUFnZ0J5Z0NSRFlDQUNBRlFRUnFJQUVnQ0NBRUlBa1E0QVVNRFFzZ0N5QUNLQUlBTmdJQUlBZ2dDeWdDQURZQ0FDQUJJQWdnQkNBSkVOOEZEQXdMSUFjZ0FpZ0NBRFlDUENBSUlBY29BancyQWdBZ0FDQUZRUWhxSUFFZ0NDQUVJQWtRM2dVTUN3c2dCeUFCS0FJQU5nSTRJQWNnQWlnQ0FEWUNOQ0FLSUFjb0FqZzJBZ0FnQ0NBSEtBSTBOZ0lBSUFFZ0FDQUtJQWdnQXlBRUlBVkI2T1lCUWZQbUFSQ1lBVFlDQUF3S0N5QUhJQUVvQWdBMkFqQWdCeUFDS0FJQU5nSXNJQW9nQnlnQ01EWUNBQ0FJSUFjb0FpdzJBZ0FnQVNBQUlBb2dDQ0FESUFRZ0JVSHo1Z0ZCK09ZQkVKZ0JOZ0lBREFrTElBY2dBaWdDQURZQ0tDQUlJQWNvQWlnMkFnQWdCU0FCSUFnZ0JDQUpFTjBGREFnTElBY2dBU2dDQURZQ0pDQUhJQUlvQWdBMkFpQWdDaUFIS0FJa05nSUFJQWdnQnlnQ0lEWUNBQ0FCSUFBZ0NpQUlJQU1nQkNBRlFmam1BVUdBNXdFUW1BRTJBZ0FNQndzZ0J5QUNLQUlBTmdJY0lBZ2dCeWdDSERZQ0FDQUZRUmhxSUFFZ0NDQUVJQWtRM0FVTUJnc2dBQ2dDQUNnQ0ZDRUdJQWNnQVNnQ0FEWUNHQ0FISUFJb0FnQTJBaFFnQ2lBSEtBSVlOZ0lBSUFnZ0J5Z0NGRFlDQUNBQUlBb2dDQ0FESUFRZ0JTQUdRVDl4UVo0Q2FoRU9BQXdHQ3lBQVFRaHFJZ1lvQWdBb0FoZ2hDU0FHSUFsQi93QnhRUVJxRVFnQUlRWWdCeUFCS0FJQU5nSVFJQWNnQWlnQ0FEWUNEQ0FHS0FJQUlBWWdCaXdBQ3lJQ1FRQklJZ2tiSWdzZ0JpZ0NCQ0FDUWY4QmNTQUpHMm9oQWlBS0lBY29BaEEyQWdBZ0NDQUhLQUlNTmdJQUlBRWdBQ0FLSUFnZ0F5QUVJQVVnQ3lBQ0VKZ0JOZ0lBREFRTElBY2dBaWdDQURZQ0NDQUlJQWNvQWdnMkFnQWdCVUVVYWlBQklBZ2dCQ0FKRVBrQ0RBTUxJQWNnQWlnQ0FEWUNCQ0FJSUFjb0FnUTJBZ0FnQlVFVWFpQUJJQWdnQkNBSkVOc0ZEQUlMSUFjZ0FpZ0NBRFlDQUNBSUlBY29BZ0EyQWdBZ0FTQUlJQVFnQ1JEYUJRd0JDeUFFSUFRb0FnQkJCSEkyQWdBTElBRW9BZ0FMSVF3Z0J5UUVJQXdMZUFFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFaQkJHb2lBQ0FES0FJY0lnTTJBZ0FnQXlBREtBSUVRUUZxTmdJRUlBQkJxUHNDRUZNaEF5QUFFRlFnQmlBQ0tBSUFOZ0lBSUFBZ0JpZ0NBRFlDQUNBRlFSUnFJQUVnQUNBRUlBTVErUUlnQVNnQ0FDRUhJQVlrQkNBSEMzb0JBMzhqQkNFR0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUdRUVJxSWdjZ0F5Z0NIQ0lETmdJQUlBTWdBeWdDQkVFQmFqWUNCQ0FIUWFqN0FoQlRJUU1nQnhCVUlBWWdBaWdDQURZQ0FDQUhJQVlvQWdBMkFnQWdBQ0FGUVJCcUlBRWdCeUFFSUFNUStnSWdBU2dDQUNFSUlBWWtCQ0FJQzNvQkEzOGpCQ0VHSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBR1FRUnFJZ2NnQXlnQ0hDSUROZ0lBSUFNZ0F5Z0NCRUVCYWpZQ0JDQUhRYWo3QWhCVElRTWdCeEJVSUFZZ0FpZ0NBRFlDQUNBSElBWW9BZ0EyQWdBZ0FDQUZRUmhxSUFFZ0J5QUVJQU1RK3dJZ0FTZ0NBQ0VJSUFZa0JDQUlDN0FCQVFSL0l3UWhCeU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFSWFpSUdLQUlBS0FJVUlRZ2dCaUFJUWY4QWNVRUVhaEVJQUNFR0lBY2dBU2dDQURZQ0JDQUhJQUlvQWdBMkFnQWdCaWdDQUNBR0lBWXNBQXNpQWtFQVNDSUlHeUVCSUFZb0FnUWdBa0gvQVhFZ0NCc2dBV29oQWlBSFFRaHFJZ1lnQnlnQ0JEWUNBQ0FIUVF4cUlnZ2dCeWdDQURZQ0FDQUFJQVlnQ0NBRElBUWdCU0FCSUFJUW1BRWhDU0FISkFRZ0NRdHNBUUovSXdRaEJpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dCaUFCS0FJQU5nSUVJQVlnQWlnQ0FEWUNBQ0FHUVFocUlnRWdCaWdDQkRZQ0FDQUdRUXhxSWdJZ0JpZ0NBRFlDQUNBQUlBRWdBaUFESUFRZ0JVR0E1d0ZCaU9jQkVKZ0JJUWNnQmlRRUlBY0xEZ0FnQUJDbkFpQUFLQUlRRUVNTDl3RUJCbjhqQkNFQUl3UkIwQUZxSkFRakJDTUZUZ1JBUWRBQkVBQUxJQUJCd0FGcUlnWkI3ZUlCS0FBQU5nQUFJQVpCOGVJQkxnQUFPd0FFRUY0aENDQUFRYmdCYWlJRklBUTJBZ0FnQUVHZ0FXb2lCRUVVSUFnZ0JpQUZFRzRoQmlBRUlBUWdCbW9pQ0NBQ0VIa2hDU0FGSUFJb0Fod2lCellDQUNBSElBY29BZ1JCQVdvMkFnUWdCVUhJK3dJUVV5RUhJQVVRVkNBSElBUWdDQ0FBSUFjb0FnQW9BakJCQjNGQjZnRnFFUThBR2lBQUlBRW9BZ0EyQXJ3QklBVWdBQ2dDdkFFMkFnQWdCU0FBSUFaQkFuUWdBR29pQVNBSklBUnJRUUowSUFCcUlBZ2dDVVliSUFFZ0FpQURFSmtCSVFvZ0FDUUVJQW9MMUFNQkQzOGpCQ0VGSXdSQjRBSnFKQVFqQkNNRlRnUkFRZUFDRUFBTElBVkJxQUpxSVEwZ0JVR1lBbW9oQUNBRlFaQUNhaUlHUWlVM0F3QWdCa0VCYWtIejRnRWdBaWdDQkJEbkFTRU9JQVZCMUFKcUlna2dCVUh3QVdvaUNqWUNBQkJlSVE4Z0JVSEFBbW9oRUNBRlFiQUNhaUVMSUE0RWZ5QUFJQUlvQWdnMkFnQWdBQ0FFT1FNSUlBcEJIaUFQSUFZZ0FCQnVCU0FOSUFRNUF3QWdDa0VlSUE4Z0JpQU5FRzRMSWdCQkhVb0VRQkJlSVFBZ0RnUi9JQXNnQWlnQ0NEWUNBQ0FMSUFRNUF3Z2dDU0FBSUFZZ0N4Q1JBUVVnRUNBRU9RTUFJQWtnQUNBR0lCQVFrUUVMSVFBZ0NTZ0NBQ0lHQkVBZ0JpSUlJUkVnQUNFSEJSQURDd1VnQ1NnQ0FDRUlJQUFoQndzZ0JTRUFJQWdnQnlBSWFpSUdJQUlRZVNFSklBZ2dDa1lFUUNBQUlReEJBU0VTQlNBSFFRTjBFRW9pQUFSQUlBQWlFeUVNQlJBREN3c2dCVUhZQW1vaUFDQUNLQUljSWdjMkFnQWdCeUFIS0FJRVFRRnFOZ0lFSUFnZ0NTQUdJQXdnQlVIUUFtb2dCVUhNQW1vZ0FCRDlBaUFBRUZRZ0JTQUJLQUlBTmdMSUFpQUZLQUxRQWlFSElBVW9Bc3dDSVFnZ0FDQUZLQUxJQWpZQ0FDQUJJQUFnRENBSElBZ2dBaUFERUprQklnQTJBZ0FnRWtVRVFDQVRFRU1MSUJFUVF5QUZKQVFnQUF2VUF3RVBmeU1FSVFVakJFSGdBbW9rQkNNRUl3Vk9CRUJCNEFJUUFBc2dCVUdvQW1vaERTQUZRWmdDYWlFQUlBVkJrQUpxSWdaQ0pUY0RBQ0FHUVFGcVFZUC9BaUFDS0FJRUVPY0JJUTRnQlVIVUFtb2lDU0FGUWZBQmFpSUtOZ0lBRUY0aER5QUZRY0FDYWlFUUlBVkJzQUpxSVFzZ0RnUi9JQUFnQWlnQ0NEWUNBQ0FBSUFRNUF3Z2dDa0VlSUE4Z0JpQUFFRzRGSUEwZ0JEa0RBQ0FLUVI0Z0R5QUdJQTBRYmdzaUFFRWRTZ1JBRUY0aEFDQU9CSDhnQ3lBQ0tBSUlOZ0lBSUFzZ0JEa0RDQ0FKSUFBZ0JpQUxFSkVCQlNBUUlBUTVBd0FnQ1NBQUlBWWdFQkNSQVFzaEFDQUpLQUlBSWdZRVFDQUdJZ2doRVNBQUlRY0ZFQU1MQlNBSktBSUFJUWdnQUNFSEN5QUZJUUFnQ0NBSElBaHFJZ1lnQWhCNUlRa2dDQ0FLUmdSQUlBQWhERUVCSVJJRklBZEJBM1FRU2lJQUJFQWdBQ0lUSVF3RkVBTUxDeUFGUWRnQ2FpSUFJQUlvQWh3aUJ6WUNBQ0FISUFjb0FnUkJBV28yQWdRZ0NDQUpJQVlnRENBRlFkQUNhaUFGUWN3Q2FpQUFFUDBDSUFBUVZDQUZJQUVvQWdBMkFzZ0NJQVVvQXRBQ0lRY2dCU2dDekFJaENDQUFJQVVvQXNnQ05nSUFJQUVnQUNBTUlBY2dDQ0FDSUFNUW1RRWlBRFlDQUNBU1JRUkFJQk1RUXdzZ0VSQkRJQVVrQkNBQUM3d0NBUWgvSXdRaEFDTUVRU0JxSkFRakJDTUZUZ1JBUVNBUUFBc2dBRUlsTndNQUlBQkJBV3BCbC93QlFRQWdBaWdDQkJDakFTQUNLQUlFUVFsMlFRRnhRUlp5SWdWQkFXb2hCZ0ovRUFZaERDTUVJUWNqQkNBR1FROXFRWEJ4YWlRRUl3UWpCVTRFUUNBR1FROXFRWEJ4RUFBTEVGNGhDU0FBUVFocUlnZ2dCRGNEQUNBSElBY2dCaUFKSUFBZ0NCQnVJQWRxSWdrZ0FoQjVJUXNqQkNFR0l3UWdCVUVCZEVGL2FrRUNkQ0lGUVE5cVFYQnhhaVFFSXdRakJVNEVRQ0FGUVE5cVFYQnhFQUFMSUFnZ0FpZ0NIQ0lGTmdJQUlBVWdCU2dDQkVFQmFqWUNCQ0FISUFzZ0NTQUdJQUJCR0dvZ0FFRVFhaUFJRU9VQklBZ1FWQ0FBSUFFb0FnQTJBaFFnQUNnQ0dDRUJJQUFvQWhBaEJ5QUlJQUFvQWhRMkFnQWdDQ0FHSUFFZ0J5QUNJQU1RbVFFaEFTQU1DeEFISUFBa0JDQUJDOG9DQVFkL0l3UWhBQ01FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNnQUVFUWFpSUZRZlhpQVNnQUFEWUFBQ0FGUWZuaUFTNEFBRHNBQkNBRlFRRnFRWkw4QVVFQUlBSW9BZ1FRb3dFZ0FpZ0NCRUVKZGtFQmNTSUpRUXh5SVFjQ2Z4QUdJUXNqQkNFR0l3UWdCMEVQYWtGd2NXb2tCQ01FSXdWT0JFQWdCMEVQYWtGd2NSQUFDeEJlSVFnZ0FDQUVOZ0lBSUFZZ0JpQUhJQWdnQlNBQUVHNGdCbW9pQnlBQ0VIa2hDQ01FSVFRakJDQUpRUUYwUVJWeVFRSjBJZ1ZCRDJwQmNIRnFKQVFqQkNNRlRnUkFJQVZCRDJwQmNIRVFBQXNnQUNBQ0tBSWNJZ1UyQWdBZ0JTQUZLQUlFUVFGcU5nSUVJQVlnQ0NBSElBUWdBRUVNYWlBQVFRUnFJQUFRNVFFZ0FCQlVJQUFnQVNnQ0FEWUNDQ0FBS0FJTUlRRWdBQ2dDQkNFR0lBQWdBQ2dDQ0RZQ0FDQUFJQVFnQVNBR0lBSWdBeENaQVNFQklBc0xFQWNnQUNRRUlBRUx2QUlCQ0g4akJDRUFJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDeUFBUWlVM0F3QWdBRUVCYWtHWC9BRkJBU0FDS0FJRUVLTUJJQUlvQWdSQkNYWkJBWEVpQlVFWGFpRUdBbjhRQmlFTUl3UWhCeU1FSUFaQkQycEJjSEZxSkFRakJDTUZUZ1JBSUFaQkQycEJjSEVRQUFzUVhpRUpJQUJCQ0dvaUNDQUVOd01BSUFjZ0J5QUdJQWtnQUNBSUVHNGdCMm9pQ1NBQ0VIa2hDeU1FSVFZakJDQUZRUUYwUVN4eVFYOXFRUUowSWdWQkQycEJjSEZxSkFRakJDTUZUZ1JBSUFWQkQycEJjSEVRQUFzZ0NDQUNLQUljSWdVMkFnQWdCU0FGS0FJRVFRRnFOZ0lFSUFjZ0N5QUpJQVlnQUVFWWFpQUFRUkJxSUFnUTVRRWdDQkJVSUFBZ0FTZ0NBRFlDRkNBQUtBSVlJUUVnQUNnQ0VDRUhJQWdnQUNnQ0ZEWUNBQ0FJSUFZZ0FTQUhJQUlnQXhDWkFTRUJJQXdMRUFjZ0FDUUVJQUVMelFJQkIzOGpCQ0VBSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQVFSQnFJZ1ZCOWVJQktBQUFOZ0FBSUFWQitlSUJMZ0FBT3dBRUlBVkJBV3BCa3Z3QlFRRWdBaWdDQkJDakFTQUNLQUlFUVFsMlFRRnhJZ2xCRFdvaEJ3Si9FQVloQ3lNRUlRWWpCQ0FIUVE5cVFYQnhhaVFFSXdRakJVNEVRQ0FIUVE5cVFYQnhFQUFMRUY0aENDQUFJQVEyQWdBZ0JpQUdJQWNnQ0NBRklBQVFiaUFHYWlJSElBSVFlU0VJSXdRaEJDTUVJQWxCQVhSQkdISkJmMnBCQW5RaUJVRVBha0Z3Y1dva0JDTUVJd1ZPQkVBZ0JVRVBha0Z3Y1JBQUN5QUFJQUlvQWh3aUJUWUNBQ0FGSUFVb0FnUkJBV28yQWdRZ0JpQUlJQWNnQkNBQVFReHFJQUJCQkdvZ0FCRGxBU0FBRUZRZ0FDQUJLQUlBTmdJSUlBQW9BZ3doQVNBQUtBSUVJUVlnQUNBQUtBSUlOZ0lBSUFBZ0JDQUJJQVlnQWlBREVKa0JJUUVnQ3dzUUJ5QUFKQVFnQVF2L0FnRURmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWkJCR29oQlNBQ0tBSUVRUUZ4QkVBZ0JTQUNLQUljSWdBMkFnQWdBQ0FBS0FJRVFRRnFOZ0lFSUFWQjBQc0NFRk1oQUNBRkVGUWdBQ2dDQUNFQ0lBVWdBQ0FFQkg4Z0FpZ0NHQVVnQWlnQ0hBdEIvd0Z4UVk0SGFoRUFBQ0FGS0FJQUlnSWhBeUFGTEFBTElnUWhBQ0FDSUFVZ0JFRUFTQnNoQWdOQUlBVW9BZ1FnQUVIL0FYRWdBRUVZZEVFWWRVRUFTQ0lBRzBFQ2RDQURJQVVnQUJ0cUlBSkhCRUFnQWlnQ0FDRURJQUVvQWdBaUFBUkFJQUFvQWhnaUJDQUFLQUljUmdSL0lBQWdBeUFBS0FJQUtBSTBRVDl4UVlvQmFoRURBQVVnQUNBRVFRUnFOZ0lZSUFRZ0F6WUNBQ0FEQzBGL1JnUkFJQUZCQURZQ0FBc0xJQVVvQWdBaEF5QUZMQUFMSVFBZ0FrRUVhaUVDREFFTEN5QUJLQUlBSVFBZ0JSQk9CU0FBS0FJQUtBSVlJUWNnQmlBQktBSUFOZ0lBSUFVZ0JpZ0NBRFlDQUNBQUlBVWdBaUFESUFSQkFYRWdCMEVmY1VINkFXb1JEQUFoQUFzZ0JpUUVJQUFMN2dFQkJuOGpCQ0VBSXdSQjRBQnFKQVFqQkNNRlRnUkFRZUFBRUFBTElBQkIwQUJxSWdaQjdlSUJLQUFBTmdBQUlBWkI4ZUlCTGdBQU93QUVFRjRoQ0NBQVFjZ0FhaUlGSUFRMkFnQWdBRUV3YWlJRVFSUWdDQ0FHSUFVUWJpRUdJQVFnQkNBR2FpSUlJQUlRZVNFSklBVWdBaWdDSENJSE5nSUFJQWNnQnlnQ0JFRUJhallDQkNBRlFhajdBaEJUSVFjZ0JSQlVJQWNnQkNBSUlBQWdCeWdDQUNnQ0lFRUhjVUhxQVdvUkR3QWFJQUFnQVNnQ0FEWUNUQ0FGSUFBb0FrdzJBZ0FnQlNBQUlBQWdCbW9pQVNBQUlBa2dCR3RxSUFnZ0NVWWJJQUVnQWlBREVJNEJJUW9nQUNRRUlBb0x4QU1CRDM4akJDRUZJd1JCc0FGcUpBUWpCQ01GVGdSQVFiQUJFQUFMSUFWQitBQnFJUTBnQlVIb0FHb2hBQ0FGUWVBQWFpSUdRaVUzQXdBZ0JrRUJha0h6NGdFZ0FpZ0NCQkRuQVNFT0lBVkJwQUZxSWdnZ0JVRkFheUlLTmdJQUVGNGhEeUFGUVpBQmFpRVFJQVZCZ0FGcUlRc2dEZ1IvSUFBZ0FpZ0NDRFlDQUNBQUlBUTVBd2dnQ2tFZUlBOGdCaUFBRUc0RklBMGdCRGtEQUNBS1FSNGdEeUFHSUEwUWJnc2lBRUVkU2dSQUVGNGhBQ0FPQkg4Z0N5QUNLQUlJTmdJQUlBc2dCRGtEQ0NBSUlBQWdCaUFMRUpFQkJTQVFJQVE1QXdBZ0NDQUFJQVlnRUJDUkFRc2hBQ0FJS0FJQUlnWUVRQ0FHSWdraEVTQUFJUWNGRUFNTEJTQUlLQUlBSVFrZ0FDRUhDeUFGSVFBZ0NTQUhJQWxxSWdZZ0FoQjVJUWdnQ1NBS1JnUkFJQUFoREFVZ0IwRUJkQkJLSWdBRVFDQUFJZ3doRWdVUUF3c0xJQVZCcUFGcUlnQWdBaWdDSENJSE5nSUFJQWNnQnlnQ0JFRUJhallDQkNBSklBZ2dCaUFNSUFWQm9BRnFJQVZCbkFGcUlBQVEvZ0lnQUJCVUlBVWdBU2dDQURZQ21BRWdCU2dDb0FFaEFTQUZLQUtjQVNFSElBQWdCU2dDbUFFMkFnQWdBQ0FNSUFFZ0J5QUNJQU1RamdFaEV5QVNFRU1nRVJCRElBVWtCQ0FUQzhRREFROS9Jd1FoQlNNRVFiQUJhaVFFSXdRakJVNEVRRUd3QVJBQUN5QUZRZmdBYWlFTklBVkI2QUJxSVFBZ0JVSGdBR29pQmtJbE53TUFJQVpCQVdwQmcvOENJQUlvQWdRUTV3RWhEaUFGUWFRQmFpSUlJQVZCUUdzaUNqWUNBQkJlSVE4Z0JVR1FBV29oRUNBRlFZQUJhaUVMSUE0RWZ5QUFJQUlvQWdnMkFnQWdBQ0FFT1FNSUlBcEJIaUFQSUFZZ0FCQnVCU0FOSUFRNUF3QWdDa0VlSUE4Z0JpQU5FRzRMSWdCQkhVb0VRQkJlSVFBZ0RnUi9JQXNnQWlnQ0NEWUNBQ0FMSUFRNUF3Z2dDQ0FBSUFZZ0N4Q1JBUVVnRUNBRU9RTUFJQWdnQUNBR0lCQVFrUUVMSVFBZ0NDZ0NBQ0lHQkVBZ0JpSUpJUkVnQUNFSEJSQURDd1VnQ0NnQ0FDRUpJQUFoQndzZ0JTRUFJQWtnQnlBSmFpSUdJQUlRZVNFSUlBa2dDa1lFUUNBQUlRd0ZJQWRCQVhRUVNpSUFCRUFnQUNJTUlSSUZFQU1MQ3lBRlFhZ0JhaUlBSUFJb0Fod2lCellDQUNBSElBY29BZ1JCQVdvMkFnUWdDU0FJSUFZZ0RDQUZRYUFCYWlBRlFad0JhaUFBRVA0Q0lBQVFWQ0FGSUFFb0FnQTJBcGdCSUFVb0FxQUJJUUVnQlNnQ25BRWhCeUFBSUFVb0FwZ0JOZ0lBSUFBZ0RDQUJJQWNnQWlBREVJNEJJUk1nRWhCRElCRVFReUFGSkFRZ0V3dTVBZ0VJZnlNRUlRQWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUJDSlRjREFDQUFRUUZxUVpmOEFVRUFJQUlvQWdRUW93RWdBaWdDQkVFSmRrRUJjVUVXY2lJRlFRRnFJUVlDZnhBR0lRd2pCQ0VISXdRZ0JrRVBha0Z3Y1dva0JDTUVJd1ZPQkVBZ0JrRVBha0Z3Y1JBQUN4QmVJUWtnQUVFSWFpSUlJQVEzQXdBZ0J5QUhJQVlnQ1NBQUlBZ1FiaUFIYWlJSklBSVFlU0VMSXdRaEJpTUVJQVZCQVhSQmYyb2lCVUVQYWtGd2NXb2tCQ01FSXdWT0JFQWdCVUVQYWtGd2NSQUFDeUFJSUFJb0Fod2lCVFlDQUNBRklBVW9BZ1JCQVdvMkFnUWdCeUFMSUFrZ0JpQUFRUmhxSUFCQkVHb2dDQkRtQVNBSUVGUWdBQ0FCS0FJQU5nSVVJQUFvQWhnaEFTQUFLQUlRSVFjZ0NDQUFLQUlVTmdJQUlBZ2dCaUFCSUFjZ0FpQURFSTRCSVFFZ0RBc1FCeUFBSkFRZ0FRdmdBUUVGZnlBQUtBSVFJZ01nQVVFQmFtb2dBQ2dDRENJRmF5RUVJQUFvQWdRaUJrVUVRQ0FBSUFRUVNpSUNOZ0lFSUFJRVFDQUFJQUlnQldzMkFnQWdBQ0FDSUFScU5nSUlJQUFnQVNBRGFqWUNFQThGUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlDUVFBMkFnQWdBa0YvTmdJRUlBSkJxRGhCQUJBQkN3c2dCaUFFRUlvQklnSkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ05CQURZQ0FDQURRWDgyQWdRZ0EwR29PRUVBRUFFTElBQWdBallDQkNBQUtBSVFJUU1nQUNBQ0lBQW9BZ3hyTmdJQUlBQWdBaUFFYWpZQ0NDQUFJQUVnQTJvMkFoQUx4d0lCQjM4akJDRUFJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDeUFBUVJCcUlnVkI5ZUlCS0FBQU5nQUFJQVZCK2VJQkxnQUFPd0FFSUFWQkFXcEJrdndCUVFBZ0FpZ0NCQkNqQVNBQ0tBSUVRUWwyUVFGeElnbEJESEloQndKL0VBWWhDeU1FSVFZakJDQUhRUTlxUVhCeGFpUUVJd1FqQlU0RVFDQUhRUTlxUVhCeEVBQUxFRjRoQ0NBQUlBUTJBZ0FnQmlBR0lBY2dDQ0FGSUFBUWJpQUdhaUlISUFJUWVTRUlJd1FoQkNNRUlBbEJBWFJCRlhJaUJVRVBha0Z3Y1dva0JDTUVJd1ZPQkVBZ0JVRVBha0Z3Y1JBQUN5QUFJQUlvQWh3aUJUWUNBQ0FGSUFVb0FnUkJBV28yQWdRZ0JpQUlJQWNnQkNBQVFReHFJQUJCQkdvZ0FCRG1BU0FBRUZRZ0FDQUJLQUlBTmdJSUlBQW9BZ3doQVNBQUtBSUVJUVlnQUNBQUtBSUlOZ0lBSUFBZ0JDQUJJQVlnQWlBREVJNEJJUUVnQ3dzUUJ5QUFKQVFnQVF1NUFnRUlmeU1FSVFBakJFRWdhaVFFSXdRakJVNEVRRUVnRUFBTElBQkNKVGNEQUNBQVFRRnFRWmY4QVVFQklBSW9BZ1FRb3dFZ0FpZ0NCRUVKZGtFQmNTSUZRUmRxSVFZQ2Z4QUdJUXdqQkNFSEl3UWdCa0VQYWtGd2NXb2tCQ01FSXdWT0JFQWdCa0VQYWtGd2NSQUFDeEJlSVFrZ0FFRUlhaUlJSUFRM0F3QWdCeUFISUFZZ0NTQUFJQWdRYmlBSGFpSUpJQUlRZVNFTEl3UWhCaU1FSUFWQkFYUkJMSEpCZjJvaUJVRVBha0Z3Y1dva0JDTUVJd1ZPQkVBZ0JVRVBha0Z3Y1JBQUN5QUlJQUlvQWh3aUJUWUNBQ0FGSUFVb0FnUkJBV28yQWdRZ0J5QUxJQWtnQmlBQVFSaHFJQUJCRUdvZ0NCRG1BU0FJRUZRZ0FDQUJLQUlBTmdJVUlBQW9BaGdoQVNBQUtBSVFJUWNnQ0NBQUtBSVVOZ0lBSUFnZ0JpQUJJQWNnQWlBREVJNEJJUUVnREFzUUJ5QUFKQVFnQVF2S0FnRUhmeU1FSVFBakJFRWdhaVFFSXdRakJVNEVRRUVnRUFBTElBQkJFR29pQlVIMTRnRW9BQUEyQUFBZ0JVSDU0Z0V1QUFBN0FBUWdCVUVCYWtHUy9BRkJBU0FDS0FJRUVLTUJJQUlvQWdSQkNYWkJBWEVpQ1VFTmFpRUhBbjhRQmlFTEl3UWhCaU1FSUFkQkQycEJjSEZxSkFRakJDTUZUZ1JBSUFkQkQycEJjSEVRQUFzUVhpRUlJQUFnQkRZQ0FDQUdJQVlnQnlBSUlBVWdBQkJ1SUFacUlnY2dBaEI1SVFnakJDRUVJd1FnQ1VFQmRFRVlja0YvYWlJRlFROXFRWEJ4YWlRRUl3UWpCVTRFUUNBRlFROXFRWEJ4RUFBTElBQWdBaWdDSENJRk5nSUFJQVVnQlNnQ0JFRUJhallDQkNBR0lBZ2dCeUFFSUFCQkRHb2dBRUVFYWlBQUVPWUJJQUFRVkNBQUlBRW9BZ0EyQWdnZ0FDZ0NEQ0VCSUFBb0FnUWhCaUFBSUFBb0FnZzJBZ0FnQUNBRUlBRWdCaUFDSUFNUWpnRWhBU0FMQ3hBSElBQWtCQ0FCQzRRREFRTi9Jd1FoQmlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JrRUVhaUVGSUFJb0FnUkJBWEVFUUNBRklBSW9BaHdpQURZQ0FDQUFJQUFvQWdSQkFXbzJBZ1FnQlVHNCt3SVFVeUVBSUFVUVZDQUFLQUlBSVFJZ0JTQUFJQVFFZnlBQ0tBSVlCU0FDS0FJY0MwSC9BWEZCamdkcUVRQUFJQVVzQUFzaUFpRUFJQVVvQWdBaUJDRURJQVFnQlNBQ1FRQklHeUVDQTBBZ0JTZ0NCQ0FBUWY4QmNTQUFRUmgwUVJoMVFRQklJZ0FiSUFNZ0JTQUFHMm9nQWtjRVFDQUNMQUFBSVFNZ0FTZ0NBQ0lBQkVBZ0FDZ0NHQ0lFSUFBb0FoeEdCSDhnQUNBRFFmOEJjU0FBS0FJQUtBSTBRVDl4UVlvQmFoRURBQVVnQUNBRVFRRnFOZ0lZSUFRZ0F6b0FBQ0FEUWY4QmNRdEJmMFlFUUNBQlFRQTJBZ0FMQ3lBRkxBQUxJUUFnQlNnQ0FDRURJQUpCQVdvaEFnd0JDd3NnQVNnQ0FDRUFJQVVRVGdVZ0FDZ0NBQ2dDR0NFSElBWWdBU2dDQURZQ0FDQUZJQVlvQWdBMkFnQWdBQ0FGSUFJZ0F5QUVRUUZ4SUFkQkgzRkIrZ0ZxRVF3QUlRQUxJQVlrQkNBQUM0QUlBUTUvSXdRaENTTUVRYkFDYWlRRUl3UWpCVTRFUUVHd0FoQUFDd0ovQWtBQ1FBSkFBa0FnQWlnQ0JFSEtBSEVPUVFJREF3TURBd01EQVFNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQUF3dEJDQXdEQzBFUURBSUxRUUFNQVF0QkNnc2hEeUFDSUFsQm9BRnFFTWtCSVJBZ0NVR2dBbW9pQ3lBQ0lBbEJyQUpxRU1nQklBbEJsQUpxSWdaQ0FEY0NBQ0FHUVFBMkFnZ0RRQ0FLUVFOSEJFQWdDa0VDZENBR2FrRUFOZ0lBSUFwQkFXb2hDZ3dCQ3dzZ0JpQUdMQUFMUVFCSUJIOGdCaWdDQ0VILy8vLy9CM0ZCZjJvRlFRb0xFRlVnQ1VHUUFtb2lEQ0FHS0FJQUlBWWdCaXdBQzBFQVNCc2lDallDQUNBSlFZd0NhaUlOSUFrMkFnQWdDVUdJQW1vaURrRUFOZ0lBSUFBb0FnQWlBaUVGQTBBQ1FDQUZCSDhnQlNnQ0RDSUhJQVVvQWhCR0JIOGdCU0FGS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQnlnQ0FBdEJmMFlFZnlBQVFRQTJBZ0JCQUNFRlFRQWhBa0VCQlVFQUN3VkJBQ0VGUVFBaEFrRUJDeUVJQWtBQ1FDQUJLQUlBSWdkRkRRQWdCeWdDRENJUklBY29BaEJHQkg4Z0J5QUhLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdFU2dDQUF0QmYwWUVRQ0FCUVFBMkFnQU1BUVVnQ0VVTkF3c01BUXNnQ0FSL1FRQWhCd3dDQlVFQUN5RUhDeUFNS0FJQUlBb2dCaWdDQkNBR0xBQUxJZ2hCL3dGeElBaEJBRWdiSWdocVJnUkFJQVlnQ0VFQmRCQlZJQVlnQml3QUMwRUFTQVIvSUFZb0FnaEIvLy8vL3dkeFFYOXFCVUVLQ3hCVklBd2dCaWdDQUNBR0lBWXNBQXRCQUVnYklnb2dDR28yQWdBTElBVW9BZ3dpQ0NBRktBSVFSZ1IvSUFVZ0JTZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBZ29BZ0FMSUE4Z0NpQU1JQTRnQ1NnQ3JBSWdDeUFKSUEwZ0VCQzJBUTBBSUFVb0Fnd2lCeUFGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBZEJCR28yQWd3Z0J5Z0NBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDRUgvQVhFZ0NFRUFTQnNFUUNBTktBSUFJZ2dnQ1d0Qm9BRklCRUFnRGlnQ0FDRU9JQTBnQ0VFRWFqWUNBQ0FJSUE0MkFnQUxDeUFFSUFvZ0RDZ0NBQ0FESUE4UWdBTTJBZ0FnQ3lBSklBMG9BZ0FnQXhCdklBVUVmeUFGS0FJTUlnUWdCU2dDRUVZRWZ5QUZJQUlvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFS0FJQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlVFQUN3VkJBUXNoQWdKQUFrQUNRQ0FIUlEwQUlBY29BZ3dpQkNBSEtBSVFSZ1IvSUFjZ0J5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMUVg5R0JFQWdBVUVBTmdJQURBRUZJQUpGRFFJTERBSUxJQUlOQUF3QkN5QURJQU1vQWdCQkFuSTJBZ0FMSUFBb0FnQWhFaUFHRUU0Z0N4Qk9JQWtrQkNBU0M0QUlBUTUvSXdRaENTTUVRYkFDYWlRRUl3UWpCVTRFUUVHd0FoQUFDd0ovQWtBQ1FBSkFBa0FnQWlnQ0JFSEtBSEVPUVFJREF3TURBd01EQVFNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQUF3dEJDQXdEQzBFUURBSUxRUUFNQVF0QkNnc2hEeUFDSUFsQm9BRnFFTWtCSVJBZ0NVR2dBbW9pQ3lBQ0lBbEJyQUpxRU1nQklBbEJsQUpxSWdaQ0FEY0NBQ0FHUVFBMkFnZ0RRQ0FLUVFOSEJFQWdDa0VDZENBR2FrRUFOZ0lBSUFwQkFXb2hDZ3dCQ3dzZ0JpQUdMQUFMUVFCSUJIOGdCaWdDQ0VILy8vLy9CM0ZCZjJvRlFRb0xFRlVnQ1VHUUFtb2lEQ0FHS0FJQUlBWWdCaXdBQzBFQVNCc2lDallDQUNBSlFZd0NhaUlOSUFrMkFnQWdDVUdJQW1vaURrRUFOZ0lBSUFBb0FnQWlBaUVGQTBBQ1FDQUZCSDhnQlNnQ0RDSUhJQVVvQWhCR0JIOGdCU0FGS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQnlnQ0FBdEJmMFlFZnlBQVFRQTJBZ0JCQUNFRlFRQWhBa0VCQlVFQUN3VkJBQ0VGUVFBaEFrRUJDeUVJQWtBQ1FDQUJLQUlBSWdkRkRRQWdCeWdDRENJUklBY29BaEJHQkg4Z0J5QUhLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdFU2dDQUF0QmYwWUVRQ0FCUVFBMkFnQU1BUVVnQ0VVTkF3c01BUXNnQ0FSL1FRQWhCd3dDQlVFQUN5RUhDeUFNS0FJQUlBb2dCaWdDQkNBR0xBQUxJZ2hCL3dGeElBaEJBRWdiSWdocVJnUkFJQVlnQ0VFQmRCQlZJQVlnQml3QUMwRUFTQVIvSUFZb0FnaEIvLy8vL3dkeFFYOXFCVUVLQ3hCVklBd2dCaWdDQUNBR0lBWXNBQXRCQUVnYklnb2dDR28yQWdBTElBVW9BZ3dpQ0NBRktBSVFSZ1IvSUFVZ0JTZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBZ29BZ0FMSUE4Z0NpQU1JQTRnQ1NnQ3JBSWdDeUFKSUEwZ0VCQzJBUTBBSUFVb0Fnd2lCeUFGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBZEJCR28yQWd3Z0J5Z0NBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDRUgvQVhFZ0NFRUFTQnNFUUNBTktBSUFJZ2dnQ1d0Qm9BRklCRUFnRGlnQ0FDRU9JQTBnQ0VFRWFqWUNBQ0FJSUE0MkFnQUxDeUFFSUFvZ0RDZ0NBQ0FESUE4UWdRTTNBd0FnQ3lBSklBMG9BZ0FnQXhCdklBVUVmeUFGS0FJTUlnUWdCU2dDRUVZRWZ5QUZJQUlvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFS0FJQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlVFQUN3VkJBUXNoQWdKQUFrQUNRQ0FIUlEwQUlBY29BZ3dpQkNBSEtBSVFSZ1IvSUFjZ0J5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMUVg5R0JFQWdBVUVBTmdJQURBRUZJQUpGRFFJTERBSUxJQUlOQUF3QkN5QURJQU1vQWdCQkFuSTJBZ0FMSUFBb0FnQWhFaUFHRUU0Z0N4Qk9JQWtrQkNBU0M0QUlBUTUvSXdRaENTTUVRYkFDYWlRRUl3UWpCVTRFUUVHd0FoQUFDd0ovQWtBQ1FBSkFBa0FnQWlnQ0JFSEtBSEVPUVFJREF3TURBd01EQVFNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQUF3dEJDQXdEQzBFUURBSUxRUUFNQVF0QkNnc2hEeUFDSUFsQm9BRnFFTWtCSVJBZ0NVR2dBbW9pQ3lBQ0lBbEJyQUpxRU1nQklBbEJsQUpxSWdaQ0FEY0NBQ0FHUVFBMkFnZ0RRQ0FLUVFOSEJFQWdDa0VDZENBR2FrRUFOZ0lBSUFwQkFXb2hDZ3dCQ3dzZ0JpQUdMQUFMUVFCSUJIOGdCaWdDQ0VILy8vLy9CM0ZCZjJvRlFRb0xFRlVnQ1VHUUFtb2lEQ0FHS0FJQUlBWWdCaXdBQzBFQVNCc2lDallDQUNBSlFZd0NhaUlOSUFrMkFnQWdDVUdJQW1vaURrRUFOZ0lBSUFBb0FnQWlBaUVGQTBBQ1FDQUZCSDhnQlNnQ0RDSUhJQVVvQWhCR0JIOGdCU0FGS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQnlnQ0FBdEJmMFlFZnlBQVFRQTJBZ0JCQUNFRlFRQWhBa0VCQlVFQUN3VkJBQ0VGUVFBaEFrRUJDeUVJQWtBQ1FDQUJLQUlBSWdkRkRRQWdCeWdDRENJUklBY29BaEJHQkg4Z0J5QUhLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdFU2dDQUF0QmYwWUVRQ0FCUVFBMkFnQU1BUVVnQ0VVTkF3c01BUXNnQ0FSL1FRQWhCd3dDQlVFQUN5RUhDeUFNS0FJQUlBb2dCaWdDQkNBR0xBQUxJZ2hCL3dGeElBaEJBRWdiSWdocVJnUkFJQVlnQ0VFQmRCQlZJQVlnQml3QUMwRUFTQVIvSUFZb0FnaEIvLy8vL3dkeFFYOXFCVUVLQ3hCVklBd2dCaWdDQUNBR0lBWXNBQXRCQUVnYklnb2dDR28yQWdBTElBVW9BZ3dpQ0NBRktBSVFSZ1IvSUFVZ0JTZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBZ29BZ0FMSUE4Z0NpQU1JQTRnQ1NnQ3JBSWdDeUFKSUEwZ0VCQzJBUTBBSUFVb0Fnd2lCeUFGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBZEJCR28yQWd3Z0J5Z0NBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDRUgvQVhFZ0NFRUFTQnNFUUNBTktBSUFJZ2dnQ1d0Qm9BRklCRUFnRGlnQ0FDRU9JQTBnQ0VFRWFqWUNBQ0FJSUE0MkFnQUxDeUFFSUFvZ0RDZ0NBQ0FESUE4UWdnTTdBUUFnQ3lBSklBMG9BZ0FnQXhCdklBVUVmeUFGS0FJTUlnUWdCU2dDRUVZRWZ5QUZJQUlvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFS0FJQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlVFQUN3VkJBUXNoQWdKQUFrQUNRQ0FIUlEwQUlBY29BZ3dpQkNBSEtBSVFSZ1IvSUFjZ0J5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMUVg5R0JFQWdBVUVBTmdJQURBRUZJQUpGRFFJTERBSUxJQUlOQUF3QkN5QURJQU1vQWdCQkFuSTJBZ0FMSUFBb0FnQWhFaUFHRUU0Z0N4Qk9JQWtrQkNBU0M0QUlBUTUvSXdRaENTTUVRYkFDYWlRRUl3UWpCVTRFUUVHd0FoQUFDd0ovQWtBQ1FBSkFBa0FnQWlnQ0JFSEtBSEVPUVFJREF3TURBd01EQVFNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQUF3dEJDQXdEQzBFUURBSUxRUUFNQVF0QkNnc2hEeUFDSUFsQm9BRnFFTWtCSVJBZ0NVR2dBbW9pQ3lBQ0lBbEJyQUpxRU1nQklBbEJsQUpxSWdaQ0FEY0NBQ0FHUVFBMkFnZ0RRQ0FLUVFOSEJFQWdDa0VDZENBR2FrRUFOZ0lBSUFwQkFXb2hDZ3dCQ3dzZ0JpQUdMQUFMUVFCSUJIOGdCaWdDQ0VILy8vLy9CM0ZCZjJvRlFRb0xFRlVnQ1VHUUFtb2lEQ0FHS0FJQUlBWWdCaXdBQzBFQVNCc2lDallDQUNBSlFZd0NhaUlOSUFrMkFnQWdDVUdJQW1vaURrRUFOZ0lBSUFBb0FnQWlBaUVGQTBBQ1FDQUZCSDhnQlNnQ0RDSUhJQVVvQWhCR0JIOGdCU0FGS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQnlnQ0FBdEJmMFlFZnlBQVFRQTJBZ0JCQUNFRlFRQWhBa0VCQlVFQUN3VkJBQ0VGUVFBaEFrRUJDeUVJQWtBQ1FDQUJLQUlBSWdkRkRRQWdCeWdDRENJUklBY29BaEJHQkg4Z0J5QUhLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdFU2dDQUF0QmYwWUVRQ0FCUVFBMkFnQU1BUVVnQ0VVTkF3c01BUXNnQ0FSL1FRQWhCd3dDQlVFQUN5RUhDeUFNS0FJQUlBb2dCaWdDQkNBR0xBQUxJZ2hCL3dGeElBaEJBRWdiSWdocVJnUkFJQVlnQ0VFQmRCQlZJQVlnQml3QUMwRUFTQVIvSUFZb0FnaEIvLy8vL3dkeFFYOXFCVUVLQ3hCVklBd2dCaWdDQUNBR0lBWXNBQXRCQUVnYklnb2dDR28yQWdBTElBVW9BZ3dpQ0NBRktBSVFSZ1IvSUFVZ0JTZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBZ29BZ0FMSUE4Z0NpQU1JQTRnQ1NnQ3JBSWdDeUFKSUEwZ0VCQzJBUTBBSUFVb0Fnd2lCeUFGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBZEJCR28yQWd3Z0J5Z0NBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDRUgvQVhFZ0NFRUFTQnNFUUNBTktBSUFJZ2dnQ1d0Qm9BRklCRUFnRGlnQ0FDRU9JQTBnQ0VFRWFqWUNBQ0FJSUE0MkFnQUxDeUFFSUFvZ0RDZ0NBQ0FESUE4UWd3TTJBZ0FnQ3lBSklBMG9BZ0FnQXhCdklBVUVmeUFGS0FJTUlnUWdCU2dDRUVZRWZ5QUZJQUlvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFS0FJQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlVFQUN3VkJBUXNoQWdKQUFrQUNRQ0FIUlEwQUlBY29BZ3dpQkNBSEtBSVFSZ1IvSUFjZ0J5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMUVg5R0JFQWdBVUVBTmdJQURBRUZJQUpGRFFJTERBSUxJQUlOQUF3QkN5QURJQU1vQWdCQkFuSTJBZ0FMSUFBb0FnQWhFaUFHRUU0Z0N4Qk9JQWtrQkNBU0MyY0JBbjhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNJQUFvQWh3aUFEWUNBQ0FBSUFBb0FnUkJBV28yQWdRZ0FrSEkrd0lRVXlJQUtBSUFLQUl3SVFNZ0FFR2dOa0c2TmlBQklBTkJCM0ZCNmdGcUVROEFHaUFDRUZRZ0FpUUVJQUVMclFFQkEzOGdBQ2dDQkJCRElBQkJBRFlDRENBQUlBRTJBaEFnQVVFQVNBUkFJQUJCQURZQ0NDQUFRUUEyQWdBZ0FFRUFOZ0lFRHdzZ0FDQUJRUUZxSWdRUVNpSUROZ0lFSUFORkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnVkJBRFlDQUNBRlFYODJBZ1FnQlVHb09FRUFFQUVMSUFBZ0F6WUNBQ0FBSUFNZ0JHb2lCRFlDQ0NBQlFYOU1CRUFQQ3lBRElRQURRQ0FBSUFJc0FBQTZBQUFnQUVFQmFpSUFJQVJIRFFBTEM0QUlBUTUvSXdRaENTTUVRYkFDYWlRRUl3UWpCVTRFUUVHd0FoQUFDd0ovQWtBQ1FBSkFBa0FnQWlnQ0JFSEtBSEVPUVFJREF3TURBd01EQVFNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQUF3dEJDQXdEQzBFUURBSUxRUUFNQVF0QkNnc2hEeUFDSUFsQm9BRnFFTWtCSVJBZ0NVR2dBbW9pQ3lBQ0lBbEJyQUpxRU1nQklBbEJsQUpxSWdaQ0FEY0NBQ0FHUVFBMkFnZ0RRQ0FLUVFOSEJFQWdDa0VDZENBR2FrRUFOZ0lBSUFwQkFXb2hDZ3dCQ3dzZ0JpQUdMQUFMUVFCSUJIOGdCaWdDQ0VILy8vLy9CM0ZCZjJvRlFRb0xFRlVnQ1VHUUFtb2lEQ0FHS0FJQUlBWWdCaXdBQzBFQVNCc2lDallDQUNBSlFZd0NhaUlOSUFrMkFnQWdDVUdJQW1vaURrRUFOZ0lBSUFBb0FnQWlBaUVGQTBBQ1FDQUZCSDhnQlNnQ0RDSUhJQVVvQWhCR0JIOGdCU0FGS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQnlnQ0FBdEJmMFlFZnlBQVFRQTJBZ0JCQUNFRlFRQWhBa0VCQlVFQUN3VkJBQ0VGUVFBaEFrRUJDeUVJQWtBQ1FDQUJLQUlBSWdkRkRRQWdCeWdDRENJUklBY29BaEJHQkg4Z0J5QUhLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdFU2dDQUF0QmYwWUVRQ0FCUVFBMkFnQU1BUVVnQ0VVTkF3c01BUXNnQ0FSL1FRQWhCd3dDQlVFQUN5RUhDeUFNS0FJQUlBb2dCaWdDQkNBR0xBQUxJZ2hCL3dGeElBaEJBRWdiSWdocVJnUkFJQVlnQ0VFQmRCQlZJQVlnQml3QUMwRUFTQVIvSUFZb0FnaEIvLy8vL3dkeFFYOXFCVUVLQ3hCVklBd2dCaWdDQUNBR0lBWXNBQXRCQUVnYklnb2dDR28yQWdBTElBVW9BZ3dpQ0NBRktBSVFSZ1IvSUFVZ0JTZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBZ29BZ0FMSUE4Z0NpQU1JQTRnQ1NnQ3JBSWdDeUFKSUEwZ0VCQzJBUTBBSUFVb0Fnd2lCeUFGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBZEJCR28yQWd3Z0J5Z0NBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDRUgvQVhFZ0NFRUFTQnNFUUNBTktBSUFJZ2dnQ1d0Qm9BRklCRUFnRGlnQ0FDRU9JQTBnQ0VFRWFqWUNBQ0FJSUE0MkFnQUxDeUFFSUFvZ0RDZ0NBQ0FESUE4UWhBTTNBd0FnQ3lBSklBMG9BZ0FnQXhCdklBVUVmeUFGS0FJTUlnUWdCU2dDRUVZRWZ5QUZJQUlvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFS0FJQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlVFQUN3VkJBUXNoQWdKQUFrQUNRQ0FIUlEwQUlBY29BZ3dpQkNBSEtBSVFSZ1IvSUFjZ0J5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMUVg5R0JFQWdBVUVBTmdJQURBRUZJQUpGRFFJTERBSUxJQUlOQUF3QkN5QURJQU1vQWdCQkFuSTJBZ0FMSUFBb0FnQWhFaUFHRUU0Z0N4Qk9JQWtrQkNBU0M3OEhBUTkvSXdRaEJ5TUVRZEFDYWlRRUl3UWpCVTRFUUVIUUFoQUFDeUFIUWJnQ2FpSUxJQUlnQjBHZ0FXb2lFQ0FIUWNnQ2FpQUhRY1FDYWhDUkFpQUhRYXdDYWlJR1FnQTNBZ0FnQmtFQU5nSUlBMEFnQ2tFRFJ3UkFJQXBCQW5RZ0JtcEJBRFlDQUNBS1FRRnFJUW9NQVFzTElBWWdCaXdBQzBFQVNBUi9JQVlvQWdoQi8vLy8vd2R4UVg5cUJVRUtDeEJWSUFkQnFBSnFJZzBnQmlnQ0FDQUdJQVlzQUF0QkFFZ2JJZ28yQWdBZ0IwR2tBbW9pRGlBSE5nSUFJQWRCb0FKcUlnOUJBRFlDQUNBSFFjMENhaUlNUVFFNkFBQWdCMEhNQW1vaUVVSEZBRG9BQUNBQUtBSUFJZ0loQlFOQUFrQWdCUVIvSUFVb0Fnd2lDQ0FGS0FJUVJnUi9JQVVnQlNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFnb0FnQUxRWDlHQkg4Z0FFRUFOZ0lBUVFBaEJVRUFJUUpCQVFWQkFBc0ZRUUFoQlVFQUlRSkJBUXNoQ1FKQUFrQWdBU2dDQUNJSVJRMEFJQWdvQWd3aUVpQUlLQUlRUmdSL0lBZ2dDQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQklvQWdBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFsRkRRTUxEQUVMSUFrRWYwRUFJUWdNQWdWQkFBc2hDQXNnRFNnQ0FDQUtJQVlvQWdRZ0Jpd0FDeUlKUWY4QmNTQUpRUUJJR3lJSmFrWUVRQ0FHSUFsQkFYUVFWU0FHSUFZc0FBdEJBRWdFZnlBR0tBSUlRZi8vLy84SGNVRi9hZ1ZCQ2dzUVZTQU5JQVlvQWdBZ0JpQUdMQUFMUVFCSUd5SUtJQWxxTmdJQUN5QUZLQUlNSWdrZ0JTZ0NFRVlFZnlBRklBVW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUpLQUlBQ3lBTUlCRWdDaUFOSUFjb0FzZ0NJQWNvQXNRQ0lBc2dCeUFPSUE4Z0VCQ1FBZzBBSUFVb0Fnd2lDQ0FGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBaEJCR28yQWd3Z0NDZ0NBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDVUgvQVhFZ0NVRUFTQnRGSUF3c0FBQkZja1VFUUNBT0tBSUFJZ3dnQjJ0Qm9BRklCRUFnRHlnQ0FDRVBJQTRnREVFRWFqWUNBQ0FNSUE4MkFnQUxDeUFFSUFvZ0RTZ0NBQ0FERUlVRE9BSUFJQXNnQnlBT0tBSUFJQU1RYnlBRkJIOGdCU2dDRENJRUlBVW9BaEJHQkg4Z0JTQUNLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCQ2dDQUF0QmYwWUVmeUFBUVFBMkFnQkJBUVZCQUFzRlFRRUxJUUlDUUFKQUFrQWdDRVVOQUNBSUtBSU1JZ1FnQ0NnQ0VFWUVmeUFJSUFnb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUtBSUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQUNSUTBDQ3d3Q0N5QUNEUUFNQVFzZ0F5QURLQUlBUVFKeU5nSUFDeUFBS0FJQUlSTWdCaEJPSUFzUVRpQUhKQVFnRXd1L0J3RVBmeU1FSVFjakJFSFFBbW9rQkNNRUl3Vk9CRUJCMEFJUUFBc2dCMEc0QW1vaUN5QUNJQWRCb0FGcUloQWdCMEhJQW1vZ0IwSEVBbW9Ra1FJZ0IwR3NBbW9pQmtJQU53SUFJQVpCQURZQ0NBTkFJQXBCQTBjRVFDQUtRUUowSUFacVFRQTJBZ0FnQ2tFQmFpRUtEQUVMQ3lBR0lBWXNBQXRCQUVnRWZ5QUdLQUlJUWYvLy8vOEhjVUYvYWdWQkNnc1FWU0FIUWFnQ2FpSU5JQVlvQWdBZ0JpQUdMQUFMUVFCSUd5SUtOZ0lBSUFkQnBBSnFJZzRnQnpZQ0FDQUhRYUFDYWlJUFFRQTJBZ0FnQjBITkFtb2lERUVCT2dBQUlBZEJ6QUpxSWhGQnhRQTZBQUFnQUNnQ0FDSUNJUVVEUUFKQUlBVUVmeUFGS0FJTUlnZ2dCU2dDRUVZRWZ5QUZJQVVvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FJS0FJQUMwRi9SZ1IvSUFCQkFEWUNBRUVBSVFWQkFDRUNRUUVGUVFBTEJVRUFJUVZCQUNFQ1FRRUxJUWtDUUFKQUlBRW9BZ0FpQ0VVTkFDQUlLQUlNSWhJZ0NDZ0NFRVlFZnlBSUlBZ29BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQVNLQUlBQzBGL1JnUkFJQUZCQURZQ0FBd0JCU0FKUlEwREN3d0JDeUFKQkg5QkFDRUlEQUlGUVFBTElRZ0xJQTBvQWdBZ0NpQUdLQUlFSUFZc0FBc2lDVUgvQVhFZ0NVRUFTQnNpQ1dwR0JFQWdCaUFKUVFGMEVGVWdCaUFHTEFBTFFRQklCSDhnQmlnQ0NFSC8vLy8vQjNGQmYyb0ZRUW9MRUZVZ0RTQUdLQUlBSUFZZ0Jpd0FDMEVBU0JzaUNpQUphallDQUFzZ0JTZ0NEQ0lKSUFVb0FoQkdCSDhnQlNBRktBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0NTZ0NBQXNnRENBUklBb2dEU0FIS0FMSUFpQUhLQUxFQWlBTElBY2dEaUFQSUJBUWtBSU5BQ0FGS0FJTUlnZ2dCU2dDRUVZRVFDQUZJQVVvQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQlNBSVFRUnFOZ0lNSUFnb0FnQWFDd3dCQ3dzZ0N5Z0NCQ0FMTEFBTElnbEIvd0Z4SUFsQkFFZ2JSU0FNTEFBQVJYSkZCRUFnRGlnQ0FDSU1JQWRyUWFBQlNBUkFJQThvQWdBaER5QU9JQXhCQkdvMkFnQWdEQ0FQTmdJQUN3c2dCQ0FLSUEwb0FnQWdBeENHQXprREFDQUxJQWNnRGlnQ0FDQURFRzhnQlFSL0lBVW9BZ3dpQkNBRktBSVFSZ1IvSUFVZ0FpZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUW9BZ0FMUVg5R0JIOGdBRUVBTmdJQVFRRUZRUUFMQlVFQkN5RUNBa0FDUUFKQUlBaEZEUUFnQ0NnQ0RDSUVJQWdvQWhCR0JIOGdDQ0FJS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQkNnQ0FBdEJmMFlFUUNBQlFRQTJBZ0FNQVFVZ0FrVU5BZ3NNQWdzZ0FnMEFEQUVMSUFNZ0F5Z0NBRUVDY2pZQ0FBc2dBQ2dDQUNFVElBWVFUaUFMRUU0Z0J5UUVJQk1MdndjQkQzOGpCQ0VISXdSQjBBSnFKQVFqQkNNRlRnUkFRZEFDRUFBTElBZEJ1QUpxSWdzZ0FpQUhRYUFCYWlJUUlBZEJ5QUpxSUFkQnhBSnFFSkVDSUFkQnJBSnFJZ1pDQURjQ0FDQUdRUUEyQWdnRFFDQUtRUU5IQkVBZ0NrRUNkQ0FHYWtFQU5nSUFJQXBCQVdvaENnd0JDd3NnQmlBR0xBQUxRUUJJQkg4Z0JpZ0NDRUgvLy8vL0IzRkJmMm9GUVFvTEVGVWdCMEdvQW1vaURTQUdLQUlBSUFZZ0Jpd0FDMEVBU0JzaUNqWUNBQ0FIUWFRQ2FpSU9JQWMyQWdBZ0IwR2dBbW9pRDBFQU5nSUFJQWRCelFKcUlneEJBVG9BQUNBSFFjd0NhaUlSUWNVQU9nQUFJQUFvQWdBaUFpRUZBMEFDUUNBRkJIOGdCU2dDRENJSUlBVW9BaEJHQkg4Z0JTQUZLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDQ2dDQUF0QmYwWUVmeUFBUVFBMkFnQkJBQ0VGUVFBaEFrRUJCVUVBQ3dWQkFDRUZRUUFoQWtFQkN5RUpBa0FDUUNBQktBSUFJZ2hGRFFBZ0NDZ0NEQ0lTSUFnb0FoQkdCSDhnQ0NBSUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0VpZ0NBQXRCZjBZRVFDQUJRUUEyQWdBTUFRVWdDVVVOQXdzTUFRc2dDUVIvUVFBaENBd0NCVUVBQ3lFSUN5QU5LQUlBSUFvZ0JpZ0NCQ0FHTEFBTElnbEIvd0Z4SUFsQkFFZ2JJZ2xxUmdSQUlBWWdDVUVCZEJCVklBWWdCaXdBQzBFQVNBUi9JQVlvQWdoQi8vLy8vd2R4UVg5cUJVRUtDeEJWSUEwZ0JpZ0NBQ0FHSUFZc0FBdEJBRWdiSWdvZ0NXbzJBZ0FMSUFVb0Fnd2lDU0FGS0FJUVJnUi9JQVVnQlNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFrb0FnQUxJQXdnRVNBS0lBMGdCeWdDeUFJZ0J5Z0N4QUlnQ3lBSElBNGdEeUFRRUpBQ0RRQWdCU2dDRENJSUlBVW9BaEJHQkVBZ0JTQUZLQUlBS0FJb1FmOEFjVUVFYWhFSUFCb0ZJQVVnQ0VFRWFqWUNEQ0FJS0FJQUdnc01BUXNMSUFzb0FnUWdDeXdBQ3lJSlFmOEJjU0FKUVFCSUcwVWdEQ3dBQUVWeVJRUkFJQTRvQWdBaURDQUhhMEdnQVVnRVFDQVBLQUlBSVE4Z0RpQU1RUVJxTmdJQUlBd2dEellDQUFzTElBUWdDaUFOS0FJQUlBTVFod001QXdBZ0N5QUhJQTRvQWdBZ0F4QnZJQVVFZnlBRktBSU1JZ1FnQlNnQ0VFWUVmeUFGSUFJb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUtBSUFDMEYvUmdSL0lBQkJBRFlDQUVFQkJVRUFDd1ZCQVFzaEFnSkFBa0FDUUNBSVJRMEFJQWdvQWd3aUJDQUlLQUlRUmdSL0lBZ2dDQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVFvQWdBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFKRkRRSUxEQUlMSUFJTkFBd0JDeUFESUFNb0FnQkJBbkkyQWdBTElBQW9BZ0FoRXlBR0VFNGdDeEJPSUFja0JDQVRDK0VIQVE1L0l3UWhDQ01FUWJBQ2FpUUVJd1FqQlU0RVFFR3dBaEFBQ3lBSVFhQUJhaUVOSUFoQm1BSnFJUVlnQ0VHa0Ftb2lDMElBTndJQUlBdEJBRFlDQ0VFQUlRQURRQ0FBUVFOSEJFQWdBRUVDZENBTGFrRUFOZ0lBSUFCQkFXb2hBQXdCQ3dzZ0JpQURLQUljSWdBMkFnQWdBQ0FBS0FJRVFRRnFOZ0lFSUFaQnlQc0NFRk1pQUNnQ0FDZ0NNQ0VESUFCQm9EWkJ1allnRFNBRFFRZHhRZW9CYWhFUEFCb2dCaEJVSUFaQ0FEY0NBQ0FHUVFBMkFnaEJBQ0VBQTBBZ0FFRURSd1JBSUFCQkFuUWdCbXBCQURZQ0FDQUFRUUZxSVFBTUFRc0xJQWhCaUFKcUlRNGdCaUFHTEFBTFFRQklCSDhnQmlnQ0NFSC8vLy8vQjNGQmYyb0ZRUW9MRUZVZ0NFR1VBbW9pQ2lBR0tBSUFJQVlnQml3QUMwRUFTQnNpQURZQ0FDQUlRWkFDYWlJUElBZzJBZ0FnQ0VHTUFtb2lFRUVBTmdJQUlBRW9BZ0FpQXlFTUEwQUNRQ0FEQkg4Z0F5Z0NEQ0lISUFNb0FoQkdCSDhnQXlBREtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0J5Z0NBQXRCZjBZRWZ5QUJRUUEyQWdCQkFDRURRUUFoREVFQkJVRUFDd1ZCQUNFRFFRQWhERUVCQ3lFSkFrQUNRQ0FDS0FJQUlnZEZEUUFnQnlnQ0RDSVJJQWNvQWhCR0JIOGdCeUFIS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnRVNnQ0FBdEJmMFlFUUNBQ1FRQTJBZ0FNQVFVZ0NVVU5Bd3NNQVFzZ0NRUi9RUUFoQnd3Q0JVRUFDeUVIQ3lBS0tBSUFJQUFnQmlnQ0JDQUdMQUFMSWdsQi93RnhJQWxCQUVnYklnbHFSZ1JBSUFZZ0NVRUJkQkJWSUFZZ0Jpd0FDMEVBU0FSL0lBWW9BZ2hCLy8vLy93ZHhRWDlxQlVFS0N4QlZJQW9nQmlnQ0FDQUdJQVlzQUF0QkFFZ2JJZ0FnQ1dvMkFnQUxJQU1vQWd3aUNTQURLQUlRUmdSL0lBTWdBeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQWtvQWdBTFFSQWdBQ0FLSUJCQkFDQUxJQWdnRHlBTkVMWUJEUUFnQXlnQ0RDSUhJQU1vQWhCR0JFQWdBeUFES0FJQUtBSW9RZjhBY1VFRWFoRUlBQm9GSUFNZ0IwRUVhallDRENBSEtBSUFHZ3NNQVFzTElBWWdDaWdDQUNBQWF4QlZJQVlvQWdBZ0JpQUdMQUFMUVFCSUd3Si9FRjRoRWlBT0lBVTJBZ0FnRWdzZ0RoQ0lBMEVCUndSQUlBUkJCRFlDQUFzZ0F3Ui9JQU1vQWd3aUFDQURLQUlRUmdSL0lBTWdEQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQUFvQWdBTFFYOUdCSDhnQVVFQU5nSUFRUUVGUVFBTEJVRUJDeUVBQWtBQ1FBSkFJQWRGRFFBZ0J5Z0NEQ0lESUFjb0FoQkdCSDhnQnlBSEtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0F5Z0NBQXRCZjBZRVFDQUNRUUEyQWdBTUFRVWdBRVVOQWdzTUFnc2dBQTBBREFFTElBUWdCQ2dDQUVFQ2NqWUNBQXNnQVNnQ0FDRVRJQVlRVGlBTEVFNGdDQ1FFSUJNTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUpJR0lRY2dCaVFFSUFjTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUpFR0lRY2dCaVFFSUFjTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUpBR0lRY2dCaVFFSUFjTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUk4R0lRY2dCaVFFSUFjTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUlzR0lRY2dCaVFFSUFjTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUlvR0lRY2dCaVFFSUFjTFlnRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWWdBU2dDQURZQ0JDQUdJQUlvQWdBMkFnQWdCa0VJYWlJQklBWW9BZ1EyQWdBZ0JrRU1haUlDSUFZb0FnQTJBZ0FnQVNBQ0lBTWdCQ0FGRUlrR0lRY2dCaVFFSUFjTG1RTUJCSDhqQkNFR0l3UkJNR29rQkNNRUl3Vk9CRUJCTUJBQUN5QUdRU2hxSVFjZ0JrRWdhaUVJSUFNb0FnUkJBWEVFUUNBSElBTW9BaHdpQURZQ0FDQUFJQUFvQWdSQkFXbzJBZ1FnQjBISSt3SVFVeUVJSUFjUVZDQUhJQU1vQWh3aUFEWUNBQ0FBSUFBb0FnUkJBV28yQWdRZ0IwSFErd0lRVXlFQUlBY1FWQ0FHSUFBZ0FDZ0NBQ2dDR0VIL0FYRkJqZ2RxRVFBQUlBWkJER29nQUNBQUtBSUFLQUljUWY4QmNVR09CMm9SQUFBZ0JpQUNLQUlBTmdJWUlBY2dCaWdDR0RZQ0FDQUZJQUVnQnlBR0lBWkJHR29pQUNBSUlBUkJBUkRvQVNBR1Jqb0FBQ0FCS0FJQUlRRURRQ0FBUVhScUlnQVFUaUFBSUFaSERRQUxCU0FJUVg4MkFnQWdBQ2dDQUNnQ0VDRUpJQVlnQVNnQ0FEWUNKQ0FHSUFJb0FnQTJBaHdnQmlBR0tBSWtOZ0lBSUFjZ0JpZ0NIRFlDQUNBQklBQWdCaUFISUFNZ0JDQUlJQWxCUDNGQm5nSnFFUTRBTmdJQUFrQUNRQUpBQWtBZ0NDZ0NBQTRDQUFFQ0N5QUZRUUE2QUFBTUFnc2dCVUVCT2dBQURBRUxJQVZCQVRvQUFDQUVRUVEyQWdBTElBRW9BZ0FoQVFzZ0JpUUVJQUVMK0FjQkRYOGpCQ0VKSXdSQjhBRnFKQVFqQkNNRlRnUkFRZkFCRUFBTEFuOENRQUpBQWtBQ1FDQUNLQUlFUWNvQWNRNUJBZ01EQXdNREF3TUJBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd0FEQzBFSURBTUxRUkFNQWd0QkFBd0JDMEVLQ3lFUElBbEIxQUZxSWdzZ0FpQUpRZUFCYWhES0FTQUpRY2dCYWlJR1FnQTNBZ0FnQmtFQU5nSUlBMEFnQ2tFRFJ3UkFJQXBCQW5RZ0JtcEJBRFlDQUNBS1FRRnFJUW9NQVFzTElBWWdCaXdBQzBFQVNBUi9JQVlvQWdoQi8vLy8vd2R4UVg5cUJVRUtDeEJWSUFsQnhBRnFJZ3dnQmlnQ0FDQUdJQVlzQUF0QkFFZ2JJZ28yQWdBZ0NVSEFBV29pRFNBSk5nSUFJQWxCdkFGcUlnNUJBRFlDQUNBQUtBSUFJZ0loQlFOQUFrQWdCUVIvSUFVb0Fnd2lCeUFGS0FJUVJnUi9JQVVnQlNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFjdEFBQUxRWDlHQkg4Z0FFRUFOZ0lBUVFBaEJVRUFJUUpCQVFWQkFBc0ZRUUFoQlVFQUlRSkJBUXNoQ0FKQUFrQWdBU2dDQUNJSFJRMEFJQWNvQWd3aUVDQUhLQUlRUmdSL0lBY2dCeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQkF0QUFBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFoRkRRTUxEQUVMSUFnRWYwRUFJUWNNQWdWQkFBc2hCd3NnRENnQ0FDQUtJQVlvQWdRZ0Jpd0FDeUlJUWY4QmNTQUlRUUJJR3lJSWFrWUVRQ0FHSUFoQkFYUVFWU0FHSUFZc0FBdEJBRWdFZnlBR0tBSUlRZi8vLy84SGNVRi9hZ1ZCQ2dzUVZTQU1JQVlvQWdBZ0JpQUdMQUFMUVFCSUd5SUtJQWhxTmdJQUN5QUZLQUlNSWdnZ0JTZ0NFRVlFZnlBRklBVW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUlMUUFBQzBIL0FYRWdEeUFLSUF3Z0RpQUpMQURnQVNBTElBa2dEVUdnTmhDM0FRMEFJQVVvQWd3aUJ5QUZLQUlRUmdSQUlBVWdCU2dDQUNnQ0tFSC9BSEZCQkdvUkNBQWFCU0FGSUFkQkFXbzJBZ3dnQnkwQUFCb0xEQUVMQ3lBTEtBSUVJQXNzQUFzaUNFSC9BWEVnQ0VFQVNCc0VRQ0FOS0FJQUlnZ2dDV3RCb0FGSUJFQWdEaWdDQUNFT0lBMGdDRUVFYWpZQ0FDQUlJQTQyQWdBTEN5QUVJQW9nRENnQ0FDQURJQThRZ0FNMkFnQWdDeUFKSUEwb0FnQWdBeEJ2SUFVRWZ5QUZLQUlNSWdRZ0JTZ0NFRVlFZnlBRklBSW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUVMUUFBQzBGL1JnUi9JQUJCQURZQ0FFRUJCVUVBQ3dWQkFRc2hBZ0pBQWtBQ1FDQUhSUTBBSUFjb0Fnd2lCQ0FIS0FJUVJnUi9JQWNnQnlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFRdEFBQUxRWDlHQkVBZ0FVRUFOZ0lBREFFRklBSkZEUUlMREFJTElBSU5BQXdCQ3lBRElBTW9BZ0JCQW5JMkFnQUxJQUFvQWdBaEVTQUdFRTRnQ3hCT0lBa2tCQ0FSQy9nSEFRMS9Jd1FoQ1NNRVFmQUJhaVFFSXdRakJVNEVRRUh3QVJBQUN3Si9Ba0FDUUFKQUFrQWdBaWdDQkVIS0FIRU9RUUlEQXdNREF3TURBUU1EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01BQXd0QkNBd0RDMEVRREFJTFFRQU1BUXRCQ2dzaER5QUpRZFFCYWlJTElBSWdDVUhnQVdvUXlnRWdDVUhJQVdvaUJrSUFOd0lBSUFaQkFEWUNDQU5BSUFwQkEwY0VRQ0FLUVFKMElBWnFRUUEyQWdBZ0NrRUJhaUVLREFFTEN5QUdJQVlzQUF0QkFFZ0VmeUFHS0FJSVFmLy8vLzhIY1VGL2FnVkJDZ3NRVlNBSlFjUUJhaUlNSUFZb0FnQWdCaUFHTEFBTFFRQklHeUlLTmdJQUlBbEJ3QUZxSWcwZ0NUWUNBQ0FKUWJ3QmFpSU9RUUEyQWdBZ0FDZ0NBQ0lDSVFVRFFBSkFJQVVFZnlBRktBSU1JZ2NnQlNnQ0VFWUVmeUFGSUFVb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBSExRQUFDMEYvUmdSL0lBQkJBRFlDQUVFQUlRVkJBQ0VDUVFFRlFRQUxCVUVBSVFWQkFDRUNRUUVMSVFnQ1FBSkFJQUVvQWdBaUIwVU5BQ0FIS0FJTUloQWdCeWdDRUVZRWZ5QUhJQWNvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FRTFFBQUMwRi9SZ1JBSUFGQkFEWUNBQXdCQlNBSVJRMERDd3dCQ3lBSUJIOUJBQ0VIREFJRlFRQUxJUWNMSUF3b0FnQWdDaUFHS0FJRUlBWXNBQXNpQ0VIL0FYRWdDRUVBU0JzaUNHcEdCRUFnQmlBSVFRRjBFRlVnQmlBR0xBQUxRUUJJQkg4Z0JpZ0NDRUgvLy8vL0IzRkJmMm9GUVFvTEVGVWdEQ0FHS0FJQUlBWWdCaXdBQzBFQVNCc2lDaUFJYWpZQ0FBc2dCU2dDRENJSUlBVW9BaEJHQkg4Z0JTQUZLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDQzBBQUF0Qi93RnhJQThnQ2lBTUlBNGdDU3dBNEFFZ0N5QUpJQTFCb0RZUXR3RU5BQ0FGS0FJTUlnY2dCU2dDRUVZRVFDQUZJQVVvQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQlNBSFFRRnFOZ0lNSUFjdEFBQWFDd3dCQ3dzZ0N5Z0NCQ0FMTEFBTElnaEIvd0Z4SUFoQkFFZ2JCRUFnRFNnQ0FDSUlJQWxyUWFBQlNBUkFJQTRvQWdBaERpQU5JQWhCQkdvMkFnQWdDQ0FPTmdJQUN3c2dCQ0FLSUF3b0FnQWdBeUFQRUlFRE53TUFJQXNnQ1NBTktBSUFJQU1RYnlBRkJIOGdCU2dDRENJRUlBVW9BaEJHQkg4Z0JTQUNLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCQzBBQUF0QmYwWUVmeUFBUVFBMkFnQkJBUVZCQUFzRlFRRUxJUUlDUUFKQUFrQWdCMFVOQUNBSEtBSU1JZ1FnQnlnQ0VFWUVmeUFISUFjb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUxRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQUNSUTBDQ3d3Q0N5QUNEUUFNQVFzZ0F5QURLQUlBUVFKeU5nSUFDeUFBS0FJQUlSRWdCaEJPSUFzUVRpQUpKQVFnRVF2NEJ3RU5meU1FSVFrakJFSHdBV29rQkNNRUl3Vk9CRUJCOEFFUUFBc0Nmd0pBQWtBQ1FBSkFJQUlvQWdSQnlnQnhEa0VDQXdNREF3TURBd0VEQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQUFNTFFRZ01Bd3RCRUF3Q0MwRUFEQUVMUVFvTElROGdDVUhVQVdvaUN5QUNJQWxCNEFGcUVNb0JJQWxCeUFGcUlnWkNBRGNDQUNBR1FRQTJBZ2dEUUNBS1FRTkhCRUFnQ2tFQ2RDQUdha0VBTmdJQUlBcEJBV29oQ2d3QkN3c2dCaUFHTEFBTFFRQklCSDhnQmlnQ0NFSC8vLy8vQjNGQmYyb0ZRUW9MRUZVZ0NVSEVBV29pRENBR0tBSUFJQVlnQml3QUMwRUFTQnNpQ2pZQ0FDQUpRY0FCYWlJTklBazJBZ0FnQ1VHOEFXb2lEa0VBTmdJQUlBQW9BZ0FpQWlFRkEwQUNRQ0FGQkg4Z0JTZ0NEQ0lISUFVb0FoQkdCSDhnQlNBRktBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0J5MEFBQXRCZjBZRWZ5QUFRUUEyQWdCQkFDRUZRUUFoQWtFQkJVRUFDd1ZCQUNFRlFRQWhBa0VCQ3lFSUFrQUNRQ0FCS0FJQUlnZEZEUUFnQnlnQ0RDSVFJQWNvQWhCR0JIOGdCeUFIS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnRUMwQUFBdEJmMFlFUUNBQlFRQTJBZ0FNQVFVZ0NFVU5Bd3NNQVFzZ0NBUi9RUUFoQnd3Q0JVRUFDeUVIQ3lBTUtBSUFJQW9nQmlnQ0JDQUdMQUFMSWdoQi93RnhJQWhCQUVnYklnaHFSZ1JBSUFZZ0NFRUJkQkJWSUFZZ0Jpd0FDMEVBU0FSL0lBWW9BZ2hCLy8vLy93ZHhRWDlxQlVFS0N4QlZJQXdnQmlnQ0FDQUdJQVlzQUF0QkFFZ2JJZ29nQ0dvMkFnQUxJQVVvQWd3aUNDQUZLQUlRUmdSL0lBVWdCU2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQWd0QUFBTFFmOEJjU0FQSUFvZ0RDQU9JQWtzQU9BQklBc2dDU0FOUWFBMkVMY0JEUUFnQlNnQ0RDSUhJQVVvQWhCR0JFQWdCU0FGS0FJQUtBSW9RZjhBY1VFRWFoRUlBQm9GSUFVZ0IwRUJhallDRENBSExRQUFHZ3NNQVFzTElBc29BZ1FnQ3l3QUN5SUlRZjhCY1NBSVFRQklHd1JBSUEwb0FnQWlDQ0FKYTBHZ0FVZ0VRQ0FPS0FJQUlRNGdEU0FJUVFScU5nSUFJQWdnRGpZQ0FBc0xJQVFnQ2lBTUtBSUFJQU1nRHhDQ0F6c0JBQ0FMSUFrZ0RTZ0NBQ0FERUc4Z0JRUi9JQVVvQWd3aUJDQUZLQUlRUmdSL0lBVWdBaWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVF0QUFBTFFYOUdCSDhnQUVFQU5nSUFRUUVGUVFBTEJVRUJDeUVDQWtBQ1FBSkFJQWRGRFFBZ0J5Z0NEQ0lFSUFjb0FoQkdCSDhnQnlBSEtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0JDMEFBQXRCZjBZRVFDQUJRUUEyQWdBTUFRVWdBa1VOQWdzTUFnc2dBZzBBREFFTElBTWdBeWdDQUVFQ2NqWUNBQXNnQUNnQ0FDRVJJQVlRVGlBTEVFNGdDU1FFSUJFTCtBY0JEWDhqQkNFSkl3UkI4QUZxSkFRakJDTUZUZ1JBUWZBQkVBQUxBbjhDUUFKQUFrQUNRQ0FDS0FJRVFjb0FjUTVCQWdNREF3TURBd01CQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdBREMwRUlEQU1MUVJBTUFndEJBQXdCQzBFS0N5RVBJQWxCMUFGcUlnc2dBaUFKUWVBQmFoREtBU0FKUWNnQmFpSUdRZ0EzQWdBZ0JrRUFOZ0lJQTBBZ0NrRURSd1JBSUFwQkFuUWdCbXBCQURZQ0FDQUtRUUZxSVFvTUFRc0xJQVlnQml3QUMwRUFTQVIvSUFZb0FnaEIvLy8vL3dkeFFYOXFCVUVLQ3hCVklBbEJ4QUZxSWd3Z0JpZ0NBQ0FHSUFZc0FBdEJBRWdiSWdvMkFnQWdDVUhBQVdvaURTQUpOZ0lBSUFsQnZBRnFJZzVCQURZQ0FDQUFLQUlBSWdJaEJRTkFBa0FnQlFSL0lBVW9BZ3dpQnlBRktBSVFSZ1IvSUFVZ0JTZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBY3RBQUFMUVg5R0JIOGdBRUVBTmdJQVFRQWhCVUVBSVFKQkFRVkJBQXNGUVFBaEJVRUFJUUpCQVFzaENBSkFBa0FnQVNnQ0FDSUhSUTBBSUFjb0Fnd2lFQ0FIS0FJUVJnUi9JQWNnQnlnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUJBdEFBQUxRWDlHQkVBZ0FVRUFOZ0lBREFFRklBaEZEUU1MREFFTElBZ0VmMEVBSVFjTUFnVkJBQXNoQndzZ0RDZ0NBQ0FLSUFZb0FnUWdCaXdBQ3lJSVFmOEJjU0FJUVFCSUd5SUlha1lFUUNBR0lBaEJBWFFRVlNBR0lBWXNBQXRCQUVnRWZ5QUdLQUlJUWYvLy8vOEhjVUYvYWdWQkNnc1FWU0FNSUFZb0FnQWdCaUFHTEFBTFFRQklHeUlLSUFocU5nSUFDeUFGS0FJTUlnZ2dCU2dDRUVZRWZ5QUZJQVVvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FJTFFBQUMwSC9BWEVnRHlBS0lBd2dEaUFKTEFEZ0FTQUxJQWtnRFVHZ05oQzNBUTBBSUFVb0Fnd2lCeUFGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBZEJBV28yQWd3Z0J5MEFBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDRUgvQVhFZ0NFRUFTQnNFUUNBTktBSUFJZ2dnQ1d0Qm9BRklCRUFnRGlnQ0FDRU9JQTBnQ0VFRWFqWUNBQ0FJSUE0MkFnQUxDeUFFSUFvZ0RDZ0NBQ0FESUE4UWd3TTJBZ0FnQ3lBSklBMG9BZ0FnQXhCdklBVUVmeUFGS0FJTUlnUWdCU2dDRUVZRWZ5QUZJQUlvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FFTFFBQUMwRi9SZ1IvSUFCQkFEWUNBRUVCQlVFQUN3VkJBUXNoQWdKQUFrQUNRQ0FIUlEwQUlBY29BZ3dpQkNBSEtBSVFSZ1IvSUFjZ0J5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUXRBQUFMUVg5R0JFQWdBVUVBTmdJQURBRUZJQUpGRFFJTERBSUxJQUlOQUF3QkN5QURJQU1vQWdCQkFuSTJBZ0FMSUFBb0FnQWhFU0FHRUU0Z0N4Qk9JQWtrQkNBUkMvZ0hBUTEvSXdRaENTTUVRZkFCYWlRRUl3UWpCVTRFUUVId0FSQUFDd0ovQWtBQ1FBSkFBa0FnQWlnQ0JFSEtBSEVPUVFJREF3TURBd01EQVFNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNQUF3dEJDQXdEQzBFUURBSUxRUUFNQVF0QkNnc2hEeUFKUWRRQmFpSUxJQUlnQ1VIZ0FXb1F5Z0VnQ1VISUFXb2lCa0lBTndJQUlBWkJBRFlDQ0FOQUlBcEJBMGNFUUNBS1FRSjBJQVpxUVFBMkFnQWdDa0VCYWlFS0RBRUxDeUFHSUFZc0FBdEJBRWdFZnlBR0tBSUlRZi8vLy84SGNVRi9hZ1ZCQ2dzUVZTQUpRY1FCYWlJTUlBWW9BZ0FnQmlBR0xBQUxRUUJJR3lJS05nSUFJQWxCd0FGcUlnMGdDVFlDQUNBSlFid0JhaUlPUVFBMkFnQWdBQ2dDQUNJQ0lRVURRQUpBSUFVRWZ5QUZLQUlNSWdjZ0JTZ0NFRVlFZnlBRklBVW9BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUhMUUFBQzBGL1JnUi9JQUJCQURZQ0FFRUFJUVZCQUNFQ1FRRUZRUUFMQlVFQUlRVkJBQ0VDUVFFTElRZ0NRQUpBSUFFb0FnQWlCMFVOQUNBSEtBSU1JaEFnQnlnQ0VFWUVmeUFISUFjb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBUUxRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQUlSUTBEQ3d3QkN5QUlCSDlCQUNFSERBSUZRUUFMSVFjTElBd29BZ0FnQ2lBR0tBSUVJQVlzQUFzaUNFSC9BWEVnQ0VFQVNCc2lDR3BHQkVBZ0JpQUlRUUYwRUZVZ0JpQUdMQUFMUVFCSUJIOGdCaWdDQ0VILy8vLy9CM0ZCZjJvRlFRb0xFRlVnRENBR0tBSUFJQVlnQml3QUMwRUFTQnNpQ2lBSWFqWUNBQXNnQlNnQ0RDSUlJQVVvQWhCR0JIOGdCU0FGS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQ0MwQUFBdEIvd0Z4SUE4Z0NpQU1JQTRnQ1N3QTRBRWdDeUFKSUExQm9EWVF0d0VOQUNBRktBSU1JZ2NnQlNnQ0VFWUVRQ0FGSUFVb0FnQW9BaWhCL3dCeFFRUnFFUWdBR2dVZ0JTQUhRUUZxTmdJTUlBY3RBQUFhQ3d3QkN3c2dDeWdDQkNBTExBQUxJZ2hCL3dGeElBaEJBRWdiQkVBZ0RTZ0NBQ0lJSUFsclFhQUJTQVJBSUE0b0FnQWhEaUFOSUFoQkJHbzJBZ0FnQ0NBT05nSUFDd3NnQkNBS0lBd29BZ0FnQXlBUEVJUUROd01BSUFzZ0NTQU5LQUlBSUFNUWJ5QUZCSDhnQlNnQ0RDSUVJQVVvQWhCR0JIOGdCU0FDS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQkMwQUFBdEJmMFlFZnlBQVFRQTJBZ0JCQVFWQkFBc0ZRUUVMSVFJQ1FBSkFBa0FnQjBVTkFDQUhLQUlNSWdRZ0J5Z0NFRVlFZnlBSElBY29BZ0FvQWlSQi93QnhRUVJxRVFnQUJTQUVMUUFBQzBGL1JnUkFJQUZCQURZQ0FBd0JCU0FDUlEwQ0N3d0NDeUFDRFFBTUFRc2dBeUFES0FJQVFRSnlOZ0lBQ3lBQUtBSUFJUkVnQmhCT0lBc1FUaUFKSkFRZ0VRdkRCd0VQZnlNRUlRY2pCRUh3QVdva0JDTUVJd1ZPQkVCQjhBRVFBQXNnQjBIWUFXb2lDeUFDSUFkQm9BRnFJaEFnQjBIbkFXb2dCMEhtQVdvUWxRSWdCMEhNQVdvaUJrSUFOd0lBSUFaQkFEWUNDQU5BSUFwQkEwY0VRQ0FLUVFKMElBWnFRUUEyQWdBZ0NrRUJhaUVLREFFTEN5QUdJQVlzQUF0QkFFZ0VmeUFHS0FJSVFmLy8vLzhIY1VGL2FnVkJDZ3NRVlNBSFFjZ0JhaUlOSUFZb0FnQWdCaUFHTEFBTFFRQklHeUlLTmdJQUlBZEJ4QUZxSWc0Z0J6WUNBQ0FIUWNBQmFpSVBRUUEyQWdBZ0IwSGxBV29pREVFQk9nQUFJQWRCNUFGcUloRkJ4UUE2QUFBZ0FDZ0NBQ0lDSVFVRFFBSkFJQVVFZnlBRktBSU1JZ2dnQlNnQ0VFWUVmeUFGSUFVb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBSUxRQUFDMEYvUmdSL0lBQkJBRFlDQUVFQUlRVkJBQ0VDUVFFRlFRQUxCVUVBSVFWQkFDRUNRUUVMSVFrQ1FBSkFJQUVvQWdBaUNFVU5BQ0FJS0FJTUloSWdDQ2dDRUVZRWZ5QUlJQWdvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FTTFFBQUMwRi9SZ1JBSUFGQkFEWUNBQXdCQlNBSlJRMERDd3dCQ3lBSkJIOUJBQ0VJREFJRlFRQUxJUWdMSUEwb0FnQWdDaUFHS0FJRUlBWXNBQXNpQ1VIL0FYRWdDVUVBU0JzaUNXcEdCRUFnQmlBSlFRRjBFRlVnQmlBR0xBQUxRUUJJQkg4Z0JpZ0NDRUgvLy8vL0IzRkJmMm9GUVFvTEVGVWdEU0FHS0FJQUlBWWdCaXdBQzBFQVNCc2lDaUFKYWpZQ0FBc2dCU2dDRENJSklBVW9BaEJHQkg4Z0JTQUZLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDUzBBQUF0Qi93RnhJQXdnRVNBS0lBMGdCeXdBNXdFZ0J5d0E1Z0VnQ3lBSElBNGdEeUFRRUpRQ0RRQWdCU2dDRENJSUlBVW9BaEJHQkVBZ0JTQUZLQUlBS0FJb1FmOEFjVUVFYWhFSUFCb0ZJQVVnQ0VFQmFqWUNEQ0FJTFFBQUdnc01BUXNMSUFzb0FnUWdDeXdBQ3lJSlFmOEJjU0FKUVFCSUcwVWdEQ3dBQUVWeVJRUkFJQTRvQWdBaURDQUhhMEdnQVVnRVFDQVBLQUlBSVE4Z0RpQU1RUVJxTmdJQUlBd2dEellDQUFzTElBUWdDaUFOS0FJQUlBTVFoUU00QWdBZ0N5QUhJQTRvQWdBZ0F4QnZJQVVFZnlBRktBSU1JZ1FnQlNnQ0VFWUVmeUFGSUFJb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUxRQUFDMEYvUmdSL0lBQkJBRFlDQUVFQkJVRUFDd1ZCQVFzaEFnSkFBa0FDUUNBSVJRMEFJQWdvQWd3aUJDQUlLQUlRUmdSL0lBZ2dDQ2dDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQVF0QUFBTFFYOUdCRUFnQVVFQU5nSUFEQUVGSUFKRkRRSUxEQUlMSUFJTkFBd0JDeUFESUFNb0FnQkJBbkkyQWdBTElBQW9BZ0FoRXlBR0VFNGdDeEJPSUFja0JDQVRDOE1IQVE5L0l3UWhCeU1FUWZBQmFpUUVJd1FqQlU0RVFFSHdBUkFBQ3lBSFFkZ0JhaUlMSUFJZ0IwR2dBV29pRUNBSFFlY0JhaUFIUWVZQmFoQ1ZBaUFIUWN3QmFpSUdRZ0EzQWdBZ0JrRUFOZ0lJQTBBZ0NrRURSd1JBSUFwQkFuUWdCbXBCQURZQ0FDQUtRUUZxSVFvTUFRc0xJQVlnQml3QUMwRUFTQVIvSUFZb0FnaEIvLy8vL3dkeFFYOXFCVUVLQ3hCVklBZEJ5QUZxSWcwZ0JpZ0NBQ0FHSUFZc0FBdEJBRWdiSWdvMkFnQWdCMEhFQVdvaURpQUhOZ0lBSUFkQndBRnFJZzlCQURZQ0FDQUhRZVVCYWlJTVFRRTZBQUFnQjBIa0FXb2lFVUhGQURvQUFDQUFLQUlBSWdJaEJRTkFBa0FnQlFSL0lBVW9BZ3dpQ0NBRktBSVFSZ1IvSUFVZ0JTZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBZ3RBQUFMUVg5R0JIOGdBRUVBTmdJQVFRQWhCVUVBSVFKQkFRVkJBQXNGUVFBaEJVRUFJUUpCQVFzaENRSkFBa0FnQVNnQ0FDSUlSUTBBSUFnb0Fnd2lFaUFJS0FJUVJnUi9JQWdnQ0NnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUJJdEFBQUxRWDlHQkVBZ0FVRUFOZ0lBREFFRklBbEZEUU1MREFFTElBa0VmMEVBSVFnTUFnVkJBQXNoQ0FzZ0RTZ0NBQ0FLSUFZb0FnUWdCaXdBQ3lJSlFmOEJjU0FKUVFCSUd5SUpha1lFUUNBR0lBbEJBWFFRVlNBR0lBWXNBQXRCQUVnRWZ5QUdLQUlJUWYvLy8vOEhjVUYvYWdWQkNnc1FWU0FOSUFZb0FnQWdCaUFHTEFBTFFRQklHeUlLSUFscU5nSUFDeUFGS0FJTUlna2dCU2dDRUVZRWZ5QUZJQVVvQWdBb0FpUkIvd0J4UVFScUVRZ0FCU0FKTFFBQUMwSC9BWEVnRENBUklBb2dEU0FITEFEbkFTQUhMQURtQVNBTElBY2dEaUFQSUJBUWxBSU5BQ0FGS0FJTUlnZ2dCU2dDRUVZRVFDQUZJQVVvQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQlNBSVFRRnFOZ0lNSUFndEFBQWFDd3dCQ3dzZ0N5Z0NCQ0FMTEFBTElnbEIvd0Z4SUFsQkFFZ2JSU0FNTEFBQVJYSkZCRUFnRGlnQ0FDSU1JQWRyUWFBQlNBUkFJQThvQWdBaER5QU9JQXhCQkdvMkFnQWdEQ0FQTmdJQUN3c2dCQ0FLSUEwb0FnQWdBeENHQXprREFDQUxJQWNnRGlnQ0FDQURFRzhnQlFSL0lBVW9BZ3dpQkNBRktBSVFSZ1IvSUFVZ0FpZ0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklBUXRBQUFMUVg5R0JIOGdBRUVBTmdJQVFRRUZRUUFMQlVFQkN5RUNBa0FDUUFKQUlBaEZEUUFnQ0NnQ0RDSUVJQWdvQWhCR0JIOGdDQ0FJS0FJQUtBSWtRZjhBY1VFRWFoRUlBQVVnQkMwQUFBdEJmMFlFUUNBQlFRQTJBZ0FNQVFVZ0FrVU5BZ3NNQWdzZ0FnMEFEQUVMSUFNZ0F5Z0NBRUVDY2pZQ0FBc2dBQ2dDQUNFVElBWVFUaUFMRUU0Z0J5UUVJQk1Md3djQkQzOGpCQ0VISXdSQjhBRnFKQVFqQkNNRlRnUkFRZkFCRUFBTElBZEIyQUZxSWdzZ0FpQUhRYUFCYWlJUUlBZEI1d0ZxSUFkQjVnRnFFSlVDSUFkQnpBRnFJZ1pDQURjQ0FDQUdRUUEyQWdnRFFDQUtRUU5IQkVBZ0NrRUNkQ0FHYWtFQU5nSUFJQXBCQVdvaENnd0JDd3NnQmlBR0xBQUxRUUJJQkg4Z0JpZ0NDRUgvLy8vL0IzRkJmMm9GUVFvTEVGVWdCMEhJQVdvaURTQUdLQUlBSUFZZ0Jpd0FDMEVBU0JzaUNqWUNBQ0FIUWNRQmFpSU9JQWMyQWdBZ0IwSEFBV29pRDBFQU5nSUFJQWRCNVFGcUlneEJBVG9BQUNBSFFlUUJhaUlSUWNVQU9nQUFJQUFvQWdBaUFpRUZBMEFDUUNBRkJIOGdCU2dDRENJSUlBVW9BaEJHQkg4Z0JTQUZLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdDQzBBQUF0QmYwWUVmeUFBUVFBMkFnQkJBQ0VGUVFBaEFrRUJCVUVBQ3dWQkFDRUZRUUFoQWtFQkN5RUpBa0FDUUNBQktBSUFJZ2hGRFFBZ0NDZ0NEQ0lTSUFnb0FoQkdCSDhnQ0NBSUtBSUFLQUlrUWY4QWNVRUVhaEVJQUFVZ0VpMEFBQXRCZjBZRVFDQUJRUUEyQWdBTUFRVWdDVVVOQXdzTUFRc2dDUVIvUVFBaENBd0NCVUVBQ3lFSUN5QU5LQUlBSUFvZ0JpZ0NCQ0FHTEFBTElnbEIvd0Z4SUFsQkFFZ2JJZ2xxUmdSQUlBWWdDVUVCZEJCVklBWWdCaXdBQzBFQVNBUi9JQVlvQWdoQi8vLy8vd2R4UVg5cUJVRUtDeEJWSUEwZ0JpZ0NBQ0FHSUFZc0FBdEJBRWdiSWdvZ0NXbzJBZ0FMSUFVb0Fnd2lDU0FGS0FJUVJnUi9JQVVnQlNnQ0FDZ0NKRUgvQUhGQkJHb1JDQUFGSUFrdEFBQUxRZjhCY1NBTUlCRWdDaUFOSUFjc0FPY0JJQWNzQU9ZQklBc2dCeUFPSUE4Z0VCQ1VBZzBBSUFVb0Fnd2lDQ0FGS0FJUVJnUkFJQVVnQlNnQ0FDZ0NLRUgvQUhGQkJHb1JDQUFhQlNBRklBaEJBV28yQWd3Z0NDMEFBQm9MREFFTEN5QUxLQUlFSUFzc0FBc2lDVUgvQVhFZ0NVRUFTQnRGSUF3c0FBQkZja1VFUUNBT0tBSUFJZ3dnQjJ0Qm9BRklCRUFnRHlnQ0FDRVBJQTRnREVFRWFqWUNBQ0FNSUE4MkFnQUxDeUFFSUFvZ0RTZ0NBQ0FERUljRE9RTUFJQXNnQnlBT0tBSUFJQU1RYnlBRkJIOGdCU2dDRENJRUlBVW9BaEJHQkg4Z0JTQUNLQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdCQzBBQUF0QmYwWUVmeUFBUVFBMkFnQkJBUVZCQUFzRlFRRUxJUUlDUUFKQUFrQWdDRVVOQUNBSUtBSU1JZ1FnQ0NnQ0VFWUVmeUFJSUFnb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRUxRQUFDMEYvUmdSQUlBRkJBRFlDQUF3QkJTQUNSUTBDQ3d3Q0N5QUNEUUFNQVFzZ0F5QURLQUlBUVFKeU5nSUFDeUFBS0FJQUlSTWdCaEJPSUFzUVRpQUhKQVFnRXd1b0F3RUdmeU1FSVFRakJFSGdDR29rQkNNRUl3Vk9CRUJCNEFnUUFBc2dCRUhZQjJvaUJoRExBU0FFSUFaQmtPTUFLQUlBUVpUakFDZ0NBSElROVFOQmZ5QUFRUUowSUFCQi8vLy8vd05MR3hCZklRY2dBRUVBU2lJSUJFQURRQ0FGUVFKMElBZHFJQVlRdUFFMkFnQWdCVUVCYWlJRklBQklEUUFMQ3lBQlFRQktCRUJCQUNFRkEwQWdCaUFGUVFKMElBSnFLQUlBUVFKMElBZHFLQUlBSUFWQkFuUWdBMm9vQWdCQkFuUWdCMm9vQWdBUXh3RWFJQVZCQVdvaUJTQUJTQTBBQ3d0QjhBTVFTaUlCUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJQ1FRQTJBZ0FnQWtGL05nSUVJQUpCcURoQkFCQUJDeUFCRUk4SUlBRWdCQ0FCS0FJQUtBSUlRZjhCY1VHT0Iyb1JBQUFnQUVFRGRCQktJUUlnQ0VVRVFDQUVFTFVCSUFZUXBRRWdCQ1FFSUFJUEN5QUVLQUljSVFNZ0JDZ0NSQ0VGUVFBaEFRTkFJQUZCQVhRaUNFRUNkQ0FDYWlBQlFRSjBJQWRxS0FJQUtBSVFJZ2xCQTNRZ0Eyb3JBd0MyT0FJQUlBaEJBWEpCQW5RZ0Ftb2dDVUVEZENBRmFpc0RBTFk0QWdBZ0FVRUJhaUlCSUFCSERRQUxJQVFRdFFFZ0JoQ2xBU0FFSkFRZ0FndEJBUUovSUFBb0FnUWhBU0FBS0FJQUlBQW9BZ2dpQWtFQmRXb2hBQ0FDUVFGeEJFQWdBU0FBS0FJQWFpZ0NBQ0VCQ3lBQUlBRkIvd054UVlRRGFoRUJBQXNOQUNBQUtBSUFLQUlBRUtVR0N5RUJBWDlCdFBzQ1FiVDdBaWdDQUNJQlFRRnFOZ0lBSUFBZ0FVRUJhallDQkF2bEJ3RU9meU1FSVFnakJFSHdBV29rQkNNRUl3Vk9CRUJCOEFFUUFBc2dDRUdnQVdvaERTQUlRZEFCYWlFR0lBaEIzQUZxSWd0Q0FEY0NBQ0FMUVFBMkFnaEJBQ0VBQTBBZ0FFRURSd1JBSUFCQkFuUWdDMnBCQURZQ0FDQUFRUUZxSVFBTUFRc0xJQVlnQXlnQ0hDSUFOZ0lBSUFBZ0FDZ0NCRUVCYWpZQ0JDQUdRYWo3QWhCVElnQW9BZ0FvQWlBaEF5QUFRYUEyUWJvMklBMGdBMEVIY1VIcUFXb1JEd0FhSUFZUVZDQUdRZ0EzQWdBZ0JrRUFOZ0lJUVFBaEFBTkFJQUJCQTBjRVFDQUFRUUowSUFacVFRQTJBZ0FnQUVFQmFpRUFEQUVMQ3lBSVFjQUJhaUVPSUFZZ0Jpd0FDMEVBU0FSL0lBWW9BZ2hCLy8vLy93ZHhRWDlxQlVFS0N4QlZJQWhCekFGcUlnb2dCaWdDQUNBR0lBWXNBQXRCQUVnYklnQTJBZ0FnQ0VISUFXb2lEeUFJTmdJQUlBaEJ4QUZxSWhCQkFEWUNBQ0FCS0FJQUlnTWhEQU5BQWtBZ0F3Ui9JQU1vQWd3aUJ5QURLQUlRUmdSL0lBTWdBeWdDQUNnQ0pFSC9BSEZCQkdvUkNBQUZJQWN0QUFBTFFYOUdCSDhnQVVFQU5nSUFRUUFoQTBFQUlReEJBUVZCQUFzRlFRQWhBMEVBSVF4QkFRc2hDUUpBQWtBZ0FpZ0NBQ0lIUlEwQUlBY29BZ3dpRVNBSEtBSVFSZ1IvSUFjZ0J5Z0NBQ2dDSkVIL0FIRkJCR29SQ0FBRklCRXRBQUFMUVg5R0JFQWdBa0VBTmdJQURBRUZJQWxGRFFNTERBRUxJQWtFZjBFQUlRY01BZ1ZCQUFzaEJ3c2dDaWdDQUNBQUlBWW9BZ1FnQml3QUN5SUpRZjhCY1NBSlFRQklHeUlKYWtZRVFDQUdJQWxCQVhRUVZTQUdJQVlzQUF0QkFFZ0VmeUFHS0FJSVFmLy8vLzhIY1VGL2FnVkJDZ3NRVlNBS0lBWW9BZ0FnQmlBR0xBQUxRUUJJR3lJQUlBbHFOZ0lBQ3lBREtBSU1JZ2tnQXlnQ0VFWUVmeUFESUFNb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBSkxRQUFDMEgvQVhGQkVDQUFJQW9nRUVFQUlBc2dDQ0FQSUEwUXR3RU5BQ0FES0FJTUlnY2dBeWdDRUVZRVFDQURJQU1vQWdBb0FpaEIvd0J4UVFScUVRZ0FHZ1VnQXlBSFFRRnFOZ0lNSUFjdEFBQWFDd3dCQ3dzZ0JpQUtLQUlBSUFCckVGVWdCaWdDQUNBR0lBWXNBQXRCQUVnYkFuOFFYaUVTSUE0Z0JUWUNBQ0FTQ3lBT0VJZ0RRUUZIQkVBZ0JFRUVOZ0lBQ3lBREJIOGdBeWdDRENJQUlBTW9BaEJHQkg4Z0F5QU1LQUlBS0FJa1FmOEFjVUVFYWhFSUFBVWdBQzBBQUF0QmYwWUVmeUFCUVFBMkFnQkJBUVZCQUFzRlFRRUxJUUFDUUFKQUFrQWdCMFVOQUNBSEtBSU1JZ01nQnlnQ0VFWUVmeUFISUFjb0FnQW9BaVJCL3dCeFFRUnFFUWdBQlNBRExRQUFDMEYvUmdSQUlBSkJBRFlDQUF3QkJTQUFSUTBDQ3d3Q0N5QUFEUUFNQVFzZ0JDQUVLQUlBUVFKeU5nSUFDeUFCS0FJQUlSTWdCaEJPSUFzUVRpQUlKQVFnRXdzcUFDQUFFTFFDSUFBb0FoQVFReUFBUlFSQUR3c2dBRUd3dEFJb0FnQTJBZ0JCc0xRQ0lBQTJBZ0FMWWdFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFZZ0FTZ0NBRFlDQkNBR0lBSW9BZ0EyQWdBZ0JrRUlhaUlCSUFZb0FnUTJBZ0FnQmtFTWFpSUNJQVlvQWdBMkFnQWdBU0FDSUFNZ0JDQUZFS01HSVFjZ0JpUUVJQWNMWWdFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFZZ0FTZ0NBRFlDQkNBR0lBSW9BZ0EyQWdBZ0JrRUlhaUlCSUFZb0FnUTJBZ0FnQmtFTWFpSUNJQVlvQWdBMkFnQWdBU0FDSUFNZ0JDQUZFS0lHSVFjZ0JpUUVJQWNMWWdFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFZZ0FTZ0NBRFlDQkNBR0lBSW9BZ0EyQWdBZ0JrRUlhaUlCSUFZb0FnUTJBZ0FnQmtFTWFpSUNJQVlvQWdBMkFnQWdBU0FDSUFNZ0JDQUZFS0VHSVFjZ0JpUUVJQWNMWWdFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFZZ0FTZ0NBRFlDQkNBR0lBSW9BZ0EyQWdBZ0JrRUlhaUlCSUFZb0FnUTJBZ0FnQmtFTWFpSUNJQVlvQWdBMkFnQWdBU0FDSUFNZ0JDQUZFS0FHSVFjZ0JpUUVJQWNMWWdFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFZZ0FTZ0NBRFlDQkNBR0lBSW9BZ0EyQWdBZ0JrRUlhaUlCSUFZb0FnUTJBZ0FnQmtFTWFpSUNJQVlvQWdBMkFnQWdBU0FDSUFNZ0JDQUZFSjRHSVFjZ0JpUUVJQWNMWWdFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFZZ0FTZ0NBRFlDQkNBR0lBSW9BZ0EyQWdBZ0JrRUlhaUlCSUFZb0FnUTJBZ0FnQmtFTWFpSUNJQVlvQWdBMkFnQWdBU0FDSUFNZ0JDQUZFSjBHSVFjZ0JpUUVJQWNMWWdFQ2Z5TUVJUVlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFZZ0FTZ0NBRFlDQkNBR0lBSW9BZ0EyQWdBZ0JrRUlhaUlCSUFZb0FnUTJBZ0FnQmtFTWFpSUNJQVlvQWdBMkFnQWdBU0FDSUFNZ0JDQUZFSndHSVFjZ0JpUUVJQWNMbVFNQkJIOGpCQ0VHSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBR1FTaHFJUWNnQmtFZ2FpRUlJQU1vQWdSQkFYRUVRQ0FISUFNb0Fod2lBRFlDQUNBQUlBQW9BZ1JCQVdvMkFnUWdCMEdvK3dJUVV5RUlJQWNRVkNBSElBTW9BaHdpQURZQ0FDQUFJQUFvQWdSQkFXbzJBZ1FnQjBHNCt3SVFVeUVBSUFjUVZDQUdJQUFnQUNnQ0FDZ0NHRUgvQVhGQmpnZHFFUUFBSUFaQkRHb2dBQ0FBS0FJQUtBSWNRZjhCY1VHT0Iyb1JBQUFnQmlBQ0tBSUFOZ0lZSUFjZ0JpZ0NHRFlDQUNBRklBRWdCeUFHSUFaQkdHb2lBQ0FJSUFSQkFSRHBBU0FHUmpvQUFDQUJLQUlBSVFFRFFDQUFRWFJxSWdBUVRpQUFJQVpIRFFBTEJTQUlRWDgyQWdBZ0FDZ0NBQ2dDRUNFSklBWWdBU2dDQURZQ0pDQUdJQUlvQWdBMkFod2dCaUFHS0FJa05nSUFJQWNnQmlnQ0hEWUNBQ0FCSUFBZ0JpQUhJQU1nQkNBSUlBbEJQM0ZCbmdKcUVRNEFOZ0lBQWtBQ1FBSkFBa0FnQ0NnQ0FBNENBQUVDQ3lBRlFRQTZBQUFNQWdzZ0JVRUJPZ0FBREFFTElBVkJBVG9BQUNBRVFRUTJBZ0FMSUFFb0FnQWhBUXNnQmlRRUlBRUxEZ0FnQUJDMEFpQUFLQUlRRUVNTFFRRUJmMEVBSVFBRFFDQUJJQUpIQkVBZ0FTZ0NBQ0FBUVFSMGFpSURRWUNBZ0lCL2NTRUFJQU1nQUNBQVFSaDJjbk1oQUNBQlFRUnFJUUVNQVFzTElBQUxHUUFnQUVJQU53SUFJQUJCQURZQ0NDQUFJQUlnQXhDS0F3dFhBUUYvQW44Q1FBTi9BbjhnQXlBRVJnMENRWDhnQVNBQ1JnMEFHa0YvSUFFb0FnQWlBQ0FES0FJQUlnVklEUUFhSUFVZ0FFZ0VmMEVCQlNBQlFRUnFJUUVnQTBFRWFpRUREQUlMQ3dzTUFRc2dBU0FDUndzTFFRRUJmMEVBSVFBRFFDQUJJQUpIQkVBZ0FTd0FBQ0FBUVFSMGFpSURRWUNBZ0lCL2NTRUFJQU1nQUNBQVFSaDJjbk1oQUNBQlFRRnFJUUVNQVFzTElBQUxHUUFnQUVJQU53SUFJQUJCQURZQ0NDQUFJQUlnQXhDTEF3dFhBUUYvQW44Q1FBTi9BbjhnQXlBRVJnMENRWDhnQVNBQ1JnMEFHa0YvSUFFc0FBQWlBQ0FETEFBQUlnVklEUUFhSUFVZ0FFZ0VmMEVCQlNBQlFRRnFJUUVnQTBFQmFpRUREQUlMQ3dzTUFRc2dBU0FDUndzTElnRUJmeUFBQkVBZ0FDZ0NBQ2dDQkNFQklBQWdBVUgvQTNGQmhBTnFFUUVBQ3d1ekFnRUhmeU1FSVFVakJFRWdhaVFFSXdRakJVNEVRRUVnRUFBTElBVkJFR29oQWlBRlFRUnFJUU1nQlVFSWFpRUVJQUFzQURSQkFFY2hCaUFCUVg5R0JFQWdCa1VFUUNBQUlBQW9BakFpQVVGL1JrRUJjem9BTkFzRkFrQWdCZ1IvSUFRZ0FFRXdhaUlHS0FJQU9nQUFJQUFvQWlRaUJ5Z0NBQ2dDRENFSUFuOENRQUpBQWtBZ0J5QUFLQUlvSUFRZ0JFRUJhaUFGSUFJZ0FrRUlhaUFESUFoQkQzRkI1Z0pxRVEwQVFRRnJEZ01DQWdBQkN5QUNJQVlvQWdBNkFBQWdBeUFDUVFGcU5nSUFDd05BSUFNb0FnQWlCQ0FDVFFSQVFRRWhBMEVBREFNTElBTWdCRUYvYWlJRU5nSUFJQVFzQUFBZ0FDZ0NJQkR3QVVGL1J3MEFDd3RCQUNFRFFYOExJUUlnQXdSL0lBWUZJQUloQVF3Q0N3VWdBRUV3YWdzZ0FUWUNBQ0FBUVFFNkFEUUxDeUFGSkFRZ0FRc0pBQ0FBUVFFUWpBTUxDUUFnQUVFQUVJd0RDMTRCQVg4Z0FDQUJRZGo5QWhCVElnRTJBaVFnQUNBQklBRW9BZ0FvQWhoQi93QnhRUVJxRVFnQU5nSXNJQUFvQWlRaUFTZ0NBQ2dDSENFQ0lBQWdBU0FDUWY4QWNVRUVhaEVJQUVFQmNUb0FOU0FBS0FJc1FRaEtCRUFRQXdzTHN3SUJCMzhqQkNFRkl3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUZRUkJxSVFJZ0JVRUlhaUVESUFWQkJHb2hCQ0FBTEFBMFFRQkhJUVlnQVVGL1JnUkFJQVpGQkVBZ0FDQUFLQUl3SWdGQmYwWkJBWE02QURRTEJRSkFJQVlFZnlBRUlBQkJNR29pQmlnQ0FEWUNBQ0FBS0FJa0lnY29BZ0FvQWd3aENBSi9Ba0FDUUFKQUlBY2dBQ2dDS0NBRUlBUkJCR29nQlNBQ0lBSkJDR29nQXlBSVFROXhRZVlDYWhFTkFFRUJhdzREQWdJQUFRc2dBaUFHS0FJQU9nQUFJQU1nQWtFQmFqWUNBQXNEUUNBREtBSUFJZ1FnQWswRVFFRUJJUU5CQUF3REN5QURJQVJCZjJvaUJEWUNBQ0FFTEFBQUlBQW9BaUFROEFGQmYwY05BQXNMUVFBaEEwRi9DeUVDSUFNRWZ5QUdCU0FDSVFFTUFnc0ZJQUJCTUdvTElBRTJBZ0FnQUVFQk9nQTBDd3NnQlNRRUlBRUxDUUFnQUVFQkVJNERDd2tBSUFCQkFCQ09Bd3RlQVFGL0lBQWdBVUhnL1FJUVV5SUJOZ0lrSUFBZ0FTQUJLQUlBS0FJWVFmOEFjVUVFYWhFSUFEWUNMQ0FBS0FJa0lnRW9BZ0FvQWh3aEFpQUFJQUVnQWtIL0FIRkJCR29SQ0FCQkFYRTZBRFVnQUNnQ0xFRUlTZ1JBRUFNTEM2SUNBUWwvSXdRaEF5TUVRU0JxSkFRakJDTUZUZ1JBUVNBUUFBc2dBMEVRYWlFRUlBTkJDR29oQWlBRFFRUnFJUVlDZndKQUlBRkJmMFlOQUFKL0lBSWdBVG9BQUNBQUxBQXNCRUFnQWtFQlFRRWdBQ2dDSUJDZEFVRUJSZzBDUVg4TUFRc2dCaUFFTmdJQUlBSkJBV29oQnlBRVFRaHFJUWdDUUFOQUFrQWdBQ2dDSkNJRktBSUFLQUlNSVFrZ0JTQUFLQUlvSUFJZ0J5QURJQVFnQ0NBR0lBbEJEM0ZCNWdKcUVRMEFJUVVnQXlnQ0FDQUNSZzBDSUFWQkEwWU5BQ0FGUVFKUERRSWdCRUVCSUFZb0FnQWdCR3NpQWlBQUtBSWdFSjBCSUFKSERRSWdBeWdDQUNFQ0lBVkJBVVlOQVF3RUN3c2dBa0VCUVFFZ0FDZ0NJQkNkQVVFQlJ3MEFEQUlMUVg4TERBRUxRUUFnQVNBQlFYOUdHd3NoQ2lBREpBUWdDZ3RaQVFGL0lBQXNBQ3dFUUNBQlFRRWdBaUFBS0FJZ0VKMEJJUU1GQTBBZ0F5QUNTQVJBSUFBZ0FTMEFBQ0FBS0FJQUtBSTBRVDl4UVlvQmFoRURBRUYvUndSQUlBTkJBV29oQXlBQlFRRnFJUUVNQWdzTEN3c2dBd3RjQVFGL0lBQkI2T0VBTmdJQUlBQW9BZ1FpQVVVRVFDQUFRZUN6QWlnQ0FEWUNBRUhnc3dJZ0FEWUNBQThMUVF3Z0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQ0FBUWVDekFpZ0NBRFlDQUVIZ3N3SWdBRFlDQUF0TUFRRi9JQUFvQWdBb0FoZ2hBaUFBSUFKQi93QnhRUVJxRVFnQUdpQUFJQUZCMlAwQ0VGTWlBVFlDSkNBQktBSUFLQUljSVFJZ0FDQUJJQUpCL3dCeFFRUnFFUWdBUVFGeE9nQXNDNklDQVFsL0l3UWhBeU1FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNnQTBFUWFpRUVJQU5CQ0dvaEFpQURRUVJxSVFZQ2Z3SkFJQUZCZjBZTkFBSi9JQUlnQVRZQ0FDQUFMQUFzQkVBZ0FrRUVRUUVnQUNnQ0lCQ2RBVUVCUmcwQ1FYOE1BUXNnQmlBRU5nSUFJQUpCQkdvaEJ5QUVRUWhxSVFnQ1FBTkFBa0FnQUNnQ0pDSUZLQUlBS0FJTUlRa2dCU0FBS0FJb0lBSWdCeUFESUFRZ0NDQUdJQWxCRDNGQjVnSnFFUTBBSVFVZ0F5Z0NBQ0FDUmcwQ0lBVkJBMFlOQUNBRlFRSlBEUUlnQkVFQklBWW9BZ0FnQkdzaUFpQUFLQUlnRUowQklBSkhEUUlnQXlnQ0FDRUNJQVZCQVVZTkFRd0VDd3NnQWtFQlFRRWdBQ2dDSUJDZEFVRUJSdzBBREFJTFFYOExEQUVMUVFBZ0FTQUJRWDlHR3dzaENpQURKQVFnQ2d0WkFRRi9JQUFzQUN3RVFDQUJRUVFnQWlBQUtBSWdFSjBCSVFNRkEwQWdBeUFDU0FSQUlBQWdBU2dDQUNBQUtBSUFLQUkwUVQ5eFFZb0JhaEVEQUVGL1J3UkFJQU5CQVdvaEF5QUJRUVJxSVFFTUFnc0xDd3NnQXd0TUFRRi9JQUFvQWdBb0FoZ2hBaUFBSUFKQi93QnhRUVJxRVFnQUdpQUFJQUZCNFAwQ0VGTWlBVFlDSkNBQktBSUFLQUljSVFJZ0FDQUJJQUpCL3dCeFFRUnFFUWdBUVFGeE9nQXNDNVVCQVFKL0l3UWhBU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXRCK1BnQ0VKSURRZmo0QWtITTlBQTJBZ0JCbVBrQ0lBQTJBZ0JCb1BrQ1FiRDVBallDQUVHbytRSkJmellDQUVHcytRSkJBRG9BQUVINCtBSW9BZ0FvQWdnaEFpQUJRZno0QWlnQ0FDSUFOZ0lBSUFBZ0FDZ0NCRUVCYWpZQ0JFSDQrQUlnQVNBQ1FmOEJjVUdPQjJvUkFBQWdBUkJVSUFFa0JBdVZBUUVDZnlNRUlRRWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxRYmo0QWhDVEEwRzQrQUpCalBVQU5nSUFRZGo0QWlBQU5nSUFRZUQ0QWtIdytBSTJBZ0JCNlBnQ1FYODJBZ0JCN1BnQ1FRQTZBQUJCdVBnQ0tBSUFLQUlJSVFJZ0FVRzgrQUlvQWdBaUFEWUNBQ0FBSUFBb0FnUkJBV28yQWdSQnVQZ0NJQUVnQWtIL0FYRkJqZ2RxRVFBQUlBRVFWQ0FCSkFRTHhRVUJBMzlCek80QUtBSUFJZ0FReWdaQmtQTUNRWkR5QURZQ0FFR1k4d0pCcFBJQU5nSUFRWlR6QWtFQU5nSUFRWmp6QWtHNCtBSVFtZ0ZCNFBNQ1FRQTJBZ0JCNVBNQ1FYODJBZ0FnQUJESkJrSG84d0pCd1BJQU5nSUFRZkR6QWtIVThnQTJBZ0JCN1BNQ1FRQTJBZ0JCOFBNQ1FmajRBaENhQVVHNDlBSkJBRFlDQUVHODlBSkJmellDQUVHNCtRSkIwTzRBS0FJQUlnQkI2UGtDRUpFRFFjRDBBa0h3OGdBMkFnQkJ4UFFDUVlUekFEWUNBRUhFOUFKQnVQa0NFSm9CUVl6MUFrRUFOZ0lBUVpEMUFrRi9OZ0lBUWZENUFpQUFRYUQ2QWhDUUEwR1U5UUpCb1BNQU5nSUFRWmoxQWtHMDh3QTJBZ0JCbVBVQ1FmRDVBaENhQVVIZzlRSkJBRFlDQUVIazlRSkJmellDQUVHbytnSkJ5TzRBS0FJQUlnQkIyUG9DRUpFRFFlajFBa0h3OGdBMkFnQkI3UFVDUVlUekFEWUNBRUhzOVFKQnFQb0NFSm9CUWJUMkFrRUFOZ0lBUWJqMkFrRi9OZ0lBUWVqMUFpZ0NBRUYwYWlnQ0FFSG85UUpxS0FJWUlRRkJrUGNDUWZEeUFEWUNBRUdVOXdKQmhQTUFOZ0lBUVpUM0FpQUJFSm9CUWR6M0FrRUFOZ0lBUWVEM0FrRi9OZ0lBUWVENkFpQUFRWkQ3QWhDUUEwRzg5Z0pCb1BNQU5nSUFRY0QyQWtHMDh3QTJBZ0JCd1BZQ1FlRDZBaENhQVVHSTl3SkJBRFlDQUVHTTl3SkJmellDQUVHODlnSW9BZ0JCZEdvb0FnQkJ2UFlDYWlnQ0dDRUFRZVQzQWtHZzh3QTJBZ0JCNlBjQ1FiVHpBRFlDQUVIbzl3SWdBQkNhQVVHdytBSkJBRFlDQUVHMCtBSkJmellDQUVHUTh3SW9BZ0JCZEdvb0FnQkJrUE1DYWtIQTlBSTJBa2hCNlBNQ0tBSUFRWFJxS0FJQVFlanpBbXBCbFBVQ05nSklRZWoxQWlnQ0FFRjBhaUlBS0FJQVFlajFBbW9pQVNBQktBSUVRWURBQUhJMkFnUkJ2UFlDS0FJQVFYUnFJZ0VvQWdCQnZQWUNhaUlDSUFJb0FnUkJnTUFBY2pZQ0JDQUFLQUlBUWVqMUFtcEJ3UFFDTmdKSUlBRW9BZ0JCdlBZQ2FrR1U5UUkyQWtnTFhBRUJmeUFBUWVqaEFEWUNBQ0FBS0FJRUlnRkZCRUFnQUVIUXN3SW9BZ0EyQWdCQjBMTUNJQUEyQWdBUEMwRU1JQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRZ0FFSFFzd0lvQWdBMkFnQkIwTE1DSUFBMkFnQUxrd0VCQkg4RFFBSkFJQVFnQWs0TkFDQUFLQUlZSWdNZ0FDZ0NIQ0lGU1FSL0lBTWdBU0FDSUFScklnWWdCU0FEYTBFQ2RTSURJQVlnQTBnYklnTVFtd0VnQUNBQUtBSVlJQU5CQW5ScU5nSVlJQU1nQkdvaEJDQURRUUowSUFGcUJTQUFJQUVvQWdBZ0FDZ0NBQ2dDTkVFL2NVR0tBV29SQXdCQmYwWU5BU0FFUVFGcUlRUWdBVUVFYWdzaEFRd0JDd3NnQkFzekFDQUFJQUFvQWdBb0FpUkIvd0J4UVFScUVRZ0FRWDlHQkg5QmZ3VWdBQ0FBS0FJTUlnQkJCR28yQWd3Z0FDZ0NBQXNMbEFFQkJIOERRQUpBSUFRZ0FrNE5BQ0FBS0FJTUlnTWdBQ2dDRUNJRlNRUi9JQUVnQXlBQ0lBUnJJZ1lnQlNBRGEwRUNkU0lESUFZZ0EwZ2JJZ01RbXdFZ0FDQUFLQUlNSUFOQkFuUnFOZ0lNSUFOQkFuUWdBV29GSUFBZ0FDZ0NBQ2dDS0VIL0FIRkJCR29SQ0FBaUEwRi9SZzBCSUFFZ0F6WUNBRUVCSVFNZ0FVRUVhZ3NoQVNBRElBUnFJUVFNQVFzTElBUUxYQUVCZnlBQVFmemhBRFlDQUNBQUtBSUVJZ0ZGQkVBZ0FFSFFzd0lvQWdBMkFnQkIwTE1DSUFBMkFnQVBDMEVNSUFFZ0FDZ0NDQkJJSUFCQkFEWUNDQ0FBUVFBMkFnUWdBRUhRc3dJb0FnQTJBZ0JCMExNQ0lBQTJBZ0FMaWdFQkJIOERRQUpBSUFRZ0FrNE5BQ0FBS0FJWUlnTWdBQ2dDSENJRlNRUi9JQU1nQVNBQ0lBUnJJZ1lnQlNBRGF5SURJQVlnQTBnYklnTVFuQUVnQUNBRElBQW9BaGhxTmdJWUlBTWdCR29oQkNBQklBTnFCU0FBSUFFdEFBQWdBQ2dDQUNnQ05FRS9jVUdLQVdvUkF3QkJmMFlOQVNBRVFRRnFJUVFnQVVFQmFnc2hBUXdCQ3dzZ0JBc3pBQ0FBSUFBb0FnQW9BaVJCL3dCeFFRUnFFUWdBUVg5R0JIOUJmd1VnQUNBQUtBSU1JZ0JCQVdvMkFnd2dBQzBBQUFzTGl3RUJCSDhEUUFKQUlBUWdBazROQUNBQUtBSU1JZ01nQUNnQ0VDSUZTUVIvSUFFZ0F5QUNJQVJySWdZZ0JTQURheUlESUFZZ0EwZ2JJZ01RbkFFZ0FDQURJQUFvQWd4cU5nSU1JQUVnQTJvRklBQWdBQ2dDQUNnQ0tFSC9BSEZCQkdvUkNBQWlBMEYvUmcwQklBRWdBem9BQUVFQklRTWdBVUVCYWdzaEFTQURJQVJxSVFRTUFRc0xJQVFMWEFFQmZ5QUFRWkRpQURZQ0FDQUFLQUlFSWdGRkJFQWdBRUhRc3dJb0FnQTJBZ0JCMExNQ0lBQTJBZ0FQQzBFTUlBRWdBQ2dDQ0JCSUlBQkJBRFlDQ0NBQVFRQTJBZ1FnQUVIUXN3SW9BZ0EyQWdCQjBMTUNJQUEyQWdBTEN3QWdBQkR1QVNBQUVFTUxTQUVDZnlBQUtBSW9JUUVEUUNBQkJFQWdBQ2dDSUNBQlFYOXFJZ0ZCQW5ScUtBSUFJUUpCQUNBQUlBQW9BaVFnQVVFQ2RHb29BZ0FnQWtFSGNVR09DV29SQWdBTUFRc0xDd1lBUVo3Y0FRdVJCd0VJZnlBQUtBSUVJZ1pCZUhFaEFnSkFJQVpCQTNGRkJFQWdBVUdBQWtrTkFTQUNJQUZCQkdwUEJFQWdBaUFCYTBHQTh3SW9BZ0JCQVhSTkJFQWdBQThMQ3d3QkN5QUFJQUpxSVFRZ0FpQUJUd1JBSUFJZ0FXc2lBa0VQVFFSQUlBQVBDeUFBSUFFZ0JrRUJjWEpCQW5JMkFnUWdBQ0FCYWlJQklBSkJBM0kyQWdRZ0JDQUVLQUlFUVFGeU5nSUVJQUVnQWhDZkF5QUFEd3RCdU84Q0tBSUFJQVJHQkVCQnJPOENLQUlBSUFKcUlnSWdBVTBOQVNBQUlBRWdCa0VCY1hKQkFuSTJBZ1FnQUNBQmFpSURJQUlnQVdzaUFVRUJjallDQkVHNDd3SWdBellDQUVHczd3SWdBVFlDQUNBQUR3dEJ0TzhDS0FJQUlBUkdCRUJCcU84Q0tBSUFJQUpxSWdNZ0FVa05BU0FESUFGcklnSkJEMHNFUUNBQUlBRWdCa0VCY1hKQkFuSTJBZ1FnQUNBQmFpSUJJQUpCQVhJMkFnUWdBQ0FEYWlJRElBSTJBZ0FnQXlBREtBSUVRWDV4TmdJRUJTQUFJQU1nQmtFQmNYSkJBbkkyQWdRZ0FDQURhaUlCSUFFb0FnUkJBWEkyQWdSQkFDRUJRUUFoQWd0QnFPOENJQUkyQWdCQnRPOENJQUUyQWdBZ0FBOExJQVFvQWdRaUEwRUNjUTBBSUFJZ0EwRjRjV29pQnlBQlNRMEFJQU5CQTNZaEJTQURRWUFDU1FSQUlBUW9BZ2dpQWlBRUtBSU1JZ05HQkVCQm9POENRYUR2QWlnQ0FFRUJJQVYwUVg5emNUWUNBQVVnQWlBRE5nSU1JQU1nQWpZQ0NBc0ZBa0FnQkNnQ0dDRUlJQVFvQWd3aUFpQUVSZ1JBQWtBZ0JFRVFhaUlEUVFScUlnVW9BZ0FpQWdSQUlBVWhBd1VnQXlnQ0FDSUNSUVJBUVFBaEFnd0NDd3NEUUFKQUlBSkJGR29pQlNnQ0FDSUpSUVJBSUFKQkVHb2lCU2dDQUNJSlJRMEJDeUFGSVFNZ0NTRUNEQUVMQ3lBRFFRQTJBZ0FMQlNBRUtBSUlJZ01nQWpZQ0RDQUNJQU0yQWdnTElBZ0VRQ0FFS0FJY0lnTkJBblJCMFBFQ2FpSUZLQUlBSUFSR0JFQWdCU0FDTmdJQUlBSkZCRUJCcE84Q1FhVHZBaWdDQUVFQklBTjBRWDl6Y1RZQ0FBd0RDd1VnQ0VFUWFpSURJQWhCRkdvZ0F5Z0NBQ0FFUmhzZ0FqWUNBQ0FDUlEwQ0N5QUNJQWcyQWhnZ0JDZ0NFQ0lEQkVBZ0FpQUROZ0lRSUFNZ0FqWUNHQXNnQkNnQ0ZDSURCRUFnQWlBRE5nSVVJQU1nQWpZQ0dBc0xDd3NnQnlBQmF5SUNRUkJKQkVBZ0FDQUhJQVpCQVhGeVFRSnlOZ0lFSUFBZ0Iyb2lBU0FCS0FJRVFRRnlOZ0lFQlNBQUlBRWdCa0VCY1hKQkFuSTJBZ1FnQUNBQmFpSUJJQUpCQTNJMkFnUWdBQ0FIYWlJRElBTW9BZ1JCQVhJMkFnUWdBU0FDRUo4REN5QUFEd3RCQUF0Y0FRRi9JQUJCcE9JQU5nSUFJQUFvQWdRaUFVVUVRQ0FBUWRDekFpZ0NBRFlDQUVIUXN3SWdBRFlDQUE4TFFRd2dBU0FBS0FJSUVFZ2dBRUVBTmdJSUlBQkJBRFlDQkNBQVFkQ3pBaWdDQURZQ0FFSFFzd0lnQURZQ0FBdFlBUVIvSXdRaEFTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBU0FBTmdJQUlBRWdBU2dDQURZQ0JDQUJLQUlFS0FJRUlnQVFlMEVCYWlJQ0VFb2lBd1IvSUFNZ0FDQUNFSU1CQlVFQUN5RUVJQUVrQkNBRUN6VUJBWDhqQkNFQUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRWS9YQVRZQ0FFSGd5UUJCQnlBQUtBSUFFQVFnQUNRRUN6VUJBWDhqQkNFQUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRZS9XQVRZQ0FFSG95UUJCQnlBQUtBSUFFQVFnQUNRRUN6VUJBWDhqQkNFQUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRZERXQVRZQ0FFSHd5UUJCQmlBQUtBSUFFQVFnQUNRRUN6VUJBWDhqQkNFQUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRZUxVQVRZQ0FFSDR5UUJCQlNBQUtBSUFFQVFnQUNRRUN6VUJBWDhqQkNFQUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRY1RVQVRZQ0FFR0F5Z0JCQkNBQUtBSUFFQVFnQUNRRUMxd0JBWDhnQUVHNDRnQTJBZ0FnQUNnQ0JDSUJSUVJBSUFCQjBMTUNLQUlBTmdJQVFkQ3pBaUFBTmdJQUR3dEJEQ0FCSUFBb0FnZ1FTQ0FBUVFBMkFnZ2dBRUVBTmdJRUlBQkIwTE1DS0FJQU5nSUFRZEN6QWlBQU5nSUFDd29BSUFBa0JDQUJKQVVMTlFFQmZ5TUVJUUFqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQjBOSUJOZ0lBUWJqS0FFRUFJQUFvQWdBUUJDQUFKQVFMTlFFQmZ5TUVJUUFqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQm5ab0NOZ0lBUWZEZkFDQUFLQUlBUVFnUURTQUFKQVFMTlFFQmZ5TUVJUUFqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQjcvVUJOZ0lBUWVqZkFDQUFLQUlBUVFRUURTQUFKQVFMT1FFQmZ5TUVJUUFqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQnZQVUJOZ0lBUWVEZkFDQUFLQUlBUVFSQkFFRi9FQVVnQUNRRUMwRUJBWDhqQkNFQUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRYmYxQVRZQ0FFSFkzd0FnQUNnQ0FFRUVRWUNBZ0lCNFFmLy8vLzhIRUFVZ0FDUUVDeklCQVg4Z0FFRzQ0Z0EyQWdBZ0FDZ0NCQ0lCUlFSQUR3dEJEQ0FCSUFBb0FnZ1FTQ0FBUVFBMkFnZ2dBRUVBTmdJRUN6a0JBWDhqQkNFQUl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRYXIxQVRZQ0FFSFEzd0FnQUNnQ0FFRUVRUUJCZnhBRklBQWtCQXRCQVFGL0l3UWhBQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVHbTlRRTJBZ0JCeU44QUlBQW9BZ0JCQkVHQWdJQ0FlRUgvLy8vL0J4QUZJQUFrQkFzN0FRRi9Jd1FoQUNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFR1g5UUUyQWdCQndOOEFJQUFvQWdCQkFrRUFRZi8vQXhBRklBQWtCQXM5QVFGL0l3UWhBQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVHUjlRRTJBZ0JCdU44QUlBQW9BZ0JCQWtHQWdINUIvLzhCRUFVZ0FDUUVDem9CQVg4akJDRUFJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVlQMUFUWUNBRUdvM3dBZ0FDZ0NBRUVCUVFCQi93RVFCU0FBSkFRTE93RUJmeU1FSVFBakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkI5L1FCTmdJQVFiRGZBQ0FBS0FJQVFRRkJnSDlCL3dBUUJTQUFKQVFMT3dFQmZ5TUVJUUFqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQjh2UUJOZ0lBUWFEZkFDQUFLQUlBUVFGQmdIOUIvd0FRQlNBQUpBUUxLd0VCZnlNRUlRQWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCZ3Y4Q05nSUFFS1lESUFBa0JBc3lBUUYvSUFCQnBPSUFOZ0lBSUFBb0FnUWlBVVVFUUE4TFFRd2dBU0FBS0FJSUVFZ2dBRUVBTmdJSUlBQkJBRFlDQkF0cEFRSi9JQUFnQVd0QkFuVWdBa2tFUUFOQUlBSkJmMm9pQWtFQ2RDQUFhaUFDUVFKMElBRnFLQUlBTmdJQUlBSU5BQXNGSUFJRVFBTkFJQUZCQkdvaEF5QUFRUVJxSVFRZ0FDQUJLQUlBTmdJQUlBSkJmMm9pQWdSQUlBUWhBQ0FESVFFTUFRc0xDd3NMS2dFQmZ5QUNCRUFEUUNBQVFRUnFJUU1nQUNBQk5nSUFJQUpCZjJvaUFnUkFJQU1oQUF3QkN3c0xDM3NCQVg4Q1FDQUFLQUpNUVFCT0JFQUNRQ0FBTEFCTFFRcEdEUUFnQUNnQ0ZDSUJJQUFvQWhCUERRQWdBQ0FCUVFGcU5nSVVJQUZCQ2pvQUFBd0NDeUFBRUt3RERBRUxJQUFzQUV0QkNrY0VRQ0FBS0FJVUlnRWdBQ2dDRUVrRVFDQUFJQUZCQVdvMkFoUWdBVUVLT2dBQURBSUxDeUFBRUt3REN3c3lBUUYvSUFCQmtPSUFOZ0lBSUFBb0FnUWlBVVVFUUE4TFFRd2dBU0FBS0FJSUVFZ2dBRUVBTmdJSUlBQkJBRFlDQkF0bUFRTi9Jd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0F5QUNLQUlBTmdJQVFRQkJBQ0FCSUFNUThnRWlCRUVBU0FSL1FYOEZJQUFnQkVFQmFpSUVFRW9pQURZQ0FDQUFCSDhnQUNBRUlBRWdBaER5QVFWQmZ3c0xJUVVnQXlRRUlBVUx5UU1CQkg4akJDRUdJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDd0pBSUFBRVFDQUNRUU5MQkVBQ1FDQUJLQUlBSVFVZ0FpRURBMEFDUUNBRktBSUFJZ1JCZjJwQi9nQkxCSDhnQkVVTkFTQUFJQVFRbmdFaUJFRi9SZ1JBUVg4aEFnd0hDeUFESUFScklRTWdBQ0FFYWdVZ0FDQUVPZ0FBSUFFb0FnQWhCU0FEUVg5cUlRTWdBRUVCYWdzaEFDQUJJQVZCQkdvaUJUWUNBQ0FEUVFOTERRRU1BZ3NMSUFCQkFEb0FBQ0FCUVFBMkFnQWdBaUFEYXlFQ0RBTUxCU0FDSVFNTElBTUVRQ0FCS0FJQUlRVUNRQU5BQWtBZ0JTZ0NBQ0lFUVg5cVFmNEFTd1IvSUFSRkRRRWdCaUFFRUo0QklnUkJmMFlFUUVGL0lRSU1Cd3NnQXlBRVNRMERJQUFnQlNnQ0FCQ2VBUm9nQXlBRWF5RURJQUFnQkdvRklBQWdCRG9BQUNBQktBSUFJUVVnQTBGL2FpRURJQUJCQVdvTElRQWdBU0FGUVFScUlnVTJBZ0FnQXcwQkRBVUxDeUFBUVFBNkFBQWdBVUVBTmdJQUlBSWdBMnNoQWd3REN5QUNJQU5ySVFJTEJTQUJLQUlBSWdFb0FnQWlBQVJBUVFBaEFnTkFJQUJCL3dCTEJFQWdCaUFBRUo0QklnQkJmMFlFUUVGL0lRSU1CUXNGUVFFaEFBc2dBQ0FDYWlFQ0lBRkJCR29pQVNnQ0FDSUFEUUFMQlVFQUlRSUxDd3NnQmlRRUlBSUw1Z0lCQm44akJDRUlJd1JCa0FKcUpBUWpCQ01GVGdSQVFaQUNFQUFMSUFoQmdBSnFJZ2NnQVNnQ0FDSUVOZ0lBSUFOQmdBSWdBRUVBUnlJSkd5RUZJQUFnQ0NBSkd5RUFJQVJCQUVjZ0JVRUFSM0VFUUFKQVFRQWhBd05BQWtBZ0FpQUZUeUlHSUFKQklFdHlSUTBDSUFJZ0JTQUNJQVliSWdScklRSWdBQ0FISUFRUTlnWWlCRUYvUmcwQUlBVkJBQ0FFSUFBZ0NFWWlCaHRySVFVZ0FDQUFJQVJxSUFZYklRQWdBeUFFYWlFRElBY29BZ0FpQkVFQVJ5QUZRUUJIY1EwQkRBSUxDeUFIS0FJQUlRUkJmeUVEUVFBaEJRc0ZRUUFoQXdzZ0JBUkFJQVZCQUVjZ0FrRUFSM0VFUUFKQUEwQWdBQ0FFS0FJQUVKNEJJZ1pCQVdwQkFrOEVRQ0FISUFjb0FnQkJCR29pQkRZQ0FDQUFJQVpxSVFBZ0F5QUdhaUVESUFVZ0Jtc2lCVUVBUnlBQ1FYOXFJZ0pCQUVkeERRRU1BZ3NMSUFZRVFFRi9JUU1GSUFkQkFEWUNBQXNMQ3dzZ0NRUkFJQUVnQnlnQ0FEWUNBQXNnQ0NRRUlBTUxqZ01CQjM4akJDRUZJd1JCa0FocUpBUWpCQ01GVGdSQVFaQUlFQUFMSUFWQmdBaHFJZ2dnQVNnQ0FDSUdOZ0lBSUFOQmdBSWdBRUVBUnlJSkd5RUhJQUFnQlNJS0lBa2JJUU1nQmlJRlFRQkhJQWRCQUVkeEJFQUNRRUVBSVFBRFFBSkFJQUpCQW5ZaUJpQUhUeUlMSUFKQmd3Rkxja1VOQWlBQ0lBY2dCaUFMR3lJRmF5RUNJQU1nQ0NBRklBUVFxQU1pQlVGL1JnMEFJQWRCQUNBRklBTWdDa1lpQmh0cklRY2dBeUFGUVFKMElBTnFJQVliSVFNZ0FDQUZhaUVBSUFnb0FnQWlCVUVBUnlBSFFRQkhjUTBCREFJTEN5QUlLQUlBSVFWQmZ5RUFRUUFoQndzRlFRQWhBQXNnQlFSQUlBZEJBRWNnQWtFQVIzRUVRQUpBQTBBZ0F5QUZJQUlnQkJEUUFTSUdRUUpxUVFOUEJFQWdDQ0FJS0FJQUlBWnFJZ1UyQWdBZ0EwRUVhaUVESUFCQkFXb2hBQ0FIUVg5cUlnZEJBRWNnQWlBR2F5SUNRUUJIY1EwQkRBSUxDd0pBQWtBQ1FDQUdRWDlyRGdJQUFRSUxJQVloQUF3Q0N5QUlRUUEyQWdBTUFRc2dCRUVBTmdJQUN3c0xJQWtFUUNBQklBZ29BZ0EyQWdBTElBb2tCQ0FBQzFVQkEzOGdBQ2dDVkNJRElBSkJnQUpxSWdVUXVBTWhCQ0FCSUFNZ0JDQURheUFGSUFRYklnRWdBaUFCSUFKSkd5SUNFSU1CR2lBQUlBSWdBMm8yQWdRZ0FDQUJJQU5xSWdFMkFnZ2dBQ0FCTmdKVUlBSUxYd0VDZnlNRUlRSWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUlnQUNnQ0FEWUNBQU5BSUFJb0FnQkJBMnBCZkhFaUFDZ0NBQ0VESUFJZ0FFRUVhallDQUNBQlFYOXFJUUFnQVVFQlN3UkFJQUFoQVF3QkN3c2dBaVFFSUFNTDRCVURFSDhEZmdGOEl3UWhDQ01FUWFBQ2FpUUVJd1FqQlU0RVFFR2dBaEFBQ3lBQUtBSk1RWDlLQkg5QkFRVkJBQXNhSUFoQmlBSnFJUTRnQ0VHRUFtb2hFQ0FJUVpBQ2FpRVJJQUVzQUFBaUN3UkFBa0FDUUFKQUFrQUNRQU5BQWtBZ0MwSC9BWEVpQTBFZ1JpQURRWGRxUVFWSmNnUkFBMEFnQVVFQmFpSURMUUFBSWdkQklFWWdCMEYzYWtFRlNYSUVRQ0FESVFFTUFRc0xJQUJDQUJCOEEwQWdBQ2dDQkNJRElBQW9BbWhKQkg4Z0FDQURRUUZxTmdJRUlBTXRBQUFGSUFBUVhBc2lBMEVnUmlBRFFYZHFRUVZKY2cwQUN5QUFLQUpvQkVBZ0FDQUFLQUlFUVg5cUlnczJBZ1FGSUFBb0FnUWhDd3NnQ3lBQUtBSUlhNndnQUNrRGVDQVRmSHdoRXdVQ1FDQUJMQUFBUVNWR0lnY0VRQUpBQW44Q1FBSkFJQUZCQVdvaUF5d0FBQ0lFUVNWckRnWURBUUVCQVFBQkMwRUFJUWNnQVVFQ2Fnd0JDeUFFUWY4QmNVRlFha0VLU1FSQUlBRXNBQUpCSkVZRVFDQUNJQU10QUFCQlVHb1ErZ1loQnlBQlFRTnFEQUlMQ3lBQ0tBSUFRUU5xUVh4eElnRW9BZ0FoQnlBQ0lBRkJCR28yQWdBZ0F3c2lBUzBBQUVGUWFrRUtTUVIvUVFBaENRTi9JQUV0QUFBZ0NVRUtiRUZRYW1vaENTQUJRUUZxSWdFdEFBQkJVR3BCQ2trTkFDQUJDd1ZCQUNFSklBRUxJZ05CQVdvaEJDQURMQUFBSWdwQjdRQkdCSDhnQkN3QUFDRUtRUUFoQlNBRFFRSnFJUUVnQkNFRFFRQWhCaUFIUVFCSEJTQUVJUUZCQUFzaEMwRUJBbjhDUUFKQUFrQUNRQUpBQWtBZ0NrSEJBR3NPT2dVT0JRNEZCUVVPRGc0T0JBNE9EZzRPRGdVT0RnNE9CUTRPQlE0T0RnNE9CUTRGQlFVRkJRQUZBZzRCRGdVRkJRNE9CUU1GRGc0RkRnTU9DeUFEUVFKcUlBRWdBU3dBQUVIb0FFWWlBeHNoQVVGK1FYOGdBeHNNQlFzZ0EwRUNhaUFCSUFFc0FBQkI3QUJHSWdNYklRRkJBMEVCSUFNYkRBUUxRUU1NQXd0QkFRd0NDMEVDREFFTElBTWhBVUVBQ3lBQkxRQUFJZ05CTDNGQkEwWWlCQnNoRFFKQUFrQUNRQUpBSUFOQklISWdBeUFFR3lJTVFmOEJjU0lFUVJoMFFSaDFRZHNBYXc0VUF3SUNBZ0lDQWdJQUFnSUNBZ0lDQWdJQ0FnRUNDeUFKUVFFZ0NVRUJTaHNoQ1F3Q0N5QUhJQTBnRXhDcEF3d0VDeUFBUWdBUWZBTkFJQUFvQWdRaUF5QUFLQUpvU1FSL0lBQWdBMEVCYWpZQ0JDQURMUUFBQlNBQUVGd0xJZ05CSUVZZ0EwRjNha0VGU1hJTkFBc2dBQ2dDYUFSQUlBQWdBQ2dDQkVGL2FpSUROZ0lFQlNBQUtBSUVJUU1MSUFNZ0FDZ0NDR3VzSUFBcEEzZ2dFM3g4SVJNTElBQWdDYXdpRkJCOElBQW9BZ1FpQ2lBQUtBSm9JZ05KQkVBZ0FDQUtRUUZxTmdJRUJTQUFFRnhCQUVnTkNDQUFLQUpvSVFNTElBTUVRQ0FBSUFBb0FnUkJmMm8yQWdRTEFrQUNRQUpBQWtBQ1FBSkFBa0FDUUNBRVFSaDBRUmgxUWNFQWF3NDRCUWNIQndVRkJRY0hCd2NIQndjSEJ3Y0hCd2NIQndjQkJ3Y0FCd2NIQndjRkJ3QURCUVVGQndRSEJ3Y0hCd0lCQndjQUJ3TUhCd0VIQ3lBTVFSQnlRZk1BUmdSQUlBaEJmMEdCQWhCaUdpQUlRUUE2QUFBZ0RFSHpBRVlFUUNBSVFRQTZBQ0VnQ0VFQU5nRUtJQWhCQURvQURnc0ZBa0FnQ0NBQlFRRnFJZ1FzQUFCQjNnQkdJZ29pQTBHQkFoQmlHaUFJUVFBNkFBQUNRQUpBQWtBQ1FDQUJRUUpxSUFRZ0Noc2lBU3dBQUVFdGF3NHhBQUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQVFJTElBZ2dBMEVCY3lJS09nQXVJQUZCQVdvaEFRd0NDeUFJSUFOQkFYTWlDam9BWGlBQlFRRnFJUUVNQVFzZ0EwRUJjeUVLQ3dOQUFrQUNRQ0FCTEFBQUlnTU9YaE1CQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUFCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFNQkN3SkFBa0FnQVVFQmFpSUVMQUFBSWdNT1hnQUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUFCQzBFdElRTU1BUXNnQVVGL2FpMEFBQ0lCSUFOQi93RnhTQVIvQTM4Z0FVRUJhaUlCSUFocUlBbzZBQUFnQVNBRUxBQUFJZ05CL3dGeFNRMEFJQVFMQlNBRUN5RUJDeUFEUWY4QmNVRUJhaUFJYWlBS09nQUFJQUZCQVdvaEFRd0FBQXNBQ3dzZ0NVRUJha0VmSUF4QjR3QkdJaEliSVFRZ0MwRUFSeUVNSUExQkFVWWlEUVJBSUF3RVFDQUVRUUowRUVvaUJVVUVRRUVBSVFWQkFDRUdEQkVMQlNBSElRVUxJQTVCQURZQ0FDQU9RUUEyQWdSQkFDRUdJQVFoQXdOQUFrQWdCVVVoQ1FOQUEwQUNRQ0FBS0FJRUlnUWdBQ2dDYUVrRWZ5QUFJQVJCQVdvMkFnUWdCQzBBQUFVZ0FCQmNDeUlFUVFGcUlBaHFMQUFBUlEwRElCRWdCRG9BQUFKQUFrQWdFQ0FSUVFFZ0RoRFFBVUYrYXc0Q0FRQUNDMEVBSVFZTUZRc01BUXNMSUFsRkJFQWdCa0VDZENBRmFpQVFLQUlBTmdJQUlBWkJBV29oQmdzZ0F5QUdSaUFNY1VVTkFBc2dCU0FEUVFGMFFRRnlJZ05CQW5RUWlnRWlCQVJBSUFRaEJRd0NCVUVBSVFZTUVnc0FDd3NnRGdSL0lBNG9BZ0JGQlVFQkN3Ui9JQVloQXlBRklRbEJBQVZCQUNFR0RCQUxJUVlGQW44Z0RBUkFJQVFRU2lJR1JRUkFRUUFoQlVFQUlRWU1FZ3RCQUNFRElBUWhCUU5BQTBBZ0FDZ0NCQ0lFSUFBb0FtaEpCSDhnQUNBRVFRRnFOZ0lFSUFRdEFBQUZJQUFRWEFzaUJFRUJhaUFJYWl3QUFFVUVRRUVBSVFsQkFBd0VDeUFESUFacUlBUTZBQUFnQlNBRFFRRnFJZ05IRFFBTElBWWdCVUVCZEVFQmNpSUZFSW9CSWdRRVFDQUVJUVlNQVFWQkFDRUZEQk1MQUFBTEFBc2dCMFVFUUFOQUlBQW9BZ1FpQlNBQUtBSm9TUVIvSUFBZ0JVRUJhallDQkNBRkxRQUFCU0FBRUZ3TFFRRnFJQWhxTEFBQURRQkJBQ0VEUVFBaEJrRUFJUWxCQUF3Q0FBc0FDMEVBSVFNRGZ5QUFLQUlFSWdVZ0FDZ0NhRWtFZnlBQUlBVkJBV28yQWdRZ0JTMEFBQVVnQUJCY0N5SUZRUUZxSUFocUxBQUFCSDhnQXlBSGFpQUZPZ0FBSUFOQkFXb2hBd3dCQlNBSElRWkJBQ0VKUVFBTEN3c2hCUXNnQUNnQ2FBUkFJQUFnQUNnQ0JFRi9haUlLTmdJRUJTQUFLQUlFSVFvTElBQXBBM2dnQ2lBQUtBSUlhNng4SWhWQ0FGRU5DeUFTUVFGeklCUWdGVkZ5UlEwTElBd0VRQ0FOQkVBZ0J5QUpOZ0lBQlNBSElBWTJBZ0FMQ3lBU1JRUkFJQWtFUUNBRFFRSjBJQWxxUVFBMkFnQUxJQVpGQkVCQkFDRUdEQWdMSUFNZ0JtcEJBRG9BQUFzTUJndEJFQ0VEREFRTFFRZ2hBd3dEQzBFS0lRTU1BZ3RCQUNFRERBRUxJQUFnRFVFQUVMTURJUllnQUNrRGVFSUFJQUFvQWdRZ0FDZ0NDR3VzZlZFTkJpQUhCRUFDUUFKQUFrQWdEUTREQUFFQ0JRc2dCeUFXdGpnQ0FBd0VDeUFISUJZNUF3QU1Bd3NnQnlBV09RTUFEQUlMREFFTElBQWdBMEVBUW44UXdBTWhGQ0FBS1FONFFnQWdBQ2dDQkNBQUtBSUlhNng5VVEwRklBeEI4QUJHSUFkQkFFZHhCRUFnQnlBVVBnSUFCU0FISUEwZ0ZCQ3BBd3NMSUFkQkFFY2dEMm9oRHlBQUtBSUVJQUFvQWdocnJDQUFLUU40SUJOOGZDRVREQUlMQ3lBQVFnQVFmQ0FBS0FJRUlnTWdBQ2dDYUVrRWZ5QUFJQU5CQVdvMkFnUWdBeTBBQUFVZ0FCQmNDeUlESUFFZ0Iyb2lBUzBBQUVjTkJDQVRRZ0Y4SVJNTEN5QUJRUUZxSWdFc0FBQWlDdzBCREFZTEN3d0RDeUFBS0FKb0JFQWdBQ0FBS0FJRVFYOXFOZ0lFQ3lBRFFYOUtJQTl5RFFOQkFDRUxEQUVMSUE5RkRRQU1BUXRCZnlFUEN5QUxCRUFnQmhCRElBVVFRd3NMQ3lBSUpBUWdEd3N5QVFGL0lBQkIvT0VBTmdJQUlBQW9BZ1FpQVVVRVFBOExRUXdnQVNBQUtBSUlFRWdnQUVFQU5nSUlJQUJCQURZQ0JBc0xBQ0FBSUFFZ0FoRDVCZ3NrQVFKL0FuOGpCQ0VCSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQkN5UUVRUUFMU3dBZ0FMMUNnSUNBZ0lDQWdQai9BSU5DZ0lDQWdJQ0FnUGovQUZFRWZDQUFJQUNpQlNBQVJBQUFBQUFBQUFBQVlRUjhSQUFBQUFBQUFQQy9JQUFnQUtLakJTQUFFSUFIdHdzTEM2SUJBZ0YvQW40Q1FBSkFBa0FnQUwwaUEwSTBpQ0lDcDBIL0QzRWlBUVJBSUFGQi93OUdCRUFNQWdVTUF3c0FDeUFEUWd5R0lnSkNBRkVFUUVHQWdJQ0FlQ0VCQlNBQ1FuOVZCRUJCZ1hnaEFRTkFJQUZCZjJvaEFTQUNRZ0dHSWdKQ2YxVU5BQXNGUVlGNElRRUxDd3dDQzBILy8vLy9CMEdBZ0lDQWVDQURRdi8vLy8vLy8vOEhnMElBVVJzaEFRd0JDeUFDcDBIL0QzRkJnWGhxSVFFTElBRUxNZ0VCZnlBQVFlamhBRFlDQUNBQUtBSUVJZ0ZGQkVBUEMwRU1JQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRTHRnMENGbjhCZkNNRUlRc2pCRUd3Qkdva0JDTUVJd1ZPQkVCQnNBUVFBQXNnQzBIQUFtb2hEU0FDUVgxcVFSaHRJZ1JCQUNBRVFRQktHeUVRUVlRektBSUFJZ3dnQTBGL2FpSUdha0VBVGdSQUlBTWdER29oQ0VFQUlRUWdFQ0FHYXlFRkEwQWdCRUVEZENBTmFpQUZRUUJJQkh4RUFBQUFBQUFBQUFBRklBVkJBblJCa0ROcUtBSUF0d3M1QXdBZ0JVRUJhaUVGSUFSQkFXb2lCQ0FJUncwQUN3c2dDMEhnQTJvaENpQUxRYUFCYWlFT0lCQkJhR3dpRkNBQ1FXaHFhaUVJSUFOQkFFb2hCMEVBSVFVRFFDQUhCRUFnQlNBR2FpRUpSQUFBQUFBQUFBQUFJUnBCQUNFRUEwQWdHaUFFUVFOMElBQnFLd01BSUFrZ0JHdEJBM1FnRFdvckF3Q2lvQ0VhSUFSQkFXb2lCQ0FEUncwQUN3VkVBQUFBQUFBQUFBQWhHZ3NnQlVFRGRDQUxhaUFhT1FNQUlBVkJBV29oQkNBRklBeElCRUFnQkNFRkRBRUxDeUFJUVFCS0lSRkJHQ0FJYXlFU1FSY2dDR3NoRlNBSVJTRVdJQU5CQUVvaEZ5QU1JUVFDUUFKQUEwQUNRQ0FFUVFOMElBdHFLd01BSVJvZ0JFRUFTaUlKQkVCQkFDRUdJQVFoQlFOQUlBWkJBblFnQ21vZ0dpQWFSQUFBQUFBQUFIQStvcXEzSWhwRUFBQUFBQUFBY0VHaW9hbzJBZ0FnQlVGL2FpSUhRUU4wSUF0cUt3TUFJQnFnSVJvZ0JrRUJhaUVHSUFWQkFVb0VRQ0FISVFVTUFRc0xDeUFhSUFnUWZ5SWFJQnBFQUFBQUFBQUF3RCtpbkVRQUFBQUFBQUFnUUtLaElocXFJUVVnR2lBRnQ2RWhHZ0pBQWtBQ1FDQVJCSDhnQkVGL2FrRUNkQ0FLYWlJSEtBSUFJZzhnRW5VaEJpQUhJQThnQmlBU2RHc2lCellDQUNBSElCVjFJUWNnQlNBR2FpRUZEQUVGSUJZRWZ5QUVRWDlxUVFKMElBcHFLQUlBUVJkMUlRY01BZ1VnR2tRQUFBQUFBQURnUDJZRWYwRUNJUWNNQkFWQkFBc0xDeUVIREFJTElBZEJBRW9OQUF3QkN3Si9JQVVoR1NBSkJIOUJBQ0VGUVFBaENRTi9JQWxCQW5RZ0Ntb2lHQ2dDQUNFUEFrQUNRQ0FGQkg5Qi8vLy9CeUVUREFFRklBOEVmMEdBZ0lBSUlSTkJBU0VGREFJRlFRQUxDeUVGREFFTElCZ2dFeUFQYXpZQ0FBc2dCQ0FKUVFGcUlnbEhEUUFnQlFzRlFRQUxJUWtnRVFSQUFrQUNRQUpBSUFoQkFXc09BZ0FCQWdzZ0JFRi9ha0VDZENBS2FpSUZJQVVvQWdCQi8vLy9BM0UyQWdBTUFRc2dCRUYvYWtFQ2RDQUthaUlGSUFVb0FnQkIvLy8vQVhFMkFnQUxDeUFaQzBFQmFpRUZJQWRCQWtZRVFFUUFBQUFBQUFEd1B5QWFvU0VhSUFrRVFDQWFSQUFBQUFBQUFQQS9JQWdRZjZFaEdndEJBaUVIQ3dzZ0drUUFBQUFBQUFBQUFHSU5BaUFFSUF4S0JFQWdCQ0VHUVFBaENRTkFJQVpCZjJvaUJrRUNkQ0FLYWlnQ0FDQUpjaUVKSUFZZ0RFb05BQXNnQ1EwQkMwRUJJUVlEUUNBR1FRRnFJUVVnRENBR2EwRUNkQ0FLYWlnQ0FFVUVRQ0FGSVFZTUFRc0xJQVFnQm1vaEJnTkFJQU1nQkdvaUIwRURkQ0FOYWlBRVFRRnFJZ1VnRUdwQkFuUkJrRE5xS0FJQXR6a0RBQ0FYQkVCRUFBQUFBQUFBQUFBaEdrRUFJUVFEUUNBYUlBUkJBM1FnQUdvckF3QWdCeUFFYTBFRGRDQU5haXNEQUtLZ0lSb2dCRUVCYWlJRUlBTkhEUUFMQlVRQUFBQUFBQUFBQUNFYUN5QUZRUU4wSUF0cUlCbzVBd0FnQlNBR1NBUkFJQVVoQkF3QkN3c2dCaUVFREFFTEN5QUVJUUFnQ0NFQ0EwQWdBa0ZvYWlFQ0lBQkJmMm9pQUVFQ2RDQUthaWdDQUVVTkFBc01BUXNnR2tFQUlBaHJFSDhpR2tRQUFBQUFBQUJ3UVdZRWZ5QUVRUUowSUFwcUlCb2dHa1FBQUFBQUFBQndQcUtxSWdPM1JBQUFBQUFBQUhCQm9xR3FOZ0lBSUFJZ0ZHb2hBaUFFUVFGcUJTQWFxaUVESUFnaEFpQUVDeUlBUVFKMElBcHFJQU0yQWdBTFJBQUFBQUFBQVBBL0lBSVFmeUVhSUFCQmYwb2lCZ1JBSUFBaEFnTkFJQUpCQTNRZ0Myb2dHaUFDUVFKMElBcHFLQUlBdDZJNUF3QWdHa1FBQUFBQUFBQndQcUloR2lBQ1FYOXFJUU1nQWtFQVNnUkFJQU1oQWd3QkN3c2dCZ1JBSUFBaEFnTkFJQUFnQW1zaENFUUFBQUFBQUFBQUFDRWFRUUFoQkFOQUlCb2dCRUVEZEVHZ05Xb3JBd0FnQWlBRWFrRURkQ0FMYWlzREFLS2dJUm9nQkVFQmFpRURJQVFnREU0Z0JDQUlUM0pGQkVBZ0F5RUVEQUVMQ3lBSVFRTjBJQTVxSUJvNUF3QWdBa0YvYWlFRElBSkJBRW9FUUNBRElRSU1BUXNMQ3dzZ0JnUkFSQUFBQUFBQUFBQUFJUm9nQUNFQ0EwQWdHaUFDUVFOMElBNXFLd01Bb0NFYUlBSkJmMm9oQXlBQ1FRQktCRUFnQXlFQ0RBRUxDd1ZFQUFBQUFBQUFBQUFoR2dzZ0FTQWFJQnFhSUFkRklnUWJPUU1BSUE0ckF3QWdHcUVoR2lBQVFRRk9CRUJCQVNFREEwQWdHaUFEUVFOMElBNXFLd01Bb0NFYUlBTkJBV29oQWlBQUlBTkhCRUFnQWlFRERBRUxDd3NnQVNBYUlCcWFJQVFiT1FNSUlBc2tCQ0FGUVFkeEN6Z0JBbjhnQWdSQUEwQWdBVUVFYWlFRElBQkJCR29oQkNBQUlBRW9BZ0EyQWdBZ0FrRi9haUlDQkVBZ0JDRUFJQU1oQVF3QkN3c0xDNmNCQVFWL0l3UWhBU01FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNEUUNBRVFRRWdBSFJCLy8vLy93ZHhJZ0pGUVFCeEJIOGdBRUVDZENnQ0FBVWdBRUdlNFFGQmcvOENJQUliRUlVSEN5SUNRUUJIYWlFRUlBQkJBblFnQVdvZ0FqWUNBQ0FBUVFGcUlnQkJCa2NOQUFzQ1FBSkFBa0FnQkVILy8vLy9CM0VPQWdBQkFndEI0TzRDSVFNTUFRc2dBU2dDQUVHVTdnQkdCRUJCc080QUlRTUxDeUFCSkFRZ0F3dWFCZ0VKZnlNRUlRVWpCRUdRQW1va0JDTUVJd1ZPQkVCQmtBSVFBQXNnQVN3QUFFVUVRQUpBUWV2UkFSQUpJZ0VFUUNBQkxBQUFEUUVMSUFCQkRHeEJzREpxRUFraUFRUkFJQUVzQUFBTkFRdEI4dEVCRUFraUFRUkFJQUVzQUFBTkFRdEI5OUVCSVFFTEN5QUZRWUFDYWlFR0EzOENmd0pBQWtBZ0FTQUNhaXdBQUE0d0FBRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUFBUXNnQWd3QkN5QUNRUUZxSWdKQkQwa05BVUVQQ3dzaEF3SkFBa0FDUUNBQkxBQUFJZ0pCTGtZRVFFSDMwUUVoQVFVZ0FTQURhaXdBQUFSQVFmZlJBU0VCQlNBQ1FjTUFSdzBDQ3dzZ0FTd0FBVVVOQVFzZ0FVSDMwUUVRMFFGRkRRQWdBVUgvMFFFUTBRRkZEUUJCZ084Q0tBSUFJZ0lFUUFOQUlBRWdBa0VJYWhEUkFVVU5BeUFDS0FJWUlnSU5BQXNMUVlUdkFoQVFRWUR2QWlnQ0FDSUNCRUFDUUFOQUlBRWdBa0VJYWhEUkFRUkFJQUlvQWhnaUFrVU5BZ3dCQ3d0QmhPOENFQXNNQXdzTEFuOENRRUdvN2dJb0FnQU5BRUdGMGdFUUNTSUNSUTBBSUFJc0FBQkZEUUJCL2dFZ0Eyc2hDU0FEUVFGcUlRb0RRQUpBSUFJUWh3Y2lCeXdBQUNJRVFRQkhRUjkwUVI5MUlBY2dBbXRxSWdnZ0NVa0VmeUFGSUFJZ0NCQ0RBUm9nQlNBSWFpSUNRUzg2QUFBZ0FrRUJhaUFCSUFNUWd3RWFJQWdnQ21vZ0JXcEJBRG9BQUNBRklBWVFLU0lFRFFFZ0J5d0FBQVVnQkFzaEFpQUhJQUpCL3dGeFFRQkhhaUlDTEFBQURRRU1BZ3NMUVJ3UVNpSUNCSDhnQWlBRU5nSUFJQUlnQmlnQ0FEWUNCQ0FDUVFocUlnUWdBU0FERUlNQkdpQURJQVJxUVFBNkFBQWdBa0dBN3dJb0FnQTJBaGhCZ084Q0lBSTJBZ0FnQWdVZ0JDQUdLQUlBRUlnSERBRUxEQUVMUVJ3UVNpSUNCRUFnQWtHVTdnQW9BZ0EyQWdBZ0FrR1k3Z0FvQWdBMkFnUWdBa0VJYWlJRUlBRWdBeENEQVJvZ0F5QUVha0VBT2dBQUlBSkJnTzhDS0FJQU5nSVlRWUR2QWlBQ05nSUFDeUFDQ3lFQlFZVHZBaEFMSUFGQmxPNEFJQUFnQVhJYklRSU1BUXNnQUVVRVFDQUJMQUFCUVM1R0JFQkJsTzRBSVFJTUFnc0xRUUFoQWdzZ0JTUUVJQUlMcVFJQkJIOGdBU2dDQ0NFQ0lBRW9BaEFpQTBFQU5nSUFJQU1nQWlnQ0hDSUVOZ0lFSUFRZ0FrRVlhaUlGSUFVb0FnQWJJQU0yQWdBZ0FpQUROZ0ljSUFJZ0FpZ0NGRUVCYWpZQ0ZDQUNJQUlvQWd4QkFXbzJBZ3dnQVNnQ0RDRUNJQUVvQWhRaUEwRUFOZ0lBSUFNZ0FpZ0NIQ0lFTmdJRUlBUWdBa0VZYWlJRklBVW9BZ0FiSUFNMkFnQWdBaUFETmdJY0lBSWdBaWdDRkVFQmFqWUNGQ0FDSUFJb0FnaEJBV28yQWdnZ0FDZ0NFQ0VDSUFFb0FnUWlBeUFBUVFScUlBTWJJQUVvQWdBaUJEWUNBQ0FFUVFScUlBQkJDR29nQkJzZ0F6WUNBQ0FBSUFBb0FnQkJmMm8yQWdBZ0FVRUFOZ0lBSUFFZ0FpZ0NoQUVpQURZQ0JDQUFJQUpCZ0FGcUlnTWdBeWdDQUJzZ0FUWUNBQ0FDSUFFMkFvUUJJQUlnQWlnQ2ZFRUJhallDZkF2REFRRUNmd0pBSUFCQkEzRUVRQU5BSUFBc0FBQWlBVUU2UmlBQlJYSU5BaUFBUVFGcUlnQkJBM0VOQUFzTElBQW9BZ0FpQVVHQWdZS0VlSEZCZ0lHQ2hIaHpJQUZCLy8zN2QycHhSUVJBQTBBZ0FVRzY5T2pSQTNNaUFVR0FnWUtFZUhGQmdJR0NoSGh6SUFGQi8vMzdkMnB4UlFSQUlBQkJCR29pQUNnQ0FDSUJRWUNCZ29SNGNVR0FnWUtFZUhNZ0FVSC8vZnQzYW5GRkRRRUxDd3NEUUNBQVFRRnFJUUVnQUN3QUFDSUNRVHBHSUFKRmNrVUVRQ0FCSVFBTUFRc0xDeUFBQzA4QkFYOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQ0lBQTJBZ0FnQWlBQk5nSUVRZHNBSUFJUUl5SUFRWUJnU3dSL1FmanVBa0VBSUFCck5nSUFRUUFGSUFBTEdpQUNKQVFMaEFRQ0EzOEZmaUFBdlNJSFFqU0lwMEgvRDNFaEFpQUJ2U0lHUWpTSXAwSC9EM0VoQkNBSFFvQ0FnSUNBZ0lDQWdIK0RJUWtDZkFKQUlBWkNBWVlpQlVJQVVRMEFBbndnQWtIL0QwWWdBYjFDLy8vLy8vLy8vLy8vQUlOQ2dJQ0FnSUNBZ1BqL0FGWnlEUUVnQjBJQmhpSUlJQVZZQkVBZ0FFUUFBQUFBQUFBQUFLSWdBQ0FGSUFoUkd3OExJQUlFZmlBSFF2Ly8vLy8vLy84SGcwS0FnSUNBZ0lDQUNJUUZJQWRDRElZaUJVSi9WUVJBUVFBaEFnTkFJQUpCZjJvaEFpQUZRZ0dHSWdWQ2YxVU5BQXNGUVFBaEFnc2dCMEVCSUFKcnJZWUxJZ2dnQkFSK0lBWkMvLy8vLy8vLy93ZURRb0NBZ0lDQWdJQUloQVVnQmtJTWhpSUZRbjlWQkVBRFFDQURRWDlxSVFNZ0JVSUJoaUlGUW45VkRRQUxDeUFHUVFFZ0F5SUVhNjJHQ3lJR2ZTSUZRbjlWSVFNZ0FpQUVTZ1JBQWtBRFFBSkFJQU1FUUNBRlFnQlJEUUVGSUFnaEJRc2dCVUlCaGlJSUlBWjlJZ1ZDZjFVaEF5QUNRWDlxSWdJZ0JFb05BUXdDQ3dzZ0FFUUFBQUFBQUFBQUFLSU1BZ3NMSUFNRVFDQUFSQUFBQUFBQUFBQUFvaUFGUWdCUkRRRWFCU0FJSVFVTElBVkNnSUNBZ0lDQWdBaFVCRUFEUUNBQ1FYOXFJUUlnQlVJQmhpSUZRb0NBZ0lDQWdJQUlWQTBBQ3dzZ0FrRUFTZ1IrSUFWQ2dJQ0FnSUNBZ0hoOElBS3RRalNHaEFVZ0JVRUJJQUpycllnTElBbUV2d3NNQVFzZ0FDQUJvaUlBSUFDakN3dWFGQU1QZndOK0Izd2pCQ0VKSXdSQmdBUnFKQVFqQkNNRlRnUkFRWUFFRUFBTFFRQWdBaUFEYWlJUWF5RVJBa0FDUUFOQUFrQUNRQ0FCUVM1ckRnTURBUUFCQ3lBQUtBSUVJZ0VnQUNnQ2FFa0VmeUFBSUFGQkFXbzJBZ1FnQVMwQUFBVWdBQkJjQ3lFQlFRRWhDd3dCQ3dzTUFRc2dBQ2dDQkNJQklBQW9BbWhKQkg4Z0FDQUJRUUZxTmdJRUlBRXRBQUFGSUFBUVhBc2lBVUV3UmdSQUEzOGdGVUovZkNFVklBQW9BZ1FpQVNBQUtBSm9TUVIvSUFBZ0FVRUJhallDQkNBQkxRQUFCU0FBRUZ3TElnRkJNRVlOQUVFQklReEJBUXNoQ3dWQkFTRU1Dd3NnQ1VFQU5nSUFBbndDUUFKQUFrQUNRQ0FCUVM1R0lnNGdBVUZRYWlJSFFRcEpjZ1JBQWtBZ0FTRUlRUUFoQVFOQUFrQWdEZ1JBSUF3TkFVRUJJUXdnRmlFVkJRSkFJQlpDQVh3aEZpQUlRVEJISVEwZ0FVSDlBRTRFUUNBTlJRMEJJQWtnQ1NnQzhBTkJBWEkyQXZBRERBRUxJQUZCQW5RZ0NXb2lDeUFHQkg4Z0NFRlFhaUFMS0FJQVFRcHNhZ1VnQndzMkFnQWdCa0VCYWlJR1FRbEdJUWRCQVNFTFFRQWdCaUFIR3lFR0lBRWdCMm9oQVNBV3B5QUtJQTBiSVFvTEN5QUFLQUlFSWdjZ0FDZ0NhRWtFZnlBQUlBZEJBV28yQWdRZ0J5MEFBQVVnQUJCY0N5SUhRVkJxSWcxQkNra2dCMEV1UmlJT2NrVU5BaUFISVFnZ0RTRUhEQUVMQ3lBTFFRQkhJUVVNQWdzRklBRWhCMEVBSVFFTElCVWdGaUFNR3lFVklBdEJBRWNpQ0NBSFFTQnlRZVVBUm5GRkJFQWdCMEYvU2dSQUlBZ2hCUXdDQlNBSUlRVU1Bd3NBQ3lBQUlBVVFzUU1pRjBLQWdJQ0FnSUNBZ0lCL1VRUkFJQVZGQkVBZ0FFSUFFSHhFQUFBQUFBQUFBQUFNQmdzZ0FDZ0NhQVJBSUFBZ0FDZ0NCRUYvYWpZQ0JBdENBQ0VYQ3lBR0lRQWdGU0FYZkNFVkRBTUxJQUFvQW1nRVFDQUFJQUFvQWdSQmYybzJBZ1FnQlVVTkFpQUdJUUFNQXdzTElBVkZEUUFnQmlFQURBRUxRZmp1QWtFV05nSUFJQUJDQUJCOFJBQUFBQUFBQUFBQURBRUxJQVMzUkFBQUFBQUFBQUFBb2lBSktBSUFJZ1ZGRFFBYUlCVWdGbEVnRmtJS1UzRUVRQ0FFdHlBRnVLSWdCU0FDZGtVZ0FrRWVTbklOQVJvTElCVWdBMEYrYmF4VkJFQkIrTzRDUVNJMkFnQWdCTGRFLy8vLy8vLy83MytpUlAvLy8vLy8vKzkvb2d3QkN5QVZJQU5CbG45cXJGTUVRRUg0N2dKQklqWUNBQ0FFdDBRQUFBQUFBQUFRQUtKRUFBQUFBQUFBRUFDaURBRUxJQUFFZnlBQVFRbElCRUFnQVVFQ2RDQUphaUlIS0FJQUlRVURRQ0FGUVFwc0lRVWdBRUVCYWlFR0lBQkJDRWdFUUNBR0lRQU1BUXNMSUFjZ0JUWUNBQXNnQVVFQmFnVWdBUXNoQlNBVnB5RUFJQXBCQ1VnRVFDQUFRUkpJSUFvZ0FFeHhCRUFnQUVFSlJnUkFJQVMzSUFrb0FnQzRvZ3dEQ3lBQVFRbElCRUFnQkxjZ0NTZ0NBTGlpUVFBZ0FHdEJBblJCc0RKcUtBSUF0Nk1NQXdzZ0FrRWJhaUFBUVgxc2FpSUJRUjVLSUFrb0FnQWlCaUFCZGtWeUJFQWdCTGNnQnJpaUlBQkJBblJCNkRGcUtBSUF0NklNQXdzTEN5QUFRUWx2SWdFRWYwRUFJQUVnQVVFSmFpQUFRWDlLR3lJTmEwRUNkRUd3TW1vb0FnQWhCeUFGQkg5QmdKVHIzQU1nQjIwaEMwRUFJUUZCQUNFS1FRQWhCZ05BSUFvZ0JrRUNkQ0FKYWlJTUtBSUFJZzRnQjI0aUQyb2hDQ0FNSUFnMkFnQWdEaUFISUE5c2F5QUxiQ0VLSUFCQmQyb2dBQ0FJUlNBQklBWkdjU0lJR3lFQUlBRkJBV3BCL3dCeElBRWdDQnNoQVNBRklBWkJBV29pQmtjTkFBc2dDZ1IvSUFWQkFuUWdDV29nQ2pZQ0FDQUZRUUZxQlNBRkN3VkJBQ0VCUVFBTElSUWdBRUVKSUExcmFpRUdJQlFGUVFBaEFTQUFJUVlnQlFzaEFFRUFJUVVEUUFKQUlBWkJFa2doRFNBR1FSSkdJUTRnQVVFQ2RDQUphaUVQQTBBZ0RVVUVRQ0FPUlEwQ0lBOG9BZ0JCMytDbEJFOEVRRUVTSVFZTUF3c0xRUUFoQ2lBQVFmOEFhaUVNQTBBZ0NxMGdERUgvQUhFaUNFRUNkQ0FKYWlJSEtBSUFyVUlkaG53aUZhY2hDeUFWUW9DVTY5d0RWZ1IvSUJVZ0ZVS0FsT3ZjQTRBaUZVS0FsT3ZjQTM1OXB5RUxJQlduQlVFQUN5RUtJQWNnQ3pZQ0FDQUFJQUFnQ0NBTEd5QUJJQWhHSWdzZ0FFSC9BR3BCL3dCeElBaEhjaHNoQnlBSVFYOXFJUXdnQzBVRVFDQUhJUUFNQVFzTElBVkJZMm9oQlNBS1JRMEFDeUFIUWY4QWFrSC9BSEVoQ0NBSFFmNEFha0gvQUhGQkFuUWdDV29oRFNBQlFmOEFha0gvQUhFaUFTQUhSZ1JBSUEwZ0NFRUNkQ0FKYWlnQ0FDQU5LQUlBY2pZQ0FDQUlJUUFMSUFGQkFuUWdDV29nQ2pZQ0FDQUdRUWxxSVFZTUFRc0xBMEFDUUNBQVFRRnFRZjhBY1NFSElBQkIvd0JxUWY4QWNVRUNkQ0FKYWlFTkEwQUNRQ0FHUVJKR0lRdEJDVUVCSUFaQkcwb2JJUWdEUUVFQUlRb0NRQUpBQTBBQ1FDQUJJQXBxUWY4QWNTSU1JQUJHRFFJZ0RFRUNkQ0FKYWlnQ0FDSU1JQXBCQW5SQjJQQUFhaWdDQUNJT1NRMENJQXdnRGtzTkFDQUtRUUZxUVFKUERRSkJBU0VLREFFTEN3d0JDeUFMRFFRTElBVWdDR29oQlNBQUlBRkdCRUFnQUNFQkRBRUxDMEVCSUFoMFFYOXFJUTVCZ0pUcjNBTWdDSFloRDBFQUlRc2dBU0VLQTBBZ0N5QUtRUUowSUFscUloSW9BZ0FpRXlBSWRtb2hEQ0FTSUF3MkFnQWdEaUFUY1NBUGJDRUxJQVpCZDJvZ0JpQU1SU0FCSUFwR2NTSU1HeUVHSUFGQkFXcEIvd0J4SUFFZ0RCc2hBU0FBSUFwQkFXcEIvd0J4SWdwSERRQUxJQXNFUUNBQklBZEhEUUVnRFNBTktBSUFRUUZ5TmdJQUN3d0JDd3NnQUVFQ2RDQUphaUFMTmdJQUlBY2hBQXdCQ3d0QkFDRUdBMEFnQUVFQmFrSC9BSEVoQnlBQklBWnFRZjhBY1NJSUlBQkdCRUFnQjBGL2FrRUNkQ0FKYWtFQU5nSUFJQWNoQUFzZ0dFUUFBQUFBWmMzTlFhSWdDRUVDZENBSmFpZ0NBTGlnSVJnZ0JrRUJhaUlHUVFKSERRQUxJQmdnQkxjaUdxSWhHU0FGUVRWcUlnY2dBMnNpQXlBQ1NDRUVJQU5CQUNBRFFRQktHeUFDSUFRYklnSkJOVWdFUUVRQUFBQUFBQUR3UDBIcEFDQUNheEIvdlVMLy8vLy8vLy8vLy84QWd5QVp2VUtBZ0lDQWdJQ0FnSUIvZzRTL0loc2hIQ0FaUkFBQUFBQUFBUEEvUVRVZ0Ftc1FmeEN3QXlJZElSZ2dHeUFaSUIyaG9DRVpCVVFBQUFBQUFBQUFBQ0VZQ3lBQUlBRkJBbXBCL3dCeElnWkhCRUFDUUNBR1FRSjBJQWxxS0FJQUlnWkJnTXExN2dGSkJId2dCa1ZCQUNBQlFRTnFRZjhBY1NBQVJoc05BU0FhUkFBQUFBQUFBTkEvb2lBWW9BVWdCa0dBeXJYdUFVY0VRQ0FhUkFBQUFBQUFBT2cvb2lBWW9DRVlEQUlMSUFGQkEycEIvd0J4SUFCR0JId2dHa1FBQUFBQUFBRGdQNklnR0tBRklCcEVBQUFBQUFBQTZEK2lJQmlnQ3dzaEdBdEJOU0FDYTBFQlNnUjhJQmhFQUFBQUFBQUE4RDhRc0FORUFBQUFBQUFBQUFCaEJId2dHRVFBQUFBQUFBRHdQNkFGSUJnTEJTQVlDeUVZQ3lBWklCaWdJQnloSVJrZ0IwSC8vLy8vQjNGQmZpQVFhMG9FZkFKOElBVWdHWmxFQUFBQUFBQUFRRU5tUlNJQVFRRnphaUVGSUJrZ0dVUUFBQUFBQUFEZ1A2SWdBQnNoR1NBRlFUSnFJQkZNQkVBZ0dTQUVJQUFnQWlBRFIzSnhJQmhFQUFBQUFBQUFBQUJpY1VVTkFSb0xRZmp1QWtFaU5nSUFJQmtMQlNBWkN5QUZFSzhEQ3lFZUlBa2tCQ0FlQzRjSkF3aC9CWDREZkNBQUtBSUVJZ1VnQUNnQ2FFa0VmeUFBSUFWQkFXbzJBZ1FnQlMwQUFBVWdBQkJjQ3lFRkFrQUNRQU5BQWtBQ1FDQUZRUzVyRGdNREFRQUJDeUFBS0FJRUlnVWdBQ2dDYUVrRWZ5QUFJQVZCQVdvMkFnUWdCUzBBQUFVZ0FCQmNDeUVGUVFFaENBd0JDd3NNQVFzZ0FDZ0NCQ0lGSUFBb0FtaEpCSDhnQUNBRlFRRnFOZ0lFSUFVdEFBQUZJQUFRWEFzaUJVRXdSZ1JBQTM4Z0RVSi9mQ0VOSUFBb0FnUWlCU0FBS0FKb1NRUi9JQUFnQlVFQmFqWUNCQ0FGTFFBQUJTQUFFRndMSWdWQk1FWU5BRUVCSVFkQkFRc2hDQVZCQVNFSEN3c2dCU0VHUkFBQUFBQUFBUEEvSVJOQkFDRUZBMEFDUUNBR1FTQnlJUWtDUUFKQUlBWkJVR29pQzBFS1NRMEFJQVpCTGtZaURDQUpRWjkvYWtFR1NYSkZEUUlnREVVTkFDQUhCSDVCTGlFR0RBTUZRUUVoQnlBUEN5RU5EQUVMSUFsQnFYOXFJQXNnQmtFNVNoc2hCaUFQUWdoVEJFQWdCaUFGUVFSMGFpRUZCU0FQUWc1VEJId2dFMFFBQUFBQUFBQ3dQNklpRkNFVElCSWdGQ0FHdDZLZ0JTQUtRUUVnQmtVZ0NrRUFSM0lpQmhzaENpQVNJQklnRTBRQUFBQUFBQURnUDZLZ0lBWWJDeUVTQ3lBUFFnRjhJUTlCQVNFSUN5QUFLQUlFSWdZZ0FDZ0NhRWtFZnlBQUlBWkJBV28yQWdRZ0JpMEFBQVVnQUJCY0N5RUdEQUVMQ3lBSUJId0NmQ0FQUWdoVEJFQWdEeUVPQTBBZ0JVRUVkQ0VGSUE1Q0FYd2hFQ0FPUWdkVEJFQWdFQ0VPREFFTEN3c0NmaUFHUVNCeVFmQUFSZ1IrSUFBZ0JCQ3hBeUlPUW9DQWdJQ0FnSUNBZ0g5UkJINGdCRVVFUUNBQVFnQVFmRVFBQUFBQUFBQUFBQXdFQ3lBQUtBSm9CRUFnQUNBQUtBSUVRWDlxTmdJRUMwSUFCU0FPQ3dVZ0FDZ0NhQVJBSUFBZ0FDZ0NCRUYvYWpZQ0JBdENBQXNoRVNBRHQwUUFBQUFBQUFBQUFLSWdCVVVOQVJvZ0VRc2dEU0FQSUFjYlFnS0dRbUI4ZkNJTlFRQWdBbXVzVlFSQVFmanVBa0VpTmdJQUlBTzNSUC8vLy8vLy8rOS9va1QvLy8vLy8vL3ZmNklNQVFzZ0RTQUNRWlovYXF4VEJFQkIrTzRDUVNJMkFnQWdBN2RFQUFBQUFBQUFFQUNpUkFBQUFBQUFBQkFBb2d3QkN5QUZRWDlLQkVBRFFDQVNSQUFBQUFBQUFPQS9aa1VpQUVFQmN5QUZRUUYwY2lFRklCSWdFaUFTUkFBQUFBQUFBUEMvb0NBQUc2QWhFaUFOUW45OElRMGdCVUYvU2cwQUN3c0NmQUpBUWlBZ0FxeDlJQTE4SWc0Z0FheFRCRUFnRHFjaUFVRUFUQVJBUVFBaEFVSFVBQ0VBREFJTEMwSFVBQ0FCYXlFQUlBRkJOVWdOQUNBRHR5RVRSQUFBQUFBQUFBQUFEQUVMUkFBQUFBQUFBUEEvSUFBUWY3MUMvLy8vLy8vLy8vLy9BSU1nQTdjaUU3MUNnSUNBZ0lDQWdJQ0FmNE9FdndzaEZFUUFBQUFBQUFBQUFDQVNJQVZCQVhGRklBRkJJRWdnRWtRQUFBQUFBQUFBQUdKeGNTSUFHeUFUb2lBVUlCTWdBQ0FGYXJpaW9LQWdGS0VpRWtRQUFBQUFBQUFBQUdFRVFFSDQ3Z0pCSWpZQ0FBc2dFaUFOcHhDdkF3c0ZJQUFvQW1oRklnRkZCRUFnQUNBQUtBSUVRWDlxTmdJRUN5QUVCRUFnQVVVRVFDQUFJQUFvQWdSQmYybzJBZ1FnQVNBSFJYSkZCRUFnQUNBQUtBSUVRWDlxTmdJRUN3c0ZJQUJDQUJCOEN5QUR0MFFBQUFBQUFBQUFBS0lMQ3pZQkFuOGdBaUFBS0FJUUlBQW9BaFFpQkdzaUF5QURJQUpMR3lFRElBUWdBU0FERUlNQkdpQUFJQUFvQWhRZ0EybzJBaFFnQWdzdUFDQUFRZ0JTQkVBRFFDQUJRWDlxSWdFZ0FLZEJCM0ZCTUhJNkFBQWdBRUlEaUNJQVFnQlNEUUFMQ3lBQkN6VUFJQUJDQUZJRVFBTkFJQUZCZjJvaUFTQUNJQUNuUVE5eFFZQVVhaTBBQUhJNkFBQWdBRUlFaUNJQVFnQlNEUUFMQ3lBQkMrTUNBUVovSXdRaEF5TUVRZUFCYWlRRUl3UWpCVTRFUUVIZ0FSQUFDeUFEUWFBQmFpSUVRZ0EzQXdBZ0JFSUFOd01JSUFSQ0FEY0RFQ0FFUWdBM0F4Z2dCRUlBTndNZ0lBTkIwQUZxSWdVZ0FpZ0NBRFlDQUVFQUlBRWdCU0FEUWRBQWFpSUNJQVFRbndKQkFFZ0VmMEYvQlNBQUtBSk1RWDlLQkg5QkFRVkJBQXNhSUFBb0FnQWhCaUFBTEFCS1FRRklCRUFnQUNBR1FWOXhOZ0lBQ3lBQUtBSXdCRUFnQUNBQklBVWdBaUFFRUo4Q0lRRUZJQUFvQWl3aEJ5QUFJQU0yQWl3Z0FDQUROZ0ljSUFBZ0F6WUNGQ0FBUWRBQU5nSXdJQUFnQTBIUUFHbzJBaEFnQUNBQklBVWdBaUFFRUo4Q0lRRWdCd1JBSUFCQkFFRUFJQUFvQWlSQkgzRkJ5Z0ZxRVFRQUdpQUJRWDhnQUNnQ0ZCc2hBU0FBSUFjMkFpd2dBRUVBTmdJd0lBQkJBRFlDRUNBQVFRQTJBaHdnQUVFQU5nSVVDd3NnQUNBQUtBSUFJZ0FnQmtFZ2NYSTJBZ0JCZnlBQklBQkJJSEViQ3lFSUlBTWtCQ0FJQ3lrQ0FYOEJmQ0FCS0FJQVFRZHFRWGh4SWdJckF3QWhBeUFCSUFKQkNHbzJBZ0FnQUNBRE9RTUFDODBEQVFoL0lBRW9BZ3doQkNBQktBSVFJUWNnQWlnQ0ZDRURJQUVnQWlnQ0REWUNEQ0FCS0FJVUtBSVVJUVVnQXlnQ0ZDRUlJQU1nQUNnQ01DSUdCSDhEUUNBR0tBSUlJZ2tvQWdBb0FoUWhDaUFKSUFVZ0NDQUtRUWR4UVk0SmFoRUNBQ0FHS0FJQUlnWU5BQXNnQVNnQ0ZDZ0NGQVVnQlFzMkFoUWdBU0FETmdJVUlBY2dBellDQ0NBRElBYzJBZ2dnQXlBQk5nSU1JQUFvQWp3aUFRUkFBMEFnQVNnQ0NDSURLQUlBS0FJUUlRVWdBeUFDSUFWQi93RnhRWTRIYWhFQUFDQUJLQUlBSWdFTkFBc2dBQ2dDUENJQkJFQURRQ0FCS0FJSUlnTW9BZ0FvQWdnaEJTQURJQVFnQlVIL0FYRkJqZ2RxRVFBQUlBRW9BZ0FpQVEwQUN3c0xJQUlvQWdRaUFTQUFRWUFCYWlBQkd5QUNLQUlBSWdNMkFnQWdBMEVFYWlBQVFZUUJhaUFER3lBQk5nSUFJQUFnQUNnQ2ZFRi9hallDZkNBQ1FaQzBBaWdDQURZQ0FFR1F0QUlnQWpZQ0FDQUVLQUlFSWdFZ0FFSDBBR29nQVJzZ0JDZ0NBQ0lDTmdJQUlBSkJCR29nQUVINEFHb2dBaHNnQVRZQ0FDQUFJQUFvQW5CQmYybzJBbkFnQkNnQ0dDSUFSUVJBSUFSQm9MUUNLQUlBTmdJQVFhQzBBaUFFTmdJQUR3dEJHQ0FBSUFRb0Fod1FTQ0FFUWFDMEFpZ0NBRFlDQUVHZ3RBSWdCRFlDQUF2QUZ3TVRmd04rQVh3akJDRVZJd1JCc0FScUpBUWpCQ01GVGdSQVFiQUVFQUFMSUJWQm1BUnFJZ3RCQURZQ0FDQUJ2U0laUWdCVEJIOGdBWm9pQWIwaEdVRy8wUUVoRWtFQkJVSEMwUUZCeGRFQlFjRFJBU0FFUVFGeEd5QUVRWUFRY1JzaEVpQUVRWUVRY1VFQVJ3c2hFeUFWUVNCcUlRWWdGU0lOSVJFZ0RVR2NCR29pQ1VFTWFpRVFJQmxDZ0lDQWdJQ0FnUGovQUlOQ2dJQ0FnSUNBZ1BqL0FGRUVmeUFBUVNBZ0FpQVRRUU5xSWdNZ0JFSC8vM3R4RUhBZ0FDQVNJQk1RYlNBQVFlZlJBVUhhMFFFZ0JVRWdjVUVBUnlJRkcwSFMwUUZCMXRFQklBVWJJQUVnQVdJYlFRTVFiU0FBUVNBZ0FpQURJQVJCZ01BQWN4QndJQU1GQW44Z0FTQUxFTFFEUkFBQUFBQUFBQUJBb2lJQlJBQUFBQUFBQUFBQVlpSUhCRUFnQ3lBTEtBSUFRWDlxTmdJQUN5QUZRU0J5SWc5QjRRQkdCRUFnRWtFSmFpQVNJQVZCSUhFaURCc2hDRUVNSUFOcklnZEZJQU5CQzB0eVJRUkFSQUFBQUFBQUFDQkFJUndEUUNBY1JBQUFBQUFBQURCQW9pRWNJQWRCZjJvaUJ3MEFDeUFJTEFBQVFTMUdCSHdnSENBQm1pQWNvYUNhQlNBQklCeWdJQnloQ3lFQkN5QVFRUUFnQ3lnQ0FDSUdheUFHSUFaQkFFZ2JyQ0FRRUxrQklnZEdCRUFnQ1VFTGFpSUhRVEE2QUFBTElCTkJBbkloQ2lBSFFYOXFJQVpCSDNWQkFuRkJLMm82QUFBZ0IwRithaUlHSUFWQkQybzZBQUFnQTBFQlNDRUpJQVJCQ0hGRklRNGdEU0VGQTBBZ0JTQU1JQUdxSWdkQmdCUnFMUUFBY2pvQUFDQUJJQWUzb1VRQUFBQUFBQUF3UUtJaEFTQUZRUUZxSWdjZ0VXdEJBVVlFZnlBSklBRkVBQUFBQUFBQUFBQmhjU0FPY1FSL0lBY0ZJQWRCTGpvQUFDQUZRUUpxQ3dVZ0J3c2hCU0FCUkFBQUFBQUFBQUFBWWcwQUN3Si9Ba0FnQTBVTkFDQUZRWDRnRVd0cUlBTk9EUUFnRUNBRFFRSnFhaUFHYXlFSklBWU1BUXNnQlNBUUlCRnJJQVpyYWlFSklBWUxJUWNnQUVFZ0lBSWdDU0FLYWlJRElBUVFjQ0FBSUFnZ0NoQnRJQUJCTUNBQ0lBTWdCRUdBZ0FSekVIQWdBQ0FOSUFVZ0VXc2lCUkJ0SUFCQk1DQUpJQVVnRUNBSGF5SUhhbXRCQUVFQUVIQWdBQ0FHSUFjUWJTQUFRU0FnQWlBRElBUkJnTUFBY3hCd0lBTU1BUXNnQndSQUlBc2dDeWdDQUVGa2FpSUhOZ0lBSUFGRUFBQUFBQUFBc0VHaUlRRUZJQXNvQWdBaEJ3c2dCaUFHUWFBQ2FpQUhRUUJJR3lJSklRWURRQ0FHSUFHcklnZzJBZ0FnQmtFRWFpRUdJQUVnQ0xpaFJBQUFBQUJsemMxQm9pSUJSQUFBQUFBQUFBQUFZZzBBQ3lBSFFRQktCRUFnQnlFSUlBa2hCd05BSUFoQkhTQUlRUjFJR3lFTUlBWkJmR29pQ0NBSFR3UkFJQXl0SVJwQkFDRUtBMEFnQ3EwZ0NDZ0NBSzBnR29aOElodENnSlRyM0FPQUlSa2dDQ0FiSUJsQ2dKVHIzQU4rZlQ0Q0FDQVpweUVLSUFoQmZHb2lDQ0FIVHcwQUN5QUtCRUFnQjBGOGFpSUhJQW8yQWdBTEN5QUdJQWRMQkVBQ1FBTi9JQVpCZkdvaUNDZ0NBQTBCSUFnZ0Iwc0VmeUFJSVFZTUFRVWdDQXNMSVFZTEN5QUxJQXNvQWdBZ0RHc2lDRFlDQUNBSVFRQktEUUFMQlNBSElRZ2dDU0VIQzBFR0lBTWdBMEVBU0JzaERpQUpJUXdnQ0VFQVNBUi9JQTVCR1dwQkNXMUJBV29oQ2lBUFFlWUFSaUVVSUFZaEF3Ti9RUUFnQ0dzaUJrRUpJQVpCQ1VnYklRa2dCeUFEU1FSQVFRRWdDWFJCZjJvaEZrR0FsT3ZjQXlBSmRpRVhRUUFoQ0NBSElRWURRQ0FHSUFnZ0JpZ0NBQ0lZSUFsMmFqWUNBQ0FXSUJoeElCZHNJUWdnQmtFRWFpSUdJQU5KRFFBTElBY2dCMEVFYWlBSEtBSUFHeUVISUFnRVFDQURJQWcyQWdBZ0EwRUVhaUVEQ3dVZ0J5QUhRUVJxSUFjb0FnQWJJUWNMSUF3Z0J5QVVHeUlHSUFwQkFuUnFJQU1nQXlBR2EwRUNkU0FLU2hzaEF5QUxJQXNvQWdBZ0NXb2lDRFlDQUNBSVFRQklEUUFnQXlFSUlBY0xCU0FHSVFnZ0J3c2lBeUFJU1FSQUlBd2dBMnRCQW5WQkNXd2hCeUFES0FJQUlnbEJDazhFUUVFS0lRWURRQ0FIUVFGcUlRY2dDU0FHUVFwc0lnWlBEUUFMQ3dWQkFDRUhDeUFPUVFBZ0J5QVBRZVlBUmh0cklBOUI1d0JHSWhRZ0RrRUFSeUlXY1VFZmRFRWZkV29pQmlBSUlBeHJRUUoxUVFsc1FYZHFTQVIvSUFaQmdNZ0FhaUlHUVFsdElRc2dCaUFMUVFsc2F5SUdRUWhJQkVCQkNpRUpBMEFnQmtFQmFpRUtJQWxCQ213aENTQUdRUWRJQkVBZ0NpRUdEQUVMQ3dWQkNpRUpDeUFMUVFKMElBeHFRWVJnYWlJR0tBSUFJZ3NnQ1c0aER5QUdRUVJxSUFoR0loY2dDeUFKSUE5c2F5SUtSWEZGQkVCRUFRQUFBQUFBUUVORUFBQUFBQUFBUUVNZ0QwRUJjUnNoQVVRQUFBQUFBQURnUDBRQUFBQUFBQUR3UDBRQUFBQUFBQUQ0UHlBWElBb2dDVUVCZGlJUFJuRWJJQW9nRDBrYklSd2dFd1JBSUFHYUlBRWdFaXdBQUVFdFJpSVBHeUVCSUJ5YUlCd2dEeHNoSEFzZ0JpQUxJQXBySWdvMkFnQWdBU0Fjb0NBQllnUkFJQVlnQ1NBS2FpSUhOZ0lBSUFkQi81UHIzQU5MQkVBRFFDQUdRUUEyQWdBZ0JrRjhhaUlHSUFOSkJFQWdBMEY4YWlJRFFRQTJBZ0FMSUFZZ0JpZ0NBRUVCYWlJSE5nSUFJQWRCLzVQcjNBTkxEUUFMQ3lBTUlBTnJRUUoxUVFsc0lRY2dBeWdDQUNJS1FRcFBCRUJCQ2lFSkEwQWdCMEVCYWlFSElBb2dDVUVLYkNJSlR3MEFDd3NMQ3lBRElRa2dCeUVLSUFaQkJHb2lBeUFJSUFnZ0Ewc2JCU0FESVFrZ0J5RUtJQWdMSWdNZ0NVc0Vmd04vQW44Z0EwRjhhaUlIS0FJQUJFQWdBeUVIUVFFTUFRc2dCeUFKU3dSL0lBY2hBd3dDQlVFQUN3c0xCU0FESVFkQkFBc2hDeUFVQkg4Z0ZrRUJjeUFPYWlJRElBcEtJQXBCZTBweEJIOGdBMEYvYWlBS2F5RUlJQVZCZjJvRklBTkJmMm9oQ0NBRlFYNXFDeUVGSUFSQkNIRUVmeUFJQlNBTEJFQWdCMEY4YWlnQ0FDSU9CRUFnRGtFS2NBUkFRUUFoQXdWQkNpRUdRUUFoQXdOQUlBTkJBV29oQXlBT0lBWkJDbXdpQm5CRkRRQUxDd1ZCQ1NFREN3VkJDU0VEQ3lBSElBeHJRUUoxUVFsc1FYZHFJUVlnQlVFZ2NrSG1BRVlFZnlBSUlBWWdBMnNpQTBFQUlBTkJBRW9iSWdNZ0NDQURTQnNGSUFnZ0JpQUthaUFEYXlJRFFRQWdBMEVBU2hzaUF5QUlJQU5JR3dzTEJTQU9DeUVEUVFBZ0Ntc2hCaUFBUVNBZ0FpQUZRU0J5UWVZQVJpSVBCSDlCQUNFSUlBcEJBQ0FLUVFCS0d3VWdFQ0FHSUFvZ0NrRUFTQnVzSUJBUXVRRWlCbXRCQWtnRVFBTkFJQVpCZjJvaUJrRXdPZ0FBSUJBZ0JtdEJBa2dOQUFzTElBWkJmMm9nQ2tFZmRVRUNjVUVyYWpvQUFDQUdRWDVxSWdnZ0JUb0FBQ0FRSUFockN5QVRRUUZxSUFOcVFRRWdCRUVEZGtFQmNTQURRUUJISWhRYmFtb2lEaUFFRUhBZ0FDQVNJQk1RYlNBQVFUQWdBaUFPSUFSQmdJQUVjeEJ3SUE4RVFDQU5RUWxxSWdvaEN5QU5RUWhxSVFnZ0RDQUpJQWtnREVzYklna2hCZ05BSUFZb0FnQ3RJQW9RdVFFaEJTQUdJQWxHQkVBZ0JTQUtSZ1JBSUFoQk1Eb0FBQ0FJSVFVTEJTQUZJQTFMQkVBZ0RVRXdJQVVnRVdzUVlob0RRQ0FGUVg5cUlnVWdEVXNOQUFzTEN5QUFJQVVnQ3lBRmF4QnRJQVpCQkdvaUJTQU1UUVJBSUFVaEJnd0JDd3NnQkVFSWNVVWdGRUVCYzNGRkJFQWdBRUg4aGdKQkFSQnRDeUFBUVRBZ0JTQUhTU0FEUVFCS2NRUi9BMzhnQlNnQ0FLMGdDaEM1QVNJR0lBMUxCRUFnRFVFd0lBWWdFV3NRWWhvRFFDQUdRWDlxSWdZZ0RVc05BQXNMSUFBZ0JpQURRUWtnQTBFSlNCc1FiU0FEUVhkcUlRWWdCVUVFYWlJRklBZEpJQU5CQ1VweEJIOGdCaUVEREFFRklBWUxDd1VnQXd0QkNXcEJDVUVBRUhBRklBQkJNQ0FKSUFjZ0NVRUVhaUFMR3lJTFNTQURRWDlLY1FSL0lBUkJDSEZGSVJJZ0RVRUphaUlNSVJOQkFDQVJheUVSSUExQkNHb2hDaUFKSVFjZ0F5RUZBMzhnRENBSEtBSUFyU0FNRUxrQklnTkdCRUFnQ2tFd09nQUFJQW9oQXdzQ1FDQUhJQWxHQkVBZ0EwRUJhaUVHSUFBZ0EwRUJFRzBnQlVFQlNDQVNjUVJBSUFZaEF3d0NDeUFBUWZ5R0FrRUJFRzBnQmlFREJTQURJQTFORFFFZ0RVRXdJQU1nRVdvUVlob0RRQ0FEUVg5cUlnTWdEVXNOQUFzTEN5QUFJQU1nRXlBRGF5SURJQVVnQlNBRFNoc1FiU0FIUVFScUlnY2dDMGtnQlNBRGF5SUZRWDlLY1EwQUlBVUxCU0FEQzBFU2FrRVNRUUFRY0NBQUlBZ2dFQ0FJYXhCdEN5QUFRU0FnQWlBT0lBUkJnTUFBY3hCd0lBNExDeUVBSUJVa0JDQUNJQUFnQUNBQ1NCc0xpUU1CQ1g4Z0FCQzRBU0lDUVFFMkFnd2dBa0VCTmdJSVFSZ1FTU0lGSUFJMkFoQWdCU0FCTmdJTUlBVWdBU2dDRUNJRE5nSUlJQU1nQlRZQ0NDQUZJQUVvQWhRb0FoUTJBaFFnQlVFQU5nSUFJQVVnQWlnQ0hDSUROZ0lFSUFNZ0FrRVlhaUlFSUFRb0FnQWJJQVUyQWdBZ0FpQUZOZ0ljSUFJZ0FpZ0NGRUVCYWpZQ0ZFRVlFRWtpQXlBQ05nSVFJQU1nQVNnQ0ZDSUdOZ0lJSUFOQkFEWUNBQ0FESUFJb0Fod2lCellDQkNBSElBUWdCQ2dDQUJzZ0F6WUNBQ0FDSUFNMkFod2dBaUFDS0FJVVFRRnFOZ0lVSUFZb0FoUWhCeUFBSUFJZ0FTZ0NEQ0FESUFZUXNnTWhCQ0FCS0FJVUlnWW9BaFFoQ0NBQUtBSXdJZ0JGQkVBZ0JDZ0NGQ0FETmdJSUlBTWdCRFlDRENBR0lBUTJBZ3dnQVNBQ05nSU1JQUVnQlRZQ0ZDQUVEd3NEUUNBQUtBSUlJZ1lvQWdBb0FoUWhDU0FHSUFnZ0J5QUpRUWR4UVk0SmFoRUNBQ0FBS0FJQUlnQU5BQXNDZnlBQktBSVVJUW9nQkNnQ0ZDQUROZ0lJSUFNZ0JEWUNEQ0FLQ3lBRU5nSU1JQUVnQWpZQ0RDQUJJQVUyQWhRZ0JBc0dBQ0FBSkFRTGNRRURmeU1FSVFNakJFRWdhaVFFSXdRakJVNEVRRUVnRUFBTElBTkJFR29oQkNBQVFRRTJBaVFnQUNnQ0FFSEFBSEZGQkVBZ0F5QUFLQUk4TmdJQUlBTkJrNmdCTmdJRUlBTWdCRFlDQ0VFMklBTVFKUVJBSUFCQmZ6b0FTd3NMSUFBZ0FTQUNFTUlESVFVZ0F5UUVJQVVMOVFFQkJIOGpCQ0VFSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBRUlBRTJBZ0FnQkNBQ0lBQW9BakFpQTBFQVIyczJBZ1FnQkNBQUtBSXNOZ0lJSUFRZ0F6WUNEQ0FFUVJCcUlnTWdBQ2dDUERZQ0FDQURJQVEyQWdRZ0EwRUNOZ0lJUVpFQklBTVFKeUlEUVlCZ1N3UkFRZmp1QWtFQUlBTnJOZ0lBUVg4aEF3c2dBMEVCU0FSQUlBQWdBQ2dDQUNBRFFUQnhRUkJ6Y2pZQ0FDQURJUUlGSUFNZ0JDZ0NCQ0lHU3dSQUlBQWdBQ2dDTENJRk5nSUVJQUFnQlNBRElBWnJhallDQ0NBQUtBSXdCRUFnQUNBRlFRRnFOZ0lFSUFFZ0FrRi9hbW9nQlN3QUFEb0FBQXNGSUFNaEFnc0xJQVFrQkNBQ0N3WUFRZmp1QWd1SkFRSUNmd0YrSXdRaEF5TUVRU0JxSkFRakJDTUZUZ1JBUVNBUUFBc2dBMEVJYWlJRUlBQW9BancyQWdBZ0JDQUJRaUNJUGdJRUlBUWdBVDRDQ0NBRUlBTTJBZ3dnQkNBQ05nSVFRWXdCSUFRUUtDSUFRWUJnU3dSL1FmanVBa0VBSUFCck5nSUFRWDhGSUFBTFFRQklCSDRnQTBKL053TUFRbjhGSUFNcEF3QUxJUVVnQXlRRUlBVUxTZ0VCZnlNRUlRRWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUVnQUNnQ1BEWUNBRUVHSUFFUUpDSUFRWUJnU3dSQVFmanVBa0VBSUFCck5nSUFRWDhoQUFzZ0FTUUVJQUFMckFNQkEzOGdBQ2dDUENJQkJFQURRQ0FCS0FJSUlnSW9BZ0FvQWh3aEF5QUNJQU5CL3dOeFFZUURhaEVCQUNBQktBSUFJZ0VOQUFzTElBQW9BblFpQVFSQUEwQWdBU2dDR0NJQ0JFQkJHQ0FDSUFFb0Fod1FTQXNnQVNnQ0FDSUJEUUFMSUFBb0FuUWhBUXNnQVFSQVFTQWdBU0FBS0FKNEVFZ2dBRUVBTmdKNElBQkJBRFlDZENBQVFRQTJBbkFMSUFBb0FvQUJJZ0VFUUVFY0lBRWdBQ2dDaEFFUVNDQUFRUUEyQW9RQklBQkJBRFlDZ0FFZ0FFRUFOZ0o4Q3lBQVFRQTJBZ2dnQUVFQU5nSUVJQUJCRURZQ0RDQUFLQUlZSWdFRVFDQUJLQUlJSWdJb0FnQW9BZ3doQXlBQ1FSQWdBMEgvQVhGQmpnZHFFUUFBSUFFb0FnQWlBUVJBQTBBZ0FTZ0NDQ0lDS0FJQUtBSU1JUU1nQWlBQUtBSU1JQU5CL3dGeFFZNEhhaEVBQUNBQktBSUFJZ0VOQUFzTEN5QUFLQUlrSWdFRVFBTkFJQUVvQWdnaUFpZ0NBQ2dDRENFRElBSWdBQ2dDRUNBRFFmOEJjVUdPQjJvUkFBQWdBU2dDQUNJQkRRQUxDeUFBS0FJd0lnRkZCRUFQQ3dOQUlBRW9BZ2dpQWlnQ0FDZ0NEQ0VESUFJZ0FDZ0NFRUVCZENBRFFmOEJjVUdPQjJvUkFBQWdBU2dDQUNJQkRRQUxDN01CQWdGL0Fud2dBRVQrbE1aSE1FckZWbVFFZkVRQUFBQUFBQUR3UHlFRFJQSjVjeitRREJncEJTQUFSUEo1Y3orUURCZ3BZd1I4UlA2VXhrY3dTc1ZXQlVFQUR3c0xJUUJCQVVHQWxPdmNBeEJoUVFGcXQwUUFBQUFCWmMzTlFhTWdBNkFoQkVFQVFRRVFZU0VDUVFGQmdKVHIzQU1RWVVFQmFyZEVBQUFBQVdYTnpVR2pJQU9nSWdNZ0E1cEJBRUVCRUdGRkd5QUFvaUVESUFFZ0JKb2dCQ0FDR3lBQW9qa0RBQ0FCSUFNNUF3aEJBUXZUQmdJQ2Z3TjhJd1FoQmlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFSUFOd01BSUFCQ0FEY0RDQ0FCS3dNQUlnb2dBcUVoQ0NBQkt3TUlJZ0lnQktFaENTQUZJQUtoSWdRZ0NTQUVJQWxqR3lJRklBTWdDcUVpQWlBSUlBSWdDR01iSWdNZ0JTQURZeHNpQTBRQUFBQUFBQUFBQUdRRVFDQURSSnFabVptWm1iay9vaUVLQTBBQ1FFRUJRWUNVNjl3REVHRkJBV3EzUkFBQUFBRmx6YzFCbzBRQUFBQUFBQURndjZCRUFBQUFBQUFBQUVDaUlRUkJBVUdBbE92Y0F4QmhRUUZxdDBRQUFBQUJaYzNOUWFORUFBQUFBQUFBNEwrZ1JBQUFBQUFBQUFCQW9pRUlJQUFnQVNzREFDSUNJQU1nQktKRW1wbVptWm1adVQraW9DSUVPUU1BSUFBZ0FTc0RDQ0lGSUFNZ0NLSkVtcG1abVptWnVUK2lvQ0lJT1FNSUlBSkJvTk1DS3dNQUlna2dCS0JqUlNBQ0lBUWdDYUZrUlhJZ0JTQUpJQWlnWTBVZ0JTQUlJQW1oWkVWeWNnUkFJQUlnQktFaUFpQUNvaUFGSUFpaElnSWdBcUtnbnlBS1prVU5BUXNNQVFzTElBWWtCQThMQWtBZ0EwUUFBQUFBQUFBQUFHSUVRRUhBOUFKQjJ0QUJRY01BRUdBYUlBWkJ3UFFDUVo3UkFVRUdFR0FpQUNBQUtBSUFRWFJxS0FJQWFpZ0NIQ0lCTmdJQUlBRWdBU2dDQkVFQmFqWUNCQXdCQ3lBSVJBQUFBQUFBQUFBQVpBUjhJQWlhQlNBQ1JBQUFBQUFBQUFBQUlBSkVBQUFBQUFBQUFBQmtHd3NpQWtRQUFBQUFBQUFBQUdJZ0NVUUFBQUFBQUFBQUFHUUVmQ0FKbWdVZ0JFUUFBQUFBQUFBQUFDQUVSQUFBQUFBQUFBQUFaQnNMSWdSRUFBQUFBQUFBQUFCaWNrVUVRQ0FHUWNEMEFrRzEwQUZCSkJCZ0lnQWdBQ2dDQUVGMGFpZ0NBR29vQWh3aUFUWUNBQ0FCSUFFb0FnUkJBV28yQWdRTUFRc0RRRUVCUVlDVTY5d0RFR0ZCQVdxM1JBQUFBQUZsemMxQm95RURRUUZCZ0pUcjNBTVFZVUVCYXJkRUFBQUFBV1hOelVHaklRb2dBQ0FCS3dNQUlnVWdBaUFEb2tTYW1abVptWm01UDZLZ0lnZzVBd0FnQUNBQkt3TUlJZ2tnQkNBS29rU2FtWm1abVptNVA2S2dJZ281QXdnZ0JTQUlRYURUQWlzREFDSURvR05GSUFVZ0NDQURvV1JGY2lBSklBTWdDcUJqUlNBSklBb2dBNkZrUlhKeVJRMEFDeUFHSkFRUEN5QUdRYWo3QWhCVElnRW9BZ0FvQWh3aEJ5QUJRUW9nQjBFL2NVR0tBV29SQXdBaEFTQUdFRlFnQUNBQkVLUUJJQUFRUlNBR0pBUUxad0lCZndOOFFiQUJFRjhpQVJDU0FTQUFLQUlFSWdBckF4QWhBaUFBS3dNSUlBQXJBeGhFQUFBQUFBQUE0RCtpSWdPZ0lRUWdBU0FBS0FJQVFRRnFOZ0lBSUFFZ0JEa0RDQ0FCSUFJNUF4QWdBU0FET1FNWUlBRWdBRFlDbUFFZ0FDQUJOZ0tvQVF2VEFnRUZmeUFBS0FJOElnTUVRQU5BSUFNb0FnZ2lBaWdDQUNnQ0VDRUVJQUlnQVNBRVFmOEJjVUdPQjJvUkFBQWdBeWdDQUNJRERRQUxDeUFCS0FJTUlRTWdBU2dDRUNJRUtBSUVJZ1VnQVNnQ0NDSUNRUmhxSUFVYklBUW9BZ0FpQmpZQ0FDQUdRUVJxSUFKQkhHb2dCaHNnQlRZQ0FDQUNJQUlvQWhSQmYybzJBaFFnQkVHQXRBSW9BZ0EyQWdCQmdMUUNJQVEyQWdBZ0FpQUNLQUlNUVg5cU5nSU1JQUVvQWhRaUFpZ0NCQ0lFSUFOQkdHb2dCQnNnQWlnQ0FDSUZOZ0lBSUFWQkJHb2dBMEVjYWlBRkd5QUVOZ0lBSUFNZ0F5Z0NGRUYvYWpZQ0ZDQUNRWUMwQWlnQ0FEWUNBRUdBdEFJZ0FqWUNBQ0FESUFNb0FnaEJmMm8yQWdnZ0FTZ0NCQ0lESUFCQmdBRnFJQU1iSUFFb0FnQWlBallDQUNBQ1FRUnFJQUJCaEFGcUlBSWJJQU0yQWdBZ0FDQUFLQUo4UVg5cU5nSjhJQUZCa0xRQ0tBSUFOZ0lBUVpDMEFpQUJOZ0lBQzJJQ0FYOENmRUd3QVJCZklnRVFrZ0VnQUNnQ0JDSUFLd01JSVFJZ0FDc0RFQ0VESUFFZ0FDZ0NBRUVCYWpZQ0FDQUJJQUk1QXdnZ0FTQURPUU1RSUFFZ0FDc0RHRVFBQUFBQUFBRGdQNkk1QXhnZ0FTQUFOZ0tZQVNBQUlBRTJBcVFCQzJ3Q0FYOERmRUd3QVJCZklnRVFrZ0VnQUNnQ0JDSUFLd01ZUkFBQUFBQUFBT0Evb2lFQ0lBQXJBd2dnQXFBaEF5QUFLd01RSUFLZ0lRUWdBU0FBS0FJQVFRRnFOZ0lBSUFFZ0F6a0RDQ0FCSUFRNUF4QWdBU0FDT1FNWUlBRWdBRFlDbUFFZ0FDQUJOZ0tnQVF0bkFnRi9BM3hCc0FFUVh5SUJFSklCSUFBb0FnUWlBQ3NEQ0NFQ0lBQXJBeEFnQUNzREdFUUFBQUFBQUFEZ1A2SWlBNkFoQkNBQklBQW9BZ0JCQVdvMkFnQWdBU0FDT1FNSUlBRWdCRGtERUNBQklBTTVBeGdnQVNBQU5nS1lBU0FBSUFFMkFwd0JDK01DQVF4L0FuOGdBQ2dDQkNJQ1FYOUtJQUZCQUVweEJIOGdBRUVVYWlFSlFRRWhBMEYvSVFZRFFFRUFJQUlRWVNJRVFRSjBJQUFvQWdBaUIyb29BZ0FpQ0NnQ0VDSUxRUUowSUFBb0FqaHFLQUlBSVFVZ0FrRUNkQ0FIYWlJTUtBSUFJUWNnRENBSU5nSUFJQUFvQWdBZ0JFRUNkR29nQnpZQ0FDQUpLQUlBSWdnZ0MwRUNkR29nQWpZQ0FDQUhLQUlRUVFKMElBaHFJQVEyQWdBZ0FrRi9haUVFSUFVZ0NpQURRUUZHSUFVZ0NrcHlJZ1ViSVFvZ0FpQUdJQVViSVFZZ0EwRUJhaUVGSUFNZ0FVZ2dBa0VBU25FRVFDQUZJUU1nQkNFQ0RBRUxDeUFBS0FJRUlRSWdDUVZCZnlFR0lBQkJGR29MSVEwZ0FDZ0NBQ0lESUFaQkFuUnFLQUlBSVFFZ0FrRUNkQ0FEYWlJRktBSUFJUU1nQlNBQk5nSUFJQUFvQWdBZ0JrRUNkR29nQXpZQ0FDQU5DeWdDQUNJRUlBRW9BaEJCQW5ScUlBSTJBZ0FnQXlnQ0VFRUNkQ0FFYWlBR05nSUFJQUFnQUNnQ0JFRi9hallDQkNBQkN6a0JBMzhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNRUUZxSWdNZ0Fpd0FBRG9BQUNBQUlBRVFvZ2NoQkNBQ0pBUWdCQXZqQWdFTWZ3Si9JQUFvQWdRaUFrRi9TaUFCUVFCS2NRUi9JQUJCRkdvaENVRUJJUU5CZnlFR0EwQkJBQ0FDRUdFaUJFRUNkQ0FBS0FJQUlnZHFLQUlBSWdnb0FoQWlDMEVDZENBQUtBSTRhaWdDQUNFRklBSkJBblFnQjJvaURDZ0NBQ0VISUF3Z0NEWUNBQ0FBS0FJQUlBUkJBblJxSUFjMkFnQWdDU2dDQUNJSUlBdEJBblJxSUFJMkFnQWdCeWdDRUVFQ2RDQUlhaUFFTmdJQUlBSkJmMm9oQkNBRklBb2dBMEVCUmlBRklBcEljaUlGR3lFS0lBSWdCaUFGR3lFR0lBTkJBV29oQlNBRElBRklJQUpCQUVweEJFQWdCU0VESUFRaEFnd0JDd3NnQUNnQ0JDRUNJQWtGUVg4aEJpQUFRUlJxQ3lFTklBQW9BZ0FpQXlBR1FRSjBhaWdDQUNFQklBSkJBblFnQTJvaUJTZ0NBQ0VESUFVZ0FUWUNBQ0FBS0FJQUlBWkJBblJxSUFNMkFnQWdEUXNvQWdBaUJDQUJLQUlRUVFKMGFpQUNOZ0lBSUFNb0FoQkJBblFnQkdvZ0JqWUNBQ0FBSUFBb0FnUkJmMm8yQWdRZ0FRdmxBUUVEZnlBQUtBSThJZ0lFUUFOQUlBSW9BZ2dpQXlnQ0FDZ0NDQ0VFSUFNZ0FTQUVRZjhCY1VHT0Iyb1JBQUFnQWlnQ0FDSUNEUUFMQ3lBQktBSVlJZ0lFUUFOQUlBQWdBaWdDRENBQUtBSUFLQUlNUWY4QmNVR09CMm9SQUFBZ0FTZ0NHQ0lDRFFBTEN5QUJLQUlFSWdJZ0FFSDBBR29nQWhzZ0FTZ0NBQ0lETmdJQUlBTkJCR29nQUVINEFHb2dBeHNnQWpZQ0FDQUFJQUFvQW5CQmYybzJBbkFnQVNnQ0dDSUFSUVJBSUFGQm9MUUNLQUlBTmdJQVFhQzBBaUFCTmdJQUR3dEJHQ0FBSUFFb0Fod1FTQ0FCUWFDMEFpZ0NBRFlDQUVHZ3RBSWdBVFlDQUFzNUFRTi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FrRUJhaUlESUFJc0FBQTZBQUFnQUNBQkVLUUhJUVFnQWlRRUlBUUxsZ0lCQkg4akJDRURJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFEUVFScUlRUWdBQ0FCRU1vRElBQkJPR29nQVNnQ0RFRi9haERtQWlBQUtBSTBJZ1VFUUNBRElBQW9BakEyQWdBZ0JDQURLQUlBTmdJQUlBVWdCQkJOQ3lBQUlBRTJBalFnQUNBQklBQkJMR29RV1RZQ01DQUJLQUowSWdGRkJFQWdBeVFFRHdzZ0FpZ0NEQ0VHSUFBb0FqZ2hCQ0FCSVFBRFFDQUFJZ0lvQWhBaUFFRUNkQ0FFYWlBQVFaZ0JiQ0FHYWlnQ0tEWUNBQ0FDS0FJWUlnQUVRQU5BSUFBb0Fnd2lCU2dDQ0NJQklBSkdCRUFnQlNnQ0RDRUJDeUFDS0FJUVFRSjBJQVJxSWdVZ0FTZ0NFRUdZQVd3Z0Jtb29BaWdnQlNnQ0FHbzJBZ0FnQUNnQ0FDSUFEUUFMQ3lBQ0tBSUFJZ0FOQUFzZ0F5UUVDMzRCQlg5QkFDQUFLQUlFRUdFaUJFRUNkQ0FBS0FJQUlnRnFLQUlBSVFJZ0FDZ0NCQ0lGUVFKMElBRnFJZ01vQWdBaEFTQURJQUkyQWdBZ0FDZ0NBQ0FFUVFKMGFpQUJOZ0lBSUFBb0FoUWlBeUFDS0FJUVFRSjBhaUFGTmdJQUlBRW9BaEJCQW5RZ0Eyb2dCRFlDQUNBQUlBQW9BZ1JCZjJvMkFnUWdBZ3RvQUNBQVFRQTJBaUFnQUVGL05nSWtJQUJDQURjQ0RDQUFRZ0EzQWhRZ0FFRUFOZ0ljSUFCQi9PSUFOZ0lJSUFCQkFEWUNSQ0FBUVg4MkFrZ2dBRUlBTndJd0lBQkNBRGNDT0NBQVFRQTJBa0FnQUVIODRnQTJBaXdnQUVGL05nSUVJQUJCQURZQ0FBdGNBZ0YvQW53Z0FDd0FCRVVFUUNBQ0t3TUFJUVFnQWlzRENDRUZJQUFnQVRrREVDQUFJQVE1QXhnZ0FDQUZPUU1nRHdzZ0FDQUJPUU00SUFJZ0FFRkFheUlEUmdSQUR3c2dBeUFDS3dNQU9RTUFJQUFnQWlzRENEa0RTQXNTQUNBQUVLVUJJQUJGQkVBUEN5QUFFRU1MYWdFRWZ5QUFMQUFFUlFSQUR3c2dBQ2dDVkNFQklBQW9BalFpQkVFQVRnUkFBMEFnQWtFQ2RDQUJhaWdDQUNJREJFQWdBeEJESUFBb0FqUWhCQ0FBS0FKVUlRRUxJQUpCQVdvaEF5QUNJQVJCQVhSSUJFQWdBeUVDREFFTEN3c2dBVVVFUUE4TElBRVFRd3VvQWdFRmZ5QUFRWDhnQVVFQmFpSUZRUUowSUFWQi8vLy8vd05MR3hCZk5nSlVJQUZCQUVnaUJBUkFEd3NEUUVGL0lBSkJBV29pQTBFRGRDQURRZi8vLy84QlN4c1FYeUVHSUFBb0FsUWdBa0VDZEdvZ0JqWUNBQ0FESUFWSEJFQWdBeUVDREFFTEN5QUVCRUFQQ3lBQUtBSlVJUU5CQUNFQ0EwQWdBa0VDZENBRGFpZ0NBQ0lFSUFKQkEzUnFSQUFBQUFBQUFQQS9PUU1BSUFSRUFBQUFBQUFBOEQ4NUF3QWdBa0VCYWlJQ0lBVkhEUUFMSUFGQkFrZ0VRQThMSUFBb0FsUWlCQ2dDQkNFQ1FRSWhBUU5BSUFGQkFuUWdCR29vQWdBaEEwRUJJUUFEUUNBQVFRTjBJQU5xSUFCQmYycEJBM1FnQW1vckF3QWdBRUVEZENBQ2Fpc0RBS0E1QXdBZ0FFRUJhaUlBSUFGSERRQUxJQUZCQVdvaUFTQUZSd1JBSUFNaEFnd0JDd3NMd2dFQkFYOGpCQ0VJSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQktBSndJQUFvQWdCSUJFQWdBRUVBT2dBRUlBZ2dBeXNEQURrREFDQUlJQU1yQXdnNUF3Z2dBRUVJYWlBQ0lBaEJBQkNxQWlBSUpBUVBDeUFBUVFFNkFBUWdBQ0FFUVFFZ0JFRUJTaHMyQWpBZ0FDQUZRUUVnQlVFQlNoc2lCRFlDTkNBQUlBWTJBaWdnQUNBSE5nSXNJQUJCUUdzaUFTQURSd1JBSUFFZ0F5c0RBRGtEQUNBQUlBTXJBd2c1QTBnTElBQWdBamtET0NBQUlBUkJBWFFRclFjZ0NDUUVDMXdCQVg4Z0FFSGc3QUEyQWdBZ0FDZ0NCQ0lCUlFSQUlBQkI0TE1DS0FJQU5nSUFRZUN6QWlBQU5nSUFEd3RCRENBQklBQW9BZ2dRU0NBQVFRQTJBZ2dnQUVFQU5nSUVJQUJCNExNQ0tBSUFOZ0lBUWVDekFpQUFOZ0lBQzF3QkFYOGdBRUdJN1FBMkFnQWdBQ2dDQkNJQlJRUkFJQUJCNExNQ0tBSUFOZ0lBUWVDekFpQUFOZ0lBRHd0Qk1DQUJJQUFvQWdnUVNDQUFRUUEyQWdnZ0FFRUFOZ0lFSUFCQjRMTUNLQUlBTmdJQVFlQ3pBaUFBTmdJQUN3Y0FJQUVyQXdnTDhBUUNCWDhDZkNNRUlRWWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUFvQW5RaUJRUkFRUUFoQUFOQUlBRW9BZ3dpQkNBRktBSVFJZ2RCbUFGc2Fpc0RBQ0VKSUFkQm1BRnNJQVJxS3dNSUlRb2dBaUFDS0FJTVFRRnFOZ0lNUVRBUVNTRUVJQUlvQWdnaEJ5QUVRUUEyQWdBZ0JDQUhOZ0lFSUFRZ0JUWUNDQ0FFSUFrNUF4QWdCQ0FBTmdJWUlBUkJBRFlDSENBRVFRQTJBaUFnQkVFQU9nQWtJQVFnQmk0QUV6c0FKU0FFSUFZc0FCVTZBQ2NnQkVFQU5nSW9JQUlvQWdRRVFDQUNLQUlJSUFRMkFnQUZJQUlnQkRZQ0JBc2dBaUFFTmdJSUlBTWdBeWdDREVFQmFqWUNERUV3RUVraEFDQURLQUlJSVFRZ0FFRUFOZ0lBSUFBZ0JEWUNCQ0FBSUFVMkFnZ2dBQ0FLT1FNUUlBQWdDRFlDR0NBQVFRQTJBaHdnQUVFQU5nSWdJQUJCQURvQUpDQUFJQVl1QUJBN0FDVWdBQ0FHTEFBU09nQW5JQUJCQURZQ0tDQURLQUlFQkVBZ0F5Z0NDQ0FBTmdJQUJTQURJQUEyQWdRTElBTWdBRFlDQ0NBQ0tBSUlJZ1FoQ0NBRUlBVTJBZ2dnQkNBSk9RTVFJQVFnQURZQ0dDQUVRUUEyQWh3Z0JFRUFOZ0lnSUFSQkFEb0FKQ0FFUVFBMkFpZ2dBeWdDQ0NJRUlBVTJBZ2dnQkNBS09RTVFJQVFnQ0RZQ0dDQUVRUUEyQWh3Z0JFRUFOZ0lnSUFSQkFEb0FKQ0FFUVFBMkFpZ2dCU2dDQUNJRkRRQUxDeUFHUVFNMkFnZ2dCa0dFN2dBMkFnd2dBaUFHRU0wRElBSW9BZ1FpQlFSQUEwQWdCU2dDR0NBRk5nSVlJQVVvQWdBaUJRMEFDd3NnQXlBR0VNMERJQU1vQWdRaUJRUkFBMEFnQlNnQ0dDQUZOZ0lZSUFVb0FnQWlCUTBBQ3dzZ0JpZ0NEQ2dDQkNJQVJRUkFJQVlrQkE4TElBWW9BZ0FnQUVIL0EzRkJoQU5xRVFFQUlBWWtCQXRjQVFGL0lBQkJpTzBBTmdJQUlBQW9BZ1FpQVVVRVFDQUFRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FEWUNBQThMUVRBZ0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQ0FBUWRDekFpZ0NBRFlDQUVIUXN3SWdBRFlDQUFzeUFRRi9JQUJCaU8wQU5nSUFJQUFvQWdRaUFVVUVRQThMUVRBZ0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQXNRQUNBQUtBSUFLQUlBS0FJQUtBSUlDd2NBSUFFb0FoZ0xDZ0FnQVNnQ0VDZ0NJQXZuQ0FFS2Z5TUVJUWdqQkVHQUFXb2tCQ01FSXdWT0JFQkJnQUVRQUFzZ0NFRWdhaUlLUVFBMkFnQWdDa0VBTmdJZ0lBcENBRGNEQ0NBS1FnQTNBeEFnQ2tFQU5nSVlJQXBCQURvQUhDQUlRZ0EzQW13Z0NFSUFOd0pnSUFNZ0FDZ0NJRFlDQUNBRUlBQW9BaVEyQWdCQkVCQkpJZ0JCQURZQ0JDQUFRUUEyQWdnZ0FFSDA3QUEyQWdBZ0FFRUFOZ0lNSUFFZ0FEWUNBRUVRRUVraUFFRUFOZ0lFSUFCQkFEWUNDQ0FBUWZUc0FEWUNBQ0FBUVFBMkFnd2dBaUFBTmdJQUlBWUVRQ0FCS0FJQUlRQWdBU0FES0FJQU5nSUFJQU1nQURZQ0FDQUNLQUlBSVFBZ0FpQUVLQUlBTmdJQUlBUWdBRFlDQUNBQklRa2dBeUVCSUFJaEFDQUVJUUlGSUFNaENTQUVJUUFMSUFoQjJBQnFJZ01nQURZQ0FDQUlRUkJxSWd4Qk1EWUNDQ0FNUWNUdEFEWUNEQ0FJUVRFMkFnZ2dDRUhVN1FBMkFnd0NmeUFIQkg4Z0F5QUpOZ0lBSUF4Qk1UWUNDQ0FJUVRBMkFnZ2dERUhVN1FBMkFnd2dDRUhFN1FBMkFneEJNU0VISUFBaEJDQUpCVUV3SVFjZ0NTRUVJQUFMSVJBZ0NFSElBR29pQzBIZUFEWUNDQ0FMUVpUdEFEWUNEQ0FRQ3lnQ0FDRUFJQVlFZndKQUFrQWdCU2dDQUNJRlJRMEFJQVVvQWdBaUNVVU5BQXdCQ3lBQUtBSUVJUWtMSUFNaEJVSGhBQ0VHUWZUdEFBVkI0Z0FoQmlBQUtBSUVJUWxCNU8wQUN5RUFJQXNnQmpZQ0NDQUxJQUEyQWd3Z0N5QUZOZ0lBQTBBZ0NpQUpJZ1VwQXdnM0F3QWdDaUFKS1FNUU53TUlJQW9nQ1NnQ0dDSUdOZ0lRSUFvZ0NTZ0NIRFlDRkNBS0lBa29BaUEyQWhnZ0NpQUpMQUFrT2dBY0lBb2dDU2dDS0RZQ0lDQUlJQXdnQ2lBSFFUOXhRWW9CYWhFREFDSUFLUUlNTndKb0lBZ2dBQ2dDRkRZQ2NDQUJLQUlBSVFjZ0FDQUlLUUpvTndJTUlBQWdDQ2dDY0RZQ0ZDQUFJQWMyQWh3Z0NDQUlJQW9nQ0NnQ0NFRS9jVUdLQVdvUkF3QWlBQ2tDRERjQ1hDQUlJQUFvQWhRMkFtUWdBaWdDQUNFSElBQWdDQ2tDWERjQ0RDQUFJQWdvQW1RMkFoUWdBQ0FITmdJY0FuOGdDeUFMS0FJSVFmOEFjVUVFYWhFSUFDQUpSZ1IvSUFraEFFRUJCU0FES0FJQUtBSUFJUWNDUUFKQUlBbEZEUUFnQlNnQ0FDSUFSUTBBREFFTElBY29BZ1FoQUF0QkFBc2hFU0FFS0FJQUlnMGdEU2dDREVGL2FqWUNEQ0FHS0FJRUlRNGdCaWdDQUNFSElBWUVRQ0FHUWVDMEFpZ0NBRFlDQUVIZ3RBSWdCallDQUFzZ0RnUkFJQTRnQnpZQ0FBVWdEU0FITmdJRUN5QUhRUVJxSUExQkNHb2dCeHNnRGpZQ0FDQURLQUlBS0FJQUlnWWdCaWdDREVGL2FqWUNEQ0FGS0FJRUlRY2dCU2dDQUNFRklBa0VRQ0FKUWVDMEFpZ0NBRFlDQUVIZ3RBSWdDVFlDQUFzZ0J3UkFJQWNnQlRZQ0FBVWdCaUFGTmdJRUN5QUZRUVJxSUFaQkNHb2dCUnNnQnpZQ0FDQVJDMFVFUUNBTUtBSUlJUWNnQUNFSkRBRUxDeUFMS0FJTUtBSUVJZ0FFUUNBTEtBSUFJQUJCL3dOeFFZUURhaEVCQUFzZ0NDZ0NEQ2dDQkNJQUJFQWdDQ2dDQUNBQVFmOERjVUdFQTJvUkFRQUxJQXdvQWd3b0FnUWlBRVVFUUNBSUpBUVBDeUFNS0FJQUlBQkIvd054UVlRRGFoRUJBQ0FJSkFRTERRQWdBQ2dDQUNnQ0FDZ0NDQXNjQUVFRUVBSWlBRUhvOEFBMkFnQWdBRUdZeXdCQmxBRVFBVUVBQzlvS0FReC9Jd1FoQ0NNRVFUQnFKQVFqQkNNRlRnUkFRVEFRQUFzZ0NFSUFOd0lnSUFoQ0FEY0NGRUVRRUVraUNVRUFOZ0lFSUFsQkFEWUNDQ0FKUWZUc0FEWUNBQ0FKUVFBMkFnd2dBU0FKTmdJQVFSQVFTU0lKUVFBMkFnUWdDVUVBTmdJSUlBbEI5T3dBTmdJQUlBbEJBRFlDRENBRUlBazJBZ0FnQWlBQUtBSUFOZ0lBSUFVZ0F5Z0NBQ0lBTmdJQUlBaEIzZ0EyQWdnZ0NFR1U3UUEyQWd3Z0J3UkFJQUVvQWdBaEFDQUJJQUlvQWdBMkFnQWdBaUFBTmdJQUlBUW9BZ0FoQUNBRUlBVW9BZ0EyQWdBZ0JTQUFOZ0lBSUFoQjN3QTJBZ2dnQ0VHazdRQTJBZ3dnQ0NBRU5nSUFJQVFvQWdBaEF3SkFBa0FnQmlnQ0FDSUFSUTBBSUFBb0FnQWlBRVVOQUF3QkN5QURLQUlFSVFBTElBUWhBd1VnQ0VIZ0FEWUNDQ0FJUWJUdEFEWUNEQ0FJSUFZMkFnQWdBQ2dDQkNFQUlBVWhBeUFFSVFVTElBTWlCaUVNSUFBaEF3TkFJQU1pQkNnQ0NDRUxJQWdnQkNrQ0REY0NFQ0FJSUFRb0FoUTJBaGdnQkNnQ0dDRUpJQVFvQWh3aERTQUVLQUlnSVE0Z0JDd0FKQ0VQSUFRb0FpZ2hFQ0FGS0FJQUlnb2dDaWdDREVFQmFqWUNERUV3RUVraEFDQUtLQUlJSVJFZ0FFRUFOZ0lBSUFBZ0VUWUNCQ0FBSUFzMkFnZ2dBQ0FJS1FJUU53SU1JQUFnQ0NnQ0dEWUNGQ0FBSUFrMkFoZ2dBQ0FOTmdJY0lBQWdEallDSUNBQUlBODZBQ1FnQUNBSUxnQW9Pd0FsSUFBZ0NDd0FLam9BSnlBQUlCQTJBaWdnQ2lnQ0JBUkFJQW9vQWdnZ0FEWUNBQVVnQ2lBQU5nSUVDeUFLSUFBMkFnZ2dDU2dDQ0NFQUlBZ2dDU2tDRERjQ0hDQUlJQWtvQWhRMkFpUWdCU2dDQUNnQ0NDRUtJQWtnQURZQ0NDQUpJQWdwQWh3M0Fnd2dDU0FJS0FJa05nSVVJQWtnQ2pZQ0dDQUpRUUU2QUNRQ2Z5QUlJQWdvQWdoQi93QnhRUVJxRVFnQUlBUkdCSDhnQXlFQVFRRUZJQXdvQWdBaENRSkFBa0FnQTBVTkFDQUVLQUlBSWdCRkRRQU1BUXNnQ1NnQ0JDRUFDMEVBQ3lFU0lBWW9BZ0FpQ1NBSktBSU1RWDlxTmdJTUlBUW9BZ1FoQ2lBRUtBSUFJUVFnQXdSQUlBTkI0TFFDS0FJQU5nSUFRZUMwQWlBRE5nSUFDeUFLQkVBZ0NpQUVOZ0lBQlNBSklBUTJBZ1FMSUFSQkJHb2dDVUVJYWlBRUd5QUtOZ0lBSUJJTFJRUkFJQUFoQXd3QkN3c2dBU0FDSUFjYklnVWhCaUFDSUFFZ0J4c2lDU0VLSUFFZ0FpQUhHeWdDQUNnQ0JDRUFBMEFnQUNJQkxBQWtCRUFnQVNnQ0NDRUhJQWdnQVNrQ0REY0NIQ0FJSUFFb0FoUTJBaVFnQVNnQ0dDRURJQUVvQWh3aERDQUJLQUlnSVFzZ0FTZ0NLQ0VOSUFvb0FnQWlCQ0FFS0FJTVFRRnFOZ0lNUVRBUVNTRUNJQVFvQWdnaERpQUNRUUEyQWdBZ0FpQU9OZ0lFSUFJZ0J6WUNDQ0FDSUFncEFodzNBZ3dnQWlBSUtBSWtOZ0lVSUFJZ0F6WUNHQ0FDSUF3MkFod2dBaUFMTmdJZ0lBSkJBRG9BSkNBQ0lBZ3VBQ3M3QUNVZ0FpQUlMQUF0T2dBbklBSWdEVFlDS0NBRUtBSUVCRUFnQkNnQ0NDQUNOZ0lBQlNBRUlBSTJBZ1FMSUFRZ0FqWUNDQ0FES0FJSUlRSWdDQ0FES1FJTU53SVFJQWdnQXlnQ0ZEWUNHQ0FKS0FJQUtBSUlJUVFnQXlBQ05nSUlJQU1nQ0NrQ0VEY0NEQ0FESUFnb0FoZzJBaFFnQXlBRU5nSVlDd0ovSUFFZ0JpZ0NBQ0lDS0FJSVJnUi9JQUFoQTBFQkJRSkFBa0FnQUVVTkFDQUJLQUlBSWdORkRRQU1BUXNnQWlnQ0JDRURDMEVBQ3lFVElBRXNBQ1FFUUNBRktBSUFJZ0lnQWlnQ0RFRi9hallDRENBQktBSUVJUVFnQVNnQ0FDRUJJQUJCNExRQ0tBSUFOZ0lBUWVDMEFpQUFOZ0lBSUFRRVFDQUVJQUUyQWdBRklBSWdBVFlDQkFzZ0FVRUVhaUFDUVFocUlBRWJJQVEyQWdBTElCTUxSUVJBSUFNaEFBd0JDd3NnQ0NnQ0RDZ0NCQ0lBUlFSQUlBZ2tCQThMSUFnb0FnQWdBRUgvQTNGQmhBTnFFUUVBSUFna0JBdkpCQUVHZnlNRUlRTWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQU5DQURjQ0VDQURRZ0EzQWdRZ0FDZ0NCQ0lBQkVBRFFDQUFLQUljSWdRRVFDQUFLQUlJSVFVZ0F5QUFLUUlNTndJTUlBTWdBQ2dDRkRZQ0ZDQUFLQUlZSVFZZ0JDQUVLQUlNUVFGcU5nSU1RVEFRU1NFQ0lBUW9BZ2doQnlBQ1FRQTJBZ0FnQWlBSE5nSUVJQUlnQlRZQ0NDQUNJQU1wQWd3M0Fnd2dBaUFES0FJVU5nSVVJQUlnQmpZQ0dDQUNRUUEyQWh3Z0FrRUFOZ0lnSUFKQkFEb0FKQ0FDSUFNdUFCczdBQ1VnQWlBRExBQWRPZ0FuSUFKQkFEWUNLQ0FFS0FJRUJFQWdCQ2dDQ0NBQ05nSUFCU0FFSUFJMkFnUUxJQVFnQWpZQ0NDQUFJQVUyQWdnZ0FDQURLUUlNTndJTUlBQWdBeWdDRkRZQ0ZDQUFJQVkyQWhnZ0FFRUFOZ0ljSUFCQkFEWUNJQ0FBUVFBNkFDUWdBQ0FDTmdJb0N5QUFLQUlBSWdBTkFBc0xJQUVvQWdRaUFFVUVRQ0FESkFRUEN3TkFJQUFvQWh3aUFnUkFJQUFvQWdnaEJTQURJQUFwQWd3M0FnQWdBeUFBS0FJVU5nSUlJQUFvQWhnb0FpZ2hCQ0FDSUFJb0FneEJBV28yQWd4Qk1CQkpJUUVnQWlnQ0NDRUdJQUZCQURZQ0FDQUJJQVkyQWdRZ0FTQUZOZ0lJSUFFZ0F5a0NBRGNDRENBQklBTW9BZ2cyQWhRZ0FTQUVOZ0lZSUFGQkFEWUNIQ0FCUVFBMkFpQWdBVUVBT2dBa0lBRWdBeTRBR0RzQUpTQUJJQU1zQUJvNkFDY2dBVUVBTmdJb0lBSW9BZ1FFUUNBQ0tBSUlJQUUyQWdBRklBSWdBVFlDQkFzZ0FpQUJOZ0lJSUFNZ0JDa0NERGNDRENBRElBUW9BaFEyQWhRZ0JDQUJOZ0lZQ3lBQUtBSUFJZ0FOQUFzZ0F5UUVDK0lCQVFOL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVHbzRRQTJBZ0FnQUN3QUswRUFTQVJBSUFBb0FpQVFRd3NnQWtFRWFpRUJJQUJCak9FQU5nSUFJQUFvQWdnaUF3UkFJQUlnQUNnQ0JEWUNBQ0FCSUFJb0FnQTJBZ0FnQXlBQkVFMExJQUFvQWhBaUFTQUFLQUlVSWdOUEJFQWdBUkJESUFCQjBMUUNLQUlBTmdJQVFkQzBBaUFBTmdJQUlBSWtCQThMQTBBZ0FTd0FDMEVBU0FSQUlBRW9BZ0FRUXlBQUtBSVVJUU1MSUFGQkRHb2lBU0FEU1EwQUN5QUFLQUlRRUVNZ0FFSFF0QUlvQWdBMkFnQkIwTFFDSUFBMkFnQWdBaVFFQzdzR0FRdC9Jd1FoQkNNRVFVQnJKQVFqQkNNRlRnUkFRY0FBRUFBTElBUkNBRGNDS0NBRVFnQTNBaHdnQkVJQU53SVFJQVJDQURjQ0JDQUJRUUEyQWd3Z0FTZ0NCQ0lIQkVCQk1DQUhJQUVvQWdnUVNDQUJRUUEyQWdnZ0FVRUFOZ0lFQ3lBRFFRQTJBZ3dnQXlnQ0JDSUhCRUJCTUNBSElBTW9BZ2dRU0NBRFFRQTJBZ2dnQTBFQU5nSUVDeUFBS0FJRUlRY0RRQ0FIS0FJSUlRb2dCQ0FIS1FJTU53SWtJQVFnQnlnQ0ZEWUNMQ0FISWdVb0FoZ2hDeUFFSUFVaUNDSU1JZzBpQ1NrQ0REY0NEQ0FFSUFVb0FoUTJBaFFnQVNBQktBSU1RUUZxTmdJTVFUQVFTU0VHSUFFb0FnZ2hEaUFHUVFBMkFnQWdCaUFPTmdJRUlBWWdDallDQ0NBR0lBUXBBZ3czQWd3Z0JpQUVLQUlVTmdJVUlBWWdDellDR0NBR1FRQTJBaHdnQmtFQU5nSWdJQVpCQURvQUpDQUdJQVF1QURNN0FDVWdCaUFFTEFBMU9nQW5JQVpCQURZQ0tDQUJLQUlFQkVBZ0FTZ0NDQ0FHTmdJQUJTQUJJQVkyQWdRTElBRWdCallDQ0NBSUlBbzJBZ2dnQnlBRUtRSWtOd0lNSUFjZ0JDZ0NMRFlDRkNBRklBczJBaGdnQ0VFQU5nSWNJQXdnQmpZQ0lDQU5RUUE2QUNRZ0NVRUFOZ0lvSUFrZ0FDZ0NDRWNFUUNBSktBSUFJZ2NnQUNnQ0JDQUhHeUVIREFFTEN5QUNLQUlFSVFFRFFDQUJLQUlJSVFrZ0JDQUJJZ0FwQWd3M0FoZ2dCQ0FCS0FJVU5nSWdJQUVvQWhnaENpQUVJQUVpQnlJTElnd2lCaWtDRERjQ0FDQUVJQVlvQWhRMkFnZ2dDaWdDSUNFSUlBTWdBeWdDREVFQmFqWUNERUV3RUVraEJTQURLQUlJSVEwZ0JVRUFOZ0lBSUFVZ0RUWUNCQ0FGSUFrMkFnZ2dCU0FFS1FJQU53SU1JQVVnQkNnQ0NEWUNGQ0FGSUFnMkFoZ2dCVUVBTmdJY0lBVkJBRFlDSUNBRlFRQTZBQ1FnQlNBRUxnQXdPd0FsSUFVZ0JDd0FNam9BSnlBRlFRQTJBaWdnQXlnQ0JBUkFJQU1vQWdnZ0JUWUNBQVVnQXlBRk5nSUVDeUFESUFVMkFnZ2dCQ0FJS1FJTU53SU1JQVFnQ0NnQ0ZEWUNGQ0FJSUFVMkFoZ2dBeWdDQ0NFRklBRWdDVFlDQ0NBSElBUXBBaGczQWd3Z0J5QUVLQUlnTmdJVUlBQWdDallDR0NBSFFRQTJBaHdnQ3lBRk5nSWdJQXhCQURvQUpDQUdRUUEyQWlnZ0JpQUNLQUlJUndSQUlBWW9BZ0FpQUNBQ0tBSUVJQUFiSVFFTUFRc0xJQVFrQkF1OEFRSUNmd0Y4UWJBQkVGOGlCQkNTQVNBRElBUTJBZ0FnQXlBRU5nSUVJQVJCQURZQ0FDQUFLd05JSVFZZ0JDQUFRVUJyS3dNQU9RTUlJQVFnQmprREVDQUVJQUFyQXpnNUF4aEJFQkJKSWdCQkFEWUNCQ0FBUVFBMkFnZ2dBRUgwN0FBMkFnQWdBRUVBTmdJTUlBUWdBRFlDSUFKL0lBTW9BZ0FoQlVFUUVFa2lBRUVBTmdJRUlBQkJBRFlDQ0NBQVFmVHNBRFlDQUNBQVFRQTJBZ3dnQlFzZ0FEWUNKQ0FCSUFJZ0F5Z0NBQ0lBS0FJZ0lBQW9BaVFRc2djTGlBa0JDbjhqQkNFRkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN3SkFBa0FnQUNnQ0JDSUNLQUtjQVNJQlFRQkhJZ2xCQVhNZ0FpZ0NvQUVpQTBFQVJ5SUtjaUFDS0FLa0FTSUVRUUJISWdkeUlBSW9BcWdCSWdaQkFFY2lDSEpGQkVBZ0FpQUFLQUlBUmdSQUlBQWdBVFlDQUNBQUlBRTJBZ1FnQWtVTkF3VWdBU0FDS0FLWUFTSUROZ0tZQVNBQ0lBTW9BcHdCUmdSQUlBTWdBVFlDbkFFRkFrQWdBaUFES0FLZ0FVWUVRQ0FESUFFMkFxQUJEQUVMSUFJZ0F5Z0NwQUZHQkVBZ0F5QUJOZ0trQVF3QkN5QUNJQU1vQXFnQlJnUkFJQU1nQVRZQ3FBRUZJQVZCd1BRQ1FmekZBVUV4RUdBaUF5QURLQUlBUVhScUtBSUFhaWdDSENJRU5nSUFJQVFnQkNnQ0JFRUJhallDQkNBRlFhajdBaEJUSWdRb0FnQW9BaHdoQmlBRVFRb2dCa0UvY1VHS0FXb1JBd0FoQkNBRkVGUWdBeUFFRUtRQklBTVFSUXNMQ3lBQUlBRTJBZ1FMREFFTElBcEJBWE1nQ1hJZ0IzSWdDSEpGQkVBZ0FpQUFLQUlBUmdSQUlBQWdBellDQUNBQUlBTTJBZ1FnQWtVTkF3VWdBeUFDS0FLWUFTSUJOZ0tZQVNBQ0lBRW9BcHdCUmdSQUlBRWdBellDbkFFRkFrQWdBaUFCS0FLZ0FVWUVRQ0FCSUFNMkFxQUJEQUVMSUFJZ0FTZ0NwQUZHQkVBZ0FTQUROZ0trQVF3QkN5QUNJQUVvQXFnQlJnUkFJQUVnQXpZQ3FBRUZJQVZCd1BRQ1FmekZBVUV4RUdBaUFTQUJLQUlBUVhScUtBSUFhaWdDSENJRU5nSUFJQVFnQkNnQ0JFRUJhallDQkNBRlFhajdBaEJUSWdRb0FnQW9BaHdoQmlBRVFRb2dCa0UvY1VHS0FXb1JBd0FoQkNBRkVGUWdBU0FFRUtRQklBRVFSUXNMQ3lBQUlBTTJBZ1FMREFFTElBa2dDbklpQVNBSFFRRnpjaUFJY2tVRVFDQUNJQUFvQWdCR0JFQWdBQ0FFTmdJQUlBQWdCRFlDQkNBQ1JRMERCU0FFSUFJb0FwZ0JJZ0UyQXBnQklBSWdBU2dDbkFGR0JFQWdBU0FFTmdLY0FRVUNRQ0FDSUFFb0FxQUJSZ1JBSUFFZ0JEWUNvQUVNQVFzZ0FpQUJLQUtrQVVZRVFDQUJJQVEyQXFRQkRBRUxJQUlnQVNnQ3FBRkdCRUFnQVNBRU5nS29BUVVnQlVIQTlBSkIvTVVCUVRFUVlDSUJJQUVvQWdCQmRHb29BZ0JxS0FJY0lnTTJBZ0FnQXlBREtBSUVRUUZxTmdJRUlBVkJxUHNDRUZNaUF5Z0NBQ2dDSENFR0lBTkJDaUFHUVQ5eFFZb0JhaEVEQUNFRElBVVFWQ0FCSUFNUXBBRWdBUkJGQ3dzTElBQWdCRFlDQkFzTUFRc2dBU0FIY2lBSVFRRnpjZ1JBSUFVa0JFRUFEd3NnQWlBQUtBSUFSZ1JBSUFBZ0JqWUNBQ0FBSUFZMkFnUWdBa1VOQWdVZ0JpQUNLQUtZQVNJQk5nS1lBU0FDSUFFb0Fwd0JSZ1JBSUFFZ0JqWUNuQUVGQWtBZ0FpQUJLQUtnQVVZRVFDQUJJQVkyQXFBQkRBRUxJQUlnQVNnQ3BBRkdCRUFnQVNBR05nS2tBUXdCQ3lBQ0lBRW9BcWdCUmdSQUlBRWdCallDcUFFRklBVkJ3UFFDUWZ6RkFVRXhFR0FpQVNBQktBSUFRWFJxS0FJQWFpZ0NIQ0lETmdJQUlBTWdBeWdDQkVFQmFqWUNCQ0FGUWFqN0FoQlRJZ01vQWdBb0Fod2hCQ0FEUVFvZ0JFRS9jVUdLQVdvUkF3QWhBeUFGRUZRZ0FTQURFS1FCSUFFUVJRc0xDeUFBSUFZMkFnUUxJQUlRb2dJZ0FoQkRJQVVrQkVFQkR3c2dBaENpQWlBQ0VFTUxJQVVrQkVFQkM1Y0JBUUovSUFBb0FnUWlBaWdDbkFFaUFRUkFJQUVvQWloRkJFQWdBQ0FCRUlBQklBSkJBRFlDbkFFTEN5QUNLQUtnQVNJQkJFQWdBU2dDS0VVRVFDQUFJQUVRZ0FFZ0FrRUFOZ0tnQVFzTElBSW9BcVFCSWdFRVFDQUJLQUlvUlFSQUlBQWdBUkNBQVNBQ1FRQTJBcVFCQ3dzZ0FpZ0NxQUVpQVVVRVFBOExJQUVvQWlnRVFBOExJQUFnQVJDQUFTQUNRUUEyQXFnQkM2UUNBZ1IvQW53Q2ZDQUJLd01ZSVFrZ0FTZ0NUQ0lFUlFSQUR3c2dDUXNnQTdlaklRZ2dBVUhRQUdvaEJ3TkFJQVFvQWdnaEJTQUJJQUVvQWxSQmYybzJBbFFnQVNBRUtBSUFOZ0pNSUFSQjBMTUNLQUlBTmdJQVFkQ3pBaUFFTmdJQUlBRW9Ba3dpQTBFRWFpQUhJQU1iUVFBMkFnQWdBaWdDQUNBQUtBSU1JZ01nQlNnQ0VDSUVRWmdCYkdvckF3Z2dBU3NERUtFZ0NLT3FJQUlvQWdRZ0JFR1lBV3dnQTJvckF3QWdBU3NEQ0tFZ0NLT3FJQUlvQWhCcmJHcEJBblJxS0FJQUlnTWdBeWdDVkVFQmFqWUNWRUVNRUVraEJDQURLQUpRSVFZZ0JFRUFOZ0lBSUFRZ0JqWUNCQ0FFSUFVMkFnZ2dCaUFEUWN3QWFpQURLQUpNR3lBRU5nSUFJQU1nQkRZQ1VDQURJQU1vQWloQkFXbzJBaWdnQVNnQ1RDSUVEUUFMQzZFREFnWi9BWHdqQkNFRkl3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QURLQUlvdHhEdkFVR3cwd0lyQXdDam5FUUFBQUFBQUFBQXdLQWlDMFFBQUFBQUFBRHdQeUFMUkFBQUFBQUFBUEEvWkJ1cUlncEJBVWdFZjBFQkJVRUJJUWhCQVNFR0EzOGdCa0VCZENFR0lBaEJBV29oQnlBSUlBcEdCSDhnQmdVZ0J5RUlEQUVMQ3dzaEJ5QURLd01ZSUFlM28wUlo4L2pDSDI2bEFXWkZCRUFnQlNRRUR3c2dCVUVBTmdJUUlBVWdCMEYvYWlJR05nSVVJQVZCQURZQ0dDQUZJQVkyQWh3Z0JTQUhOZ0lFSUFkQkFVZ0VRQ0FGUVFBMkFnd2dCVUVBTmdJQUlBVkJBRFlDQ0FVZ0JTQUhJQWRzSWdoQkFuUVFTaUlHTmdJSUlBWUVRQ0FGSUFZMkFnQWdCU0FJUVFKMElBWnFOZ0lNSUFZaENRVkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnWkJBRFlDQUNBR1FYODJBZ1FnQmtHb09FRUFFQUVMQ3lBQ0lBTTJBZ1FnQUNBQklBSVEwZ01FUUNBQUlBSWdDaUFGUVFCQkFFRUFFTlVCSUFFZ0F5QUZJQWNRd2djZ0FpQUROZ0lFSUFBZ0FoRFVBU0FDSUFNMkFnUWdBQ0FCSUFJZ0JCRFRBU0FGS0FJSUlRa0xJQWtRUXlBRkpBUUx3UUVDQTM4QmZFR3dBUkJmSWdNUWtnRWdBaUFETmdJQUlBSWdBellDQkNBRFFRQTJBZ0FnQUNzRFNDRUdJQU1nQUVGQWF5c0RBRGtEQ0NBRElBWTVBeEFnQXlBQUt3TTRPUU1ZSUFNZ0FTZ0NjRFlDS0NBQktBSjBJZ0JGQkVBUEN3TkFJQU1nQXlnQ1ZFRUJhallDVkVFTUVFa2hBU0FES0FKUUlRUWdBVUVBTmdJQUlBRWdCRFlDQkNBQklBQTJBZ2dnQkNBRFFjd0FhaUlGSUFVb0FnQWJJQUUyQWdBZ0F5QUJOZ0pRSUFBb0FnQWlBQVJBSUFJb0FnQWhBd3dCQ3dzTHhBVUNESDhHZkNNRUlRWWpCRUV3YWlRRUl3UWpCVTRFUUVFd0VBQUxJQUlyQXpBaEV5QUNLd000SVJRZ0FDZ0NOQ0lFUVFGcUlRTWdCRUVBU0FSL1FRQUZJQU5CQkhRUVNpSUhSUVJBUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlGUVFBMkFnQWdCVUYvTmdJRUlBVkJxRGhCQUJBQkN5QUhRUkJxSVFVZ0EwRUVkQ0FIYWlJRElBZExCRUFnQjBFQUlBZEJmM01nQXlBRklBTWdCVXNiYWtFUWFrRndjUkJpR2dzZ0J3c2hDaUFHUWdBM0F3QWdCa0lBTndNSUlBSW9Ba3dpQ3dSL1FRQWhBMEVBSVFVRFFFRU1FRWtpQ0VFQU5nSUFJQWdnQ1RZQ0JDQUlJQXNvQWdnMkFnZ2dCUVJBSUFrZ0NEWUNBQVVnQ0NJRElRVUxJQXNvQWdBaUN3UkFJQWdoQ1F3QkN3c2dBQ2dDTkNFRUlBTUZRUUFoQlVFQUN5RUxJQW9nQWlnQ1ZMYzVBd0FnQ2tRQUFBQUFBQUFBQURrRENDQUVRUUZPQkVBZ0NrRVFha0VBSUFSQkJIUVFZaG9MSUFaQklHb2hDU0FHUVJCcUlRd2dCVVVpRFFSQUlBUWhBd1VnQkNFREEwQWdBU2dDRENJT0lBVW9BZ2dvQWhBaUJFR1lBV3hxS3dNQUlCT2hJUkFnQkVHWUFXd2dEbW9yQXdnZ0ZLRWhFU0FHSUJBNUF3QWdCaUFST1FNSUlBTkJBVTRFUUVFQklRUWdFQ0VQSUJFaEVnTkFJQVJCQkhRZ0Ntb2lBeUFQbWlBRXR5SVBveUFES3dNQW9Ea0RBQ0FFUVFSMElBcHFJZ01nRXBvZ0Q2TWdBeXNEQ0tBNUF3Z2dEQ0FRT1FNQUlBd2dFVGtEQ0NBSklBWWdEQkJ4SUFZZ0NTa0RBRGNEQUNBR0lBa3BBd2czQXdnZ0JDQUFLQUkwSWdOSUJFQWdCRUVCYWlFRUlBWXJBd0FoRHlBR0t3TUlJUklNQVFzTEN5QUZLQUlBSWdVTkFBc0xJQU5CQUU0RVFDQUNRVUJySVFKQkFDRUFBMEFnQWlnQ0FDQUFRUVIwYWlJQklBQkJCSFFnQ21vaUJTa0RBRGNEQUNBQklBVXBBd2czQXdnZ0FFRUJhaUVCSUFBZ0EwY0VRQ0FCSVFBTUFRc0xDeUFOQkVBZ0J4QkRJQVlrQkE4TFFRd2dDeUFJRUVnZ0J4QkRJQVlrQkF1WkJBRUhmeUFBS0FJMElnTkJBV29oQlNBRFFRQklJZ2NFZjBFQUJTQUZRUVIwRUVvaUJFVUVRRUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlBa0VBTmdJQUlBSkJmellDQkNBQ1FhZzRRUUFRQVFzZ0JFRVFhaUVDSUFWQkJIUWdCR29pQmlBRVN3UkFJQVJCQUNBRVFYOXpJQVlnQWlBR0lBSkxHMnBCRUdwQmNIRVFZaG9MSUFSQkFDQURRUVIwUVJCcUVHSWFJQVFMSVFaQmZ5QUZRUVIwSUFWQi8vLy8vd0JMR3hCZklRSkJmeUFGQkg4Z0FrRUFJQU5CQkhSQkVHb1FZaG9nQVVGQWF5SUlJQUkyQWdBZ0J3Ui9JQU1GSUFJZ0JDa0RBRGNEQUNBQ0lBUXBBd2czQXdnZ0F3Ui9JQUlnQmlrREVEY0RFQ0FDSUFZcEF4ZzNBeGdnQlVFQ1J3UkFRUUloQXdOQUlBZ29BZ0FnQTBFRWRHb2lBaUFEUVFSMElBWnFJZ2NwQXdBM0F3QWdBaUFIS1FNSU53TUlJQU5CQVdvaUF5QUZSdzBBQ3dzZ0FDZ0NOQVZCQUFzTEJTQUJRVUJySUFJMkFnQkJmd3NpQTBFQmFpSUZRUVIwSUFWQi8vLy8vd0JMR3hCZklRQUNRQ0FGUlFSQUlBRWdBRFlDUkF3QkN5QUFRUUFnQTBFRWRFRVFhaEJpR2lBQklBQTJBa1FnQTBFQVNBMEFJQUFnQkNrREFEY0RBQ0FBSUFRcEF3ZzNBd2dnQTBVTkFDQUFJQVlwQXhBM0F4QWdBQ0FHS1FNWU53TVlJQVZCQWtZTkFFRUNJUUFEUUNBQktBSkVJQUJCQkhScUlnTWdBRUVFZENBR2FpSUNLUU1BTndNQUlBTWdBaWtEQ0RjRENDQUFRUUZxSWdBZ0JVY05BQXNnQkJCRER3c2dCQkJEQzh3RUFndC9CbndqQkNFRkl3UkJRR3NrQkNNRUl3Vk9CRUJCd0FBUUFBc2dCVUV3YWlFSUlBVkJJR29oQ1NBREt3TXdJUklnQXlzRE9DRVRJQVZCRUdvaUJrSUFOd01BSUFaQ0FEY0RDQ0FDS0FKTUlnY0VRRUVBSVFJRFFFRU1FRWtpQ2tFQU5nSUFJQW9nQ3pZQ0JDQUtJQWNvQWdnMkFnZ2dBZ1JBSUFzZ0NqWUNBQVVnQ2lJTklRSUxJQWNvQWdBaUJ3UkFJQW9oQ3d3QkN3c2dBa1VpQzBVRVFBTkFJQklnQVNnQ0RDSUhJQUlvQWdnb0FoQWlCRUdZQVd4cUt3TUFvU0lQUkVpdnZKcnkxM28rb0NJUUlBOGdFeUFFUVpnQmJDQUhhaXNEQ0tFaUVVUUFBQUFBQUFBQUFHRWdEMFFBQUFBQUFBQUFBR1Z4SWdRYklCRVF2UU1RN3dFaEZDQVJJQkFnRHlBRUd4Q0xBU0VRSUFNb0FrUWlCQ0FVSUFRckF3Q2dPUU1BSUFRZ0VDQUVLd01Jb0RrRENDQUdJQTg1QXdBZ0JpQVJPUU1JSUFBb0FqUkJBVTRFUUVFQklRUURRQ0FKSUFSQkFXb2lCMEVCZEVFQ2NVRUNjMEYvYXJjNUF3QWdDVVFBQUFBQUFBQUFBRGtEQ0NBRklBWXBBd0EzQXdBZ0JTQUdLUU1JTndNSUlBVWdCU3NEQUNBRXR5SVFvamtEQUNBRklBVXJBd2dnRUtJNUF3Z2dDQ0FKSUFVUXJRRWdBeWdDUkNJTUlBUkJCSFJxSWc0Z0NDc0RBQ0FPS3dNQW9Ea0RBQ0FFUVFSMElBeHFJZ3dnQ0NzRENDQU1Ld01Jb0RrRENDQUpJQTg1QXdBZ0NTQVJPUU1JSUFnZ0JpQUpFSEVnQmlBSUtRTUFOd01BSUFZZ0NDa0RDRGNEQ0NBRUlBQW9BalJJQkVBZ0J5RUVEQUVMQ3dzZ0FpZ0NBQ0lDRFFBTElBc0VRQ0FGSkFRUEMwRU1JQTBnQ2hCSUlBVWtCQThMQ3lBRkpBUUx0d2dDREg4SGZDTUVJUVFqQkVHQUFXb2tCQ01FSXdWT0JFQkJnQUVRQUFzZ0FTc0RNQ0VQSUFFckF6Z2hFaUFDS3dNd0lSQUNmQ0FDS3dNNElSUWdCRUhRQUdvaUNrSUFOd01BSUFwQ0FEY0RDQ0FFUVVCcklnZENBRGNEQUNBSFFnQTNBd2dnQkVFd2FpSUlRZ0EzQXdBZ0NFSUFOd01JSUFSQklHb2lDMElBTndNQUlBdENBRGNEQ0NBRVFSQnFJZ3hDQURjREFDQU1RZ0EzQXdnZ0FVRkFheUlOS0FJQUlRWWdGQXNnRXFFaUVVUUFBQUFBQUFBQUFHRWdFQ0FQb1NJUVJBQUFBQUFBQUFBQVpYRWhBU0FRUkVpdnZKcnkxM28rb0NJUElCQWdBUnNnRVJDOUF4RHZBU0VTSUJFZ0R5QVFJQUViRUlzQklROGdCRUhnQUdvaUJTQVNPUU1BSUFVZ0R6a0RDQ0FFUWZBQWFpSURJQVlnQlJCeElBTXJBd0FoRHlBREt3TUlJUklnQnlBUU9RTUFJQWNnRVRrRENDQUFLQUkwSWdGQkFVNEVRRUVCSVFFRFFDQURJQTBvQWdBZ0FVRUVkR29nQnhDdEFTQVBJQU1yQXdDZ0lROGdFaUFES3dNSW9DRVNJQVVnRURrREFDQUZJQkU1QXdnZ0F5QUhJQVVRY1NBSElBTXBBd0EzQXdBZ0J5QURLUU1JTndNSUlBRkJBV29oQmlBQklBQW9BalFpQVVnRVFDQUdJUUVNQVFzTEN5QUNLQUpFSWdZZ0R5QUdLd01Bb0RrREFDQUdJQklnQmlzRENLQTVBd2dnQ0NBUU9RTUFJQWdnRVRrRENDQUJRUUZJQkVBZ0JDUUVEd3RCQVNFQkEwQWdDeUFCUVFGcUlnNUJBWFJCQW5GQkFuTkJmMm9pQnJjNUF3QWdDMFFBQUFBQUFBQUFBRGtEQ0NBTVJBQUFBQUFBQVBDL1JBQUFBQUFBQVBBL0lBWkJBVVliT1FNQUlBeEVBQUFBQUFBQUFBQTVBd2dnQlNBTElBMG9BZ0FRY1NBRUlBZ3BBd0EzQXdBZ0JDQUlLUU1JTndNSUlBUWdCQ3NEQUNBQnR5SVBvamtEQUNBRUlBUXJBd2dnRDZJNUF3Z2dBeUFGSUFRUXJRRWdBeXNEQUNFU0Fud2dBeXNEQ0NFVklBTWdEQ0FJRUswQklBb2dBeWtEQURjREFDQUtJQU1wQXdnM0F3Z2dCU0FRT1FNQUlBVWdFVGtEQ0NBRElBZ2dCUkJ4SUFnZ0F5a0RBRGNEQUNBSUlBTXBBd2czQXdnZ0JFSUFOd01BSUFSQ0FEY0RDQ0FISUJBNUF3QWdCeUFST1FNSUlBQW9BalJCQVU0RVFFRUJJUVlEUUNBR1FYOXFJZ2xCQTNRZ0FDZ0NWQ0FCSUFscVFRSjBhaWdDQUdvckF3QWhEeUFGSUEwb0FnQWdCa0VFZEdvaUNTa0RBRGNEQUNBRklBa3BBd2czQXdnZ0JTQVBJQVVyQXdDaU9RTUFJQVVnRHlBRkt3TUlvamtEQ0NBRElBVWdCeEN0QVNBRUlBTXJBd0FnQkNzREFLQTVBd0FnQkNBREt3TUlJQVFyQXdpZ09RTUlJQVVnRURrREFDQUZJQkU1QXdnZ0F5QUhJQVVRY1NBSElBTXBBd0EzQXdBZ0J5QURLUU1JTndNSUlBWkJBV29oQ1NBR0lBQW9BalJJQkVBZ0NTRUdEQUVMQ3dzZ0F5QUtJQVFRY1NBVkN5QURLd01Jb0NFUElBSW9Ba1FpQmlBQlFRUjBhaUlKSUJJZ0F5c0RBS0FnQ1NzREFLQTVBd0FnQVVFRWRDQUdhaUlHSUE4Z0Jpc0RDS0E1QXdnZ0FTQUFLQUkwU0FSQUlBNGhBUXdCQ3dzZ0JDUUVDNDhGQWdoL0Ezd2pCQ0VDSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBQktBS1lBU0lJS3dNd0lRb2dDQ3NET0NFTElBSWdBU2tETURjRElDQUNJQUVwQXpnM0F5Z2dBQ2dDTkNJRFFRRnFJZ1ZCQkhRUVNpSUdSUVJBUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlFUVFBMkFnQWdCRUYvTmdJRUlBUkJxRGhCQUJBQkN5QUdRUkJxSVFRZ0JVRUVkQ0FHYWlJRklBWkxCRUFnQmtFQUlBWkJmM01nQlNBRUlBVWdCRXNiYWtFUWFrRndjUkJpR2dzZ0FrRVFhaUVISUFaRUFBQUFBQUFBOEQ4NUF3QWdCa1FBQUFBQUFBQUFBRGtEQ0NBRFFRRk9CRUJCQVNFREEwQWdBaUFDS1FNZ053TUFJQUlnQWlrREtEY0RDQ0FDSUFJckF3QWdDcUU1QXdBZ0FpQUNLd01JSUF1aE9RTUlJQWNnQTBGL2FrRUVkQ0FHYWlBQ0VIRWdBMEVFZENBR2FpSUVJQWNwQXdBM0F3QWdCQ0FIS1FNSU53TUlJQU5CQVdvaEJDQURJQUFvQWpRaUEwZ0VRQ0FFSVFNTUFRc0xDeUFEUVFCSUJFQWdCaEJESUFJa0JBOExRUUFoQkFOQUlBUWdBMG9FUUVRQUFBQUFBQUFBQUNFS1JBQUFBQUFBQUFBQUlRc0ZJQVFoQTBRQUFBQUFBQUFBQUNFS1JBQUFBQUFBQUFBQUlRc0RRQ0FBS0FKVUlBTkJBblJxS0FJQUlBUkJBM1JxS3dNQUlRd2dBaUFJS0FKRUlBTkJCSFJxSWdVcEF3QTNBd0FnQWlBRktRTUlOd01JSUFJZ0RDQUNLd01Bb2prREFDQUNJQXdnQWlzRENLSTVBd2dnQnlBQ0lBTWdCR3RCQkhRZ0Jtb1FjU0FLSUFjckF3Q2dJUW9nQ3lBSEt3TUlvQ0VMSUFOQkFXb2hCU0FESUFBb0FqUWlBMGdFUUNBRklRTU1BUXNMQ3lBQktBSkVJZ1VnQkVFRWRHb2lDU0FLSUFrckF3Q2dPUU1BSUFSQkJIUWdCV29pQlNBTElBVXJBd2lnT1FNSUlBUkJBV29oQlNBRUlBTklCRUFnQlNFRURBRUxDeUFHRUVNZ0FpUUVDNFFDQVFwOElBQXJBd2doQlNBQUt3TVlJZ01nQVNzREdDSUNaUVJBSUFVaENDQUNSQUFBQUFBQUFBQkFvaUlFSUFFckF3Z2lCNkFoQ1NBSElBS2hJUW9nQXlJSElBQXJBeEFpQTZBaEJpQUVJQUVyQXhBaUM2QWhCQ0FMSUFLaElRSUZJQU5FQUFBQUFBQUFBRUNpSWdZaEJ5QUZJQU9oSVFnZ0FpQUJLd01JSWdxZ0lRa2dCaUFBS3dNUUlnU2dJUVlnQkNBRG9TRURJQUlnQVNzREVDSUNvQ0VFQ3lBRklBZWdJZ1VnQ21VRWYwRUFCU0FKSUFobFJTQUZJQW9RZGtFQmMzRUVmeUFKSUFnUWRrRUJjd1ZCQUFzTElRQUNRQ0FHSUFKbERRQWdCQ0FEWlVVZ0JpQUNFSFpCQVhOeFJRMEFJQUFnQkNBREVIWkJBWE54UVFGekR3dEJBUXRjQVFGL0lBQkI0T3dBTmdJQUlBQW9BZ1FpQVVVRVFDQUFRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FEWUNBQThMUVF3Z0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQ0FBUWRDekFpZ0NBRFlDQUVIUXN3SWdBRFlDQUFzeUFRRi9JQUJCNE93QU5nSUFJQUFvQWdRaUFVVUVRQThMUVF3Z0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQXU3RHdJbWZ3ZDhJd1FoQkNNRVFZQUJhaVFFSXdRakJVNEVRRUdBQVJBQUN5QUVRZUFBYWlFUklBUkIwQUJxSVNJZ0JFRkFheUVqSUFSQk1Hb2hKQ0FFUVNCcUlTVWdCRUVRYWlFbUlBUWlJRUh3QUdvaURVRUVhaUlXUVFBMkFnQWdEVUVBTmdJSUlBMUJzT1lBTmdJQUlBMUJBRFlDRENBQ0tBSUVJaWNFUUVFQUlRSkJBQ0VFQTBBZ0p5Z0NDQ0VRSUJJRVFFRU1JQVFnRFNnQ0NCQklJQTFCQURZQ0NDQVdRUUEyQWdBTElCQW9Ba3dpQkFSQUEwQkJEQkJKSVFVZ0RTZ0NDQ0VISUFWQkFEWUNBQ0FGSUFjMkFnUWdCU0FFS0FJSU5nSUlJQWNnRmlBV0tBSUFHeUFGTmdJQUlBMGdCVFlDQ0NBRUtBSUFJZ1FOQUFzTElBMGdFQ2dDVkNJRU5nSU1JQVFnQUNnQ01Fb0VRQ0FXS0FJQUlnUUVmd04vSUNZZ0FTZ0NEQ0lTSUFRb0FnZ2lCU2dDRUNJSFFaZ0JiR29pRUNzREFEa0RBQ0FtSUFkQm1BRnNJQkpxSWdjckF3ZzVBd2dnSUNBUUt3TUFPUU1BSUNBZ0J5c0RDRGtEQ0NBUklDWWdJQkM2QVNBREtBSU1JZ2NnQlNnQ0VDSUZRUVIwYWlJU0lCRXJBd0FnRWlzREFLQTVBd0FnQlVFRWRDQUhhaUlGSUJFckF3Z2dCU3NEQ0tBNUF3Z2dCQ2dDQUNJRURRQWdGU0VGSUJNTEJTQVZJUVVnRXdzaEJBVWdBeUFCSUEwUTJBTWdHd1JBUVF3Z0h5QVhFRWhCQUNFWEN5QVFLQUpzSWdrRWYwRUFJUUpCQUNFRVFRQWhIeUFYSVFWQkFDRWJBMEJCREJCSklnaEJBRFlDQUNBSUlBVTJBZ1FnQ0NBSktBSUlOZ0lJSUJzRVFDQUZJQWcyQWdBZ0h5RVhCU0FJSWdJaUJDSVhJUnNMSUFnaEJTQUpLQUlBSWdrRVFDQVhJUjhNQVFzTElBSWhFaUFYSVI4Z0JTRVhRUUFGUVFBaEVrRUFJUjlCQUNFYlFRQUxHaUFRS3dNWUlTd2dFQ3NEQ0NFcklCQXJBeEFoTGlBYkJIOGdDeUVFSUFvaEFpQU9JUW9nR3lFRkEzOGdCU2dDQ0NJTEt3TVlJU29nQ3lzRENDRXRJQXNyQXhBaEx3SkFBa0FnTENBcVpBMEFJQ3dnS21FRVFDQXJJQzFCb05NQ0t3TUFJaXFoSWpCakRRRWdMaUF2SUNxaFkwVWdLeUF0SUNxZ1kwVWdLeUF3WkVWeWNrVU5BUXNNQVFzZ0R3UkFRUXdnQ2lBR0VFaEJBQ0VHQ3lBTEtBSk1JZ3NFUUVFQUlRSkJBQ0VFUVFBaENrRUFJUThEUUVFTUVFa2lEa0VBTmdJQUlBNGdCallDQkNBT0lBc29BZ2cyQWdnZ0R3UkFJQVlnRGpZQ0FBVWdEaUlDSWdRaUNpRVBDeUFPSVFZZ0N5Z0NBQ0lMRFFBTEJVRUFJUUpCQUNFRVFRQWhDa0VBSVE4TElCWW9BZ0FpQ3dSQUlBOUZCRUFnQ3lFUEEwQWdEeWdDQUNJUEJFQU1BUVZCQUNFUERBUUxBQUFMQUFzZ0R5RUlBMEFnQ3lnQ0NDSWFLQUlRSVFrZ0NDRU9BMEFnSWlBQktBSU1JZ2NnRGlnQ0NDSWhLQUlRSWhSQm1BRnNhaXNEQURrREFDQWlJQlJCbUFGc0lBZHFLd01JT1FNSUlDTWdDVUdZQVd3Z0Iyb3JBd0E1QXdBZ0l5QUpRWmdCYkNBSGFpc0RDRGtEQ0NBUklDSWdJeEM2QVNBREtBSU1JZ2NnR2lnQ0VDSUpRUVIwYWlJVUlCRXJBd0FnRkNzREFLQTVBd0FnQ1VFRWRDQUhhaUlVSUJFckF3Z2dGQ3NEQ0tBNUF3Z2dJU2dDRUNJaFFRUjBJQWRxSWhRZ0ZDc0RBQ0FSS3dNQW9Ua0RBQ0FoUVFSMElBZHFJZ2NnQnlzRENDQVJLd01Jb1RrRENDQU9LQUlBSWc0TkFBc2dDeWdDQUNJTERRQUxDd3NnQlNnQ0FDSUZEUUFnQ2lFT0lBUWhDeUFHSVFjZ0Fnc0ZJQVloQnlBS0N5RUZJQmtFUUVFTUlBd2dGUkJJUVFBaEZRc2dFQ2dDZkNJSUJIOUJBQ0VDUVFBaEJFRUFJUW9nRlNFR1FRQWhHUU5BUVF3UVNTSUpRUUEyQWdBZ0NTQUdOZ0lFSUFrZ0NDZ0NDRFlDQ0NBWkJFQWdCaUFKTmdJQUJTQUpJZ0lpQkNJS0lSa0xJQWtoQmlBSUtBSUFJZ2dOQUFzZ0JpRVZJQmtFZnlBWklRZ0Rmd0ovQW44Z0NDZ0NDQ0VvSUJ3RVFFRU1JQjRnR0JCSVFRQWhHQXNnS0Fzb0Frd2lFd1IvUVFBaEJrRUFJUjVCQUNFSklCZ2hIVUVBSVJ3RFFFRU1FRWtpREVFQU5nSUFJQXdnSFRZQ0JDQU1JQk1vQWdnMkFnZ2dIQVJBSUIwZ0REWUNBQ0FKSVJnRklBd2lCaUllSWhnaEhBc2dEQ0VkSUJNb0FnQWlFd1JBSUJnaENRd0JDd3NnSGlFUUlCZ2hIaUFkSVJnZ0JnVkJBQ0VRUVFBaEhrRUFJUnhCQUFzaEtTQVdLQUlBSWdZRVFBSkFJQnhGQkVBRFFDQUdLQUlBSWdZTkFBd0NBQXNBQ3lBY0lRa0RRQ0FHS0FJSUlpRW9BaEFoRENBSklSMERRQ0FrSUFFb0Fnd2lHaUFkS0FJSUtBSVFJaFJCbUFGc2Fpc0RBRGtEQUNBa0lCUkJtQUZzSUJwcUt3TUlPUU1JSUNVZ0RFR1lBV3dnR21vckF3QTVBd0FnSlNBTVFaZ0JiQ0FhYWlzRENEa0RDQ0FSSUNRZ0pSQzZBU0FES0FJTUlob2dJU2dDRUNJTVFRUjBhaUlVSUJFckF3QWdGQ3NEQUtBNUF3QWdERUVFZENBYWFpSWFJQkVyQXdnZ0dpc0RDS0E1QXdnZ0hTZ0NBQ0lkRFFBTElBWW9BZ0FpQmcwQUN3c0xJQWdvQWdBaUNBMEJJQUloQ0NBS0lRd2dLUXNoQkNBRklRb2dCeUVHSUJVaEJTQVNDd1VnQWlFSUlBb2hEQ0FUSVFRZ0JTRUtJQWNoQmlBVklRVkJBQ0VaSUJJTEJVRUFJUWhCQUNFTUlCTWhCQ0FGSVFvZ0J5RUdJQlVoQlVFQUlSa2dFZ3NoQWdzZ0p5Z0NBQ0luQkVBZ0ZpZ0NBQ0lISVJJZ0JDRVRJQWNoQkNBRklSVU1BUXNMSUJrRVFFRU1JQWdnQlJCSUN5QWJCRUJCRENBQ0lCY1FTQXNnSEFSQVFRd2dCQ0FZRUVnTElBOEVRRUVNSUFvZ0JoQklDd3NnRFVIRTVnQTJBZ0FnRmlnQ0FDSUFSUVJBSUNBa0JBOExRUXdnQUNBTktBSUlFRWdnRFVFQU5nSUlJQlpCQURZQ0FDQWdKQVFMbkFZQ0VIOEhmQ01FSVFZakJFRkFheVFFSXdRakJVNEVRRUhBQUJBQUN5QUdRUkJxSWd0Q0FEY0RBQ0FMUWdBM0F3Z2dBaWdDQkNJUFJRUkFJQVlrQkE4TElBWkJNR29oQnlBR1FTQnFJUVVEUUNBUEtBSUlJZ1FvQWt3aUNRUi9RUUFoQWtFQUlReEJBQ0VOQTBCQkRCQkpJZ2hCQURZQ0FDQUlJQXcyQWdRZ0NDQUpLQUlJTmdJSUlBMEVRQ0FNSUFnMkFnQUZJQWdpQWlFTkN5QUpLQUlBSWdrRVFDQUlJUXdNQVFzTElBSWhFU0FJSVJJZ0RRVkJBQ0VSUVFBaEVrRUFDeUVNSUFRb0Fvd0JJZ2dFUUVFQUlRMUJBQ0VFUVFBaEFnTkFRUXdRU1NJSlFRQTJBZ0FnQ1NBRU5nSUVJQWtnQ0NnQ0NEWUNDQ0FDQkVBZ0JDQUpOZ0lBQlNBSklnMGhBZ3NnQ0NnQ0FDSUlCRUFnQ1NFRURBRUxDeUFDQkVBZ0RDSUlCRUFEUUNBQ0tBSUlJZzRyQXpBaEdDQU9Ld000SVJrZ0RrRkFheUVUSUFnaERnTkFJQUVvQWd3aUNpQU9LQUlJSWhBb0FoQWlCRUdZQVd4cUt3TUFJQmloSVJZZ0JFR1lBV3dnQ21vckF3Z2dHYUVoRnlBR1JBQUFBQUFBQVBBL09RTUFJQVpFQUFBQUFBQUFBQUE1QXdnZ0JTQVdPUU1BSUFVZ0Z6a0RDQ0FISUFZZ0JSQ3RBU0FHSUFjcEF3QTNBd0FnQmlBSEtRTUlOd01JSUFzZ0Jpa0RBRGNEQUNBTElBWXBBd2czQXdnZ0J5QVRLQUlBSUFzUWNTQUhLd01BSVJVZ0J5c0RDQ0VVSUFBb0FqUkJBVTRFUUVFQklRUURRQ0FGSUJZNUF3QWdCU0FYT1FNSUlBY2dDeUFGRUswQklBc2dCeWtEQURjREFDQUxJQWNwQXdnM0F3Z2dCU0FUS0FJQUlBUkJCSFJxSWdvcEF3QTNBd0FnQlNBS0tRTUlOd01JSUFVZ0JTc0RBQ0FFdHlJYW9qa0RBQ0FGSUFVckF3Z2dHcUk1QXdnZ0J5QUZJQXNRY1NBVklBY3JBd0NoSVJVZ0ZDQUhLd01Jb1NFVUlBUkJBV29oQ2lBRUlBQW9BalJJQkVBZ0NpRUVEQUVMQ3dzZ0VDZ0NFQ0lLUVFSMElBTW9BZ3dpRUdvaEJDQUtRUVIwSUJCcUlnb3JBd2dnRktFaEZDQUVJQlVnQkNzREFLQTVBd0FnQ2lBVU9RTUlJQTRvQWdBaURnMEFDeUFDS0FJQUlnSU5BQXNGQTBBZ0FpZ0NBQ0lDRFFBTEMwRU1JQTBnQ1JCSUN3c2dEQVJBUVF3Z0VTQVNFRWdMSUE4b0FnQWlEdzBBQ3lBR0pBUUx6d1FDQzM4SWZDTUVJUVFqQkVFd2FpUUVJd1FqQlU0RVFFRXdFQUFMSUFSQ0FEY0RBQ0FFUWdBM0F3Z2dBaWdDQkNJTFJRUkFJQVFrQkE4TElBUkJJR29oQ1NBRVFSQnFJUVVEUUNBTEtBSUlJZ3dvQWt3aUNBUkFRUUFoRFVFQUlRZEJBQ0VDQTBCQkRCQkpJZ3BCQURZQ0FDQUtJQWMyQWdRZ0NpQUlLQUlJTmdJSUlBSUVRQ0FISUFvMkFnQUZJQW9pRFNFQ0N5QUlLQUlBSWdnRVFDQUtJUWNNQVFzTElBd3JBekFoRWlBTUt3TTRJUk1nQWdSQUlBQW9BalFoQmlBQ0lRZ0RRQ0FCS0FJTUlnSWdDQ2dDQ0NJT0tBSVFJZ2RCbUFGc2Fpc0RBQ0VQSUFkQm1BRnNJQUpxS3dNSUlSQWdCRVFBQUFBQUFBRHdQemtEQUNBRVJBQUFBQUFBQUFBQU9RTUlJQVpCQVVnRVFDQUdJUUpFQUFBQUFBQUFBQUFoRUVRQUFBQUFBQUFBQUNFUEJTQVBJQktoSVJRZ0VDQVRvU0VWUVFFaEFrUUFBQUFBQUFBQUFDRVFSQUFBQUFBQUFBQUFJUThEUUNBRklBd29Ba1FnQWtFRWRHb2lCaWtEQURjREFDQUZJQVlwQXdnM0F3Z2dCU0FGS3dNQUlBSzNJaEdpT1FNQUlBVWdCU3NEQ0NBUm9qa0RDQ0FKSUFVZ0JCQnhJQWtyQXdBaEVTQUpLd01JSVJZZ0JTQVVPUU1BSUFVZ0ZUa0RDQ0FKSUFRZ0JSQnhJQThnRnFBaER5QVFJQkdnSVJBZ0JDQUpLUU1BTndNQUlBUWdDU2tEQ0RjRENDQUNRUUZxSVFZZ0FpQUFLQUkwSWdKSUJFQWdCaUVDREFFTEN5QU9LQUlRSVFjTElBTW9BZ3dpQmlBSFFRUjBhaUFRT1FNQUlBZEJCSFFnQm1vZ0Q1bzVBd2dnQ0NnQ0FDSUlCRUFnQWlFR0RBRUxDMEVNSUEwZ0NoQklDd3NnQ3lnQ0FDSUxEUUFMSUFRa0JBdkhBd0VMZnlNRUlRb2pCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQXBCRUdvaUIwRUVhaUlKUVFBMkFnQWdCMEVJYWlJTFFRQTJBZ0FnQjBITTdBQTJBZ0FnQjBFQU5nSU1JQW9pQmtFQU5nSUVJQVpCQURZQ0NDQUdRY3pzQURZQ0FDQUdRUUEyQWd3Z0FDQUJJQU1ReEFjZ0JrRUFOZ0lNSUFNb0FnQWhCQ0FIUVFFMkFneEJEQkJKSWdVZ0NTZ0NBQ0lCTmdJQUlBVkJBRFlDQkNBRklBUTJBZ2dnQVVFRWFpQUxJQUViSUFVMkFnQWdDU0FGTmdJQUlBVUVRQ0FISVFRZ0NTRU1JQVloQVFOQUlBUWlDRUVJYWlFTklBVWhCQU5BSUFRb0FnZ2hEaUFJSUFnb0FneEJmMm8yQWd3Z0NDQUVLQUlBSWdVMkFnUWdCQVJBSUFSQjBMTUNLQUlBTmdJQVFkQ3pBaUFFTmdJQUlBZ29BZ1FoQlFzZ0JVRUVhaUFOSUFVYlFRQTJBZ0FnQUNBQ0lBTWdEaUFCRU1NSElBd29BZ0FFUUNBSUtBSUVJUVFNQVFzTElBRkJCR29pRENnQ0FDSUZCRUFnQVNFRUlBZ2hBUXdCQ3dzTElBWkI0T3dBTmdJQUlBWW9BZ1FpQUFSQVFRd2dBQ0FHS0FJSUVFZ2dCa0VBTmdJSUlBWkJBRFlDQkFzZ0IwSGc3QUEyQWdBZ0NTZ0NBQ0lBUlFSQUlBb2tCQThMUVF3Z0FDQUxLQUlBRUVnZ0MwRUFOZ0lBSUFsQkFEWUNBQ0FLSkFRTGlnVUJDMzhqQkNFRUl3UkJRR3NrQkNNRUl3Vk9CRUJCd0FBUUFBc2dCRUV3YWlJSVFRUnFJZ3BCQURZQ0FDQUlRUWhxSWd0QkFEWUNBQ0FJUWN6c0FEWUNBQ0FJUVFBMkFnd2dCRUVnYWlJR1FRQTJBZ1FnQmtFQU5nSUlJQVpCek93QU5nSUFJQVpCQURZQ0RDQUVRUkJxSWdkQkFEWUNCQ0FIUVFBMkFnZ2dCMEgwN0FBMkFnQWdCMEVBTmdJTUlBUkJBRFlDQkNBRVFRQTJBZ2dnQkVIMDdBQTJBZ0FnQkVFQU5nSU1JQUFnQVNBQ0lBTVF2d2NnQmtFQU5nSU1JQU1vQWdBaEFTQUlRUUUyQWd4QkRCQkpJZ1VnQ2lnQ0FDSUNOZ0lBSUFWQkFEWUNCQ0FGSUFFMkFnZ2dBa0VFYWlBTElBSWJJQVUyQWdBZ0NpQUZOZ0lBSUFVRVFDQUlJUUlnQ2lFTklBWWhBUU5BSUFJaUNVRUlhaUVPSUFVaEFnTkFJQUlvQWdnaERDQUpJQWtvQWd4QmYybzJBZ3dnQ1NBQ0tBSUFJZ1UyQWdRZ0FnUkFJQUpCMExNQ0tBSUFOZ0lBUWRDekFpQUNOZ0lBSUFrb0FnUWhCUXNnQlVFRWFpQU9JQVViUVFBMkFnQWdEQ2dDSUNBSElBd29BaVFnQkJDK0J5QURJQXcyQWdRZ0FDQURJQWNnQkNBQkVOQURJQTBvQWdBRVFDQUpLQUlFSVFJTUFRc0xJQUZCQkdvaURTZ0NBQ0lGQkVBZ0FTRUNJQWtoQVF3QkN3c2dCQ2dDQkNFQUlBUkJpTzBBTmdJQUlBQUVRRUV3SUFBZ0JDZ0NDQkJJSUFSQkFEWUNDQ0FFUVFBMkFnUUxCU0FFUVlqdEFEWUNBQXNnQjBHSTdRQTJBZ0FnQnlnQ0JDSUFCRUJCTUNBQUlBY29BZ2dRU0NBSFFRQTJBZ2dnQjBFQU5nSUVDeUFHUWVEc0FEWUNBQ0FHS0FJRUlnQUVRRUVNSUFBZ0JpZ0NDQkJJSUFaQkFEWUNDQ0FHUVFBMkFnUUxJQWhCNE93QU5nSUFJQW9vQWdBaUFFVUVRQ0FFSkFRUEMwRU1JQUFnQ3lnQ0FCQklJQXRCQURZQ0FDQUtRUUEyQWdBZ0JDUUVDNHdNQWd4L0FYd2pCQ0VHSXdSQnNBRnFKQVFqQkNNRlRnUkFRYkFCRUFBTElBWkJrQUZxSWdvaUNFRUFOZ0lFSUFoQkFEWUNBQ0FCS0FJTUlRUWdCa0hnQUdvaUNFRUFOZ0lZSUFnZ0JFRi9hallDSENBRVFRRklCRUFnQ0VFQU5nSVVJQWhCQURZQ0RDQUlRUUEyQWhBRklBZ2dCRUVFZEJCS0lnYzJBaEFnQjBVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUJVRUFOZ0lBSUFWQmZ6WUNCQ0FGUWFnNFFRQVFBUXNnQ0NBSE5nSU1JQWdnQkVFRWRDQUhhaUlFTmdJVUlBZEJFR29oQlNBRUlBZExCRUFnQjBFQUlBZEJmM01nQkNBRklBUWdCVXNiYWtFUWFrRndjUkJpR2dzTElBaEJqT0VBTmdJQUlBaEJBRFlDQkNBSUlBRTJBZ2dnQ0NBQklBZ1FXVFlDQkNBSVFaRHBBRFlDQUNBSVFnQTNBeUFnQ0VJQU53TW9JQUVvQWd3aEJTQUdRVEJxSWdkQkFEWUNHQ0FISUFWQmYybzJBaHdnQlVFQlNBUkFJQWRCQURZQ0ZDQUhRUUEyQWd3Z0IwRUFOZ0lRQlNBSElBVkJCSFFRU2lJRU5nSVFJQVJGQkVCQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdsQkFEWUNBQ0FKUVg4MkFnUWdDVUdvT0VFQUVBRUxJQWNnQkRZQ0RDQUhJQVZCQkhRZ0JHb2lCVFlDRkNBRVFSQnFJUWtnQlNBRVN3UkFJQVJCQUNBRVFYOXpJQVVnQ1NBRklBbExHMnBCRUdwQmNIRVFZaG9MQ3lBSFFZemhBRFlDQUNBSFFRQTJBZ1FnQnlBQk5nSUlJQWNnQVNBSEVGazJBZ1FnQjBHUTZRQTJBZ0FnQjBJQU53TWdJQWRDQURjREtDQUJLQUlNSVFVZ0JrRUFOZ0lZSUFZZ0JVRi9hallDSENBRlFRRklCRUFnQmtFQU5nSVVJQVpCQURZQ0RDQUdRUUEyQWhBRklBWWdCVUVFZEJCS0lnUTJBaEFnQkVVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUNVRUFOZ0lBSUFsQmZ6WUNCQ0FKUWFnNFFRQVFBUXNnQmlBRU5nSU1JQVlnQlVFRWRDQUVhaUlGTmdJVUlBUkJFR29oQ1NBRklBUkxCRUFnQkVFQUlBUkJmM01nQlNBSklBVWdDVXNiYWtFUWFrRndjUkJpR2dzTElBWkJqT0VBTmdJQUlBWkJBRFlDQkNBR0lBRTJBZ2dnQmlBQklBWVFXVFlDQkNBR1FaRHBBRFlDQUNBR1FnQTNBeUFnQmtJQU53TW9JQVpCb0FGcUlnUkJBRFlDQkNBRVFRQTJBZ2dnQkVITTdBQTJBZ0FnQkVFQU5nSU1JQUVvQW5RaUJRUkFBa0FnQnlnQ0RDSUxJQWdvQWd3aUQwWWhEQ0FMSUFZb0Fnd2lDVWNFUUFOQUlBVW9BaEFpRFVFRWRDQUphaUlPUWdBM0F3QWdEa0lBTndNSUlBMUJCSFFnQzJvaURrSUFOd01BSUE1Q0FEY0RDQ0FNUlFSQUlBMUJCSFFnRDJvaURVSUFOd01BSUExQ0FEY0RDQXNnQlNnQ0FDSUZEUUFNQWdBTEFBc2dEQVJBQTBBZ0JTZ0NFRUVFZENBSmFpSUxRZ0EzQXdBZ0MwSUFOd01JSUFVb0FnQWlCUTBBQ3dVRFFDQUZLQUlRSWd0QkJIUWdDV29pREVJQU53TUFJQXhDQURjRENDQUxRUVIwSUE5cUlndENBRGNEQUNBTFFnQTNBd2dnQlNnQ0FDSUZEUUFMQ3dzTElBUkJBRFlDREFKQUFrQUNRQ0FBS0FJb0RnSUFBUUlMSUFBZ0FTQUNJQW9RMFFjTUFRc2dBQ0FCSUFJZ0NoRFFCd3NnQ2lBS0tBSUFOZ0lFSUFBZ0FpQUtJQVFRMXdFZ0FDQUNJQW9vQWdBUTFnRWdBQ0FDSUFRZ0J4RFBCeUFBSUFJZ0JDQUdFTTRISUFBZ0FpQUVJQWdRelFjZ0FTZ0NkQ0lBQkVBZ0NDZ0NEQ0VDSUFjb0Fnd2hCU0FHS0FJTUlRa2dBeWdDRENFREEwQWdBQ2dDRUNJQlFRUjBJQUpxS3dNSUlBRkJCSFFnQldvckF3aWdJQUZCQkhRZ0NXb3JBd2lnSVJBZ0FVRUVkQ0FEYWlBQlFRUjBJQUpxS3dNQUlBRkJCSFFnQldvckF3Q2dJQUZCQkhRZ0NXb3JBd0NnT1FNQUlBRkJCSFFnQTJvZ0VEa0RDQ0FBS0FJQUlnQU5BQXNMSUFvZ0NpZ0NBQkNBQVNBRVFlRHNBRFlDQUNBRUtBSUVJZ0FFUUVFTUlBQWdCQ2dDQ0JCSUlBUkJBRFlDQ0NBRVFRQTJBZ1FMSUFaQmpPRUFOZ0lBSUFZb0FnZ2lBQVJBSUFZZ0JpZ0NCRFlDbUFFZ0JDQUdLQUtZQVRZQ0FDQUFJQVFRVFFzZ0JpZ0NFQkJESUFkQmpPRUFOZ0lBSUFjb0FnZ2lBQVJBSUFZZ0J5Z0NCRFlDbUFFZ0JDQUdLQUtZQVRZQ0FDQUFJQVFRVFFzZ0J5Z0NFQkJESUFoQmpPRUFOZ0lBSUFnb0FnZ2lBRVVFUUNBSUtBSVFFRU1nQmlRRUR3c2dCaUFJS0FJRU5nS1lBU0FFSUFZb0FwZ0JOZ0lBSUFBZ0JCQk5JQWdvQWhBUVF5QUdKQVFMZ1FFQkFYOGdBRUd2QVRZQ0FDQUFRUUU2QUFRZ0FFRUlhaUlCUWdBM0F4QWdBVUlBTndNWUlBRkJBallDQUNBQVFVQnJJZ0ZDQURjREFDQUJRZ0EzQXdnZ0FFRWVOZ0pRSUFCQkFEWUNYQ0FBUVFBMkFtQWdBRUc0N0FBMkFsZ2dBRUVBTmdKa0lBQkJCRFlDTkNBQVFSazJBakFnQUVFQk5nSW9JQUJCQURZQ0xBc0VBQ01FQzZnTEFndC9EM3dnQUNnQ0FDSUxJQU5CQVdvaURFRUNkR29vQWdBb0FuUWlCUVIvQTBBZ0FTZ0NBQ0FNUVFKMGFpZ0NBQ2dDRENJRUlBVWlEU2dDRUNJR1FaZ0JiR29yQXdBaEZDQUdRWmdCYkNBRWFpc0RDQ0VUSUFVb0FoZ2lDQVI4QW54QkFDRUxRUUFoQlVFQUlRWkJBQ0VKQTBBZ0FpZ0NBQ0FNUVFKMGFpZ0NBQ2dDRENBSUtBSU1JZ1FvQWhoQkdHeHFMQUFSUlFSQUlBUW9BZ2dpQnlBTlJnUkFJQVFvQWd3aEJ3c2dBU2dDQUNBTVFRSjBhaWdDQUNnQ0RDSUVJQWNvQWhBaUNrR1lBV3hxS3dNQUlROGdDa0dZQVd3Z0JHb3JBd2doRVNBR1FRRnFJUVpCR0JCSklnUkJBRFlDQUNBRUlBVTJBZ1FnQkNBUE9RTUlJQVFnRVRrREVDQUpCRUFnQlNBRU5nSUFJQVFoQlFVZ0JDSUxJZ1VoQ1FzTElBZ29BZ0FpQ0EwQUN5QVVSQUFBQUFBQUFQQS9vQ0VQSUFsRklnY0VmRVFBQUFBQUFBQUFBQ0VQUVFFaEIwUVlMVVJVK3lFWlFBVWdCa0VCUmdSQUlBa3JBd2dnRktFaEVTQUpLd01RSUJPaElSQkJBQ0VISUE4Z0ZLRWlEMFFBQUFBQUFBQUFBR0VnRXlBVG9TSVNSQUFBQUFBQUFBQUFZWEVFZkVRQUFBQUFBQUFBQUFVZ0VVUUFBQUFBQUFBQUFHRWdFRVFBQUFBQUFBQUFBR0Z4Qkh4RUFBQUFBQUFBQUFBRklCQWdFUkNMQVNBU0lBOFFpd0doSWc5RUdDMUVWUHNoR1VDZ0lBOGdEMFFBQUFBQUFBQUFBR01iQ3dzaUQwUVlMVVJVK3lFSlFLQU1BZ3NnRHlBVW9TSWNSQUFBQUFBQUFBQUFZU0FUSUJPaEloMUVBQUFBQUFBQUFBQmhjU0VPUWFEVEFpc0RBQ0VTUkFBQUFBQUFBQUFBSVJGRUFBQUFBQUFBQUFBaEZTQUpJZ1loQkVFQklRZ0RRQUpBSUFRaUNpc0RDQ0lXSUJTaElSY2dCQ3NERUNJWUlCT2hJUmtnRGdSOFJBQUFBQUFBQUFBQUJTQVhSQUFBQUFBQUFBQUFZU0FaUkFBQUFBQUFBQUFBWVhFRWZFUUFBQUFBQUFBQUFBVWdHU0FYRUlzQklCMGdIQkNMQWFFaUQwUVlMVVJVK3lFWlFLQWdEeUFQUkFBQUFBQUFBQUFBWXhzTEN5RWJJQmRFQUFBQUFBQUFBQUJoSUJsRUFBQUFBQUFBQUFCaGNRUkFJQVloQkVULy8vLy8vLy92ZnlFUEEwQUNRQUpBSUJZZ0JDc0RDQ0lRSUJLZ1l5QVdJQkFnRXFGa2NRUkFJQmdnRWlBRUt3TVFJaENnWTBVZ0dDQVFJQktoWkVWeUlBOUVBQUFBQUFBQUFBQmtjUTBCQlNBUFJBQUFBQUFBQUFBQVpBMEJDd3dCQzBRQUFBQUFBQUFBQUNFUEN5QUVLQUlBSWdRTkFBc0ZJQVloQkVULy8vLy8vLy92ZnlFUEEwQWdCQ3NERUNFUUFrQUNRQ0FXSUFRckF3Z2lHaUFTb0dNZ0ZpQWFJQktoWkhGRkRRQWdHQ0FTSUJDZ1kwVWdHQ0FRSUJLaFpFVnlEUUFNQVFzZ0R5QWFJQlNoSWhwRUFBQUFBQUFBQUFCaElCQWdFNkVpRUVRQUFBQUFBQUFBQUdGeEJIeEVBQUFBQUFBQUFBQUZJQkFnR2hDTEFTQVpJQmNRaXdHaEloQkVHQzFFVlBzaEdVQ2dJQkFnRUVRQUFBQUFBQUFBQUdNYkN5SVFaQVJBSUJBaER3c0xJQVFvQWdBaUJBMEFDd3NnR3lBUG9DQVZJQWtnQ2tZZ0R5QVZJQkdoWkhJaUJCc2hGU0FiSUJFZ0JCc2hEeUFLUlEwQUlBb29BZ0FpQkNBS0lBUWJJZ1JGSUFoQkNVdHlEUUFnQ0VFQmFpRUlJQVFvQWdBRVFDQVBJUkVNQWdzTEN5QVBSQmd0UkZUN0lRbEFvQ0FWSUE4Z0ZXRWJDd3NGUVFBaEMwRUFJUVZFQUFBQUFBQUFBQUFoRDBFQklRZEVHQzFFVlBzaEdVQUxJUkVnQVNnQ0FDSUVJQXhCQW5ScUtBSUFLQUlNSUEwb0FoQkJtQUZzYWlnQ0lDZ0NFQ0lHUVpnQmJDQURRUUowSUFScUtBSUFLQUlNSWdScUlBODVBNGdCSUFaQm1BRnNJQVJxSUJFNUE1QUJJQWRGQkVCQkdDQUxJQVVRU0FzZ0RTZ0NBQ0lGRFFBTElBQW9BZ0FGSUFzTElBTkJBblJxS0FJQUtBSjBJZ1ZGQkVBUEN5QUJLQUlBSUFOQkFuUnFLQUlBS0FJTUlRQURRQ0FGS0FJUUlnRkJtQUZzSUFCcUtBSXdLQUlRSVFJZ0FVR1lBV3dnQUdvZ0FrR1lBV3dnQUdvckE0Z0JPUU9JQVNBQlFaZ0JiQ0FBYWlBQ1FaZ0JiQ0FBYWlzRGtBRTVBNUFCSUFVb0FnQWlCUTBBQ3d2c0RRSUhmd2g4SXdRaEJTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dCVUVBTmdJRUlBVkJBRFlDQ0NBRlFianNBRFlDQUNBRlFRQTJBZ3dnQkNnQ0JDSUpSUVJBSUFWQjVPQUFOZ0lBSUFVa0JBOExJQUZCQVVZaEMwRUFJUUVEUUNBSktBSUlJUWdnQlVFQU5nSU1JQVlFUUVFWUlBRWdCU2dDQ0JCSUlBVkJBRFlDQ0NBRlFRQTJBZ1FMSUFJb0FnQWdBRUVDZEdvb0FnQW9BZ3dpQmlBSUtBSVFJZ0ZCbUFGc2FpZ0NNQ2dDRUNJRVFaZ0JiQ0FHYWlzREFDRVBJQVJCbUFGc0lBWnFLd01JSVEwZ0FVR1lBV3dnQm1vckF6Z2hFU0FMQkVBZ0NDZ0NHQ0lFQkVBZ0JDRUdBMEFnQmlnQ0RDSUVLQUlJSWdFZ0NFWUVRQ0FFS0FJTUlRRUxJQU1vQWdBZ0FFRUNkR29vQWdBb0Fnd2lCeUFFS0FJWUlncEJHR3hxTEFBUVJRUkFJQUlvQWdBZ0FFRUNkR29vQWdBb0Fnd2lCQ0FJS0FJUVFaZ0JiR29vQWpBZ0FTZ0NFQ0lCUVpnQmJDQUVhaWdDTUVZRVFDQUJRWmdCYkNBRWFpZ0NMRUVCUndSQUlBRkJtQUZzSUFScUxBQ0FBUVJBSUJFZ0R5QUJRWmdCYkNBRWFpc0RBQ0lPb1NJTUlBeWlJQTBnQVVHWUFXd2dCR29yQXdnaUVLRWlEQ0FNb3FDZklnd2dFYUVnQ2tFWWJDQUhhaXNEQUtGRUFBQUFBQUFBNEQraW9DQU1veUVNUVFGQmdKVHIzQU1RWVVFQmFyZEVBQUFBQVdYTnpVR2pJQTRnRDZFaURpQU9vaUFRSUEyaEloQWdFS0tnbjBTYW1abVptWm1wUDZLaUlSSkJBVUdBbE92Y0F4QmhRUUZxdDBRQUFBQUJaYzNOUWFORUdDMUVWUHNoR1VDaVJBQUFBQUFBQUFBQW9DRVRJQVVnQlNnQ0RFRUJhallDREVFWUVFa2hBU0FOSUJBZ0RLS2dJQklnRXhDcUFhS2dJUkFnRHlBT0lBeWlvQ0FTSUJNUXF3R2lvQ0VNSUFVb0FnZ2hCQ0FCUVFBMkFnQWdBU0FFTmdJRUlBRWdERGtEQ0NBQklCQTVBeEFnQlNnQ0JBUkFJQVFnQVRZQ0FBVWdCU0FCTmdJRUN5QUZJQUUyQWdnTEN3c0xJQVlvQWdBaUJnMEFDeUFDS0FJQUlBQkJBblJxS0FJQUtBSU1JUVlnQ0NnQ0VDRUJDd3NnQVVHWUFXd2dCbW9vQW53b0FnUWlCQVJBSUFZaEFTQUVJUVlEUUNBUklBWW9BZ2dvQWhBaUJFR1lBV3dnQVdvckF6aWpJUkFnQkVHWUFXd2dBV29yQXdBZ0Q2RWhEQ0FFUVpnQmJDQUJhaXNEQ0NBTm9TRU9RUUZCZ0pUcjNBTVFZVUVCYXJkRUFBQUFBV1hOelVHaklBd2dES0lnRGlBT29xQ2ZSSnFabVptWm1hay9vcUloRWtFQlFZQ1U2OXdERUdGQkFXcTNSQUFBQUFGbHpjMUJvMFFZTFVSVSt5RVpRS0pFQUFBQUFBQUFBQUNnSVJNZ0JTQUZLQUlNUVFGcU5nSU1RUmdRU1NFQklBMGdEaUFRb3FBZ0VpQVRFS29Cb3FBaERpQVBJQXdnRUtLZ0lCSWdFeENyQWFLZ0lRd2dCU2dDQ0NFRUlBRkJBRFlDQUNBQklBUTJBZ1FnQVNBTU9RTUlJQUVnRGprREVDQUZLQUlFQkVBZ0JDQUJOZ0lBQlNBRklBRTJBZ1FMSUFVZ0FUWUNDQ0FDS0FJQUlBQkJBblJxS0FJQUlRRWdCaWdDQUNJR0JFQWdBU2dDRENFQkRBRUxDeUFCS0FJTUlRWWdDQ2dDRUNFQkN5QUJRWmdCYkNBR2FpZ0NaQ2dDQkNJSEJFQWdBVUdZQVd3Z0Jtb29BbWdvQWdRaUJBUkFJQVloQVNBSElRWURmeUFHS3dNSUlRNGdCQ2dDQ0NnQ0VDSUhRWmdCYkNBQmFpc0RBQ0FQb1NFUklBZEJtQUZzSUFGcUt3TUlJQTJoSVF4QkFVR0FsT3ZjQXhCaFFRRnF0MFFBQUFBQlpjM05RYU1nRVNBUm9pQU1JQXlpb0o5RW1wbVptWm1acVQraW9pRVFRUUZCZ0pUcjNBTVFZVUVCYXJkRUFBQUFBV1hOelVHalJCZ3RSRlQ3SVJsQW9rUUFBQUFBQUFBQUFLQWhFaUFGSUFVb0FneEJBV28yQWd4QkdCQkpJUUVnRFNBT0lBeWlvQ0FRSUJJUXFnR2lvQ0VNSUE4Z0RpQVJvcUFnRUNBU0VLc0JvcUFoRVNBRktBSUlJUWNnQVVFQU5nSUFJQUVnQnpZQ0JDQUJJQkU1QXdnZ0FTQU1PUU1RSUFVb0FnUUVRQ0FISUFFMkFnQUZJQVVnQVRZQ0JBc2dCU0FCTmdJSUlBSW9BZ0FnQUVFQ2RHb29BZ0FvQWd3aUFTQUlLQUlRSWdkQm1BRnNhaWdDWkNJS0tBSUlJQVpIQkVBQ1FBSkFJQVpGRFFBZ0JpZ0NBQ0lHUlEwQURBRUxJQW9vQWdRaEJnc0xJQVFvQWdBaUJBMEFJQUVoQmlBSEN5RUJDd3NnQlNnQ0JDSUVCRUJFQUFBQUFBQUFBQUFoRDBRQUFBQUFBQUFBQUNFTkEwQWdEeUFFS3dNSW9DRVBJQTBnQkNzREVLQWhEU0FFS0FJQUlnUU5BQXNGUkFBQUFBQUFBQUFBSVE5RUFBQUFBQUFBQUFBaERRc2dCU0FGS0FJQUtBSUlRZjhBY1VFRWFoRUlBQ0VFSUEwZ0JTQUZLQUlBS0FJSVFmOEFjVUVFYWhFSUFMZWpJUTBnQVVHWUFXd2dCbW9nRHlBRXQ2TTVBd0FnQVVHWUFXd2dCbW9nRFRrRENDQUNLQUlBSUFCQkFuUnFLQUlBS0FJTUlBZ29BaEJCbUFGc2FrRUJPZ0NBQVNBRktBSUVJUVlnQ1NnQ0FDSUpCRUFnQmlFQkRBRUxDeUFGUWVUZ0FEWUNBQ0FHUlFSQUlBVWtCQThMUVJnZ0JpQUZLQUlJRUVnZ0JVRUFOZ0lJSUFWQkFEWUNCQ0FGSkFRTGh3NENCbjhJZkNNRUlRY2pCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQWRCQURZQ0JDQUhRUUEyQWdnZ0IwRzQ3QUEyQWdBZ0IwRUFOZ0lNSUFJZ0F5QUVJQUFRMVFjZ0FpZ0NBQ0FBUVFKMGFpZ0NBQ2dDZENJR1JRUkFJQWRCNU9BQU5nSUFJQWNrQkE4TElBRkJBVVloQ3dOQUFrQUNRQUpBSUFNb0FnQWdBRUVDZEdvb0FnQW9BZ3dpQVNBR0lna29BaEFpQmtHWUFXeHFLQUlzUVFKckRnTUJBQUVDQ3lBRklBVW9BZ3hCQVdvMkFneEJEQkJKSVFFZ0JTZ0NDQ0VDSUFGQkFEWUNBQ0FCSUFJMkFnUWdBU0FKTmdJSUlBVW9BZ1FFUUNBQ0lBRTJBZ0FGSUFVZ0FUWUNCQXNnQlNBQk5nSUlEQUVMSUFkQkFEWUNEQ0FIS0FJRUlnSUVRRUVZSUFJZ0J5Z0NDQkJJSUFkQkFEWUNDQ0FIUVFBMkFnUWdDU2dDRUNFR0lBTW9BZ0FnQUVFQ2RHb29BZ0FvQWd3aEFRc2dCa0dZQVd3Z0FXb29BakFvQWhBaUFrR1lBV3dnQVdvckF3QWhEaUFDUVpnQmJDQUJhaXNEQ0NFTklBWkJtQUZzSUFGcUt3TTRJUThnQ3dSQUlBa29BaGdpQWdSQVFRQWhCaUFDSVFFRFFDQURLQUlBSUFCQkFuUnFLQUlBS0FJTUlnZ2dDU2dDRUVHWUFXeHFLQUl3SUFFb0Fnd2lDaWdDQ0NJQ0lBbEdCSDhnQ2lnQ0RBVWdBZ3NvQWhBaUFrR1lBV3dnQ0dvb0FqQkdCRUFnQWtHWUFXd2dDR29vQWl4QkFVY0VRQ0FDUVpnQmJDQUlhaXdBZ0FFRVFDQVBJQTRnQWtHWUFXd2dDR29yQXdBaUVhRWlEQ0FNb2lBTklBSkJtQUZzSUFocUt3TUlJaENoSWd3Z0RLS2dueUlNSUEraElBUW9BZ0FnQUVFQ2RHb29BZ0FvQWd3Z0NpZ0NHRUVZYkdvckF3Q2hSQUFBQUFBQUFPQS9vcUFnREtNaERDQVJJQTZoSWhFZ0VhSWdFQ0FOb1NJUUlCQ2lvSjlFbXBtWm1abVpxVCtpUVFGQmdKVHIzQU1RWVVFQmFyZEVBQUFBQVdYTnpVR2pvaUVTUVFGQmdKVHIzQU1RWVVFQmFyZEVBQUFBQVdYTnpVR2pSQmd0UkZUN0lSbEFva1FBQUFBQUFBQUFBS0FoRXlBSElBY29BZ3hCQVdvMkFneEJHQkJKSVFZZ0RTQVFJQXlpb0NBU0lCTVFxZ0dpb0NFUUlBNGdFU0FNb3FBZ0VpQVRFS3NCb3FBaERDQUhLQUlJSVFnZ0JrRUFOZ0lBSUFZZ0NEWUNCQ0FHSUF3NUF3Z2dCaUFRT1FNUUlBY29BZ1FpQWdSQUlBZ2dCallDQUNBSElBWTJBZ2dnQWlFR0JTQUhJQVkyQWdRZ0J5QUdOZ0lJQ3dzTEN5QUJLQUlBSWdFTkFBc2dBeWdDQUNBQVFRSjBhaWdDQUNnQ0RDRUJJQWtvQWhBaEFnVWdCaUVDUVFBaEJnc0ZJQVloQWtFQUlRWUxBa0FDUUNBQ1FaZ0JiQ0FCYWlnQ1pDZ0NCQ0lJQkVBZ0FrR1lBV3dnQVdvb0FtZ29BZ1FpQWtVTkFTQUlJUVlEUUNBR0t3TUlJUkVnQWlnQ0NDZ0NFQ0lJUVpnQmJDQUJhaXNEQUNBT29TRVBJQWhCbUFGc0lBRnFLd01JSUEyaElReEJBVUdBbE92Y0F4QmhRUUZxdDBRQUFBQUJaYzNOUWFNZ0R5QVBvaUFNSUF5aW9KOUVtcG1abVptWnFUK2lvaUVRUVFGQmdKVHIzQU1RWVVFQmFyZEVBQUFBQVdYTnpVR2pSQmd0UkZUN0lSbEFva1FBQUFBQUFBQUFBS0FoRWlBSElBY29BZ3hCQVdvMkFneEJHQkJKSVFFZ0RTQVJJQXlpb0NBUUlCSVFxZ0dpb0NFTUlBNGdFU0FQb3FBZ0VDQVNFS3NCb3FBaER5QUhLQUlJSVFnZ0FVRUFOZ0lBSUFFZ0NEWUNCQ0FCSUE4NUF3Z2dBU0FNT1FNUUlBY29BZ1FFUUNBSUlBRTJBZ0FGSUFjZ0FUWUNCQXNnQnlBQk5nSUlJQU1vQWdBZ0FFRUNkR29vQWdBb0Fnd2lBU0FKS0FJUVFaZ0JiR29vQW1RaUNDZ0NDQ0FHUndSQUFrQUNRQ0FHUlEwQUlBWW9BZ0FpQmtVTkFBd0JDeUFJS0FJRUlRWUxDeUFDS0FJQUlnSU5BQXNNQVFVZ0JnMEJJQUpCbUFGc0lBRnFLd000SVE4Z0FrR1lBV3dnQVdvckE0Z0JJZ3dnQWtHWUFXd2dBV29yQTVBQklBeWhRUUZCZ0pUcjNBTVFZVUVCYXJkRUFBQUFBV1hOelVHam9xQWhEQ0FISUFjb0FneEJBV28yQWd4QkdCQkpJUVlnRFNBUElBd1FxZ0dpb0NFTklBNGdEeUFNRUtzQm9xQWhEaUFIS0FJSUlRRWdCa0VBTmdJQUlBWWdBVFlDQkNBR0lBNDVBd2dnQmlBTk9RTVFJQWNvQWdRRVFDQUJJQVkyQWdBZ0J5QUdOZ0lJREFJRklBY2dCallDQkNBSElBWTJBZ2dMQ3d3QkN5QUhLQUlFSVFZTElBa29BaEFoQVNBREtBSUFJQUJCQW5ScUtBSUFLQUlNSVFJZ0JnUkFSQUFBQUFBQUFBQUFJUTVFQUFBQUFBQUFBQUFoRFFOQUlBNGdCaXNEQ0tBaERpQU5JQVlyQXhDZ0lRMGdCaWdDQUNJR0RRQUxCVVFBQUFBQUFBQUFBQ0VPUkFBQUFBQUFBQUFBSVEwTElBY2dCeWdDQUNnQ0NFSC9BSEZCQkdvUkNBQWhCaUFOSUFjZ0J5Z0NBQ2dDQ0VIL0FIRkJCR29SQ0FDM295RU5JQUZCbUFGc0lBSnFJQTRnQnJlak9RTUFJQUZCbUFGc0lBSnFJQTA1QXdnZ0F5Z0NBQ0FBUVFKMGFpZ0NBQ2dDRENBSktBSVFRWmdCYkdwQkFUb0FnQUVMSUFrb0FnQWlCZzBBQ3lBSEtBSUVJUUFnQjBIazRBQTJBZ0FnQUVVRVFDQUhKQVFQQzBFWUlBQWdCeWdDQ0JCSUlBZEJBRFlDQ0NBSFFRQTJBZ1FnQnlRRUM3SUNBZ1ovQVh3akJDRUZJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFGUVFBMkFnUWdCVUVBTmdJSUlBVkJzT1lBTmdJQUlBVkJBRFlDRENBQ0tBSUFJQUJCQVdvaUJrRUNkR29vQWdBb0FuUWlDQVJBSUFNb0FnQWlCeUFHUVFKMGFpZ0NBQ2dDRENFR0lBQkJBblFnQjJvb0FnQW9BZ3doQndOQUlBZ29BaEFpQ2tHWUFXd2dCbW9vQWlBb0FoQWhDU0FLUVpnQmJDQUdhaXNEQ0NFTElBbEJtQUZzSUFkcUlBcEJtQUZzSUFacUt3TUFPUU1BSUFsQm1BRnNJQWRxSUFzNUF3Z2dDVUdZQVd3Z0IycEJBVG9BZ0FFZ0NDZ0NBQ0lJRFFBTEN5QUFJQUVnQWlBRElBUWdCUkRYQnlBQUlBRWdBeUFFSUFVUTFnY2dCVUhFNWdBMkFnQWdCU2dDQkNJQVJRUkFJQVVrQkE4TFFRd2dBQ0FGS0FJSUVFZ2dCVUVBTmdJSUlBVkJBRFlDQkNBRkpBUUxzZ01CQ0g4Z0FFRUVhaUlIS0FJQUlRSWdBU0FBS0FJUUlnVkJBV29nQUNnQ0RDSUlheUlEYWlJR1FReHNFRW9oQkNBQ1JRUkFJQWNnQkRZQ0FDQUVSUVJBUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlDUVFBMkFnQWdBa0YvTmdJRUlBSkJxRGhCQUJBQkN5QUFRUUFnQ0d0QkRHd2dCR28yQWdBZ0FFRUlhaUFHUVF4c0lBUnFOZ0lBSUFBZ0FTQUZhallDRUE4TElBUkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ1ZCQURZQ0FDQUZRWDgyQWdRZ0JVR29PRUVBRUFFTElBWWdBeUFHSUFOSUd5SUZRUUJLQkVCQkFDRURBMEFnQTBFTWJDQUVha0dVNXdBMkFnQWdBMEVNYkNBRWFpQURRUXhzSUFKcUlnZ29BZ1EyQWdRZ0EwRU1iQ0FFYWlBRFFReHNJQUpxSWdrb0FnZzJBZ2dnQ1VFQU5nSUlJQWhCQURZQ0JDQURRUUZxSWdNZ0JVZ05BQXNMSUFJZ0FFRUlhaUlES0FJQVNRUkFBMEFnQWlnQ0FDZ0NBQ0VGSUFJZ0JVSC9BM0ZCaEFOcUVRRUFJQUpCREdvaUFpQURLQUlBU1EwQUN5QUhLQUlBSVFJTElBSVFReUFISUFRMkFnQWdBQ2dDRUNFQ0lBQkJBQ0FBS0FJTWEwRU1iQ0FFYWpZQ0FDQURJQVpCREd3Z0JHbzJBZ0FnQUNBQklBSnFOZ0lRQzJZQkFuOGdBQ2dDRUNJQklBQW9BaFJKQkVBRFFDQUJLQUlBS0FJQUlRSWdBU0FDUWY4RGNVR0VBMm9SQVFBZ0FVRU1haUlCSUFBb0FoUkpEUUFMSUFBb0FoQWhBUXNnQVJCRElBQkJBRFlDR0NBQVFYODJBaHdnQUVJQU53SUlJQUJDQURjQ0VBdmtBUUVFZnlBQUtBSVFJZ0lnQUNnQ0ZFa0VRQU5BSUFJb0FnQW9BZ0FoQXlBQ0lBTkIvd054UVlRRGFoRUJBQ0FDUVF4cUlnSWdBQ2dDRkVrTkFBc2dBQ2dDRUNFQ0N5QUFRUXhxSVFNZ0FFRWdhaUVFSUFJUVF5QUFRUUEyQWhnZ0FDQUJRWDlxTmdJY0lBRkJBVWdFUUNBQVFRQTJBaFFnQTBFQU5nSUFJQUJCQURZQ0VDQURJQVFRMWdNUEN5QUFJQUZCREd3UVNpSUNOZ0lRSUFKRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnVkJBRFlDQUNBRlFYODJBZ1FnQlVHb09FRUFFQUVMSUFNZ0FqWUNBQ0FBSUFGQkRHd2dBbW8yQWhRZ0F5QUVFTllEQzlJQkFRZC9JQUVnQUNnQ0hFRUJhaUFBS0FJWWF5SUNheUlCUlFSQUR3c2dBRUVNYWlBQkVOa0hJQUFvQWhBZ0FrRU1iR29pQWlBQUtBSVVJZ0ZQQkVBUEN3TkFJQUpCbE9jQU5nSUFJQUpCQkdvaUJrRUFOZ0lBSUFKQkNHb2lBMEVBTmdJQUlBQW9BaVFpQkFSQUlBUWhBUU5BUVFnUVNTSUZRUUEyQWdBZ0JTQUJLQUlFTmdJRUFuOGdCaWdDQUFSL0lBTW9BZ0FoQnlBREJTQURJUWNnQmdzaENDQUhJQVUyQWdBZ0NBc2dCVFlDQUNBQktBSUFJZ0VOQUFzZ0FDZ0NGQ0VCQ3lBQ1FReHFJZ0lnQVVrTkFBc0wrUUVCQTM4akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVp6c0FEWUNBQ0FBUVpUbkFEWUNJQ0FBS0FJa0lnRUVRRUVJSUFFZ0FDZ0NLQkJJSUFCQkFEWUNLQ0FBUVFBMkFpUUxJQUpCQkdvaEFTQUFRWkRnQURZQ0FDQUFLQUlJSWdNRVFDQUNJQUFvQWdRMkFnQWdBU0FDS0FJQU5nSUFJQU1nQVJCWEN5QUFLQUlRSWdFZ0FDZ0NGRThFUUNBQkVFTWdBRUhRdEFJb0FnQTJBZ0JCMExRQ0lBQTJBZ0FnQWlRRUR3c0RRQ0FCSUFFb0FnQW9BZ0JCL3dOeFFZUURhaEVCQUNBQlFReHFJZ0VnQUNnQ0ZFa05BQXNnQUNnQ0VCQkRJQUJCMExRQ0tBSUFOZ0lBUWRDMEFpQUFOZ0lBSUFJa0JBdXlCQUVNZnlBQVFRUnFJZ2NvQWdBaEFpQUJJQUFvQWhBaUEwRUJhaUFBS0FJTUlnWnJJZ1JxSWdoQkJIUVFTaUVGSUFKRkJFQWdCeUFGTmdJQUlBVkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ0pCQURZQ0FDQUNRWDgyQWdRZ0FrR29PRUVBRUFFTElBQkJBQ0FHYTBFRWRDQUZhallDQUNBQVFRaHFJQWhCQkhRZ0JXbzJBZ0FnQUNBQklBTnFOZ0lRRHdzZ0JVVUVRRUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlBMEVBTmdJQUlBTkJmellDQkNBRFFhZzRRUUFRQVFzZ0NDQUVJQWdnQkVnYklneEJBRW9FUUVFQUlRTURmeUFEUVFSMElBVnFJZzFCNU9BQU5nSUFJQU5CQkhRZ0JXb2lDVUVBTmdJRUlBTkJCSFFnQldvaUNrRUFOZ0lJSUFOQkJIUWdBbW9vQWdRaUJBUi9BMEJCR0JCSklRWWdDaWdDQ0NFTElBWkJBRFlDQUNBR0lBczJBZ1FnQmlBRUt3TUlPUU1JSUFZZ0JDc0RFRGtERUNBSktBSUVCRUFnQ3lBR05nSUFCU0FKSUFZMkFnUUxJQW9nQmpZQ0NDQUVLQUlBSWdRTkFBc2dCeWdDQUFVZ0Fnc2hCQ0FEUVFSMElBVnFJQU5CQkhRZ0Ftb29BZ3cyQWd3Z0RVSDQ0QUEyQWdBZ0EwRUJhaUlESUF4SUJIOGdCQ0VDREFFRklBUUxDeUVDQ3lBQ0lBQkJDR29pQkNnQ0FFa0VRQU5BSUFJb0FnQW9BZ0FoQXlBQ0lBTkIvd054UVlRRGFoRUJBQ0FDUVJCcUlnSWdCQ2dDQUVrTkFBc2dCeWdDQUNFQ0N5QUNFRU1nQnlBRk5nSUFJQUFvQWhBaEFpQUFRUUFnQUNnQ0RHdEJCSFFnQldvMkFnQWdCQ0FJUVFSMElBVnFOZ0lBSUFBZ0FTQUNhallDRUF2VEFRRURmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkJuT3dBTmdJQUlBQkJsT2NBTmdJZ0lBQW9BaVFpQVFSQVFRZ2dBU0FBS0FJb0VFZ2dBRUVBTmdJb0lBQkJBRFlDSkFzZ0FrRUVhaUVESUFCQmtPQUFOZ0lBSUFBb0FnZ2lBUVJBSUFJZ0FDZ0NCRFlDQUNBRElBSW9BZ0EyQWdBZ0FTQURFRmNMSUFBb0FoQWlBU0FBS0FJVVR3UkFJQUVRUXlBQ0pBUVBDd05BSUFFb0FnQW9BZ0FoQXlBQklBTkIvd054UVlRRGFoRUJBQ0FCUVF4cUlnRWdBQ2dDRkVrTkFBc2dBQ2dDRUJCRElBSWtCQXZmQXdFSmZ5TUVJUUlqQkVIZ0FHb2tCQ01FSXdWT0JFQkI0QUFRQUFzZ0FDZ0NmRUVDU0FSQUlBSWtCQThMSUFKQnlBQnFJZ1JCbE9jQU5nSUFJQVJCQURZQ0JDQUVRUUEyQWdnZ0FrRWthaUlISUFBUTZ3TWdBaUFBRU9zRElBQWdCQ0FISUFJUTBBZ2dCQ2dDQkNJQUtBSUFJZ01FUUNBQUtBSUVJUUFEUUNBREtBSUFJUWtnQnlnQ0RDSUZJQUFvQWhnaUNFRUNkR29vQWdBZ0F5Z0NCQ0lLSWdNb0FoZ2lCa0VDZENBRmFpZ0NBRVlFUUNBQ0tBSU1JZ1VnQ0VFQ2RHb29BZ0FnQmtFQ2RDQUZhaWdDQUVZRVFDQUJLQUlNSVFOQkNCQkpJZ1pCQURZQ0FDQUdJQW8yQWdRZ0NFRU1iQ0FEYWlFRklBaEJER3dnQTJvaUF5Z0NCQVJBSUFVb0FnZ2dCallDQUNBRklBWTJBZ2dGSUFVZ0JqWUNDQ0FESUFZMkFnUUxCU0FESVFBTEJTQURJUUFMSUFrRVFDQUpJUU1NQVFzTEN5QUNRZGdBYWlFQklBSkJrT0FBTmdJQUlBSW9BZ2dpQUFSQUlBSWdBaWdDQkRZQ1ZDQUJJQUlvQWxRMkFnQWdBQ0FCRUZjTElBSW9BaEFRUXlBSFFaRGdBRFlDQUNBSEtBSUlJZ0FFUUNBQ0lBY29BZ1EyQWxRZ0FTQUNLQUpVTmdJQUlBQWdBUkJYQ3lBSEtBSVFFRU1nQkVHVTV3QTJBZ0FnQkNnQ0JDSUFCRUJCQ0NBQUlBUW9BZ2dRU0NBRVFRQTJBZ2dnQkVFQU5nSUVDeUFDSkFRTHJRUUJCSDhqQkNFQkl3UkJRR3NrQkNNRUl3Vk9CRUJCd0FBUUFBc2dBQ2dDZkVFQ1NBUkFJQUVrQkE4TElBQW9BaEFoQXlBQlFRQTJBaGdnQVNBRFFYOXFOZ0ljSUFOQkFVZ0VRQ0FCUVFBMkFoUWdBVUVBTmdJTUlBRkJBRFlDRUFVZ0FTQURRUXhzRUVvaUFqWUNFQ0FDUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRVFRQTJBZ0FnQkVGL05nSUVJQVJCcURoQkFCQUJDeUFCSUFJMkFnd2dBU0FEUVF4c0lBSnFJZ00yQWhRZ0F5QUNTd1JBQTBBZ0FrR1U1d0EyQWdBZ0FrRUFOZ0lFSUFKQkFEWUNDQ0FDUVF4cUlnSWdBMGtOQUFzTEN5QUJRWkRnQURZQ0FDQUJRUUEyQWdRZ0FTQUFOZ0lJSUFFZ0FDQUJFR3cyQWdRZ0FVR2M3QUEyQWdBZ0FVR1U1d0EyQWlBZ0FVRUFOZ0lrSUFGQkFEWUNLQ0FBSUFFUTRBY2dBQ2dDZ0FFaUFnUkFBMEFnQVNnQ0RDQUNJZ01vQWhoQkRHeHFLQUlFSWdJRVFBTkFJQUFnQWlnQ0JDQUFLQUlBS0FJTVFmOEJjVUdPQjJvUkFBQWdBaWdDQUNJQ0RRQUxDeUFES0FJQUlnSU5BQXNMSUFGQm5Pd0FOZ0lBSUFGQmxPY0FOZ0lnSUFFb0FpUWlBQVJBUVFnZ0FDQUJLQUlvRUVnZ0FVRUFOZ0lvSUFGQkFEWUNKQXNnQVVFd2FpRUFJQUZCa09BQU5nSUFJQUVvQWdnaUFnUkFJQUVnQVNnQ0JEWUNMQ0FBSUFFb0FpdzJBZ0FnQWlBQUVGY0xJQUVvQWhBaUFDQUJLQUlVU1FSL0EwQWdBQ0FBS0FJQUtBSUFRZjhEY1VHRUEyb1JBUUFnQUVFTWFpSUFJQUVvQWhSSkRRQUxJQUVvQWhBRklBQUxFRU1nQVNRRUM2RUdBUXgvSXdRaEJpTUVRVEJxSkFRakJDTUZUZ1JBUVRBUUFBc2dCa0VrYWlJSFFhenBBRFlDQUNBR1FTQnFJZ2hCd09rQU5nSUFJQVpDQURjREFDQUdRUUEyQWdnZ0JrRVFhaUlFUVFBMkFnUWdCRUVBTmdJSUlBUkIxT2tBTmdJQUlBUkJBRFlDRENBQUtBSUFJQU5CQVdvaURFRUNkR29vQWdBaUNSRFRDQ0FKRU9FSElBa29Bb0FCSWdVRVFBTkFJQVFnQkNnQ0RFRUJhallDREVFZ0VFa2hBeUFFS0FJSUlRb2dBMEVBTmdJQUlBTWdDallDQkNBRElBVTJBZ2dnQXlBSk5nSU1JQU1nQmlrREFEY0RFQ0FESUFZcEF3ZzNBeGdnQkNnQ0JBUkFJQVFvQWdnZ0F6WUNBQVVnQkNBRE5nSUVDeUFFSUFNMkFnZ2dCU2dDQUNJRkRRQUxDeUFFSUFrb0FuQkJmMm9nQnhEMUFTQUVJQWtvQW5CQmYyb2dDQkQxQVNBRUtBSUVJZ29FUUVFQklRaEJBU0VQQTBBZ0NpZ0NDQ0lIS0FJSUtBSVFJUU1nQnlnQ0RDZ0NFQ0VGSUE5RkJFQUNRQ0FESUF0R0lBVWdEVVp4UlFSQUlBTWdEVVlnQlNBTFJuRkZCRUFnQ0VFQlRBMENJQUlvQWd3Z0RpZ0NHRUVEZEdvaUN5QUxLd01BSUFpM296a0RBRUVCSVFnTUFnc0xJQUlvQWd3aUF5QU9LQUlZUVFOMGFpSUZJQWNvQWhoQkEzUWdBMm9yQXdBZ0JTc0RBS0E1QXdBZ0NTQUhJQWtvQWdBb0FneEIvd0Z4UVk0SGFoRUFBQ0FJUVFGcUlRZ2dEaUVISUFzaEF5QU5JUVVMQ3lBS0tBSUFJZ29FUUNBSElRNUJBQ0VQSUFNaEN5QUZJUTBNQVFzTElBaEJBVW9FUUNBQ0tBSU1JQWNvQWhoQkEzUnFJZ01nQXlzREFDQUl0Nk01QXdBTEN5QUdRU3hxSVFVZ0FTZ0NBQ0FNUVFKMGFpZ0NBQ0lEUVF4cUlBQW9BZ0FnREVFQ2RHb29BZ0FpQUNnQ0VFRi9haEN0QWlBREtBSUlJZ2NFUUNBR0lBTW9BZ1EyQWlnZ0JTQUdLQUlvTmdJQUlBY2dCUkJYQ3lBRElBQTJBZ2dnQXlBQUlBTVFiRFlDQkNBSktBS0FBU0lGQkVBZ0FTZ0NBQ0FNUVFKMGFpZ0NBQ2dDRENFQUlBSW9BZ3doQVFOQUlBVW9BaGdpQWtFWWJDQUFhaUFDUVFOMElBRnFLd01BT1FNQUlBVW9BZ0FpQlEwQUN3c2dCRUhvNlFBMkFnQWdCQ2dDQkNJQVJRUkFJQVlrQkE4TFFTQWdBQ0FFS0FJSUVFZ2dCRUVBTmdJSUlBUkJBRFlDQkNBR0pBUUw0d2NDREg4RGZDTUVJUW9qQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFBb0FnQWlCeUFFUVFKMGFpZ0NBQ2dDZ0FFaUJRUi9JQVJCQVdvaEJrRUFJUWNEUUNBQktBSUFJQVJCQW5ScUtBSUFLQUlNSWdnZ0JTSUpLQUlJS0FJUVFaZ0JiR29vQWpBaUJTQUpLQUlNS0FJUVFaZ0JiQ0FJYWlnQ01DSU5Sd1JBSUFBb0FnQWdCa0VDZEdvb0FnQWdCU2dDRUVHWUFXd2dDR29vQWlRZ0RTZ0NFRUdZQVd3Z0NHb29BaVFReHdFaEJTQUNLQUlBSUFSQkFuUnFLQUlBS0FJTUlBa29BaGhCR0d4cUlBVTJBZ3hCREJCSklnVkJBRFlDQUNBRklBczJBZ1FnQlNBSk5nSUlJQXdFUUNBTElBVTJBZ0FnQlNFTEJTQUZJZ2NpQ3lFTUN3c2dDU2dDQUNJRkRRQUxJQWNoQ1NBQUtBSUFJUUFnQmlFRklBd0ZJQWNoQUNBRVFRRnFJUVZCQUFzaEJ5QUtRUVJxSVFZZ0EwRU1haUFGUVFKMElBQnFLQUlBSWdBb0FoQkJmMm9RaGdFZ0F5Z0NDQ0lGQkVBZ0NpQURLQUlFTmdJQUlBWWdDaWdDQURZQ0FDQUZJQVlRVndzZ0F5QUFOZ0lJSUFNZ0FDQURFR3cyQWdRZ0IwVUVRQ0FLSkFRUEN3TkFJQUVvQWdBZ0JFRUNkR29vQWdBb0Fnd2lBQ0FIS0FJSUlnVW9BZ2dpRENnQ0VDSUdRWmdCYkdvb0FqQWhEU0FGS0FJTUlnZ29BaEFpRGtHWUFXd2dBR29vQWpBaER5QUNLQUlBSUFSQkFuUnFLQUlBS0FJTUloQWdCU2dDR0NJRlFSaHNhaXNEQUNBR1FaZ0JiQ0FBYWlzRE9DSVNvQ0FPUVpnQmJDQUFhaXNET0NJVG9DRVJJQU1vQWd3Z0JVRVliQ0FRYWlnQ0RDZ0NHRUVEZEdvZ0VUa0RBQ0FHUVpnQmJDQUFhaWdDWkNJRklBVW9BZ3hCQVdvMkFneEJFQkJKSVFBZ0JTZ0NDQ0VHSUFCQkFEWUNBQ0FBSUFZMkFnUWdBQ0FTSUJHak9RTUlJQVVvQWdRRVFDQUdJQUEyQWdBRklBVWdBRFlDQkFzZ0JTQUFOZ0lJSUFFb0FnQWdCRUVDZEdvb0FnQW9BZ3dnQ0NnQ0VFR1lBV3hxS0FKa0lnVWdCU2dDREVFQmFqWUNERUVRRUVraEFDQUZLQUlJSVFZZ0FFRUFOZ0lBSUFBZ0JqWUNCQ0FBSUJNZ0VhTTVBd2dnQlNnQ0JBUkFJQVlnQURZQ0FBVWdCU0FBTmdJRUN5QUZJQUEyQWdnZ0FTZ0NBQ0FFUVFKMGFpZ0NBQ2dDRENBTUtBSVFRWmdCYkdvb0FtZ2lBQ0FBS0FJTVFRRnFOZ0lNUVF3UVNTRUZJQUFvQWdnaEJpQUZRUUEyQWdBZ0JTQUdOZ0lFSUFVZ0R6WUNDQ0FHSUFCQkJHb2dBQ2dDQkJzZ0JUWUNBQ0FBSUFVMkFnZ2dBU2dDQUNBRVFRSjBhaWdDQUNnQ0RDQUlLQUlRUVpnQmJHb29BbWdpQUNBQUtBSU1RUUZxTmdJTVFRd1FTU0VGSUFBb0FnZ2hCaUFGUVFBMkFnQWdCU0FHTmdJRUlBVWdEVFlDQ0NBR0lBQkJCR29nQUNnQ0JCc2dCVFlDQUNBQUlBVTJBZ2dnQnlnQ0FDSUhEUUFMUVF3Z0NTQUxFRWdnQ2lRRUM2WUNBUVYvSXdRaEJDTUVRVEJxSkFRakJDTUZUZ1JBUVRBUUFBc2dCRUVBTmdJWUlBUkJmellDSENBRVFnQTNBZ1FnQkVJQU53SU1JQVJCQURZQ0ZDQUVRY0RsQURZQ0FDQUFLQUlBSUFOQkFuUnFLQUlBS0FKMElnVUVRQ0FCS0FJQUlnWWdBMEVDZEdvb0FnQW9BZ3doQnlBRFFRRnFRUUowSUFacUtBSUFLQUlNSVFZRFFDQUZLQUlRUVpnQmJDQUhhaWdDTUNnQ0VFR1lBV3dnQjJvb0FpUW9BaEJCbUFGc0lBWnFJZ2dnQ0NnQ0tFRUJhallDS0NBRktBSUFJZ1VOQUFzTElBQWdBU0FDSUFRZ0F4RGpCeUFBSUFJZ0JDQURFT0lISUFSQmtPQUFOZ0lBSUFRb0FnZ2lBRVVFUUNBRUtBSVFFRU1nQkNRRUR3c2dCQ0FFS0FJRU5nSW9JQVJCTEdvaUFTQUVLQUlvTmdJQUlBQWdBUkJYSUFRb0FoQVFReUFFSkFRTGxBTUNDWDhDZkNBQUtBSjBJZ05GQkVBUEN3TkFJQUVvQWd3aUJDQURJZ2NvQWhBaUNVR1lBV3hxSWdzb0FpeEZCRUFnQWlnQ0RDRUtJQWNvQWhnaEEwUUFBQUFBQUFBQUFDRU1RUUFoQmtFQUlRQURRQ0FISUFNb0Fnd2lCU2dDQ0NJSVJnUkFJQVVvQWd3aENBc2dCU0FHSUFCRklBd2dCU2dDR0VFWWJDQUthaXNEQUNJTlpISWdDQ2dDRUVHWUFXd2dCR29vQWl4QkFYSkJBMFp4SWdVYklRWWdEU0FNSUFVYklRd2dDQ0FBSUFVYklRQWdBeWdDQUNJRERRQUxJQVlvQWhoQkdHd2dDbXBCQVRvQUVDQUFLQUlRSWdOQm1BRnNJQVJxS0FJd0lRWWdEQ0FEUVpnQmJDQUVhaXNET0tBaERDQUxRUVEyQWl3Z0NVR1lBV3dnQkdvZ0JqWUNNQ0FKUVpnQmJDQUVhaUFNT1FNNElBbEJtQUZzSUFScVFVQnJJQUEyQWdBZ0EwR1lBV3dnQkdwQkF6WUNMQ0FEUVpnQmJDQUVhaWdDZkNJQUlBQW9BZ3hCQVdvMkFneEJEQkJKSVFNZ0FDZ0NDQ0VFSUFOQkFEWUNBQ0FESUFRMkFnUWdBeUFITmdJSUlBUWdBRUVFYWlBQUtBSUVHeUFETmdJQUlBQWdBellDQ0FzZ0J5Z0NBQ0lERFFBTEM4TUxBZzkvQTN3Q2Z5TUVJUlVqQkVIZ0FHb2tCQ01FSXdWT0JFQkI0QUFRQUFzZ0ZRc2lDaENwQnlBREVQY0JJQUFvQWdBZ0JrRUNkR29vQWdBaUNTZ0NkQ0lIQkVBZ0JnUkFBMEFnQnlnQ0FDSUhEUUFMQlNBQktBSUFJQVpCQW5ScUtBSUFLQUlNSVFNRFFDQUhLQUlRUVpnQmJDQURha0VCTmdJb0lBY29BZ0FpQncwQUN3c0xBa0FDUUFKQUlBUU9Bd0FCQVFJTElBb2dDUkRLQXd3QkN5QUtJQWtnQVNnQ0FDQUdRUUowYWlnQ0FCQ25Cd3NnQmtFQmFpRVJJQW9vQWdSQkFFZ0VmMEVBSVFOQkFBVkJBQ0VIUVFBaEF3TkFJQXdFUUVFTUlBZ2dCeEJJUVFBaEJ3c0Nmd0pBQWtBQ1FBSkFJQVFPQXdBQkFnTUxJQW9RcUFjTUF3c2dDaUFGRUtZSERBSUxJQW9nQlJDakJ3d0JDMEVBQ3lFT1FRd1FTU0lQUVFBMkFnQWdEeUFETmdJRUlBOGdEallDQ0NBVEJFQWdBeUFQTmdJQUJTQVBJaFFoRXdzZ0FDZ0NBQ0FSUVFKMGFpZ0NBQkM0QVNFRElBRW9BZ0FnQmtFQ2RHb2lDeWdDQUNnQ0RDQU9LQUlRSWdoQm1BRnNhaUFETmdJa0lBc29BZ0FvQWd3aUF5QUlRWmdCYkdwQkFUWUNMQ0FJUVpnQmJDQURhaUFPTmdJd0lBc29BZ0FvQWd3Z0NFR1lBV3hxUkFBQUFBQUFBQUFBT1FNNElBNG9BaGdpRFFSQVFRQWhDMEVBSVFNZ0J5RUpRUUFoREFOQUlBSW9BZ0FnQmtFQ2RHb29BZ0FvQWd3Z0RTZ0NEQ0lJS0FJWVFSaHNhaXNEQUNFV0lBNGdDQ2dDQ0NJSFJnUkFJQWdvQWd3aEJ3c2dBU2dDQUNBR1FRSjBhaUlRS0FJQUtBSU1JZ2dnQnlnQ0VDSVNRWmdCYkdwQkFqWUNMQ0FTUVpnQmJDQUlhaUFPTmdJd0lCQW9BZ0FvQWd3Z0VrR1lBV3hxSUJZNUF6aEJEQkJKSWdoQkFEWUNBQ0FJSUFrMkFnUWdDQ0FITmdJSUlBd0VRQ0FKSUFnMkFnQWdDeUVIQlNBSUlnTWlCeUVNQ3lBSUlRa2dEU2dDQUNJTkJFQWdCeUVMREFFTEN5QU1JZ2dFZnlBSUlRc0RRQ0FLS0FJVUlBc29BZ2dpRUNnQ0VFRUNkR29vQWdBZ0NpZ0NCRXdFUUNBS0lCQVF5UU1MSUFzb0FnQWlDdzBBQ3lBSUlRc0RmeUFMS0FJSUloSW9BaGdpQ0FSQUEwQWdFaUFJS0FJTUloQW9BZ2dpRFVZRVFDQVFLQUlNSVEwTElBb29BaFFnRFNnQ0VFRUNkR29vQWdBZ0NpZ0NCRXdFUUNBS0lBMFF5UU1MSUFnb0FnQWlDQTBBQ3dzZ0N5Z0NBQ0lMRFFBZ0F5RUlJQWNoQ3lBSkN3VWdBeUVJSUFjaEMwRUFJUXdnQ1FzaEJ3VkJBQ0VJUVFBaEMwRUFJUXdMSUE4aEF5QUtLQUlFUVFCT0RRQUxJQWNMSVFRZ0FDZ0NBQ0FSUVFKMGFpZ0NBQ0lGS0FJTUlRSWdBU2dDQUNBUlFRSjBhaWdDQUNJSktBSVFJZ2NnQ1NnQ0ZFa0VRQU5BSUFjUWdnRWdCMEdZQVdvaUJ5QUpLQUlVU1EwQUN5QUpLQUlRSVFjTElBbEJER29oQ0NBSEVFTWdDVUVBTmdJWUlBa2dBa0YvYWpZQ0hDQUNRUUZJQkVBZ0NVRUFOZ0lVSUFoQkFEWUNBQ0FKUVFBMkFoQUZJQWtnQWtHWUFXd1FTaUlBTmdJUUlBQUVRQ0FJSUFBMkFnQWdDU0FDUVpnQmJDQUFhallDRkFWQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdCQkFEWUNBQ0FBUVg4MkFnUWdBRUdvT0VFQUVBRUxDeUFLUWRRQWFpRUNJQWdROWdFZ0NTZ0NDQ0lBQkVBZ0NpQUpLQUlFTmdKUUlBSWdDaWdDVURZQ0FDQUFJQUlRVFFzZ0NTQUZOZ0lJSUFrZ0JTQUpFRmsyQWdRZ0V3UkFJQUVvQWdBaUFDQVJRUUowYWlFRklBWkJBblFnQUdvaEFpQUZLQUlBS0FJTUlRQWdFeUVIQTBBZ0FpZ0NBQ2dDRENJSUlBY29BZ2dpQVNnQ0VDSUdRWmdCYkdvb0FpUW9BaEFoQ1NBR1FaZ0JiQ0FJYWlzREdDRVhJQVpCbUFGc0lBaHFLd01BSVJnZ0JrR1lBV3dnQ0dvckF3Z2hGaUFKUVpnQmJDQUFhaUFHUVpnQmJDQUlhaXNERURrREVDQUpRWmdCYkNBQWFpQVhPUU1ZSUFsQm1BRnNJQUJxSUJnNUF3QWdDVUdZQVd3Z0FHb2dGamtEQ0NBSlFaZ0JiQ0FBYWlBQk5nSWdJQWxCbUFGc0lBQnFRUUEyQWlRZ0JTZ0NBQ2dDRENJQUlBbEJtQUZzYWtFQU5nSW9JQWNvQWdBaUJ3MEFDMEVNSUJRZ0F4QklDeUFNUlFSQUlBb1F5d01nQ2lRRUR3dEJEQ0FMSUFRUVNDQUtFTXNESUFva0JBdlpCQUVEZnlBRUVQY0JJQWdvQWdBZ0FUWUNBQ0FKS0FJQUlBSTJBZ0FnQ2lnQ0FDQUROZ0lBSUFnb0FnQWlBaWdDQUNJREtBSndJQVpNQkVBZ0MwRUFOZ0lBRHd0QkFDRUJBa0FDUUFOQUFrQWdEQVJBSUF4QmYycEJBblFnQW1vb0FnQW9BbnkzUkpxWm1abVptZWsvb2lBREtBSjh0MlpGQkVBZ0FVRUJhaUVBSUFGQkJVZ0VmeUFBQlNBTUlRQU1CUXNoQVFzTFFZZ0JFRW9pQTBVTkFDQURFTXNCUWJnQkVFa2lEUkN1QWtFNEVFa2lBa0VBTmdJWUlBSkJmellDSENBQ1FnQTNBZ1FnQWtJQU53SU1JQUpCQURZQ0ZDQUNRWWpvQURZQ0FDQUNRZ0EzQXlBZ0FrSUFOd01vSUFKQkFEc0JNQ0FJS0FJQUlBeEJBV29pQUVFQ2RHb2dBellDQUNBSktBSUFJQUJCQW5ScUlBMDJBZ0FnQ2lnQ0FDQUFRUUowYWlBQ05nSUFJQW9vQWdBZ0RFRUNkR29vQWdBaEF5QUlLQUlBSUF4QkFuUnFLQUlBSWcwb0FuUWlBZ1JBSUFrb0FnQWdERUVDZEdvb0FnQWhEZ05BSUE0b0Fnd2dBaWdDRUVHWUFXeHFFTXdESUFJb0FnQWlBZzBBQ3dzZ0RTZ0NnQUVpQWdSQUlBTW9BZ3doQXdOQUlBSW9BaGdpRFVFWWJDQURha0VBTmdJTUlBMUJHR3dnQTJwQkFEb0FFQ0FDS0FJQUlnSU5BQXNMSUFnZ0NTQUtJQVFnQlNBSElBd1E1Z2NnQ0NnQ0FDQU1RUUowYWlnQ0FDQUpLQUlBSUF4QkFuUnFLQUlBSUFvb0FnQWdERUVDZEdvb0FnQVE1UWNnQ0NBSklBb2dEQkRrQnlBSUtBSUFJZ0lnQUVFQ2RHb29BZ0FpQXlnQ2NDQUdUQTBDSUFBaERBd0JDd3RCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ0JCQURZQ0FDQUFRWDgyQWdRZ0FFR29PRUVBRUFFTUFRc2dDeUFBTmdJQUN3dGNBUUYvSUFCQmlPd0FOZ0lBSUFBb0FnUWlBVVVFUUNBQVFlQ3pBaWdDQURZQ0FFSGdzd0lnQURZQ0FBOExRU0FnQVNBQUtBSUlFRWdnQUVFQU5nSUlJQUJCQURZQ0JDQUFRZUN6QWlnQ0FEWUNBRUhnc3dJZ0FEWUNBQXRjQVFGL0lBQkI5T3NBTmdJQUlBQW9BZ1FpQVVVRVFDQUFRZUN6QWlnQ0FEWUNBRUhnc3dJZ0FEWUNBQThMUVF3Z0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQ0FBUWVDekFpZ0NBRFlDQUVIZ3N3SWdBRFlDQUF0Y0FRRi9JQUJCd09zQU5nSUFJQUFvQWdRaUFVVUVRQ0FBUWVDekFpZ0NBRFlDQUVIZ3N3SWdBRFlDQUE4TFFRd2dBU0FBS0FJSUVFZ2dBRUVBTmdJSUlBQkJBRFlDQkNBQVFlQ3pBaWdDQURZQ0FFSGdzd0lnQURZQ0FBdVFBUUVEZnlBQVFaVHJBRFlDQUNBQUtBSUlJZ0pGQkVBZ0FCQkREd3NEUUFKQUlBSW9BaGdpQVVVRVFDQUNLQUlVSWdGRkJFQUNRQ0FDS0FJUUlRRWdBaEJESUFGRkRRTURRQ0FCS0FJWUlBSkdCRUFnQVNnQ0ZDSUNCRUFnQWlFQkRBTUxDeUFCS0FJUUlRTWdBUkJESUFORkRRUWdBU0VDSUFNaEFRd0FBQXNBQ3dzTElBRWhBZ3dCQ3dzZ0FCQkRDNVlCQVFOL0lBQkJsT3NBTmdJQUlBQW9BZ2dpQWtVRVFDQUFRUUEyQWdnUEN3TkFBa0FnQWlnQ0dDSUJSUVJBSUFJb0FoUWlBVVVFUUFKQUlBSW9BaEFoQVNBQ0VFTWdBVVVOQXdOQUlBRW9BaGdnQWtZRVFDQUJLQUlVSWdJRVFDQUNJUUVNQXdzTElBRW9BaEFoQXlBQkVFTWdBMFVOQkNBQklRSWdBeUVCREFBQUN3QUxDd3NnQVNFQ0RBRUxDeUFBUVFBMkFnZ0xYQUVCZnlBQVFjRHJBRFlDQUNBQUtBSUVJZ0ZGQkVBZ0FFSFFzd0lvQWdBMkFnQkIwTE1DSUFBMkFnQVBDMEVNSUFFZ0FDZ0NDQkJJSUFCQkFEWUNDQ0FBUVFBMkFnUWdBRUhRc3dJb0FnQTJBZ0JCMExNQ0lBQTJBZ0FMTWdFQmZ5QUFRY0RyQURZQ0FDQUFLQUlFSWdGRkJFQVBDMEVNSUFFZ0FDZ0NDQkJJSUFCQkFEWUNDQ0FBUVFBMkFnUUw0QUlDQkg4Q2ZDTUVJUWNqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFFckF5Z2hDU0FCS3dNZ0lRb2dBaWdDQUNnQ0NDRUZJQUlnQlVIL0FIRkJCR29SQ0FBaEJpQUNJQUlvQWd4QkFXbzJBZ3hCSUJCSklRVWdBaWdDQ0NFSUlBVkJBRFlDQUNBRklBZzJBZ1FnQlNBSk9RTUlJQVVnQ2prREVDQUZJQVkyQWhnZ0FpZ0NCQVJBSUFJb0FnZ2dCVFlDQUFVZ0FpQUZOZ0lFQ3lBQ0lBVTJBZ2dnQXlBREtBSU1RUUZxTmdJTVFRd1FTU0VHSUFNb0FnZ2hDQ0FHUVFBMkFnQWdCaUFJTmdJRUlBWWdCVFlDQ0NBREtBSUlJQU5CQkdvaUJTQUZLQUlBR3lBR05nSUFJQU1nQmpZQ0NDQUFLd01JSUFFckF5QWlDV01FUUNBQUlBazVBd2dnQVNzRElDRUpDeUFBSUFFckF5Z2dBQ3NEQUtBNUF3QWdCeUFDS0FJSU5nSUFJQWNnQ1RrRENDQUVJQVFvQWdCQkFXbzJBZ0FnQkNnQ0NDSUFLQUlBS0FJSUlRRWdBQ0FISUFGQlAzRkJpZ0ZxRVFNQUdpQUhKQVFMWEFFQmZ5QUFRZlRyQURZQ0FDQUFLQUlFSWdGRkJFQWdBRUhRc3dJb0FnQTJBZ0JCMExNQ0lBQTJBZ0FQQzBFTUlBRWdBQ2dDQ0JCSUlBQkJBRFlDQ0NBQVFRQTJBZ1FnQUVIUXN3SW9BZ0EyQWdCQjBMTUNJQUEyQWdBTE1nRUJmeUFBUWZUckFEWUNBQ0FBS0FJRUlnRkZCRUFQQzBFTUlBRWdBQ2dDQ0JCSUlBQkJBRFlDQ0NBQVFRQTJBZ1FMWEFFQmZ5QUFRZVRnQURZQ0FDQUFLQUlFSWdGRkJFQWdBRUhRc3dJb0FnQTJBZ0JCMExNQ0lBQTJBZ0FQQzBFWUlBRWdBQ2dDQ0JCSUlBQkJBRFlDQ0NBQVFRQTJBZ1FnQUVIUXN3SW9BZ0EyQWdCQjBMTUNJQUEyQWdBTFhBRUJmeUFBUVlqc0FEWUNBQ0FBS0FJRUlnRkZCRUFnQUVIUXN3SW9BZ0EyQWdCQjBMTUNJQUEyQWdBUEMwRWdJQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRZ0FFSFFzd0lvQWdBMkFnQkIwTE1DSUFBMkFnQUxNZ0VCZnlBQVFZanNBRFlDQUNBQUtBSUVJZ0ZGQkVBUEMwRWdJQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRTDhBVUNDWDhFZkNNRUlRUWpCRUZBYXlRRUl3UWpCVTRFUUVIQUFCQUFDeUFFUWdBM0F3QWdCRUlBTndNSUlBUkNBRGNERUNBRVFnQTNBeGdnQkVJQU53TWdJQVJDQURjREtDQUVRWDgyQWpBZ0JFRUFPZ0EwSUFBZ0FDZ0NBQ2dDQ0VIL0FIRkJCR29SQ0FBaUEwRUJUZ1JBSUFOQkEzUVFTaUlEQkVBZ0F5SUlJUWNGUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlEUVFBMkFnQWdBMEYvTmdJRUlBTkJxRGhCQUJBQkN3c2dBQ0FBS0FJQUtBSUlRZjhBY1VFRWFoRUlBQ0lEUVFGT0JFQWdBMEVEZEJCS0lnTUVRQ0FESWdraENnVkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnTkJBRFlDQUNBRFFYODJBZ1FnQTBHb09FRUFFQUVMQzBFQUlRTURRQ0FESUFBZ0FDZ0NBQ2dDQ0VIL0FIRkJCR29SQ0FCSUJFQWdBMEVEZENBS2FrUUFBQUFBQUFBQUFEa0RBQ0FEUVFGcUlRTU1BUXNMSUFBb0FnUWlCUVJBSUFVaUF5RUdBMEFnQXlBRlJnUkFJQWRFQUFBQUFBQUFBQUE1QXdBRklBTW9BaGdpQzBFRGRDQUhhaUFES0FJRUlnTWdBQ2dDQ0NBREd5c0RDQ0FMUVg5cVFRTjBJQWRxS3dNQW9Ea0RBQXNnQmlnQ0FDSUdJUU1nQmcwQUN3c2dBaWdDQkNJQVJRUkFJQWtRUXlBSUVFTWdCQ1FFRHdzZ0FTZ0NCQ0VEQTBBZ0FDZ0NDQ0lDS3dNSUlRNGdBaXNERUNFUElBUWdBaWtES0RjRElDQUVJQUlwQXpBM0F5Z2dCQ0FDS0FJNE5nSXdJQVFnQWl3QVBEb0FOQ0FES0FJSUlnVXJBd2doRENBRktBSVlJZ1ZCQTNRZ0Ntb2lCaXNEQUNFTklBWWdEU0FFS3dNZ29Ea0RBQ0FGUVFOMElBZHFLd01BSUF3Z0JDc0RLS0ZFQUFBQUFBQUE0RCtpb0NFTUlBSWdEamtEQ0NBQ0lBODVBeEFnQWlBTk9RTVlJQUlnRERrRElDQUNJQVFwQXlBM0F5Z2dBaUFFS1FNb053TXdJQUlnQkNnQ01EWUNPQ0FDSUFRc0FEUTZBRHdnQVNnQ0NDQURSd1JBQWtBQ1FDQURSUTBBSUFNb0FnQWlBMFVOQUF3QkN5QUJLQUlFSVFNTEN5QUFLQUlBSWdBTkFBc2dCQ0FPT1FNQUlBUWdEemtEQ0NBRUlBMDVBeEFnQkNBTU9RTVlJQWtRUXlBSUVFTWdCQ1FFQzdnREF3Si9BWDREZkNNRUlRWWpCRUhRQUdva0JDTUVJd1ZPQkVCQjBBQVFBQXNnQkNnQ0FDSUVSUVJBSUFZZ0FTc0RBRGtEQUNBR0lBRXJBd2c1QXdnZ0JpQUJLd01RT1FNUUlBWWdBU3NER0RrREdDQUdJQUVwQXlBM0F5QWdCaUFCS1FNb053TW9JQVlnQVNnQ01EWUNNQ0FHSUFFc0FEUTZBRFFnQUNBR0lBSWdBeUFGRU84SElBWWtCQThMSUFRcEF4Z2hDQ0FFS3dNUUlBRXJBeUNnSVFvZ0JDQUJLd01vSWdzZ0JDc0RDQ0lKSUFrZ0MyTWJPUU1JSUFRZ0Nqa0RFQ0FFSUFnK0FoZ2dBeUFES0FJTVFRRnFOZ0lNUVF3UVNTRUNJQU1vQWdnaEJ5QUNRUUEyQWdBZ0FpQUhOZ0lFSUFJZ0JEWUNDQ0FES0FJSUlBTkJCR29pQnlBSEtBSUFHeUFDTmdJQUlBTWdBallDQ0NBQUt3TUlJQXBqQkVBZ0FDQUtPUU1JQ3lBQUt3TUFJZ3NnQ2FFZ0FTc0RLS0FoQ1NBTElBbGpCRUFnQUNBSk9RTUFDeUFGSUFVb0FnQkJmMm8yQWdBZ0JTZ0NDQ0lBS0FJQUtBSU1JUUVnQUNBQlFmOERjVUdFQTJvUkFRQWdCa0U0YWlJQUlBUTJBZ0FnQUNBS09RTUlJQVVnQlNnQ0FFRUJhallDQUNBRktBSUlJZ0VvQWdBb0FnZ2hBaUFCSUFBZ0FrRS9jVUdLQVdvUkF3QWFJQVlrQkF1M0J3SURmd3A4SXdRaEJ5TUVRVUJySkFRakJDTUZUZ1JBUWNBQUVBQUxJQUVvQWdBaUJpc0RLQ0lOSUFBckF3Z2lDU0FKSUExakd5SUtJQVlyQXpBaURpQUFLd01Bb0NJSm95SUxJQU5qQkh3Z0F5QUxvd1VnQ3lBRG93c2hDeUFFSUFvZ0NhSWdDNklpQ3prREFDQUNRWDlxUVFKSkJIOGdEaUFBS3dNSUlna2dDU0FPWXhzaUNpQU5JQUFyQXdDZ0lnbWpJZ3dnQTJNRWZDQURJQXlqQlNBTUlBT2pDeUVNSUFvZ0NhSWdES0lpQ1NBTFJCMTNTZ2ZyLys4L29tTUVmeUFFSUFrNUF3QkJBZ1ZCQVFzRlFRRUxJUUVnQlNnQ0NDSUlLQUlBS0FJRUlRVWdDQ0FGUWY4QWNVRUVhaEVJQUNnQ0FDSUlJZ1VyQXdnaEVpQU5JQVVyQXhBaUM2QWlDU0FBS3dNSUloRWdFU0FKWXhzaUNpQU9JQUFyQXdBaUR5QVNvU0lNb0NJSklBOGdEeUFKWXhzaUNhTWlFQ0FEWXdSOElBTWdFS01GSUJBZ0E2TUxJUkFnQ2lBSm9pQVFvaUVKQW44Q1FBSkFBa0FnQWtFQmF3NENBQUlCQ3lBTklCSmtSUTBCSUFraEEwRUREQUlMSUFraEEwRUREQUVMSUE0Z0M2QWlDaUFSSUJFZ0NtTWJJZ3NnRFNBTW9DSUtJQThnRHlBS1l4c2lDcU1pRENBRFl3UjhJQU1nREtNRklBd2dBNk1MSVFNZ0N5QUtvaUFEb2lJRElBbEVIWGRLQit2Lzd6K2lZd1IvUVFRRklBa2hBMEVEQ3dzaEFBSkFBa0FnQXlBRUt3TUFJZ2xsRFFBZ0NTQURFSFlOQUNBQklRQU1BUXNnQkNBRE9RTUFDd0pBQWtBQ1FBSkFJQUJCQVdzT0F3SUFBUU1MSUFZckF3Z2hEQ0FHS3dNUUlRa2dCaXNESUNFRElBWXJBeWdoQ3lBR0t3TXdJUW9nQmlnQ09DRUFJQVlzQUR3aEFTQUhJQVlyQXhnNUF4QWdCeUFET1FNWUlBY2dBRFlDTUNBSElBa2dDWm9nQ3FFZ0FVRUFSeUlBR3lJSk9RTUFJQWNnREpvZ0M2RWdEQ0FBR3lJRE9RTUlJQWNnQ2prRElDQUhJQXM1QXlnZ0J5QUJRUUZ6T2dBMElBWWdDVGtEQ0NBR0lBTTVBeEFnQmlBSEtRTWdOd01vSUFZZ0J5a0RLRGNETUNBR0lBY29BakEyQWpnZ0JpQUhMQUEwT2dBOElBY2tCRUVBRHdzZ0J5UUVJQWdQQ3lBSEpBUkJBQThMSUFZckF3Z2hEQ0FHS3dNUUlRa2dCaXNESUNFRElBWXJBeWdoQ3lBR0t3TXdJUW9nQmlnQ09DRUFJQVlzQUR3aEFTQUhJQVlyQXhnNUF4QWdCeUFET1FNWUlBY2dBRFlDTUNBSElBa2dDWm9nQ3FFZ0FVRUFSeUlBR3lJSk9RTUFJQWNnREpvZ0M2RWdEQ0FBR3lJRE9RTUlJQWNnQ2prRElDQUhJQXM1QXlnZ0J5QUJRUUZ6T2dBMElBWWdDVGtEQ0NBR0lBTTVBeEFnQmlBSEtRTWdOd01vSUFZZ0J5a0RLRGNETUNBR0lBY29BakEyQWpnZ0JpQUhMQUEwT2dBOElBY2tCQ0FJQ3dnQUlBRXJBeWlhQ3dnQUlBRXJBeUNhQzVrTUFnOS9DSHdDZnlNRUlSVWpCRUhBQVdva0JDTUVJd1ZPQkVCQndBRVFBQXNnRlFzaUMwR29BV29pQ2tFQU5nSUVJQXBCQURZQ0NDQUtRZGpxQURZQ0FDQUtRUUEyQWd3Z0MwR1FBV29pRFVFRWFpSVRRUUEyQWdBZ0RVRUFOZ0lJSUExQjdPb0FOZ0lBSUExQkFEWUNEQ0FMUVlBQmFpSU9RUUEyQWdRZ0RrRUFOZ0lJSUE1QmdPc0FOZ0lBSUE1QkFEWUNEQ0FMUWZBQWFpSVJRUUEyQWdBZ0VTQUxRVGhxSWdjMkFnUkJEQkJmSWhCQmxPc0FOZ0lBSUJCQkFEWUNDQ0FSSUJBMkFnZ0NRQUpBQWtBZ0EwRUJhdzRDQVFBQ0N5QUhRUUUyQWdnZ0IwSE02d0EyQWd3Z0FTQUhFTmNESUFjb0Fnd29BZ1FpQXdSQUlBY29BZ0FnQTBIL0EzRkJoQU5xRVFFQUN3d0JDeUFIUVFJMkFnZ2dCMEhjNndBMkFnd2dBU0FIRU5jRElBY29BZ3dvQWdRaUF3UkFJQWNvQWdBZ0EwSC9BM0ZCaEFOcUVRRUFDd3NnQVNnQ0JDSVNCRUJCQUNFRFFRQWhFQU5BSUFsQkFXb2hDVUVNRUVraUQwRUFOZ0lBSUE4Z0ZEWUNCQ0FQSUJJMkFnZ2dEQVJBSUFnZ0R6WUNBQVVnRGlBUE5nSUVJQThpQXlJUUlRd0xJQTRnRHpZQ0NDQVBJUlFnRWlnQ0FDSVNCRUFnRHlFSURBRUxDeUFPSUFrMkFnd2dBU2dDQkNJSUJFQWdCRUYvYWtFQ1NTRVVBMEFnQ2lnQ0JBUkFJQXNnQ0RZQ3VBRWdCeUFMS0FLNEFUWUNBQ0FBSUFjZ0JDQUNJQVVnRVJEM0J5RUpJQXNnQ0NzRENEa0RBQ0FMSUFnckF4QTVBd2dnQ3lBSUt3TVlPUU1RSUFzZ0NDc0RJRGtER0NBTElBZ3BBeWczQXlBZ0N5QUlLUU13TndNb0lBc2dDQ2dDT0RZQ01DQUxJQWdzQUR3NkFEUWdDeUFKTmdLZ0FTQUhJQXNvQXFBQk5nSUFJQUFnQ3lBS0lBMGdCeUFSRVBZSEJTQUlLd01JSVJvZ0NDc0RLQ0lYSUFBckF3Z2lGaUFXSUJkakd5SWJJQWdyQXpBaUdDQUFLd01BSWh5Z0loMmpJaGtnQW1NRWZDQUNJQm1qQlNBWklBS2pDeUVaSUJzZ0hhSWdHYUloR1NBVUJFQWdHQ0FXSUJZZ0dHTWJJaHNnRnlBY29DSWNveUlXSUFKakJId2dBaUFXb3dVZ0ZpQUNvd3NoRmlBYklCeWlJQmFpSUJsRUhYZEtCK3YvN3oraVl3UkFJQWdyQXhBaEZpQUlLd01nSVJrZ0NDZ0NPQ0VNSUFnc0FEd2hDU0FISUFnckF4ZzVBeEFnQnlBWk9RTVlJQWNnRERZQ01DQUhJQllnRnBvZ0dLRWdDVUVBUnlJTUd5SVdPUU1BSUFjZ0dwb2dGNkVnR2lBTUd5SWFPUU1JSUFjZ0dEa0RJQ0FISUJjNUF5Z2dCeUFKUVFGek9nQTBJQWdnRmprRENDQUlJQm81QXhBZ0NDQUhLd01RT1FNWUlBZ2dCeXNER0RrRElDQUlJQWNwQXlBM0F5Z2dDQ0FIS1FNb053TXdJQWdnQnlnQ01EWUNPQ0FJSUFjc0FEUTZBRHdnQnlzRElDRVhJQWNyQXlnaEdBc0xJQW9vQWdBb0FnZ2hDU0FLSUFsQi93QnhRUVJxRVFnQUlRd2dDaUFLS0FJTVFRRnFOZ0lNUVNBUVNTRUpJQW9vQWdnaEVpQUpRUUEyQWdBZ0NTQVNOZ0lFSUFrZ0dEa0RDQ0FKSUJjNUF4QWdDU0FNTmdJWUlBb29BZ1FFUUNBS0tBSUlJQWsyQWdBRklBb2dDVFlDQkFzZ0NpQUpOZ0lJSUEwZ0RTZ0NERUVCYWpZQ0RFRU1FRWtoRENBTktBSUlJUklnREVFQU5nSUFJQXdnRWpZQ0JDQU1JQWsyQWdnZ0VpQVRJQk1vQWdBYklBdzJBZ0FnRFNBTU5nSUlJQUFyQXdnZ0YyTUVRQ0FBSUJjNUF3Z0xJQUFnR0NBQUt3TUFvRGtEQUNBSElBb29BZ2cyQWdBZ0J5QVhPUU1JSUJFZ0VTZ0NBRUVCYWpZQ0FDQVJLQUlJSWdrb0FnQW9BZ2doRENBSklBY2dERUUvY1VHS0FXb1JBd0FhSUFVZ0Z5QVlvaUFYSUJpakloWWdBbU1FZkNBQ0lCYWpCU0FXSUFLakM2STVBd0FMSUFnb0FnQWlDQTBBQ3dzRlFRQWhFRUVBSVFNTElBb2dEU0FPRVBVSElBRW9BZ1FpQUFSQVJBQUFBQUFBQUFBQUlRSURRQ0FDSUFBckF5Z2dBQ3NETUtLZ0lRSWdBQ2dDQUNJQURRQUxCVVFBQUFBQUFBQUFBQ0VDQ3lBR0lBSTVBd0FnRVNnQ0NDSUFCRUFnQUNnQ0FDZ0NJQ0VCSUFBZ0FVSC9BM0ZCaEFOcUVRRUFDeUFPUWNEckFEWUNBQ0FRQkVCQkRDQURJQThRU0NBT1FRQTJBZ2dnRGtFQU5nSUVDeUFOUWZUckFEWUNBQ0FUS0FJQUlnQUVRRUVNSUFBZ0RTZ0NDQkJJSUExQkFEWUNDQ0FUUVFBMkFnQUxJQXBCaU93QU5nSUFJQW9vQWdRaUFFVUVRQ0FMSkFRUEMwRWdJQUFnQ2lnQ0NCQklJQXBCQURZQ0NDQUtRUUEyQWdRZ0N5UUVDeklCQVg4Z0FFSGs0QUEyQWdBZ0FDZ0NCQ0lCUlFSQUR3dEJHQ0FCSUFBb0FnZ1FTQ0FBUVFBMkFnZ2dBRUVBTmdJRUM4SU1BaHgvQVh3akJDRUdJd1JCTUdva0JDTUVJd1ZPQkVCQk1CQUFDeUFCS0FKMElnUUVRQ0FES0FJTUlRa0RRQ0FFS0FJUVFRUjBJQWxxSWdkQ0FEY0RBQ0FIUWdBM0F3Z2dCQ2dDQUNJRURRQUxDeUFBSUFFb0FuQzNueUFBS0FJQXQ2T3FJZ1JCZjJvaUIwRUFJQVJCQVVvYklnazJBZ1FDZnlBSlFRQklJZ2dnQ1VFQmFpSVFSWElFZjBFQUJTQVFJQkJzSWdwQkJIUVFTaUlSUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRVFRQTJBZ0FnQkVGL05nSUVJQVJCcURoQkFCQUJDeUFLUVFSMElCRnFJaFFnRVVzRWZ5QVJJUVFEZnlBRVFRQTJBZ1FnQkVFQU5nSUlJQVJCc09ZQU5nSUFJQVJCQURZQ0RDQUVRUkJxSWdRZ0ZFa05BQ0FSSVFwQkFRc0ZJQkVoQ2tFQUN3c2hIeUFJQkg4Z0J5RUVJQkFGSUFraEJFRUFJUWtEUUNBRVFRQk9CRUFnQ1NBUWJDRUxRUUFoQndOQUlBY2dDMm9pQ0VFRWRDQUtha0VBTmdJTUlBaEJCSFFnQ21vaUJTZ0NCQ0lNQkVCQkRDQU1JQWhCQkhRZ0Ntb2lCQ2dDQ0JCSUlBUkJBRFlDQ0NBRlFRQTJBZ1FnQUNnQ0JDRUVDeUFIUVFGcUlRZ2dCeUFFU0FSQUlBZ2hCd3dCQ3dzTElBbEJBV29oQnlBSklBUklCRUFnQnlFSkRBRUxDeUFFUVFGcUN5RUpJQUFyQXdnZ0NiZWpJU0FnQVNnQ2RDSUJCRUFEUUNBQ0tBSU1JZ2tnQVNnQ0VDSUVRWmdCYkdvckF3Z2dBQ3NER0tFZ0lLT3FJQkFnQkVHWUFXd2dDV29yQXdBZ0FDc0RFS0VnSUtPcWJHb2lDVUVFZENBS2FpSUVJQVFvQWd4QkFXbzJBZ3hCREJCSklRUWdDVUVFZENBS2FpSUlLQUlJSVFjZ0JFRUFOZ0lBSUFRZ0J6WUNCQ0FFSUFFMkFnZ2dCeUFKUVFSMElBcHFRUVJxSWdrZ0NTZ0NBQnNnQkRZQ0FDQUlJQVEyQWdnZ0FTZ0NBQ0lCRFFBTElBQW9BZ1FoQkFzZ0JrRWdhaUVTSUFaQkVHb2hGU0FHSVJNZ0JFRUFTQVJBUVFBaENVRUFJUWRCQUNFQkJVRUFJUWxCQUNFSVFRQWhCMEVBSVFFRFFDQUVRUUJJQkg4Z0RVRUJhZ1VnRFNBUWJDRWFJQTFCZjJvaEd5QU5RUUZxSVJjZ0NDRUVRUUFoRHdOL0lBTWdBaUFQSUJwcUlnNUJCSFFnQ21vUTJBTWdBUVJBUVJBZ0JDQUhFRWhCQUNFSEN5QVBRWDlxSVF4QkFDRUpRUUFoQkVFQUlRWkJBQ0VJSUJzaEN3TkFJQXNnRFVZRWZ5QUdJUUVnRENFR0EzOGdCaUFOY2tGL1NnUkFJQTBnQUNnQ0JDSUZTaUFHSUFWS2NpQUdJQTlHY2tVRVFFRVFFRWtpQlVFQU5nSUFJQVVnQnpZQ0JDQUZJQTAyQWdnZ0JTQUdOZ0lNSUFnRVFDQUhJQVUyQWdBZ0JTRUhCU0FGSWdFaUJDSUpJZ2NoQ0FzTEN5QUdRUUZxSVFVZ0JpQVBTZ1IvSUFFaEJpQUlCU0FGSVFZTUFRc0xCU0FHSVFFZ0RDRUdBMzhnQmlBTGNrRi9TZ1JBSUFzZ0FDZ0NCQ0lGU2lBR0lBVktja1VFUUVFUUVFa2lCVUVBTmdJQUlBVWdCellDQkNBRklBczJBZ2dnQlNBR05nSU1JQWdFUUNBSElBVTJBZ0FnQlNFSEJTQUZJZ0VpQkNJSklnY2hDQXNMQ3lBR1FRRnFJUVVnQmlBUFNnUi9JQUVoQmlBSUJTQUZJUVlNQVFzTEN5RUJJQXRCQVdvaEJTQUxJQTFNQkVBZ0FTRUlJQVVoQ3d3QkN3c2dBUVIvSUE5QkFXb2hHQ0FPUVFSMElBcHFJUndnQVNFSUEzOGdDQ2dDQ0NFRkFrQUNRQ0FJS0FJTUlnd2dHRVlOQUNBTUlBOUdJQVVnRjBaeERRQU1BUXNnSENnQ0JDSUxCRUFnRENBRklCQnNha0VFZENBS2FpRWRBMEFnSFNnQ0JDSUZCRUFnQ3lnQ0NDSWVLQUlRSVF3RFFDQVZJQUlvQWd3aURpQUZLQUlJSWhZb0FoQWlCa0dZQVd4cUt3TUFPUU1BSUJVZ0JrR1lBV3dnRG1vckF3ZzVBd2dnRXlBTVFaZ0JiQ0FPYWlzREFEa0RBQ0FUSUF4Qm1BRnNJQTVxS3dNSU9RTUlJQklnRlNBVEVMb0JJQU1vQWd3aURpQWVLQUlRSWd4QkJIUnFJZ1lnRWlzREFDQUdLd01Bb0RrREFDQU1RUVIwSUE1cUlnWWdFaXNEQ0NBR0t3TUlvRGtEQ0NBV0tBSVFJaFpCQkhRZ0Rtb2lCaUFHS3dNQUlCSXJBd0NoT1FNQUlCWkJCSFFnRG1vaURpQU9Ld01JSUJJckF3aWhPUU1JSUFVb0FnQWlCUTBBQ3dzZ0N5Z0NBQ0lMRFFBTEN3c2dDQ2dDQUNJSURRQWdHQXNGSUE5QkFXb0xJUWdnRHlBQUtBSUVJZ3RJQkg4Z0NDRVBEQUVGSUFRaENDQUxJUVFnRndzTEN5RUxJQTBnQkVnRVFDQUxJUTBNQVFzTEN5QWZDd1JBQTBBZ0NpZ0NBQ2dDQUNFQUlBb2dBRUgvQTNGQmhBTnFFUUVBSUFwQkVHb2lDaUFVU1EwQUN3c2dFUkJESUFGRkJFQWdFeVFFRHd0QkVDQUpJQWNRU0NBVEpBUUx5Z1FCQ244Z0FVVUVRRUVBRHd0QkFTRUZBMEFnQlVFQmFpRURJQUVvQWhRaUFnUkFJQU1oQlNBQ0lRRU1BUXNMSUFFaUF5Z0NFQ0VDSUFWQkFYRUVmeUFEUVFBMkFoUWdBVUVBTmdJUUlBSUZJQUlvQWhBaENpQUNRUUEyQWhRZ0FrRUFOZ0lRSUFOQkFEWUNGQ0FCUVFBMkFoQWdBQ2dDQUNnQ0FDRUVJQUFnQkVIL0FIRkJCR29SQ0FBYUlBRXJBd2dnQWlzRENHTUVRQ0FCS0FJWUlnTUVRQ0FDSUFNMkFoUWdBeUFDTmdJUUN5QUNJQUUyQWhBZ0FTQUNOZ0lZQlNBQ0tBSVlJZ1FFUUNBRElBUTJBaFFnQkNBQk5nSVFDeUFCSUFJMkFoQWdBaUFCTmdJWUlBSWhBUXNnQ2dzaEF5QUZRWDlxUVFGMklnaEZCRUFnQVE4TFFRQWhCd05BSUFNb0FoQWlCQ2dDRUNFRklBUkJBRFlDRkNBRVFRQTJBaEFnQXlJQ1FRQTJBaFFnQWtFQU5nSVFJQUFvQWdBb0FnQWhCaUFBSUFaQi93QnhRUVJxRVFnQUdnSi9JQUpCQ0dvaUJpc0RBQ0FFUVFocUlna3JBd0JqQkg4Z0FpZ0NHQ0lDQkVBZ0JDQUNOZ0lVSUFJZ0JEWUNFQXNnQkNBRE5nSVFJQU1nQkRZQ0dDQUdCU0FFS0FJWUlnWUVRQ0FDSUFZMkFoUWdCaUFDTmdJUUN5QURJQVEyQWhBZ0JDQUNOZ0lZSUFRaEF5QUpDeUVMSUFBb0FnQW9BZ0FoQkNBQUlBUkIvd0J4UVFScUVRZ0FHaUFMQ3lzREFDQUJLd01JWXdSQUlBTW9BaGdpQWdSQUlBRWdBallDRkNBQ0lBRTJBaEFMSUFFZ0F6WUNFQ0FESUFFMkFoZ2dBeUVCQlNBQktBSVlJZ0lFUUNBRElBSTJBaFFnQWlBRE5nSVFDeUFESUFFMkFoQWdBU0FETmdJWUN5QUhRUUZxSWdjZ0NFY0VRQ0FGSVFNTUFRc0xJQUVMa0FFQkEzOGdBRUdzNmdBMkFnQWdBQ2dDQ0NJQ1JRUkFJQUFRUXc4TEEwQUNRQ0FDS0FJWUlnRkZCRUFnQWlnQ0ZDSUJSUVJBQWtBZ0FpZ0NFQ0VCSUFJUVF5QUJSUTBEQTBBZ0FTZ0NHQ0FDUmdSQUlBRW9BaFFpQWdSQUlBSWhBUXdEQ3dzZ0FTZ0NFQ0VESUFFUVF5QURSUTBFSUFFaEFpQURJUUVNQUFBTEFBc0xDeUFCSVFJTUFRc0xJQUFRUXd1V0FRRURmeUFBUWF6cUFEWUNBQ0FBS0FJSUlnSkZCRUFnQUVFQU5nSUlEd3NEUUFKQUlBSW9BaGdpQVVVRVFDQUNLQUlVSWdGRkJFQUNRQ0FDS0FJUUlRRWdBaEJESUFGRkRRTURRQ0FCS0FJWUlBSkdCRUFnQVNnQ0ZDSUNCRUFnQWlFQkRBTUxDeUFCS0FJUUlRTWdBUkJESUFORkRRUWdBU0VDSUFNaEFRd0FBQXNBQ3dzTElBRWhBZ3dCQ3dzZ0FFRUFOZ0lJQzJZQkFuOGdBQ2dDRUNJQklBQW9BaFJKQkVBRFFDQUJLQUlBS0FJQUlRSWdBU0FDUWY4RGNVR0VBMm9SQVFBZ0FVRVFhaUlCSUFBb0FoUkpEUUFMSUFBb0FoQWhBUXNnQVJCRElBQkJBRFlDR0NBQVFYODJBaHdnQUVJQU53SUlJQUJDQURjQ0VBdUJCUUVGZnlNRUlRSWpCRUV3YWlRRUl3UWpCVTRFUUVFd0VBQUxJQUVvQWd3aEJDQUNRUUEyQWhnZ0FpQUVRWDlxTmdJY0lBUkJBVWdFUUNBQ1FRQTJBaFFnQWtFQU5nSU1JQUpCQURZQ0VBVWdBaUFFUVFKMEVFb2lBellDRUNBRFJRUkFRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSUZRUUEyQWdBZ0JVRi9OZ0lFSUFWQnFEaEJBQkFCQ3lBQ0lBTTJBZ3dnQWlBRVFRSjBJQU5xSWdRMkFoUWdCQ0FEU3dSQUEwQWdBMEVBTmdJQUlBTkJCR29pQXlBQ0tBSVVTUTBBQ3dzTElBSkJqT0VBTmdJQUlBSkJBRFlDQkNBQ0lBRTJBZ2dnQWlBQklBSVFXVFlDQkNBQ1FaRHFBRFlDQUNBQ1FRQTJBaUFnQUVFQU5nSUFJQUFnQWtFb2FpSUVOZ0lFUVF3UVh5SUJRYXpxQURZQ0FDQUJRUUEyQWdnZ0FDQUJOZ0lJSUFJb0Fod2hBU0FBSUFJb0FoZ2lCVFlDS0NBQUlBRTJBaXdnQVNBRmF5SURRUUZxSVFFZ0EwRUFTQVJBSUFCQkFEWUNKQ0FBUVFBMkFod2dBRUVBTmdJZ0JTQUFJQUZCQW5RUVNpSUROZ0lnSUFORkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnWkJBRFlDQUNBR1FYODJBZ1FnQmtHb09FRUFFQUVMSUFCQkFDQUZhMEVDZENBRGFqWUNIQ0FBSUFGQkFuUWdBMm9pQVRZQ0pDQUJJQU5MQkVBZ0FpZ0NGQ0VEQTBBZ0FVRjhhaUlCSUFOQmZHb2lBeWdDQURZQ0FDQUJJQUFvQWlCTERRQUxDd3NnQWlnQ0NDRUJJQUJCRUdvaUEwR000UUEyQWdBZ0FFRUFOZ0lVSUFBZ0FUWUNHQ0FCQkg4Z0FDQUJJQU1RV1RZQ0ZDQUNLQUlJQlVFQUN5RUJJQU5Ca09vQU5nSUFJQUFnQWlnQ0lEWUNNQ0FDUVl6aEFEWUNBQ0FCUlFSQUlBSW9BaEFRUXlBQ0pBUVBDeUFDSUFJb0FnUTJBaVFnQkNBQ0tBSWtOZ0lBSUFFZ0JCQk5JQUlvQWhBUVF5QUNKQVFMaXdnQ0IzOEJmQ01FSVFZakJFSFFBR29rQkNNRUl3Vk9CRUJCMEFBUUFBc2dCa0VRYWlBQkVJRUlJQUVvQWd4QmYyb2hCeUFGUVNCcUlnaEUvLy8vLy8vLzczODVBd0FnQlVFTWFpQUhJQWdRaEFFZ0JTZ0NDQ0lIQkVBZ0JpQUZLQUlFTmdKRUlBWWdCaWdDUkRZQ0FDQUhJQVlRVFFzZ0JTQUJOZ0lJSUFVZ0FTQUZFRmsyQWdRZ0FTZ0NERUYvYWlFSElBUkJJR29pQ0VFQU5nSUFJQVJCREdvZ0J5QUlFSTBESUFRb0FnZ2lCd1JBSUFZZ0JDZ0NCRFlDUkNBR0lBWW9Ba1EyQWdBZ0J5QUdFRTBMSUFRZ0FUWUNDQ0FFSUFFZ0JCQlpOZ0lFSUFFb0FuUWlBUVJBQTBBZ0JTZ0NEQ0FCS0FJUVFRTjBhaUVISUFZZ0FUWUNBQ0FHSUFjckF3QTVBd2dnQmlBR0tBSVFRUUZxTmdJUUlBWW9BaGdpQnlnQ0FDZ0NDQ0VJSUFjZ0JpQUlRVDl4UVlvQmFoRURBQ0VISUFZb0Fpd2dBU2dDRUVFQ2RHb2dCellDQUNBQktBSUFJZ0VOQUFzTElBTW9BZ1FpQVFSQUEwQWdCU2dDRENBQktBSUlLQUlRSWdOQkEzUnFJZ2RFQUFBQUFBQUFBQUE1QXdBZ0JpZ0NHQ0lJS0FJQUtBSVVJUWtnQmlBSUlBWW9BaXdnQTBFQ2RHb29BZ0FpQXlBSlFUOXhRWW9CYWhFREFDZ0NBRFlDQUNBR0lBY3JBd0E1QXdnZ0JpZ0NHQ0lIS0FJQUtBSVFJUWdnQnlBRElBWWdDRUVIY1VHT0NXb1JBZ0FnQVNnQ0FDSUJEUUFMQ3lBR0tBSVFCRUFEUUNBR0tBSVlJZ0VvQWdBb0FnUWhBeUFCSUFOQi93QnhRUVJxRVFnQUtBSUFJUWNnQmlnQ0dDSUJLQUlBS0FJRUlRTWdBU0FEUWY4QWNVRUVhaEVJQUNnQ0FDZ0NFRUVDZENBR0tBSXNha0VBTmdJQUlBWWdCaWdDRUVGL2FqWUNFQ0FHS0FJWUlnRW9BZ0FvQWd3aEF5QUJJQU5CL3dOeFFZUURhaEVCQUFKQUFrQWdCQ2dDRENBSEtBSVFJZ2hCQW5ScUtBSUFEUUFnQlNnQ0RDQUlRUU4wYWlzREFDQUFLd01BUkFBQUFBQUFBQUFBb0dSRkRRQU1BUXNnQnlnQ0dDSURJUUVnQXdSQUEwQWdCU2dDRENJS0lBRW9BZ2dvQWhBaUN5Z0NFQ0lNUVFOMGFpSUpLd01BSUFoQkEzUWdDbW9yQXdBZ0FpZ0NEQ0FCS0FJTUlnRW9BaGhCQTNScUt3TUFvQ0lOSUFBckF3Q2daQVJBSUFrZ0RUa0RBQ0FHS0FJWUlnZ29BZ0FvQWhRaENpQUdJQWdnQmlnQ0xDQU1RUUowYWlnQ0FDSUlJQXBCUDNGQmlnRnFFUU1BS0FJQU5nSUFJQVlnQ1NzREFEa0RDQ0FHS0FJWUlna29BZ0FvQWhBaENpQUpJQWdnQmlBS1FRZHhRWTRKYWhFQ0FDQUVLQUlNSUFzb0FoQkJBblJxSUFFMkFnQUxJQU1vQWdBaUFVVU5BaUFIS0FJUUlRZ2dBU0VEREFBQUN3QUxDeUFHS0FJUURRQUxDeUFHUVl6aEFEWUNJQ0FHS0FJb0lnQUVRQ0FHSUFZb0FpUTJBa1FnQmlBR0tBSkVOZ0lBSUFBZ0JoQk5DeUFHS0FJd0VFTWdCaWdDR0NJQVJRUkFJQVlrQkE4TElBQWdBQ2dDQUNnQ0lFSC9BM0ZCaEFOcUVRRUFJQVlrQkF1bEFRRUNmeU1FSVFZakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBWkJBRFlDQkNBR1FRQTJBZ2dnQmtHdzVnQTJBZ0FnQmtFQk5nSU1RUXdRU1NJSFFRQTJBZ0FnQjBFQU5nSUVJQWNnQXpZQ0NDQUdJQWMyQWdRZ0JpQUhOZ0lJSUFBZ0FTQUNJQVlnQkNBRkVJSUlJQVpCeE9ZQU5nSUFJQVlvQWdRaUFFVUVRQ0FHSkFRUEMwRU1JQUFnQmlnQ0NCQklJQVpCQURZQ0NDQUdRUUEyQWdRZ0JpUUVDNFlEQWdaL0FYd2pCQ0VFSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBRVFTaHFJZ2RCQURvQUFDQUVJQUVnQnhDdkFrRUlFRWtpQVVFQU5nSUFJQUVnQURZQ0JDQUFLQUlRSWdBZ0JDZ0NER3BCQVRvQUFDQUNLQUlNSUFCQkEzUnFSQUFBQUFBQUFBQUFPUU1BSUFFRVFDQUJJUUFEUUNBQUtBSUVJUVlnQUNnQ0FDRUZJQUJCd0xNQ0tBSUFOZ0lBUWNDekFpQUFOZ0lBSUFGQkFDQUZHeUVCSUFJb0Fnd2dCaWdDRUVFRGRHb3JBd0FnQTZBaENpQUdLQUlZSWdZRVFDQUZJUUFEUUNBR0tBSUlLQUlRSWdnaENTQUlLQUlRSUFRb0FneHFJZ1VzQUFCRkJFQWdCVUVCT2dBQVFRZ1FTU0lGUVFBMkFnQWdCU0FKTmdJRUlBQUVRQ0FCSUFVMkFnQWdCU0VCQlNBRklnRWhBQXNnQWlnQ0RDQUlLQUlRUVFOMGFpQUtPUU1BQ3lBR0tBSUFJZ1lOQUFzRklBVWhBQXNnQUEwQUN3c2dCRUdNNFFBMkFnQWdCQ2dDQ0NJQVJRUkFJQVFvQWhBUVF5QUVKQVFQQ3lBRUlBUW9BZ1EyQWlRZ0J5QUVLQUlrTmdJQUlBQWdCeEJOSUFRb0FoQVFReUFFSkFRTHJnRUJBbjhqQkNFRkl3UkJNR29rQkNNRUl3Vk9CRUJCTUJBQUN5QUZRUWhxSWdSQkFEWUNHQ0FFUVg4MkFod2dCRUlBTndJRUlBUkNBRGNDRENBRVFRQTJBaFFnQkVIWTV3QTJBZ0FnQlVRNmpERGlqbmxGUGprREFDQUZJQUVnQXlBQUlBUWdBaENEQ0NBRVFZemhBRFlDQUNBRUtBSUlJZ0JGQkVBZ0JDZ0NFQkJESUFVa0JBOExJQVVnQkNnQ0JEWUNMQ0FGSUFVb0FpdzJBZ0FnQUNBRkVFMGdCQ2dDRUJCRElBVWtCQXVvRUFNT2Z3RitBbnhCdU5NQ1F2Ly8vLzhQTndNQUlBRW9BZ1FpQXlBQktBSUlJZ1ZIQkVBRFFDQURLQUlRUVFGcUlBTW9BZ3hyUVFCS0JFQkJBQ0VFQTBCQnVOTUNRYmpUQWlrREFFS3QvdFhrMUlYOXFOZ0Fma0lCZkNJUk53TUFJQkZDSVlpbnQwUUFBTUQvLy8vZlFhTWhFaUFES0FJQUlBUkJBM1JxSUJJNUF3QWdCRUVCYWlJRUlBTW9BaEJCQVdvZ0F5Z0NER3RJRFFBTEN5QURRUlJxSWdNZ0JVY05BQXNMQW44Z0FDZ0NFQ0VRSUFBb0Fnd2hDU0FDS0FJQUlRWWdBU2dDQUNJRktBSVFRUUZxSUFVb0FneHJJZ3BCQUVvRVFDQUZLQUlBSVF0QkFDRURSQUFBQUFBQUFBQUFJUklEUUNBU0lBTkJBM1FnQzJvckF3QWlFaUFTb3FBaEVpQURRUUZxSWdNZ0NrY05BQXNGUkFBQUFBQUFBQUFBSVJJTElCS2ZJaEpFQUFBQUFBQUFBQUJpQkVBZ0JTZ0NCQ0lESUFVb0FnZ2lDa2NFUUFOQUlBTWdBeXNEQUNBU296a0RBQ0FEUVFocUlnTWdDa2NOQUFzTEN5QUdJQkk1QXdBZ0JTZ0NKRUVCYWlBRktBSWdheUlLUVFCS0JFQWdCU2dDRkNFTFFRQWhBMFFBQUFBQUFBQUFBQ0VTQTBBZ0VpQURRUU4wSUF0cUt3TUFJaElnRXFLZ0lSSWdBMEVCYWlJRElBcEhEUUFMQlVRQUFBQUFBQUFBQUNFU0N5QVNueUlTUkFBQUFBQUFBQUFBWWdSQUlBVW9BaGdpQXlBRktBSWNJZ1ZIQkVBRFFDQURJQU1yQXdBZ0VxTTVBd0FnQTBFSWFpSURJQVZIRFFBTEN3c2dCaUFTT1FNSUlCQUxRUUZxSUFscklnbEJmMm9oQ2lBSlFRQktJUXRFQUFBQUFBQUFBQUFoRWdKQUFrQURRQ0FTdlVMLy8vLy8vLy8vLy84QWcwS0FnSUNBZ0lDQStQOEFWaUFTSXdOaGNrVUVRRUVvRUVvaUJVVU5BaUFGUVFBMkFnd2dCVUYvTmdJUUlBVkJBRFlDQ0NBRlFRQTJBZ0FnQlVFQU5nSUVJQVZCQURZQ0lDQUZRWDgyQWlRZ0JVRUFOZ0ljSUFWQkZHb2lCa0VBTmdJQUlBVkJBRFlDR0NBRklBb1FoZ0VnQ3dSQUlBRW9BZ0FvQWdBaEJDQUZLQUlBSVFoQkFDRURBMEFnQTBFRGRDQUlhaUFEUVFOMElBUnFJZ2NyQXdBNUF3QWdCMFFBQUFBQUFBQUFBRGtEQUNBRFFRRnFJZ01nQ1VjTkFBc2dCaUFLRUlZQklBRW9BZ0FvQWhRaEJDQUdLQUlBSVFaQkFDRURBMEFnQTBFRGRDQUdhaUFEUVFOMElBUnFJZ2dyQXdBNUF3QWdDRVFBQUFBQUFBQUFBRGtEQUNBRFFRRnFJZ01nQ1VjTkFBc2dBQ2dDQUNFSUlBRW9BZ0FoQmlBTEJFQWdCU2dDQUNFSElBWW9BZ0FoREVFQUlRTURRQ0FEUVJSc0lBaHFLQUlBSVE0Z0EwRURkQ0FIYWlFTlFRQWhCQU5BSUFSQkEzUWdER29pRHlBRVFRTjBJQTVxS3dNQUlBMHJBd0NpSUE4ckF3Q2dPUU1BSUFSQkFXb2lCQ0FKUncwQUN5QURRUUZxSWdNZ0NVY05BQXNnQlNnQ0ZDRUhJQVlvQWhRaEJrRUFJUU1EUUNBRFFSUnNJQWhxS0FJQUlRd2dBMEVEZENBSGFpRU9RUUFoQkFOQUlBUkJBM1FnQm1vaURTQUVRUU4wSUF4cUt3TUFJQTRyQXdDaUlBMHJBd0NnT1FNQUlBUkJBV29pQkNBSlJ3MEFDeUFEUVFGcUlnTWdDVWNOQUFzZ0FTZ0NBQ0VESUFzRVFDQURLQUlBSVFZZ0F5Z0NGQ0VJSUFNb0FoQkJBV29nQXlnQ0RHc2lCMEVBU2dSQVFRQWhCRVFBQUFBQUFBQUFBQ0VTQTBBZ0VpQUVRUU4wSUFacUt3TUFJQVJCQTNRZ0NHb3JBd0Npb0NFU0lBUkJBV29pQkNBSFJ3MEFDMEVBSVFSRUFBQUFBQUFBQUFBaEV3TkFJQk1nQkVFRGRDQUdhaXNEQUNJVElCT2lvQ0VUSUFSQkFXb2lCQ0FIUncwQUN3VkVBQUFBQUFBQUFBQWhFMFFBQUFBQUFBQUFBQ0VTQ3lBU0lCT2pJUkpCQUNFRUEwQWdCRUVEZENBSWFpSUhJQWNyQXdBZ0VpQUVRUU4wSUFacUt3TUFvcUU1QXdBZ0JFRUJhaUlFSUFsSERRQUxDd1VnQmlFREN3VWdCaUFLRUlZQklBRW9BZ0FoQXdzZ0FpZ0NBQ0VHSUFNb0FoQkJBV29nQXlnQ0RHc2lDRUVBU2lJTUJFQWdBeWdDQUNFSFFRQWhCRVFBQUFBQUFBQUFBQ0VTQTBBZ0VpQUVRUU4wSUFkcUt3TUFJaElnRXFLZ0lSSWdCRUVCYWlJRUlBaEhEUUFMQlVRQUFBQUFBQUFBQUNFU0N5QVNueUlTUkFBQUFBQUFBQUFBWWdSQUlBTW9BZ1FpQkNBREtBSUlJZ2RIQkVBRFFDQUVJQVFyQXdBZ0VxTTVBd0FnQkVFSWFpSUVJQWRIRFFBTEN3c2dCaUFTT1FNQUlBTW9BaVJCQVdvZ0F5Z0NJR3NpQjBFQVNpSU9CRUFnQXlnQ0ZDRU5RUUFoQkVRQUFBQUFBQUFBQUNFU0EwQWdFaUFFUVFOMElBMXFLd01BSWhJZ0VxS2dJUklnQkVFQmFpSUVJQWRIRFFBTEJVUUFBQUFBQUFBQUFDRVNDeUFTbnlJU1JBQUFBQUFBQUFBQVlnUkFJQU1vQWhnaUJDQURLQUljSWcxSEJFQURRQ0FFSUFRckF3QWdFcU01QXdBZ0JFRUlhaUlFSUExSERRQUxDd3NnQmlBU09RTUlJQXdFZkNBREtBSUFJUVlnQlNnQ0FDRU1RUUFoQkVRQUFBQUFBQUFBQUNFU0Ezd2dFaUFFUVFOMElBWnFLd01BSUFSQkEzUWdER29yQXdDaW9DRVNJQVJCQVdvaUJDQUlSdzBBSUJJTEJVUUFBQUFBQUFBQUFBc2hFeUFPQkVBZ0F5Z0NGQ0VHSUFVb0FoUWhCRUVBSVFORUFBQUFBQUFBQUFBaEVnTkFJQklnQTBFRGRDQUdhaXNEQUNBRFFRTjBJQVJxS3dNQW9xQWhFaUFEUVFGcUlnTWdCMGNOQUFzRlJBQUFBQUFBQUFBQUlSSUxJQVZCS0dvaEJpQVRtaUFUSUJORUFBQUFBQUFBQUFCakd5SVRSQUFBQUFBQUFQQS9JQk5FQUFBQUFBQUE4RDlqR3lJVElCS2FJQklnRWtRQUFBQUFBQUFBQUdNYkloSmtJUVFnQlNFREEwQWdBeWdDQkJCRElBTkJGR29pQXlBR1NRMEFDeUFGRUVNZ0VpQVRJQVFiSWhKRWtFSHkvLy8vN3o5akRRRU1Bd3NMUWNEMEFoQkZRY0QwQWhCRlFRd1FBaUlBUVFBMkFnQWdBRUYvTmdJRUlBQkJBRFlDQ0NBQVFhakNBRUVBRUFFTUFRdEJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnQkJBRFlDQUNBQVFYODJBZ1FnQUVHb09FRUFFQUVMQy9NQ0FncC9BWHdnQUNnQ0VFRUJhaUFBS0FJTWF5SUdRUUJNQkVBUEN5QUJLQUlBSVFRZ0FDZ0NBQ0lES0FJUVFRRnFJQU1vQWd4cklnZEJBRXdFUUVFQklRRURRQ0FDUVJSc0lBUnFLQUlBSVFOQkFDRUFBMEFnQUVFRGRDQURha1FBQUFBQUFBQUFBRGtEQUNBQVFSUnNJQVJxS0FJQUlBSkJBM1JxUkFBQUFBQUFBQUFBT1FNQUlBRWdBRUVCYWlJQVJ3MEFDeUFCUVFGcUlRRWdBa0VCYWlJQ0lBWklEUUFMRHdzZ0IwRUJSaUVKUVFFaEJRTkFJQUpCRkd3Z0JHb29BZ0FoQ2lBQ1FSUnNJQU5xS0FJQUlRaEJBQ0VBQTBBZ0NDc0RBQ0FBUVJSc0lBTnFLQUlBSWdzckF3Q2lSQUFBQUFBQUFBQUFvQ0VNSUFsRkJFQkJBU0VCQTBBZ0RDQUJRUU4wSUFocUt3TUFJQUZCQTNRZ0Myb3JBd0Npb0NFTUlBRkJBV29pQVNBSFNBMEFDd3NnQUVFRGRDQUthaUFNT1FNQUlBQkJGR3dnQkdvb0FnQWdBa0VEZEdvZ0REa0RBQ0FGSUFCQkFXb2lBRWNOQUFzZ0JVRUJhaUVGSUFKQkFXb2lBaUFHU0EwQUN3dmtBUUVFZnlBQUtBSVFJZ0lnQUNnQ0ZFa0VRQU5BSUFJb0FnQW9BZ0FoQXlBQ0lBTkIvd054UVlRRGFoRUJBQ0FDUVJCcUlnSWdBQ2dDRkVrTkFBc2dBQ2dDRUNFQ0N5QUFRUXhxSVFNZ0FFRWdhaUVFSUFJUVF5QUFRUUEyQWhnZ0FDQUJRWDlxTmdJY0lBRkJBVWdFUUNBQVFRQTJBaFFnQTBFQU5nSUFJQUJCQURZQ0VDQURJQVFROUFFUEN5QUFJQUZCQkhRUVNpSUNOZ0lRSUFKRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnVkJBRFlDQUNBRlFYODJBZ1FnQlVHb09FRUFFQUVMSUFNZ0FqWUNBQ0FBSUFGQkJIUWdBbW8yQWhRZ0F5QUVFUFFCQzRJS0FoRi9BWHdqQkNFSEl3UkJNR29rQkNNRUl3Vk9CRUJCTUJBQUN3Si9JQUFvQWdBaUF5Z0NFQ0VUSUFNb0Fnd2hDeUFBS0FJUVFRRnFJQUFvQWd4cklnbEJmMm9oQ0NBSFFSUnFJZ1JCQURZQ0RDQUVJQWcyQWhBZ0NVRUJTQVIvSUFSQkFEWUNDQ0FFUVFBMkFnQWdCRUVBTmdJRVFRQUZBbjhnQkNBSlFSUnNFRW9pQmpZQ0JDQUdSUVJBUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlEUVFBMkFnQWdBMEYvTmdJRUlBTkJxRGhCQUJBQkN5QUVJQVkyQWdBZ0JDQUpRUlJzSUFacUlndzJBZ2dnRENBR1N3UkFJQVloQXdOQUlBTkJBRFlDRENBRFFYODJBaEFnQTBFQU5nSUlJQU5CQURZQ0FDQURRUUEyQWdRZ0EwRVVhaUlESUF4SkRRQUxJQVlnQ1VFQVRBMEJHZ3RCQUNFREEzOGdBMEVVYkNBR2FpQUlFSVlCSUFOQkFXb2lBeUFKU0EwQVFRRWhEU0FHQ3dzTElRNGdBQ0FFRUljSUlBZEJBRFlDRENBSFFRRTJBaEFnQjBFb0VFb2lCVFlDQkNBRlJRUkFRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSURRUUEyQWdBZ0EwRi9OZ0lFSUFOQnFEaEJBQkFCQ3lBSElBVTJBZ0FnQnlBRlFTaHFJaEEyQWdnZ0JVRUFOZ0lNSUFWQmZ6WUNFQ0FGUVFBMkFnZ2dCVUVBTmdJQUlBVkJBRFlDQkNBRlFRQTJBaUFnQlVGL05nSWtJQVZCQURZQ0hDQUZRUlJxSWdOQkFEWUNBQ0FGUVFBMkFoZ2dCU0FJRUlZQklBTWdDQkNHQVNBRUlBY2dBaENHQ0NBQ0tBSUFJUVFnQVNnQ0FDRUNJQUFvQWdBaER5QVRDMEVCYWlBTGF5SUlRUUJLQkVBZ0NFRURkQ0VLSUFRZ0JDc0RBSjg1QXdBZ0FpZ0NBQ0VMSUEwRVFDQUZLQUlBSVJGQkFDRUFBMEFnQUVFRGRDQUxhaUlTUkFBQUFBQUFBQUFBT1FNQVJBQUFBQUFBQUFBQUlSUkJBQ0VEQTBBZ0VpQVVJQU5CRkd3Z0Qyb29BZ0FnQUVFRGRHb3JBd0FnQTBFRGRDQVJhaXNEQUtLZ0loUTVBd0FnQTBFQmFpSURJQWxIRFFBTElBQkJBV29pQUNBSVJ3MEFDd1VnQzBFQUlBb1FZaG9MSUFRZ0JDc0RDSjg1QXdnZ0FpZ0NGQ0VDSUEwRVFDQUZLQUlVSVFSQkFDRUFBMEFnQUVFRGRDQUNhaUlOUkFBQUFBQUFBQUFBT1FNQVJBQUFBQUFBQUFBQUlSUkJBQ0VEQTBBZ0RTQVVJQU5CRkd3Z0Qyb29BZ0FnQUVFRGRHb3JBd0FnQTBFRGRDQUVhaXNEQUtLZ0loUTVBd0FnQTBFQmFpSURJQWxIRFFBTElBQkJBV29pQUNBSVJ3MEFDd1VnQWtFQUlBb1FZaG9MSUFFb0FnQWhBZ1VnQkNBRUt3TUFuemtEQUNBRUlBUXJBd2lmT1FNSUN5QUNLQUlRUVFGcUlBSW9BZ3hySWdCQkFFb0VRQ0FDS0FJQUlRRkJBQ0VEUkFBQUFBQUFBQUFBSVJRRFFDQVVJQU5CQTNRZ0FXb3JBd0FpRkNBVW9xQWhGQ0FEUVFGcUlnTWdBRWNOQUFzRlJBQUFBQUFBQUFBQUlSUUxJQlNmSWhSRUFBQUFBQUFBQUFCaUJFQWdBaWdDQkNJRElBSW9BZ2dpQUVjRVFBTkFJQU1nQXlzREFDQVVvemtEQUNBRFFRaHFJZ01nQUVjTkFBc0xDeUFDS0FJa1FRRnFJQUlvQWlCcklnQkJBRW9FUUNBQ0tBSVVJUUZCQUNFRFJBQUFBQUFBQUFBQUlSUURRQ0FVSUFOQkEzUWdBV29yQXdBaUZDQVVvcUFoRkNBRFFRRnFJZ01nQUVjTkFBc0ZSQUFBQUFBQUFBQUFJUlFMSUJTZkloUkVBQUFBQUFBQUFBQmlCRUFnQWlnQ0dDSURJQUlvQWh3aUFFY0VRQU5BSUFNZ0F5c0RBQ0FVb3prREFDQURRUWhxSWdNZ0FFY05BQXNMQ3lBRklRTURRQ0FES0FJRUVFTWdBMEVVYWlJRElCQkpEUUFMSUFVUVF5QUdJQXhQQkVBZ0RoQkRJQWNrQkE4TEEwQWdCaWdDQkJCRElBWkJGR29pQmlBTVNRMEFDeUFPRUVNZ0J5UUVDNFFFQWdkL0JId2dBQ2dDQUNJRktBSVFRUUZxSUFVb0FneHJJUVFnQUNnQ0VFRUJhaUFBS0FJTWF5SURRUUZJQkg5QkFBVUNmeUFEUVFOMEVFb2lBa1VFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQUVFQU5nSUFJQUJCZnpZQ0JDQUFRYWc0UVFBUUFRc2dCTGNoQ2lBRVFRQk1CRUJFQUFBQUFBQUFBQUFnQ3FNaENFRUFJUUFEUUNBQVFRTjBJQUpxSUFnNUF3QWdBRUVCYWlJQUlBTkhEUUFMUVFFaEFVUUFBQUFBQUFBQUFDRUlJQUlNQVF0QkFDRUFBMzhnQUVFVWJDQUZhaWdDQUNFR1FRQWhBVVFBQUFBQUFBQUFBQ0VKQTBBZ0NTQUJRUU4wSUFacUt3TUFJZ2tnQ2FLZ0lRa2dBVUVCYWlJQklBUkhEUUFMSUFnZ0NhQWhDQ0FBUVFOMElBSnFJQWtnQ3FNNUF3QWdBRUVCYWlJQUlBTkhEUUJCQVNFQklBSUxDd3NoQmlBRVFRQk1CRUFnQWhCRER3c2dBVVVFUUNBQ0VFTVBDeUFJSUFNZ0JHeTNveUVLSUFPM0lRdEJBQ0VCQTBCQkFDRUFSQUFBQUFBQUFBQUFJUWdEUUNBQVFSUnNJQVZxS0FJQUlBRkJBM1JxSWdjckF3QWlDU0FKb2lFSklBY2dDaUFKb0NBQVFRTjBJQVpxS3dNQW9Ua0RBQ0FJSUFtZ0lRZ2dBRUVCYWlJQUlBTkhEUUFMSUFnZ0M2TWhDRUVBSVFBRFFDQUFRUlJzSUFWcUtBSUFJQUZCQTNScUlnY2dCeXNEQUNBSW9VUUFBQUFBQUFEZ3Y2STVBd0FnQUVFQmFpSUFJQU5IRFFBTElBRkJBV29pQVNBRVJ3MEFDeUFDRUVNTCt3NENEWDhDZkNNRUlRUWpCRUdBQVdva0JDTUVJd1ZPQkVCQmdBRVFBQXNnQVNnQ0JDSUpLQUp3SVFvZ0FDZ0NCQ0VGSUFJb0FnUWlBeUFDS0FJSVNRUkFBMEFnQXlnQ0JCQkRJQU5CRkdvaUF5QUNLQUlJU1EwQUN5QUNLQUlFSVFNTElBTVFReUFDUVFBMkFnd2dBaUFGSUFvZ0JTQUtTQnNpQzBGL2FqWUNFQUovSUF0QkFVZ0VmeUFDUVFBMkFnZ2dBa0VBTmdJQUlBSkJBRFlDQkVFQUJRSi9JQUlnQzBFVWJCQktJZ1UyQWdRZ0JVVUVRRUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlBMEVBTmdJQUlBTkJmellDQkNBRFFhZzRRUUFRQVFzZ0FpQUZOZ0lBSUFJZ0MwRVViQ0FGYWlJSU5nSUlJQWdnQlVzRVFDQUZJUU1EUUNBRFFRQTJBZ3dnQTBGL05nSVFJQU5CQURZQ0NDQURRUUEyQWdBZ0EwRUFOZ0lFSUFOQkZHb2lBeUFJU1EwQUMwRUFJQXRCQUV3TkFSb0xJQVVnQ2tGL2FpSUZFSVlCSUF0QkFVb0VmMEVCSVFNRGZ5QUNLQUlBSUFOQkZHeHFJQVVRaGdFZ0EwRUJhaUlESUF0SURRQkJBUXNGUVFFTEN3c2hEeUFFUWRBQWFpSUdRUUEyQWhnZ0JrRi9OZ0ljSUFaQ0FEY0NCQ0FHUWdBM0Fnd2dCa0VBTmdJVUlBWkJ3T1VBTmdJQUlBQXNBQkFFZnlBSktBSVFJUU1nQmtFQU5nSVlJQVlnQTBGL2FqWUNIQ0FEUVFGSUJFQWdCa0VBTmdJVUlBWkJBRFlDRENBR1FRQTJBaEFGSUFZZ0EwRURkQkJLSWdVMkFoQWdCUVJBSUFZZ0JUWUNEQ0FHSUFOQkEzUWdCV28yQWhRRlFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRFFRQTJBZ0FnQTBGL05nSUVJQU5CcURoQkFCQUJDd3NnQmlBSk5nSUlJQVlnQ1NBR0VHdzJBZ1FnQ1NnQ2dBRWlBd1IvSUFFb0F1d0dJUVVnQmlnQ0RDRUlJQU1oQVFOL0lBRW9BaGdpQTBFRGRDQUlhaUFEUVFOMElBVnFLd01BT1FNQUlBRW9BZ0FpQVEwQVFRRUxCVUVCQ3dWQkFBc2hDQ0FKS0FJTUlRTWdCRUVvYWlJSFFRQTJBaGdnQnlBRFFYOXFOZ0ljSUFOQkFVZ0VRQ0FIUVFBMkFoUWdCMEVBTmdJTUlBZEJBRFlDRUFVZ0J5QURRUU4wRUVvaUFUWUNFQ0FCUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRlFRQTJBZ0FnQlVGL05nSUVJQVZCcURoQkFCQUJDeUFISUFFMkFnd2dCeUFEUVFOMElBRnFJZ00yQWhRZ0F5QUJTd1JBQTBBZ0FTTURPUU1BSUFGQkNHb2lBU0FEU1EwQUN3c0xJQWRCak9FQU5nSUFJQWRCQURZQ0JDQUhJQWsyQWdnZ0J5QUpJQWNRV1RZQ0JDQUhRZnpqQURZQ0FDQUhJd001QXlBZ0NTZ0NEQ0VCSUFSQkFEWUNHQ0FFSUFGQmYybzJBaHdnQVVFQlNBUkFJQVJCQURZQ0ZDQUVRUUEyQWd3Z0JFRUFOZ0lRQlNBRUlBRkJBM1FRU2lJRE5nSVFJQU1FUUNBRUlBTTJBZ3dnQkNBQlFRTjBJQU5xTmdJVUJVSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUFVRUFOZ0lBSUFGQmZ6WUNCQ0FCUWFnNFFRQVFBUXNMSUFSQmpPRUFOZ0lBSUFSQkFEWUNCQ0FFSUFrMkFnZ2dCQ0FKSUFRUVdUWUNCQ0FFUWZ6akFEWUNBQ0FKS0FKMElRVWdEd3NFUUNBRUtBSUlJUUVnQ0FSQVFRQWhDaUFGSVFBRFFDQUJLQUlFSWdGQkFFb0VRQ0FFS0FJTUlnTWdBVUVEZEdvaEFRTkFJQUZCZUdvaUFTTURPUU1BSUFFZ0Ewc05BQXNMSUFBZ0NTQUVJQVlRaFFnZ0JDZ0NDQ0lES0FKMElnRUVRQ0FFS0FJTUlRd2dBaWdDQUNBS1FSUnNhaWdDQUNFTlFRQWhCUU5BSUFWQkFXb2hDQ0FGUVFOMElBMXFJQUVvQWhCQkEzUWdER29yQXdBNUF3QWdBU2dDQUNJQkJFQWdDQ0VGREFFTEN3c2dCeWdDRENJRklBQW9BaEJCQTNScVJBQUFBQUFBQUFBQU9RTUFJQWtvQW5RaUFRUkFJQVFvQWd3aENBTkFJQUVvQWhBaURFRURkQ0FGYWlJTkt3TUFJaEVnREVFRGRDQUlhaXNEQUNJUVpBUkFJQTBnRURrREFBVWdFU0VRQ3lBQklBQWdFQ0FBS0FJUVFRTjBJQVZxS3dNQVpCc2hBQ0FCS0FJQUlnRU5BQXNMSUFwQkFXb2lDaUFMU0FSQUlBTWhBUXdCQ3dzRklBRWhBMEVBSVFvZ0JTRUJBMzhnQXlnQ0JDSURRUUJLQkVBZ0JDZ0NEQ0lGSUFOQkEzUnFJUU1EUUNBRFFYaHFJZ01qQXprREFDQURJQVZMRFFBTEN5QUJJQWtnQkNBQUt3TUlFSVFJSUFRb0FnZ2lCU2dDZENJREJFQWdCQ2dDRENFTklBSW9BZ0FnQ2tFVWJHb29BZ0FoRGtFQUlRZ0RRQ0FJUVFGcUlRd2dDRUVEZENBT2FpQURLQUlRUVFOMElBMXFLd01BT1FNQUlBTW9BZ0FpQXdSQUlBd2hDQXdCQ3dzTElBY29BZ3dpQ0NBQktBSVFRUU4wYWtRQUFBQUFBQUFBQURrREFDQUpLQUowSWdNRVFDQUVLQUlNSVF3RFFDQURLQUlRSWcxQkEzUWdDR29pRGlzREFDSVJJQTFCQTNRZ0RHb3JBd0FpRUdRRVFDQU9JQkE1QXdBRklCRWhFQXNnQXlBQklCQWdBU2dDRUVFRGRDQUlhaXNEQUdRYklRRWdBeWdDQUNJRERRQUxDeUFLUVFGcUlnb2dDMGdFZnlBRklRTU1BUVVnQlFzTElRTUxCU0FFS0FJSUlRTUxJQVJCL0FCcUlRQWdCRUdNNFFBMkFnQWdBd1JBSUFRZ0JDZ0NCRFlDZUNBQUlBUW9BbmcyQWdBZ0F5QUFFRTBMSUFRb0FoQVFReUFIUVl6aEFEWUNBQ0FIS0FJSUlnRUVRQ0FFSUFjb0FnUTJBbmdnQUNBRUtBSjROZ0lBSUFFZ0FCQk5DeUFIS0FJUUVFTWdCa0dRNEFBMkFnQWdCaWdDQ0NJQlJRUkFJQVlvQWhBUVF5QUVKQVFQQ3lBRUlBWW9BZ1EyQW5nZ0FDQUVLQUo0TmdJQUlBRWdBQkJYSUFZb0FoQVFReUFFSkFRTDVnTUJFSDhqQkNFQkl3UkJNR29rQkNNRUl3Vk9CRUJCTUJBQUN5QUJRU2hxSWd0QkFEb0FBQ0FCSUFBZ0N4Q3ZBaUFBS0FKMElnQUVRQUpBQTBBQ1FDQUFJZzBvQWhBZ0FTZ0NER3BCQVRvQUFFRUlFRWtpQjBFQU5nSUFJQWNnQURZQ0JDQUFLQUlZSWd3RWZ5QUJLQUlNSVE1QkFDRUpJQWNpQlNJSUlnTWlBQ0lDSWc4aEJBTkFJQXdvQWdnb0FoQWlCaUVLSUFZb0FoQWdEbW9zQUFBRVFDQURJUVlnQWlFS0lBZ2hBZ1ZCQ0JCSklnVkJBRFlDQUNBRklBbzJBZ1FnQkFSQUlBOGdCVFlDQUNBQ0lRZ2dBeUVDSUFVaEF3VWdCU0lJSWdBaUFpSURJUVFMSUFFb0Fnd2lEaUFHS0FJUWFrRUJPZ0FBSUFJaEJpQUlJUW9nQlNJQ0lRY2dDVUVCYWlFSklBTWhEd3NnRENnQ0FDSU1CRUFnQWlFSUlBWWhBeUFLSVFJTUFRc0xJQWxCQWtvTkFTQU5JQkFnQ1VFQlJoc0ZJQWNpQUNFRUlCQUxJUUlnQkFSQUlBRW9BZ3doQXdOQUlBTWdCQ2dDQkNnQ0VHcEJBRG9BQUNBRUtBSUFJZ1FOQUF0QkNDQUFJQWNRU0FzZ0RTZ0NBQ0lBUlEwQ0lBSWhFQXdCQ3dzZ0JBUkFRUWdnQmlBRkVFZ0xRUUFoQWdzTElBRkJqT0VBTmdJQUlBRW9BZ2dpQUVVRVFDQUJLQUlRRUVNZ0FTUUVJQUlQQ3lBQklBRW9BZ1EyQWlRZ0N5QUJLQUlrTmdJQUlBQWdDeEJOSUFFb0FoQVFReUFCSkFRZ0FndWJBUUVCZnlBQktBSUVFTTRJUlFSQVFjRDBBaEJGUWNEMEFoQkZRUXdRQWlJQ1FRQTJBZ0FnQWtGL05nSUVJQUpCRERZQ0NDQUNRWWc3UVFBUUFRc2dBQ3dBRUVVRVFDQUFJQUVRM3dNUEMwR1k0d0FvQWdBaUFpQUNJQUVvQXRBSGNVWUVRQ0FBSUFFUTN3TUZRY0QwQWhCRlFjRDBBaEJGUVF3UUFpSUFRUUEyQWdBZ0FFRi9OZ0lFSUFCQkFEWUNDQ0FBUVlnN1FRQVFBUXNMRFFBZ0FFVUVRQThMSUFBUVF3dVRCQUVCZnlBQVFmVG5BRFlDQUNBQVFRQTJBdEFDSUFCQ0FEY0RxQUlnQUVJQU53T3dBaUFBUVg4MkF0UUNJQUJDQURjQ3ZBSWdBRUlBTndMRUFpQUFRUUEyQXN3Q0lBQkIvT01BTmdLNEFpQUFRZWdDYWlJQlFnQTNBeEFnQVVJQU53TVlJQUZCQWpZQ0FDQUFRWWdEYWhEVEJ5QUFRUUE2QUFRZ0FFRUNOZ0lJSUFCRUFBQUFBQUFBTkVBNUF4QWdBRUVBT2dBWUlBQkJBVFlDSENBQVFlUUFOZ0lnSUFCQkFUWUNKQ0FBUVFFMkFpZ2dBRUVvTmdJc0lBQkVBQUFBQUFBQThEODVBekFnQUVFS05nSTRJQUJCQVRZQ1BDQUFRVUJyUkFBQUFBQUFBRDVBT1FNQUlBQkJBVFlDU0NBQVFUSTJBbEFnQUVFQk5nSlVJQUJCRkRZQ1dDQUFRUUUyQWx3Z0FFRUtOZ0pnSUFCQkFUWUNaQ0FBUVFBNkFFd2dBRUVDTmdKb0lBQkVBQUFBQUFBQThEODVBM0FnQUVRQUFBQUFBQUR3UHprRGVDQUFRUUkyQW9BQklBQkJBallDaEFFZ0FFUjdGSzVINFhxRVB6a0RpQUVnQUVFZU5nS1FBU0FBUkpxWm1abVptYWsvT1FPWUFTQUFRUUE2QUtBQklBQkVya2ZoZWhTdTd6ODVBNmdCSUFCQkFqWUNzQUVnQUVFQk9nQzBBU0FBUkFBQUFBQUFBUEEvT1FPNEFTQUFRUlEyQXNBQklBQkVtcG1abVptWnlUODVBOGdCSUFCQkFUb0EwQUVnQUVRQUFBQUFBQUFBUURrRDJBRWdBRVI3Rks1SDRYcUVQemtENEFFZ0FFRUNOZ0xvQVNBQVFRRTJBdXdCSUFCQkFEWUM4QUVnQUVFWk5nTDBBU0FBUVFRMkF2Z0JDNUFCQVFKL0lBQkJBRFlDRENBQUlBRTJBaEFnQVVFQVNBUkFJQUJCQURZQ0NDQUFRUUEyQWdBZ0FFRUFOZ0lFSUFBUTlnRVBDeUFBSUFGQkFXb2lBMEdZQVd3UVNpSUJOZ0lFSUFGRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnSkJBRFlDQUNBQ1FYODJBZ1FnQWtHb09FRUFFQUVMSUFBZ0FUWUNBQ0FBSUFOQm1BRnNJQUZxTmdJSUlBQVE5Z0VMdGdFQkFuOGdBRUVBTmdJTUlBQWdBVFlDRUNBQlFRQklCRUFnQUVFQU5nSUlJQUJCQURZQ0FDQUFRUUEyQWdRUEN5QUFJQUZCQVdvaUEwRVliQkJLSWdFMkFnUWdBVVVFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQWtFQU5nSUFJQUpCZnpZQ0JDQUNRYWc0UVFBUUFRc2dBQ0FCTmdJQUlBQWdBMEVZYkNBQmFpSUNOZ0lJSUFJZ0FVMEVRQThMQTBBZ0FVSUFOd01BSUFGQ0FEY0RDQ0FCUVFBN0FSQWdBVUVZYWlJQklBQW9BZ2hKRFFBTEMrZ0JBUVIvSUFFZ0FDZ0NIRUVCYWlBQUtBSVlheUlCYXlJQ1JRUkFEd3NnQUVFTWFpQUNFTjRISUFBb0FoQWdBVUVFZEdvaUFTQUFLQUlVSWdKUEJFQVBDd05BSUFGQjVPQUFOZ0lBSUFFaUJFRUFOZ0lFSUFFaUEwRUFOZ0lJSUFBb0FpUWlBUVJBQTBCQkdCQkpJUUlnQXlnQ0NDRUZJQUpCQURZQ0FDQUNJQVUyQWdRZ0FpQUJLd01JT1FNSUlBSWdBU3NERURrREVDQUVLQUlFQkVBZ0JTQUNOZ0lBQlNBRUlBSTJBZ1FMSUFNZ0FqWUNDQ0FCS0FJQUlnRU5BQXNnQUNnQ0ZDRUNDeUFESUFBb0FpdzJBZ3dnQTBINDRBQTJBZ0FnQTBFUWFpSUJJQUpKRFFBTEMvZ0JBUVYvSUFBb0FoQWlBeUFCUVFGcWFpQUFLQUlNSWdWcklRUWdBQ2dDQkNJR1JRUkFJQUFnQkVFWWJCQktJZ0kyQWdRZ0FnUkFJQUJCQUNBRmEwRVliQ0FDYWpZQ0FDQUFJQVJCR0d3Z0FtbzJBZ2dnQUNBQklBTnFOZ0lRRHdWQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdKQkFEWUNBQ0FDUVg4MkFnUWdBa0dvT0VFQUVBRUxDeUFHSUFSQkdHd1FpZ0VpQWtVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUEwRUFOZ0lBSUFOQmZ6WUNCQ0FEUWFnNFFRQVFBUXNnQUNBQ05nSUVJQUFvQWhBaEF5QUFRUUFnQUNnQ0RHdEJHR3dnQW1vMkFnQWdBQ0FFUVJoc0lBSnFOZ0lJSUFBZ0FTQURhallDRUF2R0FRRUNmeUFBS0FJRUVFTWdBRUVBTmdJTUlBQWdBVFlDRUNBQlFRQklCRUFnQUVFQU5nSUlJQUJCQURZQ0FDQUFRUUEyQWdRUEN5QUFJQUZCQVdvaUJFRVliQkJLSWdFMkFnUWdBVVVFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQTBFQU5nSUFJQU5CZnpZQ0JDQURRYWc0UVFBUUFRc2dBQ0FCTmdJQUlBQWdCRUVZYkNBQmFpSUROZ0lJSUFNZ0FVMEVRQThMQTBBZ0FTQUNLUU1BTndNQUlBRWdBaWtEQ0RjRENDQUJJQUlwQXhBM0F4QWdBVUVZYWlJQklBQW9BZ2hKRFFBTEN4UUFJQUJCREdvZ0FVRi9haUFBUVNCcUVKUUlDMjhCQVg4Z0FTQUFLQUljUVFGcUlBQW9BaGhySWdGcklnSkZCRUFQQ3lBQVFReHFJQUlRa3dnZ0FDZ0NFQ0FCUVJoc2FpSUJJQUFvQWhSUEJFQVBDd05BSUFFZ0FDa0RJRGNEQUNBQklBQXBBeWczQXdnZ0FTQUFLUU13TndNUUlBRkJHR29pQVNBQUtBSVVTUTBBQ3d0dkFRTi9Jd1FoQVNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FVRUVhaUVDSUFCQmtPQUFOZ0lBSUFBb0FnZ2lBd1JBSUFFZ0FDZ0NCRFlDQUNBQ0lBRW9BZ0EyQWdBZ0F5QUNFRmNMSUFBb0FoQVFReUFBUVlDMUFpZ0NBRFlDQUVHQXRRSWdBRFlDQUNBQkpBUUxJd0FnQVNnQ0FDSUJLQUlJS0FJUUlRQWdBU2dDRENnQ0VDSUJJQUFnQUNBQlNCc0xJUUFnQVNnQ0FDSUFLQUlJS0FJUUlnRWdBQ2dDRENnQ0VDSUFJQUVnQUVnYkMxd0JBWDhnQUVIbzZRQTJBZ0FnQUNnQ0JDSUJSUVJBSUFCQjRMTUNLQUlBTmdJQVFlQ3pBaUFBTmdJQUR3dEJJQ0FCSUFBb0FnZ1FTQ0FBUVFBMkFnZ2dBRUVBTmdJRUlBQkI0TE1DS0FJQU5nSUFRZUN6QWlBQU5nSUFDMXdCQVg4Z0FFSG82UUEyQWdBZ0FDZ0NCQ0lCUlFSQUlBQkIwTE1DS0FJQU5nSUFRZEN6QWlBQU5nSUFEd3RCSUNBQklBQW9BZ2dRU0NBQVFRQTJBZ2dnQUVFQU5nSUVJQUJCMExNQ0tBSUFOZ0lBUWRDekFpQUFOZ0lBQy9rQkFRTi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFSEk0QUEyQWdBZ0FFSGs0QUEyQWlBZ0FDZ0NKQ0lCQkVCQkdDQUJJQUFvQWlnUVNDQUFRUUEyQWlnZ0FFRUFOZ0lrQ3lBQ1FRUnFJUUVnQUVHUTRBQTJBZ0FnQUNnQ0NDSURCRUFnQWlBQUtBSUVOZ0lBSUFFZ0FpZ0NBRFlDQUNBRElBRVFWd3NnQUNnQ0VDSUJJQUFvQWhSUEJFQWdBUkJESUFCQjRMUUNLQUlBTmdJQVFlQzBBaUFBTmdJQUlBSWtCQThMQTBBZ0FTQUJLQUlBS0FJQVFmOERjVUdFQTJvUkFRQWdBVUVRYWlJQklBQW9BaFJKRFFBTElBQW9BaEFRUXlBQVFlQzBBaWdDQURZQ0FFSGd0QUlnQURZQ0FDQUNKQVFMTWdFQmZ5QUFRZWpwQURZQ0FDQUFLQUlFSWdGRkJFQVBDMEVnSUFFZ0FDZ0NDQkJJSUFCQkFEWUNDQ0FBUVFBMkFnUUwyZ2dCRFg4akJDRUpJd1JCNEFCcUpBUWpCQ01GVGdSQVFlQUFFQUFMSUFsQnpBQnFJZzFCck9rQU5nSUFJQWxCeUFCcUlnaEJ3T2tBTmdJQUlBbENBRGNEQUNBSlFRQTJBZ2dnQ1VFNGFpSUhRUUEyQWdRZ0IwRUFOZ0lJSUFkQjFPa0FOZ0lBSUFkQkFEWUNEQ0FDS0FJUUlRVWdDVUVRYWlJR1FRQTJBaGdnQmlBRlFYOXFOZ0ljSUFWQkFVZ0VRQ0FHUVFBMkFoUWdCa0VBTmdJTUlBWkJBRFlDRUFVZ0JpQUZRUUowRUVvaUNqWUNFQ0FLQkVBZ0JpQUtOZ0lNSUFZZ0JVRUNkQ0FLYWpZQ0ZBVkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnVkJBRFlDQUNBRlFYODJBZ1FnQlVHb09FRUFFQUVMQ3lBR1FaRGdBRFlDQUNBR1FRQTJBZ1FnQmlBQ05nSUlJQVlnQWlBR0VHdzJBZ1FnQmtIZzRnQTJBZ0FnQUNnQ2dBRWlCUVJBQTBBZ0FTZ0NEQ0FGS0FJWVFSaHNhaWdDRENJQUJFQWdCaWdDRENBQUtBSVlRUUowYWlBRk5nSUFDeUFGS0FJQUlnVU5BQXNMSUFJb0FvQUJJZ1VFUUFOQUlBY2dCeWdDREVFQmFqWUNERUVnRUVraEFDQUhLQUlJSVFvZ0FFRUFOZ0lBSUFBZ0NqWUNCQ0FBSUFVMkFnZ2dBQ0FDTmdJTUlBQWdDU2tEQURjREVDQUFJQWtwQXdnM0F4Z2dCeWdDQkFSQUlBY29BZ2dnQURZQ0FBVWdCeUFBTmdJRUN5QUhJQUEyQWdnZ0JTZ0NBQ0lGRFFBTEN5QUhJQUlvQW5CQmYyb2dEUkQxQVNBSElBSW9BbkJCZjJvZ0NCRDFBU0FIS0FJRUlnOEVRQ0FEUVFScUlSQkJBU0VNUVFBaENrRUJJUTVCQUNFQVFRQWhCUU5BSUE4b0FnZ2lEU2dDQ0NnQ0VDRUlJQTBvQWd3b0FoQWhDeUFPQkVBZ0RTRUtJQWdoQUNBTElRVUZBa0FnQUNBSVJpQUZJQXRHY1VVRVFDQUZJQWhHSUFBZ0MwWnhSUVJBSUF4QkFVb0VRQ0FFS0FJTUlBb29BaGhCQTNScUlnQWdBQ3NEQUNBTXQ2TTVBd0JCQVNFTUN5QU5JUW9nQ0NFQUlBc2hCUXdDQ3dzZ0RFRUJSZ1JBSUFNZ0F5Z0NERUVCYWpZQ0RFRU1FRWtoQ0NBREtBSUlJUXNnQ0VFQU5nSUFJQWdnQ3pZQ0JDQUlJQW8yQWdnZ0N5QVFJQkFvQWdBYklBZzJBZ0FnQXlBSU5nSUlJQVlvQWd3aURpQU5LQUlZUVFKMGFpZ0NBQ2dDR0NFSUlBUW9BZ3dnQ2lnQ0dDSVJRUU4wYWlBQktBSU1JZ3NnRVVFQ2RDQU9haWdDQUNnQ0dFRVliR29yQXdBZ0NFRVliQ0FMYWlzREFLQTVBd0FGSUFRb0Fnd2dDaWdDR0VFRGRHb2lEaUFCS0FJTUlnc2dCaWdDRENBTktBSVlRUUowYWlnQ0FDZ0NHQ0lJUVJoc2Fpc0RBQ0FPS3dNQW9Ea0RBQXNnQ0VFWWJDQUxha0VBTmdJTUlBSWdEU0FDS0FJQUtBSU1RZjhCY1VHT0Iyb1JBQUFnREVFQmFpRU1Dd3NnRHlnQ0FDSVBCRUJCQUNFT0RBRUxDeUFNUVFGS0JFQWdCQ2dDRENBS0tBSVlRUU4wYWlJQUlBQXJBd0FnRExlak9RTUFDd3NnQ1VIVUFHb2hBQ0FHUVpEZ0FEWUNBQ0FHS0FJSUlnRUVRQ0FKSUFZb0FnUTJBbEFnQUNBSktBSlFOZ0lBSUFFZ0FCQlhDeUFHS0FJUUVFTWdCMEhvNlFBMkFnQWdCeWdDQkNJQVJRUkFJQWtrQkE4TFFTQWdBQ0FIS0FJSUVFZ2dCMEVBTmdJSUlBZEJBRFlDQkNBSkpBUUwzd0VCQTM4Z0FTZ0NFQ0VDSUFCQkFEWUNHQ0FBSUFKQmYybzJBaHdnQWtFQlNBUkFJQUJCQURZQ0ZDQUFRUUEyQWd3Z0FFRUFOZ0lRSUFCQmtPQUFOZ0lBSUFCQkFEWUNCQ0FBSUFFMkFnZ2dBQ0FCSUFBUWJEWUNCQ0FBUWNEbEFEWUNBQThMSUFBZ0FrRURkQkJLSWdNMkFoQWdBMFVFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQkVFQU5nSUFJQVJCZnpZQ0JDQUVRYWc0UVFBUUFRc2dBQ0FETmdJTUlBQWdBa0VEZENBRGFqWUNGQ0FBUVpEZ0FEWUNBQ0FBUVFBMkFnUWdBQ0FCTmdJSUlBQWdBU0FBRUd3MkFnUWdBRUhBNVFBMkFnQUwyZ0lDQm44RWZDQUJLQUp3SWdPM0VPOEJRYWpUQWlzREFLT2JxaUVFSUFBckE1Z0NJUWtnQTBFQlRnUkFJQU5CQW5RUVNpSUFCRUFnQUNJSElRWUZRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSUFRUUEyQWdBZ0FFRi9OZ0lFSUFCQnFEaEJBQkFCQ3dzZ0FTZ0NkQ0lBQkVCQkFDRUJBMEFnQVVFQmFpRUZJQUZCQW5RZ0Jtb2dBRFlDQUNBQUtBSUFJZ0FFUUNBRklRRU1BUXNMQ3lBRVFSOUdCRUFnQnhCRER3c2dBMEYvYWlFSUlBSW9BZ3doQXlBSlFRRWdCSFFpQkxjaUNxTkVBQUFBQUFBQTREK2lJUXRCQUNFQ1FRQWhBQ0FHS0FJQUlRRURRQUpBSUFzZ0NTQUN0NklnQ3FPZ0lReEJBQ0VGQTBBZ0FTZ0NFQ0lCUVpnQmJDQURhaUFNT1FNQUlBRkJtQUZzSUFOcUlBc2dDU0FGdDZJZ0NxT2dPUU1JSUFBZ0NFWU5BU0FBUVFGcUlnQkJBblFnQm1vb0FnQWhBU0FGUVFGcUlnVWdCRWdOQUFzZ0FrRUJhaUlDSUFSSURRRUxDeUFIRUVNTHRRSUNBMzhDZkNNRUlRTWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxBa0FDUUFKQUFrQWdBQ2dDYUE0REFBRUNBd3NnQXlRRUlBRWdBYUlnQWlBQ29pQUNvcU1QQ3lBQlJBQUFBQUFBQUFBQVlRUkFJQU1rQkVRQUFBQWdYNkFDd2c4TEFud2dBU0FDb3hBSVJBQUFBQUFBQUNSQW9pQUNveUVHSUFNa0JDQUdDdzhMSUFGRUFBQUFBQUFBQUFCa1JRUkFJQU1rQkVRQUFBQWdYNkFDd2c4TEFud2dBU0FDb3hBSUlBR2lJQUdpSUFJZ0FxSWdBcUtqSVFjZ0F5UUVJQWNMRHdzZ0EwSG85UUpCbGJVQlFSOFFZQ0lBSUFBb0FnQkJkR29vQWdCcUtBSWNJZ1EyQWdBZ0JDQUVLQUlFUVFGcU5nSUVJQU5CcVBzQ0VGTWlCQ2dDQUNnQ0hDRUZJQVJCQ2lBRlFUOXhRWW9CYWhFREFDRUVJQU1RVkNBQUlBUVFwQUVnQUJCRklBTWtCRVFBQUFBQUFBQUFBQXV4QlFJRGZ3WjhJQU5CQVV3RVFDQURRUUZIQkVBUEN5QUFLQUowSWdCRkJFQVBDeUFCS0FJTUlnTWdBaWdDRENJQ1JnUkFBMEFnQUNnQ0FDSUFEUUFMQlFOQUlBQW9BaEFpQVVFRWRDQUNhaUFCUVFSMElBTnFLd01BT1FNQUlBRkJCSFFnQW1vZ0FVRUVkQ0FEYWlzRENEa0RDQ0FBS0FJQUlnQU5BQXNMRHdzZ0FDZ0NkQ0lBUlFSQUR3c2dBU2dDRENJQklBSW9BZ3dpQTBZRVFBTkFJQUFvQWhBaUFrRUVkQ0FCYWlJREt3TUFJZ2dnQ0tJZ0FrRUVkQ0FCYWlJQ0t3TUlJZ2tnQ2FLZ255SUhSQUFBQUFBQUFBQUFaQVJBSUFjZ0NFUUFBQUFBQUFBQUFHRWdDVVFBQUFBQUFBQUFBR0Z4Qkh4RUFBQUFBQUFBQUFBRklBa2dDQkNMQVNJS0lBcWhJZ3BFR0MxRVZQc2hHVUNnSUFvZ0NrUUFBQUFBQUFBQUFHTWJDMFI5YW9vNlVzSGdQNk9icWtFRGRFSEFDMm9yQXdDaUlBZWpJZ2RFQUFBQUFBQUE4RDlqQkVBZ0F5QUlJQWVpT1FNQUlBSWdDU0FIb2prRENBc0xJQUFvQWdBaUFBMEFDdzhMQTBBZ0FDZ0NFQ0lDUVFSMElBRnFJZ1FyQXdBaUNDQUlvaUFDUVFSMElBRnFJZ1VyQXdnaUNTQUpvcUNmSWd0RUFBQUFBQUFBQUFCa0lBSkJCSFFnQTJvaUJpc0RBQ0lISUFlaUlBSkJCSFFnQTJvaUFpc0RDQ0lLSUFxaW9KOGlERVFBQUFBQUFBQUFBR1J4QkVBZ0RDQUhSQUFBQUFBQUFBQUFZU0FLUkFBQUFBQUFBQUFBWVhFRWZFUUFBQUFBQUFBQUFBVWdDRVFBQUFBQUFBQUFBR0VnQ1VRQUFBQUFBQUFBQUdGeEJIeEVBQUFBQUFBQUFBQUZJQWtnQ0JDTEFTQUtJQWNRaXdHaElnZEVHQzFFVlBzaEdVQ2dJQWNnQjBRQUFBQUFBQUFBQUdNYkN3dEVmV3FLT2xMQjREK2ptNnBCQTNSQndBdHFLd01Bb2lBTG95SUhSQUFBQUFBQUFQQS9Zd1JBSUFRZ0NDQUhvaUlJT1FNQUlBVWdDU0FIb2lJSk9RTUlDd3NnQmlBSU9RTUFJQUlnQ1RrRENDQUFLQUlBSWdBTkFBc0x6UVlDQW44SWZDTUVJUWNqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMQW53Q1FBSkFBa0FDUUNBQUxBQ2dBUVJBQWtBQ1FBSkFJQVlPQXdFQUJBVUxJQUJCaUFKcUlnWXJBd0FoQ1F3QkN5QUFLd09vQVNFSklBVkJBVVlFUUNBQUlBazVBNGdDQlNBQUlBa2dBQ3NEaUFLaU9RT0lBZ3NNQkFzRklBQkJpQUpxSWdoRUFBQUFBQUFBOEQ4NUF3QUNRQ0FHUVFGckRnSUFBZ01MUkFBQUFBQUFBUEEvSVFrZ0NDRUdDeUFHSUFsRUFBQUFBQUFBSkVDak9RTUFEQUlMSUFBZ0FDc0R5QUVpQ1VRQUFBQUFBQUFrUUtNZ0NTQUFLQUxBQVVGN2FpQUZTQnM1QTRnQ0RBSUxJQVpCQWs0TkFRc2dBQ3NEY0NFTklBQXJBM2dNQVFzZ0FDc0QyQUVoRFNBQUxBRFFBUVI4UkFBQUFBQUFBSGxBSUFFb0FuQzNveUlKUkpxWm1abVptY2svSUFsRW1wbVptWm1aeVQ5akd3VWdBQ3NENEFFTEN5RVBJQUVvQW5RaUFVVUVRQ0FISkFRUEN5QUhJUVpFQUFBQUFBQkFqMEJFQUFBQUFBQUFGRUFnQlVFQlJoc2hFQU5BSUEwZ0FpZ0NEQ0lISUFFb0FoQWlCVUVFZEdvckF3Q2lJQThnQXlnQ0RDSUlJQVZCQkhScUt3TUFvcUFnQUNzRGtBSWlDU0FKb2lJS29pSUpJQW1pSUFvZ0RTQUZRUVIwSUFkcUt3TUlvaUFQSUFWQkJIUWdDR29yQXdpaW9LSWlDaUFLb3FDZklRc2dCa0lBTndNQUlBWkNBRGNEQ0NBSlFhRFRBaXNEQUNJTVJBQUFBQUFBQUFBQW9DSU9ZMFVnQ1VRQUFBQUFBQUFBQUNBTW9TSU1aRVZ5SUFvZ0RtTkZJQW9nREdSRmNuSUVRQUpBSUFzZ0JoREVBMFVFUUNBR0lBa2dBQ3NEbUFJZ0VLTWlDU0FMSUFBckE0Z0NvaUFBS3dPWUFhSWlEQ0FKSUF4akd5QUxveUlMb2lJSk9RTUFJQVlnQ2lBTG9pSUtPUU1JREFFTElBQXJBNmdDSWdrZ0FDc0RtQUlpRHFBaEN5QUFLd093QWlFS0FrQUNRQ0FHS3dNQUlnd2dDV01OQUNBTUlBdGtCSHdnQ3lFSkRBRUZJQXdMSVFrTUFRc2dCaUFKT1FNQUN5QUdLd01JSWdzZ0NtTUVRQ0FHSUFvNUF3Z01BUXNnQ3lBT0lBcWdJZ3BrQkVBZ0JpQUtPUU1JQlNBTElRb0xDd1VnQmtJQU53TUFJQVpDQURjRENFUUFBQUFBQUFBQUFDRUpSQUFBQUFBQUFBQUFJUW9MSUFZZ0JDZ0NEQ0lISUFFb0FoQWlCVUVFZEdvaUNFY0VRQ0FJSUFrNUF3QWdCVUVFZENBSGFpQUtPUU1JQ3lBQktBSUFJZ0VOQUFzZ0JpUUVDLzREQWdaL0JYd2pCQ0VGSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBRlFnQTNBd0FnQlVJQU53TUlJQUVvQW5RaUJnUkFJQVFvQWd3aEJ3TkFJQVlvQWhCQkJIUWdCMm9pQ0VJQU53TUFJQWhDQURjRENDQUdLQUlBSWdZTkFBc0xJQUVvQW9BQklnRkZCRUFnQlNRRUR3c0RRQ0FDS0FJTUlnWWdBU2dDRENJSEtBSVFJZ2hCbUFGc2Fpc0RBQ0FCS0FJSUlna29BaEFpQ2tHWUFXd2dCbW9yQXdDaElnc2dDNklnQ0VHWUFXd2dCbW9yQXdnZ0NrR1lBV3dnQm1vckF3aWhJZ3dnREtLZ255RU5JQXRCb05NQ0t3TUFJZzVFQUFBQUFBQUFBQUNnSWc5alJTQUxSQUFBQUFBQUFBQUFJQTZoSWc1a1JYSWdEQ0FQWTBVZ0RDQU9aRVZ5Y2dSQUlBMGdCUkRFQXdSQUlBVXJBd0FoQ3lBRkt3TUlJUXdGSUFVZ0N5QUFJQTBnQXlnQ0RDQUJLQUlZUVJoc2Fpc0RBQkNoQ0NBTm95SU5vaUlMT1FNQUlBVWdEQ0FOb2lJTU9RTUlDd1VnQlVJQU53TUFJQVZDQURjRENFUUFBQUFBQUFBQUFDRUxSQUFBQUFBQUFBQUFJUXdMSUFRb0Fnd2lCaUFIS0FJUUlnaEJCSFJxSVFjZ0NFRUVkQ0FHYWlJSUt3TUlJQXloSVF3Z0J5QUhLd01BSUF1aE9RTUFJQWdnRERrRENDQUpLQUlRSWdoQkJIUWdCbW9oQnlBSVFRUjBJQVpxSWdZckF3Z2dCU3NEQ0tBaEN5QUhJQWNyQXdBZ0JTc0RBS0E1QXdBZ0JpQUxPUU1JSUFFb0FnQWlBUTBBQ3lBRkpBUUxpUWNDQlg4Q2ZDQUFJQUVnQWlBRElBUWdCU0FHSUFkQkFVRUJFSWNCSUFBZ0FTQUNJQU1nQkNBRklBWWdCMEVDUVFFUWh3RWdBQ0FCSUFJZ0F5QUVJQVVnQmlBSFFRTkJBUkNIQVNBQUlBRWdBaUFESUFRZ0JTQUdJQWRCQkVFQkVJY0JJQUFnQVNBQ0lBTWdCQ0FGSUFZZ0IwRUZRUUVRaHdFZ0FDQUJJQUlnQXlBRUlBVWdCaUFIUVFaQkFSQ0hBU0FBSUFFZ0FpQURJQVFnQlNBR0lBZEJCMEVCRUljQklBQWdBU0FDSUFNZ0JDQUZJQVlnQjBFSVFRRVFod0VnQUNBQklBSWdBeUFFSUFVZ0JpQUhRUWxCQVJDSEFTQUFJQUVnQWlBRElBUWdCU0FHSUFkQkNrRUJFSWNCSUFBc0FMUUJCRUFnQVNnQ2dBRWlDQVJBSUFNb0Fnd2hDeUFDS0FJTUlRa0RRQ0FPSUFnb0FoaEJHR3dnQzJvckF3Q2dJUTRnRFNBSUtBSUlLQUlRSWdwQm1BRnNJQWxxS3dNQUlBZ29BZ3dvQWhBaURFR1lBV3dnQ1dvckF3Q2hJZzBnRGFJZ0NrR1lBV3dnQ1dvckF3Z2dERUdZQVd3Z0NXb3JBd2loSWcwZ0RhS2duNkFoRFNBSUtBSUFJZ2dOQUFzTElBRW9BblFpQ0FSQVJBQUFBQUFBQVBBL0lBNGdEYU1nRFVRQUFBQUFBQUFBQUdFYklBQXJBN2dCb2lFT0lBSW9BZ3doQ1FOQUlBZ29BaEFpQ2tHWUFXd2dDV29oQ3lBT0lBcEJtQUZzSUFscUlnb3JBd2lpSVEwZ0N5QU9JQXNyQXdDaU9RTUFJQW9nRFRrRENDQUlLQUlBSWdnTkFBc0xJQUFnQVNBQ0VOZ0JDeUFBS0FMQUFVRUJUZ1JBUVFFaENBTkFJQUFnQVNBQ0lBTWdCQ0FGSUFZZ0J5QUlRUUlRaHdFZ0NFRUJhaUVKSUFnZ0FDZ0N3QUZJQkVBZ0NTRUlEQUVMQ3dzZ0FDd0F0QUZGQkVBUEN5QUJLQUtBQVNJRUJFQWdBeWdDRENFR0lBSW9BZ3doQlNBRUlRTkVBQUFBQUFBQUFBQWhEa1FBQUFBQUFBQUFBQ0VOQTBBZ0RpQURLQUlZUVJoc0lBWnFLd01Bb0NFT0lBMGdBeWdDQ0NnQ0VDSUVRWmdCYkNBRmFpc0RBQ0FES0FJTUtBSVFJZ2RCbUFGc0lBVnFLd01Bb1NJTklBMmlJQVJCbUFGc0lBVnFLd01JSUFkQm1BRnNJQVZxS3dNSW9TSU5JQTJpb0orZ0lRMGdBeWdDQUNJRERRQUxCVVFBQUFBQUFBQUFBQ0VPUkFBQUFBQUFBQUFBSVEwTElBRW9BblFpQVVVRVFBOExSQUFBQUFBQUFQQS9JQTRnRGFNZ0RVUUFBQUFBQUFBQUFHRWJJQUFyQTdnQm9pRU9JQUlvQWd3aEFpQUJJUUFEUUNBQUtBSVFJZ05CbUFGc0lBSnFJUUVnRGlBRFFaZ0JiQ0FDYWlJREt3TUlvaUVOSUFFZ0RpQUJLd01Bb2prREFDQURJQTA1QXdnZ0FDZ0NBQ0lBRFFBTEMvMEJBZ04vQVh3akJDRUNJd1JCTUdva0JDTUVJd1ZPQkVCQk1CQUFDeUFDUVNCcUlRTWdBa0VRYWlFRUFrQUNRQUpBQWtBZ0FDZ0NnQUVPQXdBQkFnTUxJQUFyQTVnQ0lRVWdBeUFBS3dPb0Fqa0RBQ0FESUFBckE3QUNPUU1JSUFCQjZBSnFJQVVnQXlBQUtBTG9BUkNxQWlBQ0pBUVBDeUFBS3dPWUFpRUZJQVFnQUNzRHFBSTVBd0FnQkNBQUt3T3dBamtEQ0NBQVFlZ0NhaUFGSUFRZ0FDZ0M2QUVRcWdJZ0FpUUVEd3NnQUNzRG1BSWhCU0FDSUFBckE2Z0NPUU1BSUFJZ0FDc0RzQUk1QXdnZ0FFR0lBMm9nQVNBRklBSWdBQ2dDOUFFZ0FDZ0MrQUVnQUNnQzdBRWdBQ2dDOEFFUXJnY2dBaVFFRHdzZ0FpUUVDODRPQWdsL0Ezd2pCQ0VMSXdSQjBBRnFKQVFqQkNNRlRnUkFRZEFCRUFBTElBRW9BbkFpRGtFQlRBUkFJQXNrQkE4TElBdEJrQUZxSVFnQ2Z3SkFBa0FDUUFKQUlBQW9BbHdPQXdBQkFnTUxJQUFvQXBBQkRBTUxJQVVFUUNBQUtBS1FBU0lHSUFTM0lBVzNveUFBS0FKZ1FYOXF0NklnQnJlaXFtb01Bd1VnQUNnQ1lDQUFLQUtRQVd3TUF3c0FDd0pBQWtBQ1FBSkFJQVVnQkdzT0F3QUJBZ01MSUFBb0FwQUJJQUFvQW1Cc0RBUUxJQUFvQXBBQklnVWdBQ2dDWUVGL2FyZEVBQUFBQUFBQTREK2lJQVczb3FwcURBTUxJQUFvQXBBQklnVWdBQ2dDWUVGL2FyZEVBQUFBQUFBQTBEK2lJQVczb3FwcURBSUxJQUFvQXBBQkRBRUxRUUFMSVEwQ2ZDQUFLd09JQVNFUklBRW9BZ3doQmlBSVFRQTJBaGdnQ0NBR1FYOXFOZ0ljSUFaQkFVZ0VRQ0FJUVFBMkFoUWdDRUVBTmdJTUlBaEJBRFlDRUFVZ0NDQUdRUVIwRUVvaUJ6WUNFQ0FIUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRlFRQTJBZ0FnQlVGL05nSUVJQVZCcURoQkFCQUJDeUFJSUFjMkFnd2dDQ0FHUVFSMElBZHFJZ1kyQWhRZ0IwRVFhaUVGSUFZZ0Iwc0VRQ0FIUVFBZ0IwRi9jeUFHSUFVZ0JpQUZTeHRxUVJCcVFYQnhFR0lhQ3dzZ0NFR000UUEyQWdBZ0NFRUFOZ0lFSUFnZ0FUWUNDQ0FJSUFFZ0NCQlpOZ0lFSUFoQmtPa0FOZ0lBSUFoQ0FEY0RJQ0FJUWdBM0F5Z2dBU2dDRENFR0lBdEI0QUJxSWdwQkFEWUNHQ0FLSUFaQmYybzJBaHdnQmtFQlNBUkFJQXBCQURZQ0ZDQUtRUUEyQWd3Z0NrRUFOZ0lRQlNBS0lBWkJCSFFRU2lJSE5nSVFJQWRGQkVCQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdWQkFEWUNBQ0FGUVg4MkFnUWdCVUdvT0VFQUVBRUxJQW9nQnpZQ0RDQUtJQVpCQkhRZ0Iyb2lCallDRkNBSFFSQnFJUVVnQmlBSFN3UkFJQWRCQUNBSFFYOXpJQVlnQlNBR0lBVkxHMnBCRUdwQmNIRVFZaG9MQ3lBS1FZemhBRFlDQUNBS1FRQTJBZ1FnQ2lBQk5nSUlJQW9nQVNBS0VGazJBZ1FnQ2tHUTZRQTJBZ0FnQ2tJQU53TWdJQXBDQURjREtDQUJLQUlNSVFZZ0MwRXdhaUlKUVFBMkFoZ2dDU0FHUVg5cU5nSWNJQVpCQVVnRVFDQUpRUUEyQWhRZ0NVRUFOZ0lNSUFsQkFEWUNFQVVnQ1NBR1FRUjBFRW9pQnpZQ0VDQUhSUVJBUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlGUVFBMkFnQWdCVUYvTmdJRUlBVkJxRGhCQUJBQkN5QUpJQWMyQWd3Z0NTQUdRUVIwSUFkcUlnWTJBaFFnQjBFUWFpRUZJQVlnQjBzRVFDQUhRUUFnQjBGL2N5QUdJQVVnQmlBRlN4dHFRUkJxUVhCeEVHSWFDd3NnQ1VHTTRRQTJBZ0FnQ1VFQU5nSUVJQWtnQVRZQ0NDQUpJQUVnQ1JCWk5nSUVJQWxCa09rQU5nSUFJQWxDQURjRElDQUpRZ0EzQXlnZ0FTZ0NEQ0VISUFzaUJrRUFOZ0lZSUFZZ0IwRi9hallDSENBSFFRRklCRUFnQmtFQU5nSVVJQVpCQURZQ0RDQUdRUUEyQWhBRklBWWdCMEVFZEJCS0lndzJBaEFnREVVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUJVRUFOZ0lBSUFWQmZ6WUNCQ0FGUWFnNFFRQVFBUXNnQmlBTU5nSU1JQVlnQjBFRWRDQU1haUlMTmdJVUlBeEJFR29oQlNBTElBeExCRUFnREVFQUlBeEJmM01nQ3lBRklBc2dCVXNiYWtFUWFrRndjUkJpR2dzTElBWkJqT0VBTmdJQUlBWkJBRFlDQkNBR0lBRTJBZ2dnQmlBQklBWVFXVFlDQkNBR1FaRHBBRFlDQUNBR1FnQTNBeUFnQmtJQU53TW9RZVFBSUEwZ0RrSDFBMGdnRFVIa0FFaHhHeUVNSUFBZ0FTZ0NmQ0lIUVFCS0JId2dBU2dDZ0FFaUJRUkFJQU1vQWd3aEN3TkFJQThnQlNnQ0dFRVliQ0FMYWlzREFLQWhEeUFGS0FJQUlnVU5BQXNMSUE4Z0I3ZWpCVVFBQUFBQUFBQkpRQXM1QTVBQ0lBQWdBUkNtQ0NBQUtBS0VBU0VMSUJFTFJBQUFBQUFBQVBBL29DRVBRUUVoRFFOQUFrQUNRQUpBQWtBQ1FDQUxEZ01BQVFJRUN5QU5JQXhLRFFNTUFnc2dEVUdSemdCSklBQXJBNGdCSUE5bGNVVU5BZ3dCQ3lBTklBeEtEUUVnQUNzRGlBRWdEMlZGRFFFTElBQWdBU0FDSUFNZ0NTQUtJQWdnQmlBTlFRQVFod0VnQUNnQ2hBRWlDd1JBSUFFb0FuUWlCUVJBSUFrb0Fnd2hEa1FBQUFBQUFBQUFBQ0VQQTBBZ0R5QUZLQUlRSWdkQkJIUWdEbW9yQXdBaUR5QVBvaUFIUVFSMElBNXFLd01JSWc4Z0Q2S2duNkFoRHlBRktBSUFJZ1VOQUFzRlJBQUFBQUFBQUFBQUlROExJQThnQVNnQ2NMZWpJUThMSUExQkFXb2hEUXdCQ3dzZ0JFVUVRQ0FBSUFFZ0FpQURJQWtnQ2lBSUlBWVFwUWdMSUFBb0FvQUJRUUpHQkVBZ0FFR0lBMm9RckFjTElBWkJ4QUZxSVFFZ0JrR000UUEyQWdBZ0JpZ0NDQ0lBQkVBZ0JpQUdLQUlFTmdMQUFTQUJJQVlvQXNBQk5nSUFJQUFnQVJCTkN5QUdLQUlRRUVNZ0NVR000UUEyQWdBZ0NTZ0NDQ0lBQkVBZ0JpQUpLQUlFTmdMQUFTQUJJQVlvQXNBQk5nSUFJQUFnQVJCTkN5QUpLQUlRRUVNZ0NrR000UUEyQWdBZ0NpZ0NDQ0lBQkVBZ0JpQUtLQUlFTmdMQUFTQUJJQVlvQXNBQk5nSUFJQUFnQVJCTkN5QUtLQUlRRUVNZ0NFR000UUEyQWdBZ0NDZ0NDQ0lBQkVBZ0JpQUlLQUlFTmdMQUFTQUJJQVlvQXNBQk5nSUFJQUFnQVJCTkN5QUlLQUlRRUVNZ0JpUUVDNG9FQWdOL0Fud2dBU2dDZENJREJFQWdBaWdDRENFRUEwQWdCMFFBQUFBQUFBQWtRQ0FES0FJUUlnVkJtQUZzSUFScUt3TVFJZ2NnQjBRQUFBQUFBQUFrUUdNYm9DRUhJQVpFQUFBQUFBQUFKRUFnQlVHWUFXd2dCR29yQXhnaUJpQUdSQUFBQUFBQUFDUkFZeHVnSVFZZ0F5Z0NBQ0lERFFBTEN5QUFJQVlnQnlBSElBWmpHMFNhbVptWm1abnhQNktiT1FPWUFpQUFRZ0EzQTZnQ0lBQkNBRGNEc0FJQ1FBSkFBa0FDUUNBQUtBS3dBUTREQVFJQUF3c2dBQ2dDSUJEM0FTQUJLQUowSWdNRVFBTkFRUUJCZ0pUcjNBTVFZYmRFQUFBQUFHWE56VUdqSVFaQkFFR0FsT3ZjQXhCaHQwUUFBQUFBWmMzTlFhTWhCeUFDS0FJTUlnVWdBeWdDRUNJRVFaZ0JiR29nQmlBQUt3T1lBa1FBQUFBQUFBQUF3S0FpQnFKRUFBQUFBQUFBOEQrZ09RTUFJQVJCbUFGc0lBVnFJQWNnQnFKRUFBQUFBQUFBOEQrZ09RTUlJQU1vQWdBaUF3MEFDd3NNQWdzZ0FDQUJJQUlRb0FnTUFRdEJBQkFXRVBjQklBRW9BblFpQXdSQUEwQkJBRUdBbE92Y0F4Qmh0MFFBQUFBQVpjM05RYU1oQmtFQVFZQ1U2OXdERUdHM1JBQUFBQUJsemMxQm95RUhJQUlvQWd3aUJTQURLQUlRSWdSQm1BRnNhaUFHSUFBckE1Z0NSQUFBQUFBQUFBREFvQ0lHb2tRQUFBQUFBQUR3UDZBNUF3QWdCRUdZQVd3Z0JXb2dCeUFHb2tRQUFBQUFBQUR3UDZBNUF3Z2dBeWdDQUNJRERRQUxDd3NnQUNBQklBSVEyQUVMWFFFQmZ5QUFRZnpvQURZQ0FDQUFLQUlFSWdGRkJFQWdBRUhnc3dJb0FnQTJBZ0JCNExNQ0lBQTJBZ0FQQzBIQUFDQUJJQUFvQWdnUVNDQUFRUUEyQWdnZ0FFRUFOZ0lFSUFCQjRMTUNLQUlBTmdJQVFlQ3pBaUFBTmdJQUMxMEJBWDhnQUVIODZBQTJBZ0FnQUNnQ0JDSUJSUVJBSUFCQjBMTUNLQUlBTmdJQVFkQ3pBaUFBTmdJQUR3dEJ3QUFnQVNBQUtBSUlFRWdnQUVFQU5nSUlJQUJCQURZQ0JDQUFRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FEWUNBQXZXQVFFQ2Z5QUFLQUlFSWdNZ0FDZ0NDQ0lFU1FSL0EwQWdBeXdBQzBFQVNBUkFJQU1vQWdBUVF5QUFLQUlJSVFRTElBTkJER29pQXlBRVNRMEFDeUFBS0FJRUJTQURDeEJESUFCQkFEWUNEQ0FBSUFFMkFoQWdBVUVBU0FSQUlBQkJBRFlDQ0NBQVFRQTJBZ0FnQUVFQU5nSUVJQUFnQWhEaEF3OExJQUFnQVVFQmFpSUVRUXhzRUVvaUFUWUNCQ0FCUlFSQVFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRFFRQTJBZ0FnQTBGL05nSUVJQU5CcURoQkFCQUJDeUFBSUFFMkFnQWdBQ0FFUVF4c0lBRnFOZ0lJSUFBZ0FoRGhBd3NuQVFKL0l3UWhBaUFBSXdScUpBUWpCRUVQYWtGd2NTUUVJd1FqQlU0RVFDQUFFQUFMSUFJTE13RUJmeUFBUWZ6b0FEWUNBQ0FBS0FJRUlnRkZCRUFQQzBIQUFDQUJJQUFvQWdnUVNDQUFRUUEyQWdnZ0FFRUFOZ0lFQzhjQ0FRWi9JQUFvQWdRaEJTQUJJQUFvQWhBaUJFRUJhaUFBS0FJTUlnZHJJZ0pxSWdaQkJIUVFTaUVESUFWRkJFQWdBQ0FETmdJRUlBTUVRQ0FBUVFBZ0IydEJCSFFnQTJvMkFnQWdBQ0FHUVFSMElBTnFOZ0lJSUFBZ0FTQUVhallDRUE4RlFjRDBBaEJGUWNEMEFoQkZRUWdRQWlJRVFRQTJBZ0FnQkVGL05nSUVJQVJCcURoQkFCQUJDd3NnQTBVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUJFRUFOZ0lBSUFSQmZ6WUNCQ0FFUWFnNFFRQVFBUXNnQmlBQ0lBWWdBa2diSWdSQkFFb0VRRUVBSVFJRFFDQUNRUVIwSUFOcUlBSkJCSFFnQldvckF3QTVBd0FnQWtFRWRDQURhaUFDUVFSMElBVnFLd01JT1FNSUlBSkJBV29pQWlBRVNBMEFDd3NnQlJCRElBQWdBellDQkNBQUtBSVFJUUlnQUVFQUlBQW9BZ3hyUVFSMElBTnFOZ0lBSUFBZ0JrRUVkQ0FEYWpZQ0NDQUFJQUVnQW1vMkFoQUx2UUVCQW44Z0FDZ0NCQkJESUFCQkFEWUNEQ0FBSUFFMkFoQWdBVUVBU0FSQUlBQkJBRFlDQ0NBQVFRQTJBZ0FnQUVFQU5nSUVEd3NnQUNBQlFRRnFJZ1JCQkhRUVNpSUJOZ0lFSUFGRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnTkJBRFlDQUNBRFFYODJBZ1FnQTBHb09FRUFFQUVMSUFBZ0FUWUNBQ0FBSUFSQkJIUWdBV29pQXpZQ0NDQURJQUZOQkVBUEN5QUJJUUFEUUNBQUlBSXJBd0E1QXdBZ0FDQUNLd01JT1FNSUlBQkJFR29pQUNBRFNRMEFDd3NVQUNBQVFReHFJQUZCZjJvZ0FFRWdhaEN2Q0F0a0FRRi9JQUVnQUNnQ0hFRUJhaUFBS0FJWWF5SUJheUlDUlFSQUR3c2dBRUVNYWlBQ0VLNElJQUFvQWhBZ0FVRUVkR29pQVNBQUtBSVVJZ0pQQkVBUEN3TkFJQUVnQUNzRElEa0RBQ0FCSUFBckF5ZzVBd2dnQVVFUWFpSUJJQUpKRFFBTEMyOEJBMzhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUJRUVJxSVFJZ0FFR000UUEyQWdBZ0FDZ0NDQ0lEQkVBZ0FTQUFLQUlFTmdJQUlBSWdBU2dDQURZQ0FDQURJQUlRVFFzZ0FDZ0NFQkJESUFCQjRMUUNLQUlBTmdJQVFlQzBBaUFBTmdJQUlBRWtCQXVkRmdJY2Z4QjhJd1FoRVNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FDZ0NvQUlpQkVFQlNBUi9RUUFGQW44Z0JFRXdiQkJLSWc5RkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnVkJBRFlDQUNBRlFYODJBZ1FnQlVHb09FRUFFQUVMSUFSQk1Hd2dEMm9pQlNBUFN3UkFJQThoQkFOQUlBUkJBRFlDR0NBRVFYODJBaHdnQkVJQU53SUVJQVJDQURjQ0RDQUVRUUEyQWhRZ0JFR1E2UUEyQWdBZ0JFSUFOd01nSUFSQ0FEY0RLQ0FFUVRCcUlnUWdCVWtOQUFzZ0FDZ0NvQUlpQkVFQlNBUkFJQVVoRXlBUERBSUxDeUFFUVRCc0VFb2lFRVVFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQjBFQU5nSUFJQWRCZnpZQ0JDQUhRYWc0UVFBUUFRc2dCRUV3YkNBUWFpSUhJQkJMQkg4Z0VDRUVBMzhnQkVFQU5nSVlJQVJCZnpZQ0hDQUVRZ0EzQWdRZ0JFSUFOd0lNSUFSQkFEWUNGQ0FFUVpEcEFEWUNBQ0FFUWdBM0F5QWdCRUlBTndNb0lBUkJNR29pQkNBSFNRMEFJQVVoRXlBUUlRa2dCeUVVSUE4TEJTQUZJUk1nRUNFSklBY2hGQ0FQQ3dzTElRc2dBVUVBTmdJTUlBRW9BZ1FpQlFSQVFjQUFJQVVnQVNnQ0NCQklJQUZCQURZQ0NDQUJRUUEyQWdRTElCRkJCR29oRmlBQUtBS2dBaUlGUVFCS0JFQWdBRUZBYXlFWlFRQWhCQU5BSUFSQnVBRnNJQU5xSWhjb0Fnd2lDQ0FFUVlnQmJDQUNhaUlOS0FKMElnY29BaEFpQmtHWUFXeHFLd01RUkFBQUFBQUFBT0Evb2lFaklBWkJtQUZzSUFocUt3TUFJaUlnQmtHWUFXd2dDR29yQXhoRUFBQUFBQUFBNEQraUlpRWdJeUFqSUNGakd5SWdvU0VsSUNJZ0lLQWhJeUFHUVpnQmJDQUlhaXNEQ0NJaElDQ2hJU0lnSVNBZ29DRWhJQWNvQWdBaUJ3UkFBMEFnQnlnQ0VDSUdRWmdCYkNBSWFpc0RFRVFBQUFBQUFBRGdQNkloS0NBR1FaZ0JiQ0FJYWlzREFDSW1JQVpCbUFGc0lBaHFLd01ZUkFBQUFBQUFBT0Evb2lJZ0lDZ2dLQ0FnWXhzaUtLRWlJQ0FsSUNBZ0pXTWJJU1VnSmlBb29DSWdJQ01nSUNBalpCc2hJeUFHUVpnQmJDQUlhaXNEQ0NJbUlDaWhJaUFnSWlBZ0lDSmpHeUVpSUNZZ0tLQWlJQ0FoSUNBZ0lXUWJJU0VnQnlnQ0FDSUhEUUFMQ3lBbElCa3JBd0JFQUFBQUFBQUE0RCtpSWlDaElTVWdJeUFnb0NBbG9TRW9JQ0VnSUtBZ0lpQWdvU0lqb1NFaElBVkJBVVlFZkNBb0lDR2pJaUFnQUNzRE1DSWlZd1I4SUNJZ0lLTUZJQ0FnSXFNTEJVUUFBQUFBQUFEd1B3c2hKaUFFUVRCc0lBdHFRUXhxSUFSQmlBRnNJQUpxSWdZb0FneEJmMm9RNGdNZ0JFRXdiQ0FMYWlFSUlBUkJNR3dnQzJvaUJ5Z0NDQ0lGQkVBZ0VTQUlLQUlFTmdJQUlCWWdFU2dDQURZQ0FDQUZJQllRVFFzZ0J5QUVRWWdCYkNBQ2FpSU1OZ0lJSUFnZ0RDQUVRVEJzSUF0cUVGazJBZ1FnQkVFd2JDQUpha0VNYWlBR0tBSU1RWDlxRU9JRElBUkJNR3dnQ1dvaEJpQUVRVEJzSUFscUlnY29BZ2dpQlFSQUlCRWdCaWdDQkRZQ0FDQVdJQkVvQWdBMkFnQWdCU0FXRUUwTElBY2dERFlDQ0NBR0lBd2dCRUV3YkNBSmFoQlpOZ0lFSUEwb0FuUWlCMFVpRlVVRVFDQVhLQUlNSVF3Z0JFRXdiQ0FMYWlnQ0RDSUlJQVJCTUd3Z0NXb29BZ3dpQmtZRVFDQUhJUVVEUUNBRktBSVFJZ1pCbUFGc0lBeHFLd01JSVNJZ0JrRUVkQ0FJYWlBR1FaZ0JiQ0FNYWlzREFEa0RBQ0FHUVFSMElBaHFJQ0k1QXdnZ0JTZ0NBQ0lGRFFBTEJTQUhJUVVEUUNBRktBSVFJaEpCbUFGc0lBeHFLd01BSVNBZ0VrR1lBV3dnREdvckF3Z2hJaUFTUVFSMElBaHFJQ0E1QXdBZ0VrRUVkQ0FJYWlBaU9RTUlJQkpCQkhRZ0Jtb2dJRGtEQUNBU1FRUjBJQVpxSUNJNUF3Z2dCU2dDQUNJRkRRQUxDd3NnS0NBaG9pQW1vaUVnSUFBb0FqZ2lHa0VCU0FSL0lDZ2hJaUFFQlNBWEtBSU1JZzRnRFNnQ2RDSUZLQUlRSWdaQm1BRnNhaXNERUVRQUFBQUFBQURnUDZJaEppQUdRWmdCYkNBT2Fpc0RHRVFBQUFBQUFBRGdQNklpSWlBbUlDWWdJbU1iSVNzZ0JrR1lBV3dnRG1vaEhpQUdRWmdCYkNBT2FpRWZJQVVvQWdBaURVVWhFaUFFUVRCc0lBbHFJUXdnR1NzREFFUUFBQUFBQUFEZ1A2SWhMQ0FBS0FLZ0FrRUJSaUViSUFSQk1Hd2dDMm9oSENBYVFRRnF0eUV2UVFFaENDQWxJUzBnSXlFdUlDRWhKaUFFSVFVRGZ5QUl0eUF2bzBRWUxVUlUreUg1UDZJaUlSQ3FBU0VsSUNFUXF3RWhJeUFWUlFSQUlBd29BZ3doSFNBWEtBSU1JUW9nQnlFR0EwQWdCaWdDRUNJWVFRUjBJQjFxS3dNSUlTSWdHRUdZQVd3Z0Ntb2dJeUFZUVFSMElCMXFLd01BSWlHaUlDVWdJcUtoT1FNQUlCaEJtQUZzSUFwcUlDTWdJcUlnSlNBaG9xQTVBd2dnQmlnQ0FDSUdEUUFMQ3lBZUt3TUFJaUVnSzZFaEpTQWhJQ3VnSVNNZ0h5c0RDQ0loSUN1aElTSWdJU0Fyb0NFaElCSUVmQ0FqSVNRZ0lTRWpJQ0lGSUEwaEJnTjhJQVlvQWhBaUNrR1lBV3dnRG1vckF4QkVBQUFBQUFBQTREK2lJU2tnQ2tHWUFXd2dEbW9yQXdBaUtpQUtRWmdCYkNBT2Fpc0RHRVFBQUFBQUFBRGdQNklpSkNBcElDa2dKR01iSWltaElpUWdKU0FrSUNWakd5RWxJQ29nS2FBaUpDQWpJQ1FnSTJRYklTTWdDa0dZQVd3Z0Rtb3JBd2dpS2lBcG9TSWtJQ0lnSkNBaVl4c2hJaUFxSUNtZ0lpUWdJU0FrSUNGa0d5RWhJQVlvQWdBaUJnMEFJQ01oSkNBaElTTWdJZ3NMSVNFZ0pDQXNvQ0FsSUN5aElpV2hJU0lnSXlBc29DQWhJQ3loSWlPaElTRWdHd1I4SUNJZ0lhTWlKeUFBS3dNd0lpUmpCSHdnSkNBbm93VWdKeUFrb3dzaEtpQWhJQ0tqSWljZ0pHTUVmQ0FrSUNlakJTQW5JQ1NqQ3lFbklDSWdJYUlpSkNBbm9pRW5JQ1FnS3FJRklDSWdJYUlMSWlRZ0lHTUVRQ0FWQkg4Z0pDRWdJQVFGSUJ3b0Fnd2hCaUFISVFVRGZ5QUZLQUlRSWdwQm1BRnNJQTVxS3dNSUlTQWdDa0VFZENBR2FpQUtRWmdCYkNBT2Fpc0RBRGtEQUNBS1FRUjBJQVpxSUNBNUF3Z2dCU2dDQUNJRkRRQWdKQ0VnSUFRTEN5RUZCU0FiSUNjZ0lHTnhCRUFnRlFSL0lDY2hJQ0FFQlNBY0tBSU1JUVlnQnlFRkEzOGdCU2dDRUNJS1FaZ0JiQ0FPYWlzRENDRWdJQXBCQkhRZ0Jtb2dDa0dZQVd3Z0Rtb3JBd0E1QXdBZ0NrRUVkQ0FHYWlBZ09RTUlJQVVvQWdBaUJRMEFJQ2NoSUNBRUN3c2hCUVVnTFNFbElDNGhJeUFvSVNJZ0ppRWhDd3NnQ0VFQmFpRUdJQWdnR2tnRWZ5QUdJUWdnSlNFdElDTWhMaUFpSVNnZ0lTRW1EQUVGSUFVTEN3c2hCZ0pBQWtBZ0FDc0RNQ0ltUkFBQUFBQUFBUEEvWXlBaUlDR2pJaUJFQUFBQUFBQUE4RDlrY1EwQUlDQkVBQUFBQUFBQThEOWpJQ1pFQUFBQUFBQUE4RDltY1EwQUlDVWhJQ0FqSVNVZ0lpRWpEQUVMSUJWRkJFQWdCRUV3YkNBTGFpZ0NEQ0VNSUFjaEJRTkFJQVVvQWhBaUNFRUVkQ0FNYWlFTklBaEJCSFFnREdvaUNDc0RBQ0VnSUFnZ0RTc0RDSm81QXdBZ0RTQWdPUU1JSUFVb0FnQWlCUTBBQ3dzZ0k1b2dJYUVoSUNBaElTTWdJaUVoQ3lBVlJRUkFJQmNvQWd3aENDQUVRVEJzSUF0cUtBSU1JUVVEUUNBSEtBSVFJZzFCQkhRZ0JXb3JBd2doSWlBTlFaZ0JiQ0FJYWlBTlFRUjBJQVZxS3dNQU9RTUFJQTFCbUFGc0lBaHFJQ0k1QXdnZ0J5Z0NBQ0lIRFFBTEN5QUJJQUVvQWd4QkFXbzJBZ3hCd0FBUVNTRUhJQUVvQWdnaEJTQUhRUUEyQWdBZ0J5QUZOZ0lFSUFjZ0lEa0RDQ0FISUNVNUF4QWdCMElBTndNWUlBZENBRGNESUNBSElDTTVBeWdnQnlBaE9RTXdJQWNnQmpZQ09DQUhRUUE2QUR3Z0FTZ0NCQVJBSUFFb0FnZ2dCellDQUFVZ0FTQUhOZ0lFQ3lBQklBYzJBZ2dnQkVFQmFpSUVJQUFvQXFBQ0lnVklEUUFMQ3lBSklCUkpCRUFEUUNBSktBSUFLQUlBSVFBZ0NTQUFRZjhEY1VHRUEyb1JBUUFnQ1VFd2FpSUpJQlJKRFFBTEN5QVFFRU1nQ3lBVFR3UkFJQThRUXlBUkpBUVBDd05BSUFzb0FnQW9BZ0FoQUNBTElBQkIvd054UVlRRGFoRUJBQ0FMUVRCcUlnc2dFMGtOQUFzZ0R4QkRJQkVrQkF1NUJBSUZmd2Q4SUFGQkFEWUNEQ0FCS0FJRUlnUUVRRUhBQUNBRUlBRW9BZ2dRU0NBQlFRQTJBZ2dnQVVFQU5nSUVDeUFBS0FLZ0FrRUFUQVJBRHdzZ0FFRkFheUVJQTBBZ0JrRzRBV3dnQTJvb0Fnd2lCU0FHUVlnQmJDQUNhaWdDZENJSEtBSVFJZ1JCbUFGc2Fpc0RFRVFBQUFBQUFBRGdQNkloRFNBRVFaZ0JiQ0FGYWlzREFDSUxJQVJCbUFGc0lBVnFLd01ZUkFBQUFBQUFBT0Evb2lJS0lBMGdEU0FLWXhzaURLRWhDaUFMSUF5Z0lRMGdCRUdZQVd3Z0JXb3JBd2dpQ1NBTW9TRUxJQWtnREtBaERDQUhLQUlBSWdRRVFBTkFJQVFvQWhBaUIwR1lBV3dnQldvckF4QkVBQUFBQUFBQTREK2lJUWtnQjBHWUFXd2dCV29yQXdBaURpQUhRWmdCYkNBRmFpc0RHRVFBQUFBQUFBRGdQNklpRHlBSklBa2dEMk1iSWdtaElnOGdDaUFQSUFwakd5RUtJQTRnQ2FBaURpQU5JQTRnRFdRYklRMGdCMEdZQVd3Z0JXb3JBd2dpRGlBSm9TSVBJQXNnRHlBTFl4c2hDeUFPSUFtZ0lna2dEQ0FKSUF4a0d5RU1JQVFvQWdBaUJBMEFDd3NnQ2lBSUt3TUFSQUFBQUFBQUFPQS9vaUlLb1NFSklBRWdBU2dDREVFQmFqWUNERUhBQUJCSklRUWdBU2dDQ0NFRklBUkJBRFlDQUNBRUlBVTJBZ1FnQkNBSk9RTUlJQVFnQ3lBS29TSUxPUU1RSUFSQ0FEY0RHQ0FFUWdBM0F5QWdCQ0FOSUFxZ0lBbWhPUU1vSUFRZ0RDQUtvQ0FMb1RrRE1DQUVJQVkyQWpnZ0JFRUFPZ0E4SUFFb0FnUUVRQ0FCS0FJSUlBUTJBZ0FGSUFFZ0JEWUNCQXNnQVNBRU5nSUlJQVpCQVdvaUJpQUFLQUtnQWtnTkFBc0xtQU1CQm44akJDRUVJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBQkVBZ0FFRjhhaUlGS0FJQUlnTUVRQ0FEUVlnQmJDQUFhaUVEQTBBZ0EwSDRmbW9pQXhDbEFTQUFJQU5IRFFBTEN5QUZFRU1MSUFSQkJHb2hCaUFCQkVBZ0FVRjRhaUlIS0FJRUlnQUVRQ0FBUWJnQmJDQUJhaUVBQTBBZ0FFSElmbW9pQlVHazZBQTJBZ0FnQUVIb2Ztb1FnZ0VnQlVHTTRRQTJBZ0FnQUVIUWZtb29BZ0FpQXdSQUlBUWdBRUhNZm1vb0FnQTJBZ0FnQmlBRUtBSUFOZ0lBSUFNZ0JoQk5DeUFBUWRoK2FpSUlLQUlBSWdNZ0FFSGNmbW9pQUNnQ0FFa0Vmd05BSUFNUWdnRWdBMEdZQVdvaUF5QUFLQUlBU1EwQUN5QUlLQUlBQlNBREN4QkRJQUVnQlVjRVFDQUZJUUFNQVFzTEN5QUhFRU1MSUFKRkJFQWdCQ1FFRHdzZ0FrRjRhaUlCS0FJRUlnQUVRQ0FBUVRoc0lBSnFJUU1EUUNBRFFVaHFJZ0JCa09BQU5nSUFJQU5CVUdvb0FnQWlCUVJBSUFRZ0EwRk1haWdDQURZQ0FDQUdJQVFvQWdBMkFnQWdCU0FHRUZjTElBTkJXR29vQWdBUVF5QUFJQUpIQkVBZ0FDRUREQUVMQ3dzZ0FSQkRJQVFrQkF1UEF3RUdmeUFBS0FJRUlRSWdBU0FBS0FJUUlnVkJBV29nQUNnQ0RDSUhheUlEYWlJR1FReHNFRW9oQkNBQ1JRUkFJQUFnQkRZQ0JDQUVSUVJBUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlDUVFBMkFnQWdBa0YvTmdJRUlBSkJxRGhCQUJBQkN5QUFRUUFnQjJ0QkRHd2dCR28yQWdBZ0FDQUdRUXhzSUFScU5nSUlJQUFnQVNBRmFqWUNFQThMSUFSRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnVkJBRFlDQUNBRlFYODJBZ1FnQlVHb09FRUFFQUVMSUFZZ0F5QUdJQU5JR3lJRlFRQktCRUJCQUNFREEwQWdBMEVNYkNBRWFpSUhJQU5CREd3Z0Ftb2lBaWtDQURjQ0FDQUhJQUlvQWdnMkFnZ2dBa0lBTndJQUlBSkJBRFlDQ0NBQUtBSUVJUUlnQTBFQmFpSURJQVZJRFFBTEN5QUNJQUFvQWdnaUEwa0Vmd05BSUFJc0FBdEJBRWdFUUNBQ0tBSUFFRU1nQUNnQ0NDRURDeUFDUVF4cUlnSWdBMGtOQUFzZ0FDZ0NCQVVnQWdzUVF5QUFJQVEyQWdRZ0FDZ0NFQ0VDSUFCQkFDQUFLQUlNYTBFTWJDQUVhallDQUNBQUlBWkJER3dnQkdvMkFnZ2dBQ0FCSUFKcU5nSVFDL0FEQWdsL0FYd2pCQ0VGSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBRlFnQTNBd0FnQlVJQU53TUlJQVZCSUdvaUJFRUFOZ0lFSUFSQkFEWUNDQ0FFUWVqb0FEWUNBQ0FFUVFBMkFnd2dBQ2dDT0FSQUlBQWdCQ0FDSUFNUXN3Z0ZJQUFnQkNBQ0lBTVF0QWdMSUFVZ0JDQUFLd013SUFBb0FrZ2dBQ2dDUENBRlFSaHFJQVZCRUdvUStnY2dCQ2dDQkNJTFJRUkFJQVJCL09nQU5nSUFJQVVrQkE4TElBc2hBQU5BSUFBaUNDZ0NPQ0lIUVlnQmJDQUNhaWdDZENFR0FrQUNRQ0FBTEFBOFJRMEFJQVlFUUNBSFFiZ0JiQ0FEYWlnQ0RDRUpJQVloQUFOQUlBQW9BaEFpREVHWUFXd2dDV29oQ2lBTVFaZ0JiQ0FKYWlJTUt3TUFJUTBnRENBS0t3TUltamtEQUNBS0lBMDVBd2dnQUNnQ0FDSUFEUUFMREFFTERBRUxJQVlFUUNBSFFiZ0JiQ0FEYWlnQ0RDRUhJQUVvQWd3aENTQUdJUUFEUUNBQUtBSVFJZ1pCbUFGc0lBZHFLQUlnS0FJUUlRb2dCa0dZQVd3Z0Iyb3JBd2dnQ0NzRElLQWdDQ3NERUtFaERTQUtRWmdCYkNBSmFpQUdRWmdCYkNBSGFpc0RBQ0FJS3dNWW9DQUlLd01Jb1RrREFDQUtRWmdCYkNBSmFpQU5PUU1JSUFBb0FnQWlBQTBBQ3dzTElBZ29BZ0FpQUEwQUN5QUVRZnpvQURZQ0FDQUxSUVJBSUFVa0JBOExRY0FBSUFzZ0JDZ0NDQkJJSUFSQkFEWUNDQ0FFUVFBMkFnUWdCU1FFQzlrRkFnZC9BM3dqQkNFS0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUJLQUowSWdnRVFBTkFJQUlvQWd3Z0NDZ0NFQ0lKUVpnQmJHb2dCeWdDRENBSlFRSjBhaWdDQUVHSUFXd2dCR29RdUFFMkFpUWdDQ2dDQUNJSURRQUxDeUFCS0FLQUFTSUlCRUFEUUNBREtBSU1JQWdvQWhoQkdHeHFJQWNvQWd3Z0NDZ0NDQ2dDRUNJSlFRSjBhaWdDQUVHSUFXd2dCR29nQ1VHWUFXd2dBaWdDRENJSmFpZ0NKQ0FJS0FJTUtBSVFRWmdCYkNBSmFpZ0NKQkRIQVRZQ0RDQUlLQUlBSWdnTkFBc0xJQXBCQkdvaENTQUFLQUtnQWtFQVNnUkFRUUFoQ0FOQUlBaEJ1QUZzSUFWcUlBaEJpQUZzSUFScUlnc1E0QU1nQ0VFNGJDQUdha0VNYWlBSVFZZ0JiQ0FFYWlnQ0VFRi9haEN0QWlBSVFUaHNJQVpxSVF3Z0NFRTRiQ0FHYWlJTktBSUlJZzRFUUNBS0lBd29BZ1EyQWdBZ0NTQUtLQUlBTmdJQUlBNGdDUkJYQ3lBTklBczJBZ2dnRENBTElBaEJPR3dnQm1vUWJEWUNCQ0FJUVFGcUlnZ2dBQ2dDb0FKSURRQUxDeUFCS0FKMElnQUVRQ0FDS0FJTUlRUWdCeWdDRENFTEEwQWdBQ2dDRUNJSVFaZ0JiQ0FFYWlnQ0pDZ0NFQ0VDSUFoQm1BRnNJQVJxS3dNWUlROGdDRUdZQVd3Z0JHb3JBd0FoRUNBSVFaZ0JiQ0FFYWlzRENDRVJJQWhCQW5RZ0Myb29BZ0JCdUFGc0lBVnFLQUlNSWdrZ0FrR1lBV3hxSUFoQm1BRnNJQVJxS3dNUU9RTVFJQUpCbUFGc0lBbHFJQTg1QXhnZ0FrR1lBV3dnQ1dvZ0VEa0RBQ0FDUVpnQmJDQUphaUFST1FNSUlBSkJtQUZzSUFscUlBQTJBaUFnQWtHWUFXd2dDV3BCQURZQ0pDQUFLQUlBSWdBTkFBc0xJQUVvQW9BQklnQkZCRUFnQ2lRRUR3c2dBeWdDRENFQklBY29BZ3doQkFOQUlBQW9BZ2dvQWhCQkFuUWdCR29vQWdCQk9Hd2dCbW9vQWd3aUF5QUFLQUlZSWdWQkdHd2dBV29vQWd3b0FoZ2lBa0VZYkdvZ0JVRVliQ0FCYWlzREFEa0RBQ0FDUVJoc0lBTnFJQUEyQWdnZ0FrRVliQ0FEYWtFQU5nSU1JQUFvQWdBaUFBMEFDeUFLSkFRTGtBY0JDSDhnQUVFRWFpSUlLQUlBSVFRZ0FTQUFLQUlRSWdOQkFXb2dBQ2dDRENJR2F5SUNhaUlIUVpnQmJCQktJUVVnQkVVRVFDQUlJQVUyQWdBZ0JVVUVRRUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlCRUVBTmdJQUlBUkJmellDQkNBRVFhZzRRUUFRQVFzZ0FFRUFJQVpyUVpnQmJDQUZhallDQUNBQVFRaHFJQWRCbUFGc0lBVnFOZ0lBSUFBZ0FTQURhallDRUE4TElBVkZCRUJCd1BRQ0VFVkJ3UFFDRUVWQkNCQUNJZ05CQURZQ0FDQURRWDgyQWdRZ0EwR29PRUVBRUFFTElBY2dBaUFISUFKSUd5SUpRUUJLQkVCQkFDRUNBMEFnQWtHWUFXd2dCV29nQWtHWUFXd2dCR29yQXdBNUF3QWdBa0dZQVd3Z0JXb2dBa0dZQVd3Z0JHb3JBd2c1QXdnZ0FrR1lBV3dnQldvaUF5QUNRWmdCYkNBRWFpSUdLUU1RTndNUUlBTWdCaWtER0RjREdDQURJQVlwQXlBM0F5QWdBeUFHS1FNb053TW9JQU1nQmlrRE1EY0RNQ0FESUFZcEF6ZzNBemdnQXlBR0tBSkFOZ0pBSUFKQm1BRnNJQVZxSUFKQm1BRnNJQVJxSWdNb0FrZzJBa2dnQWtHWUFXd2dCV29nQWtHWUFXd2dCR29pQmlnQ1REWUNUQ0FHUVFBMkFrd2dBMEVBTmdKSUlBSkJtQUZzSUFWcVFkVG9BRFlDUkNBQ1FaZ0JiQ0FGYWlBQ1FaZ0JiQ0FFYWlJREtBSlFOZ0pRSUFOQkFEWUNVQ0FDUVpnQmJDQUZhaUFDUVpnQmJDQUVhaUlES0FKWU5nSllJQUpCbUFGc0lBVnFJQUpCbUFGc0lBUnFJZ1lvQWx3MkFsd2dCa0VBTmdKY0lBTkJBRFlDV0NBQ1FaZ0JiQ0FGYWtHdzVnQTJBbFFnQWtHWUFXd2dCV29nQWtHWUFXd2dCR29pQXlnQ1lEWUNZQ0FEUVFBMkFtQWdBa0dZQVd3Z0JXb2dBa0dZQVd3Z0JHb3BBbVEzQW1RZ0FrR1lBV3dnQldvZ0FrR1lBV3dnQkdvaUF5Z0NjRFlDY0NBQ1FaZ0JiQ0FGYWlBQ1FaZ0JiQ0FFYWlJR0tBSjBOZ0owSUFaQkFEWUNkQ0FEUVFBMkFuQWdBa0dZQVd3Z0JXcEJzT1lBTmdKc0lBSkJtQUZzSUFWcUlBSkJtQUZzSUFScUlnTW9BbmcyQW5nZ0EwRUFOZ0o0SUFKQm1BRnNJQVZxSWdNZ0FrR1lBV3dnQkdvaUJpa0NmRGNDZkNBRElBWXBBb1FCTndLRUFTQURJQVlwQW93Qk53S01BU0FESUFZb0FwUUJOZ0tVQVNBQ1FRRnFJZ0lnQ1VnTkFBc0xJQVFnQUVFSWFpSUNLQUlBU1FSQUEwQWdCQkNDQVNBRVFaZ0JhaUlFSUFJb0FnQkpEUUFMSUFnb0FnQWhCQXNnQkJCRElBZ2dCVFlDQUNBQUtBSVFJUVFnQUVFQUlBQW9BZ3hyUVpnQmJDQUZhallDQUNBQ0lBZEJtQUZzSUFWcU5nSUFJQUFnQVNBRWFqWUNFQXRjQVFGL0lBQkJ3T2dBTmdJQUlBQW9BZ1FpQVVVRVFDQUFRZUN6QWlnQ0FEWUNBRUhnc3dJZ0FEWUNBQThMUVJBZ0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQ0FBUWVDekFpZ0NBRFlDQUVIZ3N3SWdBRFlDQUF0VEFRRi9JQUFvQWhBaUFTQUFLQUlVU1FSQUEwQWdBUkNDQVNBQlFaZ0JhaUlCSUFBb0FoUkpEUUFMSUFBb0FoQWhBUXNnQVJCRElBQkJBRFlDR0NBQVFYODJBaHdnQUVJQU53TUlJQUJDQURjREVBdlRBUUVFZnlBQUtBSVFJZ0lnQUNnQ0ZFa0VRQU5BSUFJUWdnRWdBa0dZQVdvaUFpQUFLQUlVU1EwQUN5QUFLQUlRSVFJTElBQkJER29oQXlBQVFTQnFJUVFnQWhCRElBQkJBRFlDR0NBQUlBRkJmMm8yQWh3Z0FVRUJTQVJBSUFCQkFEWUNGQ0FEUVFBMkFnQWdBRUVBTmdJUUlBTWdCQkRsQXc4TElBQWdBVUdZQVd3UVNpSUNOZ0lRSUFKRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnVkJBRFlDQUNBRlFYODJBZ1FnQlVHb09FRUFFQUVMSUFNZ0FqWUNBQ0FBSUFGQm1BRnNJQUpxTmdJVUlBTWdCQkRsQXd0aEFRRi9JQUVnQUNnQ0hFRUJhaUFBS0FJWWF5SUJheUlDUlFSQUR3c2dBRUVNYWlBQ0VMa0lJQUFvQWhBZ0FVR1lBV3hxSWdFZ0FDZ0NGRThFUUE4TElBQkJJR29oQWdOQUlBRWdBaERrQXlBQlFaZ0JhaUlCSUFBb0FoUkpEUUFMQzhZQkFRTi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FrRUVhaUVCSUFCQnBPZ0FOZ0lBSUFCQklHb1FnZ0VnQUVHTTRRQTJBZ0FnQUNnQ0NDSURCRUFnQWlBQUtBSUVOZ0lBSUFFZ0FpZ0NBRFlDQUNBRElBRVFUUXNnQUNnQ0VDSUJJQUFvQWhSUEJFQWdBUkJESUFCQmdMa0NLQUlBTmdJQVFZQzVBaUFBTmdJQUlBSWtCQThMQTBBZ0FSQ0NBU0FCUVpnQmFpSUJJQUFvQWhSSkRRQUxJQUFvQWhBUVF5QUFRWUM1QWlnQ0FEWUNBRUdBdVFJZ0FEWUNBQ0FDSkFRTG5BRUJBMzhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNRUVJxSVFNZ0FFR2s2QUEyQWdBZ0FFRWdhaENDQVNBQVFZemhBRFlDQUNBQUtBSUlJZ0VFUUNBQ0lBQW9BZ1EyQWdBZ0F5QUNLQUlBTmdJQUlBRWdBeEJOQ3lBQUtBSVFJZ0VnQUNnQ0ZFOEVRQ0FCRUVNZ0FpUUVEd3NEUUNBQkVJSUJJQUZCbUFGcUlnRWdBQ2dDRkVrTkFBc2dBQ2dDRUJCRElBSWtCQXRjQVFGL0lBQkJ3T2dBTmdJQUlBQW9BZ1FpQVVVRVFDQUFRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FEWUNBQThMUVJBZ0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQ0FBUWRDekFpZ0NBRFlDQUVIUXN3SWdBRFlDQUFzeUFRRi9JQUJCd09nQU5nSUFJQUFvQWdRaUFVVUVRQThMUVJBZ0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQXZ0QlFFR2Z5TUVJUVVqQkVFd2FpUUVJd1FqQlU0RVFFRXdFQUFMSUFFb0Fnd2hCQ0FGUVFBMkFoZ2dCU0FFUVg5cU5nSWNJQVJCQVVnRVFDQUZRUUEyQWhRZ0JVRUFOZ0lNSUFWQkFEWUNFQVVnQlNBRVFRSjBFRW9pQmpZQ0VDQUdCRUFnQlNBR05nSU1JQVVnQkVFQ2RDQUdhallDRkFWQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdSQkFEWUNBQ0FFUVg4MkFnUWdCRUdvT0VFQUVBRUxDeUFGUVl6aEFEWUNBQ0FGUVFBMkFnUWdCU0FCTmdJSUlBVWdBU0FGRUZrMkFnUWdCVUg4NGdBMkFnQWdBQ0FCSUFVUXl3Z2lCRFlDb0FKQmZ5QUVRWWdCYkNJR1FRUnFJQVJCNGNPSEQwc2dCa0Y3UzNJYkVGOGlCaUFFTmdJQUlBWkJCR29oQmtGL0lBUUVmeUFFUVlnQmJDQUdhaUVISUFZaEJBTkFJQVFReXdFZ0JFR0lBV29pQkNBSFJ3MEFDeUFBS0FLZ0FnVkJBQXNpQkVHNEFXd2lCMEVJYWlBRVFZWFprQXRMSUFkQmQwdHlHeEJmSWdjZ0JEWUNCQ0FIUVFocUlRZEJmeUFFQkg4Z0JFRzRBV3dnQjJvaENDQUhJUVFEUUNBRUVLNENJQVJCdUFGcUlnUWdDRWNOQUFzZ0FDZ0NvQUlGUVFBTElnUkJPR3dpQ0VFSWFpQUlRWGRMSUFSQnBKTEpKRXR5R3hCZklnZ2dCRFlDQkNBSVFRaHFJUWdnQkFSQUlBUkJPR3dnQ0dvaENTQUlJUVFEUUNBRVFRQTJBaGdnQkVGL05nSWNJQVJDQURjQ0JDQUVRZ0EzQWd3Z0JFRUFOZ0lVSUFSQmlPZ0FOZ0lBSUFSQ0FEY0RJQ0FFUWdBM0F5Z2dCRUVBT3dFd0lBUkJPR29pQkNBSlJ3MEFDd3NnQUNBQklBSWdBeUFHSUFjZ0NDQUZFTGdJSUFBb0FxQUNJZ0ZCQVVZRVFDQUFJQVlnQnlBSUVPTURCU0FCUVFCS0JFQkJBQ0VCQTBBZ0FDQUJRWWdCYkNBR2FpQUJRYmdCYkNBSGFpQUJRVGhzSUFocUVPTURJQUZCQVdvaUFTQUFLQUtnQWtnTkFBc0xDeUFBSUFJZ0JpQUhFTGNJSUFZZ0J5QUlFTFVJSUFWQmpPRUFOZ0lBSUFVb0FnZ2lBRVVFUUNBRktBSVFFRU1nQlNRRUR3c2dCU0FGS0FJRU5nSWtJQVZCS0dvaUFTQUZLQUlrTmdJQUlBQWdBUkJOSUFVb0FoQVFReUFGSkFRTDR3WUNCWDhEZkNNRUlRY2pCRUZBYXlRRUl3UWpCVTRFUUVIQUFCQUFDeUFESUFNb0FnQW9BaEJCL3dOeFFZUURhaEVCQUNBQUtBSjBJZ1lFUUFOQUlBRW9BZ3dnQmlnQ0VFR1lBV3hxSUFNUXVBRTJBaVFnQmlnQ0FDSUdEUUFMQ3lBQUtBS0FBU0lHQkVBRFFDQUNLQUlNSUFZb0FoaEJHR3hxSUFZb0FnZ2lDQ0FHS0FJTUlnbEdCSDlCQUFVZ0F5QUJLQUlNSWdvZ0NDZ0NFRUdZQVd4cUtBSWtJQWtvQWhCQm1BRnNJQXBxS0FJa0VNY0JDellDRENBR0tBSUFJZ1lOQUFzTElBZEJQR29oQ2lBSElBTVFud2dnQjBFb2FpSUlRUUEyQWdRZ0NFRUFOZ0lJSUFoQjJPWUFOZ0lBSUFoQkFEWUNEQ0FBSUFJZ0F5QUlJQWNRbmdnZ0JDQURFT0FESUFWQkRHb2dBeWdDRUVGL2FoQ3RBaUFGS0FJSUlnWUVRQ0FISUFVb0FnUTJBamdnQ2lBSEtBSTROZ0lBSUFZZ0NoQlhDeUFGSUFNMkFnZ2dCU0FESUFVUWJEWUNCQ0FBS0FKMElnWUVRQ0FCS0FJTUlRa2dCQ2dDRENFQkEwQWdCaWdDRUNJRVFaZ0JiQ0FKYWlnQ0pDZ0NFQ0VESUFSQm1BRnNJQWxxS3dNWUlRc2dCRUdZQVd3Z0NXb3JBd0FoRENBRVFaZ0JiQ0FKYWlzRENDRU5JQU5CbUFGc0lBRnFJQVJCbUFGc0lBbHFLd01RT1FNUUlBTkJtQUZzSUFGcUlBczVBeGdnQTBHWUFXd2dBV29nRERrREFDQURRWmdCYkNBQmFpQU5PUU1JSUFOQm1BRnNJQUZxSUFZMkFpQWdBMEdZQVd3Z0FXcEJBRFlDSkNBR0tBSUFJZ1lOQUFzTElBQW9Bb0FCSWdZRVFDQUNLQUlNSVFBRFFDQUdLQUlZSWdOQkdHd2dBR29vQWd3aUFnUkFJQVVvQWd3aUFTQUNLQUlZSWdKQkdHeHFJQU5CR0d3Z0FHb3JBd0E1QXdBZ0FrRVliQ0FCYWlBR05nSUlJQUpCR0d3Z0FXcEJBRFlDREFzZ0JpZ0NBQ0lHRFFBTEN5QUlLQUlFSWdBRVFDQUlLQUlNSVFJZ0NDZ0NDQ0VHQTBBZ0FDZ0NDQ0VFSUFKQmYyb2hBaUFBS0FJQUlnTWhBU0FBUWRDekFpZ0NBRFlDQUVIUXN3SWdBRFlDQUNBRFJTSUFCRUJCQUNFR0JTQUJRUUEyQWdRTElBVW9BZ3dnQkNnQ0dDSUVRUmhzYWlBSEtBSU1JQVJCQTNScUt3TUFPUU1BSUFCRkJFQWdBU0VBREFFTEN5QUlJQU0yQWdRZ0NDQUNOZ0lNSUFnZ0JqWUNDQXNnQnlnQ0NDRUFJQWRCa09BQU5nSUFJQUJGQkVBZ0J5Z0NFQkJESUFja0JBOExJQWNnQnlnQ0JEWUNPQ0FLSUFjb0FqZzJBZ0FnQUNBS0VGY2dCeWdDRUJCRElBY2tCQXUzQXdJRWZ3RjhJd1FoQkNNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0JFRUVhaUVGQWtBQ1FBSkFBa0FnQUNnQ0pBNENBQUVDQ3lBQktBS0FBU0lCUlEwQ0lBTW9BZ3doQWlBQUt3TVFJUWdnQVNFQUEwQWdBQ2dDR0VFWWJDQUNhaUlCSUFFckF3QWdDS0k1QXdBZ0FDZ0NBQ0lBRFFBTERBSUxJQUJCeEFKcUlBRW9BZ3hCZjJvUWhnRWdBQ2dDd0FJaUJnUkFJQVFnQUNnQ3ZBSTJBZ0FnQlNBRUtBSUFOZ0lBSUFZZ0JSQk5DeUFBSUFFMkFzQUNJQUFnQVNBQVFiZ0NhaEJaTmdLOEFpQUJLQUowSWdVRVFDQUNLQUlNSVFZZ0FDZ0N4QUloQnlBRklRSURRQ0FDS0FJUUlnVkJtQUZzSUFacUt3TVFSQUFBQUFBQUFPQS9vaUVJSUFWQkEzUWdCMm9nQ0NBSW9pQUZRWmdCYkNBR2Fpc0RHRVFBQUFBQUFBRGdQNklpQ0NBSW9xQ2ZPUU1BSUFJb0FnQWlBZzBBQ3dzZ0FTZ0NnQUVpQVVVTkFTQURLQUlNSVFNZ0FDZ0N4QUloQWlBQUt3TVFJUWdnQVNFQUEwQWdBQ2dDR0VFWWJDQURhaUlCSUFFckF3QWdDS0lnQUNnQ0NDZ0NFRUVEZENBQ2Fpc0RBS0FnQUNnQ0RDZ0NFRUVEZENBQ2Fpc0RBS0E1QXdBZ0FDZ0NBQ0lBRFFBTERBRUxJQVFrQkE4TElBUWtCQXYyQkFJRWZ3RjhJQUFvQWdnaEFTQUFLd01RSVFVZ0FDd0FHQ0lEUlNFRUlBQW9BaHdoQWlBQVFlUUFOZ0lnSUFCQkFUWUNKQ0FBUVFFMkFpZ2dBRUVvTmdJc0lBQkVBQUFBQUFBQThEODVBekFnQUVFS05nSTRJQUJCQVRZQ1BDQUFRVUJyUkFBQUFBQUFBRDVBT1FNQUlBQkJBVFlDU0NBQVFUSTJBbEFnQUVFQk5nSlVJQUJCRkRZQ1dDQUFRUUUyQWx3Z0FFRUtOZ0pnSUFCQkFUWUNaQ0FBUVFBNkFFd2dBRUVDTmdKb0lBQkVBQUFBQUFBQThEODVBM0FnQUVRQUFBQUFBQUR3UHprRGVDQUFRUUkyQW9BQklBQkJBallDaEFFZ0FFUjdGSzVINFhxRVB6a0RpQUVnQUVFZU5nS1FBU0FBUkpxWm1abVptYWsvT1FPWUFTQUFRUUE2QUtBQklBQkVya2ZoZWhTdTd6ODVBNmdCSUFCQkFqWUNzQUVnQUVFQk9nQzBBU0FBUkFBQUFBQUFBUEEvT1FPNEFTQUFRUlEyQXNBQklBQkVtcG1abVptWnlUODVBOGdCSUFCQkFUb0EwQUVnQUVRQUFBQUFBQUFBUURrRDJBRWdBRVI3Rks1SDRYcUVQemtENEFFZ0FFRUNOZ0xvQVNBQVFRRTJBdXdCSUFCQkFEWUM4QUVnQUVFWk5nTDBBU0FBUVFRMkF2Z0JJQUJCQVRvQUJDQUFJQUUyQWdnZ0FDQUZSQUFBQUFBQUFQQS9JQVZFQUFBQUFBQUFBQUJrR3prREVDQUFJQU02QUJnZ0FDQUNOZ0ljQWtBZ0FBSjhBa0FDUUFKQUlBRU9Bd0lCQUFRTFJBQUFBQUFBQVBBL0RBSUxSQnNONEMyUW9QWS9EQUVMUkJzTjRDMlFvT1kvQ3prRE1Bc2dBRUVDUVFFZ0JCczJBckFCQWtBQ1FBSkFBa0FDUUNBQ0RnTUFBUUlEQzBFR0lRRkJLQ0VDUVR3aEF3d0RDMEVFSVFGQkZDRUNRUjRoQXd3Q0MwRUNJUUZCQ2lFQ1FROGhBd3dCQ3c4TElBQWdBellDa0FFZ0FDQUNOZ0xBQVNBQUlBRTJBdmdCQzFJQUlBQkJER29nQVNnQ0VFRi9haENSQ0NBQVFaRGdBRFlDQUNBQVFRQTJBZ1FnQUNBQk5nSUlJQUFnQVNBQUVHdzJBZ1FnQUVHSTZBQTJBZ0FnQUVJQU53TWdJQUJDQURjREtDQUFRUUE3QVRBTFJRQWdBRUVNYWlBQktBSU1RWDlxRUpBSUlBQkJqT0VBTmdJQUlBQkJBRFlDQkNBQUlBRTJBZ2dnQUNBQklBQVFXVFlDQkNBQVFhVG9BRFlDQUNBQVFTQnFFS01DQytVTkFoQi9BM3dqQkNFSEl3UkJzQVZxSkFRakJDTUZUZ1JBUWJBRkVBQUxJQWRCckFWcUlRc2dCMEhvQTJvaEJpQUhRYkFDYWlJRklBRW9BZ1FpREJESENDQUhRZmdCYWlJS0lBd1F4Z2dnQjBHZ0JHb2lEaERMQVNBSFFjQUJhaUlKUVFBMkFoZ2dDVUYvTmdJY0lBbENBRGNDQkNBSlFnQTNBZ3dnQ1VFQU5nSVVJQWxCaU9nQU5nSUFJQWxDQURjRElDQUpRZ0EzQXlnZ0NVRUFPd0V3SUFkQkNHb2lCQkN1QWlBTUtBSndJZ05CQVVvRVFDQUJFUFlJSUFBc0FBUUVRQ0FBRU1VSUN5QU1LQUowSWcwRVFDQUJLQUljSVE4Z0FTZ0NSQ0VRSUFVb0Fnd2hDQ0FCS0FLTUFpRVJJQUVvQXJRQ0lSSURRQ0FOS0FJUUlnTkJBM1FnRDJvckF3QWhFeUFEUVFOMElCQnFLd01BSVJRZ0EwRURkQ0FTYWlzREFDRVZJQU5CbUFGc0lBaHFJQU5CQTNRZ0VXb3JBd0E1QXhBZ0EwR1lBV3dnQ0dvZ0ZUa0RHQ0FEUVpnQmJDQUlhaUFUT1FNQUlBTkJtQUZzSUFocUlCUTVBd2dnQTBHWUFXd2dDR3BCQURZQ0lDQURRWmdCYkNBSWFrRUFOZ0lrSUEwb0FnQWlEUTBBQ3dzZ0RDZ0NnQUVpQXdSQUlBSW9BZ3doRFNBS0tBSU1JUWdnQXlFQ0EwQWdBaWdDR0NJRFFRTjBJQTFxS3dNQUlSTWdBMEVZYkNBSWFpQVRSQUFBQUFBQUFQQS9JQk5FQUFBQUFBQUFBQUJrR3prREFDQURRUmhzSUFocVFRQTJBZ2dnQTBFWWJDQUlha0VBTmdJTUlBSW9BZ0FpQWcwQUN3c2dCeER0QXhvZ0FFUUFBQUFBQUFEd1B5QUFLQUlzRUg4NUE0QUNJQUFnRENBRklBb1F4QWdnQ2lnQ0hDRUNJQVlnQ2lnQ0dDSU5OZ0lZSUFZZ0FqWUNIQ0FDSUExcklnTkJBV29oQWlBRFFRQklCRUFnQmtFQU5nSVVJQVpCQURZQ0RDQUdRUkJxSWdKQkFEWUNBQVVnQmtFUWFpSURJQUpCR0d3UVNpSUlOZ0lBSUFoRkJFQkJ3UFFDRUVWQndQUUNFRVZCQ0JBQ0lnOUJBRFlDQUNBUFFYODJBZ1FnRDBHb09FRUFFQUVMSUFaQkFDQU5hMEVZYkNBSWFqWUNEQ0FHSUFKQkdHd2dDR29pQWpZQ0ZDQUNJQWhMQkg4Z0NpZ0NGQ0VJQTM4Z0FrRm9haUlDSUFoQmFHb2lDQ2tEQURjREFDQUNJQWdwQXdnM0F3Z2dBaUFJS1FNUU53TVFJQUlnQXlnQ0FFc05BQ0FEQ3dVZ0F3c2hBZ3NnQ2lnQ0NDRURJQVpCa09BQU5nSUFJQVpCQURZQ0JDQUdJQU0yQWdnZ0F3UkFJQVlnQXlBR0VHdzJBZ1FMSUFaQmlPZ0FOZ0lBSUFZZ0Npa0RJRGNESUNBR0lBb3BBeWczQXlnZ0JpQUtLUU13TndNd0lBd2dCU0FHSUE0Z0JDQUpFTU1JSUFaQmtPQUFOZ0lBSUFZb0FnZ2lBd1JBSUFjZ0JpZ0NCRFlDcUFVZ0N5QUhLQUtvQlRZQ0FDQURJQXNRVndzZ0FpZ0NBQkJESUFBZ0RpQUVJQWtRd2dnZ0FDQU9JQVFRNXdNZ0FDQUhFTzBET1FQZ0FpQU9LQUowSWdBRVFDQUVLQUlNSVFJZ0FTZ0NIQ0VESUFFb0FrUWhCZ05BSUFBb0FoQWlBVUdZQVd3Z0Ftb29BaUFvQWhBaURFRURkQ0FEYWlBQlFaZ0JiQ0FDYWlzREFEa0RBQ0FNUVFOMElBWnFJQUZCbUFGc0lBSnFLd01JT1FNQUlBQW9BZ0FpQUEwQUN3c0ZJQU5CQVVZRVFDQUJLQUljSUF3b0FuUW9BaEFpQUVFRGRHcEVBQUFBQUFBQUFBQTVBd0FnQVNnQ1JDQUFRUU4wYWtRQUFBQUFBQUFBQURrREFBc0xJQVJCcE9nQU5nSUFJQVJCeE9ZQU5nS01BU0FFS0FLUUFTSUFCRUJCRENBQUlBUW9BcFFCRUVnZ0JFRUFOZ0tVQVNBRVFRQTJBcEFCQ3lBRVFjVG1BRFlDZENBRUtBSjRJZ0FFUUVFTUlBQWdCQ2dDZkJCSUlBUkJBRFlDZkNBRVFRQTJBbmdMSUFSQndPZ0FOZ0prSUFRb0FtZ2lBQVJBUVJBZ0FDQUVLQUpzRUVnZ0JFRUFOZ0pzSUFSQkFEWUNhQXNnQkVHTTRRQTJBZ0FnQkNnQ0NDSUFCRUFnQnlBRUtBSUVOZ0tvQlNBTElBY29BcWdGTmdJQUlBQWdDeEJOQ3lBRUtBSVFJZ0FnQkNnQ0ZFa0Vmd05BSUFBUWdnRWdBRUdZQVdvaUFDQUVLQUlVU1EwQUN5QUVLQUlRQlNBQUN4QkRJQWxCa09BQU5nSUFJQWtvQWdnaUFBUkFJQWNnQ1NnQ0JEWUNxQVVnQ3lBSEtBS29CVFlDQUNBQUlBc1FWd3NnQ1NnQ0VCQkRJQTRRcFFFZ0NrR1E0QUEyQWdBZ0NpZ0NDQ0lBQkVBZ0J5QUtLQUlFTmdLb0JTQUxJQWNvQXFnRk5nSUFJQUFnQ3hCWEN5QUtLQUlRRUVNZ0JVR2s2QUEyQWdBZ0JVSEU1Z0EyQW93QklBVW9BcEFCSWdBRVFFRU1JQUFnQlNnQ2xBRVFTQ0FGUVFBMkFwUUJJQVZCQURZQ2tBRUxJQVZCeE9ZQU5nSjBJQVVvQW5naUFBUkFRUXdnQUNBRktBSjhFRWdnQlVFQU5nSjhJQVZCQURZQ2VBc2dCVUhBNkFBMkFtUWdCU2dDYUNJQUJFQkJFQ0FBSUFVb0Ftd1FTQ0FGUVFBMkFtd2dCVUVBTmdKb0N5QUZRWXpoQURZQ0FDQUZLQUlJSWdBRVFDQUhJQVVvQWdRMkFxZ0ZJQXNnQnlnQ3FBVTJBZ0FnQUNBTEVFMExJQVVvQWhBaUFDQUZLQUlVVHdSQUlBQVFReUFISkFRUEN3TkFJQUFRZ2dFZ0FFR1lBV29pQUNBRktBSVVTUTBBQ3lBRktBSVFFRU1nQnlRRUM5Z0NBUVYvSXdRaEFpTUVRVEJxSkFRakJDTUZUZ1JBUVRBUUFBc2dBU2dDQkNJRktBSVFJUU1nQWtFQU5nSVlJQUlnQTBGL2FqWUNIQ0FEUVFGSUJFQWdBa0VBTmdJVUlBSkJBRFlDRENBQ1FRQTJBaEFGSUFJZ0EwRURkQkJLSWdRMkFoQWdCRVVFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQmtFQU5nSUFJQVpCZnpZQ0JDQUdRYWc0UVFBUUFRc2dBaUFFTmdJTUlBSWdBMEVEZENBRWFpSUROZ0lVSUFNZ0JFc0VRQU5BSUFSRUFBQUFBQUFBOEQ4NUF3QWdCRUVJYWlJRUlBTkpEUUFMQ3dzZ0FrR1E0QUEyQWdBZ0FrRUFOZ0lFSUFJZ0JUWUNDQ0FDSUFVZ0FoQnNOZ0lFSUFKQndPVUFOZ0lBSUFKRUFBQUFBQUFBOEQ4NUF5QWdBQ0FCSUFJUXlBZ2dBa0dRNEFBMkFnQWdBaWdDQ0NJQVJRUkFJQUlvQWhBUVF5QUNKQVFQQ3lBQ0lBSW9BZ1EyQWlnZ0FrRXNhaUlCSUFJb0FpZzJBZ0FnQUNBQkVGY2dBaWdDRUJCRElBSWtCQXNTQUNBQUVPa0RJQUJGQkVBUEN5QUFFRU1MN0FJQkJYOGpCQ0VDSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQktBSUlLQUlFSWdOQkFFb0VRQ0FCS0FJTUlnVWdBMEVDZEdvaEF3TkFJQU5CZkdvaUEwRi9OZ0lBSUFNZ0JVc05BQXNMSUFKQkFEWUNEQ0FDUVg4MkFoQWdBa0VBTmdJSUlBSkJBRFlDQUNBQ1FRQTJBZ1FnQWtFQU5nSVVJQUpCQVRvQUdDQUFLQUowSWdORkJFQWdBaWdDQkJCRElBSWtCRUVBRHdzZ0F5RUFBMEFnQVNnQ0RDQUFLQUlRUVFKMGFpZ0NBRUYvUmdSQUlBSWdBQkRpQVNBQktBSU1JQUFvQWhCQkFuUnFJQVEyQWdBZ0FpZ0NGQ0lBQkVBRFFDQUNJQUJCZjJvaUFEWUNGQ0FDS0FJQUlBQkJBblJxS0FJQUtBSVlJZ1VFUUNBRklRQURRQ0FCS0FJTUlBQW9BZ2dvQWhBaUJTZ0NFRUVDZEdvaUJpZ0NBRUYvUmdSQUlBWWdCRFlDQUNBQ0lBVVE0Z0VMSUFBb0FnQWlBQTBBQ3lBQ0tBSVVJUUFMSUFBTkFBc0xJQVJCQVdvaEJBc2dBeWdDQUNJRElRQWdBdzBBQ3lBQ0tBSUVFRU1nQWlRRUlBUUxGQUFnQUVFTWFpQUJRWDlxSUFCQklHb1FqZ1lMVndFQmZ5QUJJQUFvQWh4QkFXb2dBQ2dDR0dzaUFXc2lBa1VFUUE4TElBQkJER29nQWhDRUJpQUFLQUlRSUFGcUlnRWdBQ2dDRkNJQ1R3UkFEd3NEUUNBQklBQXNBQ0E2QUFBZ0FVRUJhaUlCSUFKSERRQUxDOEFEQVFaL0l3UWhBeU1FUWRBQWFpUUVJd1FqQlU0RVFFSFFBQkFBQ3lBQUtBSjBJZ1JGQkVBZ0F5UUVRUUVQQ3lBRFFTaHFJZ0ZCQURvQUFDQURJQUFnQVJDdkFpQUFLQUp3SVFVZ0FVRUFOZ0lNSUFFZ0JVRi9hallDRUNBRlFRRklCRUFnQVVFQU5nSUlJQUZCQURZQ0FDQUJRUUEyQWdRRklBRWdCVUVDZEJCS0lnSTJBZ1FnQWdSQUlBRWdBallDQUNBQklBVkJBblFnQW1vMkFnZ0ZRY0QwQWhCRlFjRDBBaEJGUVFnUUFpSUNRUUEyQWdBZ0FrRi9OZ0lFSUFKQnFEaEJBQkFCQ3dzZ0FVRUFOZ0lVSUFGQkFUb0FHQ0FCSUFRUTRnRWdCQ2dDRUNBREtBSU1ha0VCT2dBQUlBRW9BaFFpQkFSQVFRQWhCUU5BSUFFZ0JFRi9haUlFTmdJVUlBRW9BZ0FnQkVFQ2RHb29BZ0FvQWhnaUFnUkFBMEFnQWlnQ0NDZ0NFQ0lHS0FJUUlBTW9BZ3hxSWdRc0FBQkZCRUFnQkVFQk9nQUFJQUVnQmhEaUFRc2dBaWdDQUNJQ0RRQUxJQUVvQWhRaEJBc2dCVUVCYWlFQ0lBUUVRQ0FDSVFVTUFRc0xCVUVBSVFJTElBQW9BbkFoQkNBQktBSUVFRU1nQTBHTTRRQTJBZ0FnQXlnQ0NDSUFCRUFnQXlBREtBSUVOZ0lrSUFFZ0F5Z0NKRFlDQUNBQUlBRVFUUXNnQXlnQ0VCQkRJQU1rQkNBQ0lBUkdDeGtBSUFBb0FnUW9BZ3dnQVNnQ0FDZ0NHRUVDZEdvb0FnQUx3UUlCQjM4akJDRUlJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFCUVFScUlnVW9BZ0FpQkFSQVFRZ2dCQ0FCS0FJSUVFZ2dBVUVBTmdJSUlBVkJBRFlDQUFzZ0FDZ0NnQUVpQkFSQUlBRkJDR29oQmdOQVFRZ1FTU0lIUVFBMkFnQWdCeUFFTmdJRUlBWWdCaWdDQUNBRktBSUFSU0lKR3lBSE5nSUFJQVVnQmlBSkd5QUhOZ0lBSUFRb0FnQWlCQTBBQ3lBQUtBS0FBU0lFQkVBZ0FpZ0NEQ0VKSUFNb0Fnd2hDZ05BSUFRb0FnZ29BaEFpQlNBRUtBSU1LQUlRSWdaS0lRY2dCQ2dDR0VFQ2RDQUphaUFHSUFVZ0J4czJBZ0FnQkNnQ0dFRUNkQ0FLYWlBRklBWWdCeHMyQWdBZ0JDZ0NBQ0lFRFFBTEN3c2dDRUVJYWlJRVFham5BRFlDQUNBRUlBSTJBZ1FnQ0VHbzV3QTJBZ0FnQ0NBRE5nSUVJQUVnQUNnQ0JFRi9haUFFRU93RElBRWdBQ2dDQkVGL2FpQUlFT3dESUFna0JBdGNBUUYvSUFCQmxPY0FOZ0lBSUFBb0FnUWlBVVVFUUNBQVFkQ3pBaWdDQURZQ0FFSFFzd0lnQURZQ0FBOExRUWdnQVNBQUtBSUlFRWdnQUVFQU5nSUlJQUJCQURZQ0JDQUFRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FEWUNBQXN5QVFGL0lBQkJsT2NBTmdJQUlBQW9BZ1FpQVVVRVFBOExRUWdnQVNBQUtBSUlFRWdnQUVFQU5nSUlJQUJCQURZQ0JBdFBBUU4vSUFBb0FvQUJJZ0ZGQkVBUEN3TkFJQUVvQWdBaEFpQUJLQUlJSUFFb0FneEdCRUFnQUNnQ0FDZ0NEQ0VESUFBZ0FTQURRZjhCY1VHT0Iyb1JBQUFMSUFJRVFDQUNJUUVNQVFzTEMrSUJBUU4vSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUdzNEFBMkFnQWdBQ3dBSzBFQVNBUkFJQUFvQWlBUVF3c2dBa0VFYWlFQklBQkJrT0FBTmdJQUlBQW9BZ2dpQXdSQUlBSWdBQ2dDQkRZQ0FDQUJJQUlvQWdBMkFnQWdBeUFCRUZjTElBQW9BaEFpQVNBQUtBSVVJZ05QQkVBZ0FSQkRJQUJCMExRQ0tBSUFOZ0lBUWRDMEFpQUFOZ0lBSUFJa0JBOExBMEFnQVN3QUMwRUFTQVJBSUFFb0FnQVFReUFBS0FJVUlRTUxJQUZCREdvaUFTQURTUTBBQ3lBQUtBSVFFRU1nQUVIUXRBSW9BZ0EyQWdCQjBMUUNJQUEyQWdBZ0FpUUVDNllDQVFWL0lBRkJCQ0FCUWYvL0EzRkJCRW9iUWYvL0EzRkJBMm9pQTBFQ2RpRUVJQUZCLy84RGNTSUJRUU4wUWFTakFtb2lCU2dDQUNJR1Fmdy9JQU5CL1A4SGNTSUNiaUlEU0FSQVFZREFBQkJLSWdGQi9EOXFRWUR1QWlnQ0FEWUNBRUdBN2dJZ0FUWUNBQ0FBSUFFMkFnQWdBeUVCSUFBb0FnQWhBZ05BSUFJZ0JFRUNkQ0FDYWlJQ05nSUFJQUZCZjJvaEF5QUJRUUpLQkVBZ0F5RUJEQUVMQ3lBQ1FRQTJBZ0FnQUNBQUtBSUFJZ0FvQWdBMkFnQWdBQThMSUFBZ0FVRURkRUdnb3dKcUlnUW9BZ0FpQVRZQ0FDQUVJQUpCL3g5SkJIOUJBU0VDQTM4Z0FTZ0NBQ0VCSUFKQkFXb2lBaUFEU1EwQUlBRUxCU0FCQ3lnQ0FEWUNBQ0FGSUFZZ0EyczJBZ0FnQVVFQU5nSUFJQUFnQUNnQ0FDSUFLQUlBTmdJQUlBQUxzZ0VBRUdSQnZPMENRUUEyQWdCQndPMENRUUEyQWdCQnVPMENRYnp0QWpZQ0FFSEk3UUpCQURZQ0FFSE03UUpCQURZQ0FFSEU3UUpCeU8wQ05nSUFRZFR0QWtFQU5nSUFRZGp0QWtFQU5nSUFRZER0QWtIVTdRSTJBZ0JCNE8wQ1FRQTJBZ0JCNU8wQ1FRQTJBZ0JCM08wQ1FlRHRBallDQUVIczdRSkJBRFlDQUVIdzdRSkJBRFlDQUVIbzdRSkI3TzBDTmdJQVFmanRBa0VBTmdJQVFmenRBa0VBTmdJQVFmVHRBa0g0N1FJMkFnQUwwZ01CQm44Z0FDZ0NCQ0FBS0FJQUlnRnJJZ0pGQkVBZ0FROExJQUpCQVdvaUJFVUVRRUdZN1FJb0FnQWlBMEVCYWtId0JIQWhBU0FEUVFKMFFkalpBbW9pQWlnQ0FFR0FnSUNBZUhFZ0FVRUNkRUhZMlFKcUtBSUFJZ0JCL3YvLy93ZHhja0VCZGlBRFFZMERha0h3QkhCQkFuUkIyTmtDYWlnQ0FFRUFJQUJCQVhGclFkL2hvc2g1Y1hOeklRQWdBaUFBTmdJQVFaanRBaUFCTmdJQUlBQkJDM1lnQUhNaUFFRUhkRUdBcmJIcGVYRWdBSE1pQUVFUGRFR0FnSmorZm5FZ0FITWlBRUVTZGlBQWN3OExJQVJCZjBFaFFTQWdCR2RySWdKcmRuRkZRUjkwUVI5MUlBSnFJZ0ZCSDNGQkFFY2dBVUVGZG1vaEFrRUFRWDlCSUNBQklBSnVhM1lnQWlBQlN4c2hCVUdZN1FJb0FnQWhBUU5BSUFGQkFuUkIyTmtDYWlJR0tBSUFRWUNBZ0lCNGNTQUJRUUZxUWZBRWNDSUNRUUowUWRqWkFtb29BZ0FpQTBIKy8vLy9CM0Z5UVFGMklBRkJqUU5xUWZBRWNFRUNkRUhZMlFKcUtBSUFRUUFnQTBFQmNXdEIzK0dpeUhseGMzTWhBU0FHSUFFMkFnQWdCU0FCUVF0MklBRnpJZ0ZCQjNSQmdLMng2WGx4SUFGeklnRkJEM1JCZ0lDWS9uNXhJQUZ6SWdGQkVuWWdBWE54SWdFZ0JFOEVRQ0FDSVFFTUFRc0xRWmp0QWlBQ05nSUFJQUFvQWdBZ0FXb0xiUUVDZjBIVTJRSkIxTmtDS0FJQUlnQkJBV28yQWdBZ0FFVUVRQkREQXd0QjJOa0NRZkVxTmdJQVFmRXFJUUZCQVNFQUEwQWdBRUVDZEVIWTJRSnFJQUFnQVNBQlFSNTJjMEhsa3A3Z0JteHFJZ0UyQWdBZ0FFRUJhaUlBUWZBRVJ3MEFDMEdZN1FKQkFEWUNBQXN6QUVHQTJRSkI4UElBTmdJQVFZVFpBa0dFOHdBMkFnQkJoTmtDUVFBUW1nRkJ6TmtDUVFBMkFnQkIwTmtDUVg4MkFnQUw2QUVCQVg4akJDRUFJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeEJrSUFCQkJ4Q01BVUhRMkFJZ0FDZ0NBRFlDQUVIVTJBSkRBQUNBUHpnQ0FFSFkyQUpCQVRvQUFFSFoyQUpCQURvQUFFSGEyQUpCQURvQUFDQUFRWThCRUl3QlFkellBaUFBS0FJQU5nSUFRZURZQWtFSEVJd0JRZVRZQWtFQk5nSUFJQUJCQnhDTUFVSG8yQUlnQUNnQ0FEWUNBRUhzMkFKREFBQ0FQemdDQUVIdzJBSkJBVG9BQUVIeDJBSkJBRG9BQUVIeTJBSkJBRG9BQUNBQVFUVVFqQUVnQUVHUEFSQ01BVUgwMkFJZ0FDZ0NBRFlDQUVINDJBSkJCeENNQVVIODJBSkJBRFlDQUNBQUpBUUw5Z0VCQm53Z0FDc0RHQ0lFSUFBckF3Z2lCYUVpQTBHZzB3SXJBd0FpQmtRQUFBQUFBQUFBQUtCaklBTkVBQUFBQUFBQUFBQWdCcUZrY1FSQUlBSkVBQUFBQUFBQUFBQTVBd0JCQWtFQUlBQXJBd2dnQVdFYkR3c2dBaUFFSUFHaElBQXJBeENpSUFVZ0FhRWdBQ3NESUtLaElBT2pJZ2c1QXdBZ0FDc0RJQ0VESUFBckF4QWhCQ0FBS3dNWUlnVWdBQ3NEQ0NJR0lBWWdCV01iUWFEVEFpc0RBQ0lIb0NBQlpDQUZJQVlnQlNBR1l4c2dCNkVnQVdOeEJFQWdDQ0FISUFNZ0JDQUVJQU5qRzZCalJTQUlJQU1nQkNBRElBUmpHeUFIb1dSRmNrVUVRRUVCRHdzTElBSkVBQUFBQUFBQUFBQTVBd0JCQUF2MkFRRUdmQ0FBS3dNZ0lnUWdBQ3NERUNJRm9TSURRYURUQWlzREFDSUdSQUFBQUFBQUFBQUFvR01nQTBRQUFBQUFBQUFBQUNBR29XUnhCRUFnQWtRQUFBQUFBQUFBQURrREFFRUNRUUFnQUNzREVDQUJZUnNQQ3lBQ0lBUWdBYUVnQUNzRENLSWdCU0FCb1NBQUt3TVlvcUVnQTZNaUNEa0RBQ0FBS3dNZ0lRTWdBQ3NERUNFRUlBZ2dBQ3NER0NJRklBQXJBd2dpQmlBR0lBVmpHMEdnMHdJckF3QWlCNkJqSUFnZ0JTQUdJQVVnQm1NYklBZWhaSEVFUUNBSElBTWdCQ0FFSUFOakc2QWdBV1JGSUFNZ0JDQURJQVJqR3lBSG9TQUJZMFZ5UlFSQVFRRVBDd3NnQWtRQUFBQUFBQUFBQURrREFFRUFDK29DQWdGL0Izd0NRQUpBSUFFckF3QWlDQ0FBS3dNSUlnZEJvTk1DS3dNQUlnT2dZeUFJSUFjZ0E2RmtjU0lDUlEwQUlBRXJBd2dpQlNBRElBQXJBeEFpQktCaklBVWdCQ0FEb1dSeFJRMEFJQUFyQXhnaEJRd0JDeUFJSUFNZ0FDc0RHQ0lGb0dNZ0NDQUZJQU9oWkhFRVFDQUJLd01JSWdRZ0F5QUFLd01nSWdhZ1l5QUVJQVlnQTZGa2NRMEJDeUFGSUFlaElnUWdBMFFBQUFBQUFBQUFBS0JqSUFSRUFBQUFBQUFBQUFBZ0E2RmtjUVJBSUFJTkFVRUFEd3NnQ0NBSG9TSUdSQUFBQUFBQUFBQUFZUVJBUVFBUEN5QUFLd01nSUFBckF4QWlDYUVnQktNaUJDQURJQUVyQXdnZ0NhRWdCcU1pQnFCaklBUWdCaUFEb1dSeFJRUkFRUUFQQ3dzZ0FDc0RJQ0VFSUFBckF4QWhCaUFJSUFNZ0JTQUhJQWNnQldNYm9HTWdDQ0FGSUFjZ0JTQUhZeHNnQTZGa2NVVUVRRUVBRHdzZ0FTc0RDQ0lGSUFRZ0JpQUVJQVpqR3lBRG9XUkZCRUJCQUE4TElBVWdBeUFFSUFZZ0JpQUVZeHVnWXd1V0JBSUJmd3A4SUFFckF4Z2dBU3NEQ0NJRW9TSUlRYURUQWlzREFDSUhSQUFBQUFBQUFBQUFvQ0lLWXlBSVJBQUFBQUFBQUFBQUlBZWhJZ3RrY1NFRElBQXJBeGdnQUNzRENDSUZvU0lHSUFwaklBWWdDMlJ4QkVBZ0EwVUVRQ0FCS3dNZ0lBRXJBeEFpQjZFZ0NLTWhCaUFDSUFVNUF3QWdBaUFGSUFhaUlBY2dCQ0FHb3FHZ09RTUlRUUVQQ3lBQVFRaHFJZ01nQWtjRVFDQUNJQVU1QXdBZ0FpQUFLd01RT1FNSUlBRXJBd2doQkNBREt3TUFJUVVMUVFKQkFDQUZJQWNnQktCaklBVWdCQ0FIb1dSeEd3OExJQU1FUUNBQUt3TWdJQUFyQXhBaUI2RWdCcU1oQmlBQ0lBUTVBd0FnQWlBRUlBYWlJQWNnQlNBR29xR2dPUU1JUVFFUEN5QUFLd01nSUFBckF4QWlES0VnQnFNaUNTQUhJQUVyQXlBZ0FTc0RFQ0lOb1NBSW95SUlvR01nQ1NBSUlBZWhaSEZGQkVBZ0FpQU5JQVFnQ0tLaElBd2dCU0FKb3FFaUJhRWdDU0FJb2FNaUJEa0RBQ0FDSUFrZ0JLSWdCYUE1QXdoQkFROExJQUJCQ0dvZ0FrY0VRQ0FDSUFVNUF3QWdBaUFNT1FNSUlBQXJBd2dpQkNFRklBQXJBeGdnQktFaEJndEJBa0VBSUFZZ0NtTWdCaUFMWkhFRWZFVC8vLy8vLy8vdmZ3VWdBQ3NERUNJRUlBVWdBQ3NESUNBRW9TQUdvNktoQ3lJRklBY2dBU3NER0NBQkt3TUlJZ2FoSWdRZ0NtTWdCQ0FMWkhFRWZFVC8vLy8vLy8vdmZ3VWdBU3NERUNJSklBWWdBU3NESUNBSm9TQUVvNktoQ3lJRW9HTWdCU0FFSUFlaFpIRWJDd1lBUVJrUU1Bc0dBRUVZRURFTEJnQkJGUkEwQ3dZQVFSUVFOUXRjQVFGL0lBQkI3T1lBTmdJQUlBQW9BZ1FpQVVVRVFDQUFRZEN6QWlnQ0FEWUNBRUhRc3dJZ0FEWUNBQThMUVF3Z0FTQUFLQUlJRUVnZ0FFRUFOZ0lJSUFCQkFEWUNCQ0FBUWRDekFpZ0NBRFlDQUVIUXN3SWdBRFlDQUFzR0FFRVRFRFlMQmdCQkVoQTRDd1lBUVJFUU9Rc0lBRUVPRUR4Q0FBdGNBUUYvSUFCQjdPWUFOZ0lBSUFBb0FnUWlBVVVFUUNBQVFlQ3pBaWdDQURZQ0FFSGdzd0lnQURZQ0FBOExRUXdnQVNBQUtBSUlFRWdnQUVFQU5nSUlJQUJCQURZQ0JDQUFRZUN6QWlnQ0FEWUNBRUhnc3dJZ0FEWUNBQXNJQUVFREVDWkJBQXNQQUVFQUVFSkVBQUFBQUFBQUFBQUxNZ0VCZnlBQVFlem1BRFlDQUNBQUtBSUVJZ0ZGQkVBUEMwRU1JQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRTFhBRUJmeUFBUWNUbUFEWUNBQ0FBS0FJRUlnRkZCRUFnQUVIUXN3SW9BZ0EyQWdCQjBMTUNJQUEyQWdBUEMwRU1JQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRZ0FFSFFzd0lvQWdBMkFnQkIwTE1DSUFBMkFnQUxFUUFnQVNBQVFmOERjVUdFQTJvUkFRQUxEZ0FnQUVFRGNVR0FBMm9SRUFBTFhBRUJmeUFBUWNUbUFEWUNBQ0FBS0FJRUlnRkZCRUFnQUVIZ3N3SW9BZ0EyQWdCQjRMTUNJQUEyQWdBUEMwRU1JQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRZ0FFSGdzd0lvQWdBMkFnQkI0TE1DSUFBMkFnQUxNZ0VCZnlBQVFjVG1BRFlDQUNBQUtBSUVJZ0ZGQkVBUEMwRU1JQUVnQUNnQ0NCQklJQUJCQURZQ0NDQUFRUUEyQWdRTGJ3RUNmeUFBSUFFb0FnaEJBQkIxQkVBZ0FTQUNJQU1RaXdJRkFrQWdBRUVRYWlBQUtBSU1JZ1JCQTNScUlRVWdBRUVRYWlBQklBSWdBeEQwQXlBRVFRRktCRUFnQUVFWWFpRUFBMEFnQUNBQklBSWdBeEQwQXlBQkxBQTJEUUlnQUVFSWFpSUFJQVZKRFFBTEN3c0xDOWNFQVFOL0lBQWdBU2dDQ0NBRUVIVUVRQ0FDSUFFb0FnUkdCRUFnQVNnQ0hFRUJSd1JBSUFFZ0F6WUNIQXNMQlFKQUlBQWdBU2dDQUNBRUVIVkZCRUFnQUNnQ0RDRUZJQUJCRUdvZ0FTQUNJQU1nQkJEOEFTQUZRUUZNRFFFZ0FFRVFhaUFGUVFOMGFpRUdJQUJCR0dvaEJTQUFLQUlJSWdCQkFuRkZCRUFnQVNnQ0pFRUJSd1JBSUFCQkFYRkZCRUFEUUNBQkxBQTJEUVVnQVNnQ0pFRUJSZzBGSUFVZ0FTQUNJQU1nQkJEOEFTQUZRUWhxSWdVZ0Jra05BQXdGQUFzQUN3TkFJQUVzQURZTkJDQUJLQUlrUVFGR0JFQWdBU2dDR0VFQlJnMEZDeUFGSUFFZ0FpQURJQVFRL0FFZ0JVRUlhaUlGSUFaSkRRQUxEQU1MQ3dOQUlBRXNBRFlOQWlBRklBRWdBaUFESUFRUS9BRWdCVUVJYWlJRklBWkpEUUFMREFFTElBRW9BaEFnQWtjRVFDQUJLQUlVSUFKSEJFQWdBU0FETmdJZ0lBRW9BaXhCQkVjRVFDQUFRUkJxSUFBb0FneEJBM1JxSVFkQkFDRURJQUJCRUdvaEJpQUJBbjhDUUFOQUFrQWdCaUFIVHcwQUlBRkJBRG9BTkNBQlFRQTZBRFVnQmlBQklBSWdBa0VCSUFRUXR3SWdBU3dBTmcwQUlBRXNBRFVFUUFKQUlBRXNBRFJGQkVBZ0FDZ0NDRUVCY1FSQVFRRWhCUXdDQlF3R0N3QUxJQUVvQWhoQkFVWUVRRUVCSVFNTUJRc2dBQ2dDQ0VFQ2NRUi9RUUVoQlVFQkJVRUJJUU1NQlFzaEF3c0xJQVpCQ0dvaEJnd0JDd3NnQlFSL0RBRUZRUVFMREFFTFFRTUxOZ0lzSUFOQkFYRU5Bd3NnQVNBQ05nSVVJQUVnQVNnQ0tFRUJhallDS0NBQktBSWtRUUZIRFFJZ0FTZ0NHRUVDUncwQ0lBRkJBVG9BTmd3Q0N3c2dBMEVCUmdSQUlBRkJBVFlDSUFzTEN3dm1BZ0VIZnlBQUlBRW9BZ2dnQlJCMUJFQWdBU0FDSUFNZ0JCQ0tBZ1VDZnlBQkxBQTBJUXdnQVN3QU5TRUpJQUJCRUdvZ0FDZ0NEQ0lJUVFOMGFpRUxJQUZCQURvQU5DQUJRUUE2QURVZ0FFRVFhaUFCSUFJZ0F5QUVJQVVRdHdJZ0RBc2dBU3dBTkNJS2NpRUhJQWtnQVN3QU5TSUpjaUVHSUFoQkFVb0Vmd0ovSUFCQkdHb2hDQU4vSUFaQkFYRWhCaUFIUVFGeElRY2dBU3dBTmdSQUlBY2hBaUFHREFJTElBcEIvd0Z4QkVBZ0FTZ0NHRUVCUmdSQUlBY2hBaUFHREFNTElBQW9BZ2hCQW5GRkJFQWdCeUVDSUFZTUF3c0ZJQWxCL3dGeEJFQWdBQ2dDQ0VFQmNVVUVRQ0FISVFJZ0Jnd0VDd3NMSUFGQkFEb0FOQ0FCUVFBNkFEVWdDQ0FCSUFJZ0F5QUVJQVVRdHdJZ0FTd0FOQ0lLSUFkeUlRY2dBU3dBTlNJSklBWnlJUVlnQ0VFSWFpSUlJQXRKRFFBZ0J5RUNJQVlMQ3dVZ0J5RUNJQVlMSVFBZ0FTQUNRZjhCY1VFQVJ6b0FOQ0FCSUFCQi93RnhRUUJIT2dBMUN3c0tBQ0FBSUFGQkFCQjFDOVFCQUNBQUlBRTJBZ0FnQUNBQ05nSUVJQUJCQ0dvaUFTQUJRUXhxSWdJMkFnQWdBU0FDTmdJRUlBRWdBVUdNQVdvMkFnZ2dBRUdVQVdvaUFTQUJRUXhxSWdJMkFnQWdBU0FDTmdJRUlBRWdBVUdNQVdvMkFnZ2dBRUdnQW1vaUFTQUJRUXhxSWdJMkFnQWdBU0FDTmdJRUlBRWdBVUVzYWpZQ0NDQUFRY3dDYWlJQklBRkJER29pQWpZQ0FDQUJJQUkyQWdRZ0FTQUJRUnhxTmdJSUlBQkJBVG9BNkFJZ0FFRUFPZ0RwQWlBQVFRQTZBT29DSUFCQjhBSnFJZ0JCQURZQ0FDQUFRUUEyQWdRZ0FFR0FJR29nQURZQ0FBdHJBUVYvSUFBb0FnUW9Bb0FCSWdKRkJFQVBDd05BSUFBb0Fwd0ZJZ01nQWlnQ0dDSUJRUVIwYWtFQU5nSU1JQUZCQkhRZ0Eyb2lCQ2dDQkNJRkJFQkJHQ0FGSUFGQkJIUWdBMm9pQVNnQ0NCQklJQUZCQURZQ0NDQUVRUUEyQWdRTElBSW9BZ0FpQWcwQUN3dFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRZG1oQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRZENoQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRY0toQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRYStoQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRWlNoQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdHJBUU4vSXdRaEFpTUVRU0JxSkFRakJDTUZUZ1JBUVNBUUFBc2dBa0VJYWlJRVFieWdBaEJFSUFKQkVHb2lBeUFFS1FJQU53SUFJQUVnQXhCSElBQW9BZ2dnQVJCV0lBSkIxYUFDRUVRZ0F5QUNLUUlBTndJQUlBRWdBeEJISUFBb0Fnd2dBUkJXSUFJa0JBcytBQ0FBUVp5TEFUWUNBQ0FBUVJVNkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVIMG9RRTJBZ0FnQUNBQk5nSUlJQUFnQWpZQ0RBdFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRWk9nQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRWUdnQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdFFBUUovSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNRZXVmQWhCRUlBRW9BZ0FoQVNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FBSUFNZ0FSQ05BU0FDSkFRZ0FBdTRBUUVEZnlNRUlRSWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCcU9FQU5nSUFJQUFzQUN0QkFFZ0VRQ0FBS0FJZ0VFTUxJQUpCQkdvaEFTQUFRWXpoQURZQ0FDQUFLQUlJSWdNRVFDQUNJQUFvQWdRMkFnQWdBU0FDS0FJQU5nSUFJQU1nQVJCTkN5QUFLQUlRSWdFZ0FDZ0NGQ0lEVHdSQUlBRVFReUFDSkFRUEN3TkFJQUVzQUF0QkFFZ0VRQ0FCS0FJQUVFTWdBQ2dDRkNFREN5QUJRUXhxSWdFZ0Ewa05BQXNnQUNnQ0VCQkRJQUlrQkF0UUFRSi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVVFRXdoQUNBQ1FkZWZBaEJFSUFFb0FnQWhBU0FDUVFocUlnTWdBaWtDQURjQ0FDQUFJQU1nQVJDTkFTQUNKQVFnQUF0UUFRSi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVVFRXdoQUNBQ1FiNmZBaEJFSUFFb0FnQWhBU0FDUVFocUlnTWdBaWtDQURjQ0FDQUFJQU1nQVJDTkFTQUNKQVFnQUF0TUFRSi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FrSGVuZ0lRUkNBQ1FRaHFJZ01nQWlrQ0FEY0NBQ0FCSUFNUVJ5QUFRUWhxSUFFUWZTQUJRZDBBRUdzZ0FpUUVDM1VCQVg4akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVJBUVRDRUFJQUlnQVNrQ0FEY0RBQ0FDSUFJcEFnQTNBZ2dnQUVHY2l3RTJBZ0FnQUVFSk9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQnlLRUJOZ0lBSUFBZ0Fpa0NDRGNDQ0NBQ0pBUWdBQXYwQWdFRWZ5TUVJUVFqQkVGQWF5UUVJd1FqQlU0RVFFSEFBQkFBQ3lBRVFUQnFJZ0pCNHZrQkVFUWdCRUU0YWlJRElBSXBBZ0EzQWdBZ0FTQURFRWNnQUVFUWFpQUJFSDBnQkVFb2FpSUNRZDc1QVJCRUlBTWdBaWtDQURjQ0FDQUJJQU1RUnlBQUtBSUlJZ0lFUUNBQ0tBSUFLQUlVSVFVZ0FpQUJJQVZCL3dGeFFZNEhhaEVBQUFzZ0JFRWdhaUVGSUFBb0Fod2lBa0VCY1FSQUlBVkJ3Wm9DRUVRZ0F5QUZLUUlBTndJQUlBRWdBeEJISUFBb0Fod2hBZ3NnQkVFWWFpRUZJQUpCQW5FRVFDQUZRY2lhQWhCRUlBTWdCU2tDQURjQ0FDQUJJQU1RUnlBQUtBSWNJUUlMSUFSQkVHb2hCU0FDUVFSeEJFQWdCVUhTbWdJUVJDQURJQVVwQWdBM0FnQWdBU0FERUVjTElBUkJDR29oQWdKQUFrQUNRQ0FBTEFBZ1FRRnJEZ0lBQVFJTElBSkJpNXdDRUVRZ0F5QUNLUUlBTndJQUlBRWdBeEJIREFFTElBUkJqcHdDRUVRZ0F5QUVLUUlBTndJQUlBRWdBeEJIQ3lBQUtBSVlJZ0FFUUNBQUlBRVFWZ3NnQkNRRUMzb0JCSDhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNRUWhxSVFNZ0FDZ0NDQ0lFQkVBZ0JDZ0NBQ2dDRUNFRklBUWdBU0FGUWY4QmNVR09CMm9SQUFBZ0FDZ0NDQ0FCRU1JQlJRUkFJQUpCNFBrQkVFUWdBeUFDS1FJQU53SUFJQUVnQXhCSEN3c2dBQ2dDRENBQkVGWWdBaVFFQzEwQUlBQkJuSXNCTmdJQUlBQkJFam9BQkNBQVFRQTZBQVVnQUVFQk9nQUdJQUJCQURvQUJ5QUFRWnloQVRZQ0FDQUFJQUUyQWdnZ0FDQUNOZ0lNSUFBZ0F5a0NBRGNDRUNBQUlBUTJBaGdnQUNBRk5nSWNJQUFnQmpvQUlBdDJBUUYvSXdRaEJ5TUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVrRUV3aEFDQUJLQUlBSVFFZ0FpZ0NBQ0VDSUFjZ0F5a0NBRGNEQUNBRUtBSUFJUU1nQlNnQ0FDRUVJQVlzQUFBaEJTQUhRUWhxSWdZZ0J5a0NBRGNDQUNBQUlBRWdBaUFHSUFNZ0JDQUZFSWdKSUFja0JDQUFDMjhCQTM4akJDRUJJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFCUVFScUlRSWdBRUdNNFFBMkFnQWdBQ2dDQ0NJREJFQWdBU0FBS0FJRU5nSUFJQUlnQVNnQ0FEWUNBQ0FESUFJUVRRc2dBQ2dDRUJCRElBQkJ3TFFDS0FJQU5nSUFRY0MwQWlBQU5nSUFJQUVrQkF1WEFRRUZmeUFBUWN3Q2FpSURJZ0lvQWdRZ0FpZ0NBR3RCQW5VaEJDQUFRYUFDYWlFQ0lBRW9BZ3dpQVNFQUFuOENRQU4vSUFBZ0JFOE5BU0FES0FJQUlBQkJBblJxS0FJQUlnVW9BZ2dpQmlBQ0tBSUVJQUlvQWdCclFRSjFTUVIvSUFVZ0FpZ0NBQ0FHUVFKMGFpZ0NBRFlDRENBQVFRRnFJUUFNQVFWQkFRc0xEQUVMSUFNZ0F5Z0NBQ0FCUVFKMGFqWUNCRUVBQ3dzekFDQUFRUUE2QUFBZ0FFRUFPZ0FCSUFCQkFEWUNCQ0FBUVFBNkFBZ2dBQ0FCS0FMUUFpQUJLQUxNQW10QkFuVTJBZ3dMeEFjQkJuOGpCQ0VESXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBRFFRaHFJUUlDZndKQUFrQUNRQ0FBS0FJRUlBQW9BZ0FpQVd0QkFFc0VmeUFCTEFBQUJVRUFDMEVZZEVFWWRVSEhBR3NPRGdFQ0FnSUNBZ0lDQWdJQ0FnSUFBZ3NDUUFKQUFrQUNRQUpBQWtBQ1FBSkFBa0FnQUNnQ0JDQUFLQUlBSWdGclFRRkxCSDhnQVN3QUFRVkJBQXRCR0hSQkdIVkJ3d0JyRGlFRkNBZ0lDQWNDQ0FnSUNBZ0lDQWdJQXdFSUFBWUlDQWdJQ0FnSUNBZ0lDQVFJQ3lBQUlBQW9BZ0JCQW1vMkFnQWdBaUFBRUYwaUFUWUNBQ0FCQkg4Z0FFSHdBbW9nQWhEM0NBVkJBQXNNQ2dzZ0FDQUFLQUlBUVFKcU5nSUFJQUlnQUJCZElnRTJBZ0FnQVFSL0lBQkI4QUpxSUFJUStBZ0ZRUUFMREFrTElBQWdBQ2dDQUVFQ2FqWUNBQ0FDSUFBUVhTSUJOZ0lBSUFFRWZ5QUFRZkFDYWlBQ0VQa0lCVUVBQ3d3SUN5QUFJQUFvQWdCQkFtbzJBZ0FnQWlBQUVGMGlBVFlDQUNBQkJIOGdBRUh3QW1vZ0FoRDZDQVZCQUFzTUJ3c2dBQ0FBS0FJQVFRSnFOZ0lBUVFBZ0FCQzRBZzBHR2tFQUlBQVF1QUlOQmhvZ0FpQUFFS2NCSWdFMkFnQWdBUVIvSUFCQjhBSnFJQUlRK3dnRlFRQUxEQVlMSUFBZ0FDZ0NBRUVDYWpZQ0FDQUNJQUFRWFNJQk5nSUFJQUVFZndKL0lBTWdBRUVCRUhSQkFDQURLQUlBSUFNb0FnUkdEUUFhSUFCQjN3QVFUd1IvSUFNZ0FCQmRJZ0UyQWdBZ0FRUi9JQUJCOEFKcVFSQVFUQ0lBSUFNb0FnQWdBaWdDQUJEOUNDQUFCVUVBQ3dWQkFBc0xCVUVBQ3d3RkN5QUFJQUFvQWdCQkFtbzJBZ0FnQWlBQVFRQVFvQUVpQVRZQ0FDQUJCSDhnQUVHY253SWdBaERYQWdWQkFBc01CQXNnQUNBQUtBSUFRUUpxTmdJQUlBSWdBRUVBRUtBQklnRTJBZ0FnQVFSL0lBQkI4QUpxSUFJUS9nZ0ZRUUFMREFNTElBQWdBQ2dDQUVFQmFqWUNBQUovSUFBb0FnUWdBQ2dDQUNJQmEwRUFTd1IvSUFFc0FBQUZRUUFMSVFWQkFDQUFFTGdDRFFNYUlBVUxRZjhCY1VIMkFFWWhBU0FDSUFBUXB3RWlCRFlDQUNBRUJIOGdBUVIvSUFCQjhBSnFJQUlRL3dnRklBQkI4QUpxSUFJUWdBa0xCVUVBQ3d3Q0N3SkFBa0FDUUNBQUtBSUVJQUFvQWdBaUFXdEJBVXNFZnlBQkxBQUJCVUVBQzBFWWRFRVlkVUhTQUdzT0JRSUJBUUVBQVFzZ0FDQUFLQUlBUVFKcU5nSUFJQUlnQUVFQUVLQUJJZ0UyQWdBZ0FRUi9JQUJCOEFKcUlBSVFnZ2tGUVFBTERBTUxRUUFNQWdzZ0FDQUFLQUlBUVFKcU5nSUFJQUlnQUVFQUVLQUJJZ0UyQWdBZ0FRUi9JQUFnQXhEU0FpQUFRZDhBRUU5eUJIOGdBRUh3QW1vZ0FoQ0RDUVZCQUFzRlFRQUxEQUVMUVFBTElRWWdBeVFFSUFZTGdRRUJBMzhqQkNFQ0l3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUFLQUlJSUFFUVZpQUNRUkJxSWdSQnJJOENFRVFnQWtFWWFpSURJQVFwQWdBM0FnQWdBU0FERUVjZ0FpQUFLUUlNTndNQUlBTWdBaWtDQURjQ0FDQUJJQU1RUnlBQ1FRaHFJZ0JCM3ZrQkVFUWdBeUFBS1FJQU53SUFJQUVnQXhCSElBSWtCQXRCQUNBQVFaeUxBVFlDQUNBQVFRRTZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFSHdvQUUyQWdBZ0FDQUJOZ0lJSUFBZ0Fpa0NBRGNDREF0U0FRRi9Jd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVVFRXdoQUNBQktBSUFJUUVnQXlBQ0tRSUFOd01BSUFOQkNHb2lBaUFES1FJQU53SUFJQUFnQVNBQ0VJOEpJQU1rQkNBQUMwY0JBbjhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNJQUFwQWdnM0F3QWdBa0VJYWlJRElBSXBBZ0EzQWdBZ0FTQURFRWNnQUNnQ0VDQUJFRllnQWlRRUMwNEJBWDhqQkNFREl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUlFRVENFQUlBTWdBUkJFSUFJb0FnQWhBU0FEUVFocUlnSWdBeWtDQURjQ0FDQUFJQUlnQVJDTkFTQURKQVFnQUF0aUFRTi9Jd1FoQWlNRVFTQnFKQVFqQkNNRlRnUkFRU0FRQUFzZ0FrRUlhaUlFUVlPZEFoQkVJQUpCRUdvaUF5QUVLUUlBTndJQUlBRWdBeEJISUFBb0FnZ2dBUkJXSUFKQjN2a0JFRVFnQXlBQ0tRSUFOd0lBSUFFZ0F4QkhJQUlrQkF0TUFRRi9JQUJCREJCTUlnSWhBQ0FCS0FJQUlRRWdBRUdjaXdFMkFnQWdBRUVRT2dBRUlBQkJBVG9BQlNBQVFRRTZBQVlnQUVFQk9nQUhJQUJCbUtBQk5nSUFJQUFnQVRZQ0NDQUNDMHNCQW44akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFDUWNPY0FoQkVJQUpCQ0dvaUF5QUNLUUlBTndJQUlBRWdBeEJISUFCQkNHb2dBUkI5SUFGQktSQnJJQUlrQkF0MUFRRi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVFFRXdoQUNBQ0lBRXBBZ0EzQXdBZ0FpQUNLUUlBTndJSUlBQkJuSXNCTmdJQUlBQkJFVG9BQkNBQVFRRTZBQVVnQUVFQk9nQUdJQUJCQVRvQUJ5QUFRZXlmQVRZQ0FDQUFJQUlwQWdnM0FnZ2dBaVFFSUFBTDlnSUJCWDhqQkNFRUl3UkJRR3NrQkNNRUl3Vk9CRUJCd0FBUUFBc2dCRUVnYWlFRklBUkJNR29pQWtIaStRRVFSQ0FFUVRocUlnTWdBaWtDQURjQ0FDQUJJQU1RUnlBQVFReHFJQUVRZlNBRVFTaHFJZ0pCM3ZrQkVFUWdBeUFDS1FJQU53SUFJQUVnQXhCSElBQW9BZ2dpQWlnQ0FDZ0NGQ0VHSUFJZ0FTQUdRZjhCY1VHT0Iyb1JBQUFnQUNnQ0ZDSUNRUUZ4QkVBZ0JVSEJtZ0lRUkNBRElBVXBBZ0EzQWdBZ0FTQURFRWNnQUNnQ0ZDRUNDeUFFUVJocUlRVWdBa0VDY1FSQUlBVkJ5Sm9DRUVRZ0F5QUZLUUlBTndJQUlBRWdBeEJISUFBb0FoUWhBZ3NnQkVFUWFpRUZJQUpCQkhFRVFDQUZRZEthQWhCRUlBTWdCU2tDQURjQ0FDQUJJQU1RUndzZ0JFRUlhaUVDQWtBQ1FBSkFJQUFzQUJoQkFXc09BZ0FCQWdzZ0FrR0xuQUlRUkNBRElBSXBBZ0EzQWdBZ0FTQURFRWNNQVFzZ0JFR09uQUlRUkNBRElBUXBBZ0EzQWdBZ0FTQURFRWNMSUFBb0Fod0VRQ0FCUVNBUWF5QUFLQUljSUFFUVZnc2dCQ1FFQzF3QkFuOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQUtBSUlJZ0FvQWdBb0FoQWhBeUFBSUFFZ0EwSC9BWEZCamdkcUVRQUFJQUpCNFBrQkVFUWdBa0VJYWlJQUlBSXBBZ0EzQWdBZ0FTQUFFRWNnQWlRRUMxWUFJQUJCbklzQk5nSUFJQUJCRHpvQUJDQUFRUUE2QUFVZ0FFRUJPZ0FHSUFCQkFEb0FCeUFBUWNDZkFUWUNBQ0FBSUFFMkFnZ2dBQ0FDS1FJQU53SU1JQUFnQXpZQ0ZDQUFJQVE2QUJnZ0FDQUZOZ0ljQzIwQkFYOGpCQ0VHSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFTQVFUQ0VBSUFFb0FnQWhBU0FHSUFJcEFnQTNBd0FnQXlnQ0FDRUNJQVFzQUFBaEF5QUZLQUlBSVFRZ0JrRUlhaUlGSUFZcEFnQTNBZ0FnQUNBQklBVWdBaUFESUFRUW1Ra2dCaVFFSUFBTGdRRUJBMzhqQkNFQ0l3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUFLQUlJSUFFUVZpQUNRUkJxSWdSQm1Qc0JFRVFnQWtFWWFpSURJQVFwQWdBM0FnQWdBU0FERUVjZ0FpQUFLUUlNTndNQUlBTWdBaWtDQURjQ0FDQUJJQU1RUnlBQ1FRaHFJZ0JCcmZvQkVFUWdBeUFBS1FJQU53SUFJQUVnQXhCSElBSWtCQXRCQUNBQVFaeUxBVFlDQUNBQVFRbzZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFR1Vud0UyQWdBZ0FDQUJOZ0lJSUFBZ0Fpa0NBRGNDREF0U0FRRi9Jd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVVFRXdoQUNBQktBSUFJUUVnQXlBQ0tRSUFOd01BSUFOQkNHb2lBaUFES1FJQU53SUFJQUFnQVNBQ0VKd0pJQU1rQkNBQUMyUUJBMzhqQkNFQ0l3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUFLQUlJSUFFUVZpQUNRUWhxSWdSQjRQa0JFRVFnQWtFUWFpSURJQVFwQWdBM0FnQWdBU0FERUVjZ0FpQUFLUUlNTndNQUlBTWdBaWtDQURjQ0FDQUJJQU1RUnlBQ0pBUUxRUUFnQUVHY2l3RTJBZ0FnQUVFQ09nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQjZKNEJOZ0lBSUFBZ0FUWUNDQ0FBSUFJcEFnQTNBZ3dMVWdFQmZ5TUVJUU1qQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQkZCQk1JUUFnQVNnQ0FDRUJJQU1nQWlrQ0FEY0RBQ0FEUVFocUlnSWdBeWtDQURjQ0FDQUFJQUVnQWhDZkNTQURKQVFnQUF1bkFRRUVmeU1FSVFJakJFRWdhaVFFSXdRakJVNEVRRUVnRUFBTElBSkJHR29oQXlBQ1FSQnFJUVFnQUNnQ0NDSUZRUUZ4QkVBZ0JFSEJtZ0lRUkNBRElBUXBBZ0EzQWdBZ0FTQURFRWNnQUNnQ0NDRUZDeUFDUVFocUlRUWdCVUVDY1FSQUlBUkJ5Sm9DRUVRZ0F5QUVLUUlBTndJQUlBRWdBeEJISUFBb0FnZ2hCUXNnQlVFRWNRUkFJQUpCMHBvQ0VFUWdBeUFDS1FJQU53SUFJQUVnQXhCSEN5QUNKQVFMSkFFQmZ5QUFLQUlNSWdBb0FnQW9BaFFoQWlBQUlBRWdBa0gvQVhGQmpnZHFFUUFBQ3lzQkFuOGdBQ2dDRENJQ0tBSUFLQUlRSVFNZ0FpQUJJQU5CL3dGeFFZNEhhaEVBQUNBQUlBRVFvUWtMREFBZ0FDZ0NEQ0FCRUpNQkN3d0FJQUFvQWd3Z0FSQ0pBUXRWQVFOL0lBRXNBQVVoQXlBQkxBQUdJUVFnQVN3QUJ5RUZJQUJCbklzQk5nSUFJQUJCQXpvQUJDQUFJQU02QUFVZ0FDQUVPZ0FHSUFBZ0JUb0FCeUFBUWJ5ZUFUWUNBQ0FBSUFJMkFnZ2dBQ0FCTmdJTUMwY0JBbjhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUkFRVENFQUlBRkJnUHdCRUVRZ0FVRUlhaUlDSUFFcEFnQTNBZ0FnQUNBQ0VMQUJJQUVrQkNBQUMwY0JBbjhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUkFRVENFQUlBRkJwSm9DRUVRZ0FVRUlhaUlDSUFFcEFnQTNBZ0FnQUNBQ0VMQUJJQUVrQkNBQUMwY0JBbjhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUkFRVENFQUlBRkJuWm9DRUVRZ0FVRUlhaUlDSUFFcEFnQTNBZ0FnQUNBQ0VMQUJJQUVrQkNBQUMwVUJBWDhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUkFRVENFQUlBSWdBUkJFSUFKQkNHb2lBU0FDS1FJQU53SUFJQUFnQVJDd0FTQUNKQVFnQUF0SkFRRi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVFFRXdoQUNBQ0lBRXBBZ0EzQXdBZ0FrRUlhaUlCSUFJcEFnQTNBZ0FnQUNBQkVMQUJJQUlrQkNBQUMzOEJBMzhqQkNFQ0l3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUNRUkJxUWRHWkFoQkVJQUpCR0dvaUF5QUNLUUlRTndJQUlBRWdBeEJISUFBb0Fnd2hCQ0FDSUFBb0FnZzJBZ2dnQWlBRU5nSU1JQU1nQWlrQ0NEY0NBQ0FCSUFNUVJ5QUNRZlQyQVJCRUlBTWdBaWtDQURjQ0FDQUJJQU1RUnlBQ0pBUUxqZ0VCQVg4akJDRUNJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDeUFBUVJBUVRDRUFJQUlnQVNrQ0FEY0RBQ0FDUVJCcUlnRWdBaWtDQURjQ0FDQUNRUWhxSUFFUXVRSWdBU0FDS1FJSU53SUFJQUJCbklzQk5nSUFJQUJCR2pvQUJDQUFRUUU2QUFVZ0FFRUJPZ0FHSUFCQkFUb0FCeUFBUVpDZUFUWUNBQ0FBSUFFcEFnQTNBZ2dnQWlRRUlBQUxXUUVCZnlNRUlRTWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCRkJCTUlRQWdBU2dDQUNFQklBTWdBaWdDQURZQ0FDQURRUUEyQWdRZ0EwRUlhaUlDSUFNcEFnQTNBZ0FnQUNBQklBSVErUU1nQXlRRUlBQUx4d0VCQkg4akJDRUNJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDeUFDUVFocUlRUWdBQ2dDQ0NBQkVGWWdBa0VRYWtHWm1RSVFSQ0FDUVJocUlnTWdBaWtDRURjQ0FDQUJJQU1RUnlBQVFReHFJZ0FpQlNnQ0FBUi9JQVVvQWdSRkJVRUFDd1JBSUFBb0FnQWdBUkJXQlNBQUtBSUVCSDhnQUNnQ0FBVkJBQXNFUUNBQUtBSUVJUVVnQkNBQUtBSUFOZ0lBSUFRZ0JUWUNCQ0FESUFRcEFnQTNBZ0FnQVNBREVFY0xDeUFDUWZUMkFSQkVJQU1nQWlrQ0FEY0NBQ0FCSUFNUVJ5QUNKQVFMK0FFQkJYOGdBQ2dDRUNJRElBRkJBV3BxSUFBb0Fnd2lCV3NoQkNBQUtBSUVJZ1pGQkVBZ0FDQUVRUXhzRUVvaUFqWUNCQ0FDQkVBZ0FFRUFJQVZyUVF4c0lBSnFOZ0lBSUFBZ0JFRU1iQ0FDYWpZQ0NDQUFJQUVnQTJvMkFoQVBCVUhBOUFJUVJVSEE5QUlRUlVFSUVBSWlBa0VBTmdJQUlBSkJmellDQkNBQ1FhZzRRUUFRQVFzTElBWWdCRUVNYkJDS0FTSUNSUVJBUWNEMEFoQkZRY0QwQWhCRlFRZ1FBaUlEUVFBMkFnQWdBMEYvTmdJRUlBTkJxRGhCQUJBQkN5QUFJQUkyQWdRZ0FDZ0NFQ0VESUFCQkFDQUFLQUlNYTBFTWJDQUNhallDQUNBQUlBUkJER3dnQW1vMkFnZ2dBQ0FCSUFOcU5nSVFDNlVDQVFWL0l3UWhBeU1FUVRCcUpBUWpCQ01GVGdSQVFUQVFBQXNnQTBFZ2FpRUNJQU5CR0dvaEJDQUJLQUlFSWdVRWZ5QUJLQUlBSUFWQmYycHFMQUFBQlVFQUMwSC9BWEZCM1FCSEJFQWdCRUhnK1FFUVJDQUNJQVFwQWdBM0FnQWdBU0FDRUVjTElBTkJDR29oQlNBRFFSQnFRZWVZQWhCRUlBSWdBeWtDRURjQ0FDQUJJQUlRUnlBQVFReHFJZ1FpQmlnQ0JBUi9JQVlvQWdBRlFRQUxCRUFnQkNnQ0JDRUdJQVVnQkNnQ0FEWUNBQ0FGSUFZMkFnUWdBaUFGS1FJQU53SUFJQUVnQWhCSEJTQUVLQUlBQkg4Z0JDZ0NCRVVGUVFBTEJFQWdCQ2dDQUNBQkVGWUxDeUFEUWZUMkFSQkVJQUlnQXlrQ0FEY0NBQ0FCSUFJUVJ5QUFLQUlJSWdBb0FnQW9BaFFoQWlBQUlBRWdBa0gvQVhGQmpnZHFFUUFBSUFNa0JBc2tBUUYvSUFBb0FnZ2lBQ2dDQUNnQ0VDRUNJQUFnQVNBQ1FmOEJjVUdPQjJvUkFBQUxRUUFnQUVHY2l3RTJBZ0FnQUVFT09nQUVJQUJCQURvQUJTQUFRUUE2QUFZZ0FFRUJPZ0FISUFCQnVKMEJOZ0lBSUFBZ0FUWUNDQ0FBSUFJcEFnQTNBZ3dMVWdFQmZ5TUVJUU1qQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQkZCQk1JUUFnQVNnQ0FDRUJJQU1nQWlrQ0FEY0RBQ0FEUVFocUlnSWdBeWtDQURjQ0FDQUFJQUVnQWhDekNTQURKQVFnQUF0K0FRSi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FrRUlhaUVEQWtBQ1FDQUFLQUlNSUFFUWlRRU5BQ0FBS0FJTUlBRVFrd0VOQUF3QkN5QUNRZDc1QVJCRUlBTWdBaWtDQURjQ0FDQUJJQU1RUndzZ0FDZ0NEQ0lES0FJQUtBSVVJUUFnQXlBQklBQkIvd0Z4UVk0SGFoRUFBQ0FDSkFRTHhRRUJCbjhqQkNFQ0l3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUNRUmhxSVFNZ0FrRVFhaUVFSUFKQkNHb2hCU0FBS0FJTUlnWW9BZ0FvQWhBaEJ5QUdJQUVnQjBIL0FYRkJqZ2RxRVFBQUFrQUNRQ0FBS0FJTUlBRVFpUUVOQUNBQUtBSU1JQUVRa3dFTkFDQUZRZUQ1QVJCRUlBTWdCU2tDQURjQ0FDQUJJQU1RUnd3QkN5QUVRZUw1QVJCRUlBTWdCQ2tDQURjQ0FDQUJJQU1RUndzZ0FDZ0NDQ0FCRUZZZ0FrR3JtQUlRUkNBRElBSXBBZ0EzQWdBZ0FTQURFRWNnQWlRRUMwY0JBWDhnQWl3QUJTRURJQUJCbklzQk5nSUFJQUJCRFRvQUJDQUFJQU02QUFVZ0FFRUJPZ0FHSUFCQkFUb0FCeUFBUVl5ZEFUWUNBQ0FBSUFFMkFnZ2dBQ0FDTmdJTUN6NEFJQUJCbklzQk5nSUFJQUJCRnpvQUJDQUFRUUU2QUFVZ0FFRUJPZ0FHSUFCQkFUb0FCeUFBUWVDY0FUWUNBQ0FBSUFFMkFnZ2dBQ0FDTmdJTUMxOEFBa0FDUUFKQUFrQUNRQUpBQWtBZ0FTZ0NDQTRHQUFFQ0F3UUZCZ3NnQUVITjl3RVFSQXdGQ3lBQVFkZjNBUkJFREFRTElBQkIxL2NCRUVRTUF3c2dBRUd6bFFJUVJBd0NDeUFBUWNHVkFoQkVEQUVMSUFCQno1VUNFRVFMQzRjQ0FRZC9Jd1FoQXlNRVFVQnJKQVFqQkNNRlRnUkFRY0FBRUFBTElBTkJNR29oQWlBRFFTaHFJUVFnQTBFZ2FpRUZJQU5CR0dvaEJpQURRUkJxSVFjZ0EwRUlhaUVJQWtBQ1FBSkFBa0FDUUFKQUFrQWdBQ2dDQ0E0R0FBRUNBd1FGQmdzZ0JFR0UrQUVRUkNBQ0lBUXBBZ0EzQWdBZ0FTQUNFRWNNQlFzZ0JVR1QrQUVRUkNBQ0lBVXBBZ0EzQWdBZ0FTQUNFRWNNQkFzZ0JrSGVsUUlRUkNBQ0lBWXBBZ0EzQWdBZ0FTQUNFRWNNQXdzZ0IwR2xsZ0lRUkNBQ0lBY3BBZ0EzQWdBZ0FTQUNFRWNNQWdzZ0NFSFhsZ0lRUkNBQ0lBZ3BBZ0EzQWdBZ0FTQUNFRWNNQVFzZ0EwR0psd0lRUkNBQ0lBTXBBZ0EzQWdBZ0FTQUNFRWNMSUFNa0JBdE1BUUYvSUFCQkRCQk1JZ0loQUNBQktBSUFJUUVnQUVHY2l3RTJBZ0FnQUVFak9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQnRKd0JOZ0lBSUFBZ0FUWUNDQ0FDQzMwQkEzOGpCQ0VDSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQ1FSQnFJUU1nQWtFSWFpRUVJQUFzQUF3RVFDQUVRYi8vQVJCRUlBTWdCQ2tDQURjQ0FDQUJJQU1RUndzZ0FDZ0NDQ0lBS0FJQUtBSVlJUVFnQWlBQUlBUkIvd0Z4UVk0SGFoRUFBQ0FESUFJcEFnQTNBZ0FnQVNBREVFY2dBaVFFQzBnQUlBQkJuSXNCTmdJQUlBQkJKVG9BQkNBQVFRRTZBQVVnQUVFQk9nQUdJQUJCQVRvQUJ5QUFRWWljQVRZQ0FDQUFJQUUyQWdnZ0FDQUNRUUZ4T2dBTUlBQWdBellDRUF1Z0F3RUZmeU1FSVFNakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBRW9BZ0FpQkMwQUJFRWtSZ1JBSUFNZ0JDZ0NDQ0lFTmdJQUlBUkJmbXBCQkVrRVFDQUJJQUJCOEFKcUlBTVF1d2syQWdBTEN5QURRUVJxSVFRQ2Z5QUFRY01BRUU4RWZ5QUFRY2tBRUU4aEJRSkFBa0FnQUNnQ0JDQUFLQUlBSWdaclFRQkxCSDhnQml3QUFBVkJBQXNpQmtFWWRFRVlkVUV4YXc0RkFRRUJBQUVBQzBFQURBSUxJQU1nQmtFWWRFRVlkVUZRYWpZQ0FDQUFJQUFvQWdCQkFXbzJBZ0FnQWdSQUlBSkJBVG9BQUFzQ2Z3SkFJQVZGRFFBZ0FDQUNFS0FCRFFCQkFBd0JDeUFFUVFBNkFBQWdBQ0FCSUFRZ0F4RDhBd3NGSUFBb0FnUWdBQ2dDQUNJRmEwRUFTd1IvSUFVc0FBQUZRUUFMUWY4QmNVSEVBRVlFZndKQUFrQWdBQ2dDQkNBQUtBSUFJZ1ZyUVFGTEJIOGdCU3dBQVFWQkFBc2lCVUVZZEVFWWRVRXdhdzRHQVFFQkFBQUJBQXRCQUF3REN5QURJQVZCR0hSQkdIVkJVR28yQWdBZ0FDQUFLQUlBUVFKcU5nSUFJQUlFUUNBQ1FRRTZBQUFMSUFSQkFUb0FBQ0FBSUFFZ0JDQURFUHdEQlVFQUN3c0xJUWNnQXlRRUlBY0xQZ0FnQUVHY2l3RTJBZ0FnQUVFWU9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQjNKc0JOZ0lBSUFBZ0FUWUNDQ0FBSUFJMkFnd0xlQUVEZnlNRUlRSWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUpCRUdvaUJFR0RsQUlRUkNBQ1FSaHFJZ01nQkNrQ0FEY0NBQ0FCSUFNUVJ5QUNJQUFwQWdnM0F3QWdBeUFDS1FJQU53SUFJQUVnQXhCSElBSkJDR29pQUVHTWxBSVFSQ0FESUFBcEFnQTNBZ0FnQVNBREVFY2dBaVFFQzNVQkFYOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFSQVFUQ0VBSUFJZ0FTa0NBRGNEQUNBQ0lBSXBBZ0EzQWdnZ0FFR2Npd0UyQWdBZ0FFRW5PZ0FFSUFCQkFUb0FCU0FBUVFFNkFBWWdBRUVCT2dBSElBQkJzSnNCTmdJQUlBQWdBaWtDQ0RjQ0NDQUNKQVFnQUF1ZUFRRURmeU1FSVFJakJFRXdhaVFFSXdRakJVNEVRRUV3RUFBTElBSkJHR29pQkVIRWt3SVFSQ0FDUVNCcUlnTWdCQ2tDQURjQ0FDQUJJQU1RUnlBQ0lBQXBBaEEzQXdBZ0F5QUNLUUlBTndJQUlBRWdBeEJISUFKQkVHb2lCRUhNa3dJUVJDQURJQVFwQWdBM0FnQWdBU0FERUVjZ0FFRUlhaUFCRUgwZ0FrRUlhaUlBUWQ3NUFSQkVJQU1nQUNrQ0FEY0NBQ0FCSUFNUVJ5QUNKQVFMUkFBZ0FFR2Npd0UyQWdBZ0FFRW9PZ0FFSUFCQkFUb0FCU0FBUVFFNkFBWWdBRUVCT2dBSElBQkJoSnNCTmdJQUlBQWdBU2tDQURjQ0NDQUFJQUlwQWdBM0FoQUxaQUVCZnlNRUlRTWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUJCR0JCTUlRQWdBeUFCS1FJQU53TUlJQU1nQWlrQ0FEY0RBQ0FEUVJCcUlnRWdBeWtDQ0RjQ0FDQURRUmhxSWdJZ0F5a0NBRGNDQUNBQUlBRWdBaEREQ1NBREpBUWdBQXNaQUNBQlFkc0FFR3NnQUVFSWFpQUJFSDBnQVVIZEFCQnJDM1VCQVg4akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVJBUVRDRUFJQUlnQVNrQ0FEY0RBQ0FDSUFJcEFnQTNBZ2dnQUVHY2l3RTJBZ0FnQUVFcE9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQjJKb0JOZ0lBSUFBZ0Fpa0NDRGNDQ0NBQ0pBUWdBQXR2QVFOL0l3UWhBU01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQVVFRWFpRUNJQUJCa09BQU5nSUFJQUFvQWdnaUF3UkFJQUVnQUNnQ0JEWUNBQ0FDSUFFb0FnQTJBZ0FnQXlBQ0VGY0xJQUFvQWhBUVF5QUFRZEMwQWlnQ0FEWUNBRUhRdEFJZ0FEWUNBQ0FCSkFRTDh3SUJCbjhqQkNFQkl3UkJNR29rQkNNRUl3Vk9CRUJCTUJBQUN5QUJRUmhxSVFVZ0FVRUlhaUVESUFGQkVHb2hCQ0FCUVNCcVFidVRBaEJFSUFGQktHb2lBaUFCS1FJZ053SUFJQUFnQWhCU0JFQWdBaUFBUVFBUWRDQUFRZDhBRUU4RWZ5QUFRZkFDYWlBQ0VNRUpCVUVBQ3lFQUJTQUZRYjZUQWhCRUlBSWdCU2tDQURjQ0FDQUFJQUlRVWdSQUlBRkJBRFlDQUNBQlFRQTJBZ1FnQXlBQVFlb0NhallDQUNBRElBQXNBT29DT2dBRUlBTkJBVG9BQlNBQVFRRTZBT29DSUFSQndaTUNFRVFnQWlBRUtRSUFOd0lBQW44Q1FDQUFJQUlRVWcwQUlBQkJDR29pQlNJRUtBSUVJQVFvQWdCclFRSjFJUVFDUUFOQUlBSWdBQkJkSWdZMkFnQWdCa1VOQVNBRklBSVFhQ0FBUWNVQUVFOUZEUUFMSUFFZ0FDQUVFSE1NQVF0QkFBd0JDeUFDSUFCQkFCQjBJQUJCM3dBUVR3Ui9JQUJCOEFKcUlBRWdBaERFQ1FWQkFBc0xJUUFnQXl3QUJRUkFJQU1vQWdBZ0F5d0FCRG9BQUFzRlFRQWhBQXNMSUFFa0JDQUFDMFVCQW44akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFDUWNPU0FoQkVJQUpCQ0dvaUF5QUNLUUlBTndJQUlBRWdBeEJISUFBb0FnZ2dBUkJXSUFJa0JBdE1BUUYvSUFCQkRCQk1JZ0loQUNBQktBSUFJUUVnQUVHY2l3RTJBZ0FnQUVFaU9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQnJKb0JOZ0lBSUFBZ0FUWUNDQ0FDQzQ4QkFRTi9Jd1FoQWlNRVFTQnFKQVFqQkNNRlRnUkFRU0FRQUFzZ0FrRUlha0c4a2dJUVJDQUNRUkJxSWdNZ0Fpa0NDRGNDQUFKL0FrQWdBQ0FERUZJTkFDQUNRY0NTQWhCRUlBTWdBaWtDQURjQ0FDQUFJQU1RVWcwQUlBQWdBUkM5QWd3QkN5QURJQUFnQVJDOUFpSUJOZ0lBSUFFRWZ5QUFRZkFDYWlBREVNb0pCVUVBQ3dzaEJDQUNKQVFnQkF1QkFnRUVmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBSkJDR29oQXlBQVFkb0FFRThFZnlBRElBQVFwd0VpQkRZQ0FDQUVCSDhnQUVIRkFCQlBCSDhDZnlBQVFmTUFFRThFUUNBQUlBQW9BZ0FnQUNnQ0JCRDlBellDQUNBQ0lBQkJ3cFFDRUZBMkFnQWdBQ0FESUFJUXZBSU1BUXNnQUVIa0FCQlBSUVJBSUFJZ0FDQUJFS0FCSWdFMkFnQWdBUVIvSUFBZ0FDZ0NBQ0FBS0FJRUVQMEROZ0lBSUFBZ0F5QUNFTHdDQlVFQUN3d0JDeUFDSUFCQkFSQjBJQUJCM3dBUVR3Ui9JQUlnQUNBQkVLQUJJZ0UyQWdBZ0FRUi9JQUFnQXlBQ0VMd0NCVUVBQ3dWQkFBc0xCVUVBQ3dWQkFBc0ZRUUFMSVFVZ0FpUUVJQVVMcWdZQkNIOGpCQ0VFSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBRVFTQnFJUVlnQkVFVWFpRUhJQVJCR0dvaEFpQUVRUWhxSVFVZ0JDQUJOZ0lVSUFCQnpnQVFUd1IvSUFBUTJ3RWhBeUFCUlNJSVJRUkFJQUVnQXpZQ0JBc2dBRUhQQUJCUEJFQWdDRVVFUUNBQlFRSTZBQWdMQlFKQUlBRkJBRWNoQXlBQVFkSUFFRThFUUNBRFJRMEJJQUZCQVRvQUNBVWdBMFVOQVNBQlFRQTZBQWdMQ3dzZ0FrRUFOZ0lBSUFVZ0FEWUNBQ0FGSUFJMkFnUWdCU0FITmdJSUlBUkJ3SklDRUVRZ0JpQUVLUUlBTndJQUlBQWdCaEJTQkVBZ0FpQUFRZjZVQWhCUU5nSUFDeUFBUVpRQmFpRUJBbjhDUUFKQUFrQURRQ0FBUWNVQUVFOE5BaUFBUWN3QUVFOGFBa0FnQUVITkFCQlBCRUFnQWlnQ0FFVU5BUVVDUUFKQUFrQUNRQUpBQWtBQ1FDQUFLQUlFSUFBb0FnQWlBMnRCQUVzRWZ5QURMQUFBQlVFQUMwRVlkRUVZZFVIREFHc09FZ1VDQkFRRUJBRUVCQVFFQkFRRUJBUURBQVFMSUFVZ0FCRERBUkRhQVVVTkJ5QUJJQUlRYUF3RkN5QUdJQUFnQkNnQ0ZFRUFSeENWQVNJRE5nSUFJQU5GSUFJb0FnQkZjZzBJSUFJZ0FDQUNJQVlRbEFFMkFnQWdCQ2dDRkNJREJFQWdBMEVCT2dBQkN5QUJJQUlRYUF3RUN3SkFJQUFvQWdRZ0FDZ0NBQ0lEYTBFQlN3Ui9JQU1zQUFFRlFRQUxRUmgwUVJoMVFjTUFhdzR5QWdNREF3TURBd01EQXdNREF3TURBd01BQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3TURBd01EQXdNREF3QURDeUFGSUFBUWh3SVEyZ0ZGRFFVZ0FTQUNFR2dNQXdzZ0FDZ0NCQ0FBS0FJQUlnTnJRUUZMQkg4Z0F5d0FBUVZCQUF0Qi93RnhRZlFBUmcwQUlBWWdBQkRlQVNJRE5nSUFJQVVnQXhEYUFVVU5DQ0FESUFJb0FnQkhCRUFnQVNBR0VHZ0xEQUlMSUFVZ0FDQUVLQUlVRUwwQ0VOb0JSUTBESUFFZ0FoQm9EQUVMSUFJb0FnQkZEUUlnQlNBQUlBSWdCQ2dDRkJDK0NSRGFBVVVOQWlBQ0lBQWdBaWdDQUJDR0FpSUROZ0lBSUFORkRRSWdBU0FDRUdnTEN3d0JDd3RCQUF3REMwRUFEQUlMSUFJb0FnQUVmeUFCS0FJQUlBRW9BZ1JHQkg5QkFBVWdBU0FCS0FJRVFYeHFOZ0lFSUFJb0FnQUxCVUVBQ3d3QkMwRUFDd1ZCQUFzaENTQUVKQVFnQ1F0TkFRSi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FpQUFLUUlJTndNQUlBSkJDR29pQXlBQ0tRSUFOd0lBSUFFZ0F4QkhJQUZCSUJCcklBQW9BaEFnQVJCV0lBSWtCQXRCQUNBQVFaeUxBVFlDQUNBQVFRWTZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFR0FtZ0UyQWdBZ0FDQUJLUUlBTndJSUlBQWdBallDRUF0U0FRRi9Jd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVVFRXdoQUNBRElBRXBBZ0EzQXdBZ0FpZ0NBQ0VCSUFOQkNHb2lBaUFES1FJQU53SUFJQUFnQWlBQkVNOEpJQU1rQkNBQUMvZ0JBUVYvSUFBb0FoQWlBeUFCUVFGcWFpQUFLQUlNSWdWcklRUWdBQ2dDQkNJR1JRUkFJQUFnQkVFRGRCQktJZ0kyQWdRZ0FnUkFJQUJCQUNBRmEwRURkQ0FDYWpZQ0FDQUFJQVJCQTNRZ0FtbzJBZ2dnQUNBQklBTnFOZ0lRRHdWQndQUUNFRVZCd1BRQ0VFVkJDQkFDSWdKQkFEWUNBQ0FDUVg4MkFnUWdBa0dvT0VFQUVBRUxDeUFHSUFSQkEzUVFpZ0VpQWtVRVFFSEE5QUlRUlVIQTlBSVFSVUVJRUFJaUEwRUFOZ0lBSUFOQmZ6WUNCQ0FEUWFnNFFRQVFBUXNnQUNBQ05nSUVJQUFvQWhBaEF5QUFRUUFnQUNnQ0RHdEJBM1FnQW1vMkFnQWdBQ0FFUVFOMElBSnFOZ0lJSUFBZ0FTQURhallDRUF1QkFRRUNmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkJFR29pQXl3QUFFVUVRQ0FDSUFNMkFnQWdBaUFETEFBQU9nQUVJQUpCQVRvQUJTQURRUUU2QUFBZ0FDZ0NEQ0lBS0FJQUtBSVVJUU1nQUNBQklBTkIvd0Z4UVk0SGFoRUFBQ0FDTEFBRkJFQWdBaWdDQUNBQ0xBQUVPZ0FBQ3dzZ0FpUUVDNEVCQVFKL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFUWFpSURMQUFBUlFSQUlBSWdBellDQUNBQ0lBTXNBQUE2QUFRZ0FrRUJPZ0FGSUFOQkFUb0FBQ0FBS0FJTUlnQW9BZ0FvQWhBaEF5QUFJQUVnQTBIL0FYRkJqZ2RxRVFBQUlBSXNBQVVFUUNBQ0tBSUFJQUlzQUFRNkFBQUxDeUFDSkFRTGhBRUJBbjhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUkJxSWdNc0FBQkZCRUFnQWlBRE5nSUFJQUlnQXl3QUFEb0FCQ0FDUVFFNkFBVWdBMEVCT2dBQUlBQW9BZ3dpQUNnQ0FDZ0NEQ0VESUFBZ0FTQURRVDl4UVlvQmFoRURBQ0VBSUFJc0FBVUVRQ0FDS0FJQUlBSXNBQVE2QUFBTEN5QUNKQVFnQUF0ekFRSi9Jd1FoQWlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVFhaUlETEFBQUJFQkJBQ0VBQlNBQ0lBTTJBZ0FnQWlBRExBQUFPZ0FFSUFKQkFUb0FCU0FEUVFFNkFBQWdBQ2dDRENBQkVKTUJJUUFnQWl3QUJRUkFJQUlvQWdBZ0Fpd0FCRG9BQUFzTElBSWtCQ0FBQzNNQkFuOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFSQnFJZ01zQUFBRVFFRUFJUUFGSUFJZ0F6WUNBQ0FDSUFNc0FBQTZBQVFnQWtFQk9nQUZJQU5CQVRvQUFDQUFLQUlNSUFFUWlRRWhBQ0FDTEFBRkJFQWdBaWdDQUNBQ0xBQUVPZ0FBQ3dzZ0FpUUVJQUFMY3dFQ2Z5TUVJUUlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFCQkVHb2lBeXdBQUFSQVFRQWhBQVVnQWlBRE5nSUFJQUlnQXl3QUFEb0FCQ0FDUVFFNkFBVWdBMEVCT2dBQUlBQW9BZ3dnQVJEQ0FTRUFJQUlzQUFVRVFDQUNLQUlBSUFJc0FBUTZBQUFMQ3lBQ0pBUWdBQXRGQUNBQVFaeUxBVFlDQUNBQVFSODZBQVFnQUVFQ09nQUZJQUJCQWpvQUJpQUFRUUk2QUFjZ0FFSFVtUUUyQWdBZ0FDQUJOZ0lJSUFCQkFEWUNEQ0FBUVFBNkFCQUxXd0VEZnlNRUlRSWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUpCQ0dvaUJFSHhrQUlRUkNBQ1FSQnFJZ01nQkNrQ0FEY0NBQ0FCSUFNUVJ5QUNJQUFwQWdnM0F3QWdBeUFDS1FJQU53SUFJQUVnQXhCSElBSWtCQXQxQVFGL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFUUVFd2hBQ0FDSUFFcEFnQTNBd0FnQWlBQ0tRSUFOd0lJSUFCQm5Jc0JOZ0lBSUFCQk5qb0FCQ0FBUVFFNkFBVWdBRUVCT2dBR0lBQkJBVG9BQnlBQVFhaVpBVFlDQUNBQUlBSXBBZ2czQWdnZ0FpUUVJQUFMMHdFQkEzOGpCQ0VDSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFjamdBRFlDQUNBQVFlVGdBRFlDSUNBQUtBSWtJZ0VFUUVFWUlBRWdBQ2dDS0JCSUlBQkJBRFlDS0NBQVFRQTJBaVFMSUFKQkJHb2hBeUFBUVpEZ0FEWUNBQ0FBS0FJSUlnRUVRQ0FDSUFBb0FnUTJBZ0FnQXlBQ0tBSUFOZ0lBSUFFZ0F4QlhDeUFBS0FJUUlnRWdBQ2dDRkU4RVFDQUJFRU1nQWlRRUR3c0RRQ0FCS0FJQUtBSUFJUU1nQVNBRFFmOERjVUdFQTJvUkFRQWdBVUVRYWlJQklBQW9BaFJKRFFBTElBQW9BaEFRUXlBQ0pBUUwwUUlCQlg4akJDRUNJd1JCUUdza0JDTUVJd1ZPQkVCQndBQVFBQXNnQWtFNGFpRURJQUpCTUdvaEJpQUNRU0JxSVFRZ0FrRW9haUlGSUFFMkFnQWdCU0FBTmdJRUlBRkJLQkJySUFBc0FCZ0VRQ0FBS0FJTUlnUUVRQ0FFSUFFUVZpQUJRU0FRYXlBQ0lBQkJFR29pQUNrQ0FEY0RHQ0FESUFJcEFoZzNBZ0FnQVNBREVFY2dBVUVnRUdzRklBQkJFR29oQUFzZ0JrRzdrQUlRUkNBRElBWXBBZ0EzQWdBZ0FTQURFRWNnQWlBQUtRSUFOd01RSUFNZ0Fpa0NFRGNDQUNBQklBTVFSeUFCUVNBUWF5QUZFUDhEQlNBRkVQOERJQUZCSUJCcklBSWdBQ2tDRURjRENDQURJQUlwQWdnM0FnQWdBU0FERUVjZ0JFSEFrQUlRUkNBRElBUXBBZ0EzQWdBZ0FTQURFRWNnQUNnQ0RBUkFJQUZCSUJCcklBSWdBQ2tDRURjREFDQURJQUlwQWdBM0FnQWdBU0FERUVjZ0FVRWdFR3NnQUNnQ0RDQUJFRllMQ3lBQlFTa1FheUFDSkFRTFVnQWdBRUdjaXdFMkFnQWdBRUU1T2dBRUlBQkJBVG9BQlNBQVFRRTZBQVlnQUVFQk9nQUhJQUJCL0pnQk5nSUFJQUFnQXpZQ0NDQUFJQVEyQWd3Z0FDQUNLUUlBTndJUUlBQWdBVUVCY1RvQUdBdG5BUUYvSXdRaEJTTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVjRUV3aEFDQUJMQUFBUVFCSElRRWdCU0FDS1FJQU53TUFJQU1vQWdBaEFpQUVLQUlBSVFNZ0JVRUlhaUlFSUFVcEFnQTNBZ0FnQUNBQklBUWdBaUFERU4wSklBVWtCQ0FBQzZ3Q0FRVi9Jd1FoQXlNRVFVQnJKQVFqQkNNRlRnUkFRY0FBRUFBTElBTkJNR29oQkNBRFFUaHFJZ0pCcmZvQkVFUWdBRUVNYWlJR0lBSVFoQUlFUUNBRVFlTDVBUkJFSUFJZ0JDa0NBRGNDQUNBQklBSVFSd3NnQTBFSWFpRUVJQU5CS0dvaUJVSGkrUUVRUkNBQ0lBVXBBZ0EzQWdBZ0FTQUNFRWNnQUNnQ0NDQUJFRllnQTBFZ2FpSUZRYW1QQWhCRUlBSWdCU2tDQURjQ0FDQUJJQUlRUnlBRElBWXBBZ0EzQXdBZ0FpQURLUUlBTndJQUlBRWdBaEJISUFOQkdHb2lCVUdzandJUVJDQUNJQVVwQWdBM0FnQWdBU0FDRUVjZ0FDZ0NGQ0FCRUZZZ0EwRVFhaUlBUWQ3NUFSQkVJQUlnQUNrQ0FEY0NBQ0FCSUFJUVJ5QUNRYTM2QVJCRUlBWWdBaENFQWdSQUlBUkIzdmtCRUVRZ0FpQUVLUUlBTndJQUlBRWdBaEJIQ3lBREpBUUxTQUFnQUVHY2l3RTJBZ0FnQUVFcU9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQjBKZ0JOZ0lBSUFBZ0FUWUNDQ0FBSUFJcEFnQTNBZ3dnQUNBRE5nSVVDMXNCQVg4akJDRUVJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVJnUVRDRUFJQUVvQWdBaEFTQUVJQUlwQWdBM0F3QWdBeWdDQUNFQ0lBUkJDR29pQXlBRUtRSUFOd0lBSUFBZ0FTQURJQUlRNEFrZ0JDUUVJQUFMZ1FFQkEzOGpCQ0VDSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQ0lBQXBBZ2czQXdBZ0FrRVlhaUlESUFJcEFnQTNBZ0FnQVNBREVFY2dBa0VRYWlJRVFlTDVBUkJFSUFNZ0JDa0NBRGNDQUNBQklBTVFSeUFBS0FJUUlBRVFWaUFDUVFocUlnQkIzdmtCRUVRZ0F5QUFLUUlBTndJQUlBRWdBeEJISUFJa0JBdEJBQ0FBUVp5TEFUWUNBQ0FBUVRVNkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVHa21BRTJBZ0FnQUNBQktRSUFOd0lJSUFBZ0FqWUNFQXRTQVFGL0l3UWhBeU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFVUVFd2hBQ0FESUFFcEFnQTNBd0FnQWlnQ0FDRUJJQU5CQ0dvaUFpQURLUUlBTndJQUlBQWdBaUFCRU9NSklBTWtCQ0FBQzFrQkFuOGpCQ0VESXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQVFSZ1FUQ0VBSUFOQjc0NENFRVFnQVNnQ0FDRUJJQUlvQWdBaEFpQURRUWhxSWdRZ0F5a0NBRGNDQUNBQUlBUWdBU0FDRUlFQ0lBTWtCQ0FBQzJzQkEzOGpCQ0VDSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQUtBSUlJQUVRVmlBQ1FRaHFJZ1JCNHZrQkVFUWdBa0VRYWlJRElBUXBBZ0EzQWdBZ0FTQURFRWNnQUVFTWFpQUJFSDBnQWtIZStRRVFSQ0FESUFJcEFnQTNBZ0FnQVNBREVFY2dBaVFFQzBFQUlBQkJuSXNCTmdJQUlBQkJNam9BQkNBQVFRRTZBQVVnQUVFQk9nQUdJQUJCQVRvQUJ5QUFRZmlYQVRZQ0FDQUFJQUUyQWdnZ0FDQUNLUUlBTndJTUMxSUJBWDhqQkNFREl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUlFRVENFQUlBRW9BZ0FoQVNBRElBSXBBZ0EzQXdBZ0EwRUlhaUlDSUFNcEFnQTNBZ0FnQUNBQklBSVE1d2tnQXlRRUlBQUxpQUVCQTM4akJDRUNJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDeUFDUVJCcUlnUkI0dmtCRUVRZ0FrRVlhaUlESUFRcEFnQTNBZ0FnQVNBREVFY2dBQ2dDQ0NBQkVGWWdBa0VJYWlJRVFZMk9BaEJFSUFNZ0JDa0NBRGNDQUNBQklBTVFSeUFBUVF4cUlBRVFmU0FDUWQ3NUFSQkVJQU1nQWlrQ0FEY0NBQ0FCSUFNUVJ5QUNKQVFMUVFBZ0FFR2Npd0UyQWdBZ0FFRTNPZ0FFSUFCQkFUb0FCU0FBUVFFNkFBWWdBRUVCT2dBSElBQkJ6SmNCTmdJQUlBQWdBVFlDQ0NBQUlBSXBBZ0EzQWd3TGt3RUJBMzhqQkNFQ0l3UkJJR29rQkNNRUl3Vk9CRUJCSUJBQUN5QUNRUmhxSVFNZ0FrRVFhaUVFSUFBc0FBd0VRQ0FFUWJTSEFoQkVJQU1nQkNrQ0FEY0NBQ0FCSUFNUVJ3c2dBa0VJYWlJRVFkQ05BaEJFSUFNZ0JDa0NBRGNDQUNBQklBTVFSeUFBTEFBTkJFQWdBa0hYalFJUVJDQURJQUlwQWdBM0FnQWdBU0FERUVjTElBQW9BZ2dnQVJCV0lBSWtCQXRMQUNBQVFaeUxBVFlDQUNBQVFUUTZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFR2dsd0UyQWdBZ0FDQUJOZ0lJSUFBZ0FrRUJjVG9BRENBQUlBTkJBWEU2QUEwTEpBQWdBRUVRRUV3aUFDQUJLQUlBSUFJc0FBQkJBRWNnQXl3QUFFRUFSeERzQ1NBQUMxa0JBbjhqQkNFREl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUmdRVENFQUlBTkJ3NDBDRUVRZ0FTZ0NBQ0VCSUFJb0FnQWhBaUFEUVFocUlnUWdBeWtDQURjQ0FDQUFJQVFnQVNBQ0VJRUNJQU1rQkNBQUN6NEFJQUJCbklzQk5nSUFJQUJCRmpvQUJDQUFRUUU2QUFVZ0FFRUJPZ0FHSUFCQkFUb0FCeUFBUWZTV0FUWUNBQ0FBSUFFMkFnZ2dBQ0FDTmdJTUMxd0JBbjhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNRYi8vQVJCRUlBSkJDR29pQXlBQ0tRSUFOd0lBSUFFZ0F4QkhJQUFvQWdnaUFDZ0NBQ2dDRUNFRElBQWdBU0FEUWY4QmNVR09CMm9SQUFBZ0FpUUVDMHdCQVg4Z0FFRU1FRXdpQWlFQUlBRW9BZ0FoQVNBQVFaeUxBVFlDQUNBQVFTWTZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFSElsZ0UyQWdBZ0FDQUJOZ0lJSUFJTFJRRUNmeU1FSVFJakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBSkJvSXdDRUVRZ0FrRUlhaUlESUFJcEFnQTNBZ0FnQVNBREVFY2dBQ2dDQ0NBQkVGWWdBaVFFQ3pjQUlBQkJuSXNCTmdJQUlBQkJCRG9BQkNBQVFRRTZBQVVnQUVFQk9nQUdJQUJCQVRvQUJ5QUFRWnlXQVRZQ0FDQUFJQUUyQWdnTGJ3RURmeU1FSVFFakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBRkJCR29oQWlBQVFaRGdBRFlDQUNBQUtBSUlJZ01FUUNBQklBQW9BZ1EyQWdBZ0FpQUJLQUlBTmdJQUlBTWdBaEJYQ3lBQUtBSVFFRU1nQUVIQXRBSW9BZ0EyQWdCQndMUUNJQUEyQWdBZ0FTUUVDMGNCQW44akJDRUJJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVJBUVRDRUFJQUZCa0l3Q0VFUWdBVUVJYWlJQ0lBRXBBZ0EzQWdBZ0FDQUNFTEFCSUFFa0JDQUFDMFVCQW44akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFDUWRDTEFoQkVJQUpCQ0dvaUF5QUNLUUlBTndJQUlBRWdBeEJISUFBb0FnZ2dBUkJXSUFJa0JBdE1BUUYvSUFCQkRCQk1JZ0loQUNBQktBSUFJUUVnQUVHY2l3RTJBZ0FnQUVFVE9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQjhKVUJOZ0lBSUFBZ0FUWUNDQ0FDQzNJQkEzOGpCQ0VCSXdSQkVHb2tCQ01FSXdWT0JFQkJFQkFBQ3lBQklBQW9BZ1FnQUNnQ0FDSUNhMEVBU3dSL0lBSXNBQUFGUVFBTFFSaDBRUmgxUVZCcVFRcEpCSDhnQUJDQUFnVWdBQkRBQWdzaUFqWUNBQ0FDQkg4Z0FFSHdBbW9nQVJEeENRVkJBQXNoQXlBQkpBUWdBd3RGQVFKL0l3UWhBaU1FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQWtHMGh3SVFSQ0FDUVFocUlnTWdBaWtDQURjQ0FDQUJJQU1RUnlBQUtBSUlJQUVRVmlBQ0pBUUxOd0FnQUVHY2l3RTJBZ0FnQUVFaE9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQnhKVUJOZ0lBSUFBZ0FUWUNDQXRYQVFGL0l3UWhCQ01FUVJCcUpBUWpCQ01GVGdSQVFSQVFBQXNnQUVFWUVFd2hBQ0FCS0FJQUlRRWdCQ0FDRUVRZ0F5Z0NBQ0VDSUFSQkNHb2lBeUFFS1FJQU53SUFJQUFnQVNBRElBSVFod1FnQkNRRUlBQUxVQUVDZnlNRUlRSWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUFvQWdnZ0FSQldJQUlnQUNrQ0REY0RBQ0FDUVFocUlnTWdBaWtDQURjQ0FDQUJJQU1RUnlBQUtBSVVJQUVRVmlBQ0pBUUxXUUVDZnlNRUlRTWpCRUVRYWlRRUl3UWpCVTRFUUVFUUVBQUxJQUJCR0JCTUlRQWdBU2dDQUNFQklBTkIvSVlDRUVRZ0FpZ0NBQ0VDSUFOQkNHb2lCQ0FES1FJQU53SUFJQUFnQVNBRUlBSVFod1FnQXlRRUlBQUxpQUVCQTM4akJDRUNJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDeUFDUVJCcUlnUkI0dmtCRUVRZ0FrRVlhaUlESUFRcEFnQTNBZ0FnQVNBREVFY2dBQ2dDQ0NBQkVGWWdBa0VJYWlJRVFjS0dBaEJFSUFNZ0JDa0NBRGNDQUNBQklBTVFSeUFBS0FJTUlBRVFWaUFDUWZUMkFSQkVJQU1nQWlrQ0FEY0NBQ0FCSUFNUVJ5QUNKQVFMUGdBZ0FFR2Npd0UyQWdBZ0FFRXJPZ0FFSUFCQkFUb0FCU0FBUVFFNkFBWWdBRUVCT2dBSElBQkI3SlFCTmdJQUlBQWdBVFlDQ0NBQUlBSTJBZ3dMREFBZ0FDQUJLUUlJTndJQUN6NEJBWDhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUNJQUFwQWdnM0F3QWdBa0VJYWlJQUlBSXBBZ0EzQWdBZ0FTQUFFRWNnQWlRRUMwY0JBbjhqQkNFQkl3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRUkFRVENFQUlBRkJnSVlDRUVRZ0FVRUlhaUlDSUFFcEFnQTNBZ0FnQUNBQ0VMQUJJQUVrQkNBQUM1Y0JBUU4vSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBQ3dBRUFSQUlBRkIyd0FRYXlBQUtBSUlJQUVRVmlBQlFkMEFFR3NGSUFGQkxoQnJJQUFvQWdnZ0FSQldDeUFDUVFocUlRTWdBQ2dDRENJRUxBQUVRYjkvYWtFWWRFRVlkVUgvQVhGQkFrNEVmeUFDUVk2RkFoQkVJQU1nQWlrQ0FEY0NBQ0FCSUFNUVJ5QUFLQUlNQlNBRUN5QUJFRllnQWlRRUMwa0FJQUJCbklzQk5nSUFJQUJCd1FBNkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVHVWxBRTJBZ0FnQUNBQk5nSUlJQUFnQWpZQ0RDQUFJQU5CQVhFNkFCQUxvUUVCQTM4akJDRUNJd1JCSUdva0JDTUVJd1ZPQkVCQklCQUFDeUFCUWRzQUVHc2dBQ2dDQ0NBQkVGWWdBa0VJYWtHSWhRSVFSQ0FDUVJCcUlnTWdBaWtDQ0RjQ0FDQUJJQU1RUnlBQUtBSU1JQUVRVmlBQlFkMEFFR3NnQUNnQ0VDSUVMQUFFUWI5L2FrRVlkRUVZZFVIL0FYRkJBazRFZnlBQ1FZNkZBaEJFSUFNZ0Fpa0NBRGNDQUNBQklBTVFSeUFBS0FJUUJTQUVDeUFCRUZZZ0FpUUVDMFlBSUFCQm5Jc0JOZ0lBSUFCQndnQTZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFSG9rd0UyQWdBZ0FDQUJOZ0lJSUFBZ0FqWUNEQ0FBSUFNMkFoQUxXQUFnQUVFQU5nSVlJQUJCZnpZQ0hDQUFRUUEyQWhRZ0FFRUFOZ0lNSUFCQkFEWUNFQ0FBUVFBMkFnUWdBRUVBTmdJSUlBQkJsT1lBTmdJQUlBQkJJR3BCandFUWpBRWdBRUVrYWtFSEVJd0JJQUJCQVRZQ0tBdExBUUYvSXdRaEFpTUVRUkJxSkFRakJDTUZUZ1JBUVJBUUFBc2dBRUVVRUV3aEFDQUNJQUVwQWdBM0F3QWdBa0VJYWlJQklBSXBBZ0EzQWdBZ0FFRUFJQUVRaXdRZ0FpUUVJQUFMUVFBZ0FFR2Npd0UyQWdBZ0FFRXNPZ0FFSUFCQkFUb0FCU0FBUVFFNkFBWWdBRUVCT2dBSElBQkJ2Sk1CTmdJQUlBQWdBVFlDQ0NBQUlBSXBBZ0EzQWd3TFRnRUJmeU1FSVFNakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkJGQkJNSVFBZ0FTZ0NBQ0VCSUFNZ0FoQkVJQU5CQ0dvaUFpQURLUUlBTndJQUlBQWdBU0FDRUlrS0lBTWtCQ0FBQzdvQ0FRVi9Jd1FoQXlNRVFVQnJKQVFqQkNNRlRnUkFRY0FBRUFBTElBTkJPR29oQWlBRFFUQnFJUVFnQUN3QUhBUkFJQVJCbW9RQ0VFUWdBaUFFS1FJQU53SUFJQUVnQWhCSEN5QURRU0JxSVFRZ0EwRW9ha0dtaEFJUVJDQUNJQU1wQWlnM0FnQWdBU0FDRUVjZ0FDd0FIUVJBSUFSQnFvUUNFRVFnQWlBRUtRSUFOd0lBSUFFZ0FoQkhDeUFEUVJocUlRUWdBMEVRYWlFRklBRkJJQkJySUFCQkNHb2lCaWdDQkFSQUlBUkI0dmtCRUVRZ0FpQUVLUUlBTndJQUlBRWdBaEJISUFZZ0FSQjlJQVZCM3ZrQkVFUWdBaUFGS1FJQU53SUFJQUVnQWhCSEN5QURRUWhxSVFRZ0FDZ0NFQ0FCRUZZZ0FFRVVhaUlBS0FJRUJFQWdCRUhpK1FFUVJDQUNJQVFwQWdBM0FnQWdBU0FDRUVjZ0FDQUJFSDBnQTBIZStRRVFSQ0FDSUFNcEFnQTNBZ0FnQVNBQ0VFY0xJQU1rQkF0ZkFDQUFRWnlMQVRZQ0FDQUFRVE02QUFRZ0FFRUJPZ0FGSUFCQkFUb0FCaUFBUVFFNkFBY2dBRUdRa3dFMkFnQWdBQ0FCS1FJQU53SUlJQUFnQWpZQ0VDQUFJQU1wQWdBM0FoUWdBQ0FFUVFGeE9nQWNJQUFnQlVFQmNUb0FIUXRzQVFOL0l3UWhBaU1FUVNCcUpBUWpCQ01GVGdSQVFTQVFBQXNnQUVFY0VFd2hBQ0FDUVFocVFZYUVBaEJFSUFFb0FnQWhBU0FDUWQ3NUFSQkVJQUpCRUdvaUF5QUNLUUlJTndJQUlBSkJHR29pQkNBQ0tRSUFOd0lBSUFBZ0F5QUJJQVFReEFJZ0FpUUVJQUFMcmdFQkEzOGpCQ0VDSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBQ1FSaHFJZ1JCNHZrQkVFUWdBa0VnYWlJRElBUXBBZ0EzQWdBZ0FTQURFRWNnQUNnQ0NDQUJFRllnQWtFUWFpSUVRY2FEQWhCRUlBTWdCQ2tDQURjQ0FDQUJJQU1RUnlBQUtBSU1JQUVRVmlBQ1FRaHFJZ1JCeklNQ0VFUWdBeUFFS1FJQU53SUFJQUVnQXhCSElBQW9BaEFnQVJCV0lBSkIzdmtCRUVRZ0F5QUNLUUlBTndJQUlBRWdBeEJISUFJa0JBdEZBQ0FBUVp5TEFUWUNBQ0FBUVMwNkFBUWdBRUVCT2dBRklBQkJBVG9BQmlBQVFRRTZBQWNnQUVIa2tnRTJBZ0FnQUNBQk5nSUlJQUFnQWpZQ0RDQUFJQU0yQWhBTHhBb0FJQUJCcE9NQU5nSUFJQUJCQURZQ0JDQUFRUUU2QUFnZ0FFRUFOZ0lvSUFCQmZ6WUNMQ0FBUWdBM0FoUWdBRUlBTndJY0lBQkJBRFlDSkNBQVFmempBRFlDRUNBQVFRQTJBbEFnQUVGL05nSlVJQUJDQURjQ1BDQUFRZ0EzQWtRZ0FFRUFOZ0pNSUFCQi9PTUFOZ0k0SUFCQkFEWUNlQ0FBUVg4MkFud2dBRUlBTndKa0lBQkNBRGNDYkNBQVFRQTJBblFnQUVIODR3QTJBbUFnQUVFQU5nS2dBU0FBUVg4MkFxUUJJQUJDQURjQ2pBRWdBRUlBTndLVUFTQUFRUUEyQXB3QklBQkIvT01BTmdLSUFTQUFRUUEyQXNnQklBQkJmellDekFFZ0FFSUFOd0swQVNBQVFnQTNBcndCSUFCQkFEWUN4QUVnQUVIODR3QTJBckFCSUFCQkFEWUM4QUVnQUVGL05nTDBBU0FBUWdBM0F0d0JJQUJDQURjQzVBRWdBRUVBTmdMc0FTQUFRZnpqQURZQzJBRWdBRUVBTmdLWUFpQUFRWDgyQXB3Q0lBQkNBRGNDaEFJZ0FFSUFOd0tNQWlBQVFRQTJBcFFDSUFCQi9PTUFOZ0tBQWlBQVFRQTJBc0FDSUFCQmZ6WUN4QUlnQUVJQU53S3NBaUFBUWdBM0FyUUNJQUJCQURZQ3ZBSWdBRUg4NHdBMkFxZ0NJQUJCQURZQzZBSWdBRUYvTmdMc0FpQUFRZ0EzQXRRQ0lBQkNBRGNDM0FJZ0FFRUFOZ0xrQWlBQVFaamtBRFlDMEFJZ0FFRUFOZ0tNQXlBQVFYODJBcEFESUFCQ0FEY0MrQUlnQUVJQU53S0FBeUFBUVFBMkFvZ0RJQUJCcU9FQU5nTDBBaUFBUWdBM0FwUURJQUJCQURZQ25BTWdBRUVBTmdLNEF5QUFRWDgyQXJ3RElBQkNBRGNDcEFNZ0FFSUFOd0tzQXlBQVFRQTJBclFESUFCQnRPUUFOZ0tnQXlBQVFjQURha0VIRUl3QklBQkRBQUNBUHpnQ3hBTWdBRUVCT2dESUF5QUFRUUE2QU1rRElBQkJBRG9BeWdNZ0FFSE1BMm9RaHdvZ0FFRUFOZ0tRQkNBQVFYODJBcFFFSUFCQ0FEY0MvQU1nQUVJQU53S0VCQ0FBUVFBMkFvd0VJQUJCcU9FQU5nTDRBeUFBUWdBM0FwZ0VJQUJCQURZQ29BUWdBRUVBTmdLOEJDQUFRWDgyQXNBRUlBQkNBRGNDcUFRZ0FFSUFOd0t3QkNBQVFRQTJBcmdFSUFCQi9PSUFOZ0trQkNBQVFRQTJBdUFFSUFCQmZ6WUM1QVFnQUVJQU53TE1CQ0FBUWdBM0F0UUVJQUJCQURZQzNBUWdBRUg4NGdBMkFzZ0VJQUJCQURZQ2hBVWdBRUYvTmdLSUJTQUFRZ0EzQXZBRUlBQkNBRGNDK0FRZ0FFRUFOZ0tBQlNBQVFkRGtBRFlDN0FRZ0FFRUFOZ0tvQlNBQVFYODJBcXdGSUFCQ0FEY0NsQVVnQUVJQU53S2NCU0FBUVFBMkFxUUZJQUJCeU9BQU5nS1FCU0FBUVFBMkFyUUZJQUJCQURZQ3VBVWdBRUVBTmdLOEJTQUFRZmpnQURZQ3NBVWdBRUVBTmdMWUJTQUFRWDgyQXR3RklBQkNBRGNDeEFVZ0FFSUFOd0xNQlNBQVFRQTJBdFFGSUFCQnJPQUFOZ0xBQlNBQVFnQTNBdUFGSUFCQkFEWUM2QVVnQUVFQU5nS0VCaUFBUVg4MkFvZ0dJQUJDQURjQzhBVWdBRUlBTndMNEJTQUFRUUEyQW9BR0lBQkI3T1FBTmdMc0JTQUFRUUEyQXFnR0lBQkJmellDckFZZ0FFSUFOd0tVQmlBQVFnQTNBcHdHSUFCQkFEWUNwQVlnQUVHSTVRQTJBcEFHSUFCQnNBWnFRUWNRakFFZ0FFTUFBSUEvT0FLMEJpQUFRUUU2QUxnR0lBQkJBRG9BdVFZZ0FFRUFPZ0M2QmlBQVFRQTJBdFFHSUFCQmZ6WUMyQVlnQUVJQU53TEFCaUFBUWdBM0FzZ0dJQUJCQURZQzBBWWdBRUdrNVFBMkFyd0dJQUJCQURZQytBWWdBRUYvTmdMOEJpQUFRZ0EzQXVRR0lBQkNBRGNDN0FZZ0FFRUFOZ0wwQmlBQVFjRGxBRFlDNEFZZ0FFRUFOZ0tnQnlBQVFYODJBcVFISUFCQ0FEY0NqQWNnQUVJQU53S1VCeUFBUVFBMkFwd0hJQUJCM09VQU5nS0lCeUFBUVFBMkFzUUhJQUJCZnpZQ3lBY2dBRUlBTndLd0J5QUFRZ0EzQXJnSElBQkJBRFlDd0FjZ0FFSDQ1UUEyQXF3SElBQkJBRFlDMEFjTFdRRUNmeU1FSVFNakJFRVFhaVFFSXdRakJVNEVRRUVRRUFBTElBQkJHQkJNSVFBZ0EwRzFnd0lRUkNBQktBSUFJUUVnQWlnQ0FDRUNJQU5CQ0dvaUJDQURLUUlBTndJQUlBQWdCQ0FCSUFJUWdRSWdBeVFFSUFBTDFRRUJCSDhqQkNFQ0l3UkJNR29rQkNNRUl3Vk9CRUJCTUJBQUN5QUNJQUFwQWdnM0F3QWdBa0VnYWlJRElBSXBBZ0EzQWdBZ0FTQURFRWNnQWtFWWFpSUVRWmo3QVJCRUlBTWdCQ2tDQURjQ0FDQUJJQU1RUnlBQUtBSVFJZ1FvQWdBb0FoQWhCU0FFSUFFZ0JVSC9BWEZCamdkcUVRQUFJQUpCRUdvaUJFR0dnd0lRUkNBRElBUXBBZ0EzQWdBZ0FTQURFRWNnQUNnQ0ZDSUFLQUlBS0FJUUlRUWdBQ0FCSUFSQi93RnhRWTRIYWhFQUFDQUNRUWhxSWdCQjN2a0JFRVFnQXlBQUtRSUFOd0lBSUFFZ0F4QkhJQUlrQkF0WkFRSi9Jd1FoQXlNRVFSQnFKQVFqQkNNRlRnUkFRUkFRQUFzZ0FFRVlFRXdoQUNBRFFmcUNBaEJFSUFFb0FnQWhBU0FDS0FJQUlRSWdBMEVJYWlJRUlBTXBBZ0EzQWdBZ0FDQUVJQUVnQWhDQkFpQURKQVFnQUF0cUFRSi9Jd1FoQXlNRVFTQnFKQVFqQkNNRlRnUkFRU0FRQUFzZ0FFRWNFRXdoQUNBRFFRaHFJQUVRUkNBQ0tBSUFJUUVnQTBIZStRRVFSQ0FEUVJCcUlnSWdBeWtDQ0RjQ0FDQURRUmhxSWdRZ0F5a0NBRGNDQUNBQUlBSWdBU0FFRU1RQ0lBTWtCQ0FBQzI4QkEzOGpCQ0VDSXdSQk1Hb2tCQ01FSXdWT0JFQkJNQkFBQ3lBQ1FSaHFJZ05CL0lFQ0VFUWdBa0VnYWlJRUlBTXBBZ0EzQWdBZ0FTQUVFRWNnQWtFSWFpSURJQUFvQWdnUXd3SWdBeUFCRUlvRUlBSkIzdmtCRUVRZ0JDQUNLUUlBTndJQUlBRWdCQkJISUFJa0JBdE1BUUYvSUFCQkRCQk1JZ0loQUNBQktBSUFJUUVnQUVHY2l3RTJBZ0FnQUVFeE9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQjRKRUJOZ0lBSUFBZ0FUWUNDQ0FDQzJFQkFuOGpCQ0VDSXdSQklHb2tCQ01FSXdWT0JFQkJJQkFBQ3lBQ0lBQXBBZ2czQXdnZ0FrRVFhaUlESUFJcEFnZzNBZ0FnQVNBREVFY2dBQ2dDRUNBQkVGWWdBaUFBS1FJVU53TUFJQU1nQWlrQ0FEY0NBQ0FCSUFNUVJ5QUNKQVFMMHdFQkFuOGdBQ2dDQkNJRElBQW9BZ2hKQkg4RFFDQURJQU1vQWdBb0FnQkIvd054UVlRRGFoRUJBQ0FEUVJCcUlnTWdBQ2dDQ0VrTkFBc2dBQ2dDQkFVZ0F3c1FReUFBUVFBMkFnd2dBQ0FCTmdJUUlBRkJBRWdFUUNBQVFRQTJBZ2dnQUVFQU5nSUFJQUJCQURZQ0JDQUFJQUlROUFFUEN5QUFJQUZCQVdvaUJFRUVkQkJLSWdFMkFnUWdBVVVFUUVIQTlBSVFSVUhBOUFJUVJVRUlFQUlpQTBFQU5nSUFJQU5CZnpZQ0JDQURRYWc0UVFBUUFRc2dBQ0FCTmdJQUlBQWdCRUVFZENBQmFqWUNDQ0FBSUFJUTlBRUxiQUVEZnlNRUlRSWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUJCSEJCTUlRQWdBa0VJYWtHK2dRSVFSQ0FCS0FJQUlRRWdBa0hlK1FFUVJDQUNRUkJxSWdNZ0Fpa0NDRGNDQUNBQ1FSaHFJZ1FnQWlrQ0FEY0NBQ0FBSUFNZ0FTQUVFTVFDSUFJa0JDQUFDM1VCQVg4akJDRUNJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVJBUVRDRUFJQUlnQVNrQ0FEY0RBQ0FDSUFJcEFnQTNBZ2dnQUVHY2l3RTJBZ0FnQUVFQU9nQUVJQUJCQVRvQUJTQUFRUUU2QUFZZ0FFRUJPZ0FISUFCQmlKRUJOZ0lBSUFBZ0Fpa0NDRGNDQ0NBQ0pBUWdBQXNyQVFGL0lBQW9BZ2dpQWdSQUlBSWdBUkJXQ3lBQlFmc0FFR3NnQUVFTWFpQUJFSDBnQVVIOUFCQnJDMUlCQVg4akJDRURJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFBUVJRUVRDRUFJQUVvQWdBaEFTQURJQUlwQWdBM0F3QWdBMEVJYWlJQ0lBTXBBZ0EzQWdBZ0FDQUJJQUlRaXdRZ0F5UUVJQUFMUlFFQ2Z5TUVJUUlqQkVFUWFpUUVJd1FqQlU0RVFFRVFFQUFMSUFKQnA0QUNFRVFnQWtFSWFpSURJQUlwQWdBM0FnQWdBU0FERUVjZ0FDZ0NDQ0FCRUZZZ0FpUUVDMHdCQVg4Z0FFRU1FRXdpQWlFQUlBRW9BZ0FoQVNBQVFaeUxBVFlDQUNBQVFUbzZBQVFnQUVFQk9nQUZJQUJCQVRvQUJpQUFRUUU2QUFjZ0FFR3drQUUyQWdBZ0FDQUJOZ0lJSUFJTDNRTUJDbjhqQkNFQ0l3UkJRR3NrQkNNRUl3Vk9CRUJCd0FBUUFBc2dBa0VZYWlFRUlBSkJFR29oQlNBQ1FRaHFJUVlnQWtFb2FrR3Ivd0VRUkNBQ1FUQnFJZ0VnQWlrQ0tEY0NBQ0FDUVRscUlnZ2dBQ0FCRUZKQkFYRTZBQUFnQWtFNGFpSUpJQUFvQWdRZ0FDZ0NBQ0lEYTBFQlN3Ui9JQU1zQUFFRlFRQUxRZjhCY1VIaEFFWTZBQUFnQWtFZ2FrR1JoQUlRUkNBQklBSXBBaUEzQWdBQ2Z3SkFJQUFnQVJCU0RRQWdCRUdVaEFJUVJDQUJJQVFwQWdBM0FnQWdBQ0FCRUZJTkFFRUFEQUVMSUFCQkNHb2lCQ0lES0FJRUlBTW9BZ0JyUVFKMUlRTUNRQUpBQTBBZ0FFSGZBQkJQUlFSQUlBRWdBQkJZSWdjMkFnQWdCMFVOQWlBRUlBRVFhQXdCQ3dzTUFRdEJBQXdCQ3lBRklBQWdBeEJ6SUFZZ0FCQmRJZ00yQWdBZ0F3Ui9BbjhnQWtHWGhBSVFSQ0FCSUFJcEFnQTNBZ0FnQUNBQkVGSkZCRUJCQUNBQVFjVUFFRTlGRFFFYUlBRkJBRFlDQUNBQlFRQTJBZ1FnQUVId0Ftb2dCU0FHSUFFZ0NDQUpFSWtFREFFTElBUW9BZ1FnQkNnQ0FHdEJBblVoQXdKQUEwQWdBRUhGQUJCUERRRWdBU0FBRUZnaUJ6WUNBQ0FIQkVBZ0JDQUJFR2dNQVFzTFFRQU1BUXNnQVNBQUlBTVFjeUFBUWZBQ2FpQUZJQVlnQVNBSUlBa1FpUVFMQlVFQUN3c2hDaUFDSkFRZ0NndXlBZ0VIZnlNRUlRSWpCRUVnYWlRRUl3UWpCVTRFUUVFZ0VBQUxJQUpCQ0dvaEFTQUNRUkJxUVlxT0FoQkVJQUpCR0dvaUJDQUNLUUlRTndJQUlBQWdCQkJTQkg4Z0FTQUFRZWdDYWpZQ0FDQUJJQUFzQU9nQ09nQUVJQUZCQVRvQUJTQUFRUUE2QU9nQ0lBUWdBQkJkSWdNMkFnQWdBU3dBQlFSQUlBRW9BZ0FnQVN3QUJEb0FBQXNnQXdSL0FuOGdBRUhmQUJCUFJRUkFJQUVnQUJCWUlnTTJBZ0FnQXdSL0lBSWdBQ0FCSUFGQkJHb1F6UUlnQUVId0Ftb2dCQ0FDRUlFRUJVRUFDd3dCQ3lBQVFRaHFJZ01pQlNnQ0JDQUZLQUlBYTBFQ2RTRUZBa0FEUUNBQVFjVUFFRThOQVNBQklBQVFXQ0lHTmdJQUlBWUVRQ0FESUFFUWFBd0JDd3RCQUF3QkN5QUJJQUFnQlJCeklBQkI4QUpxSUFRZ0FSQ0JCQXNGUVFBTEJVRUFDeUVISUFJa0JDQUhDODhOQVNWL0l3UWhBaU1FUWFBQ2FpUUVJd1FqQlU0RVFFR2dBaEFBQ3lBQ1FRaHFJUUVnQWtHUUFtb2hCeUFDUVlnQ2FpRURJQUpCZ0FKcUlRUWdBa0g0QVdvaENDQUNRZkFCYWlFSklBSkI2QUZxSVFvZ0FrSGdBV29oQ3lBQ1FkZ0JhaUVNSUFKQjBBRnFJUTBnQWtISUFXb2hEaUFDUWNBQmFpRVBJQUpCdUFGcUlSQWdBa0d3QVdvaEVTQUNRYWdCYWlFU0lBSkJvQUZxSVJNZ0FrR1lBV29oRkNBQ1FaQUJhaUVWSUFKQmlBRnFJUllnQWtHQUFXb2hGeUFDUWZnQWFpRVlJQUpCOEFCcUlSa2dBa0hvQUdvaEdpQUNRZUFBYWlFYklBSkIyQUJxSVJ3Z0FrSFFBR29oSFNBQ1FjZ0FhaUVlSUFKQlFHc2hIeUFDUVRocUlTQWdBa0V3YWlFaElBSkJLR29oSWlBQ1FTQnFJU01nQWtFWWFpRWtJQUpCRUdvaEJTQUFRZVlBRUU4RVFBSkFBa0FDUUFKQUlBQW9BZ1FnQUNnQ0FDSUdhMEVBU3dSL0lBWXNBQUFGUVFBTElnWkJHSFJCR0hWQnpBQnJEaWNBQVFFQkFRRUNBUUVCQVFFQkFRRUJBUUVCQVFFQkFRRUJBUUVCQVFFQkFRQUJBUUVCQVFJQkMwRUJJU1VNQVF0QkFDRUFEQUVMSUFjZ0pUb0FBQ0FBSUFBb0FnQkJBV28yQWdBZ0FrRUFOZ0lBSUFKQkFEWUNCQ0FEUWQ2UEFoQkVJQUVnQXlrQ0FEY0NBQUpBQWtBZ0FDQUJFRklFUUNBQlFlYjVBUkJFREFFRkFrQWdCRUhoandJUVJDQUJJQVFwQWdBM0FnQWdBQ0FCRUZJRVFDQUJRZVQ1QVJCRURBTUxJQWhCNUk4Q0VFUWdBU0FJS1FJQU53SUFJQUFnQVJCU0JFQWdBVUd1L3dFUVJBd0RDeUFKUWVlUEFoQkVJQUVnQ1NrQ0FEY0NBQ0FBSUFFUVVnUkFJQUZCc2Y4QkVFUU1Bd3NnQ2tIcWp3SVFSQ0FCSUFvcEFnQTNBZ0FnQUNBQkVGSUVRQ0FCUWIzL0FSQkVEQU1MSUF0QjdZOENFRVFnQVNBTEtRSUFOd0lBSUFBZ0FSQlNCRUFnQVVIQi93RVFSQXdEQ3lBTVFmQ1BBaEJFSUFFZ0RDa0NBRGNDQUNBQUlBRVFVZ1JBSUFGQnhQOEJFRVFNQXdzZ0RVSHpqd0lRUkNBQklBMHBBZ0EzQWdBZ0FDQUJFRklFUUNBQlFjYi9BUkJFREFNTElBNUI5bzhDRUVRZ0FTQU9LUUlBTndJQUlBQWdBUkJTQkVBZ0FVSEovd0VRUkF3REN5QVBRZm1QQWhCRUlBRWdEeWtDQURjQ0FDQUFJQUVRVWdSQUlBRkJ5LzhCRUVRTUF3c2dFRUg4andJUVJDQUJJQkFwQWdBM0FnQWdBQ0FCRUZJRVFDQUJRYzcvQVJCRURBTUxJQkZCLzQ4Q0VFUWdBU0FSS1FJQU53SUFJQUFnQVJCU0JFQWdBVUhSL3dFUVJBd0RDeUFTUVlLUUFoQkVJQUVnRWlrQ0FEY0NBQ0FBSUFFUVVnUkFJQUZCcmZvQkVFUU1Bd3NnRTBHRmtBSVFSQ0FCSUJNcEFnQTNBZ0FnQUNBQkVGSUVRQ0FCUWRUL0FSQkVEQU1MSUJSQmlKQUNFRVFnQVNBVUtRSUFOd0lBSUFBZ0FSQlNCRUFnQVVIWC93RVFSQXdEQ3lBVlFZdVFBaEJFSUFFZ0ZTa0NBRGNDQUNBQUlBRVFVZ1JBSUFGQjJ2OEJFRVFNQXdzZ0ZrR09rQUlRUkNBQklCWXBBZ0EzQWdBZ0FDQUJFRklFUUNBQlFaajdBUkJFREFNTElCZEJrWkFDRUVRZ0FTQVhLUUlBTndJQUlBQWdBUkJTQkVBZ0FVRzkvZ0VRUkF3REN5QVlRWlNRQWhCRUlBRWdHQ2tDQURjQ0FDQUFJQUVRVWdSQUlBRkIzdjhCRUVRTUF3c2dHVUdYa0FJUVJDQUJJQmtwQWdBM0FnQWdBQ0FCRUZJRVFDQUJRYWY2QVJCRURBTUxJQnBCbXBBQ0VFUWdBU0FhS1FJQU53SUFJQUFnQVJCU0JFQWdBVUhoL3dFUVJBd0RDeUFiUVoyUUFoQkVJQUVnR3lrQ0FEY0NBQ0FBSUFFUVVnUkFJQUZCNS84QkVFUU1Bd3NnSEVHZ2tBSVFSQ0FCSUJ3cEFnQTNBZ0FnQUNBQkVGSUVRQ0FCUWV6L0FSQkVEQU1MSUIxQm81QUNFRVFnQVNBZEtRSUFOd0lBSUFBZ0FSQlNCRUFnQVVIdi93RVFSQXdEQ3lBZVFhYVFBaEJFSUFFZ0hpa0NBRGNDQUNBQUlBRVFVZ1JBSUFGQjhmOEJFRVFNQXdzZ0gwR3BrQUlRUkNBQklCOHBBZ0EzQWdBZ0FDQUJFRklFUUNBQlFmai9BUkJFREFNTElDQkJySkFDRUVRZ0FTQWdLUUlBTndJQUlBQWdBUkJTQkVBZ0FVSDYvd0VRUkF3REN5QWhRYStRQWhCRUlBRWdJU2tDQURjQ0FDQUFJQUVRVWdSQUlBRkJnNEFDRUVRTUF3c2dJa0d5a0FJUVJDQUJJQ0lwQWdBM0FnQWdBQ0FCRUZJRVFDQUJRWVdBQWhCRURBTUxJQ05CdFpBQ0VFUWdBU0FqS1FJQU53SUFJQUFnQVJCU0JFQWdBVUdJZ0FJUVJBd0RDeUFrUWJpUUFoQkVJQUVnSkNrQ0FEY0NBQ0FBSUFFUVVrVUVRRUVBSVFBTUFRc2dBVUdMZ0FJUVJBd0NDd3NNQVFzZ0FpQUJLUU1BTndNQUlBRWdBQkJZSWdNMkFnQWdCVUVBTmdJQUlBTUVmd0ovQWtBQ1FDQUdRUmgwUVJoMVFjd0FhdzRIQUFFQkFRRUJBQUVMSUFVZ0FCQllJZ1EyQWdCQkFDQUVSUTBCR2lBbEJFQWdBU0FFTmdJQUlBVWdBellDQUFzTElBQkI4QUpxSUFjZ0FpQUJJQVVRM2drTEJVRUFDeUVBQ3dzRlFRQWhBQXNnQWlRRUlBQUxtd0lCQlg4akJDRUZJd1JCRUdva0JDTUVJd1ZPQkVCQkVCQUFDeUFCS0FJUUlRY2dBQ2dDSkNJREJFQkJHQ0FESUFBb0FpZ1FTQ0FBUVFBMkFpZ2dBRUVBTmdJa0N5QUNLQUlFSWdNRVFBTkFRUmdRU1NFRUlBQW9BaWdoQmlBRVFRQTJBZ0FnQkNBR05nSUVJQVFnQXlzRENEa0RDQ0FFSUFNckF4QTVBeEFnQUNnQ0pBUkFJQVlnQkRZQ0FBVWdBQ0FFTmdJa0N5QUFJQVEyQWlnZ0F5Z0NBQ0lERFFBTEN5QUFJQUlvQWd3MkFpd2dBRUVNYWlBSFFYOXFJQUJCSUdvUW1Bb2dBQ2dDQ0NJQ1JRUkFJQUFnQVRZQ0NDQUFJQUVnQUJCc05nSUVJQVVrQkE4TElBVWdBQ2dDQkRZQ0FDQUZRUVJxSWdNZ0JTZ0NBRFlDQUNBQ0lBTVFWeUFBSUFFMkFnZ2dBQ0FCSUFBUWJEWUNCQ0FGSkFRTHVBRUJBMzhqQkNFQ0l3UkJFR29rQkNNRUl3Vk9CRUJCRUJBQUN5QUFRYXpnQURZQ0FDQUFMQUFyUVFCSUJFQWdBQ2dDSUJCREN5QUNRUVJxSVFFZ0FFR1E0QUEyQWdBZ0FDZ0NDQ0lEQkVBZ0FpQUFLQUlFTmdJQUlBRWdBaWdDQURZQ0FDQURJQUVRVndzZ0FDZ0NFQ0lCSUFBb0FoUWlBMDhFUUNBQkVFTWdBaVFFRHdzRFFDQUJMQUFMUVFCSUJFQWdBU2dDQUJCRElBQW9BaFFoQXdzZ0FVRU1haUlCSUFOSkRRQUxJQUFvQWhBUVF5QUNKQVFMZ2dFQUVNc0dFR1FRWkJEYUNCRFpDQkRZQ0JCa1FhRFRBa1NON2JXZzk4YXdQamtEQUJEV0NCQmtFR1FRWkVHbzB3SkU3em42L2tJdTlqODVBd0FRWkJCa0VHUVFaQkJrRUdSQnNOTUNSTzg1K3Y1Q0x2WS9PUU1BRUdRUVpCQmtFR1FRWkJCa0VHUVFaQkJrRUdRUVpCQmtFR1FRWkJCa1FaenZBaEF0RU84R0VHUUxDNFNBQWtJQVFZQUlDN2tEOFBqLyt1dlhBUC8vZi8vVThQLy85ZlhjLytURUFBQUEvK3ZOQUFEL2lpdmlwU29xM3JpSFg1NmdmLzhBMG1rZS8zOVFaSlh0Ly9qbDNCUThBUC8vQUFDTEFJdUx1SVlMcWFtcEFHUUFxYW1wdmJkcml3Q0xWV3N2LzR3QW1UTE1pd0FBNlpaNmo3eVBTRDJMTDA5UEwwOVBBTTdSbEFEVC94U1RBTC8vYVdscGFXbHBIcEQvc2lJaS8vcndJb3NpL3dELzNOemMrUGovLzljQTJxVWdnSUNBQUlBQXJmOHZnSUNBOFAvdy8ybTB6VnhjU3dDQy8vL3c4T2FNNXViNi8vRDFmUHdBLy9yTnJkam04SUNBNFAvLyt2clMwOVBUa082UTA5UFQvN2JCLzZCNklMS3FoODc2ZDRpWmQ0aVpzTVRlLy8vZ0FQOEFNczB5K3ZEbS93RC9nQUFBWnMycUFBRE51bFhUazNEYlBMTnhlMmp1QVBxYVNOSE14eFdGR1JsdzlmLzYvK1RoLytTMS85NnRBQUNBL2ZYbWdJQUFhNDRqLzZVQS8wVUEybkRXN3VpcW1QdVlyKzd1MjNDVC8rL1YvOXE1ellVLy84REwzYURkc09EbWdBQ0Evd0FBdkkrUFFXbmhpMFVUK29CeTlLUmdMb3RYLy9YdW9GSXR3TURBaDg3cmFsck5jSUNRY0lDUS8vcjZBUDkvUm9LMDByU01BSUNBMkwvWS8yTkhRT0RRN29MdTlkNnovLy8vOWZYMS8vOEFtczB5QUVISEN3dDlRQUFBQUFBQUFBQkFBQUFBQUFBQStEOEFBQUFBQUFEd1A5b1N3VkZWVmVVL0FBQUFBQUFBNEQvYUVzRlJWVlhWUDlvU3dWRlZWZFUvQUFBQUFBQUE0RC9hRXNGUlZWWGxQd0FBQUFBQUFQQS9BQUFBQUFBQStEOEFBQUFBQUFBQVFBQUFBQUFBQUFCQTNoSUVsUUFBQUFELy8vLy8vLy8vLy8vLy8vOEFRZEFNQzlFREFnQUF3QU1BQU1BRUFBREFCUUFBd0FZQUFNQUhBQURBQ0FBQXdBa0FBTUFLQUFEQUN3QUF3QXdBQU1BTkFBREFEZ0FBd0E4QUFNQVFBQURBRVFBQXdCSUFBTUFUQUFEQUZBQUF3QlVBQU1BV0FBREFGd0FBd0JnQUFNQVpBQURBR2dBQXdCc0FBTUFjQUFEQUhRQUF3QjRBQU1BZkFBREFBQUFBc3dFQUFNTUNBQUREQXdBQXd3UUFBTU1GQUFEREJnQUF3d2NBQU1NSUFBRERDUUFBd3dvQUFNTUxBQUREREFBQXd3MEFBTk1PQUFERER3QUF3d0FBRExzQkFBekRBZ0FNd3dNQURNTUVBQXpUQUFBQUFQLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzhBQVFJREJBVUdCd2dKLy8vLy8vLy8vd29MREEwT0R4QVJFaE1VRlJZWEdCa2FHeHdkSGg4Z0lTSWovLy8vLy8vL0Nnc01EUTRQRUJFU0V4UVZGaGNZR1JvYkhCMGVIeUFoSWlQLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vQUVHd0VBc1lFUUFLQUJFUkVRQUFBQUFGQUFBQUFBQUFDUUFBQUFBTEFFSFFFQXNoRVFBUENoRVJFUU1LQndBQkV3a0xDd0FBQ1FZTEFBQUxBQVlSQUFBQUVSRVJBRUdCRVFzQkN3QkJpaEVMR0JFQUNnb1JFUkVBQ2dBQUFnQUpDd0FBQUFrQUN3QUFDd0JCdXhFTEFRd0FRY2NSQ3hVTUFBQUFBQXdBQUFBQUNRd0FBQUFBQUF3QUFBd0FRZlVSQ3dFT0FFR0JFZ3NWRFFBQUFBUU5BQUFBQUFrT0FBQUFBQUFPQUFBT0FFR3ZFZ3NCRUFCQnV4SUxIZzhBQUFBQUR3QUFBQUFKRUFBQUFBQUFFQUFBRUFBQUVnQUFBQklTRWdCQjhoSUxEaElBQUFBU0VoSUFBQUFBQUFBSkFFR2pFd3NCQ3dCQnJ4TUxGUW9BQUFBQUNnQUFBQUFKQ3dBQUFBQUFDd0FBQ3dCQjNSTUxBUXdBUWVrVEN5Y01BQUFBQUF3QUFBQUFDUXdBQUFBQUFBd0FBQXdBQURBeE1qTTBOVFkzT0RsQlFrTkVSVVlBUVpBV0MvOEJBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBeUFDSUFJZ0FpQUNJQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUNBQUZnQk1BRXdBVEFCTUFFd0FUQUJNQUV3QVRBQk1BRXdBVEFCTUFFd0FUQUNOZ0kyQWpZQ05nSTJBallDTmdJMkFqWUNOZ0V3QVRBQk1BRXdBVEFCTUFFd0FqVkNOVUkxUWpWQ05VSTFRakZDTVVJeFFqRkNNVUl4UWpGQ01VSXhRakZDTVVJeFFqRkNNVUl4UWpGQ01VSXhRakZDTVVFd0FUQUJNQUV3QVRBQk1BSTFnaldDTllJMWdqV0NOWUl4Z2pHQ01ZSXhnakdDTVlJeGdqR0NNWUl4Z2pHQ01ZSXhnakdDTVlJeGdqR0NNWUl4Z2pHQk1BRXdBVEFCTUFDQUVHVUhndjVBd0VBQUFBQ0FBQUFBd0FBQUFRQUFBQUZBQUFBQmdBQUFBY0FBQUFJQUFBQUNRQUFBQW9BQUFBTEFBQUFEQUFBQUEwQUFBQU9BQUFBRHdBQUFCQUFBQUFSQUFBQUVnQUFBQk1BQUFBVUFBQUFGUUFBQUJZQUFBQVhBQUFBR0FBQUFCa0FBQUFhQUFBQUd3QUFBQndBQUFBZEFBQUFIZ0FBQUI4QUFBQWdBQUFBSVFBQUFDSUFBQUFqQUFBQUpBQUFBQ1VBQUFBbUFBQUFKd0FBQUNnQUFBQXBBQUFBS2dBQUFDc0FBQUFzQUFBQUxRQUFBQzRBQUFBdkFBQUFNQUFBQURFQUFBQXlBQUFBTXdBQUFEUUFBQUExQUFBQU5nQUFBRGNBQUFBNEFBQUFPUUFBQURvQUFBQTdBQUFBUEFBQUFEMEFBQUErQUFBQVB3QUFBRUFBQUFCaEFBQUFZZ0FBQUdNQUFBQmtBQUFBWlFBQUFHWUFBQUJuQUFBQWFBQUFBR2tBQUFCcUFBQUFhd0FBQUd3QUFBQnRBQUFBYmdBQUFHOEFBQUJ3QUFBQWNRQUFBSElBQUFCekFBQUFkQUFBQUhVQUFBQjJBQUFBZHdBQUFIZ0FBQUI1QUFBQWVnQUFBRnNBQUFCY0FBQUFYUUFBQUY0QUFBQmZBQUFBWUFBQUFHRUFBQUJpQUFBQVl3QUFBR1FBQUFCbEFBQUFaZ0FBQUdjQUFBQm9BQUFBYVFBQUFHb0FBQUJyQUFBQWJBQUFBRzBBQUFCdUFBQUFid0FBQUhBQUFBQnhBQUFBY2dBQUFITUFBQUIwQUFBQWRRQUFBSFlBQUFCM0FBQUFlQUFBQUhrQUFBQjZBQUFBZXdBQUFId0FBQUI5QUFBQWZnQUFBSDhBUVpRcUMva0RBUUFBQUFJQUFBQURBQUFBQkFBQUFBVUFBQUFHQUFBQUJ3QUFBQWdBQUFBSkFBQUFDZ0FBQUFzQUFBQU1BQUFBRFFBQUFBNEFBQUFQQUFBQUVBQUFBQkVBQUFBU0FBQUFFd0FBQUJRQUFBQVZBQUFBRmdBQUFCY0FBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFIQUFBQUIwQUFBQWVBQUFBSHdBQUFDQUFBQUFoQUFBQUlnQUFBQ01BQUFBa0FBQUFKUUFBQUNZQUFBQW5BQUFBS0FBQUFDa0FBQUFxQUFBQUt3QUFBQ3dBQUFBdEFBQUFMZ0FBQUM4QUFBQXdBQUFBTVFBQUFESUFBQUF6QUFBQU5BQUFBRFVBQUFBMkFBQUFOd0FBQURnQUFBQTVBQUFBT2dBQUFEc0FBQUE4QUFBQVBRQUFBRDRBQUFBL0FBQUFRQUFBQUVFQUFBQkNBQUFBUXdBQUFFUUFBQUJGQUFBQVJnQUFBRWNBQUFCSUFBQUFTUUFBQUVvQUFBQkxBQUFBVEFBQUFFMEFBQUJPQUFBQVR3QUFBRkFBQUFCUkFBQUFVZ0FBQUZNQUFBQlVBQUFBVlFBQUFGWUFBQUJYQUFBQVdBQUFBRmtBQUFCYUFBQUFXd0FBQUZ3QUFBQmRBQUFBWGdBQUFGOEFBQUJnQUFBQVFRQUFBRUlBQUFCREFBQUFSQUFBQUVVQUFBQkdBQUFBUndBQUFFZ0FBQUJKQUFBQVNnQUFBRXNBQUFCTUFBQUFUUUFBQUU0QUFBQlBBQUFBVUFBQUFGRUFBQUJTQUFBQVV3QUFBRlFBQUFCVkFBQUFWZ0FBQUZjQUFBQllBQUFBV1FBQUFGb0FBQUI3QUFBQWZBQUFBSDBBQUFCK0FBQUFmd0JCa0RJTFp3b0FBQUJrQUFBQTZBTUFBQkFuQUFDZ2hnRUFRRUlQQUlDV21BQUE0ZlVGVEVOZlExUlpVRVVBQUFBQVRFTmZUbFZOUlZKSlF3QUFURU5mVkVsTlJRQUFBQUFBVEVOZlEwOU1URUZVUlFBQVRFTmZUVTlPUlZSQlVsa0FURU5mVFVWVFUwRkhSVk1BUVlBekM1Y0NBd0FBQUFRQUFBQUVBQUFBQmdBQUFJUDVvZ0JFVG00QS9Da1ZBTkZYSndEZE5QVUFZdHZBQUR5WmxRQkJrRU1BWTFIK0FMdmVxd0MzWWNVQU9tNGtBTkpOUWdCSkJ1QUFDZW91QUJ5UzBRRHJIZjRBS2JFY0FPZytwd0QxTllJQVJMc3VBSnpwaEFDMEpuQUFRWDVmQU5hUk9RQlRnemtBblBRNUFJdGZoQUFvK2IwQStCODdBTjcvbHdBUG1BVUFFUy92QUFwYWl3QnRIMjBBejM0MkFBbkxKd0JHVDdjQW5tWS9BQzNxWHdDNkozVUE1ZXZIQUQxNzhRRDNPUWNBa2xLS0FQdHI2Z0Fmc1Y4QUNGMk5BREFEVmdCNy9FWUE4S3RyQUNDOHp3QTI5Sm9BNDZrZEFGNWhrUUFJRytZQWhabGxBS0FVWHdDTlFHZ0FnTmovQUNkelRRQUdCakVBeWxZVkFNbW9jd0I3NG1BQWE0ekFBRUdqTlF1ZEFVRDdJZmsvQUFBQUFDMUVkRDRBQUFDQW1FYjRQQUFBQUdCUnpIZzdBQUFBZ0lNYjhEa0FBQUJBSUNWNk9BQUFBSUFpZ3VNMkFBQUFBQjN6YVRWUHUyRUZaNnpkUHhndFJGVDdJZWsvbS9hQjBndHo3ejhZTFVSVSt5SDVQK0psTHlKL0szbzhCMXdVTXlhbWdUeTl5L0I2aUFkd1BBZGNGRE1tcHBFOE1ERXlNelExTmpjNE9XRmlZMlJsWmtGQ1EwUkZSbmhZS3kxd1VHbEpiazRBUWRBMkM0RUJKUUFBQUcwQUFBQXZBQUFBSlFBQUFHUUFBQUF2QUFBQUpRQUFBSGtBQUFBbEFBQUFXUUFBQUMwQUFBQWxBQUFBYlFBQUFDMEFBQUFsQUFBQVpBQUFBQ1VBQUFCSkFBQUFPZ0FBQUNVQUFBQk5BQUFBT2dBQUFDVUFBQUJUQUFBQUlBQUFBQ1VBQUFCd0FBQUFBQUFBQUNVQUFBQklBQUFBT2dBQUFDVUFBQUJOQUVIZ053dkJEU1VBQUFCSUFBQUFPZ0FBQUNVQUFBQk5BQUFBT2dBQUFDVUFBQUJUQUFBQUpRQUFBRWdBQUFBNkFBQUFKUUFBQUUwQUFBQTZBQUFBSlFBQUFGTUFBQUFnUlFBQWdWRUFBRWhGQUFCY1VRQUFJQndBQUFBQUFBQWdSUUFBazFFQUFDQkZBQUQrVVFBQVBGRUFBS3BSQUFBQUFBQUFBZ0FBQUVBY0FBQUFEQUFBT0J3QUFBQUFBQUFnUlFBQWoxSUFBRHhSQUFCUFVnQUFBQUFBQUFJQUFBQm9IQUFBQUF3QUFEZ2NBQUFBQUFBQUlFVUFBTXhTQUFBOFVRQUFKRk1BQUFBQUFBQUJBQUFBa0J3QUFBQUFBQUJJUlFBQTlGSUFBSmdjQUFBQUFBQUFJRVVBQUVoVEFBQThVUUFBWDFNQUFBQUFBQUFDQUFBQVFCd0FBQUFNQUFEQUhBQUFBQUFBQUNCRkFBQ0FWQUFBSUVVQUFMTlRBQUFnUlFBQTJsTUFBQ0JGQUFBQlZBQUFJRVVBQUN4VUFBQWdSUUFBVTFRQUFEeFJBQUNPVkFBQUFBQUFBQUVBQUFBUUhRQUFBQUFBQUR4UkFBQzNWQUFBQUFBQUFBSUFBQUJRSFFBQUFBd0FBRGdjQUFBQUFBQUFJRVVBQU4xVUFBQWdSUUFBQUZVQUFEeFJBQUFTVlFBQUFBQUFBQUlBQUFDQUhRQUFBQXdBQU1BY0FBQUFBQUFBSUVVQUFDZFZBQUJJUlFBQU9WVUFBQ0FjQUFBQUFBQUFJRVVBQUc1VkFBQWdSUUFBWUZVQUFEeFJBQUNIVlFBQUFBQUFBQUlBQUFESUhRQUFBQXdBQURnY0FBQUFBQUFBSUVVQUFKeFZBQUE4VVFBQXJsVUFBQUFBQUFBQ0FBQUE4QjBBQUFBTUFBQTRIQUFBQUFBQUFDQkZBQURWVlFBQVBGRUFBUGxWQUFBQUFBQUFBZ0FBQUJnZUFBQUFEQUFBT0J3QUFBQUFBQUFnUlFBQURsWUFBRHhSQUFBZ1ZnQUFBQUFBQUFJQUFBQ0FIUUFBQUF3QUFEZ2NBQUFBQUFBQVBGRUFBRFZXQUFBQUFBQUFBZ0FBQUdBZUFBQUFEQUFBT0J3QUFBQUFBQUFnUlFBQVZGWUFBRHhSQUFCd1ZnQUFBQUFBQUFJQUFBQ0lIZ0FBQUF3QUFEZ2NBQUFBQUFBQUlFVUFBSkpXQUFBOFVRQUFzVllBQUFBQUFBQUNBQUFBc0I0QUFBQU1BQURBSEFBQUFBQUFBQ0JGQUFEWVZnQUFQRkVBQVB4V0FBQUFBQUFBQWdBQUFOZ2VBQUFBREFBQXdCd0FBQUFBQUFBZ1JRQUFHVmNBQUR4UkFBQXpWd0FBQUFBQUFBSUFBQUJnSGdBQUFBd0FBTUFjQUFBQUFBQUFQRkVBQUZKWEFBQUFBQUFBQWdBQUFDQWZBQUFBREFBQXdCd0FBQUFBQUFBZ1JRQUFjRmNBQUR4UkFBQ0xWd0FBQUFBQUFBSUFBQUFZSGdBQUFBd0FBTUFjQUFBQUFBQUFQRkVBQU1WWEFBQUFBQUFBQVFBQUFHQWZBQUFBQUFBQUlFVUFBS0JYQUFBOFVRQUFDMWdBQUFBQUFBQUJBQUFBZ0I4QUFBQUFBQUFnUlFBQTVsY0FBRWhGQUFBc1dBQUFtQjhBQUFBQUFBQWdSUUFBVzFnQUFDQkZBQUNIV0FBQUlFVUFBSzlZQUFCSVJRQUExVmdBQUtBZkFBQUFBQUFBUEZFQUFPNVlBQUFBQUFBQUFnQUFBRmdkQUFBQURBQUF3QndBQUFBQUFBQThVUUFBQTFrQUFBQUFBQUFDQUFBQVVCMEFBQUFNQUFEQUhBQUFBQUFBQUVoRkFBQUpYQUFBRUNFQUFBQUFBQUFnUlFBQUtWa0FBRHhSQUFCTldRQUFBQUFBQUFJQUFBQlFJQUFBQUF3QUFNQWNBQUFBQUFBQVBGRUFBRDFaQUFBQUFBQUFBUUFBQUJBZ0FBQUFBQUFBSUVVQUFJZFpBQUE4VVFBQTVGa0FBQUFBQUFBQ0FBQUFlQ0FBQUFBTUFBREFIQUFBQUFBQUFDQkZBQUFOV2dBQUlFVUFBRE5hQUFBOFVRQUFabG9BQUFBQUFBQUJBQUFBZ0NBQUFBQUFBQUFnUlFBQXRWb0FBRHhSQUFEaldnQUFBQUFBQUFFQUFBQ2dJQUFBQUFBQUFFaEZBQUFOV3dBQTBDQUFBQUFBQUFBZ1JRQUFPbHNBQUVoRkFBQnJXd0FBMENBQUFBQUFBQUE4VVFBQW1Gc0FBQUFBQUFBQ0FBQUFDQ0VBQUFBTUFBQTRIQUFBQUFBQUFDQkZBQURTV3dBQUlFVUFBQjFjQUFCSVJRQUFIRjRBQUJBaEFBQUFBQUFBU0VVQUFETmNBQUFnSEFBQUFBQUFBRWhGQUFCV1hBQUFTQ0VBQUFBQUFBQWdSUUFBdzF3QUFEeFJBQUJmWFFBQUFBQUFBQUlBQUFCd0lRQUFBQXdBQU1BY0FBQUFBQUFBSUVVQUFMOWRBQUFnUlFBQUxWNEFBQ0JGQUFCbVhnQUFJRVVBQUw5ZUFBQWdSUUFBS2w4QUFDQkZBQUNVWHdBQVNFVUFBT2RmQUFDd0lRQUFBQUFBQUNCRkFBQ0lZQUFBUEZFQUFGaGhBQUFBQUFBQUFRQUFBSmdoQUFBQUFBQUFQRkVBQUtkaEFBQUFBQUFBQVFBQUFJQWhBQUFBQUFBQVBGRUFBUHhoQUFBQUFBQUFBUUFBQUhnaEFBQUFBQUFBUEZFQUFERmlBQUFBQUFBQUFnQUFBQ0FpQUFBQURBQUFPQndBQUFBQUFBQWdSUUFBWjJJQUFDQkZBQUNhWWdBQUlFVUFBR1ZqQUFBZ1JRQUFCR1FBQUNCRkFBQ2paQUFBSUVVQUFFeGxBQUFnUlFBQTlXVUFBQ0JGQUFDZVpnQUFJRVVBQUVkbkFBQWdSUUFBZm1jQUFEeFJBQURNWndBQUFBQUFBQUVBQUFCZ0lnQUFBQUFBQUR4UkFBRC9ad0FBQUFBQUFBRUFBQUFvSWdBQUFBQUFBQVVBUWF6RkFBc0JJZ0JCeE1VQUN3b0JBQUFBQVFBQUFJSy9BRUhjeFFBTEFRSUFRZXZGQUFzRi8vLy8vLzhBUWJER0FBc0JDUUJCdk1ZQUN3RWlBRUhReGdBTEVnSUFBQUFBQUFBQUFRQUFBS2lkQUFBQUJBQkIvTVlBQ3dULy8vLy9BRUhBeHdBTEFRVUFRY3pIQUFzQklnQkI1TWNBQ3c0REFBQUFBUUFBQUxpaEFBQUFCQUJCL01jQUN3RUJBRUdMeUFBTEJRci8vLy8vQUVIMHlBQUxBUVFBUVp2SkFBc0YvLy8vLy84QVFlREpBQXVpRmlCRkFBQzBhd0FBSUVVQUFOTnJBQUFnUlFBQThtc0FBQ0JGQUFBUmJBQUFJRVVBQURCc0FBQWdSUUFBVDJ3QUFDQkZBQUJ1YkFBQUlFVUFBSTFzQUFBZ1JRQUFyR3dBQUNCRkFBRExiQUFBSUVVQUFPcHNBQUFnUlFBQUNXMEFBQ0JGQUFBb2JRQUFQRkVBQUR0dEFBQUFBQUFBQVFBQUFHQWxBQUFBQUFBQUlFVUFBSHB0QUFBOFVRQUFvRzBBQUFBQUFBQUJBQUFBWUNVQUFBQUFBQUE4VVFBQTMyMEFBQUFBQUFBQkFBQUFZQ1VBQUFBQUFBQklSUUFBTlc0QUFPZ3FBQUFBQUFBQVNFVUFBR051QUFDNEpRQUFBQUFBQUNCRkFBQlJiZ0FBU0VVQUFJMXVBQUM0SlFBQUFBQUFBQ0JGQUFDM2JnQUFJRVVBQU9odUFBQThVUUFBR1c4QUFBQUFBQUFCQUFBQXFDVUFBQVAwLy84OFVRQUFTRzhBQUFBQUFBQUJBQUFBd0NVQUFBUDAvLzg4VVFBQWQyOEFBQUFBQUFBQkFBQUFxQ1VBQUFQMC8vODhVUUFBcG04QUFBQUFBQUFCQUFBQXdDVUFBQVAwLy85SVJRQUExVzhBQU5nbEFBQUFBQUFBU0VVQUFPNXZBQURRSlFBQUFBQUFBRWhGQUFBdGNBQUEyQ1VBQUFBQUFBQklSUUFBUlhBQUFOQWxBQUFBQUFBQVNFVUFBRjF3QUFDUUpnQUFBQUFBQUVoRkFBQnhjQUFBNENvQUFBQUFBQUJJUlFBQWgzQUFBSkFtQUFBQUFBQUFQRkVBQUtCd0FBQUFBQUFBQWdBQUFKQW1BQUFDQUFBQTBDWUFBQUFBQUFBOFVRQUE1SEFBQUFBQUFBQUJBQUFBNkNZQUFBQUFBQUFnUlFBQStuQUFBRHhSQUFBVGNRQUFBQUFBQUFJQUFBQ1FKZ0FBQWdBQUFCQW5BQUFBQUFBQVBGRUFBRmR4QUFBQUFBQUFBUUFBQU9nbUFBQUFBQUFBUEZFQUFIdHhBQUFBQUFBQUFnQUFBSkFtQUFBQ0FBQUFTQ2NBQUFBQUFBQThVUUFBdjNFQUFBQUFBQUFCQUFBQVlDY0FBQUFBQUFBZ1JRQUExWEVBQUR4UkFBRHVjUUFBQUFBQUFBSUFBQUNRSmdBQUFnQUFBSWduQUFBQUFBQUFQRkVBQURKeUFBQUFBQUFBQVFBQUFHQW5BQUFBQUFBQVBGRUFBSWh6QUFBQUFBQUFBd0FBQUpBbUFBQUNBQUFBeUNjQUFBSUFBQURRSndBQUFBZ0FBQ0JGQUFEdmN3QUFJRVVBQU0xekFBQThVUUFBQW5RQUFBQUFBQUFEQUFBQWtDWUFBQUlBQUFESUp3QUFBZ0FBQUFBb0FBQUFDQUFBSUVVQUFFZDBBQUE4VVFBQWFYUUFBQUFBQUFBQ0FBQUFrQ1lBQUFJQUFBQW9LQUFBQUFnQUFDQkZBQUN1ZEFBQVBGRUFBTU4wQUFBQUFBQUFBZ0FBQUpBbUFBQUNBQUFBS0NnQUFBQUlBQUE4VVFBQUNIVUFBQUFBQUFBQ0FBQUFrQ1lBQUFJQUFBQndLQUFBQWdBQUFDQkZBQUFrZFFBQVBGRUFBRGwxQUFBQUFBQUFBZ0FBQUpBbUFBQUNBQUFBY0NnQUFBSUFBQUE4VVFBQVZYVUFBQUFBQUFBQ0FBQUFrQ1lBQUFJQUFBQndLQUFBQWdBQUFEeFJBQUJ4ZFFBQUFBQUFBQUlBQUFDUUpnQUFBZ0FBQUhBb0FBQUNBQUFBUEZFQUFKeDFBQUFBQUFBQUFnQUFBSkFtQUFBQ0FBQUErQ2dBQUFBQUFBQWdSUUFBNG5VQUFEeFJBQUFHZGdBQUFBQUFBQUlBQUFDUUpnQUFBZ0FBQUNBcEFBQUFBQUFBSUVVQUFFeDJBQUE4VVFBQWEzWUFBQUFBQUFBQ0FBQUFrQ1lBQUFJQUFBQklLUUFBQUFBQUFDQkZBQUN4ZGdBQVBGRUFBTXAyQUFBQUFBQUFBZ0FBQUpBbUFBQUNBQUFBY0NrQUFBQUFBQUFnUlFBQUVIY0FBRHhSQUFBcGR3QUFBQUFBQUFJQUFBQ1FKZ0FBQWdBQUFKZ3BBQUFDQUFBQUlFVUFBRDUzQUFBOFVRQUExWGNBQUFBQUFBQUNBQUFBa0NZQUFBSUFBQUNZS1FBQUFnQUFBRWhGQUFCV2R3QUEwQ2tBQUFBQUFBQThVUUFBZVhjQUFBQUFBQUFDQUFBQWtDWUFBQUlBQUFEd0tRQUFBZ0FBQUNCRkFBQ2Nkd0FBU0VVQUFMTjNBQURRS1FBQUFBQUFBRHhSQUFEcWR3QUFBQUFBQUFJQUFBQ1FKZ0FBQWdBQUFQQXBBQUFDQUFBQVBGRUFBQXg0QUFBQUFBQUFBZ0FBQUpBbUFBQUNBQUFBOENrQUFBSUFBQUE4VVFBQUxuZ0FBQUFBQUFBQ0FBQUFrQ1lBQUFJQUFBRHdLUUFBQWdBQUFFaEZBQUJSZUFBQWtDWUFBQUFBQUFBOFVRQUFaM2dBQUFBQUFBQUNBQUFBa0NZQUFBSUFBQUNZS2dBQUFnQUFBQ0JGQUFCNWVBQUFQRkVBQUk1NEFBQUFBQUFBQWdBQUFKQW1BQUFDQUFBQW1Db0FBQUlBQUFCSVJRQUFvSGdBQUpBbUFBQUFBQUFBU0VVQUFMVjRBQUNRSmdBQUFBQUFBQ0JGQUFES2VBQUFJRVVBQUlaNUFBQklSUUFBNW5rQUFBQXJBQUFBQUFBQVNFVUFBSk41QUFBUUt3QUFBQUFBQUNCRkFBQzBlUUFBU0VVQUFNRjVBQUR3S2dBQUFBQUFBRWhGQUFCMmV3QUFPQ3NBQUFBQUFBQWdSUUFBcFhzQUFFaEZBQUJaZkFBQU9Dc0FBQUFBQUFCSVJRQUFuSHdBQURnckFBQUFBQUFBU0VVQUFPbDhBQUE0S3dBQUFBQUFBRWhGQUFBdmZRQUFPQ3NBQUFBQUFBQklSUUFBWDMwQUFEZ3JBQUFBQUFBQVNFVUFBSjE5QUFBNEt3QUFBQUFBQUVoRkFBRE9mUUFBT0NzQUFBQUFBQUJJUlFBQUhuNEFBRGdyQUFBQUFBQUFTRVVBQUZkK0FBQTRLd0FBQUFBQUFFaEZBQUNTZmdBQU9Dc0FBQUFBQUFCSVJRQUF6bjRBQURnckFBQUFBQUFBU0VVQUFCRi9BQUE0S3dBQUFBQUFBRWhGQUFBL2Z3QUFPQ3NBQUFBQUFBQklSUUFBY244QUFEZ3JBQUFBQUFBQVNFVUFBQzZBQUFBNEt3QUFBQUFBQUVoRkFBQmJnQUFBT0NzQUFBQUFBQUJJUlFBQWpJQUFBRGdyQUFBQUFBQUFTRVVBQU1xQUFBQTRLd0FBQUFBQUFFaEZBQUJDZ1FBQU9Dc0FBQUFBQUFCSVJRQUFCNEVBQURnckFBQUFBQUFBU0VVQUFJbUJBQUE0S3dBQUFBQUFBRWhGQUFEU2dRQUFPQ3NBQUFBQUFBQklSUUFBTFlJQUFEZ3JBQUFBQUFBQVNFVUFBRmlDQUFBNEt3QUFBQUFBQUVoRkFBQ1NnZ0FBT0NzQUFBQUFBQUJJUlFBQXhvSUFBRGdyQUFBQUFBQUFTRVVBQUJhREFBQTRLd0FBQUFBQUFFaEZBQUJGZ3dBQU9Dc0FBQUFBQUFCSVJRQUFmb01BQURnckFBQUFBQUFBU0VVQUFMZURBQUE0S3dBQUFBQUFBRWhGQUFEY2hRQUFPQ3NBQUFBQUFBQklSUUFBS29ZQUFEZ3JBQUFBQUFBQVNFVUFBR1dHQUFBNEt3QUFBQUFBQUVoRkFBQ1JoZ0FBT0NzQUFBQUFBQUJJUlFBQTI0WUFBRGdyQUFBQUFBQUFTRVVBQUJDSEFBQTRLd0FBQUFBQUFFaEZBQUJEaHdBQU9Dc0FBQUFBQUFCSVJRQUFlb2NBQURnckFBQUFBQUFBU0VVQUFLK0hBQUE0S3dBQUFBQUFBRWhGQUFCRmlBQUFPQ3NBQUFBQUFBQklSUUFBZDRnQUFEZ3JBQUFBQUFBQVNFVUFBS21JQUFBNEt3QUFBQUFBQUVoRkFBQUJpUUFBT0NzQUFBQUFBQUJJUlFBQVNZa0FBRGdyQUFBQUFBQUFTRVVBQUlHSkFBQTRLd0FBQUFBQUFFaEZBQURQaVFBQU9Dc0FBQUFBQUFCSVJRQUFEb29BQURnckFBQUFBQUFBU0VVQUFGR0tBQUE0S3dBQUFBQUFBRWhGQUFDQ2lnQUFPQ3NBQUFBQUFBQklSUUFBdklzQUFEZ3JBQUFBQUFBQVNFVUFBUHlMQUFBNEt3QUFBQUFBQUVoRkFBQXZqQUFBT0NzQUFBQUFBQUJJUlFBQWFZd0FBRGdyQUFBQUFBQUFTRVVBQUtLTUFBQTRLd0FBQUFBQUFFaEZBQURmakFBQU9Dc0FBQUFBQUFCSVJRQUFYSTBBQURnckFBQUFBQUFBU0VVQUFJaU5BQUE0S3dBQUFBQUFBRWhGQUFDK2pRQUFPQ3NBQUFBQUFBQklSUUFBRW80QUFEZ3JBQUFBQUFBQVNFVUFBRXFPQUFBNEt3QUFBQUFBQUVoRkFBQ05qZ0FBT0NzQUFBQUFBQUJJUlFBQXZvNEFBRGdyQUFBQUFBQUFTRVVBQU82T0FBQTRLd0FBQUFBQUFFaEZBQUFwandBQU9Dc0FBQUFBQUFCSVJRQUFhNDhBQURnckFBQUFBQUFBU0VVQUFGcVFBQUE0S3dBQUFBQUFBRWhGQUFEbGtBQUFBQ3NBQUFBQUFBQklSUUFBQjVFQUFHQXZBQUFBQUFBQVNFVUFBQ3VSQUFBQUt3QUFBQUFBQUNCUkFBQlRrUUFBSUZFQUFGV1JBQUFnVVFBQVY1RUFBQ0JSQUFCWmtRQUFJRkVBQUZ1UkFBQWdVUUFBWFpFQUFDQlJBQUJma1FBQUlGRUFBR0dSQUFBZ1VRQUFZNUVBQUNCUkFBQVNmZ0FBSUZFQUFHV1JBQUFnVVFBQVo1RUFBQ0JSQUFCcGtRQUFTRVVBQUd1UkFBRHdLZ0JCak9BQUMva0JPQndBQUFFQUFBQUNBQUFBQVFBQUFBRUFBQUFCQUFBQUFBQUFBRWdjQUFBREFBQUFCQUFBQUFFQUFBQUNBQUFBQlFBQUFBQUFBQUJ3SEFBQUJnQUFBQWNBQUFBREFBQUFCQUFBQUFnQUFBQUFBQUFBa0J3QUFBa0FBQUFLQUFBQUFRQUFBQUFBQUFDd0hBQUFDUUFBQUFzQUFBQUNBQUFBQUFBQUFNQWNBQUFNQUFBQURRQUFBQUVBQUFBQkFBQUFBUUFBQUFBQUFBRElIQUFBRGdBQUFBOEFBQUFGQUFBQUJnQUFBQkFBQUFBQUFBQUE2QndBQUJFQUFBQVNBQUFBQndBQUFBZ0FBQUFUQUFBQUFRQUFBQUVBQUFBQUFBQUFFQjBBQUJRQUFBQVZBQUFBQXdBQUFBQUFBQUFJSFFBQUZnQUFBQmNBQUFBRUFFR040Z0FMZ0FJZEFBQVlBQUFBR1FBQUFBVUFBQUFBQUFBQStCd0FBQm9BQUFBYkFBQUFCZ0FBQUFBQUFBRHdIQUFBSEFBQUFCMEFBQUFIQUFBQUFBQUFBQmdkQUFBVUFBQUFIZ0FBQUFnQUFBQUFBQUFBTUIwQUFCOEFBQUFnQUFBQUNRQUFBQW9BQUFBaEFBQUFBQUFBQUdBZEFBQWlBQUFBSXdBQUFBc0FBQUFNQUFBQUpBQUFBQUVBQUFBQ0FBQUFDQUFBQUFBQUFBQ1lIUUFBSlFBQUFDWUFBQUFDQUFBQUFRQUFBQUVBQUFBQkFBQUFKd0FBQUNnQUFBQU5BQUFBS1FBQUFBNEFBQUFCQUFBQUFRQUFBQ29BQUFBckFBQUFEd0FBQUFBQUFBQ2dIUUFBTEFBQUFDMEFBQUFBQUFBQUtCOEFBQzRBQUFBdkFBQUFFQUFBQUJFQUFBQXdBRUdWNUFBTDFBTWZBQUF4QUFBQU1nQUFBQklBQUFBVEFBQUFNd0FBQUFBQUFBRGdIZ0FBTkFBQUFEVUFBQUFVQUFBQUZRQUFBRFlBQUFBQUFBQUFrQjRBQURjQUFBQTRBQUFBRmdBQUFCY0FBQUE1QUFBQUFBQUFBR2dlQUFBNkFBQUFPd0FBQUJnQUFBQVpBQUFBUEFBQUFBQUFBQUJBSGdBQVBRQUFBRDRBQUFBYUFBQUFHd0FBQUQ4QUFBQUFBQUFBSUI0QUFFQUFBQUJCQUFBQUhBQUFBQjBBQUFCQ0FBQUFBQUFBQVBnZEFBQkRBQUFBUkFBQUFCNEFBQUFmQUFBQVJRQUFBQUFBQUFEUUhRQUFSZ0FBQUVjQUFBQWdBQUFBSVFBQUFFZ0FBQUFBQUFBQXFCMEFBRWtBQUFCS0FBQUFJZ0FBQUNNQUFBQkxBQUFBQUFBQUFMZ2VBQUJNQUFBQVRRQUFBQ1FBQUFBbEFBQUFUZ0FBQUFBQUFBQklId0FBVHdBQUFGQUFBQUFKQUFBQUFBQUFBR0FmQUFCUEFBQUFVUUFBQUFvQUFBQUFBQUFBYUI4QUFGSUFBQUJUQUFBQUN3QUFBQUFBQUFDQUh3QUFVZ0FBQUZRQUFBQU1BQUFBQUFBQUFJZ2ZBQUFDQUFBQUFRQUFBQUlBQUFBQUFBQUFxQjhBQUZVQUFBQldBQUFBRFFBQUFBQUFBQUN3SHdBQVZ3QUFBRmdBQUFBREFBQUFBQUFBQU1BZkFBQlpBQUFBV2dBQUFDWUFBQUFuQUFBQVd3QUFBQUFBQUFEZ0h3QUFYQUFBQUYwQUFBQW9BQUFBS1FBQUFGNEFRZkhuQUF2WUF5QUFBRjhBQUFCZ0FBQUFLZ0FBQUFBQUFBRG9JQUFBWVFBQUFHSUFBQUFyQUFBQUxBQUFBR01BQUFBQUFBQUFHQ0FBQUdRQUFBQmxBQUFBTFFBQUFDNEFBQUJtQUFBQUFBQUFBQkFnQUFCbkFBQUFhQUFBQUE0QUFBQUFBQUFBT0NBQUFHY0FBQUJwQUFBQUR3QUFBQUFBQUFDSUlBQUFhZ0FBQUdzQUFBQVFBQUFBQUFBQUFJQWdBQUJxQUFBQWJBQUFBQkVBQUFBQUFBQUFXQ0FBQUcwQUFBQnVBQUFBTHdBQUFEQUFBQUJ2QUFBQUFBQUFBTmdnQUFCd0FBQUFjUUFBQUFRQUFBQUFBQUFBd0NBQUFIQUFBQUJ5QUFBQUJRQUFBQUFBQUFDb0lBQUFjd0FBQUhRQUFBQVNBQUFBQUFBQUFLQWdBQUJ6QUFBQWRRQUFBQk1BQUFBQUFBQUFHQ0VBQUhZQUFBQjNBQUFBTVFBQUFBQUFBQUJRSVFBQWVBQUFBSGtBQUFBeUFBQUFNd0FBQUhvQUFBQUFBQUFBT0NFQUFCUUFBQUFWQUFBQUJnQUFBSHNBQUFBREFBQUFCd0FBQURRQUFBQjhBQUFBZlFBQUFBQUFBQURvSVFBQWZnQUFBSDhBQUFBV0FBQUFBQUFBQU5BaEFBQ0FBQUFBZ1FBQUFCY0FBQUFBQUFBQXVDRUFBSUlBQUFDREFBQUFHQUFBQUFBQUFBQ2dJUUFBR1FBQUFCb0FBQUFJQUFBQWhBQUFBQVFBQUFBSkFBQUFOUUFBQUlVQUFBQ0dBQUFBQUFBQUFKZ2hBQUNDQUFBQWh3QUFBQnNBUWRqckFBc0NrQ0VBUWVqckFBc3BpQ0VBQUFBQUFBQ0FJUUFBZ0FBQUFJZ0FBQUFjQUFBQUFBQUFBSGdoQUFCK0FBQUFpUUFBQUIwQVFabnNBQXQ0SWdBQWlnQUFBSXNBQUFBMkFBQUFOd0FBQUl3QUFBQUFBQUFBbUJ3QUFBa0FBQUNOQUFBQUFnQUFBQUFBQUFDSUlnQUFqZ0FBQUk4QUFBQWVBQUFBQUFBQUFDZ2lBQUNPQUFBQWtBQUFBQjhBQUFBQUFBQUFjQ0lBQUpFQUFBQ1NBQUFBSUFBQUFBQUFBQUJnSWdBQWtRQUFBSk1BQUFBaEFFR2M3UUFMQmdFQUFBQ1FMd0JCc08wQUN3STRJZ0JCd08wQUN3SXdJZ0JCME8wQUN3SllJZ0JCNE8wQUN3SlFJZ0JCOE8wQUN3SklJZ0JCZ080QUN3SkFJZ0JCa080QUN4Tm9JZ0FBTUFZQUFCUUFBQUJETGxWVVJpMDRBRUd3N2dBTEFoUTNBRUhJN2dBTERxQWlBQUF3SXdBQXdDTUFBTUFqQUVHVThBQUxBa2kzQUVITThBQUxnUkVRQ3dBQUVBOEFBQkFWQUFCZmNJa0Evd2t2RHdBQUFBQ1lKUUFBbEFBQUFKVUFBQUFqQUFBQUFBQUFBTGdsQUFDV0FBQUFsd0FBQUFBQUFBRFFKUUFBbUFBQUFKa0FBQUE0QUFBQUJRQUFBQUVBQUFBQkFBQUFKQUFBQUNVQUFBQUdBQUFBSmdBQUFDY0FBQUFLQUFBQUJ3QUFBQXNBQUFBQUFBQUEyQ1VBQUpvQUFBQ2JBQUFBT1FBQUFBZ0FBQUFDQUFBQUFnQUFBQ2dBQUFBcEFBQUFDUUFBQUNvQUFBQXJBQUFBREFBQUFBb0FBQUFOQUFBQUNBQUFBQUFBQUFEZ0pRQUFuQUFBQUowQUFBRDQvLy8vK1AvLy8rQWxBQUNlQUFBQW53QUFBQkE1QUFBa09RQUFDQUFBQUFBQUFBRDRKUUFBb0FBQUFLRUFBQUQ0Ly8vLytQLy8vL2dsQUFDaUFBQUFvd0FBQUVBNUFBQlVPUUFBQkFBQUFBQUFBQUFRSmdBQXBBQUFBS1VBQUFEOC8vLy8vUC8vL3hBbUFBQ21BQUFBcHdBQUFIQTVBQUNFT1FBQUJBQUFBQUFBQUFBb0pnQUFxQUFBQUtrQUFBRDgvLy8vL1AvLy95Z21BQUNxQUFBQXF3QUFBS0E1QUFDME9RQUFBQUFBQUVBbUFBQ2FBQUFBckFBQUFEb0FBQUFJQUFBQUFnQUFBQUlBQUFBc0FBQUFLUUFBQUFrQUFBQXFBQUFBS3dBQUFBd0FBQUFMQUFBQURnQUFBQUFBQUFCUUpnQUFtQUFBQUswQUFBQTdBQUFBQlFBQUFBRUFBQUFCQUFBQUxRQUFBQ1VBQUFBR0FBQUFKZ0FBQUNjQUFBQUtBQUFBREFBQUFBOEFBQUFBQUFBQVlDWUFBSm9BQUFDdUFBQUFQQUFBQUFnQUFBQUNBQUFBQWdBQUFDZ0FBQUFwQUFBQUNRQUFBQzRBQUFBdkFBQUFFQUFBQUFvQUFBQU5BQUFBQUFBQUFIQW1BQUNZQUFBQXJ3QUFBRDBBQUFBRkFBQUFBUUFBQUFFQUFBQWtBQUFBSlFBQUFBWUFBQUF3QUFBQU1RQUFBQkVBQUFBSEFBQUFDd0FBQUFBQUFBQ0FKZ0FBc0FBQUFMRUFBQUN5QUFBQUFRQUFBQU1BQUFBTkFBQUFBQUFBQUtBbUFBQ3pBQUFBdEFBQUFMSUFBQUFDQUFBQUJBQUFBQTRBQUFBQUFBQUFzQ1lBQUxVQUFBQzJBQUFBc2dBQUFBRUFBQUFDQUFBQUF3QUFBQVFBQUFBRkFBQUFCZ0FBQUFjQUFBQUlBQUFBQ1FBQUFBb0FBQUFMQUFBQUFBQUFBUEFtQUFDM0FBQUF1QUFBQUxJQUFBQU1BQUFBRFFBQUFBNEFBQUFQQUFBQUVBQUFBQkVBQUFBU0FBQUFFd0FBQUJRQUFBQVZBQUFBRmdBQUFBQUFBQUFvSndBQXVRQUFBTG9BQUFDeUFBQUFBd0FBQUFRQUFBQUJBQUFBQlFBQUFBSUFBQUFCQUFBQUFnQUFBQVlBQUFBQUFBQUFhQ2NBQUxzQUFBQzhBQUFBc2dBQUFBY0FBQUFJQUFBQUF3QUFBQWtBQUFBRUFBQUFBd0FBQUFRQUFBQUtBQUFBQUFBQUFLQW5BQUM5QUFBQXZnQUFBTElBQUFBeUFBQUFGd0FBQUJnQUFBQVpBQUFBR2dBQUFCc0FBQUFCQUFBQStQLy8vNkFuQUFBekFBQUFOQUFBQURVQUFBQTJBQUFBTndBQUFEZ0FBQUE1QUFBQUFBQUFBTmduQUFDL0FBQUF3QUFBQUxJQUFBQTZBQUFBSEFBQUFCMEFBQUFlQUFBQUh3QUFBQ0FBQUFBQ0FBQUErUC8vLzlnbkFBQTdBQUFBUEFBQUFEMEFBQUErQUFBQVB3QUFBRUFBQUFCQkFBQUFKUUFBQUVnQUFBQTZBQUFBSlFBQUFFMEFBQUE2QUFBQUpRQUFBRk1BQUFBQUFBQUFKUUFBQUcwQUFBQXZBQUFBSlFBQUFHUUFBQUF2QUFBQUpRQUFBSGtBQUFBQUFBQUFKUUFBQUVrQUFBQTZBQUFBSlFBQUFFMEFBQUE2QUFBQUpRQUFBRk1BQUFBZ0FBQUFKUUFBQUhBQUFBQUFBQUFBSlFBQUFHRUFBQUFnQUFBQUpRQUFBR0lBQUFBZ0FBQUFKUUFBQUdRQUFBQWdBQUFBSlFBQUFFZ0FBQUE2QUFBQUpRQUFBRTBBQUFBNkFBQUFKUUFBQUZNQUFBQWdBQUFBSlFBQUFGa0FBQUFBQUFBQVFRQUFBRTBBQUFBQUFBQUFVQUFBQUUwQUFBQUFBQUFBU2dBQUFHRUFBQUJ1QUFBQWRRQUFBR0VBQUFCeUFBQUFlUUFBQUFBQUFBQkdBQUFBWlFBQUFHSUFBQUJ5QUFBQWRRQUFBR0VBQUFCeUFBQUFlUUFBQUFBQUFBQk5BQUFBWVFBQUFISUFBQUJqQUFBQWFBQUFBQUFBQUFCQkFBQUFjQUFBQUhJQUFBQnBBQUFBYkFBQUFBQUFBQUJOQUFBQVlRQUFBSGtBQUFBQUFBQUFTZ0FBQUhVQUFBQnVBQUFBWlFBQUFBQUFBQUJLQUFBQWRRQUFBR3dBQUFCNUFBQUFBQUFBQUVFQUFBQjFBQUFBWndBQUFIVUFBQUJ6QUFBQWRBQUFBQUFBQUFCVEFBQUFaUUFBQUhBQUFBQjBBQUFBWlFBQUFHMEFBQUJpQUFBQVpRQUFBSElBQUFBQUFBQUFUd0FBQUdNQUFBQjBBQUFBYndBQUFHSUFBQUJsQUFBQWNnQUFBQUFBQUFCT0FBQUFid0FBQUhZQUFBQmxBQUFBYlFBQUFHSUFBQUJsQUFBQWNnQUFBQUFBQUFCRUFBQUFaUUFBQUdNQUFBQmxBQUFBYlFBQUFHSUFBQUJsQUFBQWNnQUFBQUFBQUFCS0FBQUFZUUFBQUc0QUFBQUFBQUFBUmdBQUFHVUFBQUJpQUFBQUFBQUFBRTBBQUFCaEFBQUFjZ0FBQUFBQUFBQkJBQUFBY0FBQUFISUFBQUFBQUFBQVNnQUFBSFVBQUFCdUFBQUFBQUFBQUVvQUFBQjFBQUFBYkFBQUFBQUFBQUJCQUFBQWRRQUFBR2NBQUFBQUFBQUFVd0FBQUdVQUFBQndBQUFBQUFBQUFFOEFBQUJqQUFBQWRBQUFBQUFBQUFCT0FBQUFid0FBQUhZQUFBQUFBQUFBUkFBQUFHVUFBQUJqQUFBQUFBQUFBRk1BQUFCMUFBQUFiZ0FBQUdRQUFBQmhBQUFBZVFBQUFBQUFBQUJOQUFBQWJ3QUFBRzRBQUFCa0FBQUFZUUFBQUhrQUFBQUFBQUFBVkFBQUFIVUFBQUJsQUFBQWN3QUFBR1FBQUFCaEFBQUFlUUFBQUFBQUFBQlhBQUFBWlFBQUFHUUFBQUJ1QUFBQVpRQUFBSE1BQUFCa0FBQUFZUUFBQUhrQUFBQUFBQUFBVkFBQUFHZ0FBQUIxQUFBQWNnQUFBSE1BQUFCa0FBQUFZUUFBQUhrQUFBQUFBQUFBUmdBQUFISUFBQUJwQUFBQVpBQUFBR0VBQUFCNUFBQUFBQUFBQUZNQUFBQmhBQUFBZEFBQUFIVUFBQUJ5QUFBQVpBQUFBR0VBQUFCNUFBQUFBQUFBQUZNQUFBQjFBQUFBYmdBQUFBQUFBQUJOQUFBQWJ3QUFBRzRBQUFBQUFBQUFWQUFBQUhVQUFBQmxBQUFBQUFBQUFGY0FBQUJsQUFBQVpBQUFBQUFBQUFCVUFBQUFhQUFBQUhVQUFBQUFBQUFBUmdBQUFISUFBQUJwQUFBQUFBQUFBRk1BQUFCaEFBQUFkQUJCMklFQkM2VUNDQ2dBQU1FQUFBRENBQUFBc2dBQUFBRUFBQUFBQUFBQU1DZ0FBTU1BQUFERUFBQUFzZ0FBQUFJQUFBQUFBQUFBVUNnQUFNVUFBQURHQUFBQXNnQUFBRUlBQUFCREFBQUFQZ0FBQUQ4QUFBQkFBQUFBUVFBQUFFUUFBQUJDQUFBQVF3QUFBQUFBQUFCNEtBQUF4d0FBQU1nQUFBQ3lBQUFBUlFBQUFFWUFBQUJFQUFBQVJRQUFBRVlBQUFCSEFBQUFSd0FBQUVnQUFBQkpBQUFBQUFBQUFKZ29BQURKQUFBQXlnQUFBTElBQUFCSUFBQUFTUUFBQUVvQUFBQkxBQUFBVEFBQUFFMEFBQUJLQUFBQVRnQUFBRThBQUFBQUFBQUF1Q2dBQU1zQUFBRE1BQUFBc2dBQUFFc0FBQUJNQUFBQVVBQUFBRkVBQUFCU0FBQUFVd0FBQUUwQUFBQlVBQUFBVlFBQUFBQUFBQURZS0FBQXpRQUFBTTRBQUFDeUFBQUFBd0FBQUFRQVFZV0VBUXZjQXlrQUFNOEFBQURRQUFBQXNnQUFBQVVBQUFBR0FBQUFBQUFBQUNncEFBRFJBQUFBMGdBQUFMSUFBQUFCQUFBQUlRQUFBQUFBQUFCUUtRQUEwd0FBQU5RQUFBQ3lBQUFBQWdBQUFDSUFBQUFBQUFBQWVDa0FBTlVBQUFEV0FBQUFzZ0FBQUE4QUFBQUJBQUFBVmdBQUFBQUFBQUNnS1FBQTF3QUFBTmdBQUFDeUFBQUFFQUFBQUFJQUFBQlhBQUFBQUFBQUFQZ3BBQURaQUFBQTJnQUFBTElBQUFBREFBQUFCQUFBQUFzQUFBQk9BQUFBVHdBQUFBd0FBQUJRQUFBQUFBQUFBTUFwQUFEWkFBQUEyd0FBQUxJQUFBQURBQUFBQkFBQUFBc0FBQUJPQUFBQVR3QUFBQXdBQUFCUUFBQUFBQUFBQUNncUFBRGNBQUFBM1FBQUFMSUFBQUFGQUFBQUJnQUFBQTBBQUFCUkFBQUFVZ0FBQUE0QUFBQlRBQUFBQUFBQUFHZ3FBQURlQUFBQTN3QUFBTElBQUFBQUFBQUFlQ29BQU9BQUFBRGhBQUFBc2dBQUFCSUFBQUFSQUFBQUV3QUFBQklBQUFBVUFBQUFBUUFBQUJNQUFBQVBBQUFBQUFBQUFNQXFBQURpQUFBQTR3QUFBTElBQUFCVUFBQUFWUUFBQUZnQUFBQlpBQUFBV2dBQUFBQUFBQURRS2dBQTVBQUFBT1VBQUFDeUFBQUFWZ0FBQUZjQUFBQmJBQUFBWEFBQUFGMEFBQUJtQUFBQVlRQUFBR3dBQUFCekFBQUFaUUFBQUFBQUFBQjBBQUFBY2dBQUFIVUFBQUJsQUVIc2h3RUxoUUtRSmdBQTJRQUFBT1lBQUFDeUFBQUFBQUFBQUtBcUFBRFpBQUFBNXdBQUFMSUFBQUFVQUFBQUFnQUFBQU1BQUFBRUFBQUFGUUFBQUJVQUFBQVdBQUFBRmdBQUFCY0FBQUFGQUFBQUZ3QUFBQkFBQUFBQUFBQUFDQ29BQU5rQUFBRG9BQUFBc2dBQUFBY0FBQUFJQUFBQUVRQUFBRmdBQUFCWkFBQUFFZ0FBQUZvQUFBQUFBQUFBU0NvQUFOa0FBQURwQUFBQXNnQUFBQWtBQUFBS0FBQUFFd0FBQUZzQUFBQmNBQUFBRkFBQUFGMEFBQUFBQUFBQTBDa0FBTmtBQUFEcUFBQUFzZ0FBQUFNQUFBQUVBQUFBQ3dBQUFFNEFBQUJQQUFBQURBQUFBRkFBQUFBQUFBQUEwQ2NBQURNQUFBQTBBQUFBTlFBQUFEWUFBQUEzQUFBQU9BQUFBRGtBUWZtSkFRdlVCU2dBQURzQUFBQThBQUFBUFFBQUFENEFBQUEvQUFBQVFBQUFBRUVBQUFBQUFBQUE4Q29BQU9zQUFBRHNBQUFBN1FBQUFPNEFBQUFZQUFBQUF3QUFBQUVBQUFBRkFBQUFBQUFBQUJnckFBRHJBQUFBN3dBQUFPMEFBQUR1QUFBQUdBQUFBQVFBQUFBQ0FBQUFCZ0FBQUFBQUFBQW9Ld0FBR0FBQUFCa0FBQUFhQUFBQUd3QUFBRjRBQUFCZkFBQUFZQUFBQVBBQUFBRHhBQUFBQUFBQUFEZ3JBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFBUUFBQUY4QUFBQmdBQUFBOEFBQUFQSUFBQUFBQUFBQVFDc0FBQmdBQUFBWkFBQUFHZ0FBQUJzQUFBQmhBQUFBWHdBQUFHSUFBQUR3QUFBQTh3QUFBQUFBQUFCUUt3QUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFHTUFBQUJmQUFBQVlBQUFBUEFBQUFEMEFBQUFBQUFBQUdBckFBQWNBQUFBR1FBQUFCb0FBQUFiQUFBQVpBQUFBR1VBQUFCZ0FBQUE4QUFBQVBVQUFBQUFBQUFBY0NzQUFCMEFBQUFaQUFBQUdnQUFBQnNBQUFCbUFBQUFad0FBQUdBQUFBRHdBQUFBOWdBQUFBQUFBQUNBS3dBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUdnQUFBQmZBQUFBYVFBQUFQQUFBQUQzQUFBQUFBQUFBSkFyQUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBYWdBQUFGOEFBQUJnQUFBQThBQUFBUGdBQUFBQUFBQUFvQ3NBQUI0QUFBQWZBQUFBSUFBQUFDRUFBQUJyQUFBQWJBQUFBR0FBQUFEd0FBQUErUUFBQUFBQUFBQ3dLd0FBR0FBQUFCa0FBQUFhQUFBQUd3QUFBRzBBQUFCZkFBQUFZQUFBQVBBQUFBRDZBQUFBQUFBQUFNQXJBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFiZ0FBQUY4QUFBQmdBQUFBOEFBQUFQc0FBQUFBQUFBQTBDc0FBQmdBQUFBWkFBQUFHZ0FBQUJzQUFBQnZBQUFBWHdBQUFHQUFBQUR3QUFBQS9BQUFBQUFBQUFEZ0t3QUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFIQUFBQUJmQUFBQVlBQUFBUEFBQUFEOUFBQUFBQUFBQVBBckFBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQWNRQUFBRjhBQUFCZ0FBQUE4QUFBQVA0QVFkV1BBUXU3a3dFc0FBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQWNnQUFBRjhBQUFCZ0FBQUE4QUFBQVA4QUFBQUFBQUFBRUN3QUFCZ0FBQUFaQUFBQUdnQUFBQnNBQUFCekFBQUFYd0FBQUdBQUFBRHdBQUFBQUFFQUFBQUFBQUFnTEFBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUhRQUFBQmZBQUFBWUFBQUFQQUFBQUFCQVFBQUFBQUFBREFzQUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBZFFBQUFGOEFBQUJnQUFBQThBQUFBQUlCQUFBQUFBQUFRQ3dBQUJnQUFBQVpBQUFBR2dBQUFCc0FBQUIyQUFBQVh3QUFBR0FBQUFEd0FBQUFBd0VBQUFBQUFBQlFMQUFBR0FBQUFCa0FBQUFhQUFBQUd3QUFBSGNBQUFCZkFBQUFZQUFBQVBBQUFBQUVBUUFBQUFBQUFHQXNBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFlQUFBQUY4QUFBQmdBQUFBOEFBQUFBVUJBQUFBQUFBQWNDd0FBQmdBQUFBWkFBQUFHZ0FBQUJzQUFBQjVBQUFBWHdBQUFHQUFBQUR3QUFBQUJnRUFBQUFBQUFDQUxBQUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFIb0FBQUJmQUFBQVlBQUFBUEFBQUFBSEFRQUFBQUFBQUpBc0FBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQWV3QUFBRjhBQUFCZ0FBQUE4QUFBQUFnQkFBQUFBQUFBb0N3QUFCZ0FBQUFaQUFBQUdnQUFBQnNBQUFCOEFBQUFYd0FBQUdBQUFBRHdBQUFBQ1FFQUFBQUFBQUN3TEFBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUgwQUFBQmZBQUFBWUFBQUFQQUFBQUFLQVFBQUFBQUFBTUFzQUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBZmdBQUFGOEFBQUJnQUFBQThBQUFBQXNCQUFBQUFBQUEwQ3dBQUJnQUFBQVpBQUFBR2dBQUFCc0FBQUIvQUFBQVh3QUFBR0FBQUFEd0FBQUFEQUVBQUFBQUFBRGdMQUFBR0FBQUFCa0FBQUFhQUFBQUd3QUFBSUFBQUFCZkFBQUFnUUFBQVBBQUFBQU5BUUFBQUFBQUFQQXNBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFnZ0FBQUY4QUFBQmdBQUFBOEFBQUFBNEJBQUFBQUFBQUFDMEFBQmdBQUFBWkFBQUFHZ0FBQUJzQUFBQ0RBQUFBWHdBQUFHQUFBQUR3QUFBQUR3RUFBQUFBQUFBUUxRQUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFJUUFBQUJmQUFBQWhRQUFBUEFBQUFBUUFRQUFBQUFBQUNBdEFBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQWhnQUFBRjhBQUFCZ0FBQUE4QUFBQUJFQkFBQUFBQUFBTUMwQUFCZ0FBQUFaQUFBQUdnQUFBQnNBQUFDSEFBQUFYd0FBQUdBQUFBRHdBQUFBRWdFQUFBQUFBQUJBTFFBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUlnQUFBQmZBQUFBWUFBQUFQQUFBQUFUQVFBQUFBQUFBRkF0QUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBaVFBQUFGOEFBQUNLQUFBQThBQUFBQlFCQUFBQUFBQUFZQzBBQUJnQUFBQVpBQUFBR2dBQUFCc0FBQUNMQUFBQVh3QUFBR0FBQUFEd0FBQUFGUUVBQUFBQUFBQndMUUFBR0FBQUFCa0FBQUFhQUFBQUd3QUFBSXdBQUFCZkFBQUFZQUFBQVBBQUFBQVdBUUFBQUFBQUFJQXRBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFqUUFBQUY4QUFBQmdBQUFBOEFBQUFCY0JBQUFBQUFBQWtDMEFBQmdBQUFBWkFBQUFHZ0FBQUJzQUFBQ09BQUFBWHdBQUFHQUFBQUR3QUFBQUdBRUFBQUFBQUFDZ0xRQUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFJOEFBQUJmQUFBQVlBQUFBUEFBQUFBWkFRQUFBQUFBQUxBdEFBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQWtBQUFBRjhBQUFCZ0FBQUE4QUFBQUJvQkFBQUFBQUFBd0MwQUFCZ0FBQUFaQUFBQUdnQUFBQnNBQUFDUkFBQUFYd0FBQUdBQUFBRHdBQUFBR3dFQUFBQUFBQURRTFFBQUlnQUFBQ01BQUFBa0FBQUFKUUFBQUpJQUFBQ1RBQUFBWUFBQUFQQUFBQUFjQVFBQUFBQUFBT0F0QUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBbEFBQUFGOEFBQUJnQUFBQThBQUFBQjBCQUFBQUFBQUE4QzBBQUJnQUFBQVpBQUFBR2dBQUFCc0FBQUNWQUFBQVh3QUFBSllBQUFEd0FBQUFIZ0VBQUFBQUFBQUFMZ0FBR0FBQUFCa0FBQUFhQUFBQUd3QUFBSmNBQUFCZkFBQUFZQUFBQVBBQUFBQWZBUUFBQUFBQUFCQXVBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFtQUFBQUY4QUFBQmdBQUFBOEFBQUFDQUJBQUFBQUFBQUlDNEFBQmdBQUFBWkFBQUFHZ0FBQUJzQUFBQ1pBQUFBWHdBQUFHQUFBQUR3QUFBQUlRRUFBQUFBQUFBd0xnQUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFKb0FBQUJmQUFBQVlBQUFBUEFBQUFBaUFRQUFBQUFBQUVBdUFBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQW13QUFBRjhBQUFCZ0FBQUE4QUFBQUNNQkFBQUFBQUFBVUM0QUFCZ0FBQUFaQUFBQUdnQUFBQnNBQUFDY0FBQUFYd0FBQUowQUFBRHdBQUFBSkFFQUFBQUFBQUJnTGdBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUo0QUFBQmZBQUFBbndBQUFQQUFBQUFsQVFBQUFBQUFBSEF1QUFBbUFBQUFHUUFBQUJvQUFBQWJBQUFBb0FBQUFLRUFBQUJnQUFBQThBQUFBQ1lCQUFBQUFBQUFnQzRBQUNjQUFBQW9BQUFBR2dBQUFCc0FBQUNpQUFBQW93QUFBR0FBQUFEd0FBQUFKd0VBQUFBQUFBQ1FMZ0FBR0FBQUFCa0FBQUFhQUFBQUd3QUFBS1FBQUFCZkFBQUFZQUFBQVBBQUFBQW9BUUFBQUFBQUFLQXVBQUFZQUFBQUdRQUFBQm9BQUFBYkFBQUFwUUFBQUY4QUFBQmdBQUFBOEFBQUFDa0JBQUFBQUFBQXNDNEFBQ2tBQUFBcUFBQUFLd0FBQUJzQUFBQ21BQUFBcHdBQUFHQUFBQUR3QUFBQUtnRUFBQUFBQUFEQUxnQUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFLZ0FBQUJmQUFBQVlBQUFBUEFBQUFBckFRQUFBQUFBQU5BdUFBQVlBQUFBR1FBQUFCb0FBQUFiQUFBQXFRQUFBRjhBQUFCZ0FBQUE4QUFBQUN3QkFBQUFBQUFBNEM0QUFDd0FBQUFaQUFBQUxRQUFBQnNBQUFDcUFBQUFxd0FBQUdBQUFBRHdBQUFBTFFFQUFBQUFBQUR3TGdBQUdBQUFBQmtBQUFBYUFBQUFHd0FBQUt3QUFBQmZBQUFBWUFBQUFQQUFBQUF1QVFBQUFBQUFBQUF2QUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBclFBQUFGOEFBQUJnQUFBQThBQUFBQzhCQUFBQUFBQUFFQzhBQUJnQUFBQVpBQUFBR2dBQUFCc0FBQUN1QUFBQVh3QUFBR0FBQUFEd0FBQUFNQUVBQUFBQUFBQWdMd0FBR0FBQUFCa0FBQUFhQUFBQUd3QUFBSzhBQUFCZkFBQUFZQUFBQVBBQUFBQXhBUUFBQUFBQUFEQXZBQUF1QUFBQUdRQUFBQzhBQUFBYkFBQUFzQUFBQUxFQUFBQmdBQUFBOEFBQUFESUJBQUFBQUFBQVFDOEFBQmdBQUFBWkFBQUFHZ0FBQUJzQUFBQ3lBQUFBWHdBQUFHQUFBQUR3QUFBQU13RUFBQUFBQUFCUUx3QUFHQUFBQUJrQUFBQWFBQUFBR3dBQUFMTUFBQUJmQUFBQVlBQUFBUEFBQUFBMEFRQUFBQUFBQUlBdkFBRHJBQUFBTlFFQUFPMEFBQUR1QUFBQUdRQUFBQUFBQUFENEx3QUE2d0FBQURZQkFBRHRBQUFBN2dBQUFCZ0FBQUFGQUFBQUF3QUFBQWNBQUFCT05HOW5aR1l5TjBsdWMzVm1abWxqYVdWdWRFMWxiVzl5ZVVWNFkyVndkR2x2YmtVQVRqUnZaMlJtT1VWNFkyVndkR2x2YmtVQVRqUnZaMlJtTVRORlpHZGxRWEp5WVhsQ1lYTmxSUUJPTkc5blpHWTVSV1JuWlVGeWNtRjVTVTVUZEROZlh6SXhNbUpoYzJsalgzTjBjbWx1WjBsalRsTXhYekV4WTJoaGNsOTBjbUZwZEhOSlkwVkZUbE14WHpsaGJHeHZZMkYwYjNKSlkwVkZSVVZGUlFCT05HOW5aR1kxUVhKeVlYbEpUbE4wTTE5Zk1qRXlZbUZ6YVdOZmMzUnlhVzVuU1dOT1V6RmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVk9VekZmT1dGc2JHOWpZWFJ2Y2tsalJVVkZSV2xGUlFCT05HOW5aR1k1UldSblpVRnljbUY1U1U1VFh6RTFSMlZ1WlhKcFkxQnZiSGxzYVc1bFNVNVRYekV5UjJWdVpYSnBZMUJ2YVc1MFNXUkZSVVZGUlVVQVRqUnZaMlJtTlVGeWNtRjVTVTVUWHpFMVIyVnVaWEpwWTFCdmJIbHNhVzVsU1U1VFh6RXlSMlZ1WlhKcFkxQnZhVzUwU1dSRlJVVkZhVVZGQUU0MGIyZGtaamhNYVhOMFVIVnlaVWxPVTE4eE1rZGxibVZ5YVdOUWIybHVkRWxrUlVWRlJRQk9ORzluWkdZeE5VZGxibVZ5YVdOUWIyeDViR2x1WlVsT1UxOHhNa2RsYm1WeWFXTlFiMmx1ZEVsa1JVVkZSUUJPTkc5blpHWTBUR2x6ZEVsT1UxOHhNa2RsYm1WeWFXTlFiMmx1ZEVsa1JVVkZSUUJPTkc5blpHWXhNMDV2WkdWQmNuSmhlVUpoYzJWRkFFNDBiMmRrWmpsT2IyUmxRWEp5WVhsSlRsTjBNMTlmTWpFeVltRnphV05mYzNSeWFXNW5TV05PVXpGZk1URmphR0Z5WDNSeVlXbDBjMGxqUlVWT1V6RmZPV0ZzYkc5allYUnZja2xqUlVWRlJVVkZBRTQwYjJka1pqaE1hWE4wVUhWeVpVbFFUbE5mTVROT2IyUmxRWEp5WVhsQ1lYTmxSVVZGQUU0MGIyZGtaamhNYVhOMFVIVnlaVWxRVGxOZk1UTkZaR2RsUVhKeVlYbENZWE5sUlVWRkFFNDBiMmRrWmpoTWFYTjBVSFZ5WlVsUVRsTmZNVGRCWkdwRmJuUnllVUZ5Y21GNVFtRnpaVVZGUlFCT05HOW5aR1k0VEdsemRGQjFjbVZKVUU1VFh6RXpSM0poY0doUFluTmxjblpsY2tWRlJRQk9ORzluWkdZNFRHbHpkRkIxY21WSlVFNVRYelZIY21Gd2FERXpTR2xrWkdWdVJXUm5aVk5sZEVWRlJRQk9ORzluWkdZMVIzSmhjR2hGQUU0MGIyZGtaalJNYVhOMFNWQk9VMTgxUjNKaGNHZ3hNMGhwWkdSbGJrVmtaMlZUWlhSRlJVVUFUalJ2WjJSbU9VVmtaMlZCY25KaGVVbFFUbE5mTVRGRlpHZGxSV3hsYldWdWRFVkZSUUJPTkc5blpHWTFRWEp5WVhsSlVFNVRYekV4UldSblpVVnNaVzFsYm5SRmFVVkZBRTQwYjJka1pqVkJjbkpoZVVsaWFVVkZBRTQwYjJka1pqbE9iMlJsUVhKeVlYbEphVVZGQUU0MGIyZGtaalZCY25KaGVVbHBhVVZGQUU0MGIyZGtaakk1VUhKbFkyOXVaR2wwYVc5dVZtbHZiR0YwWldSRmVHTmxjSFJwYjI1RkFFNDBiMmRrWmpWRVVtVmpkRVVBVGpSdloyUm1NVFZIY21Gd2FFRjBkSEpwWW5WMFpYTkZBRTQwYjJka1pqbEZaR2RsUVhKeVlYbEpha1ZGQUU0MGIyZGtaalZCY25KaGVVbHFhVVZGQUU0MGIyZGtaamxGWkdkbFFYSnlZWGxKVGxOZk5VZHlZWEJvT0VWa1oyVlVlWEJsUlVWRkFFNDBiMmRrWmpWQmNuSmhlVWxPVTE4MVIzSmhjR2c0UldSblpWUjVjR1ZGYVVWRkFFNDBiMmRrWmpsRlpHZGxRWEp5WVhsSlpFVkZBRTQwYjJka1pqVkJjbkpoZVVsa2FVVkZBRTQwYjJka1pqbEZaR2RsUVhKeVlYbEphVVZGQUU0MGIyZGtaamxGWkdkbFFYSnlZWGxKVGxOZk5sTjBjbTlyWlVWRlJRQk9ORzluWkdZMVFYSnlZWGxKVGxOZk5sTjBjbTlyWlVWcFJVVUFUalJ2WjJSbU9VVmtaMlZCY25KaGVVbE9VMTg1UldSblpVRnljbTkzUlVWRkFFNDBiMmRrWmpWQmNuSmhlVWxPVTE4NVJXUm5aVUZ5Y205M1JXbEZSUUJPTkc5blpHWTVUbTlrWlVGeWNtRjVTVTVUWHpWSGNtRndhRGhPYjJSbFZIbHdaVVZGUlFCT05HOW5aR1kxUVhKeVlYbEpUbE5mTlVkeVlYQm9PRTV2WkdWVWVYQmxSV2xGUlFCT05HOW5aR1k1VG05a1pVRnljbUY1U1U1VFh6UkdhV3hzUlVWRkFFNDBiMmRrWmpWQmNuSmhlVWxPVTE4MFJtbHNiRVZwUlVVQVRqUnZaMlJtT1U1dlpHVkJjbkpoZVVsT1UxODJVM1J5YjJ0bFJVVkZBRTQwYjJka1pqbE9iMlJsUVhKeVlYbEpUbE5mTlZOb1lYQmxSVVZGQUU0MGIyZGtaalZCY25KaGVVbE9VMTgxVTJoaGNHVkZhVVZGQUU0MGIyZGtaamxPYjJSbFFYSnlZWGxKWkVWRkFFNDBiMmRrWmpoTWFYTjBVSFZ5WlVsUVRsTmZNVEZPYjJSbFJXeGxiV1Z1ZEVWRlJRQk9ORzluWkdZMFRHbHpkRWxRVGxOZk1URk9iMlJsUld4bGJXVnVkRVZGUlFCT05HOW5aR1k0VEdsemRGQjFjbVZKVUU1VFh6RXhSV1JuWlVWc1pXMWxiblJGUlVVQVRqUnZaMlJtTkV4cGMzUkpVRTVUWHpFeFJXUm5aVVZzWlcxbGJuUkZSVVVBVGpSdloyUm1NVFJIWlc1bGNtbGpVMlZuYldWdWRFbE9VMTh4TWtkbGJtVnlhV05RYjJsdWRFbGtSVVZGUlFCT05HOW5aR1l4TVVkbGJtVnlhV05NYVc1bFNVNVRYekV5UjJWdVpYSnBZMUJ2YVc1MFNXUkZSVVZGQUU0MGIyZGtaakV3UW5WamEyVjBSblZ1WTBsUVRsTmZNVEZGWkdkbFJXeGxiV1Z1ZEVWRlJRQk9ORzluWkdZNVUweHBjM1JRZFhKbFNWQk9VMTh4TVVWa1oyVkZiR1Z0Wlc1MFJVVkZBRTQwYjJka1pqRTFRblZqYTJWMFJXUm5aVUZ5Y21GNVJRQk9ORzluWkdZNVRtOWtaVUZ5Y21GNVNXSkZSUUJPTkc5blpHWTVUbTlrWlVGeWNtRjVTVkJPVTE4eE1VVmtaMlZGYkdWdFpXNTBSVVZGQUU0MGIyZGtaamhNYVhOMFVIVnlaVWxrUlVVQVRqUnZaMlJtTkV4cGMzUkpaRVZGQUU0MGIyZGtaamxPYjJSbFFYSnlZWGxKVGxOZk1URmxibVZ5WjNsaVlYTmxaRFJtYlcxdE1UUk9iMlJsUVhSMGNtbGlkWFJsYzBWRlJRQk9ORzluWkdZMVFYSnlZWGxKVGxOZk1URmxibVZ5WjNsaVlYTmxaRFJtYlcxdE1UUk9iMlJsUVhSMGNtbGlkWFJsYzBWcFJVVUFSWEp5YjNJZ1JrMU5UVXhoZVc5MWREbzZJR0ZrYW5WemRGOXdiM05wZEdsdmJuTW9LUUJPTkc5blpHWTVUbTlrWlVGeWNtRjVTVTVUWHpFeVIyVnVaWEpwWTFCdmFXNTBTV1JGUlVWRkFFNDBiMmRrWmpWQmNuSmhlVWxPVTE4eE1rZGxibVZ5YVdOUWIybHVkRWxrUlVWcFJVVUFUalJ2WjJSbU9FeHBjM1JRZFhKbFNVNVRYekV4Wlc1bGNtZDVZbUZ6WldRMFptMXRiVGxTWldOMFlXNW5iR1ZGUlVVQVRqUnZaMlJtTkV4cGMzUkpUbE5mTVRGbGJtVnlaM2xpWVhObFpEUm1iVzF0T1ZKbFkzUmhibWRzWlVWRlJRQkZjbkp2Y2lCR1RVMU5UR0Y1YjNWME9qcG1YMkYwZEhKZmMyTmhiR0Z5QUU0MGIyZGtaamhNYVhOMFVIVnlaVWxPVTE4eE1XVnVaWEpuZVdKaGMyVmtOR1p0YlcwMFJXUm5aVVZGUlFCT05HOW5aR1kwVEdsemRFbE9VMTh4TVdWdVpYSm5lV0poYzJWa05HWnRiVzAwUldSblpVVkZSUUJPTkc5blpHWXhNV1Z1WlhKbmVXSmhjMlZrTkdadGJXMHhOMFZrWjJWTmFXNUNkV05yWlhSR2RXNWpSUUJPTkc5blpHWXhNRUoxWTJ0bGRFWjFibU5KVGxOZk1URmxibVZ5WjNsaVlYTmxaRFJtYlcxdE5FVmtaMlZGUlVVQVRqUnZaMlJtTVRGbGJtVnlaM2xpWVhObFpEUm1iVzF0TVRkRlpHZGxUV0Y0UW5WamEyVjBSblZ1WTBVQVRqUnZaMlJtT1VWa1oyVkJjbkpoZVVsT1UxOHhNV1Z1WlhKbmVXSmhjMlZrTkdadGJXMHhORVZrWjJWQmRIUnlhV0oxZEdWelJVVkZBRTQwYjJka1pqVkJjbkpoZVVsT1UxOHhNV1Z1WlhKbmVXSmhjMlZrTkdadGJXMHhORVZrWjJWQmRIUnlhV0oxZEdWelJXbEZSUUJPTkc5blpHWXhNRVpOVFUxTVlYbHZkWFJGQUU0MGIyZGtaakV5VEdGNWIzVjBUVzlrZFd4bFJRQk9ORzluWkdZeU5VRnNaMjl5YVhSb2JVWmhhV3gxY21WRmVHTmxjSFJwYjI1RkFFNDBiMmRrWmpFeFVHRnBjbWx1WjBobFlYQkpUbE5mTVRGd2NWOXBiblJsY201aGJERXlVR0ZwY2xSbGJYQnNZWFJsU1ZCT1UxOHhNVTV2WkdWRmJHVnRaVzUwUldSRlJVNVRNVjgzUTI5dGNHRnlaVWxUTlY5T1UzUXpYMTh5Tkd4bGMzTkpaRVZGUlVWRlJRQk9ORzluWkdZNFNHVmhjRUpoYzJWSlRsTmZNVEZRWVdseWFXNW5TR1ZoY0VsT1UxOHhNWEJ4WDJsdWRHVnlibUZzTVRKUVlXbHlWR1Z0Y0d4aGRHVkpVRTVUWHpFeFRtOWtaVVZzWlcxbGJuUkZaRVZGVGxNeVh6ZERiMjF3WVhKbFNWTTJYMDVUZEROZlh6STBiR1Z6YzBsa1JVVkZSVVZGVGxOZk1UVlFZV2x5YVc1blNHVmhjRTV2WkdWSlV6WmZSVVZUTmw5VFFsOUZSUUJPTkc5blpHWTVUbTlrWlVGeWNtRjVTVkJPVTE4eE5WQmhhWEpwYm1kSVpXRndUbTlrWlVsT1UxOHhNWEJ4WDJsdWRHVnlibUZzTVRKUVlXbHlWR1Z0Y0d4aGRHVkpVRTVUWHpFeFRtOWtaVVZzWlcxbGJuUkZaRVZGUlVWRlJRQk9ORzluWkdZMVFYSnlZWGxKVUU1VFh6RTFVR0ZwY21sdVowaGxZWEJPYjJSbFNVNVRYekV4Y0hGZmFXNTBaWEp1WVd3eE1sQmhhWEpVWlcxd2JHRjBaVWxRVGxOZk1URk9iMlJsUld4bGJXVnVkRVZrUlVWRlJXbEZSUUJPTkc5blpHWTRVR2wyYjNSTlJGTkZBRTQwYjJka1pqaE1hWE4wVUhWeVpVbE9VMTh4TVdWdVpYSm5lV0poYzJWa05HWnRiVzB4TkZCaFkydHBibWRTYjNkSmJtWnZSVVZGQUU0MGIyZGtaamhNYVhOMFVIVnlaVWxPVTE4eE5reHBjM1JKZEdWeVlYUnZja0poYzJWSlRsTmZNVEZsYm1WeVozbGlZWE5sWkRSbWJXMXRNVFJRWVdOcmFXNW5VbTkzU1c1bWIwVk1ZakJGVEdJd1JVVkZSVVVBV2s0MGIyZGtaakV4Wlc1bGNtZDVZbUZ6WldRMFptMXRiVEV4VFVGQlVsQmhZMnRwYm1jeU9IQnlaWE52Y25SZmNtVmpkR0Z1WjJ4bGMxOWllVjlvWldsbmFIUkZVazVUWHpSTWFYTjBTVTVUTVY4NVVtVmpkR0Z1WjJ4bFJVVkZSVlZzVWt0VE5GOUZYd0JhVGpSdloyUm1NVEZsYm1WeVozbGlZWE5sWkRSbWJXMXRNVEZOUVVGU1VHRmphMmx1WnpJM2NISmxjMjl5ZEY5eVpXTjBZVzVuYkdWelgySjVYM2RwWkhSb1JWSk9VMTgwVEdsemRFbE9VekZmT1ZKbFkzUmhibWRzWlVWRlJVVlZiRkpMVXpSZlJWOEFUalJ2WjJSbU9FeHBjM1JRZFhKbFNVNVRYekUyVEdsemRFbDBaWEpoZEc5eVFtRnpaVWxPVTE4eE1XVnVaWEpuZVdKaGMyVmtOR1p0YlcwNVVtVmpkR0Z1WjJ4bFJVeGlNRVZNWWpCRlJVVkZSUUJPTkc5blpHWXhNVkJoYVhKcGJtZElaV0Z3U1U1VFh6RXhjSEZmYVc1MFpYSnVZV3d4TWxCaGFYSlVaVzF3YkdGMFpVbE9VMTh4Tmt4cGMzUkpkR1Z5WVhSdmNrSmhjMlZKVGxOZk1URmxibVZ5WjNsaVlYTmxaRFJtYlcxdE1UUlFZV05yYVc1blVtOTNTVzVtYjBWTVlqQkZUR0l3UlVWRlpFVkZUbE14WHpkRGIyMXdZWEpsU1ZNNFgwNVRkRE5mWHpJMGJHVnpjMGxrUlVWRlJVVkZBRTQwYjJka1pqaElaV0Z3UW1GelpVbE9VMTh4TVZCaGFYSnBibWRJWldGd1NVNVRYekV4Y0hGZmFXNTBaWEp1WVd3eE1sQmhhWEpVWlcxd2JHRjBaVWxPVTE4eE5reHBjM1JKZEdWeVlYUnZja0poYzJWSlRsTmZNVEZsYm1WeVozbGlZWE5sWkRSbWJXMXRNVFJRWVdOcmFXNW5VbTkzU1c1bWIwVk1ZakJGVEdJd1JVVkZaRVZGVGxNeVh6ZERiMjF3WVhKbFNWTTVYMDVUZEROZlh6STBiR1Z6YzBsa1JVVkZSVVZGVGxOZk1UVlFZV2x5YVc1blNHVmhjRTV2WkdWSlV6bGZSVVZUT1Y5VFJWOUZSUUJPTkc5blpHWTBUR2x6ZEVsT1UxOHhOa3hwYzNSSmRHVnlZWFJ2Y2tKaGMyVkpUbE5mTVRGbGJtVnlaM2xpWVhObFpEUm1iVzF0T1ZKbFkzUmhibWRzWlVWTVlqQkZUR0l3UlVWRlJVVUFUalJ2WjJSbU5FeHBjM1JKVGxOZk1UWk1hWE4wU1hSbGNtRjBiM0pDWVhObFNVNVRYekV4Wlc1bGNtZDVZbUZ6WldRMFptMXRiVEUwVUdGamEybHVaMUp2ZDBsdVptOUZUR0l3UlV4aU1FVkZSVVZGQUU0MGIyZGtaalJNYVhOMFNVNVRYekV4Wlc1bGNtZDVZbUZ6WldRMFptMXRiVEUwVUdGamEybHVaMUp2ZDBsdVptOUZSVVVBVGpSdloyUm1PVVZrWjJWQmNuSmhlVWxPVTE4NVUweHBjM1JRZFhKbFNWQk9VMTh4TVVWa1oyVkZiR1Z0Wlc1MFJVVkZSVVVBVGpSdloyUm1OVUZ5Y21GNVNVNVRYemxUVEdsemRGQjFjbVZKVUU1VFh6RXhSV1JuWlVWc1pXMWxiblJGUlVWcFJVVUFUalJ2WjJSbU9FeHBjM1JRZFhKbFNWQk9VMTh4TVdWdVpYSm5lV0poYzJWa05HWnRiVzB4TkZGMVlXUlVjbVZsVG05a1pVNU5SVVZGQUVWeWNtOXlJRkYxWVdSVWNtVmxUazA2SUU1dklHWmhkR2hsY2lCT2IyUmxJR1Y0YVhOMGN3QkZjbkp2Y2lCT1pYZE5kV3gwYVhCdmJHVk5aWFJvYjJRNk9tUmxiR1YwWlY5a1pXZGxibVZ5WVhSbFpGOXViMlJsQUVWeWNtOXlJRTVsZDAxMWJIUnBjRzlzWlUxbGRHaHZaRG82WTI5dWMzUnlkV04wWDJOdmJYQnNaWFJsWDNOMVluUnlaV1VvS1FCYVRqUnZaMlJtTVRGbGJtVnlaM2xpWVhObFpEUm1iVzF0TVRoT1pYZE5kV3gwYVhCdmJHVk5aWFJvYjJReU1tMXZkbVZmYzNWaVRHbHpkSE5mZG1WeWRHbGpZV3hGVWxCT1UxODBUR2x6ZEVsT1V6RmZNVEpRWVhKMGFXTnNaVWx1Wm05RlJVVlROMTlUTjE5VE4xOVROMTlUTjE5T1UxOHhOa3hwYzNSSmRHVnlZWFJ2Y2tKaGMyVkpVelJmVEdJd1JVeGlNRVZGUldKRk15UmZOZ0JhVGpSdloyUm1NVEZsYm1WeVozbGlZWE5sWkRSbWJXMXRNVGhPWlhkTmRXeDBhWEJ2YkdWTlpYUm9iMlF5TW0xdmRtVmZjM1ZpVEdsemRITmZkbVZ5ZEdsallXeEZVbEJPVTE4MFRHbHpkRWxPVXpGZk1USlFZWEowYVdOc1pVbHVabTlGUlVWVE4xOVROMTlUTjE5VE4xOVROMTlPVTE4eE5reHBjM1JKZEdWeVlYUnZja0poYzJWSlV6UmZUR0l3UlV4aU1FVkZSV0pGTXlSZk5RQmFUalJ2WjJSbU1URmxibVZ5WjNsaVlYTmxaRFJtYlcxdE1UaE9aWGROZFd4MGFYQnZiR1ZOWlhSb2IyUXhOV1JsYkdWMFpWOXpkV0pNYVhOMGMwVlFUbE14WHpFMFVYVmhaRlJ5WldWT2IyUmxUazFGVWxCT1UxODBUR2x6ZEVsT1V6RmZNVEpRWVhKMGFXTnNaVWx1Wm05RlJVVlRPVjlUT1Y5VE9WOU9VMTh4Tmt4cGMzUkpkR1Z5WVhSdmNrSmhjMlZKVXpaZlRHSXdSVXhpTUVWRlJXSmlSVE1rWHpNQVdrNDBiMmRrWmpFeFpXNWxjbWQ1WW1GelpXUTBabTF0YlRFNFRtVjNUWFZzZEdsd2IyeGxUV1YwYUc5a01UVmtaV3hsZEdWZmMzVmlUR2x6ZEhORlVFNVRNVjh4TkZGMVlXUlVjbVZsVG05a1pVNU5SVkpRVGxOZk5FeHBjM1JKVGxNeFh6RXlVR0Z5ZEdsamJHVkpibVp2UlVWRlV6bGZVemxmVXpsZlRsTmZNVFpNYVhOMFNYUmxjbUYwYjNKQ1lYTmxTVk0yWDB4aU1FVk1ZakJGUlVWaVlrVXpKRjgwQUZwT05HOW5aR1l4TVdWdVpYSm5lV0poYzJWa05HWnRiVzB4T0U1bGQwMTFiSFJwY0c5c1pVMWxkR2h2WkRFMVpHVnNaWFJsWDNOMVlreHBjM1J6UlZCT1V6RmZNVFJSZFdGa1ZISmxaVTV2WkdWT1RVVlNVRTVUWHpSTWFYTjBTVTVUTVY4eE1sQmhjblJwWTJ4bFNXNW1iMFZGUlZNNVgxTTVYMU01WDA1VFh6RTJUR2x6ZEVsMFpYSmhkRzl5UW1GelpVbFRObDlNWWpCRlRHSXdSVVZGWW1KRk15UmZNZ0JhVGpSdloyUm1NVEZsYm1WeVozbGlZWE5sWkRSbWJXMXRNVGhPWlhkTmRXeDBhWEJ2YkdWTlpYUm9iMlF4TldSbGJHVjBaVjl6ZFdKTWFYTjBjMFZRVGxNeFh6RTBVWFZoWkZSeVpXVk9iMlJsVGsxRlVsQk9VMTgwVEdsemRFbE9VekZmTVRKUVlYSjBhV05zWlVsdVptOUZSVVZUT1Y5VE9WOVRPVjlPVTE4eE5reHBjM1JKZEdWeVlYUnZja0poYzJWSlV6WmZUR0l3UlV4aU1FVkZSV0ppUlRNa1h6RUFUalJ2WjJSbU9FeHBjM1JRZFhKbFNVNVRYekV4Wlc1bGNtZDVZbUZ6WldRMFptMXRiVEV5VUdGeWRHbGpiR1ZKYm1adlJVVkZBRnBPTkc5blpHWXhNV1Z1WlhKbmVXSmhjMlZrTkdadGJXMHlNRkJoY25ScFkyeGxTVzVtYjBOdmJYQmhjbVZ5UXpGRmRrVlZiRkpMVGxNeFh6RXlVR0Z5ZEdsamJHVkpibVp2UlVWZkFFNDBiMmRrWmpSTWFYTjBTVTVUWHpFeFpXNWxjbWQ1WW1GelpXUTBabTF0YlRFeVVHRnlkR2xqYkdWSmJtWnZSVVZGQUU0MGIyZGtaalJNYVhOMFNWQk9VMTh4TVdWdVpYSm5lV0poYzJWa05HWnRiVzB4TkZGMVlXUlVjbVZsVG05a1pVNU5SVVZGQUVWeWNtOXlJRVJKVFRJNk9pQmliM2dnYVhNZ1pYRjFZV3dnZEc4Z2IyeGtYM0J2Y3dCRmNuSnZjaUJFU1UweU9qb2dZMmh2YjNObFgyUnBjM1JwYm1OMFgzSmhibVJ2YlY5d2IybHVkRjlwYmw5a2FYTnhkV1U2SUc5c1pGOXdiMmx1ZENCdWIzUWdBR2x1SUdKdmVBQUFBUUlFQndNR0JRQXRLeUFnSURCWU1IZ0FLRzUxYkd3cEFDMHdXQ3N3V0NBd1dDMHdlQ3N3ZUNBd2VBQnBibVlBU1U1R0FFNUJUZ0JwYm1acGJtbDBlUUJ1WVc0QVRFTmZRVXhNQUV4QlRrY0FReTVWVkVZdE9BQlFUMU5KV0FCTlZWTk1YMHhQUTFCQlZFZ0FjM1JrT2pwaVlYTnBZMTl6ZEhKcGJtYzhkVzV6YVdkdVpXUWdZMmhoY2o0QWMzUmtPanAzYzNSeWFXNW5BR1Z0YzJOeWFYQjBaVzQ2T25aaGJBQmxiWE5qY21sd2RHVnVPanB0WlcxdmNubGZkbWxsZHp4amFHRnlQZ0JsYlhOamNtbHdkR1Z1T2pwdFpXMXZjbmxmZG1sbGR6eHphV2R1WldRZ1kyaGhjajRBWlcxelkzSnBjSFJsYmpvNmJXVnRiM0o1WDNacFpYYzhkVzV6YVdkdVpXUWdZMmhoY2o0QVpXMXpZM0pwY0hSbGJqbzZiV1Z0YjNKNVgzWnBaWGM4YzJodmNuUStBR1Z0YzJOeWFYQjBaVzQ2T20xbGJXOXllVjkyYVdWM1BIVnVjMmxuYm1Wa0lITm9iM0owUGdCbGJYTmpjbWx3ZEdWdU9qcHRaVzF2Y25sZmRtbGxkenhwYm5RK0FHVnRjMk55YVhCMFpXNDZPbTFsYlc5eWVWOTJhV1YzUEhWdWMybG5ibVZrSUdsdWRENEFaVzF6WTNKcGNIUmxiam82YldWdGIzSjVYM1pwWlhjOGJHOXVaejRBWlcxelkzSnBjSFJsYmpvNmJXVnRiM0o1WDNacFpYYzhkVzV6YVdkdVpXUWdiRzl1Wno0QVpXMXpZM0pwY0hSbGJqbzZiV1Z0YjNKNVgzWnBaWGM4YVc1ME9GOTBQZ0JsYlhOamNtbHdkR1Z1T2pwdFpXMXZjbmxmZG1sbGR6eDFhVzUwT0Y5MFBnQmxiWE5qY21sd2RHVnVPanB0WlcxdmNubGZkbWxsZHp4cGJuUXhObDkwUGdCbGJYTmpjbWx3ZEdWdU9qcHRaVzF2Y25sZmRtbGxkengxYVc1ME1UWmZkRDRBWlcxelkzSnBjSFJsYmpvNmJXVnRiM0o1WDNacFpYYzhhVzUwTXpKZmRENEFaVzF6WTNKcGNIUmxiam82YldWdGIzSjVYM1pwWlhjOGRXbHVkRE15WDNRK0FHVnRjMk55YVhCMFpXNDZPbTFsYlc5eWVWOTJhV1YzUEdac2IyRjBQZ0JsYlhOamNtbHdkR1Z1T2pwdFpXMXZjbmxmZG1sbGR6eGtiM1ZpYkdVK0FHVnRjMk55YVhCMFpXNDZPbTFsYlc5eWVWOTJhV1YzUEd4dmJtY2daRzkxWW14bFBnQk9NVEJsYlhOamNtbHdkR1Z1TVRGdFpXMXZjbmxmZG1sbGQwbGxSVVVBVGpFd1pXMXpZM0pwY0hSbGJqRXhiV1Z0YjNKNVgzWnBaWGRKWkVWRkFFNHhNR1Z0YzJOeWFYQjBaVzR4TVcxbGJXOXllVjkyYVdWM1NXWkZSUUJPTVRCbGJYTmpjbWx3ZEdWdU1URnRaVzF2Y25sZmRtbGxkMGx0UlVVQVRqRXdaVzF6WTNKcGNIUmxiakV4YldWdGIzSjVYM1pwWlhkSmJFVkZBRTR4TUdWdGMyTnlhWEIwWlc0eE1XMWxiVzl5ZVY5MmFXVjNTV3BGUlFCT01UQmxiWE5qY21sd2RHVnVNVEZ0WlcxdmNubGZkbWxsZDBscFJVVUFUakV3WlcxelkzSnBjSFJsYmpFeGJXVnRiM0o1WDNacFpYZEpkRVZGQUU0eE1HVnRjMk55YVhCMFpXNHhNVzFsYlc5eWVWOTJhV1YzU1hORlJRQk9NVEJsYlhOamNtbHdkR1Z1TVRGdFpXMXZjbmxmZG1sbGQwbG9SVVVBVGpFd1pXMXpZM0pwY0hSbGJqRXhiV1Z0YjNKNVgzWnBaWGRKWVVWRkFFNHhNR1Z0YzJOeWFYQjBaVzR4TVcxbGJXOXllVjkyYVdWM1NXTkZSUUJPTVRCbGJYTmpjbWx3ZEdWdU0zWmhiRVVBVGxOME0xOWZNakV5WW1GemFXTmZjM1J5YVc1blNYZE9VMTh4TVdOb1lYSmZkSEpoYVhSelNYZEZSVTVUWHpsaGJHeHZZMkYwYjNKSmQwVkZSVVVBVGxOME0xOWZNakl4WDE5aVlYTnBZMTl6ZEhKcGJtZGZZMjl0Ylc5dVNVeGlNVVZGUlFCT1UzUXpYMTh5TVRKaVlYTnBZMTl6ZEhKcGJtZEphRTVUWHpFeFkyaGhjbDkwY21GcGRITkphRVZGVGxOZk9XRnNiRzlqWVhSdmNrbG9SVVZGUlFCT1UzUXpYMTh5TVRKaVlYTnBZMTl6ZEhKcGJtZEpZMDVUWHpFeFkyaGhjbDkwY21GcGRITkpZMFZGVGxOZk9XRnNiRzlqWVhSdmNrbGpSVVZGUlFCemRHUTZPbUpoWkY5bWRXNWpkR2x2Ymw5allXeHNBRTVUZEROZlh6SXhOMkpoWkY5bWRXNWpkR2x2Ymw5allXeHNSUUJPVTNRelgxOHlPR2x2YzE5aVlYTmxSUUJPVTNRelgxOHlPV0poYzJsalgybHZjMGxqVGxOZk1URmphR0Z5WDNSeVlXbDBjMGxqUlVWRlJRQk9VM1F6WDE4eU9XSmhjMmxqWDJsdmMwbDNUbE5mTVRGamFHRnlYM1J5WVdsMGMwbDNSVVZGUlFCT1UzUXpYMTh5TVRWaVlYTnBZMTl6ZEhKbFlXMWlkV1pKWTA1VFh6RXhZMmhoY2w5MGNtRnBkSE5KWTBWRlJVVUFUbE4wTTE5Zk1qRTFZbUZ6YVdOZmMzUnlaV0Z0WW5WbVNYZE9VMTh4TVdOb1lYSmZkSEpoYVhSelNYZEZSVVZGQUU1VGRETmZYekl4TTJKaGMybGpYMmx6ZEhKbFlXMUpZMDVUWHpFeFkyaGhjbDkwY21GcGRITkpZMFZGUlVVQVRsTjBNMTlmTWpFelltRnphV05mYVhOMGNtVmhiVWwzVGxOZk1URmphR0Z5WDNSeVlXbDBjMGwzUlVWRlJRQk9VM1F6WDE4eU1UTmlZWE5wWTE5dmMzUnlaV0Z0U1dOT1UxOHhNV05vWVhKZmRISmhhWFJ6U1dORlJVVkZBRTVUZEROZlh6SXhNMkpoYzJsalgyOXpkSEpsWVcxSmQwNVRYekV4WTJoaGNsOTBjbUZwZEhOSmQwVkZSVVVBVGxOME0xOWZNakV4WDE5emRHUnZkWFJpZFdaSmQwVkZBRTVUZEROZlh6SXhNVjlmYzNSa2IzVjBZblZtU1dORlJRQjFibk4xY0hCdmNuUmxaQ0JzYjJOaGJHVWdabTl5SUhOMFlXNWtZWEprSUdsdWNIVjBBRTVUZEROZlh6SXhNRjlmYzNSa2FXNWlkV1pKZDBWRkFFNVRkRE5mWHpJeE1GOWZjM1JrYVc1aWRXWkpZMFZGQUU1VGRETmZYekkzWTI5c2JHRjBaVWxqUlVVQVRsTjBNMTlmTWpac2IyTmhiR1UxWm1GalpYUkZBRTVUZEROZlh6STNZMjlzYkdGMFpVbDNSVVVBSlhBQVF3Qk9VM1F6WDE4eU4yNTFiVjluWlhSSlkwNVRYekU1YVhOMGNtVmhiV0oxWmw5cGRHVnlZWFJ2Y2tsalRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVkZSVVZGQUU1VGRETmZYekk1WDE5dWRXMWZaMlYwU1dORlJRQk9VM1F6WDE4eU1UUmZYMjUxYlY5blpYUmZZbUZ6WlVVQVRsTjBNMTlmTWpkdWRXMWZaMlYwU1hkT1UxOHhPV2x6ZEhKbFlXMWlkV1pmYVhSbGNtRjBiM0pKZDA1VFh6RXhZMmhoY2w5MGNtRnBkSE5KZDBWRlJVVkZSUUJPVTNRelgxOHlPVjlmYm5WdFgyZGxkRWwzUlVVQUpYQUFBQUFBVEFBbEFBQUFBQUJPVTNRelgxOHlOMjUxYlY5d2RYUkpZMDVUWHpFNWIzTjBjbVZoYldKMVpsOXBkR1Z5WVhSdmNrbGpUbE5mTVRGamFHRnlYM1J5WVdsMGMwbGpSVVZGUlVWRkFFNVRkRE5mWHpJNVgxOXVkVzFmY0hWMFNXTkZSUUJPVTNRelgxOHlNVFJmWDI1MWJWOXdkWFJmWW1GelpVVUFUbE4wTTE5Zk1qZHVkVzFmY0hWMFNYZE9VMTh4T1c5emRISmxZVzFpZFdaZmFYUmxjbUYwYjNKSmQwNVRYekV4WTJoaGNsOTBjbUZwZEhOSmQwVkZSVVZGUlFCT1UzUXpYMTh5T1Y5ZmJuVnRYM0IxZEVsM1JVVUFKVWc2SlUwNkpWTUFKVzB2SldRdkpYa0FKVWs2SlUwNkpWTWdKWEFBSldFZ0pXSWdKV1FnSlVnNkpVMDZKVk1nSlZrQVFVMEFVRTBBU21GdWRXRnllUUJHWldKeWRXRnllUUJOWVhKamFBQkJjSEpwYkFCTllYa0FTblZ1WlFCS2RXeDVBRUYxWjNWemRBQlRaWEIwWlcxaVpYSUFUMk4wYjJKbGNnQk9iM1psYldKbGNnQkVaV05sYldKbGNnQktZVzRBUm1WaUFFMWhjZ0JCY0hJQVNuVnVBRXAxYkFCQmRXY0FVMlZ3QUU5amRBQk9iM1lBUkdWakFGTjFibVJoZVFCTmIyNWtZWGtBVkhWbGMyUmhlUUJYWldSdVpYTmtZWGtBVkdoMWNuTmtZWGtBUm5KcFpHRjVBRk5oZEhWeVpHRjVBRk4xYmdCTmIyNEFWSFZsQUZkbFpBQlVhSFVBUm5KcEFGTmhkQUFsYlM4bFpDOGxlU1ZaTFNWdExTVmtKVWs2SlUwNkpWTWdKWEFsU0RvbFRTVklPaVZOT2lWVEpVZzZKVTA2SlZOT1UzUXpYMTh5T0hScGJXVmZaMlYwU1dOT1UxOHhPV2x6ZEhKbFlXMWlkV1pmYVhSbGNtRjBiM0pKWTA1VFh6RXhZMmhoY2w5MGNtRnBkSE5KWTBWRlJVVkZSUUJPVTNRelgxOHlNakJmWDNScGJXVmZaMlYwWDJOZmMzUnZjbUZuWlVsalJVVUFUbE4wTTE5Zk1qbDBhVzFsWDJKaGMyVkZBRTVUZEROZlh6STRkR2x0WlY5blpYUkpkMDVUWHpFNWFYTjBjbVZoYldKMVpsOXBkR1Z5WVhSdmNrbDNUbE5mTVRGamFHRnlYM1J5WVdsMGMwbDNSVVZGUlVWRkFFNVRkRE5mWHpJeU1GOWZkR2x0WlY5blpYUmZZMTl6ZEc5eVlXZGxTWGRGUlFCT1UzUXpYMTh5T0hScGJXVmZjSFYwU1dOT1UxOHhPVzl6ZEhKbFlXMWlkV1pmYVhSbGNtRjBiM0pKWTA1VFh6RXhZMmhoY2w5MGNtRnBkSE5KWTBWRlJVVkZSUUJPVTNRelgxOHlNVEJmWDNScGJXVmZjSFYwUlFCT1UzUXpYMTh5T0hScGJXVmZjSFYwU1hkT1UxOHhPVzl6ZEhKbFlXMWlkV1pmYVhSbGNtRjBiM0pKZDA1VFh6RXhZMmhoY2w5MGNtRnBkSE5KZDBWRlJVVkZSUUJPVTNRelgxOHlNVEJ0YjI1bGVYQjFibU4wU1dOTVlqQkZSVVVBVGxOME0xOWZNakV3Ylc5dVpYbGZZbUZ6WlVVQVRsTjBNMTlmTWpFd2JXOXVaWGx3ZFc1amRFbGpUR0l4UlVWRkFFNVRkRE5mWHpJeE1HMXZibVY1Y0hWdVkzUkpkMHhpTUVWRlJRQk9VM1F6WDE4eU1UQnRiMjVsZVhCMWJtTjBTWGRNWWpGRlJVVUFNREV5TXpRMU5qYzRPUUFsVEdZQVRsTjBNMTlmTWpsdGIyNWxlVjluWlhSSlkwNVRYekU1YVhOMGNtVmhiV0oxWmw5cGRHVnlZWFJ2Y2tsalRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVkZSVVZGQUU1VGRETmZYekl4TVY5ZmJXOXVaWGxmWjJWMFNXTkZSUUF3TVRJek5EVTJOemc1QUU1VGRETmZYekk1Ylc5dVpYbGZaMlYwU1hkT1UxOHhPV2x6ZEhKbFlXMWlkV1pmYVhSbGNtRjBiM0pKZDA1VFh6RXhZMmhoY2w5MGNtRnBkSE5KZDBWRlJVVkZSUUJPVTNRelgxOHlNVEZmWDIxdmJtVjVYMmRsZEVsM1JVVUFKUzR3VEdZQVRsTjBNMTlmTWpsdGIyNWxlVjl3ZFhSSlkwNVRYekU1YjNOMGNtVmhiV0oxWmw5cGRHVnlZWFJ2Y2tsalRsTmZNVEZqYUdGeVgzUnlZV2wwYzBsalJVVkZSVVZGQUU1VGRETmZYekl4TVY5ZmJXOXVaWGxmY0hWMFNXTkZSUUJPVTNRelgxOHlPVzF2Ym1WNVgzQjFkRWwzVGxOZk1UbHZjM1J5WldGdFluVm1YMmwwWlhKaGRHOXlTWGRPVTE4eE1XTm9ZWEpmZEhKaGFYUnpTWGRGUlVWRlJVVUFUbE4wTTE5Zk1qRXhYMTl0YjI1bGVWOXdkWFJKZDBWRkFFNVRkRE5mWHpJNGJXVnpjMkZuWlhOSlkwVkZBRTVUZEROZlh6SXhNMjFsYzNOaFoyVnpYMkpoYzJWRkFFNVRkRE5mWHpJeE4xOWZkMmxrWlc1ZlpuSnZiVjkxZEdZNFNVeHRNekpGUlVVQVRsTjBNMTlmTWpkamIyUmxZM1owU1VScFl6RXhYMTl0WW5OMFlYUmxYM1JGUlFCT1UzUXpYMTh5TVRKamIyUmxZM1owWDJKaGMyVkZBRTVUZEROZlh6SXhObDlmYm1GeWNtOTNYM1J2WDNWMFpqaEpURzB6TWtWRlJRQk9VM1F6WDE4eU9HMWxjM05oWjJWelNYZEZSUUJPVTNRelgxOHlOMk52WkdWamRuUkpZMk14TVY5ZmJXSnpkR0YwWlY5MFJVVUFUbE4wTTE5Zk1qZGpiMlJsWTNaMFNYZGpNVEZmWDIxaWMzUmhkR1ZmZEVWRkFFNVRkRE5mWHpJM1kyOWtaV04yZEVsRWMyTXhNVjlmYldKemRHRjBaVjkwUlVVQVRsTjBNMTlmTWpac2IyTmhiR1UxWDE5cGJYQkZBRTVUZEROZlh6STFZM1I1Y0dWSlkwVkZBRTVUZEROZlh6SXhNR04wZVhCbFgySmhjMlZGQUU1VGRETmZYekkxWTNSNWNHVkpkMFZGQUU1VGRETmZYekk0Ym5WdGNIVnVZM1JKWTBWRkFFNVRkRE5mWHpJNGJuVnRjSFZ1WTNSSmQwVkZBRTVUZEROZlh6SXhORjlmYzJoaGNtVmtYMk52ZFc1MFJRQnRkWFJsZUNCc2IyTnJJR1poYVd4bFpBQjBaWEp0YVc1aGRHbHVaeUIzYVhSb0lDVnpJR1Y0WTJWd2RHbHZiaUJ2WmlCMGVYQmxJQ1Z6T2lBbGN3QjBaWEp0YVc1aGRHbHVaeUIzYVhSb0lDVnpJR1Y0WTJWd2RHbHZiaUJ2WmlCMGVYQmxJQ1Z6QUhSbGNtMXBibUYwYVc1bklIZHBkR2dnSlhNZ1ptOXlaV2xuYmlCbGVHTmxjSFJwYjI0QWRHVnliV2x1WVhScGJtY0FkVzVqWVhWbmFIUUFVM1E1WlhoalpYQjBhVzl1QUU0eE1GOWZZM2g0WVdKcGRqRXhObDlmYzJocGJWOTBlWEJsWDJsdVptOUZBRk4wT1hSNWNHVmZhVzVtYndCT01UQmZYMk40ZUdGaWFYWXhNakJmWDNOcFgyTnNZWE56WDNSNWNHVmZhVzVtYjBVQVRqRXdYMTlqZUhoaFltbDJNVEUzWDE5amJHRnpjMTkwZVhCbFgybHVabTlGQUhSbGNtMXBibUYwWlY5b1lXNWtiR1Z5SUhWdVpYaHdaV04wWldSc2VTQnlaWFIxY201bFpBQmZXZ0JmWDE5YUFGOWliRzlqYTE5cGJuWnZhMlVBYVc1MmIyTmhkR2x2YmlCbWRXNWpkR2x2YmlCbWIzSWdZbXh2WTJzZ2FXNGdBSFp2YVdRQVltOXZiQUJqYUdGeUFITnBaMjVsWkNCamFHRnlBSFZ1YzJsbmJtVmtJR05vWVhJQWMyaHZjblFBZFc1emFXZHVaV1FnYzJodmNuUUFhVzUwQUhWdWMybG5ibVZrSUdsdWRBQnNiMjVuQUhWdWMybG5ibVZrSUd4dmJtY0FiRzl1WnlCc2IyNW5BRjlmYVc1ME1USTRBSFZ1YzJsbmJtVmtJRjlmYVc1ME1USTRBR1pzYjJGMEFHeHZibWNnWkc5MVlteGxBRjlmWm14dllYUXhNamdBTGk0dUFHUmxZMmx0WVd3Mk5BQmtaV05wYldGc01USTRBR1JsWTJsdFlXd3pNZ0JrWldOcGJXRnNNVFlBWTJoaGNqTXlYM1FBWTJoaGNqRTJYM1FBWVhWMGJ3QmtaV05zZEhsd1pTaGhkWFJ2S1FCemRHUTZPbTUxYkd4d2RISmZkQUJiWVdKcE9nQmRBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURXdRV0pwVkdGblFYUjBja1VBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxORTV2WkdWRkFHRnNiRzlqWVhSdmNnQmlZWE5wWTE5emRISnBibWNBYzNSeWFXNW5BR2x6ZEhKbFlXMEFiM04wY21WaGJRQnBiM04wY21WaGJRQnpkR1E2T21Gc2JHOWpZWFJ2Y2dCemRHUTZPbUpoYzJsalgzTjBjbWx1WndCemRHUTZPbk4wY21sdVp3QnpkR1E2T21semRISmxZVzBBYzNSa09qcHZjM1J5WldGdEFITjBaRG82YVc5emRISmxZVzBBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNVGxUY0dWamFXRnNVM1ZpYzNScGRIVjBhVzl1UlFBZ2FXMWhaMmx1WVhKNUFFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRJd1VHOXpkR1pwZUZGMVlXeHBabWxsWkZSNWNHVkZBQ0JqYjIxd2JHVjRBQ2tBSUFBb0FDWUFKaVlBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNVE5TWldabGNtVnVZMlZVZVhCbFJRQnZZbXBqWDI5aWFtVmpkQUFxQUdsa1BBQStBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURXhVRzlwYm5SbGNsUjVjR1ZGQUU0eE1sOUhURTlDUVV4ZlgwNWZNVEUyYVhSaGJtbDFiVjlrWlcxaGJtZHNaVEl3VG1GdFpWZHBkR2hVWlcxd2JHRjBaVUZ5WjNORkFEd0FMQ0FBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNVEpVWlcxd2JHRjBaVUZ5WjNORkFFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRFelVHRnlZVzFsZEdWeVVHRmphMFVBZDJOb1lYSmZkQUJpTUVVQVlqRkZBSFVBYkFCMWJBQnNiQUIxYkd3QVRqRXlYMGRNVDBKQlRGOWZUbDh4TVRacGRHRnVhWFZ0WDJSbGJXRnVaMnhsTVRWSmJuUmxaMlZ5UTJGemRFVjRjSEpGQUNWTVlVd0FUakV5WDBkTVQwSkJURjlmVGw4eE1UWnBkR0Z1YVhWdFgyUmxiV0Z1WjJ4bE1UWkdiRzloZEV4cGRHVnlZV3hKYlhCc1NXVkZSUUFsWVFCT01USmZSMHhQUWtGTVgxOU9YekV4Tm1sMFlXNXBkVzFmWkdWdFlXNW5iR1V4Tmtac2IyRjBUR2wwWlhKaGJFbHRjR3hKWkVWRkFDVmhaZ0JPTVRKZlIweFBRa0ZNWDE5T1h6RXhObWwwWVc1cGRXMWZaR1Z0WVc1bmJHVXhOa1pzYjJGMFRHbDBaWEpoYkVsdGNHeEpaa1ZGQUhSeWRXVUFabUZzYzJVQVRqRXlYMGRNVDBKQlRGOWZUbDh4TVRacGRHRnVhWFZ0WDJSbGJXRnVaMnhsT0VKdmIyeEZlSEJ5UlFBdEFFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRFMFNXNTBaV2RsY2t4cGRHVnlZV3hGQUU0eE1sOUhURTlDUVV4ZlgwNWZNVEUyYVhSaGJtbDFiVjlrWlcxaGJtZHNaVEl3VkdWdGNHeGhkR1ZCY21kMWJXVnVkRkJoWTJ0RkFHZHpBQ1k5QUQwQVlXeHBaMjV2WmlBb0FDd0FmZ0F1S2dBdkFDODlBRjRBWGowQVBUMEFQajBBUEQwQVBEd0FQRHc5QUMwOUFDbzlBQzB0QUNFOUFDRUFmSHdBZkFCOFBRQXRQaW9BS3dBclBRQXJLd0F0UGdBbEFDVTlBRDQrQUQ0K1BRQnphWHBsYjJZZ0tBQjBlWEJsYVdRZ0tBQjBhSEp2ZHdCMGFISnZkeUFBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxPVlJvY205M1JYaHdja1VBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNVEpKYm1sMFRHbHpkRVY0Y0hKRkFFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRFelRtOWtaVUZ5Y21GNVRtOWtaVVVBYzJsNlpXOW1MaTR1SUNnQVRqRXlYMGRNVDBKQlRGOWZUbDh4TVRacGRHRnVhWFZ0WDJSbGJXRnVaMnhsTVRORmJtTnNiM05wYm1kRmVIQnlSUUJ6YVhwbGIyWXVMaTRvQUU0eE1sOUhURTlDUVV4ZlgwNWZNVEUyYVhSaGJtbDFiVjlrWlcxaGJtZHNaVEl5VUdGeVlXMWxkR1Z5VUdGamEwVjRjR0Z1YzJsdmJrVUFUakV5WDBkTVQwSkJURjlmVGw4eE1UWnBkR0Z1YVhWdFgyUmxiV0Z1WjJ4bE1UbFRhWHBsYjJaUVlYSmhiVkJoWTJ0RmVIQnlSUUJ6ZEdGMGFXTmZZMkZ6ZEFBK0tBQk9NVEpmUjB4UFFrRk1YMTlPWHpFeE5tbDBZVzVwZFcxZlpHVnRZVzVuYkdVNFEyRnpkRVY0Y0hKRkFISmxhVzUwWlhKd2NtVjBYMk5oYzNRQUtTQS9JQ2dBS1NBNklDZ0FUakV5WDBkTVQwSkJURjlmVGw4eE1UWnBkR0Z1YVhWdFgyUmxiV0Z1WjJ4bE1UVkRiMjVrYVhScGIyNWhiRVY0Y0hKRkFHNXZaWGhqWlhCMElDZ0FibmNBYm1FQWNHa0FPanB2Y0dWeVlYUnZjaUFBYm1WM0FGdGRBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pUZE9aWGRGZUhCeVJRQk9NVEpmUjB4UFFrRk1YMTlPWHpFeE5tbDBZVzVwZFcxZlpHVnRZVzVuYkdVeE1WQnZjM1JtYVhoRmVIQnlSUUFnTGk0dUlBQWdQU0FBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNVFZDY21GalpXUlNZVzVuWlVWNGNISkZBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURXdRbkpoWTJWa1JYaHdja1VBWDBkTVQwSkJURjlmVGdBb1lXNXZibmx0YjNWeklHNWhiV1Z6Y0dGalpTa0FUakV5WDBkTVQwSkJURjlmVGw4eE1UWnBkR0Z1YVhWdFgyUmxiV0Z1WjJ4bE9FNWhiV1ZVZVhCbFJRQXBXd0JPTVRKZlIweFBRa0ZNWDE5T1h6RXhObWwwWVc1cGRXMWZaR1Z0WVc1bmJHVXhPRUZ5Y21GNVUzVmljMk55YVhCMFJYaHdja1VBTGdCT01USmZSMHhQUWtGTVgxOU9YekV4Tm1sMFlXNXBkVzFmWkdWdFlXNW5iR1V4TUUxbGJXSmxja1Y0Y0hKRkFITnlUZ0J6Y2dBNk9nQk9NVEpmUjB4UFFrRk1YMTlPWHpFeE5tbDBZVzVwZFcxZlpHVnRZVzVuYkdVeE9VZHNiMkpoYkZGMVlXeHBabWxsWkU1aGJXVkZBR1J1QUc5dUFHOXdaWEpoZEc5eUppWUFiM0JsY21GMGIzSW1BRzl3WlhKaGRHOXlKajBBYjNCbGNtRjBiM0k5QUc5d1pYSmhkRzl5S0NrQWIzQmxjbUYwYjNJc0FHOXdaWEpoZEc5eWZnQnZjR1Z5WVhSdmNpQmtaV3hsZEdWYlhRQnZjR1Z5WVhSdmNpb0FiM0JsY21GMGIzSXZBRzl3WlhKaGRHOXlMejBBYjNCbGNtRjBiM0plQUc5d1pYSmhkRzl5WGowQWIzQmxjbUYwYjNJOVBRQnZjR1Z5WVhSdmNqNDlBRzl3WlhKaGRHOXlQZ0J2Y0dWeVlYUnZjbHRkQUc5d1pYSmhkRzl5UEQwQWIzQmxjbUYwYjNJOFBBQnZjR1Z5WVhSdmNqdzhQUUJ2Y0dWeVlYUnZjandBYjNCbGNtRjBiM0l0QUc5d1pYSmhkRzl5TFQwQWIzQmxjbUYwYjNJcVBRQnZjR1Z5WVhSdmNpMHRBRzl3WlhKaGRHOXlJRzVsZDF0ZEFHOXdaWEpoZEc5eUlUMEFiM0JsY21GMGIzSWhBRzl3WlhKaGRHOXlJRzVsZHdCdmNHVnlZWFJ2Y254OEFHOXdaWEpoZEc5eWZBQnZjR1Z5WVhSdmNudzlBRzl3WlhKaGRHOXlMVDRxQUc5d1pYSmhkRzl5S3dCdmNHVnlZWFJ2Y2lzOUFHOXdaWEpoZEc5eUt5c0FiM0JsY21GMGIzSXRQZ0J2Y0dWeVlYUnZjajhBYjNCbGNtRjBiM0lsQUc5d1pYSmhkRzl5SlQwQWIzQmxjbUYwYjNJK1BnQnZjR1Z5WVhSdmNqNCtQUUJ2Y0dWeVlYUnZjanc5UGdCdmNHVnlZWFJ2Y2lJaUlBQk9NVEpmUjB4UFFrRk1YMTlPWHpFeE5tbDBZVzVwZFcxZlpHVnRZVzVuYkdVeE5VeHBkR1Z5WVd4UGNHVnlZWFJ2Y2tVQWIzQmxjbUYwYjNJZ1pHVnNaWFJsQUc5d1pYSmhkRzl5SUFCT01USmZSMHhQUWtGTVgxOU9YekV4Tm1sMFlXNXBkVzFmWkdWdFlXNW5iR1V5TWtOdmJuWmxjbk5wYjI1UGNHVnlZWFJ2Y2xSNWNHVkZBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pUaEVkRzl5VG1GdFpVVUFUakV5WDBkTVQwSkJURjlmVGw4eE1UWnBkR0Z1YVhWdFgyUmxiV0Z1WjJ4bE1UTlJkV0ZzYVdacFpXUk9ZVzFsUlFCa2VXNWhiV2xqWDJOaGMzUUFaR1ZzWlhSbEFGdGRJQUJPTVRKZlIweFBRa0ZNWDE5T1h6RXhObWwwWVc1cGRXMWZaR1Z0WVc1bmJHVXhNRVJsYkdWMFpVVjRjSEpGQUdOMkFDa29BRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURTBRMjl1ZG1WeWMybHZia1Y0Y0hKRkFFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRoRFlXeHNSWGh3Y2tVQVkyOXVjM1JmWTJGemRBQk9NVEpmUjB4UFFrRk1YMTlPWHpFeE5tbDBZVzVwZFcxZlpHVnRZVzVuYkdVeE1GQnlaV1pwZUVWNGNISkZBQ2tnQUNBb0FFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRFd1FtbHVZWEo1Ulhod2NrVUFZV0VBWVc0QVlVNEFZVk1BWTIwQVpITUFaSFlBWkZZQVpXOEFaVThBWlhFQVoyVUFaM1FBYkdVQWJITUFiRk1BYkhRQWJXa0FiVWtBYld3QWJVd0FibVVBYjI4QWIzSUFiMUlBY0d3QWNFd0FjbTBBY2swQWNuTUFjbE1BTGk0dUlBQWdMaTR1QUU0eE1sOUhURTlDUVV4ZlgwNWZNVEUyYVhSaGJtbDFiVjlrWlcxaGJtZHNaVGhHYjJ4a1JYaHdja1VBWm5BQVprd0FUakV5WDBkTVQwSkJURjlmVGw4eE1UWnBkR0Z1YVhWdFgyUmxiV0Z1WjJ4bE1UTkdkVzVqZEdsdmJsQmhjbUZ0UlFCT01USmZSMHhQUWtGTVgxOU9YekV4Tm1sMFlXNXBkVzFmWkdWdFlXNW5iR1V5TkVadmNuZGhjbVJVWlcxd2JHRjBaVkpsWm1WeVpXNWpaVVVBVkhNQWMzUnlkV04wQUZSMUFIVnVhVzl1QUZSbEFHVnVkVzBBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNakpGYkdGaWIzSmhkR1ZrVkhsd1pWTndaV1pVZVhCbFJRQlRkRXdBVTNRQWMzUmtPam9BVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNVFpUZEdSUmRXRnNhV1pwWldST1lXMWxSUUJFUXdCT01USmZSMHhQUWtGTVgxOU9YekV4Tm1sMFlXNXBkVzFmWkdWdFlXNW5iR1V5TVZOMGNuVmpkSFZ5WldSQ2FXNWthVzVuVG1GdFpVVUFWWFFBVld3QWRrVUFKMnhoYldKa1lRQW5LQUJPTVRKZlIweFBRa0ZNWDE5T1h6RXhObWwwWVc1cGRXMWZaR1Z0WVc1bmJHVXhOVU5zYjNOMWNtVlVlWEJsVG1GdFpVVUFKM1Z1Ym1GdFpXUUFKd0JPTVRKZlIweFBRa0ZNWDE5T1h6RXhObWwwWVc1cGRXMWZaR1Z0WVc1bmJHVXhOVlZ1Ym1GdFpXUlVlWEJsVG1GdFpVVUFjM1J5YVc1bklHeHBkR1Z5WVd3QVRqRXlYMGRNVDBKQlRGOWZUbDh4TVRacGRHRnVhWFZ0WDJSbGJXRnVaMnhsT1V4dlkyRnNUbUZ0WlVVQWMzUmtBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURXlRM1J2Y2tSMGIzSk9ZVzFsUlFCaVlYTnBZMTlwYzNSeVpXRnRBR0poYzJsalgyOXpkSEpsWVcwQVltRnphV05mYVc5emRISmxZVzBBYzNSa09qcGlZWE5wWTE5emRISnBibWM4WTJoaGNpd2djM1JrT2pwamFHRnlYM1J5WVdsMGN6eGphR0Z5UGl3Z2MzUmtPanBoYkd4dlkyRjBiM0k4WTJoaGNqNGdQZ0J6ZEdRNk9tSmhjMmxqWDJsemRISmxZVzA4WTJoaGNpd2djM1JrT2pwamFHRnlYM1J5WVdsMGN6eGphR0Z5UGlBK0FITjBaRG82WW1GemFXTmZiM04wY21WaGJUeGphR0Z5TENCemRHUTZPbU5vWVhKZmRISmhhWFJ6UEdOb1lYSStJRDRBYzNSa09qcGlZWE5wWTE5cGIzTjBjbVZoYlR4amFHRnlMQ0J6ZEdRNk9tTm9ZWEpmZEhKaGFYUnpQR05vWVhJK0lENEFUakV5WDBkTVQwSkJURjlmVGw4eE1UWnBkR0Z1YVhWdFgyUmxiV0Z1WjJ4bE1qZEZlSEJoYm1SbFpGTndaV05wWVd4VGRXSnpkR2wwZFhScGIyNUZBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURXdUbVZ6ZEdWa1RtRnRaVVVBT2pvcUFFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRFNVVHOXBiblJsY2xSdlRXVnRZbVZ5Vkhsd1pVVUFXd0JPTVRKZlIweFBRa0ZNWDE5T1h6RXhObWwwWVc1cGRXMWZaR1Z0WVc1bmJHVTVRWEp5WVhsVWVYQmxSUUJFZGdBZ2RtVmpkRzl5V3dCT01USmZSMHhQUWtGTVgxOU9YekV4Tm1sMFlXNXBkVzFmWkdWdFlXNW5iR1V4TUZabFkzUnZjbFI1Y0dWRkFIQnBlR1ZzSUhabFkzUnZjbHNBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNVFZRYVhobGJGWmxZM1J2Y2xSNWNHVkZBR1JsWTJ4MGVYQmxLQUJrYjNWaWJHVUFkVzV6YVdkdVpXUWdiRzl1WnlCc2IyNW5BRzlpYW1Od2NtOTBid0FnWTI5dWMzUUFJSFp2YkdGMGFXeGxBQ0J5WlhOMGNtbGpkQUJPTVRKZlIweFBRa0ZNWDE5T1h6RXhObWwwWVc1cGRXMWZaR1Z0WVc1bmJHVTRVWFZoYkZSNWNHVkZBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURTNWbVZ1Wkc5eVJYaDBVWFZoYkZSNWNHVkZBRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURXpUMkpxUTFCeWIzUnZUbUZ0WlVVQVJHOEFibTlsZUdObGNIUUFSRThBUkhjQVJIZ0FVa1VBVDBVQUlDWUFJQ1ltQUU0eE1sOUhURTlDUVV4ZlgwNWZNVEUyYVhSaGJtbDFiVjlrWlcxaGJtZHNaVEV5Um5WdVkzUnBiMjVVZVhCbFJRQjBhSEp2ZHlnQVRqRXlYMGRNVDBKQlRGOWZUbDh4TVRacGRHRnVhWFZ0WDJSbGJXRnVaMnhsTWpCRWVXNWhiV2xqUlhoalpYQjBhVzl1VTNCbFkwVUFibTlsZUdObGNIUW9BRTR4TWw5SFRFOUNRVXhmWDA1Zk1URTJhWFJoYm1sMWJWOWtaVzFoYm1kc1pURXlUbTlsZUdObGNIUlRjR1ZqUlFCT01USmZSMHhQUWtGTVgxOU9YekV4Tm1sMFlXNXBkVzFmWkdWdFlXNW5iR1V4TVZOd1pXTnBZV3hPWVcxbFJRQk9NVEpmUjB4UFFrRk1YMTlPWHpFeE5tbDBZVzVwZFcxZlpHVnRZVzVuYkdVNVJHOTBVM1ZtWm1sNFJRQlZZVGxsYm1GaWJHVmZhV1pKQUU0eE1sOUhURTlDUVV4ZlgwNWZNVEUyYVhSaGJtbDFiVjlrWlcxaGJtZHNaVEUyUm5WdVkzUnBiMjVGYm1OdlpHbHVaMFVBSUZ0bGJtRmliR1ZmYVdZNkFFNHhNbDlIVEU5Q1FVeGZYMDVmTVRFMmFYUmhibWwxYlY5a1pXMWhibWRzWlRFeVJXNWhZbXhsU1daQmRIUnlSUUIwYUhKbFlXUXRiRzlqWVd3Z2QzSmhjSEJsY2lCeWIzVjBhVzVsSUdadmNpQUFjbVZtWlhKbGJtTmxJSFJsYlhCdmNtRnllU0JtYjNJZ0FHZDFZWEprSUhaaGNtbGhZbXhsSUdadmNpQUFibTl1TFhacGNuUjFZV3dnZEdoMWJtc2dkRzhnQUhacGNuUjFZV3dnZEdoMWJtc2dkRzhnQUhSb2NtVmhaQzFzYjJOaGJDQnBibWwwYVdGc2FYcGhkR2x2YmlCeWIzVjBhVzVsSUdadmNpQUFZMjl1YzNSeWRXTjBhVzl1SUhaMFlXSnNaU0JtYjNJZ0FDMXBiaTBBVGpFeVgwZE1UMEpCVEY5ZlRsOHhNVFpwZEdGdWFYVnRYMlJsYldGdVoyeGxNakZEZEc5eVZuUmhZbXhsVTNCbFkybGhiRTVoYldWRkFHTnZkbUZ5YVdGdWRDQnlaWFIxY200Z2RHaDFibXNnZEc4Z0FIUjVjR1ZwYm1adklHNWhiV1VnWm05eUlBQjBlWEJsYVc1bWJ5Qm1iM0lnQUZaVVZDQm1iM0lnQUhaMFlXSnNaU0JtYjNJZ0FFNHhNRjlmWTNoNFlXSnBkakV4TjE5ZmNHSmhjMlZmZEhsd1pWOXBibVp2UlFCT01UQmZYMk40ZUdGaWFYWXhNVGxmWDNCdmFXNTBaWEpmZEhsd1pWOXBibVp2UlFCT01UQmZYMk40ZUdGaWFYWXhNak5mWDJaMWJtUmhiV1Z1ZEdGc1gzUjVjR1ZmYVc1bWIwVUFkZ0JpQUdNQWFBQmhBSE1BZEFCcEFHb0FiUUJtQUdRQVRqRXdYMTlqZUhoaFltbDJNVEl4WDE5MmJXbGZZMnhoYzNOZmRIbHdaVjlwYm1adlJRPT1cIjtpZighaXNEYXRhVVJJKHdhc21CaW5hcnlGaWxlKSl7d2FzbUJpbmFyeUZpbGU9bG9jYXRlRmlsZSh3YXNtQmluYXJ5RmlsZSl9ZnVuY3Rpb24gZ2V0QmluYXJ5KCl7dHJ5e2lmKHdhc21CaW5hcnkpe3JldHVybiBuZXcgVWludDhBcnJheSh3YXNtQmluYXJ5KX12YXIgYmluYXJ5PXRyeVBhcnNlQXNEYXRhVVJJKHdhc21CaW5hcnlGaWxlKTtpZihiaW5hcnkpe3JldHVybiBiaW5hcnl9aWYocmVhZEJpbmFyeSl7cmV0dXJuIHJlYWRCaW5hcnkod2FzbUJpbmFyeUZpbGUpfWVsc2V7dGhyb3dcImJvdGggYXN5bmMgYW5kIHN5bmMgZmV0Y2hpbmcgb2YgdGhlIHdhc20gZmFpbGVkXCJ9fWNhdGNoKGVycil7YWJvcnQoZXJyKX19ZnVuY3Rpb24gZ2V0QmluYXJ5UHJvbWlzZSgpe2lmKCF3YXNtQmluYXJ5JiYoRU5WSVJPTk1FTlRfSVNfV0VCfHxFTlZJUk9OTUVOVF9JU19XT1JLRVIpJiZ0eXBlb2YgZmV0Y2g9PT1cImZ1bmN0aW9uXCIpe3JldHVybiBmZXRjaCh3YXNtQmluYXJ5RmlsZSx7Y3JlZGVudGlhbHM6XCJzYW1lLW9yaWdpblwifSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7aWYoIXJlc3BvbnNlW1wib2tcIl0pe3Rocm93XCJmYWlsZWQgdG8gbG9hZCB3YXNtIGJpbmFyeSBmaWxlIGF0ICdcIit3YXNtQmluYXJ5RmlsZStcIidcIn1yZXR1cm4gcmVzcG9uc2VbXCJhcnJheUJ1ZmZlclwiXSgpfSkuY2F0Y2goZnVuY3Rpb24oKXtyZXR1cm4gZ2V0QmluYXJ5KCl9KX1yZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSxyZWplY3Qpe3Jlc29sdmUoZ2V0QmluYXJ5KCkpfSl9ZnVuY3Rpb24gY3JlYXRlV2FzbShlbnYpe3ZhciBpbmZvPXtcImVudlwiOmVudixcImdsb2JhbFwiOntcIk5hTlwiOk5hTixJbmZpbml0eTpJbmZpbml0eX0sXCJnbG9iYWwuTWF0aFwiOk1hdGgsXCJhc20yd2FzbVwiOmFzbTJ3YXNtSW1wb3J0c307ZnVuY3Rpb24gcmVjZWl2ZUluc3RhbmNlKGluc3RhbmNlLG1vZHVsZSl7dmFyIGV4cG9ydHM9aW5zdGFuY2UuZXhwb3J0cztNb2R1bGVbXCJhc21cIl09ZXhwb3J0cztyZW1vdmVSdW5EZXBlbmRlbmN5KFwid2FzbS1pbnN0YW50aWF0ZVwiKX1hZGRSdW5EZXBlbmRlbmN5KFwid2FzbS1pbnN0YW50aWF0ZVwiKTt2YXIgdHJ1ZU1vZHVsZT1Nb2R1bGU7ZnVuY3Rpb24gcmVjZWl2ZUluc3RhbnRpYXRlZFNvdXJjZShvdXRwdXQpe2Fzc2VydChNb2R1bGU9PT10cnVlTW9kdWxlLFwidGhlIE1vZHVsZSBvYmplY3Qgc2hvdWxkIG5vdCBiZSByZXBsYWNlZCBkdXJpbmcgYXN5bmMgY29tcGlsYXRpb24gLSBwZXJoYXBzIHRoZSBvcmRlciBvZiBIVE1MIGVsZW1lbnRzIGlzIHdyb25nP1wiKTt0cnVlTW9kdWxlPW51bGw7cmVjZWl2ZUluc3RhbmNlKG91dHB1dFtcImluc3RhbmNlXCJdKX1mdW5jdGlvbiBpbnN0YW50aWF0ZUFycmF5QnVmZmVyKHJlY2VpdmVyKXtyZXR1cm4gZ2V0QmluYXJ5UHJvbWlzZSgpLnRoZW4oZnVuY3Rpb24oYmluYXJ5KXtyZXR1cm4gV2ViQXNzZW1ibHkuaW5zdGFudGlhdGUoYmluYXJ5LGluZm8pfSkudGhlbihyZWNlaXZlcixmdW5jdGlvbihyZWFzb24pe2VycihcImZhaWxlZCB0byBhc3luY2hyb25vdXNseSBwcmVwYXJlIHdhc206IFwiK3JlYXNvbik7YWJvcnQocmVhc29uKX0pfWZ1bmN0aW9uIGluc3RhbnRpYXRlQXN5bmMoKXtpZighd2FzbUJpbmFyeSYmdHlwZW9mIFdlYkFzc2VtYmx5Lmluc3RhbnRpYXRlU3RyZWFtaW5nPT09XCJmdW5jdGlvblwiJiYhaXNEYXRhVVJJKHdhc21CaW5hcnlGaWxlKSYmdHlwZW9mIGZldGNoPT09XCJmdW5jdGlvblwiKXtmZXRjaCh3YXNtQmluYXJ5RmlsZSx7Y3JlZGVudGlhbHM6XCJzYW1lLW9yaWdpblwifSkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7dmFyIHJlc3VsdD1XZWJBc3NlbWJseS5pbnN0YW50aWF0ZVN0cmVhbWluZyhyZXNwb25zZSxpbmZvKTtyZXR1cm4gcmVzdWx0LnRoZW4ocmVjZWl2ZUluc3RhbnRpYXRlZFNvdXJjZSxmdW5jdGlvbihyZWFzb24pe2VycihcIndhc20gc3RyZWFtaW5nIGNvbXBpbGUgZmFpbGVkOiBcIityZWFzb24pO2VycihcImZhbGxpbmcgYmFjayB0byBBcnJheUJ1ZmZlciBpbnN0YW50aWF0aW9uXCIpO2luc3RhbnRpYXRlQXJyYXlCdWZmZXIocmVjZWl2ZUluc3RhbnRpYXRlZFNvdXJjZSl9KX0pfWVsc2V7cmV0dXJuIGluc3RhbnRpYXRlQXJyYXlCdWZmZXIocmVjZWl2ZUluc3RhbnRpYXRlZFNvdXJjZSl9fWlmKE1vZHVsZVtcImluc3RhbnRpYXRlV2FzbVwiXSl7dHJ5e3ZhciBleHBvcnRzPU1vZHVsZVtcImluc3RhbnRpYXRlV2FzbVwiXShpbmZvLHJlY2VpdmVJbnN0YW5jZSk7cmV0dXJuIGV4cG9ydHN9Y2F0Y2goZSl7ZXJyKFwiTW9kdWxlLmluc3RhbnRpYXRlV2FzbSBjYWxsYmFjayBmYWlsZWQgd2l0aCBlcnJvcjogXCIrZSk7cmV0dXJuIGZhbHNlfX1pbnN0YW50aWF0ZUFzeW5jKCk7cmV0dXJue319TW9kdWxlW1wiYXNtXCJdPWZ1bmN0aW9uKGdsb2JhbCxlbnYscHJvdmlkZWRCdWZmZXIpe2VudltcIm1lbW9yeVwiXT13YXNtTWVtb3J5O2VudltcInRhYmxlXCJdPXdhc21UYWJsZT1uZXcgV2ViQXNzZW1ibHkuVGFibGUoe1wiaW5pdGlhbFwiOjExOTgsXCJtYXhpbXVtXCI6MTE5OCxcImVsZW1lbnRcIjpcImFueWZ1bmNcIn0pO2VudltcIl9fbWVtb3J5X2Jhc2VcIl09MTAyNDtlbnZbXCJfX3RhYmxlX2Jhc2VcIl09MDt2YXIgZXhwb3J0cz1jcmVhdGVXYXNtKGVudik7YXNzZXJ0KGV4cG9ydHMsXCJiaW5hcnllbiBzZXR1cCBmYWlsZWQgKG5vIHdhc20gc3VwcG9ydD8pXCIpO3JldHVybiBleHBvcnRzfTt2YXIgdGVtcERvdWJsZTt2YXIgdGVtcEk2NDtfX0FUSU5JVF9fLnB1c2goe2Z1bmM6ZnVuY3Rpb24oKXtnbG9iYWxDdG9ycygpfX0pO3ZhciB0ZW1wRG91YmxlUHRyPTUwMjU2O2Fzc2VydCh0ZW1wRG91YmxlUHRyJTg9PTApO2Z1bmN0aW9uIGRlbWFuZ2xlKGZ1bmMpe3dhcm5PbmNlKFwid2FybmluZzogYnVpbGQgd2l0aCAgLXMgREVNQU5HTEVfU1VQUE9SVD0xICB0byBsaW5rIGluIGxpYmN4eGFiaSBkZW1hbmdsaW5nXCIpO3JldHVybiBmdW5jfWZ1bmN0aW9uIGRlbWFuZ2xlQWxsKHRleHQpe3ZhciByZWdleD0vXFxiX19aW1xcd1xcZF9dKy9nO3JldHVybiB0ZXh0LnJlcGxhY2UocmVnZXgsZnVuY3Rpb24oeCl7dmFyIHk9ZGVtYW5nbGUoeCk7cmV0dXJuIHg9PT15P3g6eStcIiBbXCIreCtcIl1cIn0pfWZ1bmN0aW9uIGpzU3RhY2tUcmFjZSgpe3ZhciBlcnI9bmV3IEVycm9yO2lmKCFlcnIuc3RhY2spe3RyeXt0aHJvdyBuZXcgRXJyb3IoMCl9Y2F0Y2goZSl7ZXJyPWV9aWYoIWVyci5zdGFjayl7cmV0dXJuXCIobm8gc3RhY2sgdHJhY2UgYXZhaWxhYmxlKVwifX1yZXR1cm4gZXJyLnN0YWNrLnRvU3RyaW5nKCl9ZnVuY3Rpb24gc3RhY2tUcmFjZSgpe3ZhciBqcz1qc1N0YWNrVHJhY2UoKTtpZihNb2R1bGVbXCJleHRyYVN0YWNrVHJhY2VcIl0panMrPVwiXFxuXCIrTW9kdWxlW1wiZXh0cmFTdGFja1RyYWNlXCJdKCk7cmV0dXJuIGRlbWFuZ2xlQWxsKGpzKX12YXIgRU5WPXt9O2Z1bmN0aW9uIF9fX2J1aWxkRW52aXJvbm1lbnQoZW52aXJvbil7dmFyIE1BWF9FTlZfVkFMVUVTPTY0O3ZhciBUT1RBTF9FTlZfU0laRT0xMDI0O3ZhciBwb29sUHRyO3ZhciBlbnZQdHI7aWYoIV9fX2J1aWxkRW52aXJvbm1lbnQuY2FsbGVkKXtfX19idWlsZEVudmlyb25tZW50LmNhbGxlZD10cnVlO0VOVltcIlVTRVJcIl09RU5WW1wiTE9HTkFNRVwiXT1cIndlYl91c2VyXCI7RU5WW1wiUEFUSFwiXT1cIi9cIjtFTlZbXCJQV0RcIl09XCIvXCI7RU5WW1wiSE9NRVwiXT1cIi9ob21lL3dlYl91c2VyXCI7RU5WW1wiTEFOR1wiXT1cIkMuVVRGLThcIjtFTlZbXCJMQU5HXCJdPSh0eXBlb2YgbmF2aWdhdG9yPT09XCJvYmplY3RcIiYmbmF2aWdhdG9yLmxhbmd1YWdlcyYmbmF2aWdhdG9yLmxhbmd1YWdlc1swXXx8XCJDXCIpLnJlcGxhY2UoXCItXCIsXCJfXCIpK1wiLlVURi04XCI7RU5WW1wiX1wiXT10aGlzUHJvZ3JhbTtwb29sUHRyPWdldE1lbW9yeShUT1RBTF9FTlZfU0laRSk7ZW52UHRyPWdldE1lbW9yeShNQVhfRU5WX1ZBTFVFUyo0KTtIRUFQMzJbZW52UHRyPj4yXT1wb29sUHRyO0hFQVAzMltlbnZpcm9uPj4yXT1lbnZQdHJ9ZWxzZXtlbnZQdHI9SEVBUDMyW2Vudmlyb24+PjJdO3Bvb2xQdHI9SEVBUDMyW2VudlB0cj4+Ml19dmFyIHN0cmluZ3M9W107dmFyIHRvdGFsU2l6ZT0wO2Zvcih2YXIga2V5IGluIEVOVil7aWYodHlwZW9mIEVOVltrZXldPT09XCJzdHJpbmdcIil7dmFyIGxpbmU9a2V5K1wiPVwiK0VOVltrZXldO3N0cmluZ3MucHVzaChsaW5lKTt0b3RhbFNpemUrPWxpbmUubGVuZ3RofX1pZih0b3RhbFNpemU+VE9UQUxfRU5WX1NJWkUpe3Rocm93IG5ldyBFcnJvcihcIkVudmlyb25tZW50IHNpemUgZXhjZWVkZWQgVE9UQUxfRU5WX1NJWkUhXCIpfXZhciBwdHJTaXplPTQ7Zm9yKHZhciBpPTA7aTxzdHJpbmdzLmxlbmd0aDtpKyspe3ZhciBsaW5lPXN0cmluZ3NbaV07d3JpdGVBc2NpaVRvTWVtb3J5KGxpbmUscG9vbFB0cik7SEVBUDMyW2VudlB0citpKnB0clNpemU+PjJdPXBvb2xQdHI7cG9vbFB0cis9bGluZS5sZW5ndGgrMX1IRUFQMzJbZW52UHRyK3N0cmluZ3MubGVuZ3RoKnB0clNpemU+PjJdPTB9ZnVuY3Rpb24gX19fY3hhX2FsbG9jYXRlX2V4Y2VwdGlvbihzaXplKXtyZXR1cm4gX21hbGxvYyhzaXplKX12YXIgX19fZXhjZXB0aW9uX2luZm9zPXt9O2Z1bmN0aW9uIF9fX2N4YV9wdXJlX3ZpcnR1YWwoKXtBQk9SVD10cnVlO3Rocm93XCJQdXJlIHZpcnR1YWwgZnVuY3Rpb24gY2FsbGVkIVwifXZhciBfX19leGNlcHRpb25fbGFzdD0wO2Z1bmN0aW9uIF9fX2N4YV90aHJvdyhwdHIsdHlwZSxkZXN0cnVjdG9yKXtfX19leGNlcHRpb25faW5mb3NbcHRyXT17cHRyOnB0cixhZGp1c3RlZDpbcHRyXSx0eXBlOnR5cGUsZGVzdHJ1Y3RvcjpkZXN0cnVjdG9yLHJlZmNvdW50OjAsY2F1Z2h0OmZhbHNlLHJldGhyb3duOmZhbHNlfTtfX19leGNlcHRpb25fbGFzdD1wdHI7aWYoIShcInVuY2F1Z2h0X2V4Y2VwdGlvblwiaW4gX19aU3QxOHVuY2F1Z2h0X2V4Y2VwdGlvbnYpKXtfX1pTdDE4dW5jYXVnaHRfZXhjZXB0aW9udi51bmNhdWdodF9leGNlcHRpb25zPTF9ZWxzZXtfX1pTdDE4dW5jYXVnaHRfZXhjZXB0aW9udi51bmNhdWdodF9leGNlcHRpb25zKyt9dGhyb3cgcHRyK1wiIC0gRXhjZXB0aW9uIGNhdGNoaW5nIGlzIGRpc2FibGVkLCB0aGlzIGV4Y2VwdGlvbiBjYW5ub3QgYmUgY2F1Z2h0LiBDb21waWxlIHdpdGggLXMgRElTQUJMRV9FWENFUFRJT05fQ0FUQ0hJTkc9MCBvciBESVNBQkxFX0VYQ0VQVElPTl9DQVRDSElORz0yIHRvIGNhdGNoLlwifWZ1bmN0aW9uIF9fX2N4YV91bmNhdWdodF9leGNlcHRpb25zKCl7cmV0dXJuIF9fWlN0MTh1bmNhdWdodF9leGNlcHRpb252LnVuY2F1Z2h0X2V4Y2VwdGlvbnN9ZnVuY3Rpb24gX19fbG9jaygpe31mdW5jdGlvbiBfX19zZXRFcnJObyh2YWx1ZSl7aWYoTW9kdWxlW1wiX19fZXJybm9fbG9jYXRpb25cIl0pSEVBUDMyW01vZHVsZVtcIl9fX2Vycm5vX2xvY2F0aW9uXCJdKCk+PjJdPXZhbHVlO2Vsc2UgZXJyKFwiZmFpbGVkIHRvIHNldCBlcnJubyBmcm9tIEpTXCIpO3JldHVybiB2YWx1ZX1mdW5jdGlvbiBfX19tYXBfZmlsZShwYXRobmFtZSxzaXplKXtfX19zZXRFcnJObygxKTtyZXR1cm4tMX12YXIgUEFUSD17c3BsaXRQYXRoOmZ1bmN0aW9uKGZpbGVuYW1lKXt2YXIgc3BsaXRQYXRoUmU9L14oXFwvP3wpKFtcXHNcXFNdKj8pKCg/OlxcLnsxLDJ9fFteXFwvXSs/fCkoXFwuW14uXFwvXSp8KSkoPzpbXFwvXSopJC87cmV0dXJuIHNwbGl0UGF0aFJlLmV4ZWMoZmlsZW5hbWUpLnNsaWNlKDEpfSxub3JtYWxpemVBcnJheTpmdW5jdGlvbihwYXJ0cyxhbGxvd0Fib3ZlUm9vdCl7dmFyIHVwPTA7Zm9yKHZhciBpPXBhcnRzLmxlbmd0aC0xO2k+PTA7aS0tKXt2YXIgbGFzdD1wYXJ0c1tpXTtpZihsYXN0PT09XCIuXCIpe3BhcnRzLnNwbGljZShpLDEpfWVsc2UgaWYobGFzdD09PVwiLi5cIil7cGFydHMuc3BsaWNlKGksMSk7dXArK31lbHNlIGlmKHVwKXtwYXJ0cy5zcGxpY2UoaSwxKTt1cC0tfX1pZihhbGxvd0Fib3ZlUm9vdCl7Zm9yKDt1cDt1cC0tKXtwYXJ0cy51bnNoaWZ0KFwiLi5cIil9fXJldHVybiBwYXJ0c30sbm9ybWFsaXplOmZ1bmN0aW9uKHBhdGgpe3ZhciBpc0Fic29sdXRlPXBhdGguY2hhckF0KDApPT09XCIvXCIsdHJhaWxpbmdTbGFzaD1wYXRoLnN1YnN0cigtMSk9PT1cIi9cIjtwYXRoPVBBVEgubm9ybWFsaXplQXJyYXkocGF0aC5zcGxpdChcIi9cIikuZmlsdGVyKGZ1bmN0aW9uKHApe3JldHVybiEhcH0pLCFpc0Fic29sdXRlKS5qb2luKFwiL1wiKTtpZighcGF0aCYmIWlzQWJzb2x1dGUpe3BhdGg9XCIuXCJ9aWYocGF0aCYmdHJhaWxpbmdTbGFzaCl7cGF0aCs9XCIvXCJ9cmV0dXJuKGlzQWJzb2x1dGU/XCIvXCI6XCJcIikrcGF0aH0sZGlybmFtZTpmdW5jdGlvbihwYXRoKXt2YXIgcmVzdWx0PVBBVEguc3BsaXRQYXRoKHBhdGgpLHJvb3Q9cmVzdWx0WzBdLGRpcj1yZXN1bHRbMV07aWYoIXJvb3QmJiFkaXIpe3JldHVyblwiLlwifWlmKGRpcil7ZGlyPWRpci5zdWJzdHIoMCxkaXIubGVuZ3RoLTEpfXJldHVybiByb290K2Rpcn0sYmFzZW5hbWU6ZnVuY3Rpb24ocGF0aCl7aWYocGF0aD09PVwiL1wiKXJldHVyblwiL1wiO3ZhciBsYXN0U2xhc2g9cGF0aC5sYXN0SW5kZXhPZihcIi9cIik7aWYobGFzdFNsYXNoPT09LTEpcmV0dXJuIHBhdGg7cmV0dXJuIHBhdGguc3Vic3RyKGxhc3RTbGFzaCsxKX0sZXh0bmFtZTpmdW5jdGlvbihwYXRoKXtyZXR1cm4gUEFUSC5zcGxpdFBhdGgocGF0aClbM119LGpvaW46ZnVuY3Rpb24oKXt2YXIgcGF0aHM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDApO3JldHVybiBQQVRILm5vcm1hbGl6ZShwYXRocy5qb2luKFwiL1wiKSl9LGpvaW4yOmZ1bmN0aW9uKGwscil7cmV0dXJuIFBBVEgubm9ybWFsaXplKGwrXCIvXCIrcil9fTt2YXIgUEFUSF9GUz17cmVzb2x2ZTpmdW5jdGlvbigpe3ZhciByZXNvbHZlZFBhdGg9XCJcIixyZXNvbHZlZEFic29sdXRlPWZhbHNlO2Zvcih2YXIgaT1hcmd1bWVudHMubGVuZ3RoLTE7aT49LTEmJiFyZXNvbHZlZEFic29sdXRlO2ktLSl7dmFyIHBhdGg9aT49MD9hcmd1bWVudHNbaV06RlMuY3dkKCk7aWYodHlwZW9mIHBhdGghPT1cInN0cmluZ1wiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnRzIHRvIHBhdGgucmVzb2x2ZSBtdXN0IGJlIHN0cmluZ3NcIil9ZWxzZSBpZighcGF0aCl7cmV0dXJuXCJcIn1yZXNvbHZlZFBhdGg9cGF0aCtcIi9cIityZXNvbHZlZFBhdGg7cmVzb2x2ZWRBYnNvbHV0ZT1wYXRoLmNoYXJBdCgwKT09PVwiL1wifXJlc29sdmVkUGF0aD1QQVRILm5vcm1hbGl6ZUFycmF5KHJlc29sdmVkUGF0aC5zcGxpdChcIi9cIikuZmlsdGVyKGZ1bmN0aW9uKHApe3JldHVybiEhcH0pLCFyZXNvbHZlZEFic29sdXRlKS5qb2luKFwiL1wiKTtyZXR1cm4ocmVzb2x2ZWRBYnNvbHV0ZT9cIi9cIjpcIlwiKStyZXNvbHZlZFBhdGh8fFwiLlwifSxyZWxhdGl2ZTpmdW5jdGlvbihmcm9tLHRvKXtmcm9tPVBBVEhfRlMucmVzb2x2ZShmcm9tKS5zdWJzdHIoMSk7dG89UEFUSF9GUy5yZXNvbHZlKHRvKS5zdWJzdHIoMSk7ZnVuY3Rpb24gdHJpbShhcnIpe3ZhciBzdGFydD0wO2Zvcig7c3RhcnQ8YXJyLmxlbmd0aDtzdGFydCsrKXtpZihhcnJbc3RhcnRdIT09XCJcIilicmVha312YXIgZW5kPWFyci5sZW5ndGgtMTtmb3IoO2VuZD49MDtlbmQtLSl7aWYoYXJyW2VuZF0hPT1cIlwiKWJyZWFrfWlmKHN0YXJ0PmVuZClyZXR1cm5bXTtyZXR1cm4gYXJyLnNsaWNlKHN0YXJ0LGVuZC1zdGFydCsxKX12YXIgZnJvbVBhcnRzPXRyaW0oZnJvbS5zcGxpdChcIi9cIikpO3ZhciB0b1BhcnRzPXRyaW0odG8uc3BsaXQoXCIvXCIpKTt2YXIgbGVuZ3RoPU1hdGgubWluKGZyb21QYXJ0cy5sZW5ndGgsdG9QYXJ0cy5sZW5ndGgpO3ZhciBzYW1lUGFydHNMZW5ndGg9bGVuZ3RoO2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7aWYoZnJvbVBhcnRzW2ldIT09dG9QYXJ0c1tpXSl7c2FtZVBhcnRzTGVuZ3RoPWk7YnJlYWt9fXZhciBvdXRwdXRQYXJ0cz1bXTtmb3IodmFyIGk9c2FtZVBhcnRzTGVuZ3RoO2k8ZnJvbVBhcnRzLmxlbmd0aDtpKyspe291dHB1dFBhcnRzLnB1c2goXCIuLlwiKX1vdXRwdXRQYXJ0cz1vdXRwdXRQYXJ0cy5jb25jYXQodG9QYXJ0cy5zbGljZShzYW1lUGFydHNMZW5ndGgpKTtyZXR1cm4gb3V0cHV0UGFydHMuam9pbihcIi9cIil9fTt2YXIgVFRZPXt0dHlzOltdLGluaXQ6ZnVuY3Rpb24oKXt9LHNodXRkb3duOmZ1bmN0aW9uKCl7fSxyZWdpc3RlcjpmdW5jdGlvbihkZXYsb3BzKXtUVFkudHR5c1tkZXZdPXtpbnB1dDpbXSxvdXRwdXQ6W10sb3BzOm9wc307RlMucmVnaXN0ZXJEZXZpY2UoZGV2LFRUWS5zdHJlYW1fb3BzKX0sc3RyZWFtX29wczp7b3BlbjpmdW5jdGlvbihzdHJlYW0pe3ZhciB0dHk9VFRZLnR0eXNbc3RyZWFtLm5vZGUucmRldl07aWYoIXR0eSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMTkpfXN0cmVhbS50dHk9dHR5O3N0cmVhbS5zZWVrYWJsZT1mYWxzZX0sY2xvc2U6ZnVuY3Rpb24oc3RyZWFtKXtzdHJlYW0udHR5Lm9wcy5mbHVzaChzdHJlYW0udHR5KX0sZmx1c2g6ZnVuY3Rpb24oc3RyZWFtKXtzdHJlYW0udHR5Lm9wcy5mbHVzaChzdHJlYW0udHR5KX0scmVhZDpmdW5jdGlvbihzdHJlYW0sYnVmZmVyLG9mZnNldCxsZW5ndGgscG9zKXtpZighc3RyZWFtLnR0eXx8IXN0cmVhbS50dHkub3BzLmdldF9jaGFyKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig2KX12YXIgYnl0ZXNSZWFkPTA7Zm9yKHZhciBpPTA7aTxsZW5ndGg7aSsrKXt2YXIgcmVzdWx0O3RyeXtyZXN1bHQ9c3RyZWFtLnR0eS5vcHMuZ2V0X2NoYXIoc3RyZWFtLnR0eSl9Y2F0Y2goZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoNSl9aWYocmVzdWx0PT09dW5kZWZpbmVkJiZieXRlc1JlYWQ9PT0wKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxMSl9aWYocmVzdWx0PT09bnVsbHx8cmVzdWx0PT09dW5kZWZpbmVkKWJyZWFrO2J5dGVzUmVhZCsrO2J1ZmZlcltvZmZzZXQraV09cmVzdWx0fWlmKGJ5dGVzUmVhZCl7c3RyZWFtLm5vZGUudGltZXN0YW1wPURhdGUubm93KCl9cmV0dXJuIGJ5dGVzUmVhZH0sd3JpdGU6ZnVuY3Rpb24oc3RyZWFtLGJ1ZmZlcixvZmZzZXQsbGVuZ3RoLHBvcyl7aWYoIXN0cmVhbS50dHl8fCFzdHJlYW0udHR5Lm9wcy5wdXRfY2hhcil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoNil9dHJ5e2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7c3RyZWFtLnR0eS5vcHMucHV0X2NoYXIoc3RyZWFtLnR0eSxidWZmZXJbb2Zmc2V0K2ldKX19Y2F0Y2goZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoNSl9aWYobGVuZ3RoKXtzdHJlYW0ubm9kZS50aW1lc3RhbXA9RGF0ZS5ub3coKX1yZXR1cm4gaX19LGRlZmF1bHRfdHR5X29wczp7Z2V0X2NoYXI6ZnVuY3Rpb24odHR5KXtpZighdHR5LmlucHV0Lmxlbmd0aCl7dmFyIHJlc3VsdD1udWxsO2lmKEVOVklST05NRU5UX0lTX05PREUpe3ZhciBCVUZTSVpFPTI1Njt2YXIgYnVmPUJ1ZmZlci5hbGxvYz9CdWZmZXIuYWxsb2MoQlVGU0laRSk6bmV3IEJ1ZmZlcihCVUZTSVpFKTt2YXIgYnl0ZXNSZWFkPTA7dmFyIGlzUG9zaXhQbGF0Zm9ybT1wcm9jZXNzLnBsYXRmb3JtIT1cIndpbjMyXCI7dmFyIGZkPXByb2Nlc3Muc3RkaW4uZmQ7aWYoaXNQb3NpeFBsYXRmb3JtKXt2YXIgdXNpbmdEZXZpY2U9ZmFsc2U7dHJ5e2ZkPWZzLm9wZW5TeW5jKFwiL2Rldi9zdGRpblwiLFwiclwiKTt1c2luZ0RldmljZT10cnVlfWNhdGNoKGUpe319dHJ5e2J5dGVzUmVhZD1mcy5yZWFkU3luYyhmZCxidWYsMCxCVUZTSVpFLG51bGwpfWNhdGNoKGUpe2lmKGUudG9TdHJpbmcoKS5pbmRleE9mKFwiRU9GXCIpIT0tMSlieXRlc1JlYWQ9MDtlbHNlIHRocm93IGV9aWYodXNpbmdEZXZpY2Upe2ZzLmNsb3NlU3luYyhmZCl9aWYoYnl0ZXNSZWFkPjApe3Jlc3VsdD1idWYuc2xpY2UoMCxieXRlc1JlYWQpLnRvU3RyaW5nKFwidXRmLThcIil9ZWxzZXtyZXN1bHQ9bnVsbH19ZWxzZSBpZih0eXBlb2Ygd2luZG93IT1cInVuZGVmaW5lZFwiJiZ0eXBlb2Ygd2luZG93LnByb21wdD09XCJmdW5jdGlvblwiKXtyZXN1bHQ9d2luZG93LnByb21wdChcIklucHV0OiBcIik7aWYocmVzdWx0IT09bnVsbCl7cmVzdWx0Kz1cIlxcblwifX1lbHNlIGlmKHR5cGVvZiByZWFkbGluZT09XCJmdW5jdGlvblwiKXtyZXN1bHQ9cmVhZGxpbmUoKTtpZihyZXN1bHQhPT1udWxsKXtyZXN1bHQrPVwiXFxuXCJ9fWlmKCFyZXN1bHQpe3JldHVybiBudWxsfXR0eS5pbnB1dD1pbnRBcnJheUZyb21TdHJpbmcocmVzdWx0LHRydWUpfXJldHVybiB0dHkuaW5wdXQuc2hpZnQoKX0scHV0X2NoYXI6ZnVuY3Rpb24odHR5LHZhbCl7aWYodmFsPT09bnVsbHx8dmFsPT09MTApe291dChVVEY4QXJyYXlUb1N0cmluZyh0dHkub3V0cHV0LDApKTt0dHkub3V0cHV0PVtdfWVsc2V7aWYodmFsIT0wKXR0eS5vdXRwdXQucHVzaCh2YWwpfX0sZmx1c2g6ZnVuY3Rpb24odHR5KXtpZih0dHkub3V0cHV0JiZ0dHkub3V0cHV0Lmxlbmd0aD4wKXtvdXQoVVRGOEFycmF5VG9TdHJpbmcodHR5Lm91dHB1dCwwKSk7dHR5Lm91dHB1dD1bXX19fSxkZWZhdWx0X3R0eTFfb3BzOntwdXRfY2hhcjpmdW5jdGlvbih0dHksdmFsKXtpZih2YWw9PT1udWxsfHx2YWw9PT0xMCl7ZXJyKFVURjhBcnJheVRvU3RyaW5nKHR0eS5vdXRwdXQsMCkpO3R0eS5vdXRwdXQ9W119ZWxzZXtpZih2YWwhPTApdHR5Lm91dHB1dC5wdXNoKHZhbCl9fSxmbHVzaDpmdW5jdGlvbih0dHkpe2lmKHR0eS5vdXRwdXQmJnR0eS5vdXRwdXQubGVuZ3RoPjApe2VycihVVEY4QXJyYXlUb1N0cmluZyh0dHkub3V0cHV0LDApKTt0dHkub3V0cHV0PVtdfX19fTt2YXIgTUVNRlM9e29wc190YWJsZTpudWxsLG1vdW50OmZ1bmN0aW9uKG1vdW50KXtyZXR1cm4gTUVNRlMuY3JlYXRlTm9kZShudWxsLFwiL1wiLDE2Mzg0fDUxMSwwKX0sY3JlYXRlTm9kZTpmdW5jdGlvbihwYXJlbnQsbmFtZSxtb2RlLGRldil7aWYoRlMuaXNCbGtkZXYobW9kZSl8fEZTLmlzRklGTyhtb2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMSl9aWYoIU1FTUZTLm9wc190YWJsZSl7TUVNRlMub3BzX3RhYmxlPXtkaXI6e25vZGU6e2dldGF0dHI6TUVNRlMubm9kZV9vcHMuZ2V0YXR0cixzZXRhdHRyOk1FTUZTLm5vZGVfb3BzLnNldGF0dHIsbG9va3VwOk1FTUZTLm5vZGVfb3BzLmxvb2t1cCxta25vZDpNRU1GUy5ub2RlX29wcy5ta25vZCxyZW5hbWU6TUVNRlMubm9kZV9vcHMucmVuYW1lLHVubGluazpNRU1GUy5ub2RlX29wcy51bmxpbmsscm1kaXI6TUVNRlMubm9kZV9vcHMucm1kaXIscmVhZGRpcjpNRU1GUy5ub2RlX29wcy5yZWFkZGlyLHN5bWxpbms6TUVNRlMubm9kZV9vcHMuc3ltbGlua30sc3RyZWFtOntsbHNlZWs6TUVNRlMuc3RyZWFtX29wcy5sbHNlZWt9fSxmaWxlOntub2RlOntnZXRhdHRyOk1FTUZTLm5vZGVfb3BzLmdldGF0dHIsc2V0YXR0cjpNRU1GUy5ub2RlX29wcy5zZXRhdHRyfSxzdHJlYW06e2xsc2VlazpNRU1GUy5zdHJlYW1fb3BzLmxsc2VlayxyZWFkOk1FTUZTLnN0cmVhbV9vcHMucmVhZCx3cml0ZTpNRU1GUy5zdHJlYW1fb3BzLndyaXRlLGFsbG9jYXRlOk1FTUZTLnN0cmVhbV9vcHMuYWxsb2NhdGUsbW1hcDpNRU1GUy5zdHJlYW1fb3BzLm1tYXAsbXN5bmM6TUVNRlMuc3RyZWFtX29wcy5tc3luY319LGxpbms6e25vZGU6e2dldGF0dHI6TUVNRlMubm9kZV9vcHMuZ2V0YXR0cixzZXRhdHRyOk1FTUZTLm5vZGVfb3BzLnNldGF0dHIscmVhZGxpbms6TUVNRlMubm9kZV9vcHMucmVhZGxpbmt9LHN0cmVhbTp7fX0sY2hyZGV2Ontub2RlOntnZXRhdHRyOk1FTUZTLm5vZGVfb3BzLmdldGF0dHIsc2V0YXR0cjpNRU1GUy5ub2RlX29wcy5zZXRhdHRyfSxzdHJlYW06RlMuY2hyZGV2X3N0cmVhbV9vcHN9fX12YXIgbm9kZT1GUy5jcmVhdGVOb2RlKHBhcmVudCxuYW1lLG1vZGUsZGV2KTtpZihGUy5pc0Rpcihub2RlLm1vZGUpKXtub2RlLm5vZGVfb3BzPU1FTUZTLm9wc190YWJsZS5kaXIubm9kZTtub2RlLnN0cmVhbV9vcHM9TUVNRlMub3BzX3RhYmxlLmRpci5zdHJlYW07bm9kZS5jb250ZW50cz17fX1lbHNlIGlmKEZTLmlzRmlsZShub2RlLm1vZGUpKXtub2RlLm5vZGVfb3BzPU1FTUZTLm9wc190YWJsZS5maWxlLm5vZGU7bm9kZS5zdHJlYW1fb3BzPU1FTUZTLm9wc190YWJsZS5maWxlLnN0cmVhbTtub2RlLnVzZWRCeXRlcz0wO25vZGUuY29udGVudHM9bnVsbH1lbHNlIGlmKEZTLmlzTGluayhub2RlLm1vZGUpKXtub2RlLm5vZGVfb3BzPU1FTUZTLm9wc190YWJsZS5saW5rLm5vZGU7bm9kZS5zdHJlYW1fb3BzPU1FTUZTLm9wc190YWJsZS5saW5rLnN0cmVhbX1lbHNlIGlmKEZTLmlzQ2hyZGV2KG5vZGUubW9kZSkpe25vZGUubm9kZV9vcHM9TUVNRlMub3BzX3RhYmxlLmNocmRldi5ub2RlO25vZGUuc3RyZWFtX29wcz1NRU1GUy5vcHNfdGFibGUuY2hyZGV2LnN0cmVhbX1ub2RlLnRpbWVzdGFtcD1EYXRlLm5vdygpO2lmKHBhcmVudCl7cGFyZW50LmNvbnRlbnRzW25hbWVdPW5vZGV9cmV0dXJuIG5vZGV9LGdldEZpbGVEYXRhQXNSZWd1bGFyQXJyYXk6ZnVuY3Rpb24obm9kZSl7aWYobm9kZS5jb250ZW50cyYmbm9kZS5jb250ZW50cy5zdWJhcnJheSl7dmFyIGFycj1bXTtmb3IodmFyIGk9MDtpPG5vZGUudXNlZEJ5dGVzOysraSlhcnIucHVzaChub2RlLmNvbnRlbnRzW2ldKTtyZXR1cm4gYXJyfXJldHVybiBub2RlLmNvbnRlbnRzfSxnZXRGaWxlRGF0YUFzVHlwZWRBcnJheTpmdW5jdGlvbihub2RlKXtpZighbm9kZS5jb250ZW50cylyZXR1cm4gbmV3IFVpbnQ4QXJyYXk7aWYobm9kZS5jb250ZW50cy5zdWJhcnJheSlyZXR1cm4gbm9kZS5jb250ZW50cy5zdWJhcnJheSgwLG5vZGUudXNlZEJ5dGVzKTtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkobm9kZS5jb250ZW50cyl9LGV4cGFuZEZpbGVTdG9yYWdlOmZ1bmN0aW9uKG5vZGUsbmV3Q2FwYWNpdHkpe3ZhciBwcmV2Q2FwYWNpdHk9bm9kZS5jb250ZW50cz9ub2RlLmNvbnRlbnRzLmxlbmd0aDowO2lmKHByZXZDYXBhY2l0eT49bmV3Q2FwYWNpdHkpcmV0dXJuO3ZhciBDQVBBQ0lUWV9ET1VCTElOR19NQVg9MTAyNCoxMDI0O25ld0NhcGFjaXR5PU1hdGgubWF4KG5ld0NhcGFjaXR5LHByZXZDYXBhY2l0eSoocHJldkNhcGFjaXR5PENBUEFDSVRZX0RPVUJMSU5HX01BWD8yOjEuMTI1KXwwKTtpZihwcmV2Q2FwYWNpdHkhPTApbmV3Q2FwYWNpdHk9TWF0aC5tYXgobmV3Q2FwYWNpdHksMjU2KTt2YXIgb2xkQ29udGVudHM9bm9kZS5jb250ZW50cztub2RlLmNvbnRlbnRzPW5ldyBVaW50OEFycmF5KG5ld0NhcGFjaXR5KTtpZihub2RlLnVzZWRCeXRlcz4wKW5vZGUuY29udGVudHMuc2V0KG9sZENvbnRlbnRzLnN1YmFycmF5KDAsbm9kZS51c2VkQnl0ZXMpLDApO3JldHVybn0scmVzaXplRmlsZVN0b3JhZ2U6ZnVuY3Rpb24obm9kZSxuZXdTaXplKXtpZihub2RlLnVzZWRCeXRlcz09bmV3U2l6ZSlyZXR1cm47aWYobmV3U2l6ZT09MCl7bm9kZS5jb250ZW50cz1udWxsO25vZGUudXNlZEJ5dGVzPTA7cmV0dXJufWlmKCFub2RlLmNvbnRlbnRzfHxub2RlLmNvbnRlbnRzLnN1YmFycmF5KXt2YXIgb2xkQ29udGVudHM9bm9kZS5jb250ZW50cztub2RlLmNvbnRlbnRzPW5ldyBVaW50OEFycmF5KG5ldyBBcnJheUJ1ZmZlcihuZXdTaXplKSk7aWYob2xkQ29udGVudHMpe25vZGUuY29udGVudHMuc2V0KG9sZENvbnRlbnRzLnN1YmFycmF5KDAsTWF0aC5taW4obmV3U2l6ZSxub2RlLnVzZWRCeXRlcykpKX1ub2RlLnVzZWRCeXRlcz1uZXdTaXplO3JldHVybn1pZighbm9kZS5jb250ZW50cylub2RlLmNvbnRlbnRzPVtdO2lmKG5vZGUuY29udGVudHMubGVuZ3RoPm5ld1NpemUpbm9kZS5jb250ZW50cy5sZW5ndGg9bmV3U2l6ZTtlbHNlIHdoaWxlKG5vZGUuY29udGVudHMubGVuZ3RoPG5ld1NpemUpbm9kZS5jb250ZW50cy5wdXNoKDApO25vZGUudXNlZEJ5dGVzPW5ld1NpemV9LG5vZGVfb3BzOntnZXRhdHRyOmZ1bmN0aW9uKG5vZGUpe3ZhciBhdHRyPXt9O2F0dHIuZGV2PUZTLmlzQ2hyZGV2KG5vZGUubW9kZSk/bm9kZS5pZDoxO2F0dHIuaW5vPW5vZGUuaWQ7YXR0ci5tb2RlPW5vZGUubW9kZTthdHRyLm5saW5rPTE7YXR0ci51aWQ9MDthdHRyLmdpZD0wO2F0dHIucmRldj1ub2RlLnJkZXY7aWYoRlMuaXNEaXIobm9kZS5tb2RlKSl7YXR0ci5zaXplPTQwOTZ9ZWxzZSBpZihGUy5pc0ZpbGUobm9kZS5tb2RlKSl7YXR0ci5zaXplPW5vZGUudXNlZEJ5dGVzfWVsc2UgaWYoRlMuaXNMaW5rKG5vZGUubW9kZSkpe2F0dHIuc2l6ZT1ub2RlLmxpbmsubGVuZ3RofWVsc2V7YXR0ci5zaXplPTB9YXR0ci5hdGltZT1uZXcgRGF0ZShub2RlLnRpbWVzdGFtcCk7YXR0ci5tdGltZT1uZXcgRGF0ZShub2RlLnRpbWVzdGFtcCk7YXR0ci5jdGltZT1uZXcgRGF0ZShub2RlLnRpbWVzdGFtcCk7YXR0ci5ibGtzaXplPTQwOTY7YXR0ci5ibG9ja3M9TWF0aC5jZWlsKGF0dHIuc2l6ZS9hdHRyLmJsa3NpemUpO3JldHVybiBhdHRyfSxzZXRhdHRyOmZ1bmN0aW9uKG5vZGUsYXR0cil7aWYoYXR0ci5tb2RlIT09dW5kZWZpbmVkKXtub2RlLm1vZGU9YXR0ci5tb2RlfWlmKGF0dHIudGltZXN0YW1wIT09dW5kZWZpbmVkKXtub2RlLnRpbWVzdGFtcD1hdHRyLnRpbWVzdGFtcH1pZihhdHRyLnNpemUhPT11bmRlZmluZWQpe01FTUZTLnJlc2l6ZUZpbGVTdG9yYWdlKG5vZGUsYXR0ci5zaXplKX19LGxvb2t1cDpmdW5jdGlvbihwYXJlbnQsbmFtZSl7dGhyb3cgRlMuZ2VuZXJpY0Vycm9yc1syXX0sbWtub2Q6ZnVuY3Rpb24ocGFyZW50LG5hbWUsbW9kZSxkZXYpe3JldHVybiBNRU1GUy5jcmVhdGVOb2RlKHBhcmVudCxuYW1lLG1vZGUsZGV2KX0scmVuYW1lOmZ1bmN0aW9uKG9sZF9ub2RlLG5ld19kaXIsbmV3X25hbWUpe2lmKEZTLmlzRGlyKG9sZF9ub2RlLm1vZGUpKXt2YXIgbmV3X25vZGU7dHJ5e25ld19ub2RlPUZTLmxvb2t1cE5vZGUobmV3X2RpcixuZXdfbmFtZSl9Y2F0Y2goZSl7fWlmKG5ld19ub2RlKXtmb3IodmFyIGkgaW4gbmV3X25vZGUuY29udGVudHMpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDM5KX19fWRlbGV0ZSBvbGRfbm9kZS5wYXJlbnQuY29udGVudHNbb2xkX25vZGUubmFtZV07b2xkX25vZGUubmFtZT1uZXdfbmFtZTtuZXdfZGlyLmNvbnRlbnRzW25ld19uYW1lXT1vbGRfbm9kZTtvbGRfbm9kZS5wYXJlbnQ9bmV3X2Rpcn0sdW5saW5rOmZ1bmN0aW9uKHBhcmVudCxuYW1lKXtkZWxldGUgcGFyZW50LmNvbnRlbnRzW25hbWVdfSxybWRpcjpmdW5jdGlvbihwYXJlbnQsbmFtZSl7dmFyIG5vZGU9RlMubG9va3VwTm9kZShwYXJlbnQsbmFtZSk7Zm9yKHZhciBpIGluIG5vZGUuY29udGVudHMpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDM5KX1kZWxldGUgcGFyZW50LmNvbnRlbnRzW25hbWVdfSxyZWFkZGlyOmZ1bmN0aW9uKG5vZGUpe3ZhciBlbnRyaWVzPVtcIi5cIixcIi4uXCJdO2Zvcih2YXIga2V5IGluIG5vZGUuY29udGVudHMpe2lmKCFub2RlLmNvbnRlbnRzLmhhc093blByb3BlcnR5KGtleSkpe2NvbnRpbnVlfWVudHJpZXMucHVzaChrZXkpfXJldHVybiBlbnRyaWVzfSxzeW1saW5rOmZ1bmN0aW9uKHBhcmVudCxuZXduYW1lLG9sZHBhdGgpe3ZhciBub2RlPU1FTUZTLmNyZWF0ZU5vZGUocGFyZW50LG5ld25hbWUsNTExfDQwOTYwLDApO25vZGUubGluaz1vbGRwYXRoO3JldHVybiBub2RlfSxyZWFkbGluazpmdW5jdGlvbihub2RlKXtpZighRlMuaXNMaW5rKG5vZGUubW9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIyKX1yZXR1cm4gbm9kZS5saW5rfX0sc3RyZWFtX29wczp7cmVhZDpmdW5jdGlvbihzdHJlYW0sYnVmZmVyLG9mZnNldCxsZW5ndGgscG9zaXRpb24pe3ZhciBjb250ZW50cz1zdHJlYW0ubm9kZS5jb250ZW50cztpZihwb3NpdGlvbj49c3RyZWFtLm5vZGUudXNlZEJ5dGVzKXJldHVybiAwO3ZhciBzaXplPU1hdGgubWluKHN0cmVhbS5ub2RlLnVzZWRCeXRlcy1wb3NpdGlvbixsZW5ndGgpO2Fzc2VydChzaXplPj0wKTtpZihzaXplPjgmJmNvbnRlbnRzLnN1YmFycmF5KXtidWZmZXIuc2V0KGNvbnRlbnRzLnN1YmFycmF5KHBvc2l0aW9uLHBvc2l0aW9uK3NpemUpLG9mZnNldCl9ZWxzZXtmb3IodmFyIGk9MDtpPHNpemU7aSsrKWJ1ZmZlcltvZmZzZXQraV09Y29udGVudHNbcG9zaXRpb24raV19cmV0dXJuIHNpemV9LHdyaXRlOmZ1bmN0aW9uKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxwb3NpdGlvbixjYW5Pd24pe2lmKGNhbk93bil7d2Fybk9uY2UoXCJmaWxlIHBhY2thZ2VyIGhhcyBjb3BpZWQgZmlsZSBkYXRhIGludG8gbWVtb3J5LCBidXQgaW4gbWVtb3J5IGdyb3d0aCB3ZSBhcmUgZm9yY2VkIHRvIGNvcHkgaXQgYWdhaW4gKHNlZSAtLW5vLWhlYXAtY29weSlcIil9Y2FuT3duPWZhbHNlO2lmKCFsZW5ndGgpcmV0dXJuIDA7dmFyIG5vZGU9c3RyZWFtLm5vZGU7bm9kZS50aW1lc3RhbXA9RGF0ZS5ub3coKTtpZihidWZmZXIuc3ViYXJyYXkmJighbm9kZS5jb250ZW50c3x8bm9kZS5jb250ZW50cy5zdWJhcnJheSkpe2lmKGNhbk93bil7YXNzZXJ0KHBvc2l0aW9uPT09MCxcImNhbk93biBtdXN0IGltcGx5IG5vIHdlaXJkIHBvc2l0aW9uIGluc2lkZSB0aGUgZmlsZVwiKTtub2RlLmNvbnRlbnRzPWJ1ZmZlci5zdWJhcnJheShvZmZzZXQsb2Zmc2V0K2xlbmd0aCk7bm9kZS51c2VkQnl0ZXM9bGVuZ3RoO3JldHVybiBsZW5ndGh9ZWxzZSBpZihub2RlLnVzZWRCeXRlcz09PTAmJnBvc2l0aW9uPT09MCl7bm9kZS5jb250ZW50cz1uZXcgVWludDhBcnJheShidWZmZXIuc3ViYXJyYXkob2Zmc2V0LG9mZnNldCtsZW5ndGgpKTtub2RlLnVzZWRCeXRlcz1sZW5ndGg7cmV0dXJuIGxlbmd0aH1lbHNlIGlmKHBvc2l0aW9uK2xlbmd0aDw9bm9kZS51c2VkQnl0ZXMpe25vZGUuY29udGVudHMuc2V0KGJ1ZmZlci5zdWJhcnJheShvZmZzZXQsb2Zmc2V0K2xlbmd0aCkscG9zaXRpb24pO3JldHVybiBsZW5ndGh9fU1FTUZTLmV4cGFuZEZpbGVTdG9yYWdlKG5vZGUscG9zaXRpb24rbGVuZ3RoKTtpZihub2RlLmNvbnRlbnRzLnN1YmFycmF5JiZidWZmZXIuc3ViYXJyYXkpbm9kZS5jb250ZW50cy5zZXQoYnVmZmVyLnN1YmFycmF5KG9mZnNldCxvZmZzZXQrbGVuZ3RoKSxwb3NpdGlvbik7ZWxzZXtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe25vZGUuY29udGVudHNbcG9zaXRpb24raV09YnVmZmVyW29mZnNldCtpXX19bm9kZS51c2VkQnl0ZXM9TWF0aC5tYXgobm9kZS51c2VkQnl0ZXMscG9zaXRpb24rbGVuZ3RoKTtyZXR1cm4gbGVuZ3RofSxsbHNlZWs6ZnVuY3Rpb24oc3RyZWFtLG9mZnNldCx3aGVuY2Upe3ZhciBwb3NpdGlvbj1vZmZzZXQ7aWYod2hlbmNlPT09MSl7cG9zaXRpb24rPXN0cmVhbS5wb3NpdGlvbn1lbHNlIGlmKHdoZW5jZT09PTIpe2lmKEZTLmlzRmlsZShzdHJlYW0ubm9kZS5tb2RlKSl7cG9zaXRpb24rPXN0cmVhbS5ub2RlLnVzZWRCeXRlc319aWYocG9zaXRpb248MCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfXJldHVybiBwb3NpdGlvbn0sYWxsb2NhdGU6ZnVuY3Rpb24oc3RyZWFtLG9mZnNldCxsZW5ndGgpe01FTUZTLmV4cGFuZEZpbGVTdG9yYWdlKHN0cmVhbS5ub2RlLG9mZnNldCtsZW5ndGgpO3N0cmVhbS5ub2RlLnVzZWRCeXRlcz1NYXRoLm1heChzdHJlYW0ubm9kZS51c2VkQnl0ZXMsb2Zmc2V0K2xlbmd0aCl9LG1tYXA6ZnVuY3Rpb24oc3RyZWFtLGJ1ZmZlcixvZmZzZXQsbGVuZ3RoLHBvc2l0aW9uLHByb3QsZmxhZ3Mpe2lmKCFGUy5pc0ZpbGUoc3RyZWFtLm5vZGUubW9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE5KX12YXIgcHRyO3ZhciBhbGxvY2F0ZWQ7dmFyIGNvbnRlbnRzPXN0cmVhbS5ub2RlLmNvbnRlbnRzO2lmKCEoZmxhZ3MmMikmJihjb250ZW50cy5idWZmZXI9PT1idWZmZXJ8fGNvbnRlbnRzLmJ1ZmZlcj09PWJ1ZmZlci5idWZmZXIpKXthbGxvY2F0ZWQ9ZmFsc2U7cHRyPWNvbnRlbnRzLmJ5dGVPZmZzZXR9ZWxzZXtpZihwb3NpdGlvbj4wfHxwb3NpdGlvbitsZW5ndGg8c3RyZWFtLm5vZGUudXNlZEJ5dGVzKXtpZihjb250ZW50cy5zdWJhcnJheSl7Y29udGVudHM9Y29udGVudHMuc3ViYXJyYXkocG9zaXRpb24scG9zaXRpb24rbGVuZ3RoKX1lbHNle2NvbnRlbnRzPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGNvbnRlbnRzLHBvc2l0aW9uLHBvc2l0aW9uK2xlbmd0aCl9fWFsbG9jYXRlZD10cnVlO3ZhciBmcm9tSGVhcD1idWZmZXIuYnVmZmVyPT1IRUFQOC5idWZmZXI7cHRyPV9tYWxsb2MobGVuZ3RoKTtpZighcHRyKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxMil9KGZyb21IZWFwP0hFQVA4OmJ1ZmZlcikuc2V0KGNvbnRlbnRzLHB0cil9cmV0dXJue3B0cjpwdHIsYWxsb2NhdGVkOmFsbG9jYXRlZH19LG1zeW5jOmZ1bmN0aW9uKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxtbWFwRmxhZ3Mpe2lmKCFGUy5pc0ZpbGUoc3RyZWFtLm5vZGUubW9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE5KX1pZihtbWFwRmxhZ3MmMil7cmV0dXJuIDB9dmFyIGJ5dGVzV3JpdHRlbj1NRU1GUy5zdHJlYW1fb3BzLndyaXRlKHN0cmVhbSxidWZmZXIsMCxsZW5ndGgsb2Zmc2V0LGZhbHNlKTtyZXR1cm4gMH19fTt2YXIgSURCRlM9e2Riczp7fSxpbmRleGVkREI6ZnVuY3Rpb24oKXtpZih0eXBlb2YgaW5kZXhlZERCIT09XCJ1bmRlZmluZWRcIilyZXR1cm4gaW5kZXhlZERCO3ZhciByZXQ9bnVsbDtpZih0eXBlb2Ygd2luZG93PT09XCJvYmplY3RcIilyZXQ9d2luZG93LmluZGV4ZWREQnx8d2luZG93Lm1vekluZGV4ZWREQnx8d2luZG93LndlYmtpdEluZGV4ZWREQnx8d2luZG93Lm1zSW5kZXhlZERCO2Fzc2VydChyZXQsXCJJREJGUyB1c2VkLCBidXQgaW5kZXhlZERCIG5vdCBzdXBwb3J0ZWRcIik7cmV0dXJuIHJldH0sREJfVkVSU0lPTjoyMSxEQl9TVE9SRV9OQU1FOlwiRklMRV9EQVRBXCIsbW91bnQ6ZnVuY3Rpb24obW91bnQpe3JldHVybiBNRU1GUy5tb3VudC5hcHBseShudWxsLGFyZ3VtZW50cyl9LHN5bmNmczpmdW5jdGlvbihtb3VudCxwb3B1bGF0ZSxjYWxsYmFjayl7SURCRlMuZ2V0TG9jYWxTZXQobW91bnQsZnVuY3Rpb24oZXJyLGxvY2FsKXtpZihlcnIpcmV0dXJuIGNhbGxiYWNrKGVycik7SURCRlMuZ2V0UmVtb3RlU2V0KG1vdW50LGZ1bmN0aW9uKGVycixyZW1vdGUpe2lmKGVycilyZXR1cm4gY2FsbGJhY2soZXJyKTt2YXIgc3JjPXBvcHVsYXRlP3JlbW90ZTpsb2NhbDt2YXIgZHN0PXBvcHVsYXRlP2xvY2FsOnJlbW90ZTtJREJGUy5yZWNvbmNpbGUoc3JjLGRzdCxjYWxsYmFjayl9KX0pfSxnZXREQjpmdW5jdGlvbihuYW1lLGNhbGxiYWNrKXt2YXIgZGI9SURCRlMuZGJzW25hbWVdO2lmKGRiKXtyZXR1cm4gY2FsbGJhY2sobnVsbCxkYil9dmFyIHJlcTt0cnl7cmVxPUlEQkZTLmluZGV4ZWREQigpLm9wZW4obmFtZSxJREJGUy5EQl9WRVJTSU9OKX1jYXRjaChlKXtyZXR1cm4gY2FsbGJhY2soZSl9aWYoIXJlcSl7cmV0dXJuIGNhbGxiYWNrKFwiVW5hYmxlIHRvIGNvbm5lY3QgdG8gSW5kZXhlZERCXCIpfXJlcS5vbnVwZ3JhZGVuZWVkZWQ9ZnVuY3Rpb24oZSl7dmFyIGRiPWUudGFyZ2V0LnJlc3VsdDt2YXIgdHJhbnNhY3Rpb249ZS50YXJnZXQudHJhbnNhY3Rpb247dmFyIGZpbGVTdG9yZTtpZihkYi5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKElEQkZTLkRCX1NUT1JFX05BTUUpKXtmaWxlU3RvcmU9dHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUoSURCRlMuREJfU1RPUkVfTkFNRSl9ZWxzZXtmaWxlU3RvcmU9ZGIuY3JlYXRlT2JqZWN0U3RvcmUoSURCRlMuREJfU1RPUkVfTkFNRSl9aWYoIWZpbGVTdG9yZS5pbmRleE5hbWVzLmNvbnRhaW5zKFwidGltZXN0YW1wXCIpKXtmaWxlU3RvcmUuY3JlYXRlSW5kZXgoXCJ0aW1lc3RhbXBcIixcInRpbWVzdGFtcFwiLHt1bmlxdWU6ZmFsc2V9KX19O3JlcS5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXtkYj1yZXEucmVzdWx0O0lEQkZTLmRic1tuYW1lXT1kYjtjYWxsYmFjayhudWxsLGRiKX07cmVxLm9uZXJyb3I9ZnVuY3Rpb24oZSl7Y2FsbGJhY2sodGhpcy5lcnJvcik7ZS5wcmV2ZW50RGVmYXVsdCgpfX0sZ2V0TG9jYWxTZXQ6ZnVuY3Rpb24obW91bnQsY2FsbGJhY2spe3ZhciBlbnRyaWVzPXt9O2Z1bmN0aW9uIGlzUmVhbERpcihwKXtyZXR1cm4gcCE9PVwiLlwiJiZwIT09XCIuLlwifWZ1bmN0aW9uIHRvQWJzb2x1dGUocm9vdCl7cmV0dXJuIGZ1bmN0aW9uKHApe3JldHVybiBQQVRILmpvaW4yKHJvb3QscCl9fXZhciBjaGVjaz1GUy5yZWFkZGlyKG1vdW50Lm1vdW50cG9pbnQpLmZpbHRlcihpc1JlYWxEaXIpLm1hcCh0b0Fic29sdXRlKG1vdW50Lm1vdW50cG9pbnQpKTt3aGlsZShjaGVjay5sZW5ndGgpe3ZhciBwYXRoPWNoZWNrLnBvcCgpO3ZhciBzdGF0O3RyeXtzdGF0PUZTLnN0YXQocGF0aCl9Y2F0Y2goZSl7cmV0dXJuIGNhbGxiYWNrKGUpfWlmKEZTLmlzRGlyKHN0YXQubW9kZSkpe2NoZWNrLnB1c2guYXBwbHkoY2hlY2ssRlMucmVhZGRpcihwYXRoKS5maWx0ZXIoaXNSZWFsRGlyKS5tYXAodG9BYnNvbHV0ZShwYXRoKSkpfWVudHJpZXNbcGF0aF09e3RpbWVzdGFtcDpzdGF0Lm10aW1lfX1yZXR1cm4gY2FsbGJhY2sobnVsbCx7dHlwZTpcImxvY2FsXCIsZW50cmllczplbnRyaWVzfSl9LGdldFJlbW90ZVNldDpmdW5jdGlvbihtb3VudCxjYWxsYmFjayl7dmFyIGVudHJpZXM9e307SURCRlMuZ2V0REIobW91bnQubW91bnRwb2ludCxmdW5jdGlvbihlcnIsZGIpe2lmKGVycilyZXR1cm4gY2FsbGJhY2soZXJyKTt0cnl7dmFyIHRyYW5zYWN0aW9uPWRiLnRyYW5zYWN0aW9uKFtJREJGUy5EQl9TVE9SRV9OQU1FXSxcInJlYWRvbmx5XCIpO3RyYW5zYWN0aW9uLm9uZXJyb3I9ZnVuY3Rpb24oZSl7Y2FsbGJhY2sodGhpcy5lcnJvcik7ZS5wcmV2ZW50RGVmYXVsdCgpfTt2YXIgc3RvcmU9dHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUoSURCRlMuREJfU1RPUkVfTkFNRSk7dmFyIGluZGV4PXN0b3JlLmluZGV4KFwidGltZXN0YW1wXCIpO2luZGV4Lm9wZW5LZXlDdXJzb3IoKS5vbnN1Y2Nlc3M9ZnVuY3Rpb24oZXZlbnQpe3ZhciBjdXJzb3I9ZXZlbnQudGFyZ2V0LnJlc3VsdDtpZighY3Vyc29yKXtyZXR1cm4gY2FsbGJhY2sobnVsbCx7dHlwZTpcInJlbW90ZVwiLGRiOmRiLGVudHJpZXM6ZW50cmllc30pfWVudHJpZXNbY3Vyc29yLnByaW1hcnlLZXldPXt0aW1lc3RhbXA6Y3Vyc29yLmtleX07Y3Vyc29yLmNvbnRpbnVlKCl9fWNhdGNoKGUpe3JldHVybiBjYWxsYmFjayhlKX19KX0sbG9hZExvY2FsRW50cnk6ZnVuY3Rpb24ocGF0aCxjYWxsYmFjayl7dmFyIHN0YXQsbm9kZTt0cnl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgpO25vZGU9bG9va3VwLm5vZGU7c3RhdD1GUy5zdGF0KHBhdGgpfWNhdGNoKGUpe3JldHVybiBjYWxsYmFjayhlKX1pZihGUy5pc0RpcihzdGF0Lm1vZGUpKXtyZXR1cm4gY2FsbGJhY2sobnVsbCx7dGltZXN0YW1wOnN0YXQubXRpbWUsbW9kZTpzdGF0Lm1vZGV9KX1lbHNlIGlmKEZTLmlzRmlsZShzdGF0Lm1vZGUpKXtub2RlLmNvbnRlbnRzPU1FTUZTLmdldEZpbGVEYXRhQXNUeXBlZEFycmF5KG5vZGUpO3JldHVybiBjYWxsYmFjayhudWxsLHt0aW1lc3RhbXA6c3RhdC5tdGltZSxtb2RlOnN0YXQubW9kZSxjb250ZW50czpub2RlLmNvbnRlbnRzfSl9ZWxzZXtyZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKFwibm9kZSB0eXBlIG5vdCBzdXBwb3J0ZWRcIikpfX0sc3RvcmVMb2NhbEVudHJ5OmZ1bmN0aW9uKHBhdGgsZW50cnksY2FsbGJhY2spe3RyeXtpZihGUy5pc0RpcihlbnRyeS5tb2RlKSl7RlMubWtkaXIocGF0aCxlbnRyeS5tb2RlKX1lbHNlIGlmKEZTLmlzRmlsZShlbnRyeS5tb2RlKSl7RlMud3JpdGVGaWxlKHBhdGgsZW50cnkuY29udGVudHMse2Nhbk93bjp0cnVlfSl9ZWxzZXtyZXR1cm4gY2FsbGJhY2sobmV3IEVycm9yKFwibm9kZSB0eXBlIG5vdCBzdXBwb3J0ZWRcIikpfUZTLmNobW9kKHBhdGgsZW50cnkubW9kZSk7RlMudXRpbWUocGF0aCxlbnRyeS50aW1lc3RhbXAsZW50cnkudGltZXN0YW1wKX1jYXRjaChlKXtyZXR1cm4gY2FsbGJhY2soZSl9Y2FsbGJhY2sobnVsbCl9LHJlbW92ZUxvY2FsRW50cnk6ZnVuY3Rpb24ocGF0aCxjYWxsYmFjayl7dHJ5e3ZhciBsb29rdXA9RlMubG9va3VwUGF0aChwYXRoKTt2YXIgc3RhdD1GUy5zdGF0KHBhdGgpO2lmKEZTLmlzRGlyKHN0YXQubW9kZSkpe0ZTLnJtZGlyKHBhdGgpfWVsc2UgaWYoRlMuaXNGaWxlKHN0YXQubW9kZSkpe0ZTLnVubGluayhwYXRoKX19Y2F0Y2goZSl7cmV0dXJuIGNhbGxiYWNrKGUpfWNhbGxiYWNrKG51bGwpfSxsb2FkUmVtb3RlRW50cnk6ZnVuY3Rpb24oc3RvcmUscGF0aCxjYWxsYmFjayl7dmFyIHJlcT1zdG9yZS5nZXQocGF0aCk7cmVxLm9uc3VjY2Vzcz1mdW5jdGlvbihldmVudCl7Y2FsbGJhY2sobnVsbCxldmVudC50YXJnZXQucmVzdWx0KX07cmVxLm9uZXJyb3I9ZnVuY3Rpb24oZSl7Y2FsbGJhY2sodGhpcy5lcnJvcik7ZS5wcmV2ZW50RGVmYXVsdCgpfX0sc3RvcmVSZW1vdGVFbnRyeTpmdW5jdGlvbihzdG9yZSxwYXRoLGVudHJ5LGNhbGxiYWNrKXt2YXIgcmVxPXN0b3JlLnB1dChlbnRyeSxwYXRoKTtyZXEub25zdWNjZXNzPWZ1bmN0aW9uKCl7Y2FsbGJhY2sobnVsbCl9O3JlcS5vbmVycm9yPWZ1bmN0aW9uKGUpe2NhbGxiYWNrKHRoaXMuZXJyb3IpO2UucHJldmVudERlZmF1bHQoKX19LHJlbW92ZVJlbW90ZUVudHJ5OmZ1bmN0aW9uKHN0b3JlLHBhdGgsY2FsbGJhY2spe3ZhciByZXE9c3RvcmUuZGVsZXRlKHBhdGgpO3JlcS5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXtjYWxsYmFjayhudWxsKX07cmVxLm9uZXJyb3I9ZnVuY3Rpb24oZSl7Y2FsbGJhY2sodGhpcy5lcnJvcik7ZS5wcmV2ZW50RGVmYXVsdCgpfX0scmVjb25jaWxlOmZ1bmN0aW9uKHNyYyxkc3QsY2FsbGJhY2spe3ZhciB0b3RhbD0wO3ZhciBjcmVhdGU9W107T2JqZWN0LmtleXMoc3JjLmVudHJpZXMpLmZvckVhY2goZnVuY3Rpb24oa2V5KXt2YXIgZT1zcmMuZW50cmllc1trZXldO3ZhciBlMj1kc3QuZW50cmllc1trZXldO2lmKCFlMnx8ZS50aW1lc3RhbXA+ZTIudGltZXN0YW1wKXtjcmVhdGUucHVzaChrZXkpO3RvdGFsKyt9fSk7dmFyIHJlbW92ZT1bXTtPYmplY3Qua2V5cyhkc3QuZW50cmllcykuZm9yRWFjaChmdW5jdGlvbihrZXkpe3ZhciBlPWRzdC5lbnRyaWVzW2tleV07dmFyIGUyPXNyYy5lbnRyaWVzW2tleV07aWYoIWUyKXtyZW1vdmUucHVzaChrZXkpO3RvdGFsKyt9fSk7aWYoIXRvdGFsKXtyZXR1cm4gY2FsbGJhY2sobnVsbCl9dmFyIGVycm9yZWQ9ZmFsc2U7dmFyIGRiPXNyYy50eXBlPT09XCJyZW1vdGVcIj9zcmMuZGI6ZHN0LmRiO3ZhciB0cmFuc2FjdGlvbj1kYi50cmFuc2FjdGlvbihbSURCRlMuREJfU1RPUkVfTkFNRV0sXCJyZWFkd3JpdGVcIik7dmFyIHN0b3JlPXRyYW5zYWN0aW9uLm9iamVjdFN0b3JlKElEQkZTLkRCX1NUT1JFX05BTUUpO2Z1bmN0aW9uIGRvbmUoZXJyKXtpZihlcnImJiFlcnJvcmVkKXtlcnJvcmVkPXRydWU7cmV0dXJuIGNhbGxiYWNrKGVycil9fXRyYW5zYWN0aW9uLm9uZXJyb3I9ZnVuY3Rpb24oZSl7ZG9uZSh0aGlzLmVycm9yKTtlLnByZXZlbnREZWZhdWx0KCl9O3RyYW5zYWN0aW9uLm9uY29tcGxldGU9ZnVuY3Rpb24oZSl7aWYoIWVycm9yZWQpe2NhbGxiYWNrKG51bGwpfX07Y3JlYXRlLnNvcnQoKS5mb3JFYWNoKGZ1bmN0aW9uKHBhdGgpe2lmKGRzdC50eXBlPT09XCJsb2NhbFwiKXtJREJGUy5sb2FkUmVtb3RlRW50cnkoc3RvcmUscGF0aCxmdW5jdGlvbihlcnIsZW50cnkpe2lmKGVycilyZXR1cm4gZG9uZShlcnIpO0lEQkZTLnN0b3JlTG9jYWxFbnRyeShwYXRoLGVudHJ5LGRvbmUpfSl9ZWxzZXtJREJGUy5sb2FkTG9jYWxFbnRyeShwYXRoLGZ1bmN0aW9uKGVycixlbnRyeSl7aWYoZXJyKXJldHVybiBkb25lKGVycik7SURCRlMuc3RvcmVSZW1vdGVFbnRyeShzdG9yZSxwYXRoLGVudHJ5LGRvbmUpfSl9fSk7cmVtb3ZlLnNvcnQoKS5yZXZlcnNlKCkuZm9yRWFjaChmdW5jdGlvbihwYXRoKXtpZihkc3QudHlwZT09PVwibG9jYWxcIil7SURCRlMucmVtb3ZlTG9jYWxFbnRyeShwYXRoLGRvbmUpfWVsc2V7SURCRlMucmVtb3ZlUmVtb3RlRW50cnkoc3RvcmUscGF0aCxkb25lKX19KX19O3ZhciBOT0RFRlM9e2lzV2luZG93czpmYWxzZSxzdGF0aWNJbml0OmZ1bmN0aW9uKCl7Tk9ERUZTLmlzV2luZG93cz0hIXByb2Nlc3MucGxhdGZvcm0ubWF0Y2goL153aW4vKTt2YXIgZmxhZ3M9cHJvY2Vzc1tcImJpbmRpbmdcIl0oXCJjb25zdGFudHNcIik7aWYoZmxhZ3NbXCJmc1wiXSl7ZmxhZ3M9ZmxhZ3NbXCJmc1wiXX1OT0RFRlMuZmxhZ3NGb3JOb2RlTWFwPXsxMDI0OmZsYWdzW1wiT19BUFBFTkRcIl0sNjQ6ZmxhZ3NbXCJPX0NSRUFUXCJdLDEyODpmbGFnc1tcIk9fRVhDTFwiXSwwOmZsYWdzW1wiT19SRE9OTFlcIl0sMjpmbGFnc1tcIk9fUkRXUlwiXSw0MDk2OmZsYWdzW1wiT19TWU5DXCJdLDUxMjpmbGFnc1tcIk9fVFJVTkNcIl0sMTpmbGFnc1tcIk9fV1JPTkxZXCJdfX0sYnVmZmVyRnJvbTpmdW5jdGlvbihhcnJheUJ1ZmZlcil7cmV0dXJuIEJ1ZmZlci5hbGxvYz9CdWZmZXIuZnJvbShhcnJheUJ1ZmZlcik6bmV3IEJ1ZmZlcihhcnJheUJ1ZmZlcil9LG1vdW50OmZ1bmN0aW9uKG1vdW50KXthc3NlcnQoRU5WSVJPTk1FTlRfSEFTX05PREUpO3JldHVybiBOT0RFRlMuY3JlYXRlTm9kZShudWxsLFwiL1wiLE5PREVGUy5nZXRNb2RlKG1vdW50Lm9wdHMucm9vdCksMCl9LGNyZWF0ZU5vZGU6ZnVuY3Rpb24ocGFyZW50LG5hbWUsbW9kZSxkZXYpe2lmKCFGUy5pc0Rpcihtb2RlKSYmIUZTLmlzRmlsZShtb2RlKSYmIUZTLmlzTGluayhtb2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfXZhciBub2RlPUZTLmNyZWF0ZU5vZGUocGFyZW50LG5hbWUsbW9kZSk7bm9kZS5ub2RlX29wcz1OT0RFRlMubm9kZV9vcHM7bm9kZS5zdHJlYW1fb3BzPU5PREVGUy5zdHJlYW1fb3BzO3JldHVybiBub2RlfSxnZXRNb2RlOmZ1bmN0aW9uKHBhdGgpe3ZhciBzdGF0O3RyeXtzdGF0PWZzLmxzdGF0U3luYyhwYXRoKTtpZihOT0RFRlMuaXNXaW5kb3dzKXtzdGF0Lm1vZGU9c3RhdC5tb2RlfChzdGF0Lm1vZGUmMjkyKT4+Mn19Y2F0Y2goZSl7aWYoIWUuY29kZSl0aHJvdyBlO3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKC1lLmVycm5vKX1yZXR1cm4gc3RhdC5tb2RlfSxyZWFsUGF0aDpmdW5jdGlvbihub2RlKXt2YXIgcGFydHM9W107d2hpbGUobm9kZS5wYXJlbnQhPT1ub2RlKXtwYXJ0cy5wdXNoKG5vZGUubmFtZSk7bm9kZT1ub2RlLnBhcmVudH1wYXJ0cy5wdXNoKG5vZGUubW91bnQub3B0cy5yb290KTtwYXJ0cy5yZXZlcnNlKCk7cmV0dXJuIFBBVEguam9pbi5hcHBseShudWxsLHBhcnRzKX0sZmxhZ3NGb3JOb2RlOmZ1bmN0aW9uKGZsYWdzKXtmbGFncyY9fjIwOTcxNTI7ZmxhZ3MmPX4yMDQ4O2ZsYWdzJj1+MzI3Njg7ZmxhZ3MmPX41MjQyODg7dmFyIG5ld0ZsYWdzPTA7Zm9yKHZhciBrIGluIE5PREVGUy5mbGFnc0Zvck5vZGVNYXApe2lmKGZsYWdzJmspe25ld0ZsYWdzfD1OT0RFRlMuZmxhZ3NGb3JOb2RlTWFwW2tdO2ZsYWdzXj1rfX1pZighZmxhZ3Mpe3JldHVybiBuZXdGbGFnc31lbHNle3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIyKX19LG5vZGVfb3BzOntnZXRhdHRyOmZ1bmN0aW9uKG5vZGUpe3ZhciBwYXRoPU5PREVGUy5yZWFsUGF0aChub2RlKTt2YXIgc3RhdDt0cnl7c3RhdD1mcy5sc3RhdFN5bmMocGF0aCl9Y2F0Y2goZSl7aWYoIWUuY29kZSl0aHJvdyBlO3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKC1lLmVycm5vKX1pZihOT0RFRlMuaXNXaW5kb3dzJiYhc3RhdC5ibGtzaXplKXtzdGF0LmJsa3NpemU9NDA5Nn1pZihOT0RFRlMuaXNXaW5kb3dzJiYhc3RhdC5ibG9ja3Mpe3N0YXQuYmxvY2tzPShzdGF0LnNpemUrc3RhdC5ibGtzaXplLTEpL3N0YXQuYmxrc2l6ZXwwfXJldHVybntkZXY6c3RhdC5kZXYsaW5vOnN0YXQuaW5vLG1vZGU6c3RhdC5tb2RlLG5saW5rOnN0YXQubmxpbmssdWlkOnN0YXQudWlkLGdpZDpzdGF0LmdpZCxyZGV2OnN0YXQucmRldixzaXplOnN0YXQuc2l6ZSxhdGltZTpzdGF0LmF0aW1lLG10aW1lOnN0YXQubXRpbWUsY3RpbWU6c3RhdC5jdGltZSxibGtzaXplOnN0YXQuYmxrc2l6ZSxibG9ja3M6c3RhdC5ibG9ja3N9fSxzZXRhdHRyOmZ1bmN0aW9uKG5vZGUsYXR0cil7dmFyIHBhdGg9Tk9ERUZTLnJlYWxQYXRoKG5vZGUpO3RyeXtpZihhdHRyLm1vZGUhPT11bmRlZmluZWQpe2ZzLmNobW9kU3luYyhwYXRoLGF0dHIubW9kZSk7bm9kZS5tb2RlPWF0dHIubW9kZX1pZihhdHRyLnRpbWVzdGFtcCE9PXVuZGVmaW5lZCl7dmFyIGRhdGU9bmV3IERhdGUoYXR0ci50aW1lc3RhbXApO2ZzLnV0aW1lc1N5bmMocGF0aCxkYXRlLGRhdGUpfWlmKGF0dHIuc2l6ZSE9PXVuZGVmaW5lZCl7ZnMudHJ1bmNhdGVTeW5jKHBhdGgsYXR0ci5zaXplKX19Y2F0Y2goZSl7aWYoIWUuY29kZSl0aHJvdyBlO3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKC1lLmVycm5vKX19LGxvb2t1cDpmdW5jdGlvbihwYXJlbnQsbmFtZSl7dmFyIHBhdGg9UEFUSC5qb2luMihOT0RFRlMucmVhbFBhdGgocGFyZW50KSxuYW1lKTt2YXIgbW9kZT1OT0RFRlMuZ2V0TW9kZShwYXRoKTtyZXR1cm4gTk9ERUZTLmNyZWF0ZU5vZGUocGFyZW50LG5hbWUsbW9kZSl9LG1rbm9kOmZ1bmN0aW9uKHBhcmVudCxuYW1lLG1vZGUsZGV2KXt2YXIgbm9kZT1OT0RFRlMuY3JlYXRlTm9kZShwYXJlbnQsbmFtZSxtb2RlLGRldik7dmFyIHBhdGg9Tk9ERUZTLnJlYWxQYXRoKG5vZGUpO3RyeXtpZihGUy5pc0Rpcihub2RlLm1vZGUpKXtmcy5ta2RpclN5bmMocGF0aCxub2RlLm1vZGUpfWVsc2V7ZnMud3JpdGVGaWxlU3luYyhwYXRoLFwiXCIse21vZGU6bm9kZS5tb2RlfSl9fWNhdGNoKGUpe2lmKCFlLmNvZGUpdGhyb3cgZTt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigtZS5lcnJubyl9cmV0dXJuIG5vZGV9LHJlbmFtZTpmdW5jdGlvbihvbGROb2RlLG5ld0RpcixuZXdOYW1lKXt2YXIgb2xkUGF0aD1OT0RFRlMucmVhbFBhdGgob2xkTm9kZSk7dmFyIG5ld1BhdGg9UEFUSC5qb2luMihOT0RFRlMucmVhbFBhdGgobmV3RGlyKSxuZXdOYW1lKTt0cnl7ZnMucmVuYW1lU3luYyhvbGRQYXRoLG5ld1BhdGgpfWNhdGNoKGUpe2lmKCFlLmNvZGUpdGhyb3cgZTt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigtZS5lcnJubyl9fSx1bmxpbms6ZnVuY3Rpb24ocGFyZW50LG5hbWUpe3ZhciBwYXRoPVBBVEguam9pbjIoTk9ERUZTLnJlYWxQYXRoKHBhcmVudCksbmFtZSk7dHJ5e2ZzLnVubGlua1N5bmMocGF0aCl9Y2F0Y2goZSl7aWYoIWUuY29kZSl0aHJvdyBlO3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKC1lLmVycm5vKX19LHJtZGlyOmZ1bmN0aW9uKHBhcmVudCxuYW1lKXt2YXIgcGF0aD1QQVRILmpvaW4yKE5PREVGUy5yZWFsUGF0aChwYXJlbnQpLG5hbWUpO3RyeXtmcy5ybWRpclN5bmMocGF0aCl9Y2F0Y2goZSl7aWYoIWUuY29kZSl0aHJvdyBlO3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKC1lLmVycm5vKX19LHJlYWRkaXI6ZnVuY3Rpb24obm9kZSl7dmFyIHBhdGg9Tk9ERUZTLnJlYWxQYXRoKG5vZGUpO3RyeXtyZXR1cm4gZnMucmVhZGRpclN5bmMocGF0aCl9Y2F0Y2goZSl7aWYoIWUuY29kZSl0aHJvdyBlO3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKC1lLmVycm5vKX19LHN5bWxpbms6ZnVuY3Rpb24ocGFyZW50LG5ld05hbWUsb2xkUGF0aCl7dmFyIG5ld1BhdGg9UEFUSC5qb2luMihOT0RFRlMucmVhbFBhdGgocGFyZW50KSxuZXdOYW1lKTt0cnl7ZnMuc3ltbGlua1N5bmMob2xkUGF0aCxuZXdQYXRoKX1jYXRjaChlKXtpZighZS5jb2RlKXRocm93IGU7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoLWUuZXJybm8pfX0scmVhZGxpbms6ZnVuY3Rpb24obm9kZSl7dmFyIHBhdGg9Tk9ERUZTLnJlYWxQYXRoKG5vZGUpO3RyeXtwYXRoPWZzLnJlYWRsaW5rU3luYyhwYXRoKTtwYXRoPU5PREVKU19QQVRILnJlbGF0aXZlKE5PREVKU19QQVRILnJlc29sdmUobm9kZS5tb3VudC5vcHRzLnJvb3QpLHBhdGgpO3JldHVybiBwYXRofWNhdGNoKGUpe2lmKCFlLmNvZGUpdGhyb3cgZTt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigtZS5lcnJubyl9fX0sc3RyZWFtX29wczp7b3BlbjpmdW5jdGlvbihzdHJlYW0pe3ZhciBwYXRoPU5PREVGUy5yZWFsUGF0aChzdHJlYW0ubm9kZSk7dHJ5e2lmKEZTLmlzRmlsZShzdHJlYW0ubm9kZS5tb2RlKSl7c3RyZWFtLm5mZD1mcy5vcGVuU3luYyhwYXRoLE5PREVGUy5mbGFnc0Zvck5vZGUoc3RyZWFtLmZsYWdzKSl9fWNhdGNoKGUpe2lmKCFlLmNvZGUpdGhyb3cgZTt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigtZS5lcnJubyl9fSxjbG9zZTpmdW5jdGlvbihzdHJlYW0pe3RyeXtpZihGUy5pc0ZpbGUoc3RyZWFtLm5vZGUubW9kZSkmJnN0cmVhbS5uZmQpe2ZzLmNsb3NlU3luYyhzdHJlYW0ubmZkKX19Y2F0Y2goZSl7aWYoIWUuY29kZSl0aHJvdyBlO3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKC1lLmVycm5vKX19LHJlYWQ6ZnVuY3Rpb24oc3RyZWFtLGJ1ZmZlcixvZmZzZXQsbGVuZ3RoLHBvc2l0aW9uKXtpZihsZW5ndGg9PT0wKXJldHVybiAwO3RyeXtyZXR1cm4gZnMucmVhZFN5bmMoc3RyZWFtLm5mZCxOT0RFRlMuYnVmZmVyRnJvbShidWZmZXIuYnVmZmVyKSxvZmZzZXQsbGVuZ3RoLHBvc2l0aW9uKX1jYXRjaChlKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigtZS5lcnJubyl9fSx3cml0ZTpmdW5jdGlvbihzdHJlYW0sYnVmZmVyLG9mZnNldCxsZW5ndGgscG9zaXRpb24pe3RyeXtyZXR1cm4gZnMud3JpdGVTeW5jKHN0cmVhbS5uZmQsTk9ERUZTLmJ1ZmZlckZyb20oYnVmZmVyLmJ1ZmZlciksb2Zmc2V0LGxlbmd0aCxwb3NpdGlvbil9Y2F0Y2goZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoLWUuZXJybm8pfX0sbGxzZWVrOmZ1bmN0aW9uKHN0cmVhbSxvZmZzZXQsd2hlbmNlKXt2YXIgcG9zaXRpb249b2Zmc2V0O2lmKHdoZW5jZT09PTEpe3Bvc2l0aW9uKz1zdHJlYW0ucG9zaXRpb259ZWxzZSBpZih3aGVuY2U9PT0yKXtpZihGUy5pc0ZpbGUoc3RyZWFtLm5vZGUubW9kZSkpe3RyeXt2YXIgc3RhdD1mcy5mc3RhdFN5bmMoc3RyZWFtLm5mZCk7cG9zaXRpb24rPXN0YXQuc2l6ZX1jYXRjaChlKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigtZS5lcnJubyl9fX1pZihwb3NpdGlvbjwwKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyMil9cmV0dXJuIHBvc2l0aW9ufX19O3ZhciBXT1JLRVJGUz17RElSX01PREU6MTY4OTUsRklMRV9NT0RFOjMzMjc5LHJlYWRlcjpudWxsLG1vdW50OmZ1bmN0aW9uKG1vdW50KXthc3NlcnQoRU5WSVJPTk1FTlRfSVNfV09SS0VSKTtpZighV09SS0VSRlMucmVhZGVyKVdPUktFUkZTLnJlYWRlcj1uZXcgRmlsZVJlYWRlclN5bmM7dmFyIHJvb3Q9V09SS0VSRlMuY3JlYXRlTm9kZShudWxsLFwiL1wiLFdPUktFUkZTLkRJUl9NT0RFLDApO3ZhciBjcmVhdGVkUGFyZW50cz17fTtmdW5jdGlvbiBlbnN1cmVQYXJlbnQocGF0aCl7dmFyIHBhcnRzPXBhdGguc3BsaXQoXCIvXCIpO3ZhciBwYXJlbnQ9cm9vdDtmb3IodmFyIGk9MDtpPHBhcnRzLmxlbmd0aC0xO2krKyl7dmFyIGN1cnI9cGFydHMuc2xpY2UoMCxpKzEpLmpvaW4oXCIvXCIpO2lmKCFjcmVhdGVkUGFyZW50c1tjdXJyXSl7Y3JlYXRlZFBhcmVudHNbY3Vycl09V09SS0VSRlMuY3JlYXRlTm9kZShwYXJlbnQscGFydHNbaV0sV09SS0VSRlMuRElSX01PREUsMCl9cGFyZW50PWNyZWF0ZWRQYXJlbnRzW2N1cnJdfXJldHVybiBwYXJlbnR9ZnVuY3Rpb24gYmFzZShwYXRoKXt2YXIgcGFydHM9cGF0aC5zcGxpdChcIi9cIik7cmV0dXJuIHBhcnRzW3BhcnRzLmxlbmd0aC0xXX1BcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKG1vdW50Lm9wdHNbXCJmaWxlc1wiXXx8W10sZnVuY3Rpb24oZmlsZSl7V09SS0VSRlMuY3JlYXRlTm9kZShlbnN1cmVQYXJlbnQoZmlsZS5uYW1lKSxiYXNlKGZpbGUubmFtZSksV09SS0VSRlMuRklMRV9NT0RFLDAsZmlsZSxmaWxlLmxhc3RNb2RpZmllZERhdGUpfSk7KG1vdW50Lm9wdHNbXCJibG9ic1wiXXx8W10pLmZvckVhY2goZnVuY3Rpb24ob2JqKXtXT1JLRVJGUy5jcmVhdGVOb2RlKGVuc3VyZVBhcmVudChvYmpbXCJuYW1lXCJdKSxiYXNlKG9ialtcIm5hbWVcIl0pLFdPUktFUkZTLkZJTEVfTU9ERSwwLG9ialtcImRhdGFcIl0pfSk7KG1vdW50Lm9wdHNbXCJwYWNrYWdlc1wiXXx8W10pLmZvckVhY2goZnVuY3Rpb24ocGFjayl7cGFja1tcIm1ldGFkYXRhXCJdLmZpbGVzLmZvckVhY2goZnVuY3Rpb24oZmlsZSl7dmFyIG5hbWU9ZmlsZS5maWxlbmFtZS5zdWJzdHIoMSk7V09SS0VSRlMuY3JlYXRlTm9kZShlbnN1cmVQYXJlbnQobmFtZSksYmFzZShuYW1lKSxXT1JLRVJGUy5GSUxFX01PREUsMCxwYWNrW1wiYmxvYlwiXS5zbGljZShmaWxlLnN0YXJ0LGZpbGUuZW5kKSl9KX0pO3JldHVybiByb290fSxjcmVhdGVOb2RlOmZ1bmN0aW9uKHBhcmVudCxuYW1lLG1vZGUsZGV2LGNvbnRlbnRzLG10aW1lKXt2YXIgbm9kZT1GUy5jcmVhdGVOb2RlKHBhcmVudCxuYW1lLG1vZGUpO25vZGUubW9kZT1tb2RlO25vZGUubm9kZV9vcHM9V09SS0VSRlMubm9kZV9vcHM7bm9kZS5zdHJlYW1fb3BzPVdPUktFUkZTLnN0cmVhbV9vcHM7bm9kZS50aW1lc3RhbXA9KG10aW1lfHxuZXcgRGF0ZSkuZ2V0VGltZSgpO2Fzc2VydChXT1JLRVJGUy5GSUxFX01PREUhPT1XT1JLRVJGUy5ESVJfTU9ERSk7aWYobW9kZT09PVdPUktFUkZTLkZJTEVfTU9ERSl7bm9kZS5zaXplPWNvbnRlbnRzLnNpemU7bm9kZS5jb250ZW50cz1jb250ZW50c31lbHNle25vZGUuc2l6ZT00MDk2O25vZGUuY29udGVudHM9e319aWYocGFyZW50KXtwYXJlbnQuY29udGVudHNbbmFtZV09bm9kZX1yZXR1cm4gbm9kZX0sbm9kZV9vcHM6e2dldGF0dHI6ZnVuY3Rpb24obm9kZSl7cmV0dXJue2RldjoxLGlubzp1bmRlZmluZWQsbW9kZTpub2RlLm1vZGUsbmxpbms6MSx1aWQ6MCxnaWQ6MCxyZGV2OnVuZGVmaW5lZCxzaXplOm5vZGUuc2l6ZSxhdGltZTpuZXcgRGF0ZShub2RlLnRpbWVzdGFtcCksbXRpbWU6bmV3IERhdGUobm9kZS50aW1lc3RhbXApLGN0aW1lOm5ldyBEYXRlKG5vZGUudGltZXN0YW1wKSxibGtzaXplOjQwOTYsYmxvY2tzOk1hdGguY2VpbChub2RlLnNpemUvNDA5Nil9fSxzZXRhdHRyOmZ1bmN0aW9uKG5vZGUsYXR0cil7aWYoYXR0ci5tb2RlIT09dW5kZWZpbmVkKXtub2RlLm1vZGU9YXR0ci5tb2RlfWlmKGF0dHIudGltZXN0YW1wIT09dW5kZWZpbmVkKXtub2RlLnRpbWVzdGFtcD1hdHRyLnRpbWVzdGFtcH19LGxvb2t1cDpmdW5jdGlvbihwYXJlbnQsbmFtZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMil9LG1rbm9kOmZ1bmN0aW9uKHBhcmVudCxuYW1lLG1vZGUsZGV2KXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxKX0scmVuYW1lOmZ1bmN0aW9uKG9sZE5vZGUsbmV3RGlyLG5ld05hbWUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDEpfSx1bmxpbms6ZnVuY3Rpb24ocGFyZW50LG5hbWUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDEpfSxybWRpcjpmdW5jdGlvbihwYXJlbnQsbmFtZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMSl9LHJlYWRkaXI6ZnVuY3Rpb24obm9kZSl7dmFyIGVudHJpZXM9W1wiLlwiLFwiLi5cIl07Zm9yKHZhciBrZXkgaW4gbm9kZS5jb250ZW50cyl7aWYoIW5vZGUuY29udGVudHMuaGFzT3duUHJvcGVydHkoa2V5KSl7Y29udGludWV9ZW50cmllcy5wdXNoKGtleSl9cmV0dXJuIGVudHJpZXN9LHN5bWxpbms6ZnVuY3Rpb24ocGFyZW50LG5ld05hbWUsb2xkUGF0aCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMSl9LHJlYWRsaW5rOmZ1bmN0aW9uKG5vZGUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDEpfX0sc3RyZWFtX29wczp7cmVhZDpmdW5jdGlvbihzdHJlYW0sYnVmZmVyLG9mZnNldCxsZW5ndGgscG9zaXRpb24pe2lmKHBvc2l0aW9uPj1zdHJlYW0ubm9kZS5zaXplKXJldHVybiAwO3ZhciBjaHVuaz1zdHJlYW0ubm9kZS5jb250ZW50cy5zbGljZShwb3NpdGlvbixwb3NpdGlvbitsZW5ndGgpO3ZhciBhYj1XT1JLRVJGUy5yZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoY2h1bmspO2J1ZmZlci5zZXQobmV3IFVpbnQ4QXJyYXkoYWIpLG9mZnNldCk7cmV0dXJuIGNodW5rLnNpemV9LHdyaXRlOmZ1bmN0aW9uKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxwb3NpdGlvbil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoNSl9LGxsc2VlazpmdW5jdGlvbihzdHJlYW0sb2Zmc2V0LHdoZW5jZSl7dmFyIHBvc2l0aW9uPW9mZnNldDtpZih3aGVuY2U9PT0xKXtwb3NpdGlvbis9c3RyZWFtLnBvc2l0aW9ufWVsc2UgaWYod2hlbmNlPT09Mil7aWYoRlMuaXNGaWxlKHN0cmVhbS5ub2RlLm1vZGUpKXtwb3NpdGlvbis9c3RyZWFtLm5vZGUuc2l6ZX19aWYocG9zaXRpb248MCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfXJldHVybiBwb3NpdGlvbn19fTt2YXIgRVJSTk9fTUVTU0FHRVM9ezA6XCJTdWNjZXNzXCIsMTpcIk5vdCBzdXBlci11c2VyXCIsMjpcIk5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlcIiwzOlwiTm8gc3VjaCBwcm9jZXNzXCIsNDpcIkludGVycnVwdGVkIHN5c3RlbSBjYWxsXCIsNTpcIkkvTyBlcnJvclwiLDY6XCJObyBzdWNoIGRldmljZSBvciBhZGRyZXNzXCIsNzpcIkFyZyBsaXN0IHRvbyBsb25nXCIsODpcIkV4ZWMgZm9ybWF0IGVycm9yXCIsOTpcIkJhZCBmaWxlIG51bWJlclwiLDEwOlwiTm8gY2hpbGRyZW5cIiwxMTpcIk5vIG1vcmUgcHJvY2Vzc2VzXCIsMTI6XCJOb3QgZW5vdWdoIGNvcmVcIiwxMzpcIlBlcm1pc3Npb24gZGVuaWVkXCIsMTQ6XCJCYWQgYWRkcmVzc1wiLDE1OlwiQmxvY2sgZGV2aWNlIHJlcXVpcmVkXCIsMTY6XCJNb3VudCBkZXZpY2UgYnVzeVwiLDE3OlwiRmlsZSBleGlzdHNcIiwxODpcIkNyb3NzLWRldmljZSBsaW5rXCIsMTk6XCJObyBzdWNoIGRldmljZVwiLDIwOlwiTm90IGEgZGlyZWN0b3J5XCIsMjE6XCJJcyBhIGRpcmVjdG9yeVwiLDIyOlwiSW52YWxpZCBhcmd1bWVudFwiLDIzOlwiVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW1cIiwyNDpcIlRvbyBtYW55IG9wZW4gZmlsZXNcIiwyNTpcIk5vdCBhIHR5cGV3cml0ZXJcIiwyNjpcIlRleHQgZmlsZSBidXN5XCIsMjc6XCJGaWxlIHRvbyBsYXJnZVwiLDI4OlwiTm8gc3BhY2UgbGVmdCBvbiBkZXZpY2VcIiwyOTpcIklsbGVnYWwgc2Vla1wiLDMwOlwiUmVhZCBvbmx5IGZpbGUgc3lzdGVtXCIsMzE6XCJUb28gbWFueSBsaW5rc1wiLDMyOlwiQnJva2VuIHBpcGVcIiwzMzpcIk1hdGggYXJnIG91dCBvZiBkb21haW4gb2YgZnVuY1wiLDM0OlwiTWF0aCByZXN1bHQgbm90IHJlcHJlc2VudGFibGVcIiwzNTpcIkZpbGUgbG9ja2luZyBkZWFkbG9jayBlcnJvclwiLDM2OlwiRmlsZSBvciBwYXRoIG5hbWUgdG9vIGxvbmdcIiwzNzpcIk5vIHJlY29yZCBsb2NrcyBhdmFpbGFibGVcIiwzODpcIkZ1bmN0aW9uIG5vdCBpbXBsZW1lbnRlZFwiLDM5OlwiRGlyZWN0b3J5IG5vdCBlbXB0eVwiLDQwOlwiVG9vIG1hbnkgc3ltYm9saWMgbGlua3NcIiw0MjpcIk5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlXCIsNDM6XCJJZGVudGlmaWVyIHJlbW92ZWRcIiw0NDpcIkNoYW5uZWwgbnVtYmVyIG91dCBvZiByYW5nZVwiLDQ1OlwiTGV2ZWwgMiBub3Qgc3luY2hyb25pemVkXCIsNDY6XCJMZXZlbCAzIGhhbHRlZFwiLDQ3OlwiTGV2ZWwgMyByZXNldFwiLDQ4OlwiTGluayBudW1iZXIgb3V0IG9mIHJhbmdlXCIsNDk6XCJQcm90b2NvbCBkcml2ZXIgbm90IGF0dGFjaGVkXCIsNTA6XCJObyBDU0kgc3RydWN0dXJlIGF2YWlsYWJsZVwiLDUxOlwiTGV2ZWwgMiBoYWx0ZWRcIiw1MjpcIkludmFsaWQgZXhjaGFuZ2VcIiw1MzpcIkludmFsaWQgcmVxdWVzdCBkZXNjcmlwdG9yXCIsNTQ6XCJFeGNoYW5nZSBmdWxsXCIsNTU6XCJObyBhbm9kZVwiLDU2OlwiSW52YWxpZCByZXF1ZXN0IGNvZGVcIiw1NzpcIkludmFsaWQgc2xvdFwiLDU5OlwiQmFkIGZvbnQgZmlsZSBmbXRcIiw2MDpcIkRldmljZSBub3QgYSBzdHJlYW1cIiw2MTpcIk5vIGRhdGEgKGZvciBubyBkZWxheSBpbylcIiw2MjpcIlRpbWVyIGV4cGlyZWRcIiw2MzpcIk91dCBvZiBzdHJlYW1zIHJlc291cmNlc1wiLDY0OlwiTWFjaGluZSBpcyBub3Qgb24gdGhlIG5ldHdvcmtcIiw2NTpcIlBhY2thZ2Ugbm90IGluc3RhbGxlZFwiLDY2OlwiVGhlIG9iamVjdCBpcyByZW1vdGVcIiw2NzpcIlRoZSBsaW5rIGhhcyBiZWVuIHNldmVyZWRcIiw2ODpcIkFkdmVydGlzZSBlcnJvclwiLDY5OlwiU3Jtb3VudCBlcnJvclwiLDcwOlwiQ29tbXVuaWNhdGlvbiBlcnJvciBvbiBzZW5kXCIsNzE6XCJQcm90b2NvbCBlcnJvclwiLDcyOlwiTXVsdGlob3AgYXR0ZW1wdGVkXCIsNzM6XCJDcm9zcyBtb3VudCBwb2ludCAobm90IHJlYWxseSBlcnJvcilcIiw3NDpcIlRyeWluZyB0byByZWFkIHVucmVhZGFibGUgbWVzc2FnZVwiLDc1OlwiVmFsdWUgdG9vIGxhcmdlIGZvciBkZWZpbmVkIGRhdGEgdHlwZVwiLDc2OlwiR2l2ZW4gbG9nLiBuYW1lIG5vdCB1bmlxdWVcIiw3NzpcImYuZC4gaW52YWxpZCBmb3IgdGhpcyBvcGVyYXRpb25cIiw3ODpcIlJlbW90ZSBhZGRyZXNzIGNoYW5nZWRcIiw3OTpcIkNhbiAgIGFjY2VzcyBhIG5lZWRlZCBzaGFyZWQgbGliXCIsODA6XCJBY2Nlc3NpbmcgYSBjb3JydXB0ZWQgc2hhcmVkIGxpYlwiLDgxOlwiLmxpYiBzZWN0aW9uIGluIGEub3V0IGNvcnJ1cHRlZFwiLDgyOlwiQXR0ZW1wdGluZyB0byBsaW5rIGluIHRvbyBtYW55IGxpYnNcIiw4MzpcIkF0dGVtcHRpbmcgdG8gZXhlYyBhIHNoYXJlZCBsaWJyYXJ5XCIsODQ6XCJJbGxlZ2FsIGJ5dGUgc2VxdWVuY2VcIiw4NjpcIlN0cmVhbXMgcGlwZSBlcnJvclwiLDg3OlwiVG9vIG1hbnkgdXNlcnNcIiw4ODpcIlNvY2tldCBvcGVyYXRpb24gb24gbm9uLXNvY2tldFwiLDg5OlwiRGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZFwiLDkwOlwiTWVzc2FnZSB0b28gbG9uZ1wiLDkxOlwiUHJvdG9jb2wgd3JvbmcgdHlwZSBmb3Igc29ja2V0XCIsOTI6XCJQcm90b2NvbCBub3QgYXZhaWxhYmxlXCIsOTM6XCJVbmtub3duIHByb3RvY29sXCIsOTQ6XCJTb2NrZXQgdHlwZSBub3Qgc3VwcG9ydGVkXCIsOTU6XCJOb3Qgc3VwcG9ydGVkXCIsOTY6XCJQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZFwiLDk3OlwiQWRkcmVzcyBmYW1pbHkgbm90IHN1cHBvcnRlZCBieSBwcm90b2NvbCBmYW1pbHlcIiw5ODpcIkFkZHJlc3MgYWxyZWFkeSBpbiB1c2VcIiw5OTpcIkFkZHJlc3Mgbm90IGF2YWlsYWJsZVwiLDEwMDpcIk5ldHdvcmsgaW50ZXJmYWNlIGlzIG5vdCBjb25maWd1cmVkXCIsMTAxOlwiTmV0d29yayBpcyB1bnJlYWNoYWJsZVwiLDEwMjpcIkNvbm5lY3Rpb24gcmVzZXQgYnkgbmV0d29ya1wiLDEwMzpcIkNvbm5lY3Rpb24gYWJvcnRlZFwiLDEwNDpcIkNvbm5lY3Rpb24gcmVzZXQgYnkgcGVlclwiLDEwNTpcIk5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGVcIiwxMDY6XCJTb2NrZXQgaXMgYWxyZWFkeSBjb25uZWN0ZWRcIiwxMDc6XCJTb2NrZXQgaXMgbm90IGNvbm5lY3RlZFwiLDEwODpcIkNhbid0IHNlbmQgYWZ0ZXIgc29ja2V0IHNodXRkb3duXCIsMTA5OlwiVG9vIG1hbnkgcmVmZXJlbmNlc1wiLDExMDpcIkNvbm5lY3Rpb24gdGltZWQgb3V0XCIsMTExOlwiQ29ubmVjdGlvbiByZWZ1c2VkXCIsMTEyOlwiSG9zdCBpcyBkb3duXCIsMTEzOlwiSG9zdCBpcyB1bnJlYWNoYWJsZVwiLDExNDpcIlNvY2tldCBhbHJlYWR5IGNvbm5lY3RlZFwiLDExNTpcIkNvbm5lY3Rpb24gYWxyZWFkeSBpbiBwcm9ncmVzc1wiLDExNjpcIlN0YWxlIGZpbGUgaGFuZGxlXCIsMTIyOlwiUXVvdGEgZXhjZWVkZWRcIiwxMjM6XCJObyBtZWRpdW0gKGluIHRhcGUgZHJpdmUpXCIsMTI1OlwiT3BlcmF0aW9uIGNhbmNlbGVkXCIsMTMwOlwiUHJldmlvdXMgb3duZXIgZGllZFwiLDEzMTpcIlN0YXRlIG5vdCByZWNvdmVyYWJsZVwifTt2YXIgRVJSTk9fQ09ERVM9e0VQRVJNOjEsRU5PRU5UOjIsRVNSQ0g6MyxFSU5UUjo0LEVJTzo1LEVOWElPOjYsRTJCSUc6NyxFTk9FWEVDOjgsRUJBREY6OSxFQ0hJTEQ6MTAsRUFHQUlOOjExLEVXT1VMREJMT0NLOjExLEVOT01FTToxMixFQUNDRVM6MTMsRUZBVUxUOjE0LEVOT1RCTEs6MTUsRUJVU1k6MTYsRUVYSVNUOjE3LEVYREVWOjE4LEVOT0RFVjoxOSxFTk9URElSOjIwLEVJU0RJUjoyMSxFSU5WQUw6MjIsRU5GSUxFOjIzLEVNRklMRToyNCxFTk9UVFk6MjUsRVRYVEJTWToyNixFRkJJRzoyNyxFTk9TUEM6MjgsRVNQSVBFOjI5LEVST0ZTOjMwLEVNTElOSzozMSxFUElQRTozMixFRE9NOjMzLEVSQU5HRTozNCxFTk9NU0c6NDIsRUlEUk06NDMsRUNIUk5HOjQ0LEVMMk5TWU5DOjQ1LEVMM0hMVDo0NixFTDNSU1Q6NDcsRUxOUk5HOjQ4LEVVTkFUQ0g6NDksRU5PQ1NJOjUwLEVMMkhMVDo1MSxFREVBRExLOjM1LEVOT0xDSzozNyxFQkFERTo1MixFQkFEUjo1MyxFWEZVTEw6NTQsRU5PQU5POjU1LEVCQURSUUM6NTYsRUJBRFNMVDo1NyxFREVBRExPQ0s6MzUsRUJGT05UOjU5LEVOT1NUUjo2MCxFTk9EQVRBOjYxLEVUSU1FOjYyLEVOT1NSOjYzLEVOT05FVDo2NCxFTk9QS0c6NjUsRVJFTU9URTo2NixFTk9MSU5LOjY3LEVBRFY6NjgsRVNSTU5UOjY5LEVDT01NOjcwLEVQUk9UTzo3MSxFTVVMVElIT1A6NzIsRURPVERPVDo3MyxFQkFETVNHOjc0LEVOT1RVTklROjc2LEVCQURGRDo3NyxFUkVNQ0hHOjc4LEVMSUJBQ0M6NzksRUxJQkJBRDo4MCxFTElCU0NOOjgxLEVMSUJNQVg6ODIsRUxJQkVYRUM6ODMsRU5PU1lTOjM4LEVOT1RFTVBUWTozOSxFTkFNRVRPT0xPTkc6MzYsRUxPT1A6NDAsRU9QTk9UU1VQUDo5NSxFUEZOT1NVUFBPUlQ6OTYsRUNPTk5SRVNFVDoxMDQsRU5PQlVGUzoxMDUsRUFGTk9TVVBQT1JUOjk3LEVQUk9UT1RZUEU6OTEsRU5PVFNPQ0s6ODgsRU5PUFJPVE9PUFQ6OTIsRVNIVVRET1dOOjEwOCxFQ09OTlJFRlVTRUQ6MTExLEVBRERSSU5VU0U6OTgsRUNPTk5BQk9SVEVEOjEwMyxFTkVUVU5SRUFDSDoxMDEsRU5FVERPV046MTAwLEVUSU1FRE9VVDoxMTAsRUhPU1RET1dOOjExMixFSE9TVFVOUkVBQ0g6MTEzLEVJTlBST0dSRVNTOjExNSxFQUxSRUFEWToxMTQsRURFU1RBRERSUkVROjg5LEVNU0dTSVpFOjkwLEVQUk9UT05PU1VQUE9SVDo5MyxFU09DS1ROT1NVUFBPUlQ6OTQsRUFERFJOT1RBVkFJTDo5OSxFTkVUUkVTRVQ6MTAyLEVJU0NPTk46MTA2LEVOT1RDT05OOjEwNyxFVE9PTUFOWVJFRlM6MTA5LEVVU0VSUzo4NyxFRFFVT1Q6MTIyLEVTVEFMRToxMTYsRU5PVFNVUDo5NSxFTk9NRURJVU06MTIzLEVJTFNFUTo4NCxFT1ZFUkZMT1c6NzUsRUNBTkNFTEVEOjEyNSxFTk9UUkVDT1ZFUkFCTEU6MTMxLEVPV05FUkRFQUQ6MTMwLEVTVFJQSVBFOjg2fTt2YXIgRlM9e3Jvb3Q6bnVsbCxtb3VudHM6W10sZGV2aWNlczp7fSxzdHJlYW1zOltdLG5leHRJbm9kZToxLG5hbWVUYWJsZTpudWxsLGN1cnJlbnRQYXRoOlwiL1wiLGluaXRpYWxpemVkOmZhbHNlLGlnbm9yZVBlcm1pc3Npb25zOnRydWUsdHJhY2tpbmdEZWxlZ2F0ZTp7fSx0cmFja2luZzp7b3BlbkZsYWdzOntSRUFEOjEsV1JJVEU6Mn19LEVycm5vRXJyb3I6bnVsbCxnZW5lcmljRXJyb3JzOnt9LGZpbGVzeXN0ZW1zOm51bGwsc3luY0ZTUmVxdWVzdHM6MCxoYW5kbGVGU0Vycm9yOmZ1bmN0aW9uKGUpe2lmKCEoZSBpbnN0YW5jZW9mIEZTLkVycm5vRXJyb3IpKXRocm93IGUrXCIgOiBcIitzdGFja1RyYWNlKCk7cmV0dXJuIF9fX3NldEVyck5vKGUuZXJybm8pfSxsb29rdXBQYXRoOmZ1bmN0aW9uKHBhdGgsb3B0cyl7cGF0aD1QQVRIX0ZTLnJlc29sdmUoRlMuY3dkKCkscGF0aCk7b3B0cz1vcHRzfHx7fTtpZighcGF0aClyZXR1cm57cGF0aDpcIlwiLG5vZGU6bnVsbH07dmFyIGRlZmF1bHRzPXtmb2xsb3dfbW91bnQ6dHJ1ZSxyZWN1cnNlX2NvdW50OjB9O2Zvcih2YXIga2V5IGluIGRlZmF1bHRzKXtpZihvcHRzW2tleV09PT11bmRlZmluZWQpe29wdHNba2V5XT1kZWZhdWx0c1trZXldfX1pZihvcHRzLnJlY3Vyc2VfY291bnQ+OCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoNDApfXZhciBwYXJ0cz1QQVRILm5vcm1hbGl6ZUFycmF5KHBhdGguc3BsaXQoXCIvXCIpLmZpbHRlcihmdW5jdGlvbihwKXtyZXR1cm4hIXB9KSxmYWxzZSk7dmFyIGN1cnJlbnQ9RlMucm9vdDt2YXIgY3VycmVudF9wYXRoPVwiL1wiO2Zvcih2YXIgaT0wO2k8cGFydHMubGVuZ3RoO2krKyl7dmFyIGlzbGFzdD1pPT09cGFydHMubGVuZ3RoLTE7aWYoaXNsYXN0JiZvcHRzLnBhcmVudCl7YnJlYWt9Y3VycmVudD1GUy5sb29rdXBOb2RlKGN1cnJlbnQscGFydHNbaV0pO2N1cnJlbnRfcGF0aD1QQVRILmpvaW4yKGN1cnJlbnRfcGF0aCxwYXJ0c1tpXSk7aWYoRlMuaXNNb3VudHBvaW50KGN1cnJlbnQpKXtpZighaXNsYXN0fHxpc2xhc3QmJm9wdHMuZm9sbG93X21vdW50KXtjdXJyZW50PWN1cnJlbnQubW91bnRlZC5yb290fX1pZighaXNsYXN0fHxvcHRzLmZvbGxvdyl7dmFyIGNvdW50PTA7d2hpbGUoRlMuaXNMaW5rKGN1cnJlbnQubW9kZSkpe3ZhciBsaW5rPUZTLnJlYWRsaW5rKGN1cnJlbnRfcGF0aCk7Y3VycmVudF9wYXRoPVBBVEhfRlMucmVzb2x2ZShQQVRILmRpcm5hbWUoY3VycmVudF9wYXRoKSxsaW5rKTt2YXIgbG9va3VwPUZTLmxvb2t1cFBhdGgoY3VycmVudF9wYXRoLHtyZWN1cnNlX2NvdW50Om9wdHMucmVjdXJzZV9jb3VudH0pO2N1cnJlbnQ9bG9va3VwLm5vZGU7aWYoY291bnQrKz40MCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoNDApfX19fXJldHVybntwYXRoOmN1cnJlbnRfcGF0aCxub2RlOmN1cnJlbnR9fSxnZXRQYXRoOmZ1bmN0aW9uKG5vZGUpe3ZhciBwYXRoO3doaWxlKHRydWUpe2lmKEZTLmlzUm9vdChub2RlKSl7dmFyIG1vdW50PW5vZGUubW91bnQubW91bnRwb2ludDtpZighcGF0aClyZXR1cm4gbW91bnQ7cmV0dXJuIG1vdW50W21vdW50Lmxlbmd0aC0xXSE9PVwiL1wiP21vdW50K1wiL1wiK3BhdGg6bW91bnQrcGF0aH1wYXRoPXBhdGg/bm9kZS5uYW1lK1wiL1wiK3BhdGg6bm9kZS5uYW1lO25vZGU9bm9kZS5wYXJlbnR9fSxoYXNoTmFtZTpmdW5jdGlvbihwYXJlbnRpZCxuYW1lKXt2YXIgaGFzaD0wO2Zvcih2YXIgaT0wO2k8bmFtZS5sZW5ndGg7aSsrKXtoYXNoPShoYXNoPDw1KS1oYXNoK25hbWUuY2hhckNvZGVBdChpKXwwfXJldHVybihwYXJlbnRpZCtoYXNoPj4+MCklRlMubmFtZVRhYmxlLmxlbmd0aH0saGFzaEFkZE5vZGU6ZnVuY3Rpb24obm9kZSl7dmFyIGhhc2g9RlMuaGFzaE5hbWUobm9kZS5wYXJlbnQuaWQsbm9kZS5uYW1lKTtub2RlLm5hbWVfbmV4dD1GUy5uYW1lVGFibGVbaGFzaF07RlMubmFtZVRhYmxlW2hhc2hdPW5vZGV9LGhhc2hSZW1vdmVOb2RlOmZ1bmN0aW9uKG5vZGUpe3ZhciBoYXNoPUZTLmhhc2hOYW1lKG5vZGUucGFyZW50LmlkLG5vZGUubmFtZSk7aWYoRlMubmFtZVRhYmxlW2hhc2hdPT09bm9kZSl7RlMubmFtZVRhYmxlW2hhc2hdPW5vZGUubmFtZV9uZXh0fWVsc2V7dmFyIGN1cnJlbnQ9RlMubmFtZVRhYmxlW2hhc2hdO3doaWxlKGN1cnJlbnQpe2lmKGN1cnJlbnQubmFtZV9uZXh0PT09bm9kZSl7Y3VycmVudC5uYW1lX25leHQ9bm9kZS5uYW1lX25leHQ7YnJlYWt9Y3VycmVudD1jdXJyZW50Lm5hbWVfbmV4dH19fSxsb29rdXBOb2RlOmZ1bmN0aW9uKHBhcmVudCxuYW1lKXt2YXIgZXJyPUZTLm1heUxvb2t1cChwYXJlbnQpO2lmKGVycil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoZXJyLHBhcmVudCl9dmFyIGhhc2g9RlMuaGFzaE5hbWUocGFyZW50LmlkLG5hbWUpO2Zvcih2YXIgbm9kZT1GUy5uYW1lVGFibGVbaGFzaF07bm9kZTtub2RlPW5vZGUubmFtZV9uZXh0KXt2YXIgbm9kZU5hbWU9bm9kZS5uYW1lO2lmKG5vZGUucGFyZW50LmlkPT09cGFyZW50LmlkJiZub2RlTmFtZT09PW5hbWUpe3JldHVybiBub2RlfX1yZXR1cm4gRlMubG9va3VwKHBhcmVudCxuYW1lKX0sY3JlYXRlTm9kZTpmdW5jdGlvbihwYXJlbnQsbmFtZSxtb2RlLHJkZXYpe2lmKCFGUy5GU05vZGUpe0ZTLkZTTm9kZT1mdW5jdGlvbihwYXJlbnQsbmFtZSxtb2RlLHJkZXYpe2lmKCFwYXJlbnQpe3BhcmVudD10aGlzfXRoaXMucGFyZW50PXBhcmVudDt0aGlzLm1vdW50PXBhcmVudC5tb3VudDt0aGlzLm1vdW50ZWQ9bnVsbDt0aGlzLmlkPUZTLm5leHRJbm9kZSsrO3RoaXMubmFtZT1uYW1lO3RoaXMubW9kZT1tb2RlO3RoaXMubm9kZV9vcHM9e307dGhpcy5zdHJlYW1fb3BzPXt9O3RoaXMucmRldj1yZGV2fTtGUy5GU05vZGUucHJvdG90eXBlPXt9O3ZhciByZWFkTW9kZT0yOTJ8NzM7dmFyIHdyaXRlTW9kZT0xNDY7T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoRlMuRlNOb2RlLnByb3RvdHlwZSx7cmVhZDp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMubW9kZSZyZWFkTW9kZSk9PT1yZWFkTW9kZX0sc2V0OmZ1bmN0aW9uKHZhbCl7dmFsP3RoaXMubW9kZXw9cmVhZE1vZGU6dGhpcy5tb2RlJj1+cmVhZE1vZGV9fSx3cml0ZTp7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuKHRoaXMubW9kZSZ3cml0ZU1vZGUpPT09d3JpdGVNb2RlfSxzZXQ6ZnVuY3Rpb24odmFsKXt2YWw/dGhpcy5tb2RlfD13cml0ZU1vZGU6dGhpcy5tb2RlJj1+d3JpdGVNb2RlfX0saXNGb2xkZXI6e2dldDpmdW5jdGlvbigpe3JldHVybiBGUy5pc0Rpcih0aGlzLm1vZGUpfX0saXNEZXZpY2U6e2dldDpmdW5jdGlvbigpe3JldHVybiBGUy5pc0NocmRldih0aGlzLm1vZGUpfX19KX12YXIgbm9kZT1uZXcgRlMuRlNOb2RlKHBhcmVudCxuYW1lLG1vZGUscmRldik7RlMuaGFzaEFkZE5vZGUobm9kZSk7cmV0dXJuIG5vZGV9LGRlc3Ryb3lOb2RlOmZ1bmN0aW9uKG5vZGUpe0ZTLmhhc2hSZW1vdmVOb2RlKG5vZGUpfSxpc1Jvb3Q6ZnVuY3Rpb24obm9kZSl7cmV0dXJuIG5vZGU9PT1ub2RlLnBhcmVudH0saXNNb3VudHBvaW50OmZ1bmN0aW9uKG5vZGUpe3JldHVybiEhbm9kZS5tb3VudGVkfSxpc0ZpbGU6ZnVuY3Rpb24obW9kZSl7cmV0dXJuKG1vZGUmNjE0NDApPT09MzI3Njh9LGlzRGlyOmZ1bmN0aW9uKG1vZGUpe3JldHVybihtb2RlJjYxNDQwKT09PTE2Mzg0fSxpc0xpbms6ZnVuY3Rpb24obW9kZSl7cmV0dXJuKG1vZGUmNjE0NDApPT09NDA5NjB9LGlzQ2hyZGV2OmZ1bmN0aW9uKG1vZGUpe3JldHVybihtb2RlJjYxNDQwKT09PTgxOTJ9LGlzQmxrZGV2OmZ1bmN0aW9uKG1vZGUpe3JldHVybihtb2RlJjYxNDQwKT09PTI0NTc2fSxpc0ZJRk86ZnVuY3Rpb24obW9kZSl7cmV0dXJuKG1vZGUmNjE0NDApPT09NDA5Nn0saXNTb2NrZXQ6ZnVuY3Rpb24obW9kZSl7cmV0dXJuKG1vZGUmNDkxNTIpPT09NDkxNTJ9LGZsYWdNb2Rlczp7XCJyXCI6MCxcInJzXCI6MTA1MjY3MixcInIrXCI6MixcIndcIjo1NzcsXCJ3eFwiOjcwNSxcInh3XCI6NzA1LFwidytcIjo1NzgsXCJ3eCtcIjo3MDYsXCJ4dytcIjo3MDYsXCJhXCI6MTA4OSxcImF4XCI6MTIxNyxcInhhXCI6MTIxNyxcImErXCI6MTA5MCxcImF4K1wiOjEyMTgsXCJ4YStcIjoxMjE4fSxtb2RlU3RyaW5nVG9GbGFnczpmdW5jdGlvbihzdHIpe3ZhciBmbGFncz1GUy5mbGFnTW9kZXNbc3RyXTtpZih0eXBlb2YgZmxhZ3M9PT1cInVuZGVmaW5lZFwiKXt0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIGZpbGUgb3BlbiBtb2RlOiBcIitzdHIpfXJldHVybiBmbGFnc30sZmxhZ3NUb1Blcm1pc3Npb25TdHJpbmc6ZnVuY3Rpb24oZmxhZyl7dmFyIHBlcm1zPVtcInJcIixcIndcIixcInJ3XCJdW2ZsYWcmM107aWYoZmxhZyY1MTIpe3Blcm1zKz1cIndcIn1yZXR1cm4gcGVybXN9LG5vZGVQZXJtaXNzaW9uczpmdW5jdGlvbihub2RlLHBlcm1zKXtpZihGUy5pZ25vcmVQZXJtaXNzaW9ucyl7cmV0dXJuIDB9aWYocGVybXMuaW5kZXhPZihcInJcIikhPT0tMSYmIShub2RlLm1vZGUmMjkyKSl7cmV0dXJuIDEzfWVsc2UgaWYocGVybXMuaW5kZXhPZihcIndcIikhPT0tMSYmIShub2RlLm1vZGUmMTQ2KSl7cmV0dXJuIDEzfWVsc2UgaWYocGVybXMuaW5kZXhPZihcInhcIikhPT0tMSYmIShub2RlLm1vZGUmNzMpKXtyZXR1cm4gMTN9cmV0dXJuIDB9LG1heUxvb2t1cDpmdW5jdGlvbihkaXIpe3ZhciBlcnI9RlMubm9kZVBlcm1pc3Npb25zKGRpcixcInhcIik7aWYoZXJyKXJldHVybiBlcnI7aWYoIWRpci5ub2RlX29wcy5sb29rdXApcmV0dXJuIDEzO3JldHVybiAwfSxtYXlDcmVhdGU6ZnVuY3Rpb24oZGlyLG5hbWUpe3RyeXt2YXIgbm9kZT1GUy5sb29rdXBOb2RlKGRpcixuYW1lKTtyZXR1cm4gMTd9Y2F0Y2goZSl7fXJldHVybiBGUy5ub2RlUGVybWlzc2lvbnMoZGlyLFwid3hcIil9LG1heURlbGV0ZTpmdW5jdGlvbihkaXIsbmFtZSxpc2Rpcil7dmFyIG5vZGU7dHJ5e25vZGU9RlMubG9va3VwTm9kZShkaXIsbmFtZSl9Y2F0Y2goZSl7cmV0dXJuIGUuZXJybm99dmFyIGVycj1GUy5ub2RlUGVybWlzc2lvbnMoZGlyLFwid3hcIik7aWYoZXJyKXtyZXR1cm4gZXJyfWlmKGlzZGlyKXtpZighRlMuaXNEaXIobm9kZS5tb2RlKSl7cmV0dXJuIDIwfWlmKEZTLmlzUm9vdChub2RlKXx8RlMuZ2V0UGF0aChub2RlKT09PUZTLmN3ZCgpKXtyZXR1cm4gMTZ9fWVsc2V7aWYoRlMuaXNEaXIobm9kZS5tb2RlKSl7cmV0dXJuIDIxfX1yZXR1cm4gMH0sbWF5T3BlbjpmdW5jdGlvbihub2RlLGZsYWdzKXtpZighbm9kZSl7cmV0dXJuIDJ9aWYoRlMuaXNMaW5rKG5vZGUubW9kZSkpe3JldHVybiA0MH1lbHNlIGlmKEZTLmlzRGlyKG5vZGUubW9kZSkpe2lmKEZTLmZsYWdzVG9QZXJtaXNzaW9uU3RyaW5nKGZsYWdzKSE9PVwiclwifHxmbGFncyY1MTIpe3JldHVybiAyMX19cmV0dXJuIEZTLm5vZGVQZXJtaXNzaW9ucyhub2RlLEZTLmZsYWdzVG9QZXJtaXNzaW9uU3RyaW5nKGZsYWdzKSl9LE1BWF9PUEVOX0ZEUzo0MDk2LG5leHRmZDpmdW5jdGlvbihmZF9zdGFydCxmZF9lbmQpe2ZkX3N0YXJ0PWZkX3N0YXJ0fHwwO2ZkX2VuZD1mZF9lbmR8fEZTLk1BWF9PUEVOX0ZEUztmb3IodmFyIGZkPWZkX3N0YXJ0O2ZkPD1mZF9lbmQ7ZmQrKyl7aWYoIUZTLnN0cmVhbXNbZmRdKXtyZXR1cm4gZmR9fXRocm93IG5ldyBGUy5FcnJub0Vycm9yKDI0KX0sZ2V0U3RyZWFtOmZ1bmN0aW9uKGZkKXtyZXR1cm4gRlMuc3RyZWFtc1tmZF19LGNyZWF0ZVN0cmVhbTpmdW5jdGlvbihzdHJlYW0sZmRfc3RhcnQsZmRfZW5kKXtpZighRlMuRlNTdHJlYW0pe0ZTLkZTU3RyZWFtPWZ1bmN0aW9uKCl7fTtGUy5GU1N0cmVhbS5wcm90b3R5cGU9e307T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoRlMuRlNTdHJlYW0ucHJvdG90eXBlLHtvYmplY3Q6e2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5vZGV9LHNldDpmdW5jdGlvbih2YWwpe3RoaXMubm9kZT12YWx9fSxpc1JlYWQ6e2dldDpmdW5jdGlvbigpe3JldHVybih0aGlzLmZsYWdzJjIwOTcxNTUpIT09MX19LGlzV3JpdGU6e2dldDpmdW5jdGlvbigpe3JldHVybih0aGlzLmZsYWdzJjIwOTcxNTUpIT09MH19LGlzQXBwZW5kOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5mbGFncyYxMDI0fX19KX12YXIgbmV3U3RyZWFtPW5ldyBGUy5GU1N0cmVhbTtmb3IodmFyIHAgaW4gc3RyZWFtKXtuZXdTdHJlYW1bcF09c3RyZWFtW3BdfXN0cmVhbT1uZXdTdHJlYW07dmFyIGZkPUZTLm5leHRmZChmZF9zdGFydCxmZF9lbmQpO3N0cmVhbS5mZD1mZDtGUy5zdHJlYW1zW2ZkXT1zdHJlYW07cmV0dXJuIHN0cmVhbX0sY2xvc2VTdHJlYW06ZnVuY3Rpb24oZmQpe0ZTLnN0cmVhbXNbZmRdPW51bGx9LGNocmRldl9zdHJlYW1fb3BzOntvcGVuOmZ1bmN0aW9uKHN0cmVhbSl7dmFyIGRldmljZT1GUy5nZXREZXZpY2Uoc3RyZWFtLm5vZGUucmRldik7c3RyZWFtLnN0cmVhbV9vcHM9ZGV2aWNlLnN0cmVhbV9vcHM7aWYoc3RyZWFtLnN0cmVhbV9vcHMub3Blbil7c3RyZWFtLnN0cmVhbV9vcHMub3BlbihzdHJlYW0pfX0sbGxzZWVrOmZ1bmN0aW9uKCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjkpfX0sbWFqb3I6ZnVuY3Rpb24oZGV2KXtyZXR1cm4gZGV2Pj44fSxtaW5vcjpmdW5jdGlvbihkZXYpe3JldHVybiBkZXYmMjU1fSxtYWtlZGV2OmZ1bmN0aW9uKG1hLG1pKXtyZXR1cm4gbWE8PDh8bWl9LHJlZ2lzdGVyRGV2aWNlOmZ1bmN0aW9uKGRldixvcHMpe0ZTLmRldmljZXNbZGV2XT17c3RyZWFtX29wczpvcHN9fSxnZXREZXZpY2U6ZnVuY3Rpb24oZGV2KXtyZXR1cm4gRlMuZGV2aWNlc1tkZXZdfSxnZXRNb3VudHM6ZnVuY3Rpb24obW91bnQpe3ZhciBtb3VudHM9W107dmFyIGNoZWNrPVttb3VudF07d2hpbGUoY2hlY2subGVuZ3RoKXt2YXIgbT1jaGVjay5wb3AoKTttb3VudHMucHVzaChtKTtjaGVjay5wdXNoLmFwcGx5KGNoZWNrLG0ubW91bnRzKX1yZXR1cm4gbW91bnRzfSxzeW5jZnM6ZnVuY3Rpb24ocG9wdWxhdGUsY2FsbGJhY2spe2lmKHR5cGVvZiBwb3B1bGF0ZT09PVwiZnVuY3Rpb25cIil7Y2FsbGJhY2s9cG9wdWxhdGU7cG9wdWxhdGU9ZmFsc2V9RlMuc3luY0ZTUmVxdWVzdHMrKztpZihGUy5zeW5jRlNSZXF1ZXN0cz4xKXtjb25zb2xlLmxvZyhcIndhcm5pbmc6IFwiK0ZTLnN5bmNGU1JlcXVlc3RzK1wiIEZTLnN5bmNmcyBvcGVyYXRpb25zIGluIGZsaWdodCBhdCBvbmNlLCBwcm9iYWJseSBqdXN0IGRvaW5nIGV4dHJhIHdvcmtcIil9dmFyIG1vdW50cz1GUy5nZXRNb3VudHMoRlMucm9vdC5tb3VudCk7dmFyIGNvbXBsZXRlZD0wO2Z1bmN0aW9uIGRvQ2FsbGJhY2soZXJyKXthc3NlcnQoRlMuc3luY0ZTUmVxdWVzdHM+MCk7RlMuc3luY0ZTUmVxdWVzdHMtLTtyZXR1cm4gY2FsbGJhY2soZXJyKX1mdW5jdGlvbiBkb25lKGVycil7aWYoZXJyKXtpZighZG9uZS5lcnJvcmVkKXtkb25lLmVycm9yZWQ9dHJ1ZTtyZXR1cm4gZG9DYWxsYmFjayhlcnIpfXJldHVybn1pZigrK2NvbXBsZXRlZD49bW91bnRzLmxlbmd0aCl7ZG9DYWxsYmFjayhudWxsKX19bW91bnRzLmZvckVhY2goZnVuY3Rpb24obW91bnQpe2lmKCFtb3VudC50eXBlLnN5bmNmcyl7cmV0dXJuIGRvbmUobnVsbCl9bW91bnQudHlwZS5zeW5jZnMobW91bnQscG9wdWxhdGUsZG9uZSl9KX0sbW91bnQ6ZnVuY3Rpb24odHlwZSxvcHRzLG1vdW50cG9pbnQpe3ZhciByb290PW1vdW50cG9pbnQ9PT1cIi9cIjt2YXIgcHNldWRvPSFtb3VudHBvaW50O3ZhciBub2RlO2lmKHJvb3QmJkZTLnJvb3Qpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE2KX1lbHNlIGlmKCFyb290JiYhcHNldWRvKXt2YXIgbG9va3VwPUZTLmxvb2t1cFBhdGgobW91bnRwb2ludCx7Zm9sbG93X21vdW50OmZhbHNlfSk7bW91bnRwb2ludD1sb29rdXAucGF0aDtub2RlPWxvb2t1cC5ub2RlO2lmKEZTLmlzTW91bnRwb2ludChub2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMTYpfWlmKCFGUy5pc0Rpcihub2RlLm1vZGUpKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyMCl9fXZhciBtb3VudD17dHlwZTp0eXBlLG9wdHM6b3B0cyxtb3VudHBvaW50Om1vdW50cG9pbnQsbW91bnRzOltdfTt2YXIgbW91bnRSb290PXR5cGUubW91bnQobW91bnQpO21vdW50Um9vdC5tb3VudD1tb3VudDttb3VudC5yb290PW1vdW50Um9vdDtpZihyb290KXtGUy5yb290PW1vdW50Um9vdH1lbHNlIGlmKG5vZGUpe25vZGUubW91bnRlZD1tb3VudDtpZihub2RlLm1vdW50KXtub2RlLm1vdW50Lm1vdW50cy5wdXNoKG1vdW50KX19cmV0dXJuIG1vdW50Um9vdH0sdW5tb3VudDpmdW5jdGlvbihtb3VudHBvaW50KXt2YXIgbG9va3VwPUZTLmxvb2t1cFBhdGgobW91bnRwb2ludCx7Zm9sbG93X21vdW50OmZhbHNlfSk7aWYoIUZTLmlzTW91bnRwb2ludChsb29rdXAubm9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIyKX12YXIgbm9kZT1sb29rdXAubm9kZTt2YXIgbW91bnQ9bm9kZS5tb3VudGVkO3ZhciBtb3VudHM9RlMuZ2V0TW91bnRzKG1vdW50KTtPYmplY3Qua2V5cyhGUy5uYW1lVGFibGUpLmZvckVhY2goZnVuY3Rpb24oaGFzaCl7dmFyIGN1cnJlbnQ9RlMubmFtZVRhYmxlW2hhc2hdO3doaWxlKGN1cnJlbnQpe3ZhciBuZXh0PWN1cnJlbnQubmFtZV9uZXh0O2lmKG1vdW50cy5pbmRleE9mKGN1cnJlbnQubW91bnQpIT09LTEpe0ZTLmRlc3Ryb3lOb2RlKGN1cnJlbnQpfWN1cnJlbnQ9bmV4dH19KTtub2RlLm1vdW50ZWQ9bnVsbDt2YXIgaWR4PW5vZGUubW91bnQubW91bnRzLmluZGV4T2YobW91bnQpO2Fzc2VydChpZHghPT0tMSk7bm9kZS5tb3VudC5tb3VudHMuc3BsaWNlKGlkeCwxKX0sbG9va3VwOmZ1bmN0aW9uKHBhcmVudCxuYW1lKXtyZXR1cm4gcGFyZW50Lm5vZGVfb3BzLmxvb2t1cChwYXJlbnQsbmFtZSl9LG1rbm9kOmZ1bmN0aW9uKHBhdGgsbW9kZSxkZXYpe3ZhciBsb29rdXA9RlMubG9va3VwUGF0aChwYXRoLHtwYXJlbnQ6dHJ1ZX0pO3ZhciBwYXJlbnQ9bG9va3VwLm5vZGU7dmFyIG5hbWU9UEFUSC5iYXNlbmFtZShwYXRoKTtpZighbmFtZXx8bmFtZT09PVwiLlwifHxuYW1lPT09XCIuLlwiKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyMil9dmFyIGVycj1GUy5tYXlDcmVhdGUocGFyZW50LG5hbWUpO2lmKGVycil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoZXJyKX1pZighcGFyZW50Lm5vZGVfb3BzLm1rbm9kKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxKX1yZXR1cm4gcGFyZW50Lm5vZGVfb3BzLm1rbm9kKHBhcmVudCxuYW1lLG1vZGUsZGV2KX0sY3JlYXRlOmZ1bmN0aW9uKHBhdGgsbW9kZSl7bW9kZT1tb2RlIT09dW5kZWZpbmVkP21vZGU6NDM4O21vZGUmPTQwOTU7bW9kZXw9MzI3Njg7cmV0dXJuIEZTLm1rbm9kKHBhdGgsbW9kZSwwKX0sbWtkaXI6ZnVuY3Rpb24ocGF0aCxtb2RlKXttb2RlPW1vZGUhPT11bmRlZmluZWQ/bW9kZTo1MTE7bW9kZSY9NTExfDUxMjttb2RlfD0xNjM4NDtyZXR1cm4gRlMubWtub2QocGF0aCxtb2RlLDApfSxta2RpclRyZWU6ZnVuY3Rpb24ocGF0aCxtb2RlKXt2YXIgZGlycz1wYXRoLnNwbGl0KFwiL1wiKTt2YXIgZD1cIlwiO2Zvcih2YXIgaT0wO2k8ZGlycy5sZW5ndGg7KytpKXtpZighZGlyc1tpXSljb250aW51ZTtkKz1cIi9cIitkaXJzW2ldO3RyeXtGUy5ta2RpcihkLG1vZGUpfWNhdGNoKGUpe2lmKGUuZXJybm8hPTE3KXRocm93IGV9fX0sbWtkZXY6ZnVuY3Rpb24ocGF0aCxtb2RlLGRldil7aWYodHlwZW9mIGRldj09PVwidW5kZWZpbmVkXCIpe2Rldj1tb2RlO21vZGU9NDM4fW1vZGV8PTgxOTI7cmV0dXJuIEZTLm1rbm9kKHBhdGgsbW9kZSxkZXYpfSxzeW1saW5rOmZ1bmN0aW9uKG9sZHBhdGgsbmV3cGF0aCl7aWYoIVBBVEhfRlMucmVzb2x2ZShvbGRwYXRoKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMil9dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKG5ld3BhdGgse3BhcmVudDp0cnVlfSk7dmFyIHBhcmVudD1sb29rdXAubm9kZTtpZighcGFyZW50KXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyKX12YXIgbmV3bmFtZT1QQVRILmJhc2VuYW1lKG5ld3BhdGgpO3ZhciBlcnI9RlMubWF5Q3JlYXRlKHBhcmVudCxuZXduYW1lKTtpZihlcnIpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKGVycil9aWYoIXBhcmVudC5ub2RlX29wcy5zeW1saW5rKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxKX1yZXR1cm4gcGFyZW50Lm5vZGVfb3BzLnN5bWxpbmsocGFyZW50LG5ld25hbWUsb2xkcGF0aCl9LHJlbmFtZTpmdW5jdGlvbihvbGRfcGF0aCxuZXdfcGF0aCl7dmFyIG9sZF9kaXJuYW1lPVBBVEguZGlybmFtZShvbGRfcGF0aCk7dmFyIG5ld19kaXJuYW1lPVBBVEguZGlybmFtZShuZXdfcGF0aCk7dmFyIG9sZF9uYW1lPVBBVEguYmFzZW5hbWUob2xkX3BhdGgpO3ZhciBuZXdfbmFtZT1QQVRILmJhc2VuYW1lKG5ld19wYXRoKTt2YXIgbG9va3VwLG9sZF9kaXIsbmV3X2Rpcjt0cnl7bG9va3VwPUZTLmxvb2t1cFBhdGgob2xkX3BhdGgse3BhcmVudDp0cnVlfSk7b2xkX2Rpcj1sb29rdXAubm9kZTtsb29rdXA9RlMubG9va3VwUGF0aChuZXdfcGF0aCx7cGFyZW50OnRydWV9KTtuZXdfZGlyPWxvb2t1cC5ub2RlfWNhdGNoKGUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE2KX1pZighb2xkX2Rpcnx8IW5ld19kaXIpdGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMik7aWYob2xkX2Rpci5tb3VudCE9PW5ld19kaXIubW91bnQpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE4KX12YXIgb2xkX25vZGU9RlMubG9va3VwTm9kZShvbGRfZGlyLG9sZF9uYW1lKTt2YXIgcmVsYXRpdmU9UEFUSF9GUy5yZWxhdGl2ZShvbGRfcGF0aCxuZXdfZGlybmFtZSk7aWYocmVsYXRpdmUuY2hhckF0KDApIT09XCIuXCIpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIyKX1yZWxhdGl2ZT1QQVRIX0ZTLnJlbGF0aXZlKG5ld19wYXRoLG9sZF9kaXJuYW1lKTtpZihyZWxhdGl2ZS5jaGFyQXQoMCkhPT1cIi5cIil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMzkpfXZhciBuZXdfbm9kZTt0cnl7bmV3X25vZGU9RlMubG9va3VwTm9kZShuZXdfZGlyLG5ld19uYW1lKX1jYXRjaChlKXt9aWYob2xkX25vZGU9PT1uZXdfbm9kZSl7cmV0dXJufXZhciBpc2Rpcj1GUy5pc0RpcihvbGRfbm9kZS5tb2RlKTt2YXIgZXJyPUZTLm1heURlbGV0ZShvbGRfZGlyLG9sZF9uYW1lLGlzZGlyKTtpZihlcnIpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKGVycil9ZXJyPW5ld19ub2RlP0ZTLm1heURlbGV0ZShuZXdfZGlyLG5ld19uYW1lLGlzZGlyKTpGUy5tYXlDcmVhdGUobmV3X2RpcixuZXdfbmFtZSk7aWYoZXJyKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcihlcnIpfWlmKCFvbGRfZGlyLm5vZGVfb3BzLnJlbmFtZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMSl9aWYoRlMuaXNNb3VudHBvaW50KG9sZF9ub2RlKXx8bmV3X25vZGUmJkZTLmlzTW91bnRwb2ludChuZXdfbm9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE2KX1pZihuZXdfZGlyIT09b2xkX2Rpcil7ZXJyPUZTLm5vZGVQZXJtaXNzaW9ucyhvbGRfZGlyLFwid1wiKTtpZihlcnIpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKGVycil9fXRyeXtpZihGUy50cmFja2luZ0RlbGVnYXRlW1wid2lsbE1vdmVQYXRoXCJdKXtGUy50cmFja2luZ0RlbGVnYXRlW1wid2lsbE1vdmVQYXRoXCJdKG9sZF9wYXRoLG5ld19wYXRoKX19Y2F0Y2goZSl7Y29uc29sZS5sb2coXCJGUy50cmFja2luZ0RlbGVnYXRlWyd3aWxsTW92ZVBhdGgnXSgnXCIrb2xkX3BhdGgrXCInLCAnXCIrbmV3X3BhdGgrXCInKSB0aHJldyBhbiBleGNlcHRpb246IFwiK2UubWVzc2FnZSl9RlMuaGFzaFJlbW92ZU5vZGUob2xkX25vZGUpO3RyeXtvbGRfZGlyLm5vZGVfb3BzLnJlbmFtZShvbGRfbm9kZSxuZXdfZGlyLG5ld19uYW1lKX1jYXRjaChlKXt0aHJvdyBlfWZpbmFsbHl7RlMuaGFzaEFkZE5vZGUob2xkX25vZGUpfXRyeXtpZihGUy50cmFja2luZ0RlbGVnYXRlW1wib25Nb3ZlUGF0aFwiXSlGUy50cmFja2luZ0RlbGVnYXRlW1wib25Nb3ZlUGF0aFwiXShvbGRfcGF0aCxuZXdfcGF0aCl9Y2F0Y2goZSl7Y29uc29sZS5sb2coXCJGUy50cmFja2luZ0RlbGVnYXRlWydvbk1vdmVQYXRoJ10oJ1wiK29sZF9wYXRoK1wiJywgJ1wiK25ld19wYXRoK1wiJykgdGhyZXcgYW4gZXhjZXB0aW9uOiBcIitlLm1lc3NhZ2UpfX0scm1kaXI6ZnVuY3Rpb24ocGF0aCl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgse3BhcmVudDp0cnVlfSk7dmFyIHBhcmVudD1sb29rdXAubm9kZTt2YXIgbmFtZT1QQVRILmJhc2VuYW1lKHBhdGgpO3ZhciBub2RlPUZTLmxvb2t1cE5vZGUocGFyZW50LG5hbWUpO3ZhciBlcnI9RlMubWF5RGVsZXRlKHBhcmVudCxuYW1lLHRydWUpO2lmKGVycil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoZXJyKX1pZighcGFyZW50Lm5vZGVfb3BzLnJtZGlyKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxKX1pZihGUy5pc01vdW50cG9pbnQobm9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE2KX10cnl7aWYoRlMudHJhY2tpbmdEZWxlZ2F0ZVtcIndpbGxEZWxldGVQYXRoXCJdKXtGUy50cmFja2luZ0RlbGVnYXRlW1wid2lsbERlbGV0ZVBhdGhcIl0ocGF0aCl9fWNhdGNoKGUpe2NvbnNvbGUubG9nKFwiRlMudHJhY2tpbmdEZWxlZ2F0ZVsnd2lsbERlbGV0ZVBhdGgnXSgnXCIrcGF0aCtcIicpIHRocmV3IGFuIGV4Y2VwdGlvbjogXCIrZS5tZXNzYWdlKX1wYXJlbnQubm9kZV9vcHMucm1kaXIocGFyZW50LG5hbWUpO0ZTLmRlc3Ryb3lOb2RlKG5vZGUpO3RyeXtpZihGUy50cmFja2luZ0RlbGVnYXRlW1wib25EZWxldGVQYXRoXCJdKUZTLnRyYWNraW5nRGVsZWdhdGVbXCJvbkRlbGV0ZVBhdGhcIl0ocGF0aCl9Y2F0Y2goZSl7Y29uc29sZS5sb2coXCJGUy50cmFja2luZ0RlbGVnYXRlWydvbkRlbGV0ZVBhdGgnXSgnXCIrcGF0aCtcIicpIHRocmV3IGFuIGV4Y2VwdGlvbjogXCIrZS5tZXNzYWdlKX19LHJlYWRkaXI6ZnVuY3Rpb24ocGF0aCl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgse2ZvbGxvdzp0cnVlfSk7dmFyIG5vZGU9bG9va3VwLm5vZGU7aWYoIW5vZGUubm9kZV9vcHMucmVhZGRpcil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjApfXJldHVybiBub2RlLm5vZGVfb3BzLnJlYWRkaXIobm9kZSl9LHVubGluazpmdW5jdGlvbihwYXRoKXt2YXIgbG9va3VwPUZTLmxvb2t1cFBhdGgocGF0aCx7cGFyZW50OnRydWV9KTt2YXIgcGFyZW50PWxvb2t1cC5ub2RlO3ZhciBuYW1lPVBBVEguYmFzZW5hbWUocGF0aCk7dmFyIG5vZGU9RlMubG9va3VwTm9kZShwYXJlbnQsbmFtZSk7dmFyIGVycj1GUy5tYXlEZWxldGUocGFyZW50LG5hbWUsZmFsc2UpO2lmKGVycil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoZXJyKX1pZighcGFyZW50Lm5vZGVfb3BzLnVubGluayl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMSl9aWYoRlMuaXNNb3VudHBvaW50KG5vZGUpKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxNil9dHJ5e2lmKEZTLnRyYWNraW5nRGVsZWdhdGVbXCJ3aWxsRGVsZXRlUGF0aFwiXSl7RlMudHJhY2tpbmdEZWxlZ2F0ZVtcIndpbGxEZWxldGVQYXRoXCJdKHBhdGgpfX1jYXRjaChlKXtjb25zb2xlLmxvZyhcIkZTLnRyYWNraW5nRGVsZWdhdGVbJ3dpbGxEZWxldGVQYXRoJ10oJ1wiK3BhdGgrXCInKSB0aHJldyBhbiBleGNlcHRpb246IFwiK2UubWVzc2FnZSl9cGFyZW50Lm5vZGVfb3BzLnVubGluayhwYXJlbnQsbmFtZSk7RlMuZGVzdHJveU5vZGUobm9kZSk7dHJ5e2lmKEZTLnRyYWNraW5nRGVsZWdhdGVbXCJvbkRlbGV0ZVBhdGhcIl0pRlMudHJhY2tpbmdEZWxlZ2F0ZVtcIm9uRGVsZXRlUGF0aFwiXShwYXRoKX1jYXRjaChlKXtjb25zb2xlLmxvZyhcIkZTLnRyYWNraW5nRGVsZWdhdGVbJ29uRGVsZXRlUGF0aCddKCdcIitwYXRoK1wiJykgdGhyZXcgYW4gZXhjZXB0aW9uOiBcIitlLm1lc3NhZ2UpfX0scmVhZGxpbms6ZnVuY3Rpb24ocGF0aCl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgpO3ZhciBsaW5rPWxvb2t1cC5ub2RlO2lmKCFsaW5rKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyKX1pZighbGluay5ub2RlX29wcy5yZWFkbGluayl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfXJldHVybiBQQVRIX0ZTLnJlc29sdmUoRlMuZ2V0UGF0aChsaW5rLnBhcmVudCksbGluay5ub2RlX29wcy5yZWFkbGluayhsaW5rKSl9LHN0YXQ6ZnVuY3Rpb24ocGF0aCxkb250Rm9sbG93KXt2YXIgbG9va3VwPUZTLmxvb2t1cFBhdGgocGF0aCx7Zm9sbG93OiFkb250Rm9sbG93fSk7dmFyIG5vZGU9bG9va3VwLm5vZGU7aWYoIW5vZGUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIpfWlmKCFub2RlLm5vZGVfb3BzLmdldGF0dHIpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDEpfXJldHVybiBub2RlLm5vZGVfb3BzLmdldGF0dHIobm9kZSl9LGxzdGF0OmZ1bmN0aW9uKHBhdGgpe3JldHVybiBGUy5zdGF0KHBhdGgsdHJ1ZSl9LGNobW9kOmZ1bmN0aW9uKHBhdGgsbW9kZSxkb250Rm9sbG93KXt2YXIgbm9kZTtpZih0eXBlb2YgcGF0aD09PVwic3RyaW5nXCIpe3ZhciBsb29rdXA9RlMubG9va3VwUGF0aChwYXRoLHtmb2xsb3c6IWRvbnRGb2xsb3d9KTtub2RlPWxvb2t1cC5ub2RlfWVsc2V7bm9kZT1wYXRofWlmKCFub2RlLm5vZGVfb3BzLnNldGF0dHIpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDEpfW5vZGUubm9kZV9vcHMuc2V0YXR0cihub2RlLHttb2RlOm1vZGUmNDA5NXxub2RlLm1vZGUmfjQwOTUsdGltZXN0YW1wOkRhdGUubm93KCl9KX0sbGNobW9kOmZ1bmN0aW9uKHBhdGgsbW9kZSl7RlMuY2htb2QocGF0aCxtb2RlLHRydWUpfSxmY2htb2Q6ZnVuY3Rpb24oZmQsbW9kZSl7dmFyIHN0cmVhbT1GUy5nZXRTdHJlYW0oZmQpO2lmKCFzdHJlYW0pe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDkpfUZTLmNobW9kKHN0cmVhbS5ub2RlLG1vZGUpfSxjaG93bjpmdW5jdGlvbihwYXRoLHVpZCxnaWQsZG9udEZvbGxvdyl7dmFyIG5vZGU7aWYodHlwZW9mIHBhdGg9PT1cInN0cmluZ1wiKXt2YXIgbG9va3VwPUZTLmxvb2t1cFBhdGgocGF0aCx7Zm9sbG93OiFkb250Rm9sbG93fSk7bm9kZT1sb29rdXAubm9kZX1lbHNle25vZGU9cGF0aH1pZighbm9kZS5ub2RlX29wcy5zZXRhdHRyKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxKX1ub2RlLm5vZGVfb3BzLnNldGF0dHIobm9kZSx7dGltZXN0YW1wOkRhdGUubm93KCl9KX0sbGNob3duOmZ1bmN0aW9uKHBhdGgsdWlkLGdpZCl7RlMuY2hvd24ocGF0aCx1aWQsZ2lkLHRydWUpfSxmY2hvd246ZnVuY3Rpb24oZmQsdWlkLGdpZCl7dmFyIHN0cmVhbT1GUy5nZXRTdHJlYW0oZmQpO2lmKCFzdHJlYW0pe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDkpfUZTLmNob3duKHN0cmVhbS5ub2RlLHVpZCxnaWQpfSx0cnVuY2F0ZTpmdW5jdGlvbihwYXRoLGxlbil7aWYobGVuPDApe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIyKX12YXIgbm9kZTtpZih0eXBlb2YgcGF0aD09PVwic3RyaW5nXCIpe3ZhciBsb29rdXA9RlMubG9va3VwUGF0aChwYXRoLHtmb2xsb3c6dHJ1ZX0pO25vZGU9bG9va3VwLm5vZGV9ZWxzZXtub2RlPXBhdGh9aWYoIW5vZGUubm9kZV9vcHMuc2V0YXR0cil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMSl9aWYoRlMuaXNEaXIobm9kZS5tb2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjEpfWlmKCFGUy5pc0ZpbGUobm9kZS5tb2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfXZhciBlcnI9RlMubm9kZVBlcm1pc3Npb25zKG5vZGUsXCJ3XCIpO2lmKGVycil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoZXJyKX1ub2RlLm5vZGVfb3BzLnNldGF0dHIobm9kZSx7c2l6ZTpsZW4sdGltZXN0YW1wOkRhdGUubm93KCl9KX0sZnRydW5jYXRlOmZ1bmN0aW9uKGZkLGxlbil7dmFyIHN0cmVhbT1GUy5nZXRTdHJlYW0oZmQpO2lmKCFzdHJlYW0pe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDkpfWlmKChzdHJlYW0uZmxhZ3MmMjA5NzE1NSk9PT0wKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyMil9RlMudHJ1bmNhdGUoc3RyZWFtLm5vZGUsbGVuKX0sdXRpbWU6ZnVuY3Rpb24ocGF0aCxhdGltZSxtdGltZSl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgse2ZvbGxvdzp0cnVlfSk7dmFyIG5vZGU9bG9va3VwLm5vZGU7bm9kZS5ub2RlX29wcy5zZXRhdHRyKG5vZGUse3RpbWVzdGFtcDpNYXRoLm1heChhdGltZSxtdGltZSl9KX0sb3BlbjpmdW5jdGlvbihwYXRoLGZsYWdzLG1vZGUsZmRfc3RhcnQsZmRfZW5kKXtpZihwYXRoPT09XCJcIil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMil9ZmxhZ3M9dHlwZW9mIGZsYWdzPT09XCJzdHJpbmdcIj9GUy5tb2RlU3RyaW5nVG9GbGFncyhmbGFncyk6ZmxhZ3M7bW9kZT10eXBlb2YgbW9kZT09PVwidW5kZWZpbmVkXCI/NDM4Om1vZGU7aWYoZmxhZ3MmNjQpe21vZGU9bW9kZSY0MDk1fDMyNzY4fWVsc2V7bW9kZT0wfXZhciBub2RlO2lmKHR5cGVvZiBwYXRoPT09XCJvYmplY3RcIil7bm9kZT1wYXRofWVsc2V7cGF0aD1QQVRILm5vcm1hbGl6ZShwYXRoKTt0cnl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgse2ZvbGxvdzohKGZsYWdzJjEzMTA3Mil9KTtub2RlPWxvb2t1cC5ub2RlfWNhdGNoKGUpe319dmFyIGNyZWF0ZWQ9ZmFsc2U7aWYoZmxhZ3MmNjQpe2lmKG5vZGUpe2lmKGZsYWdzJjEyOCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMTcpfX1lbHNle25vZGU9RlMubWtub2QocGF0aCxtb2RlLDApO2NyZWF0ZWQ9dHJ1ZX19aWYoIW5vZGUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIpfWlmKEZTLmlzQ2hyZGV2KG5vZGUubW9kZSkpe2ZsYWdzJj1+NTEyfWlmKGZsYWdzJjY1NTM2JiYhRlMuaXNEaXIobm9kZS5tb2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjApfWlmKCFjcmVhdGVkKXt2YXIgZXJyPUZTLm1heU9wZW4obm9kZSxmbGFncyk7aWYoZXJyKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcihlcnIpfX1pZihmbGFncyY1MTIpe0ZTLnRydW5jYXRlKG5vZGUsMCl9ZmxhZ3MmPX4oMTI4fDUxMik7dmFyIHN0cmVhbT1GUy5jcmVhdGVTdHJlYW0oe25vZGU6bm9kZSxwYXRoOkZTLmdldFBhdGgobm9kZSksZmxhZ3M6ZmxhZ3Msc2Vla2FibGU6dHJ1ZSxwb3NpdGlvbjowLHN0cmVhbV9vcHM6bm9kZS5zdHJlYW1fb3BzLHVuZ290dGVuOltdLGVycm9yOmZhbHNlfSxmZF9zdGFydCxmZF9lbmQpO2lmKHN0cmVhbS5zdHJlYW1fb3BzLm9wZW4pe3N0cmVhbS5zdHJlYW1fb3BzLm9wZW4oc3RyZWFtKX1pZihNb2R1bGVbXCJsb2dSZWFkRmlsZXNcIl0mJiEoZmxhZ3MmMSkpe2lmKCFGUy5yZWFkRmlsZXMpRlMucmVhZEZpbGVzPXt9O2lmKCEocGF0aCBpbiBGUy5yZWFkRmlsZXMpKXtGUy5yZWFkRmlsZXNbcGF0aF09MTtjb25zb2xlLmxvZyhcIkZTLnRyYWNraW5nRGVsZWdhdGUgZXJyb3Igb24gcmVhZCBmaWxlOiBcIitwYXRoKX19dHJ5e2lmKEZTLnRyYWNraW5nRGVsZWdhdGVbXCJvbk9wZW5GaWxlXCJdKXt2YXIgdHJhY2tpbmdGbGFncz0wO2lmKChmbGFncyYyMDk3MTU1KSE9PTEpe3RyYWNraW5nRmxhZ3N8PUZTLnRyYWNraW5nLm9wZW5GbGFncy5SRUFEfWlmKChmbGFncyYyMDk3MTU1KSE9PTApe3RyYWNraW5nRmxhZ3N8PUZTLnRyYWNraW5nLm9wZW5GbGFncy5XUklURX1GUy50cmFja2luZ0RlbGVnYXRlW1wib25PcGVuRmlsZVwiXShwYXRoLHRyYWNraW5nRmxhZ3MpfX1jYXRjaChlKXtjb25zb2xlLmxvZyhcIkZTLnRyYWNraW5nRGVsZWdhdGVbJ29uT3BlbkZpbGUnXSgnXCIrcGF0aCtcIicsIGZsYWdzKSB0aHJldyBhbiBleGNlcHRpb246IFwiK2UubWVzc2FnZSl9cmV0dXJuIHN0cmVhbX0sY2xvc2U6ZnVuY3Rpb24oc3RyZWFtKXtpZihGUy5pc0Nsb3NlZChzdHJlYW0pKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig5KX1pZihzdHJlYW0uZ2V0ZGVudHMpc3RyZWFtLmdldGRlbnRzPW51bGw7dHJ5e2lmKHN0cmVhbS5zdHJlYW1fb3BzLmNsb3NlKXtzdHJlYW0uc3RyZWFtX29wcy5jbG9zZShzdHJlYW0pfX1jYXRjaChlKXt0aHJvdyBlfWZpbmFsbHl7RlMuY2xvc2VTdHJlYW0oc3RyZWFtLmZkKX1zdHJlYW0uZmQ9bnVsbH0saXNDbG9zZWQ6ZnVuY3Rpb24oc3RyZWFtKXtyZXR1cm4gc3RyZWFtLmZkPT09bnVsbH0sbGxzZWVrOmZ1bmN0aW9uKHN0cmVhbSxvZmZzZXQsd2hlbmNlKXtpZihGUy5pc0Nsb3NlZChzdHJlYW0pKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig5KX1pZighc3RyZWFtLnNlZWthYmxlfHwhc3RyZWFtLnN0cmVhbV9vcHMubGxzZWVrKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyOSl9aWYod2hlbmNlIT0wJiZ3aGVuY2UhPTEmJndoZW5jZSE9Mil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfXN0cmVhbS5wb3NpdGlvbj1zdHJlYW0uc3RyZWFtX29wcy5sbHNlZWsoc3RyZWFtLG9mZnNldCx3aGVuY2UpO3N0cmVhbS51bmdvdHRlbj1bXTtyZXR1cm4gc3RyZWFtLnBvc2l0aW9ufSxyZWFkOmZ1bmN0aW9uKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxwb3NpdGlvbil7aWYobGVuZ3RoPDB8fHBvc2l0aW9uPDApe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIyKX1pZihGUy5pc0Nsb3NlZChzdHJlYW0pKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig5KX1pZigoc3RyZWFtLmZsYWdzJjIwOTcxNTUpPT09MSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoOSl9aWYoRlMuaXNEaXIoc3RyZWFtLm5vZGUubW9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIxKX1pZighc3RyZWFtLnN0cmVhbV9vcHMucmVhZCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfXZhciBzZWVraW5nPXR5cGVvZiBwb3NpdGlvbiE9PVwidW5kZWZpbmVkXCI7aWYoIXNlZWtpbmcpe3Bvc2l0aW9uPXN0cmVhbS5wb3NpdGlvbn1lbHNlIGlmKCFzdHJlYW0uc2Vla2FibGUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDI5KX12YXIgYnl0ZXNSZWFkPXN0cmVhbS5zdHJlYW1fb3BzLnJlYWQoc3RyZWFtLGJ1ZmZlcixvZmZzZXQsbGVuZ3RoLHBvc2l0aW9uKTtpZighc2Vla2luZylzdHJlYW0ucG9zaXRpb24rPWJ5dGVzUmVhZDtyZXR1cm4gYnl0ZXNSZWFkfSx3cml0ZTpmdW5jdGlvbihzdHJlYW0sYnVmZmVyLG9mZnNldCxsZW5ndGgscG9zaXRpb24sY2FuT3duKXtpZihsZW5ndGg8MHx8cG9zaXRpb248MCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfWlmKEZTLmlzQ2xvc2VkKHN0cmVhbSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDkpfWlmKChzdHJlYW0uZmxhZ3MmMjA5NzE1NSk9PT0wKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig5KX1pZihGUy5pc0RpcihzdHJlYW0ubm9kZS5tb2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjEpfWlmKCFzdHJlYW0uc3RyZWFtX29wcy53cml0ZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjIpfWlmKHN0cmVhbS5mbGFncyYxMDI0KXtGUy5sbHNlZWsoc3RyZWFtLDAsMil9dmFyIHNlZWtpbmc9dHlwZW9mIHBvc2l0aW9uIT09XCJ1bmRlZmluZWRcIjtpZighc2Vla2luZyl7cG9zaXRpb249c3RyZWFtLnBvc2l0aW9ufWVsc2UgaWYoIXN0cmVhbS5zZWVrYWJsZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjkpfXZhciBieXRlc1dyaXR0ZW49c3RyZWFtLnN0cmVhbV9vcHMud3JpdGUoc3RyZWFtLGJ1ZmZlcixvZmZzZXQsbGVuZ3RoLHBvc2l0aW9uLGNhbk93bik7aWYoIXNlZWtpbmcpc3RyZWFtLnBvc2l0aW9uKz1ieXRlc1dyaXR0ZW47dHJ5e2lmKHN0cmVhbS5wYXRoJiZGUy50cmFja2luZ0RlbGVnYXRlW1wib25Xcml0ZVRvRmlsZVwiXSlGUy50cmFja2luZ0RlbGVnYXRlW1wib25Xcml0ZVRvRmlsZVwiXShzdHJlYW0ucGF0aCl9Y2F0Y2goZSl7Y29uc29sZS5sb2coXCJGUy50cmFja2luZ0RlbGVnYXRlWydvbldyaXRlVG9GaWxlJ10oJ1wiK3N0cmVhbS5wYXRoK1wiJykgdGhyZXcgYW4gZXhjZXB0aW9uOiBcIitlLm1lc3NhZ2UpfXJldHVybiBieXRlc1dyaXR0ZW59LGFsbG9jYXRlOmZ1bmN0aW9uKHN0cmVhbSxvZmZzZXQsbGVuZ3RoKXtpZihGUy5pc0Nsb3NlZChzdHJlYW0pKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig5KX1pZihvZmZzZXQ8MHx8bGVuZ3RoPD0wKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyMil9aWYoKHN0cmVhbS5mbGFncyYyMDk3MTU1KT09PTApe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDkpfWlmKCFGUy5pc0ZpbGUoc3RyZWFtLm5vZGUubW9kZSkmJiFGUy5pc0RpcihzdHJlYW0ubm9kZS5tb2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMTkpfWlmKCFzdHJlYW0uc3RyZWFtX29wcy5hbGxvY2F0ZSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoOTUpfXN0cmVhbS5zdHJlYW1fb3BzLmFsbG9jYXRlKHN0cmVhbSxvZmZzZXQsbGVuZ3RoKX0sbW1hcDpmdW5jdGlvbihzdHJlYW0sYnVmZmVyLG9mZnNldCxsZW5ndGgscG9zaXRpb24scHJvdCxmbGFncyl7aWYoKHByb3QmMikhPT0wJiYoZmxhZ3MmMik9PT0wJiYoc3RyZWFtLmZsYWdzJjIwOTcxNTUpIT09Mil7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMTMpfWlmKChzdHJlYW0uZmxhZ3MmMjA5NzE1NSk9PT0xKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigxMyl9aWYoIXN0cmVhbS5zdHJlYW1fb3BzLm1tYXApe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDE5KX1yZXR1cm4gc3RyZWFtLnN0cmVhbV9vcHMubW1hcChzdHJlYW0sYnVmZmVyLG9mZnNldCxsZW5ndGgscG9zaXRpb24scHJvdCxmbGFncyl9LG1zeW5jOmZ1bmN0aW9uKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxtbWFwRmxhZ3Mpe2lmKCFzdHJlYW18fCFzdHJlYW0uc3RyZWFtX29wcy5tc3luYyl7cmV0dXJuIDB9cmV0dXJuIHN0cmVhbS5zdHJlYW1fb3BzLm1zeW5jKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxtbWFwRmxhZ3MpfSxtdW5tYXA6ZnVuY3Rpb24oc3RyZWFtKXtyZXR1cm4gMH0saW9jdGw6ZnVuY3Rpb24oc3RyZWFtLGNtZCxhcmcpe2lmKCFzdHJlYW0uc3RyZWFtX29wcy5pb2N0bCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMjUpfXJldHVybiBzdHJlYW0uc3RyZWFtX29wcy5pb2N0bChzdHJlYW0sY21kLGFyZyl9LHJlYWRGaWxlOmZ1bmN0aW9uKHBhdGgsb3B0cyl7b3B0cz1vcHRzfHx7fTtvcHRzLmZsYWdzPW9wdHMuZmxhZ3N8fFwiclwiO29wdHMuZW5jb2Rpbmc9b3B0cy5lbmNvZGluZ3x8XCJiaW5hcnlcIjtpZihvcHRzLmVuY29kaW5nIT09XCJ1dGY4XCImJm9wdHMuZW5jb2RpbmchPT1cImJpbmFyeVwiKXt0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RpbmcgdHlwZSBcIicrb3B0cy5lbmNvZGluZysnXCInKX12YXIgcmV0O3ZhciBzdHJlYW09RlMub3BlbihwYXRoLG9wdHMuZmxhZ3MpO3ZhciBzdGF0PUZTLnN0YXQocGF0aCk7dmFyIGxlbmd0aD1zdGF0LnNpemU7dmFyIGJ1Zj1uZXcgVWludDhBcnJheShsZW5ndGgpO0ZTLnJlYWQoc3RyZWFtLGJ1ZiwwLGxlbmd0aCwwKTtpZihvcHRzLmVuY29kaW5nPT09XCJ1dGY4XCIpe3JldD1VVEY4QXJyYXlUb1N0cmluZyhidWYsMCl9ZWxzZSBpZihvcHRzLmVuY29kaW5nPT09XCJiaW5hcnlcIil7cmV0PWJ1Zn1GUy5jbG9zZShzdHJlYW0pO3JldHVybiByZXR9LHdyaXRlRmlsZTpmdW5jdGlvbihwYXRoLGRhdGEsb3B0cyl7b3B0cz1vcHRzfHx7fTtvcHRzLmZsYWdzPW9wdHMuZmxhZ3N8fFwid1wiO3ZhciBzdHJlYW09RlMub3BlbihwYXRoLG9wdHMuZmxhZ3Msb3B0cy5tb2RlKTtpZih0eXBlb2YgZGF0YT09PVwic3RyaW5nXCIpe3ZhciBidWY9bmV3IFVpbnQ4QXJyYXkobGVuZ3RoQnl0ZXNVVEY4KGRhdGEpKzEpO3ZhciBhY3R1YWxOdW1CeXRlcz1zdHJpbmdUb1VURjhBcnJheShkYXRhLGJ1ZiwwLGJ1Zi5sZW5ndGgpO0ZTLndyaXRlKHN0cmVhbSxidWYsMCxhY3R1YWxOdW1CeXRlcyx1bmRlZmluZWQsb3B0cy5jYW5Pd24pfWVsc2UgaWYoQXJyYXlCdWZmZXIuaXNWaWV3KGRhdGEpKXtGUy53cml0ZShzdHJlYW0sZGF0YSwwLGRhdGEuYnl0ZUxlbmd0aCx1bmRlZmluZWQsb3B0cy5jYW5Pd24pfWVsc2V7dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgZGF0YSB0eXBlXCIpfUZTLmNsb3NlKHN0cmVhbSl9LGN3ZDpmdW5jdGlvbigpe3JldHVybiBGUy5jdXJyZW50UGF0aH0sY2hkaXI6ZnVuY3Rpb24ocGF0aCl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgse2ZvbGxvdzp0cnVlfSk7aWYobG9va3VwLm5vZGU9PT1udWxsKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcigyKX1pZighRlMuaXNEaXIobG9va3VwLm5vZGUubW9kZSkpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDIwKX12YXIgZXJyPUZTLm5vZGVQZXJtaXNzaW9ucyhsb29rdXAubm9kZSxcInhcIik7aWYoZXJyKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcihlcnIpfUZTLmN1cnJlbnRQYXRoPWxvb2t1cC5wYXRofSxjcmVhdGVEZWZhdWx0RGlyZWN0b3JpZXM6ZnVuY3Rpb24oKXtGUy5ta2RpcihcIi90bXBcIik7RlMubWtkaXIoXCIvaG9tZVwiKTtGUy5ta2RpcihcIi9ob21lL3dlYl91c2VyXCIpfSxjcmVhdGVEZWZhdWx0RGV2aWNlczpmdW5jdGlvbigpe0ZTLm1rZGlyKFwiL2RldlwiKTtGUy5yZWdpc3RlckRldmljZShGUy5tYWtlZGV2KDEsMykse3JlYWQ6ZnVuY3Rpb24oKXtyZXR1cm4gMH0sd3JpdGU6ZnVuY3Rpb24oc3RyZWFtLGJ1ZmZlcixvZmZzZXQsbGVuZ3RoLHBvcyl7cmV0dXJuIGxlbmd0aH19KTtGUy5ta2RldihcIi9kZXYvbnVsbFwiLEZTLm1ha2VkZXYoMSwzKSk7VFRZLnJlZ2lzdGVyKEZTLm1ha2VkZXYoNSwwKSxUVFkuZGVmYXVsdF90dHlfb3BzKTtUVFkucmVnaXN0ZXIoRlMubWFrZWRldig2LDApLFRUWS5kZWZhdWx0X3R0eTFfb3BzKTtGUy5ta2RldihcIi9kZXYvdHR5XCIsRlMubWFrZWRldig1LDApKTtGUy5ta2RldihcIi9kZXYvdHR5MVwiLEZTLm1ha2VkZXYoNiwwKSk7dmFyIHJhbmRvbV9kZXZpY2U7aWYodHlwZW9mIGNyeXB0bz09PVwib2JqZWN0XCImJnR5cGVvZiBjcnlwdG9bXCJnZXRSYW5kb21WYWx1ZXNcIl09PT1cImZ1bmN0aW9uXCIpe3ZhciByYW5kb21CdWZmZXI9bmV3IFVpbnQ4QXJyYXkoMSk7cmFuZG9tX2RldmljZT1mdW5jdGlvbigpe2NyeXB0by5nZXRSYW5kb21WYWx1ZXMocmFuZG9tQnVmZmVyKTtyZXR1cm4gcmFuZG9tQnVmZmVyWzBdfX1lbHNlIGlmKEVOVklST05NRU5UX0lTX05PREUpe3RyeXt2YXIgY3J5cHRvX21vZHVsZT1yZXF1aXJlKFwiY3J5cHRvXCIpO3JhbmRvbV9kZXZpY2U9ZnVuY3Rpb24oKXtyZXR1cm4gY3J5cHRvX21vZHVsZVtcInJhbmRvbUJ5dGVzXCJdKDEpWzBdfX1jYXRjaChlKXt9fWVsc2V7fWlmKCFyYW5kb21fZGV2aWNlKXtyYW5kb21fZGV2aWNlPWZ1bmN0aW9uKCl7YWJvcnQoXCJubyBjcnlwdG9ncmFwaGljIHN1cHBvcnQgZm91bmQgZm9yIHJhbmRvbV9kZXZpY2UuIGNvbnNpZGVyIHBvbHlmaWxsaW5nIGl0IGlmIHlvdSB3YW50IHRvIHVzZSBzb21ldGhpbmcgaW5zZWN1cmUgbGlrZSBNYXRoLnJhbmRvbSgpLCBlLmcuIHB1dCB0aGlzIGluIGEgLS1wcmUtanM6IHZhciBjcnlwdG8gPSB7IGdldFJhbmRvbVZhbHVlczogZnVuY3Rpb24oYXJyYXkpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykgYXJyYXlbaV0gPSAoTWF0aC5yYW5kb20oKSoyNTYpfDAgfSB9O1wiKX19RlMuY3JlYXRlRGV2aWNlKFwiL2RldlwiLFwicmFuZG9tXCIscmFuZG9tX2RldmljZSk7RlMuY3JlYXRlRGV2aWNlKFwiL2RldlwiLFwidXJhbmRvbVwiLHJhbmRvbV9kZXZpY2UpO0ZTLm1rZGlyKFwiL2Rldi9zaG1cIik7RlMubWtkaXIoXCIvZGV2L3NobS90bXBcIil9LGNyZWF0ZVNwZWNpYWxEaXJlY3RvcmllczpmdW5jdGlvbigpe0ZTLm1rZGlyKFwiL3Byb2NcIik7RlMubWtkaXIoXCIvcHJvYy9zZWxmXCIpO0ZTLm1rZGlyKFwiL3Byb2Mvc2VsZi9mZFwiKTtGUy5tb3VudCh7bW91bnQ6ZnVuY3Rpb24oKXt2YXIgbm9kZT1GUy5jcmVhdGVOb2RlKFwiL3Byb2Mvc2VsZlwiLFwiZmRcIiwxNjM4NHw1MTEsNzMpO25vZGUubm9kZV9vcHM9e2xvb2t1cDpmdW5jdGlvbihwYXJlbnQsbmFtZSl7dmFyIGZkPStuYW1lO3ZhciBzdHJlYW09RlMuZ2V0U3RyZWFtKGZkKTtpZighc3RyZWFtKXRocm93IG5ldyBGUy5FcnJub0Vycm9yKDkpO3ZhciByZXQ9e3BhcmVudDpudWxsLG1vdW50Onttb3VudHBvaW50OlwiZmFrZVwifSxub2RlX29wczp7cmVhZGxpbms6ZnVuY3Rpb24oKXtyZXR1cm4gc3RyZWFtLnBhdGh9fX07cmV0LnBhcmVudD1yZXQ7cmV0dXJuIHJldH19O3JldHVybiBub2RlfX0se30sXCIvcHJvYy9zZWxmL2ZkXCIpfSxjcmVhdGVTdGFuZGFyZFN0cmVhbXM6ZnVuY3Rpb24oKXtpZihNb2R1bGVbXCJzdGRpblwiXSl7RlMuY3JlYXRlRGV2aWNlKFwiL2RldlwiLFwic3RkaW5cIixNb2R1bGVbXCJzdGRpblwiXSl9ZWxzZXtGUy5zeW1saW5rKFwiL2Rldi90dHlcIixcIi9kZXYvc3RkaW5cIil9aWYoTW9kdWxlW1wic3Rkb3V0XCJdKXtGUy5jcmVhdGVEZXZpY2UoXCIvZGV2XCIsXCJzdGRvdXRcIixudWxsLE1vZHVsZVtcInN0ZG91dFwiXSl9ZWxzZXtGUy5zeW1saW5rKFwiL2Rldi90dHlcIixcIi9kZXYvc3Rkb3V0XCIpfWlmKE1vZHVsZVtcInN0ZGVyclwiXSl7RlMuY3JlYXRlRGV2aWNlKFwiL2RldlwiLFwic3RkZXJyXCIsbnVsbCxNb2R1bGVbXCJzdGRlcnJcIl0pfWVsc2V7RlMuc3ltbGluayhcIi9kZXYvdHR5MVwiLFwiL2Rldi9zdGRlcnJcIil9dmFyIHN0ZGluPUZTLm9wZW4oXCIvZGV2L3N0ZGluXCIsXCJyXCIpO3ZhciBzdGRvdXQ9RlMub3BlbihcIi9kZXYvc3Rkb3V0XCIsXCJ3XCIpO3ZhciBzdGRlcnI9RlMub3BlbihcIi9kZXYvc3RkZXJyXCIsXCJ3XCIpO2Fzc2VydChzdGRpbi5mZD09PTAsXCJpbnZhbGlkIGhhbmRsZSBmb3Igc3RkaW4gKFwiK3N0ZGluLmZkK1wiKVwiKTthc3NlcnQoc3Rkb3V0LmZkPT09MSxcImludmFsaWQgaGFuZGxlIGZvciBzdGRvdXQgKFwiK3N0ZG91dC5mZCtcIilcIik7YXNzZXJ0KHN0ZGVyci5mZD09PTIsXCJpbnZhbGlkIGhhbmRsZSBmb3Igc3RkZXJyIChcIitzdGRlcnIuZmQrXCIpXCIpfSxlbnN1cmVFcnJub0Vycm9yOmZ1bmN0aW9uKCl7aWYoRlMuRXJybm9FcnJvcilyZXR1cm47RlMuRXJybm9FcnJvcj1mdW5jdGlvbiBFcnJub0Vycm9yKGVycm5vLG5vZGUpe3RoaXMubm9kZT1ub2RlO3RoaXMuc2V0RXJybm89ZnVuY3Rpb24oZXJybm8pe3RoaXMuZXJybm89ZXJybm87Zm9yKHZhciBrZXkgaW4gRVJSTk9fQ09ERVMpe2lmKEVSUk5PX0NPREVTW2tleV09PT1lcnJubyl7dGhpcy5jb2RlPWtleTticmVha319fTt0aGlzLnNldEVycm5vKGVycm5vKTt0aGlzLm1lc3NhZ2U9RVJSTk9fTUVTU0FHRVNbZXJybm9dO2lmKHRoaXMuc3RhY2spe09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwic3RhY2tcIix7dmFsdWU6KG5ldyBFcnJvcikuc3RhY2ssd3JpdGFibGU6dHJ1ZX0pO3RoaXMuc3RhY2s9ZGVtYW5nbGVBbGwodGhpcy5zdGFjayl9fTtGUy5FcnJub0Vycm9yLnByb3RvdHlwZT1uZXcgRXJyb3I7RlMuRXJybm9FcnJvci5wcm90b3R5cGUuY29uc3RydWN0b3I9RlMuRXJybm9FcnJvcjtbMl0uZm9yRWFjaChmdW5jdGlvbihjb2RlKXtGUy5nZW5lcmljRXJyb3JzW2NvZGVdPW5ldyBGUy5FcnJub0Vycm9yKGNvZGUpO0ZTLmdlbmVyaWNFcnJvcnNbY29kZV0uc3RhY2s9XCI8Z2VuZXJpYyBlcnJvciwgbm8gc3RhY2s+XCJ9KX0sc3RhdGljSW5pdDpmdW5jdGlvbigpe0ZTLmVuc3VyZUVycm5vRXJyb3IoKTtGUy5uYW1lVGFibGU9bmV3IEFycmF5KDQwOTYpO0ZTLm1vdW50KE1FTUZTLHt9LFwiL1wiKTtGUy5jcmVhdGVEZWZhdWx0RGlyZWN0b3JpZXMoKTtGUy5jcmVhdGVEZWZhdWx0RGV2aWNlcygpO0ZTLmNyZWF0ZVNwZWNpYWxEaXJlY3RvcmllcygpO0ZTLmZpbGVzeXN0ZW1zPXtcIk1FTUZTXCI6TUVNRlMsXCJJREJGU1wiOklEQkZTLFwiTk9ERUZTXCI6Tk9ERUZTLFwiV09SS0VSRlNcIjpXT1JLRVJGU319LGluaXQ6ZnVuY3Rpb24oaW5wdXQsb3V0cHV0LGVycm9yKXthc3NlcnQoIUZTLmluaXQuaW5pdGlhbGl6ZWQsXCJGUy5pbml0IHdhcyBwcmV2aW91c2x5IGNhbGxlZC4gSWYgeW91IHdhbnQgdG8gaW5pdGlhbGl6ZSBsYXRlciB3aXRoIGN1c3RvbSBwYXJhbWV0ZXJzLCByZW1vdmUgYW55IGVhcmxpZXIgY2FsbHMgKG5vdGUgdGhhdCBvbmUgaXMgYXV0b21hdGljYWxseSBhZGRlZCB0byB0aGUgZ2VuZXJhdGVkIGNvZGUpXCIpO0ZTLmluaXQuaW5pdGlhbGl6ZWQ9dHJ1ZTtGUy5lbnN1cmVFcnJub0Vycm9yKCk7TW9kdWxlW1wic3RkaW5cIl09aW5wdXR8fE1vZHVsZVtcInN0ZGluXCJdO01vZHVsZVtcInN0ZG91dFwiXT1vdXRwdXR8fE1vZHVsZVtcInN0ZG91dFwiXTtNb2R1bGVbXCJzdGRlcnJcIl09ZXJyb3J8fE1vZHVsZVtcInN0ZGVyclwiXTtGUy5jcmVhdGVTdGFuZGFyZFN0cmVhbXMoKX0scXVpdDpmdW5jdGlvbigpe0ZTLmluaXQuaW5pdGlhbGl6ZWQ9ZmFsc2U7dmFyIGZmbHVzaD1Nb2R1bGVbXCJfZmZsdXNoXCJdO2lmKGZmbHVzaClmZmx1c2goMCk7Zm9yKHZhciBpPTA7aTxGUy5zdHJlYW1zLmxlbmd0aDtpKyspe3ZhciBzdHJlYW09RlMuc3RyZWFtc1tpXTtpZighc3RyZWFtKXtjb250aW51ZX1GUy5jbG9zZShzdHJlYW0pfX0sZ2V0TW9kZTpmdW5jdGlvbihjYW5SZWFkLGNhbldyaXRlKXt2YXIgbW9kZT0wO2lmKGNhblJlYWQpbW9kZXw9MjkyfDczO2lmKGNhbldyaXRlKW1vZGV8PTE0NjtyZXR1cm4gbW9kZX0sam9pblBhdGg6ZnVuY3Rpb24ocGFydHMsZm9yY2VSZWxhdGl2ZSl7dmFyIHBhdGg9UEFUSC5qb2luLmFwcGx5KG51bGwscGFydHMpO2lmKGZvcmNlUmVsYXRpdmUmJnBhdGhbMF09PVwiL1wiKXBhdGg9cGF0aC5zdWJzdHIoMSk7cmV0dXJuIHBhdGh9LGFic29sdXRlUGF0aDpmdW5jdGlvbihyZWxhdGl2ZSxiYXNlKXtyZXR1cm4gUEFUSF9GUy5yZXNvbHZlKGJhc2UscmVsYXRpdmUpfSxzdGFuZGFyZGl6ZVBhdGg6ZnVuY3Rpb24ocGF0aCl7cmV0dXJuIFBBVEgubm9ybWFsaXplKHBhdGgpfSxmaW5kT2JqZWN0OmZ1bmN0aW9uKHBhdGgsZG9udFJlc29sdmVMYXN0TGluayl7dmFyIHJldD1GUy5hbmFseXplUGF0aChwYXRoLGRvbnRSZXNvbHZlTGFzdExpbmspO2lmKHJldC5leGlzdHMpe3JldHVybiByZXQub2JqZWN0fWVsc2V7X19fc2V0RXJyTm8ocmV0LmVycm9yKTtyZXR1cm4gbnVsbH19LGFuYWx5emVQYXRoOmZ1bmN0aW9uKHBhdGgsZG9udFJlc29sdmVMYXN0TGluayl7dHJ5e3ZhciBsb29rdXA9RlMubG9va3VwUGF0aChwYXRoLHtmb2xsb3c6IWRvbnRSZXNvbHZlTGFzdExpbmt9KTtwYXRoPWxvb2t1cC5wYXRofWNhdGNoKGUpe312YXIgcmV0PXtpc1Jvb3Q6ZmFsc2UsZXhpc3RzOmZhbHNlLGVycm9yOjAsbmFtZTpudWxsLHBhdGg6bnVsbCxvYmplY3Q6bnVsbCxwYXJlbnRFeGlzdHM6ZmFsc2UscGFyZW50UGF0aDpudWxsLHBhcmVudE9iamVjdDpudWxsfTt0cnl7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgse3BhcmVudDp0cnVlfSk7cmV0LnBhcmVudEV4aXN0cz10cnVlO3JldC5wYXJlbnRQYXRoPWxvb2t1cC5wYXRoO3JldC5wYXJlbnRPYmplY3Q9bG9va3VwLm5vZGU7cmV0Lm5hbWU9UEFUSC5iYXNlbmFtZShwYXRoKTtsb29rdXA9RlMubG9va3VwUGF0aChwYXRoLHtmb2xsb3c6IWRvbnRSZXNvbHZlTGFzdExpbmt9KTtyZXQuZXhpc3RzPXRydWU7cmV0LnBhdGg9bG9va3VwLnBhdGg7cmV0Lm9iamVjdD1sb29rdXAubm9kZTtyZXQubmFtZT1sb29rdXAubm9kZS5uYW1lO3JldC5pc1Jvb3Q9bG9va3VwLnBhdGg9PT1cIi9cIn1jYXRjaChlKXtyZXQuZXJyb3I9ZS5lcnJub31yZXR1cm4gcmV0fSxjcmVhdGVGb2xkZXI6ZnVuY3Rpb24ocGFyZW50LG5hbWUsY2FuUmVhZCxjYW5Xcml0ZSl7dmFyIHBhdGg9UEFUSC5qb2luMih0eXBlb2YgcGFyZW50PT09XCJzdHJpbmdcIj9wYXJlbnQ6RlMuZ2V0UGF0aChwYXJlbnQpLG5hbWUpO3ZhciBtb2RlPUZTLmdldE1vZGUoY2FuUmVhZCxjYW5Xcml0ZSk7cmV0dXJuIEZTLm1rZGlyKHBhdGgsbW9kZSl9LGNyZWF0ZVBhdGg6ZnVuY3Rpb24ocGFyZW50LHBhdGgsY2FuUmVhZCxjYW5Xcml0ZSl7cGFyZW50PXR5cGVvZiBwYXJlbnQ9PT1cInN0cmluZ1wiP3BhcmVudDpGUy5nZXRQYXRoKHBhcmVudCk7dmFyIHBhcnRzPXBhdGguc3BsaXQoXCIvXCIpLnJldmVyc2UoKTt3aGlsZShwYXJ0cy5sZW5ndGgpe3ZhciBwYXJ0PXBhcnRzLnBvcCgpO2lmKCFwYXJ0KWNvbnRpbnVlO3ZhciBjdXJyZW50PVBBVEguam9pbjIocGFyZW50LHBhcnQpO3RyeXtGUy5ta2RpcihjdXJyZW50KX1jYXRjaChlKXt9cGFyZW50PWN1cnJlbnR9cmV0dXJuIGN1cnJlbnR9LGNyZWF0ZUZpbGU6ZnVuY3Rpb24ocGFyZW50LG5hbWUscHJvcGVydGllcyxjYW5SZWFkLGNhbldyaXRlKXt2YXIgcGF0aD1QQVRILmpvaW4yKHR5cGVvZiBwYXJlbnQ9PT1cInN0cmluZ1wiP3BhcmVudDpGUy5nZXRQYXRoKHBhcmVudCksbmFtZSk7dmFyIG1vZGU9RlMuZ2V0TW9kZShjYW5SZWFkLGNhbldyaXRlKTtyZXR1cm4gRlMuY3JlYXRlKHBhdGgsbW9kZSl9LGNyZWF0ZURhdGFGaWxlOmZ1bmN0aW9uKHBhcmVudCxuYW1lLGRhdGEsY2FuUmVhZCxjYW5Xcml0ZSxjYW5Pd24pe3ZhciBwYXRoPW5hbWU/UEFUSC5qb2luMih0eXBlb2YgcGFyZW50PT09XCJzdHJpbmdcIj9wYXJlbnQ6RlMuZ2V0UGF0aChwYXJlbnQpLG5hbWUpOnBhcmVudDt2YXIgbW9kZT1GUy5nZXRNb2RlKGNhblJlYWQsY2FuV3JpdGUpO3ZhciBub2RlPUZTLmNyZWF0ZShwYXRoLG1vZGUpO2lmKGRhdGEpe2lmKHR5cGVvZiBkYXRhPT09XCJzdHJpbmdcIil7dmFyIGFycj1uZXcgQXJyYXkoZGF0YS5sZW5ndGgpO2Zvcih2YXIgaT0wLGxlbj1kYXRhLmxlbmd0aDtpPGxlbjsrK2kpYXJyW2ldPWRhdGEuY2hhckNvZGVBdChpKTtkYXRhPWFycn1GUy5jaG1vZChub2RlLG1vZGV8MTQ2KTt2YXIgc3RyZWFtPUZTLm9wZW4obm9kZSxcIndcIik7RlMud3JpdGUoc3RyZWFtLGRhdGEsMCxkYXRhLmxlbmd0aCwwLGNhbk93bik7RlMuY2xvc2Uoc3RyZWFtKTtGUy5jaG1vZChub2RlLG1vZGUpfXJldHVybiBub2RlfSxjcmVhdGVEZXZpY2U6ZnVuY3Rpb24ocGFyZW50LG5hbWUsaW5wdXQsb3V0cHV0KXt2YXIgcGF0aD1QQVRILmpvaW4yKHR5cGVvZiBwYXJlbnQ9PT1cInN0cmluZ1wiP3BhcmVudDpGUy5nZXRQYXRoKHBhcmVudCksbmFtZSk7dmFyIG1vZGU9RlMuZ2V0TW9kZSghIWlucHV0LCEhb3V0cHV0KTtpZighRlMuY3JlYXRlRGV2aWNlLm1ham9yKUZTLmNyZWF0ZURldmljZS5tYWpvcj02NDt2YXIgZGV2PUZTLm1ha2VkZXYoRlMuY3JlYXRlRGV2aWNlLm1ham9yKyssMCk7RlMucmVnaXN0ZXJEZXZpY2UoZGV2LHtvcGVuOmZ1bmN0aW9uKHN0cmVhbSl7c3RyZWFtLnNlZWthYmxlPWZhbHNlfSxjbG9zZTpmdW5jdGlvbihzdHJlYW0pe2lmKG91dHB1dCYmb3V0cHV0LmJ1ZmZlciYmb3V0cHV0LmJ1ZmZlci5sZW5ndGgpe291dHB1dCgxMCl9fSxyZWFkOmZ1bmN0aW9uKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxwb3Mpe3ZhciBieXRlc1JlYWQ9MDtmb3IodmFyIGk9MDtpPGxlbmd0aDtpKyspe3ZhciByZXN1bHQ7dHJ5e3Jlc3VsdD1pbnB1dCgpfWNhdGNoKGUpe3Rocm93IG5ldyBGUy5FcnJub0Vycm9yKDUpfWlmKHJlc3VsdD09PXVuZGVmaW5lZCYmYnl0ZXNSZWFkPT09MCl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoMTEpfWlmKHJlc3VsdD09PW51bGx8fHJlc3VsdD09PXVuZGVmaW5lZClicmVhaztieXRlc1JlYWQrKztidWZmZXJbb2Zmc2V0K2ldPXJlc3VsdH1pZihieXRlc1JlYWQpe3N0cmVhbS5ub2RlLnRpbWVzdGFtcD1EYXRlLm5vdygpfXJldHVybiBieXRlc1JlYWR9LHdyaXRlOmZ1bmN0aW9uKHN0cmVhbSxidWZmZXIsb2Zmc2V0LGxlbmd0aCxwb3Mpe2Zvcih2YXIgaT0wO2k8bGVuZ3RoO2krKyl7dHJ5e291dHB1dChidWZmZXJbb2Zmc2V0K2ldKX1jYXRjaChlKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig1KX19aWYobGVuZ3RoKXtzdHJlYW0ubm9kZS50aW1lc3RhbXA9RGF0ZS5ub3coKX1yZXR1cm4gaX19KTtyZXR1cm4gRlMubWtkZXYocGF0aCxtb2RlLGRldil9LGNyZWF0ZUxpbms6ZnVuY3Rpb24ocGFyZW50LG5hbWUsdGFyZ2V0LGNhblJlYWQsY2FuV3JpdGUpe3ZhciBwYXRoPVBBVEguam9pbjIodHlwZW9mIHBhcmVudD09PVwic3RyaW5nXCI/cGFyZW50OkZTLmdldFBhdGgocGFyZW50KSxuYW1lKTtyZXR1cm4gRlMuc3ltbGluayh0YXJnZXQscGF0aCl9LGZvcmNlTG9hZEZpbGU6ZnVuY3Rpb24ob2JqKXtpZihvYmouaXNEZXZpY2V8fG9iai5pc0ZvbGRlcnx8b2JqLmxpbmt8fG9iai5jb250ZW50cylyZXR1cm4gdHJ1ZTt2YXIgc3VjY2Vzcz10cnVlO2lmKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCE9PVwidW5kZWZpbmVkXCIpe3Rocm93IG5ldyBFcnJvcihcIkxhenkgbG9hZGluZyBzaG91bGQgaGF2ZSBiZWVuIHBlcmZvcm1lZCAoY29udGVudHMgc2V0KSBpbiBjcmVhdGVMYXp5RmlsZSwgYnV0IGl0IHdhcyBub3QuIExhenkgbG9hZGluZyBvbmx5IHdvcmtzIGluIHdlYiB3b3JrZXJzLiBVc2UgLS1lbWJlZC1maWxlIG9yIC0tcHJlbG9hZC1maWxlIGluIGVtY2Mgb24gdGhlIG1haW4gdGhyZWFkLlwiKX1lbHNlIGlmKHJlYWRfKXt0cnl7b2JqLmNvbnRlbnRzPWludEFycmF5RnJvbVN0cmluZyhyZWFkXyhvYmoudXJsKSx0cnVlKTtvYmoudXNlZEJ5dGVzPW9iai5jb250ZW50cy5sZW5ndGh9Y2F0Y2goZSl7c3VjY2Vzcz1mYWxzZX19ZWxzZXt0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgbG9hZCB3aXRob3V0IHJlYWQoKSBvciBYTUxIdHRwUmVxdWVzdC5cIil9aWYoIXN1Y2Nlc3MpX19fc2V0RXJyTm8oNSk7cmV0dXJuIHN1Y2Nlc3N9LGNyZWF0ZUxhenlGaWxlOmZ1bmN0aW9uKHBhcmVudCxuYW1lLHVybCxjYW5SZWFkLGNhbldyaXRlKXtmdW5jdGlvbiBMYXp5VWludDhBcnJheSgpe3RoaXMubGVuZ3RoS25vd249ZmFsc2U7dGhpcy5jaHVua3M9W119TGF6eVVpbnQ4QXJyYXkucHJvdG90eXBlLmdldD1mdW5jdGlvbiBMYXp5VWludDhBcnJheV9nZXQoaWR4KXtpZihpZHg+dGhpcy5sZW5ndGgtMXx8aWR4PDApe3JldHVybiB1bmRlZmluZWR9dmFyIGNodW5rT2Zmc2V0PWlkeCV0aGlzLmNodW5rU2l6ZTt2YXIgY2h1bmtOdW09aWR4L3RoaXMuY2h1bmtTaXplfDA7cmV0dXJuIHRoaXMuZ2V0dGVyKGNodW5rTnVtKVtjaHVua09mZnNldF19O0xhenlVaW50OEFycmF5LnByb3RvdHlwZS5zZXREYXRhR2V0dGVyPWZ1bmN0aW9uIExhenlVaW50OEFycmF5X3NldERhdGFHZXR0ZXIoZ2V0dGVyKXt0aGlzLmdldHRlcj1nZXR0ZXJ9O0xhenlVaW50OEFycmF5LnByb3RvdHlwZS5jYWNoZUxlbmd0aD1mdW5jdGlvbiBMYXp5VWludDhBcnJheV9jYWNoZUxlbmd0aCgpe3ZhciB4aHI9bmV3IFhNTEh0dHBSZXF1ZXN0O3hoci5vcGVuKFwiSEVBRFwiLHVybCxmYWxzZSk7eGhyLnNlbmQobnVsbCk7aWYoISh4aHIuc3RhdHVzPj0yMDAmJnhoci5zdGF0dXM8MzAwfHx4aHIuc3RhdHVzPT09MzA0KSl0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBsb2FkIFwiK3VybCtcIi4gU3RhdHVzOiBcIit4aHIuc3RhdHVzKTt2YXIgZGF0YWxlbmd0aD1OdW1iZXIoeGhyLmdldFJlc3BvbnNlSGVhZGVyKFwiQ29udGVudC1sZW5ndGhcIikpO3ZhciBoZWFkZXI7dmFyIGhhc0J5dGVTZXJ2aW5nPShoZWFkZXI9eGhyLmdldFJlc3BvbnNlSGVhZGVyKFwiQWNjZXB0LVJhbmdlc1wiKSkmJmhlYWRlcj09PVwiYnl0ZXNcIjt2YXIgdXNlc0d6aXA9KGhlYWRlcj14aHIuZ2V0UmVzcG9uc2VIZWFkZXIoXCJDb250ZW50LUVuY29kaW5nXCIpKSYmaGVhZGVyPT09XCJnemlwXCI7dmFyIGNodW5rU2l6ZT0xMDI0KjEwMjQ7aWYoIWhhc0J5dGVTZXJ2aW5nKWNodW5rU2l6ZT1kYXRhbGVuZ3RoO3ZhciBkb1hIUj1mdW5jdGlvbihmcm9tLHRvKXtpZihmcm9tPnRvKXRocm93IG5ldyBFcnJvcihcImludmFsaWQgcmFuZ2UgKFwiK2Zyb20rXCIsIFwiK3RvK1wiKSBvciBubyBieXRlcyByZXF1ZXN0ZWQhXCIpO2lmKHRvPmRhdGFsZW5ndGgtMSl0aHJvdyBuZXcgRXJyb3IoXCJvbmx5IFwiK2RhdGFsZW5ndGgrXCIgYnl0ZXMgYXZhaWxhYmxlISBwcm9ncmFtbWVyIGVycm9yIVwiKTt2YXIgeGhyPW5ldyBYTUxIdHRwUmVxdWVzdDt4aHIub3BlbihcIkdFVFwiLHVybCxmYWxzZSk7aWYoZGF0YWxlbmd0aCE9PWNodW5rU2l6ZSl4aHIuc2V0UmVxdWVzdEhlYWRlcihcIlJhbmdlXCIsXCJieXRlcz1cIitmcm9tK1wiLVwiK3RvKTtpZih0eXBlb2YgVWludDhBcnJheSE9XCJ1bmRlZmluZWRcIil4aHIucmVzcG9uc2VUeXBlPVwiYXJyYXlidWZmZXJcIjtpZih4aHIub3ZlcnJpZGVNaW1lVHlwZSl7eGhyLm92ZXJyaWRlTWltZVR5cGUoXCJ0ZXh0L3BsYWluOyBjaGFyc2V0PXgtdXNlci1kZWZpbmVkXCIpfXhoci5zZW5kKG51bGwpO2lmKCEoeGhyLnN0YXR1cz49MjAwJiZ4aHIuc3RhdHVzPDMwMHx8eGhyLnN0YXR1cz09PTMwNCkpdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgbG9hZCBcIit1cmwrXCIuIFN0YXR1czogXCIreGhyLnN0YXR1cyk7aWYoeGhyLnJlc3BvbnNlIT09dW5kZWZpbmVkKXtyZXR1cm4gbmV3IFVpbnQ4QXJyYXkoeGhyLnJlc3BvbnNlfHxbXSl9ZWxzZXtyZXR1cm4gaW50QXJyYXlGcm9tU3RyaW5nKHhoci5yZXNwb25zZVRleHR8fFwiXCIsdHJ1ZSl9fTt2YXIgbGF6eUFycmF5PXRoaXM7bGF6eUFycmF5LnNldERhdGFHZXR0ZXIoZnVuY3Rpb24oY2h1bmtOdW0pe3ZhciBzdGFydD1jaHVua051bSpjaHVua1NpemU7dmFyIGVuZD0oY2h1bmtOdW0rMSkqY2h1bmtTaXplLTE7ZW5kPU1hdGgubWluKGVuZCxkYXRhbGVuZ3RoLTEpO2lmKHR5cGVvZiBsYXp5QXJyYXkuY2h1bmtzW2NodW5rTnVtXT09PVwidW5kZWZpbmVkXCIpe2xhenlBcnJheS5jaHVua3NbY2h1bmtOdW1dPWRvWEhSKHN0YXJ0LGVuZCl9aWYodHlwZW9mIGxhenlBcnJheS5jaHVua3NbY2h1bmtOdW1dPT09XCJ1bmRlZmluZWRcIil0aHJvdyBuZXcgRXJyb3IoXCJkb1hIUiBmYWlsZWQhXCIpO3JldHVybiBsYXp5QXJyYXkuY2h1bmtzW2NodW5rTnVtXX0pO2lmKHVzZXNHemlwfHwhZGF0YWxlbmd0aCl7Y2h1bmtTaXplPWRhdGFsZW5ndGg9MTtkYXRhbGVuZ3RoPXRoaXMuZ2V0dGVyKDApLmxlbmd0aDtjaHVua1NpemU9ZGF0YWxlbmd0aDtjb25zb2xlLmxvZyhcIkxhenlGaWxlcyBvbiBnemlwIGZvcmNlcyBkb3dubG9hZCBvZiB0aGUgd2hvbGUgZmlsZSB3aGVuIGxlbmd0aCBpcyBhY2Nlc3NlZFwiKX10aGlzLl9sZW5ndGg9ZGF0YWxlbmd0aDt0aGlzLl9jaHVua1NpemU9Y2h1bmtTaXplO3RoaXMubGVuZ3RoS25vd249dHJ1ZX07aWYodHlwZW9mIFhNTEh0dHBSZXF1ZXN0IT09XCJ1bmRlZmluZWRcIil7aWYoIUVOVklST05NRU5UX0lTX1dPUktFUil0aHJvd1wiQ2Fubm90IGRvIHN5bmNocm9ub3VzIGJpbmFyeSBYSFJzIG91dHNpZGUgd2Vid29ya2VycyBpbiBtb2Rlcm4gYnJvd3NlcnMuIFVzZSAtLWVtYmVkLWZpbGUgb3IgLS1wcmVsb2FkLWZpbGUgaW4gZW1jY1wiO3ZhciBsYXp5QXJyYXk9bmV3IExhenlVaW50OEFycmF5O09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGxhenlBcnJheSx7bGVuZ3RoOntnZXQ6ZnVuY3Rpb24oKXtpZighdGhpcy5sZW5ndGhLbm93bil7dGhpcy5jYWNoZUxlbmd0aCgpfXJldHVybiB0aGlzLl9sZW5ndGh9fSxjaHVua1NpemU6e2dldDpmdW5jdGlvbigpe2lmKCF0aGlzLmxlbmd0aEtub3duKXt0aGlzLmNhY2hlTGVuZ3RoKCl9cmV0dXJuIHRoaXMuX2NodW5rU2l6ZX19fSk7dmFyIHByb3BlcnRpZXM9e2lzRGV2aWNlOmZhbHNlLGNvbnRlbnRzOmxhenlBcnJheX19ZWxzZXt2YXIgcHJvcGVydGllcz17aXNEZXZpY2U6ZmFsc2UsdXJsOnVybH19dmFyIG5vZGU9RlMuY3JlYXRlRmlsZShwYXJlbnQsbmFtZSxwcm9wZXJ0aWVzLGNhblJlYWQsY2FuV3JpdGUpO2lmKHByb3BlcnRpZXMuY29udGVudHMpe25vZGUuY29udGVudHM9cHJvcGVydGllcy5jb250ZW50c31lbHNlIGlmKHByb3BlcnRpZXMudXJsKXtub2RlLmNvbnRlbnRzPW51bGw7bm9kZS51cmw9cHJvcGVydGllcy51cmx9T2JqZWN0LmRlZmluZVByb3BlcnRpZXMobm9kZSx7dXNlZEJ5dGVzOntnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb250ZW50cy5sZW5ndGh9fX0pO3ZhciBzdHJlYW1fb3BzPXt9O3ZhciBrZXlzPU9iamVjdC5rZXlzKG5vZGUuc3RyZWFtX29wcyk7a2V5cy5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7dmFyIGZuPW5vZGUuc3RyZWFtX29wc1trZXldO3N0cmVhbV9vcHNba2V5XT1mdW5jdGlvbiBmb3JjZUxvYWRMYXp5RmlsZSgpe2lmKCFGUy5mb3JjZUxvYWRGaWxlKG5vZGUpKXt0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig1KX1yZXR1cm4gZm4uYXBwbHkobnVsbCxhcmd1bWVudHMpfX0pO3N0cmVhbV9vcHMucmVhZD1mdW5jdGlvbiBzdHJlYW1fb3BzX3JlYWQoc3RyZWFtLGJ1ZmZlcixvZmZzZXQsbGVuZ3RoLHBvc2l0aW9uKXtpZighRlMuZm9yY2VMb2FkRmlsZShub2RlKSl7dGhyb3cgbmV3IEZTLkVycm5vRXJyb3IoNSl9dmFyIGNvbnRlbnRzPXN0cmVhbS5ub2RlLmNvbnRlbnRzO2lmKHBvc2l0aW9uPj1jb250ZW50cy5sZW5ndGgpcmV0dXJuIDA7dmFyIHNpemU9TWF0aC5taW4oY29udGVudHMubGVuZ3RoLXBvc2l0aW9uLGxlbmd0aCk7YXNzZXJ0KHNpemU+PTApO2lmKGNvbnRlbnRzLnNsaWNlKXtmb3IodmFyIGk9MDtpPHNpemU7aSsrKXtidWZmZXJbb2Zmc2V0K2ldPWNvbnRlbnRzW3Bvc2l0aW9uK2ldfX1lbHNle2Zvcih2YXIgaT0wO2k8c2l6ZTtpKyspe2J1ZmZlcltvZmZzZXQraV09Y29udGVudHMuZ2V0KHBvc2l0aW9uK2kpfX1yZXR1cm4gc2l6ZX07bm9kZS5zdHJlYW1fb3BzPXN0cmVhbV9vcHM7cmV0dXJuIG5vZGV9LGNyZWF0ZVByZWxvYWRlZEZpbGU6ZnVuY3Rpb24ocGFyZW50LG5hbWUsdXJsLGNhblJlYWQsY2FuV3JpdGUsb25sb2FkLG9uZXJyb3IsZG9udENyZWF0ZUZpbGUsY2FuT3duLHByZUZpbmlzaCl7QnJvd3Nlci5pbml0KCk7dmFyIGZ1bGxuYW1lPW5hbWU/UEFUSF9GUy5yZXNvbHZlKFBBVEguam9pbjIocGFyZW50LG5hbWUpKTpwYXJlbnQ7dmFyIGRlcD1nZXRVbmlxdWVSdW5EZXBlbmRlbmN5KFwiY3AgXCIrZnVsbG5hbWUpO2Z1bmN0aW9uIHByb2Nlc3NEYXRhKGJ5dGVBcnJheSl7ZnVuY3Rpb24gZmluaXNoKGJ5dGVBcnJheSl7aWYocHJlRmluaXNoKXByZUZpbmlzaCgpO2lmKCFkb250Q3JlYXRlRmlsZSl7RlMuY3JlYXRlRGF0YUZpbGUocGFyZW50LG5hbWUsYnl0ZUFycmF5LGNhblJlYWQsY2FuV3JpdGUsY2FuT3duKX1pZihvbmxvYWQpb25sb2FkKCk7cmVtb3ZlUnVuRGVwZW5kZW5jeShkZXApfXZhciBoYW5kbGVkPWZhbHNlO01vZHVsZVtcInByZWxvYWRQbHVnaW5zXCJdLmZvckVhY2goZnVuY3Rpb24ocGx1Z2luKXtpZihoYW5kbGVkKXJldHVybjtpZihwbHVnaW5bXCJjYW5IYW5kbGVcIl0oZnVsbG5hbWUpKXtwbHVnaW5bXCJoYW5kbGVcIl0oYnl0ZUFycmF5LGZ1bGxuYW1lLGZpbmlzaCxmdW5jdGlvbigpe2lmKG9uZXJyb3Ipb25lcnJvcigpO3JlbW92ZVJ1bkRlcGVuZGVuY3koZGVwKX0pO2hhbmRsZWQ9dHJ1ZX19KTtpZighaGFuZGxlZClmaW5pc2goYnl0ZUFycmF5KX1hZGRSdW5EZXBlbmRlbmN5KGRlcCk7aWYodHlwZW9mIHVybD09XCJzdHJpbmdcIil7QnJvd3Nlci5hc3luY0xvYWQodXJsLGZ1bmN0aW9uKGJ5dGVBcnJheSl7cHJvY2Vzc0RhdGEoYnl0ZUFycmF5KX0sb25lcnJvcil9ZWxzZXtwcm9jZXNzRGF0YSh1cmwpfX0saW5kZXhlZERCOmZ1bmN0aW9uKCl7cmV0dXJuIHdpbmRvdy5pbmRleGVkREJ8fHdpbmRvdy5tb3pJbmRleGVkREJ8fHdpbmRvdy53ZWJraXRJbmRleGVkREJ8fHdpbmRvdy5tc0luZGV4ZWREQn0sREJfTkFNRTpmdW5jdGlvbigpe3JldHVyblwiRU1fRlNfXCIrd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfSxEQl9WRVJTSU9OOjIwLERCX1NUT1JFX05BTUU6XCJGSUxFX0RBVEFcIixzYXZlRmlsZXNUb0RCOmZ1bmN0aW9uKHBhdGhzLG9ubG9hZCxvbmVycm9yKXtvbmxvYWQ9b25sb2FkfHxmdW5jdGlvbigpe307b25lcnJvcj1vbmVycm9yfHxmdW5jdGlvbigpe307dmFyIGluZGV4ZWREQj1GUy5pbmRleGVkREIoKTt0cnl7dmFyIG9wZW5SZXF1ZXN0PWluZGV4ZWREQi5vcGVuKEZTLkRCX05BTUUoKSxGUy5EQl9WRVJTSU9OKX1jYXRjaChlKXtyZXR1cm4gb25lcnJvcihlKX1vcGVuUmVxdWVzdC5vbnVwZ3JhZGVuZWVkZWQ9ZnVuY3Rpb24gb3BlblJlcXVlc3Rfb251cGdyYWRlbmVlZGVkKCl7Y29uc29sZS5sb2coXCJjcmVhdGluZyBkYlwiKTt2YXIgZGI9b3BlblJlcXVlc3QucmVzdWx0O2RiLmNyZWF0ZU9iamVjdFN0b3JlKEZTLkRCX1NUT1JFX05BTUUpfTtvcGVuUmVxdWVzdC5vbnN1Y2Nlc3M9ZnVuY3Rpb24gb3BlblJlcXVlc3Rfb25zdWNjZXNzKCl7dmFyIGRiPW9wZW5SZXF1ZXN0LnJlc3VsdDt2YXIgdHJhbnNhY3Rpb249ZGIudHJhbnNhY3Rpb24oW0ZTLkRCX1NUT1JFX05BTUVdLFwicmVhZHdyaXRlXCIpO3ZhciBmaWxlcz10cmFuc2FjdGlvbi5vYmplY3RTdG9yZShGUy5EQl9TVE9SRV9OQU1FKTt2YXIgb2s9MCxmYWlsPTAsdG90YWw9cGF0aHMubGVuZ3RoO2Z1bmN0aW9uIGZpbmlzaCgpe2lmKGZhaWw9PTApb25sb2FkKCk7ZWxzZSBvbmVycm9yKCl9cGF0aHMuZm9yRWFjaChmdW5jdGlvbihwYXRoKXt2YXIgcHV0UmVxdWVzdD1maWxlcy5wdXQoRlMuYW5hbHl6ZVBhdGgocGF0aCkub2JqZWN0LmNvbnRlbnRzLHBhdGgpO3B1dFJlcXVlc3Qub25zdWNjZXNzPWZ1bmN0aW9uIHB1dFJlcXVlc3Rfb25zdWNjZXNzKCl7b2srKztpZihvaytmYWlsPT10b3RhbClmaW5pc2goKX07cHV0UmVxdWVzdC5vbmVycm9yPWZ1bmN0aW9uIHB1dFJlcXVlc3Rfb25lcnJvcigpe2ZhaWwrKztpZihvaytmYWlsPT10b3RhbClmaW5pc2goKX19KTt0cmFuc2FjdGlvbi5vbmVycm9yPW9uZXJyb3J9O29wZW5SZXF1ZXN0Lm9uZXJyb3I9b25lcnJvcn0sbG9hZEZpbGVzRnJvbURCOmZ1bmN0aW9uKHBhdGhzLG9ubG9hZCxvbmVycm9yKXtvbmxvYWQ9b25sb2FkfHxmdW5jdGlvbigpe307b25lcnJvcj1vbmVycm9yfHxmdW5jdGlvbigpe307dmFyIGluZGV4ZWREQj1GUy5pbmRleGVkREIoKTt0cnl7dmFyIG9wZW5SZXF1ZXN0PWluZGV4ZWREQi5vcGVuKEZTLkRCX05BTUUoKSxGUy5EQl9WRVJTSU9OKX1jYXRjaChlKXtyZXR1cm4gb25lcnJvcihlKX1vcGVuUmVxdWVzdC5vbnVwZ3JhZGVuZWVkZWQ9b25lcnJvcjtvcGVuUmVxdWVzdC5vbnN1Y2Nlc3M9ZnVuY3Rpb24gb3BlblJlcXVlc3Rfb25zdWNjZXNzKCl7dmFyIGRiPW9wZW5SZXF1ZXN0LnJlc3VsdDt0cnl7dmFyIHRyYW5zYWN0aW9uPWRiLnRyYW5zYWN0aW9uKFtGUy5EQl9TVE9SRV9OQU1FXSxcInJlYWRvbmx5XCIpfWNhdGNoKGUpe29uZXJyb3IoZSk7cmV0dXJufXZhciBmaWxlcz10cmFuc2FjdGlvbi5vYmplY3RTdG9yZShGUy5EQl9TVE9SRV9OQU1FKTt2YXIgb2s9MCxmYWlsPTAsdG90YWw9cGF0aHMubGVuZ3RoO2Z1bmN0aW9uIGZpbmlzaCgpe2lmKGZhaWw9PTApb25sb2FkKCk7ZWxzZSBvbmVycm9yKCl9cGF0aHMuZm9yRWFjaChmdW5jdGlvbihwYXRoKXt2YXIgZ2V0UmVxdWVzdD1maWxlcy5nZXQocGF0aCk7Z2V0UmVxdWVzdC5vbnN1Y2Nlc3M9ZnVuY3Rpb24gZ2V0UmVxdWVzdF9vbnN1Y2Nlc3MoKXtpZihGUy5hbmFseXplUGF0aChwYXRoKS5leGlzdHMpe0ZTLnVubGluayhwYXRoKX1GUy5jcmVhdGVEYXRhRmlsZShQQVRILmRpcm5hbWUocGF0aCksUEFUSC5iYXNlbmFtZShwYXRoKSxnZXRSZXF1ZXN0LnJlc3VsdCx0cnVlLHRydWUsdHJ1ZSk7b2srKztpZihvaytmYWlsPT10b3RhbClmaW5pc2goKX07Z2V0UmVxdWVzdC5vbmVycm9yPWZ1bmN0aW9uIGdldFJlcXVlc3Rfb25lcnJvcigpe2ZhaWwrKztpZihvaytmYWlsPT10b3RhbClmaW5pc2goKX19KTt0cmFuc2FjdGlvbi5vbmVycm9yPW9uZXJyb3J9O29wZW5SZXF1ZXN0Lm9uZXJyb3I9b25lcnJvcn19O3ZhciBTWVNDQUxMUz17REVGQVVMVF9QT0xMTUFTSzo1LG1hcHBpbmdzOnt9LHVtYXNrOjUxMSxjYWxjdWxhdGVBdDpmdW5jdGlvbihkaXJmZCxwYXRoKXtpZihwYXRoWzBdIT09XCIvXCIpe3ZhciBkaXI7aWYoZGlyZmQ9PT0tMTAwKXtkaXI9RlMuY3dkKCl9ZWxzZXt2YXIgZGlyc3RyZWFtPUZTLmdldFN0cmVhbShkaXJmZCk7aWYoIWRpcnN0cmVhbSl0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig5KTtkaXI9ZGlyc3RyZWFtLnBhdGh9cGF0aD1QQVRILmpvaW4yKGRpcixwYXRoKX1yZXR1cm4gcGF0aH0sZG9TdGF0OmZ1bmN0aW9uKGZ1bmMscGF0aCxidWYpe3RyeXt2YXIgc3RhdD1mdW5jKHBhdGgpfWNhdGNoKGUpe2lmKGUmJmUubm9kZSYmUEFUSC5ub3JtYWxpemUocGF0aCkhPT1QQVRILm5vcm1hbGl6ZShGUy5nZXRQYXRoKGUubm9kZSkpKXtyZXR1cm4tMjB9dGhyb3cgZX1IRUFQMzJbYnVmPj4yXT1zdGF0LmRldjtIRUFQMzJbYnVmKzQ+PjJdPTA7SEVBUDMyW2J1Zis4Pj4yXT1zdGF0LmlubztIRUFQMzJbYnVmKzEyPj4yXT1zdGF0Lm1vZGU7SEVBUDMyW2J1ZisxNj4+Ml09c3RhdC5ubGluaztIRUFQMzJbYnVmKzIwPj4yXT1zdGF0LnVpZDtIRUFQMzJbYnVmKzI0Pj4yXT1zdGF0LmdpZDtIRUFQMzJbYnVmKzI4Pj4yXT1zdGF0LnJkZXY7SEVBUDMyW2J1ZiszMj4+Ml09MDt0ZW1wSTY0PVtzdGF0LnNpemU+Pj4wLCh0ZW1wRG91YmxlPXN0YXQuc2l6ZSwrTWF0aF9hYnModGVtcERvdWJsZSk+PTE/dGVtcERvdWJsZT4wPyhNYXRoX21pbigrTWF0aF9mbG9vcih0ZW1wRG91YmxlLzQyOTQ5NjcyOTYpLDQyOTQ5NjcyOTUpfDApPj4+MDp+fitNYXRoX2NlaWwoKHRlbXBEb3VibGUtKyh+fnRlbXBEb3VibGU+Pj4wKSkvNDI5NDk2NzI5Nik+Pj4wOjApXSxIRUFQMzJbYnVmKzQwPj4yXT10ZW1wSTY0WzBdLEhFQVAzMltidWYrNDQ+PjJdPXRlbXBJNjRbMV07SEVBUDMyW2J1Zis0OD4+Ml09NDA5NjtIRUFQMzJbYnVmKzUyPj4yXT1zdGF0LmJsb2NrcztIRUFQMzJbYnVmKzU2Pj4yXT1zdGF0LmF0aW1lLmdldFRpbWUoKS8xZTN8MDtIRUFQMzJbYnVmKzYwPj4yXT0wO0hFQVAzMltidWYrNjQ+PjJdPXN0YXQubXRpbWUuZ2V0VGltZSgpLzFlM3wwO0hFQVAzMltidWYrNjg+PjJdPTA7SEVBUDMyW2J1Zis3Mj4+Ml09c3RhdC5jdGltZS5nZXRUaW1lKCkvMWUzfDA7SEVBUDMyW2J1Zis3Nj4+Ml09MDt0ZW1wSTY0PVtzdGF0Lmlubz4+PjAsKHRlbXBEb3VibGU9c3RhdC5pbm8sK01hdGhfYWJzKHRlbXBEb3VibGUpPj0xP3RlbXBEb3VibGU+MD8oTWF0aF9taW4oK01hdGhfZmxvb3IodGVtcERvdWJsZS80Mjk0OTY3Mjk2KSw0Mjk0OTY3Mjk1KXwwKT4+PjA6fn4rTWF0aF9jZWlsKCh0ZW1wRG91YmxlLSsofn50ZW1wRG91YmxlPj4+MCkpLzQyOTQ5NjcyOTYpPj4+MDowKV0sSEVBUDMyW2J1Zis4MD4+Ml09dGVtcEk2NFswXSxIRUFQMzJbYnVmKzg0Pj4yXT10ZW1wSTY0WzFdO3JldHVybiAwfSxkb01zeW5jOmZ1bmN0aW9uKGFkZHIsc3RyZWFtLGxlbixmbGFncyl7dmFyIGJ1ZmZlcj1uZXcgVWludDhBcnJheShIRUFQVTguc3ViYXJyYXkoYWRkcixhZGRyK2xlbikpO0ZTLm1zeW5jKHN0cmVhbSxidWZmZXIsMCxsZW4sZmxhZ3MpfSxkb01rZGlyOmZ1bmN0aW9uKHBhdGgsbW9kZSl7cGF0aD1QQVRILm5vcm1hbGl6ZShwYXRoKTtpZihwYXRoW3BhdGgubGVuZ3RoLTFdPT09XCIvXCIpcGF0aD1wYXRoLnN1YnN0cigwLHBhdGgubGVuZ3RoLTEpO0ZTLm1rZGlyKHBhdGgsbW9kZSwwKTtyZXR1cm4gMH0sZG9Na25vZDpmdW5jdGlvbihwYXRoLG1vZGUsZGV2KXtzd2l0Y2gobW9kZSY2MTQ0MCl7Y2FzZSAzMjc2ODpjYXNlIDgxOTI6Y2FzZSAyNDU3NjpjYXNlIDQwOTY6Y2FzZSA0OTE1MjpicmVhaztkZWZhdWx0OnJldHVybi0yMn1GUy5ta25vZChwYXRoLG1vZGUsZGV2KTtyZXR1cm4gMH0sZG9SZWFkbGluazpmdW5jdGlvbihwYXRoLGJ1ZixidWZzaXplKXtpZihidWZzaXplPD0wKXJldHVybi0yMjt2YXIgcmV0PUZTLnJlYWRsaW5rKHBhdGgpO3ZhciBsZW49TWF0aC5taW4oYnVmc2l6ZSxsZW5ndGhCeXRlc1VURjgocmV0KSk7dmFyIGVuZENoYXI9SEVBUDhbYnVmK2xlbl07c3RyaW5nVG9VVEY4KHJldCxidWYsYnVmc2l6ZSsxKTtIRUFQOFtidWYrbGVuXT1lbmRDaGFyO3JldHVybiBsZW59LGRvQWNjZXNzOmZ1bmN0aW9uKHBhdGgsYW1vZGUpe2lmKGFtb2RlJn43KXtyZXR1cm4tMjJ9dmFyIG5vZGU7dmFyIGxvb2t1cD1GUy5sb29rdXBQYXRoKHBhdGgse2ZvbGxvdzp0cnVlfSk7bm9kZT1sb29rdXAubm9kZTtpZighbm9kZSl7cmV0dXJuLTJ9dmFyIHBlcm1zPVwiXCI7aWYoYW1vZGUmNClwZXJtcys9XCJyXCI7aWYoYW1vZGUmMilwZXJtcys9XCJ3XCI7aWYoYW1vZGUmMSlwZXJtcys9XCJ4XCI7aWYocGVybXMmJkZTLm5vZGVQZXJtaXNzaW9ucyhub2RlLHBlcm1zKSl7cmV0dXJuLTEzfXJldHVybiAwfSxkb0R1cDpmdW5jdGlvbihwYXRoLGZsYWdzLHN1Z2dlc3RGRCl7dmFyIHN1Z2dlc3Q9RlMuZ2V0U3RyZWFtKHN1Z2dlc3RGRCk7aWYoc3VnZ2VzdClGUy5jbG9zZShzdWdnZXN0KTtyZXR1cm4gRlMub3BlbihwYXRoLGZsYWdzLDAsc3VnZ2VzdEZELHN1Z2dlc3RGRCkuZmR9LGRvUmVhZHY6ZnVuY3Rpb24oc3RyZWFtLGlvdixpb3ZjbnQsb2Zmc2V0KXt2YXIgcmV0PTA7Zm9yKHZhciBpPTA7aTxpb3ZjbnQ7aSsrKXt2YXIgcHRyPUhFQVAzMltpb3YraSo4Pj4yXTt2YXIgbGVuPUhFQVAzMltpb3YrKGkqOCs0KT4+Ml07dmFyIGN1cnI9RlMucmVhZChzdHJlYW0sSEVBUDgscHRyLGxlbixvZmZzZXQpO2lmKGN1cnI8MClyZXR1cm4tMTtyZXQrPWN1cnI7aWYoY3VycjxsZW4pYnJlYWt9cmV0dXJuIHJldH0sZG9Xcml0ZXY6ZnVuY3Rpb24oc3RyZWFtLGlvdixpb3ZjbnQsb2Zmc2V0KXt2YXIgcmV0PTA7Zm9yKHZhciBpPTA7aTxpb3ZjbnQ7aSsrKXt2YXIgcHRyPUhFQVAzMltpb3YraSo4Pj4yXTt2YXIgbGVuPUhFQVAzMltpb3YrKGkqOCs0KT4+Ml07dmFyIGN1cnI9RlMud3JpdGUoc3RyZWFtLEhFQVA4LHB0cixsZW4sb2Zmc2V0KTtpZihjdXJyPDApcmV0dXJuLTE7cmV0Kz1jdXJyfXJldHVybiByZXR9LHZhcmFyZ3M6MCxnZXQ6ZnVuY3Rpb24odmFyYXJncyl7U1lTQ0FMTFMudmFyYXJncys9NDt2YXIgcmV0PUhFQVAzMltTWVNDQUxMUy52YXJhcmdzLTQ+PjJdO3JldHVybiByZXR9LGdldFN0cjpmdW5jdGlvbigpe3ZhciByZXQ9VVRGOFRvU3RyaW5nKFNZU0NBTExTLmdldCgpKTtyZXR1cm4gcmV0fSxnZXRTdHJlYW1Gcm9tRkQ6ZnVuY3Rpb24oKXt2YXIgc3RyZWFtPUZTLmdldFN0cmVhbShTWVNDQUxMUy5nZXQoKSk7aWYoIXN0cmVhbSl0aHJvdyBuZXcgRlMuRXJybm9FcnJvcig5KTtyZXR1cm4gc3RyZWFtfSxnZXQ2NDpmdW5jdGlvbigpe3ZhciBsb3c9U1lTQ0FMTFMuZ2V0KCksaGlnaD1TWVNDQUxMUy5nZXQoKTtpZihsb3c+PTApYXNzZXJ0KGhpZ2g9PT0wKTtlbHNlIGFzc2VydChoaWdoPT09LTEpO3JldHVybiBsb3d9LGdldFplcm86ZnVuY3Rpb24oKXthc3NlcnQoU1lTQ0FMTFMuZ2V0KCk9PT0wKX19O2Z1bmN0aW9uIF9fX3N5c2NhbGwxNDAod2hpY2gsdmFyYXJncyl7U1lTQ0FMTFMudmFyYXJncz12YXJhcmdzO3RyeXt2YXIgc3RyZWFtPVNZU0NBTExTLmdldFN0cmVhbUZyb21GRCgpLG9mZnNldF9oaWdoPVNZU0NBTExTLmdldCgpLG9mZnNldF9sb3c9U1lTQ0FMTFMuZ2V0KCkscmVzdWx0PVNZU0NBTExTLmdldCgpLHdoZW5jZT1TWVNDQUxMUy5nZXQoKTt2YXIgSElHSF9PRkZTRVQ9NDI5NDk2NzI5Njt2YXIgb2Zmc2V0PW9mZnNldF9oaWdoKkhJR0hfT0ZGU0VUKyhvZmZzZXRfbG93Pj4+MCk7dmFyIERPVUJMRV9MSU1JVD05MDA3MTk5MjU0NzQwOTkyO2lmKG9mZnNldDw9LURPVUJMRV9MSU1JVHx8b2Zmc2V0Pj1ET1VCTEVfTElNSVQpe3JldHVybi03NX1GUy5sbHNlZWsoc3RyZWFtLG9mZnNldCx3aGVuY2UpO3RlbXBJNjQ9W3N0cmVhbS5wb3NpdGlvbj4+PjAsKHRlbXBEb3VibGU9c3RyZWFtLnBvc2l0aW9uLCtNYXRoX2Ficyh0ZW1wRG91YmxlKT49MT90ZW1wRG91YmxlPjA/KE1hdGhfbWluKCtNYXRoX2Zsb29yKHRlbXBEb3VibGUvNDI5NDk2NzI5NiksNDI5NDk2NzI5NSl8MCk+Pj4wOn5+K01hdGhfY2VpbCgodGVtcERvdWJsZS0rKH5+dGVtcERvdWJsZT4+PjApKS80Mjk0OTY3Mjk2KT4+PjA6MCldLEhFQVAzMltyZXN1bHQ+PjJdPXRlbXBJNjRbMF0sSEVBUDMyW3Jlc3VsdCs0Pj4yXT10ZW1wSTY0WzFdO2lmKHN0cmVhbS5nZXRkZW50cyYmb2Zmc2V0PT09MCYmd2hlbmNlPT09MClzdHJlYW0uZ2V0ZGVudHM9bnVsbDtyZXR1cm4gMH1jYXRjaChlKXtpZih0eXBlb2YgRlM9PT1cInVuZGVmaW5lZFwifHwhKGUgaW5zdGFuY2VvZiBGUy5FcnJub0Vycm9yKSlhYm9ydChlKTtyZXR1cm4tZS5lcnJub319ZnVuY3Rpb24gX19fc3lzY2FsbDE0NSh3aGljaCx2YXJhcmdzKXtTWVNDQUxMUy52YXJhcmdzPXZhcmFyZ3M7dHJ5e3ZhciBzdHJlYW09U1lTQ0FMTFMuZ2V0U3RyZWFtRnJvbUZEKCksaW92PVNZU0NBTExTLmdldCgpLGlvdmNudD1TWVNDQUxMUy5nZXQoKTtyZXR1cm4gU1lTQ0FMTFMuZG9SZWFkdihzdHJlYW0saW92LGlvdmNudCl9Y2F0Y2goZSl7aWYodHlwZW9mIEZTPT09XCJ1bmRlZmluZWRcInx8IShlIGluc3RhbmNlb2YgRlMuRXJybm9FcnJvcikpYWJvcnQoZSk7cmV0dXJuLWUuZXJybm99fWZ1bmN0aW9uIF9fX3N5c2NhbGwxNDYod2hpY2gsdmFyYXJncyl7U1lTQ0FMTFMudmFyYXJncz12YXJhcmdzO3RyeXt2YXIgc3RyZWFtPVNZU0NBTExTLmdldFN0cmVhbUZyb21GRCgpLGlvdj1TWVNDQUxMUy5nZXQoKSxpb3ZjbnQ9U1lTQ0FMTFMuZ2V0KCk7cmV0dXJuIFNZU0NBTExTLmRvV3JpdGV2KHN0cmVhbSxpb3YsaW92Y250KX1jYXRjaChlKXtpZih0eXBlb2YgRlM9PT1cInVuZGVmaW5lZFwifHwhKGUgaW5zdGFuY2VvZiBGUy5FcnJub0Vycm9yKSlhYm9ydChlKTtyZXR1cm4tZS5lcnJub319ZnVuY3Rpb24gX19fc3lzY2FsbDU0KHdoaWNoLHZhcmFyZ3Mpe1NZU0NBTExTLnZhcmFyZ3M9dmFyYXJnczt0cnl7dmFyIHN0cmVhbT1TWVNDQUxMUy5nZXRTdHJlYW1Gcm9tRkQoKSxvcD1TWVNDQUxMUy5nZXQoKTtzd2l0Y2gob3Ape2Nhc2UgMjE1MDk6Y2FzZSAyMTUwNTp7aWYoIXN0cmVhbS50dHkpcmV0dXJuLTI1O3JldHVybiAwfWNhc2UgMjE1MTA6Y2FzZSAyMTUxMTpjYXNlIDIxNTEyOmNhc2UgMjE1MDY6Y2FzZSAyMTUwNzpjYXNlIDIxNTA4OntpZighc3RyZWFtLnR0eSlyZXR1cm4tMjU7cmV0dXJuIDB9Y2FzZSAyMTUxOTp7aWYoIXN0cmVhbS50dHkpcmV0dXJuLTI1O3ZhciBhcmdwPVNZU0NBTExTLmdldCgpO0hFQVAzMlthcmdwPj4yXT0wO3JldHVybiAwfWNhc2UgMjE1MjA6e2lmKCFzdHJlYW0udHR5KXJldHVybi0yNTtyZXR1cm4tMjJ9Y2FzZSAyMTUzMTp7dmFyIGFyZ3A9U1lTQ0FMTFMuZ2V0KCk7cmV0dXJuIEZTLmlvY3RsKHN0cmVhbSxvcCxhcmdwKX1jYXNlIDIxNTIzOntpZighc3RyZWFtLnR0eSlyZXR1cm4tMjU7cmV0dXJuIDB9Y2FzZSAyMTUyNDp7aWYoIXN0cmVhbS50dHkpcmV0dXJuLTI1O3JldHVybiAwfWRlZmF1bHQ6YWJvcnQoXCJiYWQgaW9jdGwgc3lzY2FsbCBcIitvcCl9fWNhdGNoKGUpe2lmKHR5cGVvZiBGUz09PVwidW5kZWZpbmVkXCJ8fCEoZSBpbnN0YW5jZW9mIEZTLkVycm5vRXJyb3IpKWFib3J0KGUpO3JldHVybi1lLmVycm5vfX1mdW5jdGlvbiBfX19zeXNjYWxsNih3aGljaCx2YXJhcmdzKXtTWVNDQUxMUy52YXJhcmdzPXZhcmFyZ3M7dHJ5e3ZhciBzdHJlYW09U1lTQ0FMTFMuZ2V0U3RyZWFtRnJvbUZEKCk7RlMuY2xvc2Uoc3RyZWFtKTtyZXR1cm4gMH1jYXRjaChlKXtpZih0eXBlb2YgRlM9PT1cInVuZGVmaW5lZFwifHwhKGUgaW5zdGFuY2VvZiBGUy5FcnJub0Vycm9yKSlhYm9ydChlKTtyZXR1cm4tZS5lcnJub319ZnVuY3Rpb24gX19lbXNjcmlwdGVuX3N5c2NhbGxfbXVubWFwKGFkZHIsbGVuKXtpZihhZGRyPT09LTF8fGxlbj09PTApe3JldHVybi0yMn12YXIgaW5mbz1TWVNDQUxMUy5tYXBwaW5nc1thZGRyXTtpZighaW5mbylyZXR1cm4gMDtpZihsZW49PT1pbmZvLmxlbil7dmFyIHN0cmVhbT1GUy5nZXRTdHJlYW0oaW5mby5mZCk7U1lTQ0FMTFMuZG9Nc3luYyhhZGRyLHN0cmVhbSxsZW4saW5mby5mbGFncyk7RlMubXVubWFwKHN0cmVhbSk7U1lTQ0FMTFMubWFwcGluZ3NbYWRkcl09bnVsbDtpZihpbmZvLmFsbG9jYXRlZCl7X2ZyZWUoaW5mby5tYWxsb2MpfX1yZXR1cm4gMH1mdW5jdGlvbiBfX19zeXNjYWxsOTEod2hpY2gsdmFyYXJncyl7U1lTQ0FMTFMudmFyYXJncz12YXJhcmdzO3RyeXt2YXIgYWRkcj1TWVNDQUxMUy5nZXQoKSxsZW49U1lTQ0FMTFMuZ2V0KCk7cmV0dXJuIF9fZW1zY3JpcHRlbl9zeXNjYWxsX211bm1hcChhZGRyLGxlbil9Y2F0Y2goZSl7aWYodHlwZW9mIEZTPT09XCJ1bmRlZmluZWRcInx8IShlIGluc3RhbmNlb2YgRlMuRXJybm9FcnJvcikpYWJvcnQoZSk7cmV0dXJuLWUuZXJybm99fWZ1bmN0aW9uIF9fX3VubG9jaygpe31mdW5jdGlvbiBnZXRTaGlmdEZyb21TaXplKHNpemUpe3N3aXRjaChzaXplKXtjYXNlIDE6cmV0dXJuIDA7Y2FzZSAyOnJldHVybiAxO2Nhc2UgNDpyZXR1cm4gMjtjYXNlIDg6cmV0dXJuIDM7ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biB0eXBlIHNpemU6IFwiK3NpemUpfX1mdW5jdGlvbiBlbWJpbmRfaW5pdF9jaGFyQ29kZXMoKXt2YXIgY29kZXM9bmV3IEFycmF5KDI1Nik7Zm9yKHZhciBpPTA7aTwyNTY7KytpKXtjb2Rlc1tpXT1TdHJpbmcuZnJvbUNoYXJDb2RlKGkpfWVtYmluZF9jaGFyQ29kZXM9Y29kZXN9dmFyIGVtYmluZF9jaGFyQ29kZXM9dW5kZWZpbmVkO2Z1bmN0aW9uIHJlYWRMYXRpbjFTdHJpbmcocHRyKXt2YXIgcmV0PVwiXCI7dmFyIGM9cHRyO3doaWxlKEhFQVBVOFtjXSl7cmV0Kz1lbWJpbmRfY2hhckNvZGVzW0hFQVBVOFtjKytdXX1yZXR1cm4gcmV0fXZhciBhd2FpdGluZ0RlcGVuZGVuY2llcz17fTt2YXIgcmVnaXN0ZXJlZFR5cGVzPXt9O3ZhciB0eXBlRGVwZW5kZW5jaWVzPXt9O3ZhciBjaGFyXzA9NDg7dmFyIGNoYXJfOT01NztmdW5jdGlvbiBtYWtlTGVnYWxGdW5jdGlvbk5hbWUobmFtZSl7aWYodW5kZWZpbmVkPT09bmFtZSl7cmV0dXJuXCJfdW5rbm93blwifW5hbWU9bmFtZS5yZXBsYWNlKC9bXmEtekEtWjAtOV9dL2csXCIkXCIpO3ZhciBmPW5hbWUuY2hhckNvZGVBdCgwKTtpZihmPj1jaGFyXzAmJmY8PWNoYXJfOSl7cmV0dXJuXCJfXCIrbmFtZX1lbHNle3JldHVybiBuYW1lfX1mdW5jdGlvbiBjcmVhdGVOYW1lZEZ1bmN0aW9uKG5hbWUsYm9keSl7bmFtZT1tYWtlTGVnYWxGdW5jdGlvbk5hbWUobmFtZSk7cmV0dXJuIG5ldyBGdW5jdGlvbihcImJvZHlcIixcInJldHVybiBmdW5jdGlvbiBcIituYW1lK1wiKCkge1xcblwiKycgICAgXCJ1c2Ugc3RyaWN0XCI7JytcIiAgICByZXR1cm4gYm9keS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xcblwiK1wifTtcXG5cIikoYm9keSl9ZnVuY3Rpb24gZXh0ZW5kRXJyb3IoYmFzZUVycm9yVHlwZSxlcnJvck5hbWUpe3ZhciBlcnJvckNsYXNzPWNyZWF0ZU5hbWVkRnVuY3Rpb24oZXJyb3JOYW1lLGZ1bmN0aW9uKG1lc3NhZ2Upe3RoaXMubmFtZT1lcnJvck5hbWU7dGhpcy5tZXNzYWdlPW1lc3NhZ2U7dmFyIHN0YWNrPW5ldyBFcnJvcihtZXNzYWdlKS5zdGFjaztpZihzdGFjayE9PXVuZGVmaW5lZCl7dGhpcy5zdGFjaz10aGlzLnRvU3RyaW5nKCkrXCJcXG5cIitzdGFjay5yZXBsYWNlKC9eRXJyb3IoOlteXFxuXSopP1xcbi8sXCJcIil9fSk7ZXJyb3JDbGFzcy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShiYXNlRXJyb3JUeXBlLnByb3RvdHlwZSk7ZXJyb3JDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3I9ZXJyb3JDbGFzcztlcnJvckNsYXNzLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe2lmKHRoaXMubWVzc2FnZT09PXVuZGVmaW5lZCl7cmV0dXJuIHRoaXMubmFtZX1lbHNle3JldHVybiB0aGlzLm5hbWUrXCI6IFwiK3RoaXMubWVzc2FnZX19O3JldHVybiBlcnJvckNsYXNzfXZhciBCaW5kaW5nRXJyb3I9dW5kZWZpbmVkO2Z1bmN0aW9uIHRocm93QmluZGluZ0Vycm9yKG1lc3NhZ2Upe3Rocm93IG5ldyBCaW5kaW5nRXJyb3IobWVzc2FnZSl9dmFyIEludGVybmFsRXJyb3I9dW5kZWZpbmVkO2Z1bmN0aW9uIHJlZ2lzdGVyVHlwZShyYXdUeXBlLHJlZ2lzdGVyZWRJbnN0YW5jZSxvcHRpb25zKXtvcHRpb25zPW9wdGlvbnN8fHt9O2lmKCEoXCJhcmdQYWNrQWR2YW5jZVwiaW4gcmVnaXN0ZXJlZEluc3RhbmNlKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcInJlZ2lzdGVyVHlwZSByZWdpc3RlcmVkSW5zdGFuY2UgcmVxdWlyZXMgYXJnUGFja0FkdmFuY2VcIil9dmFyIG5hbWU9cmVnaXN0ZXJlZEluc3RhbmNlLm5hbWU7aWYoIXJhd1R5cGUpe3Rocm93QmluZGluZ0Vycm9yKCd0eXBlIFwiJytuYW1lKydcIiBtdXN0IGhhdmUgYSBwb3NpdGl2ZSBpbnRlZ2VyIHR5cGVpZCBwb2ludGVyJyl9aWYocmVnaXN0ZXJlZFR5cGVzLmhhc093blByb3BlcnR5KHJhd1R5cGUpKXtpZihvcHRpb25zLmlnbm9yZUR1cGxpY2F0ZVJlZ2lzdHJhdGlvbnMpe3JldHVybn1lbHNle3Rocm93QmluZGluZ0Vycm9yKFwiQ2Fubm90IHJlZ2lzdGVyIHR5cGUgJ1wiK25hbWUrXCInIHR3aWNlXCIpfX1yZWdpc3RlcmVkVHlwZXNbcmF3VHlwZV09cmVnaXN0ZXJlZEluc3RhbmNlO2RlbGV0ZSB0eXBlRGVwZW5kZW5jaWVzW3Jhd1R5cGVdO2lmKGF3YWl0aW5nRGVwZW5kZW5jaWVzLmhhc093blByb3BlcnR5KHJhd1R5cGUpKXt2YXIgY2FsbGJhY2tzPWF3YWl0aW5nRGVwZW5kZW5jaWVzW3Jhd1R5cGVdO2RlbGV0ZSBhd2FpdGluZ0RlcGVuZGVuY2llc1tyYXdUeXBlXTtjYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbihjYil7Y2IoKX0pfX1mdW5jdGlvbiBfX2VtYmluZF9yZWdpc3Rlcl9ib29sKHJhd1R5cGUsbmFtZSxzaXplLHRydWVWYWx1ZSxmYWxzZVZhbHVlKXt2YXIgc2hpZnQ9Z2V0U2hpZnRGcm9tU2l6ZShzaXplKTtuYW1lPXJlYWRMYXRpbjFTdHJpbmcobmFtZSk7cmVnaXN0ZXJUeXBlKHJhd1R5cGUse25hbWU6bmFtZSxcImZyb21XaXJlVHlwZVwiOmZ1bmN0aW9uKHd0KXtyZXR1cm4hIXd0fSxcInRvV2lyZVR5cGVcIjpmdW5jdGlvbihkZXN0cnVjdG9ycyxvKXtyZXR1cm4gbz90cnVlVmFsdWU6ZmFsc2VWYWx1ZX0sXCJhcmdQYWNrQWR2YW5jZVwiOjgsXCJyZWFkVmFsdWVGcm9tUG9pbnRlclwiOmZ1bmN0aW9uKHBvaW50ZXIpe3ZhciBoZWFwO2lmKHNpemU9PT0xKXtoZWFwPUhFQVA4fWVsc2UgaWYoc2l6ZT09PTIpe2hlYXA9SEVBUDE2fWVsc2UgaWYoc2l6ZT09PTQpe2hlYXA9SEVBUDMyfWVsc2V7dGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gYm9vbGVhbiB0eXBlIHNpemU6IFwiK25hbWUpfXJldHVybiB0aGlzW1wiZnJvbVdpcmVUeXBlXCJdKGhlYXBbcG9pbnRlcj4+c2hpZnRdKX0sZGVzdHJ1Y3RvckZ1bmN0aW9uOm51bGx9KX12YXIgZW12YWxfZnJlZV9saXN0PVtdO3ZhciBlbXZhbF9oYW5kbGVfYXJyYXk9W3t9LHt2YWx1ZTp1bmRlZmluZWR9LHt2YWx1ZTpudWxsfSx7dmFsdWU6dHJ1ZX0se3ZhbHVlOmZhbHNlfV07ZnVuY3Rpb24gX19lbXZhbF9kZWNyZWYoaGFuZGxlKXtpZihoYW5kbGU+NCYmMD09PS0tZW12YWxfaGFuZGxlX2FycmF5W2hhbmRsZV0ucmVmY291bnQpe2VtdmFsX2hhbmRsZV9hcnJheVtoYW5kbGVdPXVuZGVmaW5lZDtlbXZhbF9mcmVlX2xpc3QucHVzaChoYW5kbGUpfX1mdW5jdGlvbiBjb3VudF9lbXZhbF9oYW5kbGVzKCl7dmFyIGNvdW50PTA7Zm9yKHZhciBpPTU7aTxlbXZhbF9oYW5kbGVfYXJyYXkubGVuZ3RoOysraSl7aWYoZW12YWxfaGFuZGxlX2FycmF5W2ldIT09dW5kZWZpbmVkKXsrK2NvdW50fX1yZXR1cm4gY291bnR9ZnVuY3Rpb24gZ2V0X2ZpcnN0X2VtdmFsKCl7Zm9yKHZhciBpPTU7aTxlbXZhbF9oYW5kbGVfYXJyYXkubGVuZ3RoOysraSl7aWYoZW12YWxfaGFuZGxlX2FycmF5W2ldIT09dW5kZWZpbmVkKXtyZXR1cm4gZW12YWxfaGFuZGxlX2FycmF5W2ldfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBpbml0X2VtdmFsKCl7TW9kdWxlW1wiY291bnRfZW12YWxfaGFuZGxlc1wiXT1jb3VudF9lbXZhbF9oYW5kbGVzO01vZHVsZVtcImdldF9maXJzdF9lbXZhbFwiXT1nZXRfZmlyc3RfZW12YWx9ZnVuY3Rpb24gX19lbXZhbF9yZWdpc3Rlcih2YWx1ZSl7c3dpdGNoKHZhbHVlKXtjYXNlIHVuZGVmaW5lZDp7cmV0dXJuIDF9Y2FzZSBudWxsOntyZXR1cm4gMn1jYXNlIHRydWU6e3JldHVybiAzfWNhc2UgZmFsc2U6e3JldHVybiA0fWRlZmF1bHQ6e3ZhciBoYW5kbGU9ZW12YWxfZnJlZV9saXN0Lmxlbmd0aD9lbXZhbF9mcmVlX2xpc3QucG9wKCk6ZW12YWxfaGFuZGxlX2FycmF5Lmxlbmd0aDtlbXZhbF9oYW5kbGVfYXJyYXlbaGFuZGxlXT17cmVmY291bnQ6MSx2YWx1ZTp2YWx1ZX07cmV0dXJuIGhhbmRsZX19fWZ1bmN0aW9uIHNpbXBsZVJlYWRWYWx1ZUZyb21Qb2ludGVyKHBvaW50ZXIpe3JldHVybiB0aGlzW1wiZnJvbVdpcmVUeXBlXCJdKEhFQVBVMzJbcG9pbnRlcj4+Ml0pfWZ1bmN0aW9uIF9fZW1iaW5kX3JlZ2lzdGVyX2VtdmFsKHJhd1R5cGUsbmFtZSl7bmFtZT1yZWFkTGF0aW4xU3RyaW5nKG5hbWUpO3JlZ2lzdGVyVHlwZShyYXdUeXBlLHtuYW1lOm5hbWUsXCJmcm9tV2lyZVR5cGVcIjpmdW5jdGlvbihoYW5kbGUpe3ZhciBydj1lbXZhbF9oYW5kbGVfYXJyYXlbaGFuZGxlXS52YWx1ZTtfX2VtdmFsX2RlY3JlZihoYW5kbGUpO3JldHVybiBydn0sXCJ0b1dpcmVUeXBlXCI6ZnVuY3Rpb24oZGVzdHJ1Y3RvcnMsdmFsdWUpe3JldHVybiBfX2VtdmFsX3JlZ2lzdGVyKHZhbHVlKX0sXCJhcmdQYWNrQWR2YW5jZVwiOjgsXCJyZWFkVmFsdWVGcm9tUG9pbnRlclwiOnNpbXBsZVJlYWRWYWx1ZUZyb21Qb2ludGVyLGRlc3RydWN0b3JGdW5jdGlvbjpudWxsfSl9ZnVuY3Rpb24gX2VtYmluZF9yZXByKHYpe2lmKHY9PT1udWxsKXtyZXR1cm5cIm51bGxcIn12YXIgdD10eXBlb2YgdjtpZih0PT09XCJvYmplY3RcInx8dD09PVwiYXJyYXlcInx8dD09PVwiZnVuY3Rpb25cIil7cmV0dXJuIHYudG9TdHJpbmcoKX1lbHNle3JldHVyblwiXCIrdn19ZnVuY3Rpb24gZmxvYXRSZWFkVmFsdWVGcm9tUG9pbnRlcihuYW1lLHNoaWZ0KXtzd2l0Y2goc2hpZnQpe2Nhc2UgMjpyZXR1cm4gZnVuY3Rpb24ocG9pbnRlcil7cmV0dXJuIHRoaXNbXCJmcm9tV2lyZVR5cGVcIl0oSEVBUEYzMltwb2ludGVyPj4yXSl9O2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24ocG9pbnRlcil7cmV0dXJuIHRoaXNbXCJmcm9tV2lyZVR5cGVcIl0oSEVBUEY2NFtwb2ludGVyPj4zXSl9O2RlZmF1bHQ6dGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZmxvYXQgdHlwZTogXCIrbmFtZSl9fWZ1bmN0aW9uIF9fZW1iaW5kX3JlZ2lzdGVyX2Zsb2F0KHJhd1R5cGUsbmFtZSxzaXplKXt2YXIgc2hpZnQ9Z2V0U2hpZnRGcm9tU2l6ZShzaXplKTtuYW1lPXJlYWRMYXRpbjFTdHJpbmcobmFtZSk7cmVnaXN0ZXJUeXBlKHJhd1R5cGUse25hbWU6bmFtZSxcImZyb21XaXJlVHlwZVwiOmZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsdWV9LFwidG9XaXJlVHlwZVwiOmZ1bmN0aW9uKGRlc3RydWN0b3JzLHZhbHVlKXtpZih0eXBlb2YgdmFsdWUhPT1cIm51bWJlclwiJiZ0eXBlb2YgdmFsdWUhPT1cImJvb2xlYW5cIil7dGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgXCInK19lbWJpbmRfcmVwcih2YWx1ZSkrJ1wiIHRvICcrdGhpcy5uYW1lKX1yZXR1cm4gdmFsdWV9LFwiYXJnUGFja0FkdmFuY2VcIjo4LFwicmVhZFZhbHVlRnJvbVBvaW50ZXJcIjpmbG9hdFJlYWRWYWx1ZUZyb21Qb2ludGVyKG5hbWUsc2hpZnQpLGRlc3RydWN0b3JGdW5jdGlvbjpudWxsfSl9ZnVuY3Rpb24gaW50ZWdlclJlYWRWYWx1ZUZyb21Qb2ludGVyKG5hbWUsc2hpZnQsc2lnbmVkKXtzd2l0Y2goc2hpZnQpe2Nhc2UgMDpyZXR1cm4gc2lnbmVkP2Z1bmN0aW9uIHJlYWRTOEZyb21Qb2ludGVyKHBvaW50ZXIpe3JldHVybiBIRUFQOFtwb2ludGVyXX06ZnVuY3Rpb24gcmVhZFU4RnJvbVBvaW50ZXIocG9pbnRlcil7cmV0dXJuIEhFQVBVOFtwb2ludGVyXX07Y2FzZSAxOnJldHVybiBzaWduZWQ/ZnVuY3Rpb24gcmVhZFMxNkZyb21Qb2ludGVyKHBvaW50ZXIpe3JldHVybiBIRUFQMTZbcG9pbnRlcj4+MV19OmZ1bmN0aW9uIHJlYWRVMTZGcm9tUG9pbnRlcihwb2ludGVyKXtyZXR1cm4gSEVBUFUxNltwb2ludGVyPj4xXX07Y2FzZSAyOnJldHVybiBzaWduZWQ/ZnVuY3Rpb24gcmVhZFMzMkZyb21Qb2ludGVyKHBvaW50ZXIpe3JldHVybiBIRUFQMzJbcG9pbnRlcj4+Ml19OmZ1bmN0aW9uIHJlYWRVMzJGcm9tUG9pbnRlcihwb2ludGVyKXtyZXR1cm4gSEVBUFUzMltwb2ludGVyPj4yXX07ZGVmYXVsdDp0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBpbnRlZ2VyIHR5cGU6IFwiK25hbWUpfX1mdW5jdGlvbiBfX2VtYmluZF9yZWdpc3Rlcl9pbnRlZ2VyKHByaW1pdGl2ZVR5cGUsbmFtZSxzaXplLG1pblJhbmdlLG1heFJhbmdlKXtuYW1lPXJlYWRMYXRpbjFTdHJpbmcobmFtZSk7aWYobWF4UmFuZ2U9PT0tMSl7bWF4UmFuZ2U9NDI5NDk2NzI5NX12YXIgc2hpZnQ9Z2V0U2hpZnRGcm9tU2l6ZShzaXplKTt2YXIgZnJvbVdpcmVUeXBlPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdmFsdWV9O2lmKG1pblJhbmdlPT09MCl7dmFyIGJpdHNoaWZ0PTMyLTgqc2l6ZTtmcm9tV2lyZVR5cGU9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB2YWx1ZTw8Yml0c2hpZnQ+Pj5iaXRzaGlmdH19dmFyIGlzVW5zaWduZWRUeXBlPW5hbWUuaW5kZXhPZihcInVuc2lnbmVkXCIpIT0tMTtyZWdpc3RlclR5cGUocHJpbWl0aXZlVHlwZSx7bmFtZTpuYW1lLFwiZnJvbVdpcmVUeXBlXCI6ZnJvbVdpcmVUeXBlLFwidG9XaXJlVHlwZVwiOmZ1bmN0aW9uKGRlc3RydWN0b3JzLHZhbHVlKXtpZih0eXBlb2YgdmFsdWUhPT1cIm51bWJlclwiJiZ0eXBlb2YgdmFsdWUhPT1cImJvb2xlYW5cIil7dGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgXCInK19lbWJpbmRfcmVwcih2YWx1ZSkrJ1wiIHRvICcrdGhpcy5uYW1lKX1pZih2YWx1ZTxtaW5SYW5nZXx8dmFsdWU+bWF4UmFuZ2Upe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1Bhc3NpbmcgYSBudW1iZXIgXCInK19lbWJpbmRfcmVwcih2YWx1ZSkrJ1wiIGZyb20gSlMgc2lkZSB0byBDL0MrKyBzaWRlIHRvIGFuIGFyZ3VtZW50IG9mIHR5cGUgXCInK25hbWUrJ1wiLCB3aGljaCBpcyBvdXRzaWRlIHRoZSB2YWxpZCByYW5nZSBbJyttaW5SYW5nZStcIiwgXCIrbWF4UmFuZ2UrXCJdIVwiKX1yZXR1cm4gaXNVbnNpZ25lZFR5cGU/dmFsdWU+Pj4wOnZhbHVlfDB9LFwiYXJnUGFja0FkdmFuY2VcIjo4LFwicmVhZFZhbHVlRnJvbVBvaW50ZXJcIjppbnRlZ2VyUmVhZFZhbHVlRnJvbVBvaW50ZXIobmFtZSxzaGlmdCxtaW5SYW5nZSE9PTApLGRlc3RydWN0b3JGdW5jdGlvbjpudWxsfSl9ZnVuY3Rpb24gX19lbWJpbmRfcmVnaXN0ZXJfbWVtb3J5X3ZpZXcocmF3VHlwZSxkYXRhVHlwZUluZGV4LG5hbWUpe3ZhciB0eXBlTWFwcGluZz1bSW50OEFycmF5LFVpbnQ4QXJyYXksSW50MTZBcnJheSxVaW50MTZBcnJheSxJbnQzMkFycmF5LFVpbnQzMkFycmF5LEZsb2F0MzJBcnJheSxGbG9hdDY0QXJyYXldO3ZhciBUQT10eXBlTWFwcGluZ1tkYXRhVHlwZUluZGV4XTtmdW5jdGlvbiBkZWNvZGVNZW1vcnlWaWV3KGhhbmRsZSl7aGFuZGxlPWhhbmRsZT4+Mjt2YXIgaGVhcD1IRUFQVTMyO3ZhciBzaXplPWhlYXBbaGFuZGxlXTt2YXIgZGF0YT1oZWFwW2hhbmRsZSsxXTtyZXR1cm4gbmV3IFRBKGhlYXBbXCJidWZmZXJcIl0sZGF0YSxzaXplKX1uYW1lPXJlYWRMYXRpbjFTdHJpbmcobmFtZSk7cmVnaXN0ZXJUeXBlKHJhd1R5cGUse25hbWU6bmFtZSxcImZyb21XaXJlVHlwZVwiOmRlY29kZU1lbW9yeVZpZXcsXCJhcmdQYWNrQWR2YW5jZVwiOjgsXCJyZWFkVmFsdWVGcm9tUG9pbnRlclwiOmRlY29kZU1lbW9yeVZpZXd9LHtpZ25vcmVEdXBsaWNhdGVSZWdpc3RyYXRpb25zOnRydWV9KX1mdW5jdGlvbiBfX2VtYmluZF9yZWdpc3Rlcl9zdGRfc3RyaW5nKHJhd1R5cGUsbmFtZSl7bmFtZT1yZWFkTGF0aW4xU3RyaW5nKG5hbWUpO3ZhciBzdGRTdHJpbmdJc1VURjg9bmFtZT09PVwic3RkOjpzdHJpbmdcIjtyZWdpc3RlclR5cGUocmF3VHlwZSx7bmFtZTpuYW1lLFwiZnJvbVdpcmVUeXBlXCI6ZnVuY3Rpb24odmFsdWUpe3ZhciBsZW5ndGg9SEVBUFUzMlt2YWx1ZT4+Ml07dmFyIHN0cjtpZihzdGRTdHJpbmdJc1VURjgpe3ZhciBlbmRDaGFyPUhFQVBVOFt2YWx1ZSs0K2xlbmd0aF07dmFyIGVuZENoYXJTd2FwPTA7aWYoZW5kQ2hhciE9MCl7ZW5kQ2hhclN3YXA9ZW5kQ2hhcjtIRUFQVThbdmFsdWUrNCtsZW5ndGhdPTB9dmFyIGRlY29kZVN0YXJ0UHRyPXZhbHVlKzQ7Zm9yKHZhciBpPTA7aTw9bGVuZ3RoOysraSl7dmFyIGN1cnJlbnRCeXRlUHRyPXZhbHVlKzQraTtpZihIRUFQVThbY3VycmVudEJ5dGVQdHJdPT0wKXt2YXIgc3RyaW5nU2VnbWVudD1VVEY4VG9TdHJpbmcoZGVjb2RlU3RhcnRQdHIpO2lmKHN0cj09PXVuZGVmaW5lZClzdHI9c3RyaW5nU2VnbWVudDtlbHNle3N0cis9U3RyaW5nLmZyb21DaGFyQ29kZSgwKTtzdHIrPXN0cmluZ1NlZ21lbnR9ZGVjb2RlU3RhcnRQdHI9Y3VycmVudEJ5dGVQdHIrMX19aWYoZW5kQ2hhclN3YXAhPTApSEVBUFU4W3ZhbHVlKzQrbGVuZ3RoXT1lbmRDaGFyU3dhcH1lbHNle3ZhciBhPW5ldyBBcnJheShsZW5ndGgpO2Zvcih2YXIgaT0wO2k8bGVuZ3RoOysraSl7YVtpXT1TdHJpbmcuZnJvbUNoYXJDb2RlKEhFQVBVOFt2YWx1ZSs0K2ldKX1zdHI9YS5qb2luKFwiXCIpfV9mcmVlKHZhbHVlKTtyZXR1cm4gc3RyfSxcInRvV2lyZVR5cGVcIjpmdW5jdGlvbihkZXN0cnVjdG9ycyx2YWx1ZSl7aWYodmFsdWUgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcil7dmFsdWU9bmV3IFVpbnQ4QXJyYXkodmFsdWUpfXZhciBnZXRMZW5ndGg7dmFyIHZhbHVlSXNPZlR5cGVTdHJpbmc9dHlwZW9mIHZhbHVlPT09XCJzdHJpbmdcIjtpZighKHZhbHVlSXNPZlR5cGVTdHJpbmd8fHZhbHVlIGluc3RhbmNlb2YgVWludDhBcnJheXx8dmFsdWUgaW5zdGFuY2VvZiBVaW50OENsYW1wZWRBcnJheXx8dmFsdWUgaW5zdGFuY2VvZiBJbnQ4QXJyYXkpKXt0aHJvd0JpbmRpbmdFcnJvcihcIkNhbm5vdCBwYXNzIG5vbi1zdHJpbmcgdG8gc3RkOjpzdHJpbmdcIil9aWYoc3RkU3RyaW5nSXNVVEY4JiZ2YWx1ZUlzT2ZUeXBlU3RyaW5nKXtnZXRMZW5ndGg9ZnVuY3Rpb24oKXtyZXR1cm4gbGVuZ3RoQnl0ZXNVVEY4KHZhbHVlKX19ZWxzZXtnZXRMZW5ndGg9ZnVuY3Rpb24oKXtyZXR1cm4gdmFsdWUubGVuZ3RofX12YXIgbGVuZ3RoPWdldExlbmd0aCgpO3ZhciBwdHI9X21hbGxvYyg0K2xlbmd0aCsxKTtIRUFQVTMyW3B0cj4+Ml09bGVuZ3RoO2lmKHN0ZFN0cmluZ0lzVVRGOCYmdmFsdWVJc09mVHlwZVN0cmluZyl7c3RyaW5nVG9VVEY4KHZhbHVlLHB0cis0LGxlbmd0aCsxKX1lbHNle2lmKHZhbHVlSXNPZlR5cGVTdHJpbmcpe2Zvcih2YXIgaT0wO2k8bGVuZ3RoOysraSl7dmFyIGNoYXJDb2RlPXZhbHVlLmNoYXJDb2RlQXQoaSk7aWYoY2hhckNvZGU+MjU1KXtfZnJlZShwdHIpO3Rocm93QmluZGluZ0Vycm9yKFwiU3RyaW5nIGhhcyBVVEYtMTYgY29kZSB1bml0cyB0aGF0IGRvIG5vdCBmaXQgaW4gOCBiaXRzXCIpfUhFQVBVOFtwdHIrNCtpXT1jaGFyQ29kZX19ZWxzZXtmb3IodmFyIGk9MDtpPGxlbmd0aDsrK2kpe0hFQVBVOFtwdHIrNCtpXT12YWx1ZVtpXX19fWlmKGRlc3RydWN0b3JzIT09bnVsbCl7ZGVzdHJ1Y3RvcnMucHVzaChfZnJlZSxwdHIpfXJldHVybiBwdHJ9LFwiYXJnUGFja0FkdmFuY2VcIjo4LFwicmVhZFZhbHVlRnJvbVBvaW50ZXJcIjpzaW1wbGVSZWFkVmFsdWVGcm9tUG9pbnRlcixkZXN0cnVjdG9yRnVuY3Rpb246ZnVuY3Rpb24ocHRyKXtfZnJlZShwdHIpfX0pfWZ1bmN0aW9uIF9fZW1iaW5kX3JlZ2lzdGVyX3N0ZF93c3RyaW5nKHJhd1R5cGUsY2hhclNpemUsbmFtZSl7bmFtZT1yZWFkTGF0aW4xU3RyaW5nKG5hbWUpO3ZhciBnZXRIZWFwLHNoaWZ0O2lmKGNoYXJTaXplPT09Mil7Z2V0SGVhcD1mdW5jdGlvbigpe3JldHVybiBIRUFQVTE2fTtzaGlmdD0xfWVsc2UgaWYoY2hhclNpemU9PT00KXtnZXRIZWFwPWZ1bmN0aW9uKCl7cmV0dXJuIEhFQVBVMzJ9O3NoaWZ0PTJ9cmVnaXN0ZXJUeXBlKHJhd1R5cGUse25hbWU6bmFtZSxcImZyb21XaXJlVHlwZVwiOmZ1bmN0aW9uKHZhbHVlKXt2YXIgSEVBUD1nZXRIZWFwKCk7dmFyIGxlbmd0aD1IRUFQVTMyW3ZhbHVlPj4yXTt2YXIgYT1uZXcgQXJyYXkobGVuZ3RoKTt2YXIgc3RhcnQ9dmFsdWUrND4+c2hpZnQ7Zm9yKHZhciBpPTA7aTxsZW5ndGg7KytpKXthW2ldPVN0cmluZy5mcm9tQ2hhckNvZGUoSEVBUFtzdGFydCtpXSl9X2ZyZWUodmFsdWUpO3JldHVybiBhLmpvaW4oXCJcIil9LFwidG9XaXJlVHlwZVwiOmZ1bmN0aW9uKGRlc3RydWN0b3JzLHZhbHVlKXt2YXIgSEVBUD1nZXRIZWFwKCk7dmFyIGxlbmd0aD12YWx1ZS5sZW5ndGg7dmFyIHB0cj1fbWFsbG9jKDQrbGVuZ3RoKmNoYXJTaXplKTtIRUFQVTMyW3B0cj4+Ml09bGVuZ3RoO3ZhciBzdGFydD1wdHIrND4+c2hpZnQ7Zm9yKHZhciBpPTA7aTxsZW5ndGg7KytpKXtIRUFQW3N0YXJ0K2ldPXZhbHVlLmNoYXJDb2RlQXQoaSl9aWYoZGVzdHJ1Y3RvcnMhPT1udWxsKXtkZXN0cnVjdG9ycy5wdXNoKF9mcmVlLHB0cil9cmV0dXJuIHB0cn0sXCJhcmdQYWNrQWR2YW5jZVwiOjgsXCJyZWFkVmFsdWVGcm9tUG9pbnRlclwiOnNpbXBsZVJlYWRWYWx1ZUZyb21Qb2ludGVyLGRlc3RydWN0b3JGdW5jdGlvbjpmdW5jdGlvbihwdHIpe19mcmVlKHB0cil9fSl9ZnVuY3Rpb24gX19lbWJpbmRfcmVnaXN0ZXJfdm9pZChyYXdUeXBlLG5hbWUpe25hbWU9cmVhZExhdGluMVN0cmluZyhuYW1lKTtyZWdpc3RlclR5cGUocmF3VHlwZSx7aXNWb2lkOnRydWUsbmFtZTpuYW1lLFwiYXJnUGFja0FkdmFuY2VcIjowLFwiZnJvbVdpcmVUeXBlXCI6ZnVuY3Rpb24oKXtyZXR1cm4gdW5kZWZpbmVkfSxcInRvV2lyZVR5cGVcIjpmdW5jdGlvbihkZXN0cnVjdG9ycyxvKXtyZXR1cm4gdW5kZWZpbmVkfX0pfWZ1bmN0aW9uIF9hYm9ydCgpe01vZHVsZVtcImFib3J0XCJdKCl9ZnVuY3Rpb24gX2Vtc2NyaXB0ZW5fZ2V0X2hlYXBfc2l6ZSgpe3JldHVybiBIRUFQOC5sZW5ndGh9ZnVuY3Rpb24gX2dldGVudihuYW1lKXtpZihuYW1lPT09MClyZXR1cm4gMDtuYW1lPVVURjhUb1N0cmluZyhuYW1lKTtpZighRU5WLmhhc093blByb3BlcnR5KG5hbWUpKXJldHVybiAwO2lmKF9nZXRlbnYucmV0KV9mcmVlKF9nZXRlbnYucmV0KTtfZ2V0ZW52LnJldD1hbGxvY2F0ZVVURjgoRU5WW25hbWVdKTtyZXR1cm4gX2dldGVudi5yZXR9ZnVuY3Rpb24gX2xsdm1fbG9nMl9mMzIoeCl7cmV0dXJuIE1hdGgubG9nKHgpL01hdGguTE4yfWZ1bmN0aW9uIF9sbHZtX2xvZzJfZjY0KGEwKXtyZXR1cm4gX2xsdm1fbG9nMl9mMzIoYTApfWZ1bmN0aW9uIF9sbHZtX3N0YWNrcmVzdG9yZShwKXt2YXIgc2VsZj1fbGx2bV9zdGFja3NhdmU7dmFyIHJldD1zZWxmLkxMVk1fU0FWRURTVEFDS1NbcF07c2VsZi5MTFZNX1NBVkVEU1RBQ0tTLnNwbGljZShwLDEpO3N0YWNrUmVzdG9yZShyZXQpfWZ1bmN0aW9uIF9sbHZtX3N0YWNrc2F2ZSgpe3ZhciBzZWxmPV9sbHZtX3N0YWNrc2F2ZTtpZighc2VsZi5MTFZNX1NBVkVEU1RBQ0tTKXtzZWxmLkxMVk1fU0FWRURTVEFDS1M9W119c2VsZi5MTFZNX1NBVkVEU1RBQ0tTLnB1c2goc3RhY2tTYXZlKCkpO3JldHVybiBzZWxmLkxMVk1fU0FWRURTVEFDS1MubGVuZ3RoLTF9ZnVuY3Rpb24gX2xsdm1fdHJhcCgpe2Fib3J0KFwidHJhcCFcIil9ZnVuY3Rpb24gX2Vtc2NyaXB0ZW5fbWVtY3B5X2JpZyhkZXN0LHNyYyxudW0pe0hFQVBVOC5zZXQoSEVBUFU4LnN1YmFycmF5KHNyYyxzcmMrbnVtKSxkZXN0KX1mdW5jdGlvbiBfcHRocmVhZF9jb25kX3dhaXQoKXtyZXR1cm4gMH1mdW5jdGlvbiBhYm9ydE9uQ2Fubm90R3Jvd01lbW9yeShyZXF1ZXN0ZWRTaXplKXthYm9ydChcIkNhbm5vdCBlbmxhcmdlIG1lbW9yeSBhcnJheXMgdG8gc2l6ZSBcIityZXF1ZXN0ZWRTaXplK1wiIGJ5dGVzIChPT00pLiBFaXRoZXIgKDEpIGNvbXBpbGUgd2l0aCAgLXMgVE9UQUxfTUVNT1JZPVggIHdpdGggWCBoaWdoZXIgdGhhbiB0aGUgY3VycmVudCB2YWx1ZSBcIitIRUFQOC5sZW5ndGgrXCIsICgyKSBjb21waWxlIHdpdGggIC1zIEFMTE9XX01FTU9SWV9HUk9XVEg9MSAgd2hpY2ggYWxsb3dzIGluY3JlYXNpbmcgdGhlIHNpemUgYXQgcnVudGltZSwgb3IgKDMpIGlmIHlvdSB3YW50IG1hbGxvYyB0byByZXR1cm4gTlVMTCAoMCkgaW5zdGVhZCBvZiB0aGlzIGFib3J0LCBjb21waWxlIHdpdGggIC1zIEFCT1JUSU5HX01BTExPQz0wIFwiKX1mdW5jdGlvbiBlbXNjcmlwdGVuX3JlYWxsb2NfYnVmZmVyKHNpemUpe3ZhciBQQUdFX01VTFRJUExFPTY1NTM2O3NpemU9YWxpZ25VcChzaXplLFBBR0VfTVVMVElQTEUpO3ZhciBvbGRTaXplPWJ1ZmZlci5ieXRlTGVuZ3RoO3RyeXt2YXIgcmVzdWx0PXdhc21NZW1vcnkuZ3Jvdygoc2l6ZS1vbGRTaXplKS82NTUzNik7aWYocmVzdWx0IT09KC0xfDApKXtidWZmZXI9d2FzbU1lbW9yeS5idWZmZXI7cmV0dXJuIHRydWV9ZWxzZXtyZXR1cm4gZmFsc2V9fWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoXCJlbXNjcmlwdGVuX3JlYWxsb2NfYnVmZmVyOiBBdHRlbXB0ZWQgdG8gZ3JvdyBmcm9tIFwiK29sZFNpemUrXCIgYnl0ZXMgdG8gXCIrc2l6ZStcIiBieXRlcywgYnV0IGdvdCBlcnJvcjogXCIrZSk7cmV0dXJuIGZhbHNlfX1mdW5jdGlvbiBfZW1zY3JpcHRlbl9yZXNpemVfaGVhcChyZXF1ZXN0ZWRTaXplKXt2YXIgb2xkU2l6ZT1fZW1zY3JpcHRlbl9nZXRfaGVhcF9zaXplKCk7YXNzZXJ0KHJlcXVlc3RlZFNpemU+b2xkU2l6ZSk7dmFyIFBBR0VfTVVMVElQTEU9NjU1MzY7dmFyIExJTUlUPTIxNDc0ODM2NDgtUEFHRV9NVUxUSVBMRTtpZihyZXF1ZXN0ZWRTaXplPkxJTUlUKXtlcnIoXCJDYW5ub3QgZW5sYXJnZSBtZW1vcnksIGFza2VkIHRvIGdvIHVwIHRvIFwiK3JlcXVlc3RlZFNpemUrXCIgYnl0ZXMsIGJ1dCB0aGUgbGltaXQgaXMgXCIrTElNSVQrXCIgYnl0ZXMhXCIpO3JldHVybiBmYWxzZX12YXIgTUlOX1RPVEFMX01FTU9SWT0xNjc3NzIxNjt2YXIgbmV3U2l6ZT1NYXRoLm1heChvbGRTaXplLE1JTl9UT1RBTF9NRU1PUlkpO3doaWxlKG5ld1NpemU8cmVxdWVzdGVkU2l6ZSl7aWYobmV3U2l6ZTw9NTM2ODcwOTEyKXtuZXdTaXplPWFsaWduVXAoMipuZXdTaXplLFBBR0VfTVVMVElQTEUpfWVsc2V7bmV3U2l6ZT1NYXRoLm1pbihhbGlnblVwKCgzKm5ld1NpemUrMjE0NzQ4MzY0OCkvNCxQQUdFX01VTFRJUExFKSxMSU1JVCl9aWYobmV3U2l6ZT09PW9sZFNpemUpe3dhcm5PbmNlKFwiQ2Fubm90IGFzayBmb3IgbW9yZSBtZW1vcnkgc2luY2Ugd2UgcmVhY2hlZCB0aGUgcHJhY3RpY2FsIGxpbWl0IGluIGJyb3dzZXJzICh3aGljaCBpcyBqdXN0IGJlbG93IDJHQiksIHNvIHRoZSByZXF1ZXN0IHdvdWxkIGhhdmUgZmFpbGVkLiBSZXF1ZXN0aW5nIG9ubHkgXCIrSEVBUDgubGVuZ3RoKX19dmFyIHN0YXJ0PURhdGUubm93KCk7aWYoIWVtc2NyaXB0ZW5fcmVhbGxvY19idWZmZXIobmV3U2l6ZSkpe2VycihcIkZhaWxlZCB0byBncm93IHRoZSBoZWFwIGZyb20gXCIrb2xkU2l6ZStcIiBieXRlcyB0byBcIituZXdTaXplK1wiIGJ5dGVzLCBub3QgZW5vdWdoIG1lbW9yeSFcIik7cmV0dXJuIGZhbHNlfXVwZGF0ZUdsb2JhbEJ1ZmZlclZpZXdzKCk7cmV0dXJuIHRydWV9ZnVuY3Rpb24gX19pc0xlYXBZZWFyKHllYXIpe3JldHVybiB5ZWFyJTQ9PT0wJiYoeWVhciUxMDAhPT0wfHx5ZWFyJTQwMD09PTApfWZ1bmN0aW9uIF9fYXJyYXlTdW0oYXJyYXksaW5kZXgpe3ZhciBzdW09MDtmb3IodmFyIGk9MDtpPD1pbmRleDtzdW0rPWFycmF5W2krK10pO3JldHVybiBzdW19dmFyIF9fTU9OVEhfREFZU19MRUFQPVszMSwyOSwzMSwzMCwzMSwzMCwzMSwzMSwzMCwzMSwzMCwzMV07dmFyIF9fTU9OVEhfREFZU19SRUdVTEFSPVszMSwyOCwzMSwzMCwzMSwzMCwzMSwzMSwzMCwzMSwzMCwzMV07ZnVuY3Rpb24gX19hZGREYXlzKGRhdGUsZGF5cyl7dmFyIG5ld0RhdGU9bmV3IERhdGUoZGF0ZS5nZXRUaW1lKCkpO3doaWxlKGRheXM+MCl7dmFyIGxlYXA9X19pc0xlYXBZZWFyKG5ld0RhdGUuZ2V0RnVsbFllYXIoKSk7dmFyIGN1cnJlbnRNb250aD1uZXdEYXRlLmdldE1vbnRoKCk7dmFyIGRheXNJbkN1cnJlbnRNb250aD0obGVhcD9fX01PTlRIX0RBWVNfTEVBUDpfX01PTlRIX0RBWVNfUkVHVUxBUilbY3VycmVudE1vbnRoXTtpZihkYXlzPmRheXNJbkN1cnJlbnRNb250aC1uZXdEYXRlLmdldERhdGUoKSl7ZGF5cy09ZGF5c0luQ3VycmVudE1vbnRoLW5ld0RhdGUuZ2V0RGF0ZSgpKzE7bmV3RGF0ZS5zZXREYXRlKDEpO2lmKGN1cnJlbnRNb250aDwxMSl7bmV3RGF0ZS5zZXRNb250aChjdXJyZW50TW9udGgrMSl9ZWxzZXtuZXdEYXRlLnNldE1vbnRoKDApO25ld0RhdGUuc2V0RnVsbFllYXIobmV3RGF0ZS5nZXRGdWxsWWVhcigpKzEpfX1lbHNle25ld0RhdGUuc2V0RGF0ZShuZXdEYXRlLmdldERhdGUoKStkYXlzKTtyZXR1cm4gbmV3RGF0ZX19cmV0dXJuIG5ld0RhdGV9ZnVuY3Rpb24gX3N0cmZ0aW1lKHMsbWF4c2l6ZSxmb3JtYXQsdG0pe3ZhciB0bV96b25lPUhFQVAzMlt0bSs0MD4+Ml07dmFyIGRhdGU9e3RtX3NlYzpIRUFQMzJbdG0+PjJdLHRtX21pbjpIRUFQMzJbdG0rND4+Ml0sdG1faG91cjpIRUFQMzJbdG0rOD4+Ml0sdG1fbWRheTpIRUFQMzJbdG0rMTI+PjJdLHRtX21vbjpIRUFQMzJbdG0rMTY+PjJdLHRtX3llYXI6SEVBUDMyW3RtKzIwPj4yXSx0bV93ZGF5OkhFQVAzMlt0bSsyND4+Ml0sdG1feWRheTpIRUFQMzJbdG0rMjg+PjJdLHRtX2lzZHN0OkhFQVAzMlt0bSszMj4+Ml0sdG1fZ210b2ZmOkhFQVAzMlt0bSszNj4+Ml0sdG1fem9uZTp0bV96b25lP1VURjhUb1N0cmluZyh0bV96b25lKTpcIlwifTt2YXIgcGF0dGVybj1VVEY4VG9TdHJpbmcoZm9ybWF0KTt2YXIgRVhQQU5TSU9OX1JVTEVTXzE9e1wiJWNcIjpcIiVhICViICVkICVIOiVNOiVTICVZXCIsXCIlRFwiOlwiJW0vJWQvJXlcIixcIiVGXCI6XCIlWS0lbS0lZFwiLFwiJWhcIjpcIiViXCIsXCIlclwiOlwiJUk6JU06JVMgJXBcIixcIiVSXCI6XCIlSDolTVwiLFwiJVRcIjpcIiVIOiVNOiVTXCIsXCIleFwiOlwiJW0vJWQvJXlcIixcIiVYXCI6XCIlSDolTTolU1wiLFwiJUVjXCI6XCIlY1wiLFwiJUVDXCI6XCIlQ1wiLFwiJUV4XCI6XCIlbS8lZC8leVwiLFwiJUVYXCI6XCIlSDolTTolU1wiLFwiJUV5XCI6XCIleVwiLFwiJUVZXCI6XCIlWVwiLFwiJU9kXCI6XCIlZFwiLFwiJU9lXCI6XCIlZVwiLFwiJU9IXCI6XCIlSFwiLFwiJU9JXCI6XCIlSVwiLFwiJU9tXCI6XCIlbVwiLFwiJU9NXCI6XCIlTVwiLFwiJU9TXCI6XCIlU1wiLFwiJU91XCI6XCIldVwiLFwiJU9VXCI6XCIlVVwiLFwiJU9WXCI6XCIlVlwiLFwiJU93XCI6XCIld1wiLFwiJU9XXCI6XCIlV1wiLFwiJU95XCI6XCIleVwifTtmb3IodmFyIHJ1bGUgaW4gRVhQQU5TSU9OX1JVTEVTXzEpe3BhdHRlcm49cGF0dGVybi5yZXBsYWNlKG5ldyBSZWdFeHAocnVsZSxcImdcIiksRVhQQU5TSU9OX1JVTEVTXzFbcnVsZV0pfXZhciBXRUVLREFZUz1bXCJTdW5kYXlcIixcIk1vbmRheVwiLFwiVHVlc2RheVwiLFwiV2VkbmVzZGF5XCIsXCJUaHVyc2RheVwiLFwiRnJpZGF5XCIsXCJTYXR1cmRheVwiXTt2YXIgTU9OVEhTPVtcIkphbnVhcnlcIixcIkZlYnJ1YXJ5XCIsXCJNYXJjaFwiLFwiQXByaWxcIixcIk1heVwiLFwiSnVuZVwiLFwiSnVseVwiLFwiQXVndXN0XCIsXCJTZXB0ZW1iZXJcIixcIk9jdG9iZXJcIixcIk5vdmVtYmVyXCIsXCJEZWNlbWJlclwiXTtmdW5jdGlvbiBsZWFkaW5nU29tZXRoaW5nKHZhbHVlLGRpZ2l0cyxjaGFyYWN0ZXIpe3ZhciBzdHI9dHlwZW9mIHZhbHVlPT09XCJudW1iZXJcIj92YWx1ZS50b1N0cmluZygpOnZhbHVlfHxcIlwiO3doaWxlKHN0ci5sZW5ndGg8ZGlnaXRzKXtzdHI9Y2hhcmFjdGVyWzBdK3N0cn1yZXR1cm4gc3RyfWZ1bmN0aW9uIGxlYWRpbmdOdWxscyh2YWx1ZSxkaWdpdHMpe3JldHVybiBsZWFkaW5nU29tZXRoaW5nKHZhbHVlLGRpZ2l0cyxcIjBcIil9ZnVuY3Rpb24gY29tcGFyZUJ5RGF5KGRhdGUxLGRhdGUyKXtmdW5jdGlvbiBzZ24odmFsdWUpe3JldHVybiB2YWx1ZTwwPy0xOnZhbHVlPjA/MTowfXZhciBjb21wYXJlO2lmKChjb21wYXJlPXNnbihkYXRlMS5nZXRGdWxsWWVhcigpLWRhdGUyLmdldEZ1bGxZZWFyKCkpKT09PTApe2lmKChjb21wYXJlPXNnbihkYXRlMS5nZXRNb250aCgpLWRhdGUyLmdldE1vbnRoKCkpKT09PTApe2NvbXBhcmU9c2duKGRhdGUxLmdldERhdGUoKS1kYXRlMi5nZXREYXRlKCkpfX1yZXR1cm4gY29tcGFyZX1mdW5jdGlvbiBnZXRGaXJzdFdlZWtTdGFydERhdGUoamFuRm91cnRoKXtzd2l0Y2goamFuRm91cnRoLmdldERheSgpKXtjYXNlIDA6cmV0dXJuIG5ldyBEYXRlKGphbkZvdXJ0aC5nZXRGdWxsWWVhcigpLTEsMTEsMjkpO2Nhc2UgMTpyZXR1cm4gamFuRm91cnRoO2Nhc2UgMjpyZXR1cm4gbmV3IERhdGUoamFuRm91cnRoLmdldEZ1bGxZZWFyKCksMCwzKTtjYXNlIDM6cmV0dXJuIG5ldyBEYXRlKGphbkZvdXJ0aC5nZXRGdWxsWWVhcigpLDAsMik7Y2FzZSA0OnJldHVybiBuZXcgRGF0ZShqYW5Gb3VydGguZ2V0RnVsbFllYXIoKSwwLDEpO2Nhc2UgNTpyZXR1cm4gbmV3IERhdGUoamFuRm91cnRoLmdldEZ1bGxZZWFyKCktMSwxMSwzMSk7Y2FzZSA2OnJldHVybiBuZXcgRGF0ZShqYW5Gb3VydGguZ2V0RnVsbFllYXIoKS0xLDExLDMwKX19ZnVuY3Rpb24gZ2V0V2Vla0Jhc2VkWWVhcihkYXRlKXt2YXIgdGhpc0RhdGU9X19hZGREYXlzKG5ldyBEYXRlKGRhdGUudG1feWVhcisxOTAwLDAsMSksZGF0ZS50bV95ZGF5KTt2YXIgamFuRm91cnRoVGhpc1llYXI9bmV3IERhdGUodGhpc0RhdGUuZ2V0RnVsbFllYXIoKSwwLDQpO3ZhciBqYW5Gb3VydGhOZXh0WWVhcj1uZXcgRGF0ZSh0aGlzRGF0ZS5nZXRGdWxsWWVhcigpKzEsMCw0KTt2YXIgZmlyc3RXZWVrU3RhcnRUaGlzWWVhcj1nZXRGaXJzdFdlZWtTdGFydERhdGUoamFuRm91cnRoVGhpc1llYXIpO3ZhciBmaXJzdFdlZWtTdGFydE5leHRZZWFyPWdldEZpcnN0V2Vla1N0YXJ0RGF0ZShqYW5Gb3VydGhOZXh0WWVhcik7aWYoY29tcGFyZUJ5RGF5KGZpcnN0V2Vla1N0YXJ0VGhpc1llYXIsdGhpc0RhdGUpPD0wKXtpZihjb21wYXJlQnlEYXkoZmlyc3RXZWVrU3RhcnROZXh0WWVhcix0aGlzRGF0ZSk8PTApe3JldHVybiB0aGlzRGF0ZS5nZXRGdWxsWWVhcigpKzF9ZWxzZXtyZXR1cm4gdGhpc0RhdGUuZ2V0RnVsbFllYXIoKX19ZWxzZXtyZXR1cm4gdGhpc0RhdGUuZ2V0RnVsbFllYXIoKS0xfX12YXIgRVhQQU5TSU9OX1JVTEVTXzI9e1wiJWFcIjpmdW5jdGlvbihkYXRlKXtyZXR1cm4gV0VFS0RBWVNbZGF0ZS50bV93ZGF5XS5zdWJzdHJpbmcoMCwzKX0sXCIlQVwiOmZ1bmN0aW9uKGRhdGUpe3JldHVybiBXRUVLREFZU1tkYXRlLnRtX3dkYXldfSxcIiViXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIE1PTlRIU1tkYXRlLnRtX21vbl0uc3Vic3RyaW5nKDAsMyl9LFwiJUJcIjpmdW5jdGlvbihkYXRlKXtyZXR1cm4gTU9OVEhTW2RhdGUudG1fbW9uXX0sXCIlQ1wiOmZ1bmN0aW9uKGRhdGUpe3ZhciB5ZWFyPWRhdGUudG1feWVhcisxOTAwO3JldHVybiBsZWFkaW5nTnVsbHMoeWVhci8xMDB8MCwyKX0sXCIlZFwiOmZ1bmN0aW9uKGRhdGUpe3JldHVybiBsZWFkaW5nTnVsbHMoZGF0ZS50bV9tZGF5LDIpfSxcIiVlXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGxlYWRpbmdTb21ldGhpbmcoZGF0ZS50bV9tZGF5LDIsXCIgXCIpfSxcIiVnXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGdldFdlZWtCYXNlZFllYXIoZGF0ZSkudG9TdHJpbmcoKS5zdWJzdHJpbmcoMil9LFwiJUdcIjpmdW5jdGlvbihkYXRlKXtyZXR1cm4gZ2V0V2Vla0Jhc2VkWWVhcihkYXRlKX0sXCIlSFwiOmZ1bmN0aW9uKGRhdGUpe3JldHVybiBsZWFkaW5nTnVsbHMoZGF0ZS50bV9ob3VyLDIpfSxcIiVJXCI6ZnVuY3Rpb24oZGF0ZSl7dmFyIHR3ZWx2ZUhvdXI9ZGF0ZS50bV9ob3VyO2lmKHR3ZWx2ZUhvdXI9PTApdHdlbHZlSG91cj0xMjtlbHNlIGlmKHR3ZWx2ZUhvdXI+MTIpdHdlbHZlSG91ci09MTI7cmV0dXJuIGxlYWRpbmdOdWxscyh0d2VsdmVIb3VyLDIpfSxcIiVqXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGxlYWRpbmdOdWxscyhkYXRlLnRtX21kYXkrX19hcnJheVN1bShfX2lzTGVhcFllYXIoZGF0ZS50bV95ZWFyKzE5MDApP19fTU9OVEhfREFZU19MRUFQOl9fTU9OVEhfREFZU19SRUdVTEFSLGRhdGUudG1fbW9uLTEpLDMpfSxcIiVtXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGxlYWRpbmdOdWxscyhkYXRlLnRtX21vbisxLDIpfSxcIiVNXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGxlYWRpbmdOdWxscyhkYXRlLnRtX21pbiwyKX0sXCIlblwiOmZ1bmN0aW9uKCl7cmV0dXJuXCJcXG5cIn0sXCIlcFwiOmZ1bmN0aW9uKGRhdGUpe2lmKGRhdGUudG1faG91cj49MCYmZGF0ZS50bV9ob3VyPDEyKXtyZXR1cm5cIkFNXCJ9ZWxzZXtyZXR1cm5cIlBNXCJ9fSxcIiVTXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGxlYWRpbmdOdWxscyhkYXRlLnRtX3NlYywyKX0sXCIldFwiOmZ1bmN0aW9uKCl7cmV0dXJuXCJcXHRcIn0sXCIldVwiOmZ1bmN0aW9uKGRhdGUpe3JldHVybiBkYXRlLnRtX3dkYXl8fDd9LFwiJVVcIjpmdW5jdGlvbihkYXRlKXt2YXIgamFuRmlyc3Q9bmV3IERhdGUoZGF0ZS50bV95ZWFyKzE5MDAsMCwxKTt2YXIgZmlyc3RTdW5kYXk9amFuRmlyc3QuZ2V0RGF5KCk9PT0wP2phbkZpcnN0Ol9fYWRkRGF5cyhqYW5GaXJzdCw3LWphbkZpcnN0LmdldERheSgpKTt2YXIgZW5kRGF0ZT1uZXcgRGF0ZShkYXRlLnRtX3llYXIrMTkwMCxkYXRlLnRtX21vbixkYXRlLnRtX21kYXkpO2lmKGNvbXBhcmVCeURheShmaXJzdFN1bmRheSxlbmREYXRlKTwwKXt2YXIgZmVicnVhcnlGaXJzdFVudGlsRW5kTW9udGg9X19hcnJheVN1bShfX2lzTGVhcFllYXIoZW5kRGF0ZS5nZXRGdWxsWWVhcigpKT9fX01PTlRIX0RBWVNfTEVBUDpfX01PTlRIX0RBWVNfUkVHVUxBUixlbmREYXRlLmdldE1vbnRoKCktMSktMzE7dmFyIGZpcnN0U3VuZGF5VW50aWxFbmRKYW51YXJ5PTMxLWZpcnN0U3VuZGF5LmdldERhdGUoKTt2YXIgZGF5cz1maXJzdFN1bmRheVVudGlsRW5kSmFudWFyeStmZWJydWFyeUZpcnN0VW50aWxFbmRNb250aCtlbmREYXRlLmdldERhdGUoKTtyZXR1cm4gbGVhZGluZ051bGxzKE1hdGguY2VpbChkYXlzLzcpLDIpfXJldHVybiBjb21wYXJlQnlEYXkoZmlyc3RTdW5kYXksamFuRmlyc3QpPT09MD9cIjAxXCI6XCIwMFwifSxcIiVWXCI6ZnVuY3Rpb24oZGF0ZSl7dmFyIGphbkZvdXJ0aFRoaXNZZWFyPW5ldyBEYXRlKGRhdGUudG1feWVhcisxOTAwLDAsNCk7dmFyIGphbkZvdXJ0aE5leHRZZWFyPW5ldyBEYXRlKGRhdGUudG1feWVhcisxOTAxLDAsNCk7dmFyIGZpcnN0V2Vla1N0YXJ0VGhpc1llYXI9Z2V0Rmlyc3RXZWVrU3RhcnREYXRlKGphbkZvdXJ0aFRoaXNZZWFyKTt2YXIgZmlyc3RXZWVrU3RhcnROZXh0WWVhcj1nZXRGaXJzdFdlZWtTdGFydERhdGUoamFuRm91cnRoTmV4dFllYXIpO3ZhciBlbmREYXRlPV9fYWRkRGF5cyhuZXcgRGF0ZShkYXRlLnRtX3llYXIrMTkwMCwwLDEpLGRhdGUudG1feWRheSk7aWYoY29tcGFyZUJ5RGF5KGVuZERhdGUsZmlyc3RXZWVrU3RhcnRUaGlzWWVhcik8MCl7cmV0dXJuXCI1M1wifWlmKGNvbXBhcmVCeURheShmaXJzdFdlZWtTdGFydE5leHRZZWFyLGVuZERhdGUpPD0wKXtyZXR1cm5cIjAxXCJ9dmFyIGRheXNEaWZmZXJlbmNlO2lmKGZpcnN0V2Vla1N0YXJ0VGhpc1llYXIuZ2V0RnVsbFllYXIoKTxkYXRlLnRtX3llYXIrMTkwMCl7ZGF5c0RpZmZlcmVuY2U9ZGF0ZS50bV95ZGF5KzMyLWZpcnN0V2Vla1N0YXJ0VGhpc1llYXIuZ2V0RGF0ZSgpfWVsc2V7ZGF5c0RpZmZlcmVuY2U9ZGF0ZS50bV95ZGF5KzEtZmlyc3RXZWVrU3RhcnRUaGlzWWVhci5nZXREYXRlKCl9cmV0dXJuIGxlYWRpbmdOdWxscyhNYXRoLmNlaWwoZGF5c0RpZmZlcmVuY2UvNyksMil9LFwiJXdcIjpmdW5jdGlvbihkYXRlKXtyZXR1cm4gZGF0ZS50bV93ZGF5fSxcIiVXXCI6ZnVuY3Rpb24oZGF0ZSl7dmFyIGphbkZpcnN0PW5ldyBEYXRlKGRhdGUudG1feWVhciwwLDEpO3ZhciBmaXJzdE1vbmRheT1qYW5GaXJzdC5nZXREYXkoKT09PTE/amFuRmlyc3Q6X19hZGREYXlzKGphbkZpcnN0LGphbkZpcnN0LmdldERheSgpPT09MD8xOjctamFuRmlyc3QuZ2V0RGF5KCkrMSk7dmFyIGVuZERhdGU9bmV3IERhdGUoZGF0ZS50bV95ZWFyKzE5MDAsZGF0ZS50bV9tb24sZGF0ZS50bV9tZGF5KTtpZihjb21wYXJlQnlEYXkoZmlyc3RNb25kYXksZW5kRGF0ZSk8MCl7dmFyIGZlYnJ1YXJ5Rmlyc3RVbnRpbEVuZE1vbnRoPV9fYXJyYXlTdW0oX19pc0xlYXBZZWFyKGVuZERhdGUuZ2V0RnVsbFllYXIoKSk/X19NT05USF9EQVlTX0xFQVA6X19NT05USF9EQVlTX1JFR1VMQVIsZW5kRGF0ZS5nZXRNb250aCgpLTEpLTMxO3ZhciBmaXJzdE1vbmRheVVudGlsRW5kSmFudWFyeT0zMS1maXJzdE1vbmRheS5nZXREYXRlKCk7dmFyIGRheXM9Zmlyc3RNb25kYXlVbnRpbEVuZEphbnVhcnkrZmVicnVhcnlGaXJzdFVudGlsRW5kTW9udGgrZW5kRGF0ZS5nZXREYXRlKCk7cmV0dXJuIGxlYWRpbmdOdWxscyhNYXRoLmNlaWwoZGF5cy83KSwyKX1yZXR1cm4gY29tcGFyZUJ5RGF5KGZpcnN0TW9uZGF5LGphbkZpcnN0KT09PTA/XCIwMVwiOlwiMDBcIn0sXCIleVwiOmZ1bmN0aW9uKGRhdGUpe3JldHVybihkYXRlLnRtX3llYXIrMTkwMCkudG9TdHJpbmcoKS5zdWJzdHJpbmcoMil9LFwiJVlcIjpmdW5jdGlvbihkYXRlKXtyZXR1cm4gZGF0ZS50bV95ZWFyKzE5MDB9LFwiJXpcIjpmdW5jdGlvbihkYXRlKXt2YXIgb2ZmPWRhdGUudG1fZ210b2ZmO3ZhciBhaGVhZD1vZmY+PTA7b2ZmPU1hdGguYWJzKG9mZikvNjA7b2ZmPW9mZi82MCoxMDArb2ZmJTYwO3JldHVybihhaGVhZD9cIitcIjpcIi1cIikrU3RyaW5nKFwiMDAwMFwiK29mZikuc2xpY2UoLTQpfSxcIiVaXCI6ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuIGRhdGUudG1fem9uZX0sXCIlJVwiOmZ1bmN0aW9uKCl7cmV0dXJuXCIlXCJ9fTtmb3IodmFyIHJ1bGUgaW4gRVhQQU5TSU9OX1JVTEVTXzIpe2lmKHBhdHRlcm4uaW5kZXhPZihydWxlKT49MCl7cGF0dGVybj1wYXR0ZXJuLnJlcGxhY2UobmV3IFJlZ0V4cChydWxlLFwiZ1wiKSxFWFBBTlNJT05fUlVMRVNfMltydWxlXShkYXRlKSl9fXZhciBieXRlcz1pbnRBcnJheUZyb21TdHJpbmcocGF0dGVybixmYWxzZSk7aWYoYnl0ZXMubGVuZ3RoPm1heHNpemUpe3JldHVybiAwfXdyaXRlQXJyYXlUb01lbW9yeShieXRlcyxzKTtyZXR1cm4gYnl0ZXMubGVuZ3RoLTF9ZnVuY3Rpb24gX3N0cmZ0aW1lX2wocyxtYXhzaXplLGZvcm1hdCx0bSl7cmV0dXJuIF9zdHJmdGltZShzLG1heHNpemUsZm9ybWF0LHRtKX1mdW5jdGlvbiBfc3lzY29uZihuYW1lKXtzd2l0Y2gobmFtZSl7Y2FzZSAzMDpyZXR1cm4gUEFHRV9TSVpFO2Nhc2UgODU6dmFyIG1heEhlYXBTaXplPTIqMTAyNCoxMDI0KjEwMjQtNjU1MzY7cmV0dXJuIG1heEhlYXBTaXplL1BBR0VfU0laRTtjYXNlIDEzMjpjYXNlIDEzMzpjYXNlIDEyOmNhc2UgMTM3OmNhc2UgMTM4OmNhc2UgMTU6Y2FzZSAyMzU6Y2FzZSAxNjpjYXNlIDE3OmNhc2UgMTg6Y2FzZSAxOTpjYXNlIDIwOmNhc2UgMTQ5OmNhc2UgMTM6Y2FzZSAxMDpjYXNlIDIzNjpjYXNlIDE1MzpjYXNlIDk6Y2FzZSAyMTpjYXNlIDIyOmNhc2UgMTU5OmNhc2UgMTU0OmNhc2UgMTQ6Y2FzZSA3NzpjYXNlIDc4OmNhc2UgMTM5OmNhc2UgODA6Y2FzZSA4MTpjYXNlIDgyOmNhc2UgNjg6Y2FzZSA2NzpjYXNlIDE2NDpjYXNlIDExOmNhc2UgMjk6Y2FzZSA0NzpjYXNlIDQ4OmNhc2UgOTU6Y2FzZSA1MjpjYXNlIDUxOmNhc2UgNDY6cmV0dXJuIDIwMDgwOTtjYXNlIDc5OnJldHVybiAwO2Nhc2UgMjc6Y2FzZSAyNDY6Y2FzZSAxMjc6Y2FzZSAxMjg6Y2FzZSAyMzpjYXNlIDI0OmNhc2UgMTYwOmNhc2UgMTYxOmNhc2UgMTgxOmNhc2UgMTgyOmNhc2UgMjQyOmNhc2UgMTgzOmNhc2UgMTg0OmNhc2UgMjQzOmNhc2UgMjQ0OmNhc2UgMjQ1OmNhc2UgMTY1OmNhc2UgMTc4OmNhc2UgMTc5OmNhc2UgNDk6Y2FzZSA1MDpjYXNlIDE2ODpjYXNlIDE2OTpjYXNlIDE3NTpjYXNlIDE3MDpjYXNlIDE3MTpjYXNlIDE3MjpjYXNlIDk3OmNhc2UgNzY6Y2FzZSAzMjpjYXNlIDE3MzpjYXNlIDM1OnJldHVybi0xO2Nhc2UgMTc2OmNhc2UgMTc3OmNhc2UgNzpjYXNlIDE1NTpjYXNlIDg6Y2FzZSAxNTc6Y2FzZSAxMjU6Y2FzZSAxMjY6Y2FzZSA5MjpjYXNlIDkzOmNhc2UgMTI5OmNhc2UgMTMwOmNhc2UgMTMxOmNhc2UgOTQ6Y2FzZSA5MTpyZXR1cm4gMTtjYXNlIDc0OmNhc2UgNjA6Y2FzZSA2OTpjYXNlIDcwOmNhc2UgNDpyZXR1cm4gMTAyNDtjYXNlIDMxOmNhc2UgNDI6Y2FzZSA3MjpyZXR1cm4gMzI7Y2FzZSA4NzpjYXNlIDI2OmNhc2UgMzM6cmV0dXJuIDIxNDc0ODM2NDc7Y2FzZSAzNDpjYXNlIDE6cmV0dXJuIDQ3ODM5O2Nhc2UgMzg6Y2FzZSAzNjpyZXR1cm4gOTk7Y2FzZSA0MzpjYXNlIDM3OnJldHVybiAyMDQ4O2Nhc2UgMDpyZXR1cm4gMjA5NzE1MjtjYXNlIDM6cmV0dXJuIDY1NTM2O2Nhc2UgMjg6cmV0dXJuIDMyNzY4O2Nhc2UgNDQ6cmV0dXJuIDMyNzY3O2Nhc2UgNzU6cmV0dXJuIDE2Mzg0O2Nhc2UgMzk6cmV0dXJuIDFlMztjYXNlIDg5OnJldHVybiA3MDA7Y2FzZSA3MTpyZXR1cm4gMjU2O2Nhc2UgNDA6cmV0dXJuIDI1NTtjYXNlIDI6cmV0dXJuIDEwMDtjYXNlIDE4MDpyZXR1cm4gNjQ7Y2FzZSAyNTpyZXR1cm4gMjA7Y2FzZSA1OnJldHVybiAxNjtjYXNlIDY6cmV0dXJuIDY7Y2FzZSA3MzpyZXR1cm4gNDtjYXNlIDg0OntpZih0eXBlb2YgbmF2aWdhdG9yPT09XCJvYmplY3RcIilyZXR1cm4gbmF2aWdhdG9yW1wiaGFyZHdhcmVDb25jdXJyZW5jeVwiXXx8MTtyZXR1cm4gMX19X19fc2V0RXJyTm8oMjIpO3JldHVybi0xfWZ1bmN0aW9uIF90aW1lKHB0cil7dmFyIHJldD1EYXRlLm5vdygpLzFlM3wwO2lmKHB0cil7SEVBUDMyW3B0cj4+Ml09cmV0fXJldHVybiByZXR9ZnVuY3Rpb24gX3RpbWVzKGJ1ZmZlcil7aWYoYnVmZmVyIT09MCl7X21lbXNldChidWZmZXIsMCwxNil9cmV0dXJuIDB9RlMuc3RhdGljSW5pdCgpO2lmKEVOVklST05NRU5UX0hBU19OT0RFKXt2YXIgZnM9cmVxdWlyZShcImZzXCIpO3ZhciBOT0RFSlNfUEFUSD1yZXF1aXJlKFwicGF0aFwiKTtOT0RFRlMuc3RhdGljSW5pdCgpfWVtYmluZF9pbml0X2NoYXJDb2RlcygpO0JpbmRpbmdFcnJvcj1Nb2R1bGVbXCJCaW5kaW5nRXJyb3JcIl09ZXh0ZW5kRXJyb3IoRXJyb3IsXCJCaW5kaW5nRXJyb3JcIik7SW50ZXJuYWxFcnJvcj1Nb2R1bGVbXCJJbnRlcm5hbEVycm9yXCJdPWV4dGVuZEVycm9yKEVycm9yLFwiSW50ZXJuYWxFcnJvclwiKTtpbml0X2VtdmFsKCk7dmFyIEFTU0VSVElPTlM9dHJ1ZTtmdW5jdGlvbiBpbnRBcnJheUZyb21TdHJpbmcoc3RyaW5neSxkb250QWRkTnVsbCxsZW5ndGgpe3ZhciBsZW49bGVuZ3RoPjA/bGVuZ3RoOmxlbmd0aEJ5dGVzVVRGOChzdHJpbmd5KSsxO3ZhciB1OGFycmF5PW5ldyBBcnJheShsZW4pO3ZhciBudW1CeXRlc1dyaXR0ZW49c3RyaW5nVG9VVEY4QXJyYXkoc3RyaW5neSx1OGFycmF5LDAsdThhcnJheS5sZW5ndGgpO2lmKGRvbnRBZGROdWxsKXU4YXJyYXkubGVuZ3RoPW51bUJ5dGVzV3JpdHRlbjtyZXR1cm4gdThhcnJheX1mdW5jdGlvbiBpbnRBcnJheVRvU3RyaW5nKGFycmF5KXt2YXIgcmV0PVtdO2Zvcih2YXIgaT0wO2k8YXJyYXkubGVuZ3RoO2krKyl7dmFyIGNocj1hcnJheVtpXTtpZihjaHI+MjU1KXtpZihBU1NFUlRJT05TKXthc3NlcnQoZmFsc2UsXCJDaGFyYWN0ZXIgY29kZSBcIitjaHIrXCIgKFwiK1N0cmluZy5mcm9tQ2hhckNvZGUoY2hyKStcIikgIGF0IG9mZnNldCBcIitpK1wiIG5vdCBpbiAweDAwLTB4RkYuXCIpfWNociY9MjU1fXJldC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoY2hyKSl9cmV0dXJuIHJldC5qb2luKFwiXCIpfXZhciBkZWNvZGVCYXNlNjQ9dHlwZW9mIGF0b2I9PT1cImZ1bmN0aW9uXCI/YXRvYjpmdW5jdGlvbihpbnB1dCl7dmFyIGtleVN0cj1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89XCI7dmFyIG91dHB1dD1cIlwiO3ZhciBjaHIxLGNocjIsY2hyMzt2YXIgZW5jMSxlbmMyLGVuYzMsZW5jNDt2YXIgaT0wO2lucHV0PWlucHV0LnJlcGxhY2UoL1teQS1aYS16MC05XFwrXFwvXFw9XS9nLFwiXCIpO2Rve2VuYzE9a2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO2VuYzI9a2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO2VuYzM9a2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO2VuYzQ9a2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpO2NocjE9ZW5jMTw8MnxlbmMyPj40O2NocjI9KGVuYzImMTUpPDw0fGVuYzM+PjI7Y2hyMz0oZW5jMyYzKTw8NnxlbmM0O291dHB1dD1vdXRwdXQrU3RyaW5nLmZyb21DaGFyQ29kZShjaHIxKTtpZihlbmMzIT09NjQpe291dHB1dD1vdXRwdXQrU3RyaW5nLmZyb21DaGFyQ29kZShjaHIyKX1pZihlbmM0IT09NjQpe291dHB1dD1vdXRwdXQrU3RyaW5nLmZyb21DaGFyQ29kZShjaHIzKX19d2hpbGUoaTxpbnB1dC5sZW5ndGgpO3JldHVybiBvdXRwdXR9O2Z1bmN0aW9uIGludEFycmF5RnJvbUJhc2U2NChzKXtpZih0eXBlb2YgRU5WSVJPTk1FTlRfSVNfTk9ERT09PVwiYm9vbGVhblwiJiZFTlZJUk9OTUVOVF9JU19OT0RFKXt2YXIgYnVmO3RyeXtidWY9QnVmZmVyLmZyb20ocyxcImJhc2U2NFwiKX1jYXRjaChfKXtidWY9bmV3IEJ1ZmZlcihzLFwiYmFzZTY0XCIpfXJldHVybiBuZXcgVWludDhBcnJheShidWYuYnVmZmVyLGJ1Zi5ieXRlT2Zmc2V0LGJ1Zi5ieXRlTGVuZ3RoKX10cnl7dmFyIGRlY29kZWQ9ZGVjb2RlQmFzZTY0KHMpO3ZhciBieXRlcz1uZXcgVWludDhBcnJheShkZWNvZGVkLmxlbmd0aCk7Zm9yKHZhciBpPTA7aTxkZWNvZGVkLmxlbmd0aDsrK2kpe2J5dGVzW2ldPWRlY29kZWQuY2hhckNvZGVBdChpKX1yZXR1cm4gYnl0ZXN9Y2F0Y2goXyl7dGhyb3cgbmV3IEVycm9yKFwiQ29udmVydGluZyBiYXNlNjQgc3RyaW5nIHRvIGJ5dGVzIGZhaWxlZC5cIil9fWZ1bmN0aW9uIHRyeVBhcnNlQXNEYXRhVVJJKGZpbGVuYW1lKXtpZighaXNEYXRhVVJJKGZpbGVuYW1lKSl7cmV0dXJufXJldHVybiBpbnRBcnJheUZyb21CYXNlNjQoZmlsZW5hbWUuc2xpY2UoZGF0YVVSSVByZWZpeC5sZW5ndGgpKX1mdW5jdGlvbiBudWxsRnVuY19kaWkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJkaWlcIil9ZnVuY3Rpb24gbnVsbEZ1bmNfaWkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJpaVwiKX1mdW5jdGlvbiBudWxsRnVuY19paWRpKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwiaWlkaVwiKX1mdW5jdGlvbiBudWxsRnVuY19paWRpaWlpKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwiaWlkaWlpaVwiKX1mdW5jdGlvbiBudWxsRnVuY19paWkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJpaWlcIil9ZnVuY3Rpb24gbnVsbEZ1bmNfaWlpaSh4KXthYm9ydEZuUHRyRXJyb3IoeCxcImlpaWlcIil9ZnVuY3Rpb24gbnVsbEZ1bmNfaWlpaWkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJpaWlpaVwiKX1mdW5jdGlvbiBudWxsRnVuY19paWlpaWQoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJpaWlpaWRcIil9ZnVuY3Rpb24gbnVsbEZ1bmNfaWlpaWlpKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwiaWlpaWlpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX2lpaWlpaWQoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJpaWlpaWlkXCIpfWZ1bmN0aW9uIG51bGxGdW5jX2lpaWlpaWkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJpaWlpaWlpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX2lpaWlpaWlpKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwiaWlpaWlpaWlcIil9ZnVuY3Rpb24gbnVsbEZ1bmNfaWlpaWlpaWlpKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwiaWlpaWlpaWlpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX2lpaWlpaih4KXthYm9ydEZuUHRyRXJyb3IoeCxcImlpaWlpalwiKX1mdW5jdGlvbiBudWxsRnVuY19qaWppKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwiamlqaVwiKX1mdW5jdGlvbiBudWxsRnVuY192KHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwidlwiKX1mdW5jdGlvbiBudWxsRnVuY192aSh4KXthYm9ydEZuUHRyRXJyb3IoeCxcInZpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX3ZpZGQoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJ2aWRkXCIpfWZ1bmN0aW9uIG51bGxGdW5jX3ZpZGRkZGkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJ2aWRkZGRpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX3ZpZGRkaSh4KXthYm9ydEZuUHRyRXJyb3IoeCxcInZpZGRkaVwiKX1mdW5jdGlvbiBudWxsRnVuY192aWRkaSh4KXthYm9ydEZuUHRyRXJyb3IoeCxcInZpZGRpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX3ZpZGkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJ2aWRpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX3ZpaSh4KXthYm9ydEZuUHRyRXJyb3IoeCxcInZpaVwiKX1mdW5jdGlvbiBudWxsRnVuY192aWlpKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwidmlpaVwiKX1mdW5jdGlvbiBudWxsRnVuY192aWlpaSh4KXthYm9ydEZuUHRyRXJyb3IoeCxcInZpaWlpXCIpfWZ1bmN0aW9uIG51bGxGdW5jX3ZpaWlpaSh4KXthYm9ydEZuUHRyRXJyb3IoeCxcInZpaWlpaVwiKX1mdW5jdGlvbiBudWxsRnVuY192aWlpaWlpKHgpe2Fib3J0Rm5QdHJFcnJvcih4LFwidmlpaWlpaVwiKX1mdW5jdGlvbiBudWxsRnVuY192aWlqaWkoeCl7YWJvcnRGblB0ckVycm9yKHgsXCJ2aWlqaWlcIil9dmFyIGFzbUdsb2JhbEFyZz17fTt2YXIgYXNtTGlicmFyeUFyZz17XCJiXCI6YWJvcnRTdGFja092ZXJmbG93LFwibmFcIjpudWxsRnVuY19kaWksXCJjYVwiOm51bGxGdW5jX2lpLFwiVFwiOm51bGxGdW5jX2lpZGksXCJOXCI6bnVsbEZ1bmNfaWlkaWlpaSxcIkhcIjpudWxsRnVuY19paWksXCJCXCI6bnVsbEZ1bmNfaWlpaSxcInVcIjpudWxsRnVuY19paWlpaSxcInRcIjpudWxsRnVuY19paWlpaWQsXCJzXCI6bnVsbEZ1bmNfaWlpaWlpLFwibWFcIjpudWxsRnVuY19paWlpaWlkLFwibGFcIjpudWxsRnVuY19paWlpaWlpLFwia2FcIjpudWxsRnVuY19paWlpaWlpaSxcImphXCI6bnVsbEZ1bmNfaWlpaWlpaWlpLFwiaWFcIjpudWxsRnVuY19paWlpaWosXCJoYVwiOm51bGxGdW5jX2ppamksXCJnYVwiOm51bGxGdW5jX3YsXCJmYVwiOm51bGxGdW5jX3ZpLFwiZWFcIjpudWxsRnVuY192aWRkLFwiZGFcIjpudWxsRnVuY192aWRkZGRpLFwiYmFcIjpudWxsRnVuY192aWRkZGksXCJhYVwiOm51bGxGdW5jX3ZpZGRpLFwiJFwiOm51bGxGdW5jX3ZpZGksXCJfXCI6bnVsbEZ1bmNfdmlpLFwiWlwiOm51bGxGdW5jX3ZpaWksXCJZXCI6bnVsbEZ1bmNfdmlpaWksXCJYXCI6bnVsbEZ1bmNfdmlpaWlpLFwiV1wiOm51bGxGdW5jX3ZpaWlpaWksXCJWXCI6bnVsbEZ1bmNfdmlpamlpLFwiVVwiOl9fX2J1aWxkRW52aXJvbm1lbnQsXCJkXCI6X19fY3hhX2FsbG9jYXRlX2V4Y2VwdGlvbixcIlNcIjpfX19jeGFfcHVyZV92aXJ0dWFsLFwiY1wiOl9fX2N4YV90aHJvdyxcIlJcIjpfX19jeGFfdW5jYXVnaHRfZXhjZXB0aW9ucyxcInJcIjpfX19sb2NrLFwiUVwiOl9fX21hcF9maWxlLFwicVwiOl9fX3NldEVyck5vLFwiUFwiOl9fX3N5c2NhbGwxNDAsXCJPXCI6X19fc3lzY2FsbDE0NSxcInBcIjpfX19zeXNjYWxsMTQ2LFwiTVwiOl9fX3N5c2NhbGw1NCxcIkxcIjpfX19zeXNjYWxsNixcIktcIjpfX19zeXNjYWxsOTEsXCJtXCI6X19fdW5sb2NrLFwiSlwiOl9fZW1iaW5kX3JlZ2lzdGVyX2Jvb2wsXCJJXCI6X19lbWJpbmRfcmVnaXN0ZXJfZW12YWwsXCJvXCI6X19lbWJpbmRfcmVnaXN0ZXJfZmxvYXQsXCJnXCI6X19lbWJpbmRfcmVnaXN0ZXJfaW50ZWdlcixcImZcIjpfX2VtYmluZF9yZWdpc3Rlcl9tZW1vcnlfdmlldyxcIm5cIjpfX2VtYmluZF9yZWdpc3Rlcl9zdGRfc3RyaW5nLFwiR1wiOl9fZW1iaW5kX3JlZ2lzdGVyX3N0ZF93c3RyaW5nLFwiRlwiOl9fZW1iaW5kX3JlZ2lzdGVyX3ZvaWQsXCJlXCI6X2Fib3J0LFwiRVwiOl9lbXNjcmlwdGVuX2dldF9oZWFwX3NpemUsXCJEXCI6X2Vtc2NyaXB0ZW5fbWVtY3B5X2JpZyxcIkNcIjpfZW1zY3JpcHRlbl9yZXNpemVfaGVhcCxcImtcIjpfZ2V0ZW52LFwialwiOl9sbHZtX2xvZzJfZjY0LFwiaVwiOl9sbHZtX3N0YWNrcmVzdG9yZSxcImhcIjpfbGx2bV9zdGFja3NhdmUsXCJBXCI6X2xsdm1fdHJhcCxcInpcIjpfcHRocmVhZF9jb25kX3dhaXQsXCJ5XCI6X3N0cmZ0aW1lX2wsXCJsXCI6X3N5c2NvbmYsXCJ4XCI6X3RpbWUsXCJ3XCI6X3RpbWVzLFwidlwiOmFib3J0T25DYW5ub3RHcm93TWVtb3J5LFwiYVwiOkRZTkFNSUNUT1BfUFRSfTt2YXIgYXNtPU1vZHVsZVtcImFzbVwiXShhc21HbG9iYWxBcmcsYXNtTGlicmFyeUFyZyxidWZmZXIpO01vZHVsZVtcImFzbVwiXT1hc207dmFyIF9GTTM9TW9kdWxlW1wiX0ZNM1wiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1wib2FcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgX1BNRFM9TW9kdWxlW1wiX1BNRFNcIl09ZnVuY3Rpb24oKXthc3NlcnQocnVudGltZUluaXRpYWxpemVkLFwieW91IG5lZWQgdG8gd2FpdCBmb3IgdGhlIHJ1bnRpbWUgdG8gYmUgcmVhZHkgKGUuZy4gd2FpdCBmb3IgbWFpbigpIHRvIGJlIGNhbGxlZClcIik7YXNzZXJ0KCFydW50aW1lRXhpdGVkLFwidGhlIHJ1bnRpbWUgd2FzIGV4aXRlZCAodXNlIE5PX0VYSVRfUlVOVElNRSB0byBrZWVwIGl0IGFsaXZlIGFmdGVyIG1haW4oKSBleGl0cylcIik7cmV0dXJuIE1vZHVsZVtcImFzbVwiXVtcInBhXCJdLmFwcGx5KG51bGwsYXJndW1lbnRzKX07dmFyIF9fWlN0MTh1bmNhdWdodF9leGNlcHRpb252PU1vZHVsZVtcIl9fWlN0MTh1bmNhdWdodF9leGNlcHRpb252XCJdPWZ1bmN0aW9uKCl7YXNzZXJ0KHJ1bnRpbWVJbml0aWFsaXplZCxcInlvdSBuZWVkIHRvIHdhaXQgZm9yIHRoZSBydW50aW1lIHRvIGJlIHJlYWR5IChlLmcuIHdhaXQgZm9yIG1haW4oKSB0byBiZSBjYWxsZWQpXCIpO2Fzc2VydCghcnVudGltZUV4aXRlZCxcInRoZSBydW50aW1lIHdhcyBleGl0ZWQgKHVzZSBOT19FWElUX1JVTlRJTUUgdG8ga2VlcCBpdCBhbGl2ZSBhZnRlciBtYWluKCkgZXhpdHMpXCIpO3JldHVybiBNb2R1bGVbXCJhc21cIl1bXCJxYVwiXS5hcHBseShudWxsLGFyZ3VtZW50cyl9O3ZhciBfX19lbWJpbmRfcmVnaXN0ZXJfbmF0aXZlX2FuZF9idWlsdGluX3R5cGVzPU1vZHVsZVtcIl9fX2VtYmluZF9yZWdpc3Rlcl9uYXRpdmVfYW5kX2J1aWx0aW5fdHlwZXNcIl09ZnVuY3Rpb24oKXthc3NlcnQocnVudGltZUluaXRpYWxpemVkLFwieW91IG5lZWQgdG8gd2FpdCBmb3IgdGhlIHJ1bnRpbWUgdG8gYmUgcmVhZHkgKGUuZy4gd2FpdCBmb3IgbWFpbigpIHRvIGJlIGNhbGxlZClcIik7YXNzZXJ0KCFydW50aW1lRXhpdGVkLFwidGhlIHJ1bnRpbWUgd2FzIGV4aXRlZCAodXNlIE5PX0VYSVRfUlVOVElNRSB0byBrZWVwIGl0IGFsaXZlIGFmdGVyIG1haW4oKSBleGl0cylcIik7cmV0dXJuIE1vZHVsZVtcImFzbVwiXVtcInJhXCJdLmFwcGx5KG51bGwsYXJndW1lbnRzKX07dmFyIF9fX2Vycm5vX2xvY2F0aW9uPU1vZHVsZVtcIl9fX2Vycm5vX2xvY2F0aW9uXCJdPWZ1bmN0aW9uKCl7YXNzZXJ0KHJ1bnRpbWVJbml0aWFsaXplZCxcInlvdSBuZWVkIHRvIHdhaXQgZm9yIHRoZSBydW50aW1lIHRvIGJlIHJlYWR5IChlLmcuIHdhaXQgZm9yIG1haW4oKSB0byBiZSBjYWxsZWQpXCIpO2Fzc2VydCghcnVudGltZUV4aXRlZCxcInRoZSBydW50aW1lIHdhcyBleGl0ZWQgKHVzZSBOT19FWElUX1JVTlRJTUUgdG8ga2VlcCBpdCBhbGl2ZSBhZnRlciBtYWluKCkgZXhpdHMpXCIpO3JldHVybiBNb2R1bGVbXCJhc21cIl1bXCJzYVwiXS5hcHBseShudWxsLGFyZ3VtZW50cyl9O3ZhciBfX19nZXRUeXBlTmFtZT1Nb2R1bGVbXCJfX19nZXRUeXBlTmFtZVwiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1widGFcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgX2ZmbHVzaD1Nb2R1bGVbXCJfZmZsdXNoXCJdPWZ1bmN0aW9uKCl7YXNzZXJ0KHJ1bnRpbWVJbml0aWFsaXplZCxcInlvdSBuZWVkIHRvIHdhaXQgZm9yIHRoZSBydW50aW1lIHRvIGJlIHJlYWR5IChlLmcuIHdhaXQgZm9yIG1haW4oKSB0byBiZSBjYWxsZWQpXCIpO2Fzc2VydCghcnVudGltZUV4aXRlZCxcInRoZSBydW50aW1lIHdhcyBleGl0ZWQgKHVzZSBOT19FWElUX1JVTlRJTUUgdG8ga2VlcCBpdCBhbGl2ZSBhZnRlciBtYWluKCkgZXhpdHMpXCIpO3JldHVybiBNb2R1bGVbXCJhc21cIl1bXCJ1YVwiXS5hcHBseShudWxsLGFyZ3VtZW50cyl9O3ZhciBfZnJlZT1Nb2R1bGVbXCJfZnJlZVwiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1widmFcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgX2ZyZWVfYnVmPU1vZHVsZVtcIl9mcmVlX2J1ZlwiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1wid2FcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgX21hbGxvYz1Nb2R1bGVbXCJfbWFsbG9jXCJdPWZ1bmN0aW9uKCl7YXNzZXJ0KHJ1bnRpbWVJbml0aWFsaXplZCxcInlvdSBuZWVkIHRvIHdhaXQgZm9yIHRoZSBydW50aW1lIHRvIGJlIHJlYWR5IChlLmcuIHdhaXQgZm9yIG1haW4oKSB0byBiZSBjYWxsZWQpXCIpO2Fzc2VydCghcnVudGltZUV4aXRlZCxcInRoZSBydW50aW1lIHdhcyBleGl0ZWQgKHVzZSBOT19FWElUX1JVTlRJTUUgdG8ga2VlcCBpdCBhbGl2ZSBhZnRlciBtYWluKCkgZXhpdHMpXCIpO3JldHVybiBNb2R1bGVbXCJhc21cIl1bXCJ4YVwiXS5hcHBseShudWxsLGFyZ3VtZW50cyl9O3ZhciBfbWVtc2V0PU1vZHVsZVtcIl9tZW1zZXRcIl09ZnVuY3Rpb24oKXthc3NlcnQocnVudGltZUluaXRpYWxpemVkLFwieW91IG5lZWQgdG8gd2FpdCBmb3IgdGhlIHJ1bnRpbWUgdG8gYmUgcmVhZHkgKGUuZy4gd2FpdCBmb3IgbWFpbigpIHRvIGJlIGNhbGxlZClcIik7YXNzZXJ0KCFydW50aW1lRXhpdGVkLFwidGhlIHJ1bnRpbWUgd2FzIGV4aXRlZCAodXNlIE5PX0VYSVRfUlVOVElNRSB0byBrZWVwIGl0IGFsaXZlIGFmdGVyIG1haW4oKSBleGl0cylcIik7cmV0dXJuIE1vZHVsZVtcImFzbVwiXVtcInlhXCJdLmFwcGx5KG51bGwsYXJndW1lbnRzKX07dmFyIGVzdGFibGlzaFN0YWNrU3BhY2U9TW9kdWxlW1wiZXN0YWJsaXNoU3RhY2tTcGFjZVwiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1wiQmFcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgZ2xvYmFsQ3RvcnM9TW9kdWxlW1wiZ2xvYmFsQ3RvcnNcIl09ZnVuY3Rpb24oKXthc3NlcnQocnVudGltZUluaXRpYWxpemVkLFwieW91IG5lZWQgdG8gd2FpdCBmb3IgdGhlIHJ1bnRpbWUgdG8gYmUgcmVhZHkgKGUuZy4gd2FpdCBmb3IgbWFpbigpIHRvIGJlIGNhbGxlZClcIik7YXNzZXJ0KCFydW50aW1lRXhpdGVkLFwidGhlIHJ1bnRpbWUgd2FzIGV4aXRlZCAodXNlIE5PX0VYSVRfUlVOVElNRSB0byBrZWVwIGl0IGFsaXZlIGFmdGVyIG1haW4oKSBleGl0cylcIik7cmV0dXJuIE1vZHVsZVtcImFzbVwiXVtcIkNhXCJdLmFwcGx5KG51bGwsYXJndW1lbnRzKX07dmFyIHN0YWNrQWxsb2M9TW9kdWxlW1wic3RhY2tBbGxvY1wiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1wiRGFcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgc3RhY2tSZXN0b3JlPU1vZHVsZVtcInN0YWNrUmVzdG9yZVwiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1wiRWFcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgc3RhY2tTYXZlPU1vZHVsZVtcInN0YWNrU2F2ZVwiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1wiRmFcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgZHluQ2FsbF92PU1vZHVsZVtcImR5bkNhbGxfdlwiXT1mdW5jdGlvbigpe2Fzc2VydChydW50aW1lSW5pdGlhbGl6ZWQsXCJ5b3UgbmVlZCB0byB3YWl0IGZvciB0aGUgcnVudGltZSB0byBiZSByZWFkeSAoZS5nLiB3YWl0IGZvciBtYWluKCkgdG8gYmUgY2FsbGVkKVwiKTthc3NlcnQoIXJ1bnRpbWVFeGl0ZWQsXCJ0aGUgcnVudGltZSB3YXMgZXhpdGVkICh1c2UgTk9fRVhJVF9SVU5USU1FIHRvIGtlZXAgaXQgYWxpdmUgYWZ0ZXIgbWFpbigpIGV4aXRzKVwiKTtyZXR1cm4gTW9kdWxlW1wiYXNtXCJdW1wiemFcIl0uYXBwbHkobnVsbCxhcmd1bWVudHMpfTt2YXIgZHluQ2FsbF92aT1Nb2R1bGVbXCJkeW5DYWxsX3ZpXCJdPWZ1bmN0aW9uKCl7YXNzZXJ0KHJ1bnRpbWVJbml0aWFsaXplZCxcInlvdSBuZWVkIHRvIHdhaXQgZm9yIHRoZSBydW50aW1lIHRvIGJlIHJlYWR5IChlLmcuIHdhaXQgZm9yIG1haW4oKSB0byBiZSBjYWxsZWQpXCIpO2Fzc2VydCghcnVudGltZUV4aXRlZCxcInRoZSBydW50aW1lIHdhcyBleGl0ZWQgKHVzZSBOT19FWElUX1JVTlRJTUUgdG8ga2VlcCBpdCBhbGl2ZSBhZnRlciBtYWluKCkgZXhpdHMpXCIpO3JldHVybiBNb2R1bGVbXCJhc21cIl1bXCJBYVwiXS5hcHBseShudWxsLGFyZ3VtZW50cyl9O01vZHVsZVtcImFzbVwiXT1hc207aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiaW50QXJyYXlGcm9tU3RyaW5nXCIpKU1vZHVsZVtcImludEFycmF5RnJvbVN0cmluZ1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2ludEFycmF5RnJvbVN0cmluZycgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJpbnRBcnJheVRvU3RyaW5nXCIpKU1vZHVsZVtcImludEFycmF5VG9TdHJpbmdcIl09ZnVuY3Rpb24oKXthYm9ydChcIidpbnRBcnJheVRvU3RyaW5nJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImNjYWxsXCIpKU1vZHVsZVtcImNjYWxsXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInY2NhbGwnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiY3dyYXBcIikpTW9kdWxlW1wiY3dyYXBcIl09ZnVuY3Rpb24oKXthYm9ydChcIidjd3JhcCcgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJzZXRWYWx1ZVwiKSlNb2R1bGVbXCJzZXRWYWx1ZVwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ3NldFZhbHVlJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImdldFZhbHVlXCIpKU1vZHVsZVtcImdldFZhbHVlXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInZ2V0VmFsdWUnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiYWxsb2NhdGVcIikpTW9kdWxlW1wiYWxsb2NhdGVcIl09ZnVuY3Rpb24oKXthYm9ydChcIidhbGxvY2F0ZScgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJnZXRNZW1vcnlcIikpTW9kdWxlW1wiZ2V0TWVtb3J5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInZ2V0TWVtb3J5JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSkuIEFsdGVybmF0aXZlbHksIGZvcmNpbmcgZmlsZXN5c3RlbSBzdXBwb3J0ICgtcyBGT1JDRV9GSUxFU1lTVEVNPTEpIGNhbiBleHBvcnQgdGhpcyBmb3IgeW91XCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJBc2NpaVRvU3RyaW5nXCIpKU1vZHVsZVtcIkFzY2lpVG9TdHJpbmdcIl09ZnVuY3Rpb24oKXthYm9ydChcIidBc2NpaVRvU3RyaW5nJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcInN0cmluZ1RvQXNjaWlcIikpTW9kdWxlW1wic3RyaW5nVG9Bc2NpaVwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ3N0cmluZ1RvQXNjaWknIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiVVRGOEFycmF5VG9TdHJpbmdcIikpTW9kdWxlW1wiVVRGOEFycmF5VG9TdHJpbmdcIl09ZnVuY3Rpb24oKXthYm9ydChcIidVVEY4QXJyYXlUb1N0cmluZycgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJVVEY4VG9TdHJpbmdcIikpTW9kdWxlW1wiVVRGOFRvU3RyaW5nXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInVVRGOFRvU3RyaW5nJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcInN0cmluZ1RvVVRGOEFycmF5XCIpKU1vZHVsZVtcInN0cmluZ1RvVVRGOEFycmF5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInc3RyaW5nVG9VVEY4QXJyYXknIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwic3RyaW5nVG9VVEY4XCIpKU1vZHVsZVtcInN0cmluZ1RvVVRGOFwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ3N0cmluZ1RvVVRGOCcgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJsZW5ndGhCeXRlc1VURjhcIikpTW9kdWxlW1wibGVuZ3RoQnl0ZXNVVEY4XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInbGVuZ3RoQnl0ZXNVVEY4JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIlVURjE2VG9TdHJpbmdcIikpTW9kdWxlW1wiVVRGMTZUb1N0cmluZ1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ1VURjE2VG9TdHJpbmcnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwic3RyaW5nVG9VVEYxNlwiKSlNb2R1bGVbXCJzdHJpbmdUb1VURjE2XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInc3RyaW5nVG9VVEYxNicgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJsZW5ndGhCeXRlc1VURjE2XCIpKU1vZHVsZVtcImxlbmd0aEJ5dGVzVVRGMTZcIl09ZnVuY3Rpb24oKXthYm9ydChcIidsZW5ndGhCeXRlc1VURjE2JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIlVURjMyVG9TdHJpbmdcIikpTW9kdWxlW1wiVVRGMzJUb1N0cmluZ1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ1VURjMyVG9TdHJpbmcnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwic3RyaW5nVG9VVEYzMlwiKSlNb2R1bGVbXCJzdHJpbmdUb1VURjMyXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInc3RyaW5nVG9VVEYzMicgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJsZW5ndGhCeXRlc1VURjMyXCIpKU1vZHVsZVtcImxlbmd0aEJ5dGVzVVRGMzJcIl09ZnVuY3Rpb24oKXthYm9ydChcIidsZW5ndGhCeXRlc1VURjMyJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImFsbG9jYXRlVVRGOFwiKSlNb2R1bGVbXCJhbGxvY2F0ZVVURjhcIl09ZnVuY3Rpb24oKXthYm9ydChcIidhbGxvY2F0ZVVURjgnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwic3RhY2tUcmFjZVwiKSlNb2R1bGVbXCJzdGFja1RyYWNlXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInc3RhY2tUcmFjZScgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJhZGRPblByZVJ1blwiKSlNb2R1bGVbXCJhZGRPblByZVJ1blwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2FkZE9uUHJlUnVuJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImFkZE9uSW5pdFwiKSlNb2R1bGVbXCJhZGRPbkluaXRcIl09ZnVuY3Rpb24oKXthYm9ydChcIidhZGRPbkluaXQnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiYWRkT25QcmVNYWluXCIpKU1vZHVsZVtcImFkZE9uUHJlTWFpblwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2FkZE9uUHJlTWFpbicgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJhZGRPbkV4aXRcIikpTW9kdWxlW1wiYWRkT25FeGl0XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInYWRkT25FeGl0JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImFkZE9uUG9zdFJ1blwiKSlNb2R1bGVbXCJhZGRPblBvc3RSdW5cIl09ZnVuY3Rpb24oKXthYm9ydChcIidhZGRPblBvc3RSdW4nIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwid3JpdGVTdHJpbmdUb01lbW9yeVwiKSlNb2R1bGVbXCJ3cml0ZVN0cmluZ1RvTWVtb3J5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInd3JpdGVTdHJpbmdUb01lbW9yeScgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJ3cml0ZUFycmF5VG9NZW1vcnlcIikpTW9kdWxlW1wid3JpdGVBcnJheVRvTWVtb3J5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInd3JpdGVBcnJheVRvTWVtb3J5JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIndyaXRlQXNjaWlUb01lbW9yeVwiKSlNb2R1bGVbXCJ3cml0ZUFzY2lpVG9NZW1vcnlcIl09ZnVuY3Rpb24oKXthYm9ydChcIid3cml0ZUFzY2lpVG9NZW1vcnknIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiYWRkUnVuRGVwZW5kZW5jeVwiKSlNb2R1bGVbXCJhZGRSdW5EZXBlbmRlbmN5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInYWRkUnVuRGVwZW5kZW5jeScgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpLiBBbHRlcm5hdGl2ZWx5LCBmb3JjaW5nIGZpbGVzeXN0ZW0gc3VwcG9ydCAoLXMgRk9SQ0VfRklMRVNZU1RFTT0xKSBjYW4gZXhwb3J0IHRoaXMgZm9yIHlvdVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwicmVtb3ZlUnVuRGVwZW5kZW5jeVwiKSlNb2R1bGVbXCJyZW1vdmVSdW5EZXBlbmRlbmN5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCIncmVtb3ZlUnVuRGVwZW5kZW5jeScgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpLiBBbHRlcm5hdGl2ZWx5LCBmb3JjaW5nIGZpbGVzeXN0ZW0gc3VwcG9ydCAoLXMgRk9SQ0VfRklMRVNZU1RFTT0xKSBjYW4gZXhwb3J0IHRoaXMgZm9yIHlvdVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiRU5WXCIpKU1vZHVsZVtcIkVOVlwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ0VOVicgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJGU1wiKSlNb2R1bGVbXCJGU1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ0ZTJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX2NyZWF0ZUZvbGRlclwiKSlNb2R1bGVbXCJGU19jcmVhdGVGb2xkZXJcIl09ZnVuY3Rpb24oKXthYm9ydChcIidGU19jcmVhdGVGb2xkZXInIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX2NyZWF0ZVBhdGhcIikpTW9kdWxlW1wiRlNfY3JlYXRlUGF0aFwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ0ZTX2NyZWF0ZVBhdGgnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX2NyZWF0ZURhdGFGaWxlXCIpKU1vZHVsZVtcIkZTX2NyZWF0ZURhdGFGaWxlXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInRlNfY3JlYXRlRGF0YUZpbGUnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX2NyZWF0ZVByZWxvYWRlZEZpbGVcIikpTW9kdWxlW1wiRlNfY3JlYXRlUHJlbG9hZGVkRmlsZVwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ0ZTX2NyZWF0ZVByZWxvYWRlZEZpbGUnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX2NyZWF0ZUxhenlGaWxlXCIpKU1vZHVsZVtcIkZTX2NyZWF0ZUxhenlGaWxlXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInRlNfY3JlYXRlTGF6eUZpbGUnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX2NyZWF0ZUxpbmtcIikpTW9kdWxlW1wiRlNfY3JlYXRlTGlua1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ0ZTX2NyZWF0ZUxpbmsnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX2NyZWF0ZURldmljZVwiKSlNb2R1bGVbXCJGU19jcmVhdGVEZXZpY2VcIl09ZnVuY3Rpb24oKXthYm9ydChcIidGU19jcmVhdGVEZXZpY2UnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkZTX3VubGlua1wiKSlNb2R1bGVbXCJGU191bmxpbmtcIl09ZnVuY3Rpb24oKXthYm9ydChcIidGU191bmxpbmsnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKS4gQWx0ZXJuYXRpdmVseSwgZm9yY2luZyBmaWxlc3lzdGVtIHN1cHBvcnQgKC1zIEZPUkNFX0ZJTEVTWVNURU09MSkgY2FuIGV4cG9ydCB0aGlzIGZvciB5b3VcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIkdMXCIpKU1vZHVsZVtcIkdMXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInR0wnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiZHluYW1pY0FsbG9jXCIpKU1vZHVsZVtcImR5bmFtaWNBbGxvY1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2R5bmFtaWNBbGxvYycgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJsb2FkRHluYW1pY0xpYnJhcnlcIikpTW9kdWxlW1wibG9hZER5bmFtaWNMaWJyYXJ5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInbG9hZER5bmFtaWNMaWJyYXJ5JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImxvYWRXZWJBc3NlbWJseU1vZHVsZVwiKSlNb2R1bGVbXCJsb2FkV2ViQXNzZW1ibHlNb2R1bGVcIl09ZnVuY3Rpb24oKXthYm9ydChcIidsb2FkV2ViQXNzZW1ibHlNb2R1bGUnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiZ2V0TEVCXCIpKU1vZHVsZVtcImdldExFQlwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2dldExFQicgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJnZXRGdW5jdGlvblRhYmxlc1wiKSlNb2R1bGVbXCJnZXRGdW5jdGlvblRhYmxlc1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2dldEZ1bmN0aW9uVGFibGVzJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImFsaWduRnVuY3Rpb25UYWJsZXNcIikpTW9kdWxlW1wiYWxpZ25GdW5jdGlvblRhYmxlc1wiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2FsaWduRnVuY3Rpb25UYWJsZXMnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwicmVnaXN0ZXJGdW5jdGlvbnNcIikpTW9kdWxlW1wicmVnaXN0ZXJGdW5jdGlvbnNcIl09ZnVuY3Rpb24oKXthYm9ydChcIidyZWdpc3RlckZ1bmN0aW9ucycgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJhZGRGdW5jdGlvblwiKSlNb2R1bGVbXCJhZGRGdW5jdGlvblwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2FkZEZ1bmN0aW9uJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcInJlbW92ZUZ1bmN0aW9uXCIpKU1vZHVsZVtcInJlbW92ZUZ1bmN0aW9uXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCIncmVtb3ZlRnVuY3Rpb24nIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiZ2V0RnVuY1dyYXBwZXJcIikpTW9kdWxlW1wiZ2V0RnVuY1dyYXBwZXJcIl09ZnVuY3Rpb24oKXthYm9ydChcIidnZXRGdW5jV3JhcHBlcicgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJwcmV0dHlQcmludFwiKSlNb2R1bGVbXCJwcmV0dHlQcmludFwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ3ByZXR0eVByaW50JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIm1ha2VCaWdJbnRcIikpTW9kdWxlW1wibWFrZUJpZ0ludFwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ21ha2VCaWdJbnQnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiZHluQ2FsbFwiKSlNb2R1bGVbXCJkeW5DYWxsXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInZHluQ2FsbCcgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJnZXRDb21waWxlclNldHRpbmdcIikpTW9kdWxlW1wiZ2V0Q29tcGlsZXJTZXR0aW5nXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInZ2V0Q29tcGlsZXJTZXR0aW5nJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcInN0YWNrU2F2ZVwiKSlNb2R1bGVbXCJzdGFja1NhdmVcIl09ZnVuY3Rpb24oKXthYm9ydChcIidzdGFja1NhdmUnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwic3RhY2tSZXN0b3JlXCIpKU1vZHVsZVtcInN0YWNrUmVzdG9yZVwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ3N0YWNrUmVzdG9yZScgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJzdGFja0FsbG9jXCIpKU1vZHVsZVtcInN0YWNrQWxsb2NcIl09ZnVuY3Rpb24oKXthYm9ydChcIidzdGFja0FsbG9jJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImVzdGFibGlzaFN0YWNrU3BhY2VcIikpTW9kdWxlW1wiZXN0YWJsaXNoU3RhY2tTcGFjZVwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2VzdGFibGlzaFN0YWNrU3BhY2UnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwicHJpbnRcIikpTW9kdWxlW1wicHJpbnRcIl09ZnVuY3Rpb24oKXthYm9ydChcIidwcmludCcgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJwcmludEVyclwiKSlNb2R1bGVbXCJwcmludEVyclwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ3ByaW50RXJyJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcImdldFRlbXBSZXQwXCIpKU1vZHVsZVtcImdldFRlbXBSZXQwXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInZ2V0VGVtcFJldDAnIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwic2V0VGVtcFJldDBcIikpTW9kdWxlW1wic2V0VGVtcFJldDBcIl09ZnVuY3Rpb24oKXthYm9ydChcIidzZXRUZW1wUmV0MCcgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJjYWxsTWFpblwiKSlNb2R1bGVbXCJjYWxsTWFpblwiXT1mdW5jdGlvbigpe2Fib3J0KFwiJ2NhbGxNYWluJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcIlBvaW50ZXJfc3RyaW5naWZ5XCIpKU1vZHVsZVtcIlBvaW50ZXJfc3RyaW5naWZ5XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInUG9pbnRlcl9zdHJpbmdpZnknIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwid2Fybk9uY2VcIikpTW9kdWxlW1wid2Fybk9uY2VcIl09ZnVuY3Rpb24oKXthYm9ydChcIid3YXJuT25jZScgd2FzIG5vdCBleHBvcnRlZC4gYWRkIGl0IHRvIEVYVFJBX0VYUE9SVEVEX1JVTlRJTUVfTUVUSE9EUyAoc2VlIHRoZSBGQVEpXCIpfTtpZighT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihNb2R1bGUsXCJpbnRBcnJheUZyb21CYXNlNjRcIikpTW9kdWxlW1wiaW50QXJyYXlGcm9tQmFzZTY0XCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCInaW50QXJyYXlGcm9tQmFzZTY0JyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9O2lmKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE1vZHVsZSxcInRyeVBhcnNlQXNEYXRhVVJJXCIpKU1vZHVsZVtcInRyeVBhcnNlQXNEYXRhVVJJXCJdPWZ1bmN0aW9uKCl7YWJvcnQoXCIndHJ5UGFyc2VBc0RhdGFVUkknIHdhcyBub3QgZXhwb3J0ZWQuIGFkZCBpdCB0byBFWFRSQV9FWFBPUlRFRF9SVU5USU1FX01FVEhPRFMgKHNlZSB0aGUgRkFRKVwiKX07aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiQUxMT0NfTk9STUFMXCIpKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShNb2R1bGUsXCJBTExPQ19OT1JNQUxcIix7Z2V0OmZ1bmN0aW9uKCl7YWJvcnQoXCInQUxMT0NfTk9STUFMJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9fSk7aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiQUxMT0NfU1RBQ0tcIikpT2JqZWN0LmRlZmluZVByb3BlcnR5KE1vZHVsZSxcIkFMTE9DX1NUQUNLXCIse2dldDpmdW5jdGlvbigpe2Fib3J0KFwiJ0FMTE9DX1NUQUNLJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9fSk7aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiQUxMT0NfRFlOQU1JQ1wiKSlPYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kdWxlLFwiQUxMT0NfRFlOQU1JQ1wiLHtnZXQ6ZnVuY3Rpb24oKXthYm9ydChcIidBTExPQ19EWU5BTUlDJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9fSk7aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiQUxMT0NfTk9ORVwiKSlPYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kdWxlLFwiQUxMT0NfTk9ORVwiLHtnZXQ6ZnVuY3Rpb24oKXthYm9ydChcIidBTExPQ19OT05FJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSlcIil9fSk7aWYoIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTW9kdWxlLFwiY2FsbGVkUnVuXCIpKU9iamVjdC5kZWZpbmVQcm9wZXJ0eShNb2R1bGUsXCJjYWxsZWRSdW5cIix7Z2V0OmZ1bmN0aW9uKCl7YWJvcnQoXCInY2FsbGVkUnVuJyB3YXMgbm90IGV4cG9ydGVkLiBhZGQgaXQgdG8gRVhUUkFfRVhQT1JURURfUlVOVElNRV9NRVRIT0RTIChzZWUgdGhlIEZBUSkuIEFsdGVybmF0aXZlbHksIGZvcmNpbmcgZmlsZXN5c3RlbSBzdXBwb3J0ICgtcyBGT1JDRV9GSUxFU1lTVEVNPTEpIGNhbiBleHBvcnQgdGhpcyBmb3IgeW91XCIpfX0pO3ZhciBjYWxsZWRSdW47ZnVuY3Rpb24gRXhpdFN0YXR1cyhzdGF0dXMpe3RoaXMubmFtZT1cIkV4aXRTdGF0dXNcIjt0aGlzLm1lc3NhZ2U9XCJQcm9ncmFtIHRlcm1pbmF0ZWQgd2l0aCBleGl0KFwiK3N0YXR1cytcIilcIjt0aGlzLnN0YXR1cz1zdGF0dXN9ZGVwZW5kZW5jaWVzRnVsZmlsbGVkPWZ1bmN0aW9uIHJ1bkNhbGxlcigpe2lmKCFjYWxsZWRSdW4pcnVuKCk7aWYoIWNhbGxlZFJ1bilkZXBlbmRlbmNpZXNGdWxmaWxsZWQ9cnVuQ2FsbGVyfTtmdW5jdGlvbiBydW4oYXJncyl7YXJncz1hcmdzfHxhcmd1bWVudHNfO2lmKHJ1bkRlcGVuZGVuY2llcz4wKXtyZXR1cm59d3JpdGVTdGFja0Nvb2tpZSgpO3ByZVJ1bigpO2lmKHJ1bkRlcGVuZGVuY2llcz4wKXJldHVybjtmdW5jdGlvbiBkb1J1bigpe2lmKGNhbGxlZFJ1bilyZXR1cm47Y2FsbGVkUnVuPXRydWU7aWYoQUJPUlQpcmV0dXJuO2luaXRSdW50aW1lKCk7cHJlTWFpbigpO2lmKE1vZHVsZVtcIm9uUnVudGltZUluaXRpYWxpemVkXCJdKU1vZHVsZVtcIm9uUnVudGltZUluaXRpYWxpemVkXCJdKCk7YXNzZXJ0KCFNb2R1bGVbXCJfbWFpblwiXSwnY29tcGlsZWQgd2l0aG91dCBhIG1haW4sIGJ1dCBvbmUgaXMgcHJlc2VudC4gaWYgeW91IGFkZGVkIGl0IGZyb20gSlMsIHVzZSBNb2R1bGVbXCJvblJ1bnRpbWVJbml0aWFsaXplZFwiXScpO3Bvc3RSdW4oKX1pZihNb2R1bGVbXCJzZXRTdGF0dXNcIl0pe01vZHVsZVtcInNldFN0YXR1c1wiXShcIlJ1bm5pbmcuLi5cIik7c2V0VGltZW91dChmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtNb2R1bGVbXCJzZXRTdGF0dXNcIl0oXCJcIil9LDEpO2RvUnVuKCl9LDEpfWVsc2V7ZG9SdW4oKX1jaGVja1N0YWNrQ29va2llKCl9TW9kdWxlW1wicnVuXCJdPXJ1bjt2YXIgYWJvcnREZWNvcmF0b3JzPVtdO2Z1bmN0aW9uIGFib3J0KHdoYXQpe2lmKE1vZHVsZVtcIm9uQWJvcnRcIl0pe01vZHVsZVtcIm9uQWJvcnRcIl0od2hhdCl9d2hhdCs9XCJcIjtvdXQod2hhdCk7ZXJyKHdoYXQpO0FCT1JUPXRydWU7RVhJVFNUQVRVUz0xO3ZhciBleHRyYT1cIlwiO3ZhciBvdXRwdXQ9XCJhYm9ydChcIit3aGF0K1wiKSBhdCBcIitzdGFja1RyYWNlKCkrZXh0cmE7aWYoYWJvcnREZWNvcmF0b3JzKXthYm9ydERlY29yYXRvcnMuZm9yRWFjaChmdW5jdGlvbihkZWNvcmF0b3Ipe291dHB1dD1kZWNvcmF0b3Iob3V0cHV0LHdoYXQpfSl9dGhyb3cgb3V0cHV0fU1vZHVsZVtcImFib3J0XCJdPWFib3J0O2lmKE1vZHVsZVtcInByZUluaXRcIl0pe2lmKHR5cGVvZiBNb2R1bGVbXCJwcmVJbml0XCJdPT1cImZ1bmN0aW9uXCIpTW9kdWxlW1wicHJlSW5pdFwiXT1bTW9kdWxlW1wicHJlSW5pdFwiXV07d2hpbGUoTW9kdWxlW1wicHJlSW5pdFwiXS5sZW5ndGg+MCl7TW9kdWxlW1wicHJlSW5pdFwiXS5wb3AoKSgpfX1Nb2R1bGVbXCJub0V4aXRSdW50aW1lXCJdPXRydWU7cnVuKCk7XHJcblxyXG5cclxuICAgICAgICAvLyBUaGUgc2hlbGwtcHJlLmpzIGFuZCBlbWNjLWdlbmVyYXRlZCBjb2RlIGdvZXMgYWJvdmVcclxuICAgICAgICByZXR1cm4gTW9kdWxlO1xyXG4gICAgfSk7IC8vIFRoZSBlbmQgb2YgdGhlIHByb21pc2UgYmVpbmcgcmV0dXJuZWRcclxuXHJcbiAgcmV0dXJuIGluaXRPR0RGUHJvbWlzZTtcclxufSAvLyBUaGUgZW5kIG9mIG91ciBpbml0T0dERiBmdW5jdGlvblxyXG5cclxuLy8gVGhpcyBiaXQgYmVsb3cgaXMgY29waWVkIGFsbW9zdCBleGFjdGx5IGZyb20gd2hhdCB5b3UgZ2V0IHdoZW4geW91IHVzZSB0aGUgTU9EVUxBUklaRT0xIGZsYWcgd2l0aCBlbWNjXHJcbi8vIEhvd2V2ZXIsIHdlIGRvbid0IHdhbnQgdG8gdXNlIHRoZSBlbWNjIG1vZHVsYXJpemF0aW9uLiBTZWUgc2hlbGwtcHJlLmpzXHJcbmlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpe1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBpbml0T0dERjtcclxuICAgIC8vIFRoaXMgd2lsbCBhbGxvdyB0aGUgbW9kdWxlIHRvIGJlIHVzZWQgaW4gRVM2IG9yIENvbW1vbkpTXHJcbiAgICBtb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gaW5pdE9HREY7XHJcbn1cclxuZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmVbJ2FtZCddKSB7XHJcbiAgICBkZWZpbmUoW10sIGZ1bmN0aW9uKCkgeyByZXR1cm4gaW5pdE9HREY7IH0pO1xyXG59XHJcbmVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jyl7XHJcbiAgICBleHBvcnRzW1wiTW9kdWxlXCJdID0gaW5pdE9HREY7XHJcbn1cclxuICAgIFxyXG4iLCIvKiAoaWdub3JlZCkgKi8iLCIvKiAoaWdub3JlZCkgKi8iLCIvKiAoaWdub3JlZCkgKi8iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0bG9hZGVkOiBmYWxzZSxcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG5cdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gbW9kdWxlWydkZWZhdWx0J10gOlxuXHRcdCgpID0+IG1vZHVsZTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5ubWQgPSAobW9kdWxlKSA9PiB7XG5cdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdHJldHVybiBtb2R1bGU7XG59OyIsIi8vIG1vZHVsZSBleHBvcnRzIG11c3QgYmUgcmV0dXJuZWQgZnJvbSBydW50aW1lIHNvIGVudHJ5IGlubGluaW5nIGlzIGRpc2FibGVkXG4vLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbnJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKFwiLi9pbmRleC5qc1wiKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=